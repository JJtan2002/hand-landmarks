ARM GAS  /tmp/ccwTPwve.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 6
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"ll_aton_util.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c"
  25              		.section	.text.LL_ATON_getbits,"ax",%progbits
  26              		.align	1
  27              		.global	LL_ATON_getbits
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	LL_ATON_getbits:
  33              	.LFB3:
   1:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** /**
   2:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  ******************************************************************************
   3:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @file    ll_aton_util.c
   4:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @author  SRA Artificial Intelligence & Embedded Architectures
   5:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @brief   ATON LL utility functions
   6:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  ******************************************************************************
   7:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @attention
   8:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  *
   9:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * All rights reserved.
  11:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  *
  12:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * in the root directory of this software component.
  14:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  *
  16:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  ******************************************************************************
  17:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  */
  18:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** 
  19:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** #include <stddef.h>
  20:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** #include <stdint.h>
  21:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** #include <stdio.h>
  22:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** 
  23:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** #include "ll_aton_util.h"
  24:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** 
  25:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** /**
ARM GAS  /tmp/ccwTPwve.s 			page 2


  26:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @brief  Helper function. Extracts bitfield from a buffer
  27:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @param  bits Pointer of the buffer to extract bits from
  28:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @param  pos Global bit position of the bitfield to extract
  29:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @param  nbits Number of bits to extract
  30:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @retval extracted bitfield
  31:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  */
  32:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** uint32_t LL_ATON_getbits(uint32_t *bits, unsigned int pos, int nbits)
  33:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** {
  34              		.loc 1 33 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 48
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38              		@ link register save eliminated.
  39 0000 2DE9B00F 		push	{r4, r5, r7, r8, r9, r10, fp}
  40              		.cfi_def_cfa_offset 28
  41              		.cfi_offset 4, -28
  42              		.cfi_offset 5, -24
  43              		.cfi_offset 7, -20
  44              		.cfi_offset 8, -16
  45              		.cfi_offset 9, -12
  46              		.cfi_offset 10, -8
  47              		.cfi_offset 11, -4
  48 0004 8DB0     		sub	sp, sp, #52
  49              		.cfi_def_cfa_offset 80
  50 0006 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  52 0008 F860     		str	r0, [r7, #12]
  53 000a B960     		str	r1, [r7, #8]
  54 000c 7A60     		str	r2, [r7, #4]
  34:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   unsigned int mask = (1ULL << nbits) - 1;
  55              		.loc 1 34 29
  56 000e 4FF00102 		mov	r2, #1
  57 0012 4FF00003 		mov	r3, #0
  58 0016 7968     		ldr	r1, [r7, #4]
  59 0018 52EA0D13 		lsll	r2, r3, r1
  60              		.loc 1 34 39
  61 001c 1346     		mov	r3, r2
  62              		.loc 1 34 16
  63 001e 013B     		subs	r3, r3, #1
  64 0020 BB62     		str	r3, [r7, #40]
  35:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   uint32_t value;
  36:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   const int bitsperint = (sizeof(unsigned) * 8);
  65              		.loc 1 36 13
  66 0022 2023     		movs	r3, #32
  67 0024 7B62     		str	r3, [r7, #36]
  37:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   int index0 = pos / bitsperint;
  68              		.loc 1 37 20
  69 0026 7B6A     		ldr	r3, [r7, #36]
  70 0028 BA68     		ldr	r2, [r7, #8]
  71 002a B2FBF3F3 		udiv	r3, r2, r3
  72              		.loc 1 37 7
  73 002e 3B62     		str	r3, [r7, #32]
  38:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   int index1 = (pos + nbits) / bitsperint;
  74              		.loc 1 38 21
  75 0030 7A68     		ldr	r2, [r7, #4]
  76 0032 BB68     		ldr	r3, [r7, #8]
  77 0034 1A44     		add	r2, r2, r3
ARM GAS  /tmp/ccwTPwve.s 			page 3


  78              		.loc 1 38 30
  79 0036 7B6A     		ldr	r3, [r7, #36]
  80 0038 B2FBF3F3 		udiv	r3, r2, r3
  81              		.loc 1 38 7
  82 003c FB61     		str	r3, [r7, #28]
  39:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   // Do the bits to extract cross a boundary?
  40:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   if (index0 == index1)
  83              		.loc 1 40 6
  84 003e 3A6A     		ldr	r2, [r7, #32]
  85 0040 FB69     		ldr	r3, [r7, #28]
  86 0042 9A42     		cmp	r2, r3
  87 0044 11D1     		bne	.L2
  41:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   {
  42:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     value = (bits[index0] >> (pos % bitsperint)) & mask;
  88              		.loc 1 42 18
  89 0046 3B6A     		ldr	r3, [r7, #32]
  90 0048 9B00     		lsls	r3, r3, #2
  91 004a FA68     		ldr	r2, [r7, #12]
  92 004c 1344     		add	r3, r3, r2
  93 004e 1968     		ldr	r1, [r3]
  94              		.loc 1 42 35
  95 0050 7A6A     		ldr	r2, [r7, #36]
  96 0052 BB68     		ldr	r3, [r7, #8]
  97 0054 B3FBF2F0 		udiv	r0, r3, r2
  98 0058 00FB02F2 		mul	r2, r0, r2
  99 005c 9B1A     		subs	r3, r3, r2
 100              		.loc 1 42 27
 101 005e 21FA03F3 		lsr	r3, r1, r3
 102              		.loc 1 42 11
 103 0062 BA6A     		ldr	r2, [r7, #40]
 104 0064 1340     		ands	r3, r3, r2
 105 0066 FB62     		str	r3, [r7, #44]
 106 0068 39E0     		b	.L3
 107              	.L2:
 108              	.LBB2:
  43:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   }
  44:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   else
  45:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   {
  46:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     unsigned int lshift = ((pos + nbits) % bitsperint);
 109              		.loc 1 46 33
 110 006a 7A68     		ldr	r2, [r7, #4]
 111 006c BB68     		ldr	r3, [r7, #8]
 112 006e 1344     		add	r3, r3, r2
 113              		.loc 1 46 42
 114 0070 7A6A     		ldr	r2, [r7, #36]
 115              		.loc 1 46 18
 116 0072 B3FBF2F1 		udiv	r1, r3, r2
 117 0076 01FB02F2 		mul	r2, r1, r2
 118 007a 9B1A     		subs	r3, r3, r2
 119 007c BB61     		str	r3, [r7, #24]
  47:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     value =
  48:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****         (((bits[index0] >> (pos % bitsperint)) & mask) | ((bits[index1] & ((1ULL << lshift) - 1)) <
 120              		.loc 1 48 16
 121 007e 3B6A     		ldr	r3, [r7, #32]
 122 0080 9B00     		lsls	r3, r3, #2
 123 0082 FA68     		ldr	r2, [r7, #12]
 124 0084 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccwTPwve.s 			page 4


 125 0086 1968     		ldr	r1, [r3]
 126              		.loc 1 48 33
 127 0088 7A6A     		ldr	r2, [r7, #36]
 128 008a BB68     		ldr	r3, [r7, #8]
 129 008c B3FBF2F0 		udiv	r0, r3, r2
 130 0090 00FB02F2 		mul	r2, r0, r2
 131 0094 9B1A     		subs	r3, r3, r2
 132              		.loc 1 48 25
 133 0096 21FA03F2 		lsr	r2, r1, r3
 134              		.loc 1 48 48
 135 009a BB6A     		ldr	r3, [r7, #40]
 136 009c 02EA0301 		and	r1, r2, r3
 137              		.loc 1 48 64
 138 00a0 FB69     		ldr	r3, [r7, #28]
 139 00a2 9B00     		lsls	r3, r3, #2
 140 00a4 FA68     		ldr	r2, [r7, #12]
 141 00a6 1344     		add	r3, r3, r2
 142 00a8 1B68     		ldr	r3, [r3]
 143 00aa 0022     		movs	r2, #0
 144 00ac 9846     		mov	r8, r3
 145 00ae 9146     		mov	r9, r2
 146              		.loc 1 48 73
 147 00b0 4FF0FF32 		mov	r2, #-1
 148 00b4 4FF0FF33 		mov	r3, #-1
 149 00b8 B869     		ldr	r0, [r7, #24]
 150 00ba 52EA0D03 		lsll	r2, r3, r0
 151 00be D443     		mvns	r4, r2
 152 00c0 DD43     		mvns	r5, r3
 153 00c2 08EA040A 		and	r10, r8, r4
 154 00c6 09EA050B 		and	fp, r9, r5
 155              		.loc 1 48 109
 156 00ca 7A68     		ldr	r2, [r7, #4]
 157 00cc BB69     		ldr	r3, [r7, #24]
 158 00ce D01A     		subs	r0, r2, r3
 159              		.loc 1 48 99
 160 00d0 5246     		mov	r2, r10
 161 00d2 5B46     		mov	r3, fp
 162 00d4 52EA0D03 		lsll	r2, r3, r0
 163              		.loc 1 48 56
 164 00d8 1346     		mov	r3, r2
  47:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     value =
 165              		.loc 1 47 11
 166 00da 0B43     		orrs	r3, r3, r1
 167 00dc FB62     		str	r3, [r7, #44]
 168              	.L3:
 169              	.LBE2:
  49:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   }
  50:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** 
  51:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   // handle sign extension (not sure if this must be done in every use case)
  52:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   if (nbits > 0)
 170              		.loc 1 52 6
 171 00de 7B68     		ldr	r3, [r7, #4]
 172 00e0 002B     		cmp	r3, #0
 173 00e2 0FDD     		ble	.L4
 174              	.LBB3:
  53:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   {
  54:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     unsigned int signed_mask = (1UL << (nbits - 1));
ARM GAS  /tmp/ccwTPwve.s 			page 5


 175              		.loc 1 54 47
 176 00e4 7B68     		ldr	r3, [r7, #4]
 177 00e6 013B     		subs	r3, r3, #1
 178              		.loc 1 54 18
 179 00e8 0122     		movs	r2, #1
 180 00ea 02FA03F3 		lsl	r3, r2, r3
 181 00ee 7B61     		str	r3, [r7, #20]
  55:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     if (value & signed_mask)
 182              		.loc 1 55 15
 183 00f0 FA6A     		ldr	r2, [r7, #44]
 184 00f2 7B69     		ldr	r3, [r7, #20]
 185 00f4 1340     		ands	r3, r3, r2
 186              		.loc 1 55 8
 187 00f6 002B     		cmp	r3, #0
 188 00f8 04D0     		beq	.L4
  56:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     {
  57:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****       value = value | ~mask;
 189              		.loc 1 57 23
 190 00fa BB6A     		ldr	r3, [r7, #40]
 191 00fc DB43     		mvns	r3, r3
 192              		.loc 1 57 13
 193 00fe FA6A     		ldr	r2, [r7, #44]
 194 0100 1343     		orrs	r3, r3, r2
 195 0102 FB62     		str	r3, [r7, #44]
 196              	.L4:
 197              	.LBE3:
  58:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     }
  59:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   }
  60:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** 
  61:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   return value;
 198              		.loc 1 61 10
 199 0104 FB6A     		ldr	r3, [r7, #44]
  62:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** }
 200              		.loc 1 62 1
 201 0106 1846     		mov	r0, r3
 202 0108 3437     		adds	r7, r7, #52
 203              		.cfi_def_cfa_offset 28
 204 010a BD46     		mov	sp, r7
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 010c BDE8B00F 		pop	{r4, r5, r7, r8, r9, r10, fp}
 208              		.cfi_restore 11
 209              		.cfi_restore 10
 210              		.cfi_restore 9
 211              		.cfi_restore 8
 212              		.cfi_restore 7
 213              		.cfi_restore 5
 214              		.cfi_restore 4
 215              		.cfi_def_cfa_offset 0
 216 0110 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE3:
 220              		.section	.text.LL_ATON_setbits,"ax",%progbits
 221              		.align	1
 222              		.global	LL_ATON_setbits
 223              		.syntax unified
 224              		.thumb
ARM GAS  /tmp/ccwTPwve.s 			page 6


 225              		.thumb_func
 227              	LL_ATON_setbits:
 228              	.LFB4:
  63:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** 
  64:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** /**
  65:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @brief  Helper function. Packs bitfield into a buffer
  66:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @param  bits Pointer of the buffer to pack bits into
  67:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @param  pos Global position of the bitfield to pack
  68:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  * @retval nbits Number of bits to extract
  69:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****  */
  70:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** void LL_ATON_setbits(uint32_t *bits, unsigned int pos, int nbits, unsigned int val)
  71:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** {
 229              		.loc 1 71 1
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 48
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234 0000 B0B4     		push	{r4, r5, r7}
 235              		.cfi_def_cfa_offset 12
 236              		.cfi_offset 4, -12
 237              		.cfi_offset 5, -8
 238              		.cfi_offset 7, -4
 239 0002 8DB0     		sub	sp, sp, #52
 240              		.cfi_def_cfa_offset 64
 241 0004 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 243 0006 F860     		str	r0, [r7, #12]
 244 0008 B960     		str	r1, [r7, #8]
 245 000a 7A60     		str	r2, [r7, #4]
 246 000c 3B60     		str	r3, [r7]
  72:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   const int bitsperint = sizeof(unsigned int) * 8;
 247              		.loc 1 72 13
 248 000e 2023     		movs	r3, #32
 249 0010 FB62     		str	r3, [r7, #44]
  73:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   unsigned int smask = ((1ULL << nbits) - 1) << (pos % bitsperint);
 250              		.loc 1 73 31
 251 0012 4FF00102 		mov	r2, #1
 252 0016 4FF00003 		mov	r3, #0
 253 001a 7968     		ldr	r1, [r7, #4]
 254 001c 52EA0D13 		lsll	r2, r3, r1
 255              		.loc 1 73 41
 256 0020 541E     		subs	r4, r2, #1
 257 0022 43F1FF35 		adc	r5, r3, #-1
 258              		.loc 1 73 54
 259 0026 FA6A     		ldr	r2, [r7, #44]
 260 0028 BB68     		ldr	r3, [r7, #8]
 261 002a B3FBF2F1 		udiv	r1, r3, r2
 262 002e 01FB02F2 		mul	r2, r1, r2
 263 0032 991A     		subs	r1, r3, r2
 264              		.loc 1 73 46
 265 0034 2246     		mov	r2, r4
 266 0036 2B46     		mov	r3, r5
 267 0038 52EA0D13 		lsll	r2, r3, r1
 268              		.loc 1 73 16
 269 003c 1346     		mov	r3, r2
 270 003e BB62     		str	r3, [r7, #40]
  74:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   unsigned int mask = ((1ULL << nbits) - 1);
ARM GAS  /tmp/ccwTPwve.s 			page 7


 271              		.loc 1 74 30
 272 0040 4FF00102 		mov	r2, #1
 273 0044 4FF00003 		mov	r3, #0
 274 0048 7968     		ldr	r1, [r7, #4]
 275 004a 52EA0D13 		lsll	r2, r3, r1
 276              		.loc 1 74 40
 277 004e 1346     		mov	r3, r2
 278              		.loc 1 74 16
 279 0050 013B     		subs	r3, r3, #1
 280 0052 7B62     		str	r3, [r7, #36]
  75:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   int index0 = pos / bitsperint;
 281              		.loc 1 75 20
 282 0054 FB6A     		ldr	r3, [r7, #44]
 283 0056 BA68     		ldr	r2, [r7, #8]
 284 0058 B2FBF3F3 		udiv	r3, r2, r3
 285              		.loc 1 75 7
 286 005c 3B62     		str	r3, [r7, #32]
  76:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   int index1 = (pos + nbits - 1) / bitsperint;
 287              		.loc 1 76 21
 288 005e 7A68     		ldr	r2, [r7, #4]
 289 0060 BB68     		ldr	r3, [r7, #8]
 290 0062 1344     		add	r3, r3, r2
 291              		.loc 1 76 29
 292 0064 5A1E     		subs	r2, r3, #1
 293              		.loc 1 76 34
 294 0066 FB6A     		ldr	r3, [r7, #44]
 295 0068 B2FBF3F3 		udiv	r3, r2, r3
 296              		.loc 1 76 7
 297 006c FB61     		str	r3, [r7, #28]
  77:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   if (index0 == index1)
 298              		.loc 1 77 6
 299 006e 3A6A     		ldr	r2, [r7, #32]
 300 0070 FB69     		ldr	r3, [r7, #28]
 301 0072 9A42     		cmp	r2, r3
 302 0074 1ED1     		bne	.L7
 303              	.LBB4:
  78:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   {
  79:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     uint32_t tmp = (bits[index0] & ~smask) | ((val & mask) << (pos % bitsperint));
 304              		.loc 1 79 25
 305 0076 3B6A     		ldr	r3, [r7, #32]
 306 0078 9B00     		lsls	r3, r3, #2
 307 007a FA68     		ldr	r2, [r7, #12]
 308 007c 1344     		add	r3, r3, r2
 309 007e 1A68     		ldr	r2, [r3]
 310              		.loc 1 79 36
 311 0080 BB6A     		ldr	r3, [r7, #40]
 312 0082 DB43     		mvns	r3, r3
 313              		.loc 1 79 34
 314 0084 02EA0301 		and	r1, r2, r3
 315              		.loc 1 79 52
 316 0088 3A68     		ldr	r2, [r7]
 317 008a 7B6A     		ldr	r3, [r7, #36]
 318 008c 02EA0300 		and	r0, r2, r3
 319              		.loc 1 79 68
 320 0090 FA6A     		ldr	r2, [r7, #44]
 321 0092 BB68     		ldr	r3, [r7, #8]
 322 0094 B3FBF2F4 		udiv	r4, r3, r2
ARM GAS  /tmp/ccwTPwve.s 			page 8


 323 0098 04FB02F2 		mul	r2, r4, r2
 324 009c 9B1A     		subs	r3, r3, r2
 325              		.loc 1 79 60
 326 009e 00FA03F3 		lsl	r3, r0, r3
 327              		.loc 1 79 14
 328 00a2 0B43     		orrs	r3, r3, r1
 329 00a4 3B61     		str	r3, [r7, #16]
  80:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index0] = tmp;
 330              		.loc 1 80 9
 331 00a6 3B6A     		ldr	r3, [r7, #32]
 332 00a8 9B00     		lsls	r3, r3, #2
 333 00aa FA68     		ldr	r2, [r7, #12]
 334 00ac 1344     		add	r3, r3, r2
 335              		.loc 1 80 18
 336 00ae 3A69     		ldr	r2, [r7, #16]
 337 00b0 1A60     		str	r2, [r3]
 338              	.LBE4:
  81:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   }
  82:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   else
  83:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   {
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     unsigned int lshift = ((pos + nbits) % bitsperint);
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     uint32_t tmp = (bits[index0] & ~smask) | ((val & mask) << (pos % bitsperint));
  86:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index0] = tmp;
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     tmp = (bits[index1] & ((1ULL << lshift) - 1)) | ((val & mask) >> (nbits - lshift));
  88:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index1] = tmp;
  89:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   }
  90:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c **** }
 339              		.loc 1 90 1
 340 00b2 47E0     		b	.L9
 341              	.L7:
 342              	.LBB5:
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     uint32_t tmp = (bits[index0] & ~smask) | ((val & mask) << (pos % bitsperint));
 343              		.loc 1 84 33
 344 00b4 7A68     		ldr	r2, [r7, #4]
 345 00b6 BB68     		ldr	r3, [r7, #8]
 346 00b8 1344     		add	r3, r3, r2
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     uint32_t tmp = (bits[index0] & ~smask) | ((val & mask) << (pos % bitsperint));
 347              		.loc 1 84 42
 348 00ba FA6A     		ldr	r2, [r7, #44]
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     uint32_t tmp = (bits[index0] & ~smask) | ((val & mask) << (pos % bitsperint));
 349              		.loc 1 84 18
 350 00bc B3FBF2F1 		udiv	r1, r3, r2
 351 00c0 01FB02F2 		mul	r2, r1, r2
 352 00c4 9B1A     		subs	r3, r3, r2
 353 00c6 BB61     		str	r3, [r7, #24]
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index0] = tmp;
 354              		.loc 1 85 25
 355 00c8 3B6A     		ldr	r3, [r7, #32]
 356 00ca 9B00     		lsls	r3, r3, #2
 357 00cc FA68     		ldr	r2, [r7, #12]
 358 00ce 1344     		add	r3, r3, r2
 359 00d0 1A68     		ldr	r2, [r3]
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index0] = tmp;
 360              		.loc 1 85 36
 361 00d2 BB6A     		ldr	r3, [r7, #40]
 362 00d4 DB43     		mvns	r3, r3
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index0] = tmp;
ARM GAS  /tmp/ccwTPwve.s 			page 9


 363              		.loc 1 85 34
 364 00d6 02EA0301 		and	r1, r2, r3
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index0] = tmp;
 365              		.loc 1 85 52
 366 00da 3A68     		ldr	r2, [r7]
 367 00dc 7B6A     		ldr	r3, [r7, #36]
 368 00de 02EA0300 		and	r0, r2, r3
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index0] = tmp;
 369              		.loc 1 85 68
 370 00e2 FA6A     		ldr	r2, [r7, #44]
 371 00e4 BB68     		ldr	r3, [r7, #8]
 372 00e6 B3FBF2F4 		udiv	r4, r3, r2
 373 00ea 04FB02F2 		mul	r2, r4, r2
 374 00ee 9B1A     		subs	r3, r3, r2
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index0] = tmp;
 375              		.loc 1 85 60
 376 00f0 00FA03F3 		lsl	r3, r0, r3
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index0] = tmp;
 377              		.loc 1 85 14
 378 00f4 0B43     		orrs	r3, r3, r1
 379 00f6 7B61     		str	r3, [r7, #20]
  86:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     tmp = (bits[index1] & ((1ULL << lshift) - 1)) | ((val & mask) >> (nbits - lshift));
 380              		.loc 1 86 9
 381 00f8 3B6A     		ldr	r3, [r7, #32]
 382 00fa 9B00     		lsls	r3, r3, #2
 383 00fc FA68     		ldr	r2, [r7, #12]
 384 00fe 1344     		add	r3, r3, r2
  86:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     tmp = (bits[index1] & ((1ULL << lshift) - 1)) | ((val & mask) >> (nbits - lshift));
 385              		.loc 1 86 18
 386 0100 7A69     		ldr	r2, [r7, #20]
 387 0102 1A60     		str	r2, [r3]
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index1] = tmp;
 388              		.loc 1 87 16
 389 0104 FB69     		ldr	r3, [r7, #28]
 390 0106 9B00     		lsls	r3, r3, #2
 391 0108 FA68     		ldr	r2, [r7, #12]
 392 010a 1344     		add	r3, r3, r2
 393 010c 1968     		ldr	r1, [r3]
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index1] = tmp;
 394              		.loc 1 87 25
 395 010e 4FF0FF32 		mov	r2, #-1
 396 0112 4FF0FF33 		mov	r3, #-1
 397 0116 B869     		ldr	r0, [r7, #24]
 398 0118 52EA0D03 		lsll	r2, r3, r0
 399 011c 1346     		mov	r3, r2
 400 011e DB43     		mvns	r3, r3
 401 0120 01EA0302 		and	r2, r1, r3
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index1] = tmp;
 402              		.loc 1 87 59
 403 0124 3968     		ldr	r1, [r7]
 404 0126 7B6A     		ldr	r3, [r7, #36]
 405 0128 1940     		ands	r1, r1, r3
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index1] = tmp;
 406              		.loc 1 87 77
 407 012a 7868     		ldr	r0, [r7, #4]
 408 012c BB69     		ldr	r3, [r7, #24]
 409 012e C31A     		subs	r3, r0, r3
ARM GAS  /tmp/ccwTPwve.s 			page 10


  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index1] = tmp;
 410              		.loc 1 87 67
 411 0130 21FA03F3 		lsr	r3, r1, r3
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****     bits[index1] = tmp;
 412              		.loc 1 87 9
 413 0134 1343     		orrs	r3, r3, r2
 414 0136 7B61     		str	r3, [r7, #20]
  88:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   }
 415              		.loc 1 88 9
 416 0138 FB69     		ldr	r3, [r7, #28]
 417 013a 9B00     		lsls	r3, r3, #2
 418 013c FA68     		ldr	r2, [r7, #12]
 419 013e 1344     		add	r3, r3, r2
  88:Lib/AI_Runtime/Npu/ll_aton/ll_aton_util.c ****   }
 420              		.loc 1 88 18
 421 0140 7A69     		ldr	r2, [r7, #20]
 422 0142 1A60     		str	r2, [r3]
 423              	.L9:
 424              	.LBE5:
 425              		.loc 1 90 1
 426 0144 00BF     		nop
 427 0146 3437     		adds	r7, r7, #52
 428              		.cfi_def_cfa_offset 12
 429 0148 BD46     		mov	sp, r7
 430              		.cfi_def_cfa_register 13
 431              		@ sp needed
 432 014a B0BC     		pop	{r4, r5, r7}
 433              		.cfi_restore 7
 434              		.cfi_restore 5
 435              		.cfi_restore 4
 436              		.cfi_def_cfa_offset 0
 437 014c 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE4:
 441              		.text
 442              	.Letext0:
 443              		.file 2 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 444              		.file 3 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
ARM GAS  /tmp/ccwTPwve.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 ll_aton_util.c
     /tmp/ccwTPwve.s:26     .text.LL_ATON_getbits:00000000 $t
     /tmp/ccwTPwve.s:32     .text.LL_ATON_getbits:00000000 LL_ATON_getbits
     /tmp/ccwTPwve.s:221    .text.LL_ATON_setbits:00000000 $t
     /tmp/ccwTPwve.s:227    .text.LL_ATON_setbits:00000000 LL_ATON_setbits
                           .group:00000000 wm4.0.2a10773746a5c5ebb5552f50e466f80b
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.e0c9f337c65cb9f22ed5f23d082bc78b
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.newlib.h.7.591ac1bd65c1f5b34864757667a05252
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.stdio.h.67.0cf8a9c281ab0b348aef5c02e7e48825
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.ae5ea2b0ff9ea6e39e585807e35200d3
                           .group:00000000 wm4.ll_aton_util.h.34.9098eaa90d3d72b819973556e3e5fe44

NO UNDEFINED SYMBOLS
