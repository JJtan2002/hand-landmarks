ARM GAS  /tmp/ccMjAmt3.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 6
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"stm32n6xx_hal_uart.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c"
  25              		.global	UARTPrescTable
  26              		.section	.rodata.UARTPrescTable,"a"
  27              		.align	2
  30              	UARTPrescTable:
  31 0000 0100     		.short	1
  32 0002 0200     		.short	2
  33 0004 0400     		.short	4
  34 0006 0600     		.short	6
  35 0008 0800     		.short	8
  36 000a 0A00     		.short	10
  37 000c 0C00     		.short	12
  38 000e 1000     		.short	16
  39 0010 2000     		.short	32
  40 0012 4000     		.short	64
  41 0014 8000     		.short	128
  42 0016 0001     		.short	256
  43              		.section	.rodata
  44              		.align	2
  45              	.LC0:
  46 0000 53544D33 		.ascii	"STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/st"
  46      32437562 
  46      655F4657 
  46      5F4E362F 
  46      44726976 
  47 0033 6D33326E 		.ascii	"m32n6xx_hal_uart.c\000"
  47      3678785F 
  47      68616C5F 
  47      75617274 
  47      2E6300
  48              		.section	.text.HAL_UART_Init,"ax",%progbits
  49              		.align	1
  50              		.global	HAL_UART_Init
  51              		.syntax unified
ARM GAS  /tmp/ccMjAmt3.s 			page 2


  52              		.thumb
  53              		.thumb_func
  55              	HAL_UART_Init:
  56              	.LFB835:
   1:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
   2:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ******************************************************************************
   3:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @file    stm32n6xx_hal_uart.c
   4:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @author  MCD Application Team
   5:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           + IO operation functions
  10:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           + Peripheral Control functions
  11:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *
  12:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *
  13:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ******************************************************************************
  14:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @attention
  15:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *
  16:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * Copyright (c) 2023 STMicroelectronics.
  17:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * All rights reserved.
  18:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *
  19:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * in the root directory of this software component.
  21:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *
  23:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ******************************************************************************
  24:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   @verbatim
  25:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****  ===============================================================================
  26:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                         ##### How to use this driver #####
  27:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****  ===============================================================================
  28:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   [..]
  29:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  31:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  34:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) UART pins configuration:
  35:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  37:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) UART interrupts handling:
  42:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  43:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  44:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  45:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                 inside the transmit and receive processes.
  46:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  47:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  48:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  49:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  50:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  51:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  52:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  53:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
ARM GAS  /tmp/ccMjAmt3.s 			page 3


  54:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  55:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  56:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  57:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  58:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  59:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  60:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  61:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  62:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  63:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         the HAL_UART_Init() API.
  64:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  65:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  66:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  67:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  68:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  69:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  70:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  71:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  72:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  73:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  74:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  75:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  76:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  77:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
  78:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  79:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  80:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  81:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  82:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ##### Callback registration #####
  83:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ==================================
  84:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  85:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
  86:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  87:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  88:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
  89:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
  90:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  91:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  92:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  93:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  94:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  95:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  96:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  97:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  98:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  99:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 100:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 101:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 102:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 103:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 104:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 105:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 106:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     and a pointer to the user callback function.
 107:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 108:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
 109:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 110:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     weak function.
ARM GAS  /tmp/ccMjAmt3.s 			page 4


 111:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 112:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     and the Callback ID.
 113:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     This function allows to reset following callbacks:
 114:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 115:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 116:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 117:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 118:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 119:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 120:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 121:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 122:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 123:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 124:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 125:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 126:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 127:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 128:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
 129:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 130:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 131:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 132:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
 133:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 134:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     all callbacks are set to the corresponding weak functions:
 135:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 136:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 137:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     reset to the legacy weak functions in the HAL_UART_Init()
 138:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 139:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 140:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 141:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 142:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
 143:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 144:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 145:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 146:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 147:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 148:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 149:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     or HAL_UART_Init() function.
 150:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 151:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
 152:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 153:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     not defined, the callback registration feature is not available
 154:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     and weak callbacks are used.
 155:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 156:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 157:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   @endverbatim
 158:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ******************************************************************************
 159:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 160:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 161:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 162:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #include "stm32n6xx_hal.h"
 163:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 164:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @addtogroup STM32N6xx_HAL_Driver
 165:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
 166:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 167:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 5


 168:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @defgroup UART UART
 169:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief HAL UART module driver
 170:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
 171:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 172:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 173:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 174:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 175:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 176:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 177:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 178:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
 179:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 180:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 181:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                                       USART_CR1_OVER8 | USART_CR1_FIFOEN)) /*!< UART or USART CR1 f
 182:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 183:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT | USART_CR
 184:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                                       USART_CR3_RXFTCFG)) /*!< UART or USART CR3 fields of paramete
 185:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 186:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 187:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 188:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 189:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 190:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 191:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 192:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @}
 193:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 194:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 195:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 196:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 197:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 198:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
 199:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 200:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 201:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
 202:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 203:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 204:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 205:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 206:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 207:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 208:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 209:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 210:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 211:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 212:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 213:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
 214:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 215:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 216:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 217:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 218:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 219:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 220:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 221:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 222:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 223:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 224:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @}
ARM GAS  /tmp/ccMjAmt3.s 			page 6


 225:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 226:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 227:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 228:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @addtogroup UART_Private_variables
 229:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
 230:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 231:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 232:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 233:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @}
 234:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 235:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 236:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /* Exported Constants --------------------------------------------------------*/
 237:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 238:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 239:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 240:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
 241:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 242:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 243:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 244:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 245:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *
 246:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** @verbatim
 247:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** ===============================================================================
 248:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 249:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****  ===============================================================================
 250:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
 251:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 252:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     in asynchronous mode.
 253:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 254:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) Baud Rate
 255:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) Word Length
 256:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) Stop Bit
 257:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 258:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 259:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) Hardware flow control
 260:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) Receiver/transmitter modes
 261:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) Over Sampling Method
 262:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) One-Bit Sampling Method
 263:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 264:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 265:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) data logical level inversion
 266:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) RX and TX pins swap
 267:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) RX overrun detection disabling
 268:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) DMA disabling on RX error
 269:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) MSB first on communication line
 270:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) auto Baud rate detection
 271:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
 272:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 273:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 274:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 275:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     are available in reference manual).
 276:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 277:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** @endverbatim
 278:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 279:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 280:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 281:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   following table.
ARM GAS  /tmp/ccMjAmt3.s 			page 7


 282:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 283:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   Table 1. UART frame format.
 284:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 285:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 286:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 287:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 288:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 289:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 290:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 291:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 292:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 293:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 294:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 295:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 296:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 297:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 298:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 299:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 300:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
 301:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 302:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 303:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 304:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 305:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 306:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
 307:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
 308:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 309:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 310:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
  57              		.loc 1 310 1
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 8
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 82B0     		sub	sp, sp, #8
  66              		.cfi_def_cfa_offset 16
  67 0004 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  69 0006 7860     		str	r0, [r7, #4]
 311:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the UART handle allocation */
 312:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart == NULL)
  70              		.loc 1 312 6
  71 0008 7B68     		ldr	r3, [r7, #4]
  72 000a 002B     		cmp	r3, #0
  73 000c 01D1     		bne	.L2
 313:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 314:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
  74              		.loc 1 314 12
  75 000e 0123     		movs	r3, #1
  76 0010 6EE1     		b	.L3
  77              	.L2:
 315:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 316:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 317:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
ARM GAS  /tmp/ccMjAmt3.s 			page 8


  78              		.loc 1 317 18
  79 0012 7B68     		ldr	r3, [r7, #4]
  80 0014 9B69     		ldr	r3, [r3, #24]
  81              		.loc 1 317 6
  82 0016 002B     		cmp	r3, #0
  83 0018 00F08880 		beq	.L4
 318:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 319:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Check the parameters */
 320:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
  84              		.loc 1 320 5
  85 001c 7B68     		ldr	r3, [r7, #4]
  86 001e 1B68     		ldr	r3, [r3]
  87 0020 8F4A     		ldr	r2, .L9
  88 0022 9342     		cmp	r3, r2
  89 0024 00F0F580 		beq	.L5
  90              		.loc 1 320 5 is_stmt 0 discriminator 1
  91 0028 7B68     		ldr	r3, [r7, #4]
  92 002a 1B68     		ldr	r3, [r3]
  93 002c 8D4A     		ldr	r2, .L9+4
  94 002e 9342     		cmp	r3, r2
  95 0030 00F0EF80 		beq	.L5
  96              		.loc 1 320 5 discriminator 2
  97 0034 7B68     		ldr	r3, [r7, #4]
  98 0036 1B68     		ldr	r3, [r3]
  99 0038 8B4A     		ldr	r2, .L9+8
 100 003a 9342     		cmp	r3, r2
 101 003c 00F0E980 		beq	.L5
 102              		.loc 1 320 5 discriminator 3
 103 0040 7B68     		ldr	r3, [r7, #4]
 104 0042 1B68     		ldr	r3, [r3]
 105 0044 894A     		ldr	r2, .L9+12
 106 0046 9342     		cmp	r3, r2
 107 0048 00F0E380 		beq	.L5
 108              		.loc 1 320 5 discriminator 4
 109 004c 7B68     		ldr	r3, [r7, #4]
 110 004e 1B68     		ldr	r3, [r3]
 111 0050 874A     		ldr	r2, .L9+16
 112 0052 9342     		cmp	r3, r2
 113 0054 00F0DD80 		beq	.L5
 114              		.loc 1 320 5 discriminator 5
 115 0058 7B68     		ldr	r3, [r7, #4]
 116 005a 1B68     		ldr	r3, [r3]
 117 005c 854A     		ldr	r2, .L9+20
 118 005e 9342     		cmp	r3, r2
 119 0060 00F0D780 		beq	.L5
 120              		.loc 1 320 5 discriminator 6
 121 0064 7B68     		ldr	r3, [r7, #4]
 122 0066 1B68     		ldr	r3, [r3]
 123 0068 834A     		ldr	r2, .L9+24
 124 006a 9342     		cmp	r3, r2
 125 006c 00F0D180 		beq	.L5
 126              		.loc 1 320 5 discriminator 7
 127 0070 7B68     		ldr	r3, [r7, #4]
 128 0072 1B68     		ldr	r3, [r3]
 129 0074 814A     		ldr	r2, .L9+28
 130 0076 9342     		cmp	r3, r2
 131 0078 00F0CB80 		beq	.L5
ARM GAS  /tmp/ccMjAmt3.s 			page 9


 132              		.loc 1 320 5 discriminator 8
 133 007c 7B68     		ldr	r3, [r7, #4]
 134 007e 1B68     		ldr	r3, [r3]
 135 0080 B3F1502F 		cmp	r3, #1342197760
 136 0084 00F0C580 		beq	.L5
 137              		.loc 1 320 5 discriminator 9
 138 0088 7B68     		ldr	r3, [r7, #4]
 139 008a 1B68     		ldr	r3, [r3]
 140 008c 7C4A     		ldr	r2, .L9+32
 141 008e 9342     		cmp	r3, r2
 142 0090 00F0BF80 		beq	.L5
 143              		.loc 1 320 5 discriminator 10
 144 0094 7B68     		ldr	r3, [r7, #4]
 145 0096 1B68     		ldr	r3, [r3]
 146 0098 7A4A     		ldr	r2, .L9+36
 147 009a 9342     		cmp	r3, r2
 148 009c 00F0B980 		beq	.L5
 149              		.loc 1 320 5 discriminator 11
 150 00a0 7B68     		ldr	r3, [r7, #4]
 151 00a2 1B68     		ldr	r3, [r3]
 152 00a4 784A     		ldr	r2, .L9+40
 153 00a6 9342     		cmp	r3, r2
 154 00a8 00F0B380 		beq	.L5
 155              		.loc 1 320 5 discriminator 12
 156 00ac 7B68     		ldr	r3, [r7, #4]
 157 00ae 1B68     		ldr	r3, [r3]
 158 00b0 764A     		ldr	r2, .L9+44
 159 00b2 9342     		cmp	r3, r2
 160 00b4 00F0AD80 		beq	.L5
 161              		.loc 1 320 5 discriminator 13
 162 00b8 7B68     		ldr	r3, [r7, #4]
 163 00ba 1B68     		ldr	r3, [r3]
 164 00bc 744A     		ldr	r2, .L9+48
 165 00be 9342     		cmp	r3, r2
 166 00c0 00F0A780 		beq	.L5
 167              		.loc 1 320 5 discriminator 14
 168 00c4 7B68     		ldr	r3, [r7, #4]
 169 00c6 1B68     		ldr	r3, [r3]
 170 00c8 724A     		ldr	r2, .L9+52
 171 00ca 9342     		cmp	r3, r2
 172 00cc 00F0A180 		beq	.L5
 173              		.loc 1 320 5 discriminator 15
 174 00d0 7B68     		ldr	r3, [r7, #4]
 175 00d2 1B68     		ldr	r3, [r3]
 176 00d4 704A     		ldr	r2, .L9+56
 177 00d6 9342     		cmp	r3, r2
 178 00d8 00F09B80 		beq	.L5
 179              		.loc 1 320 5 discriminator 16
 180 00dc 7B68     		ldr	r3, [r7, #4]
 181 00de 1B68     		ldr	r3, [r3]
 182 00e0 6E4A     		ldr	r2, .L9+60
 183 00e2 9342     		cmp	r3, r2
 184 00e4 00F09580 		beq	.L5
 185              		.loc 1 320 5 discriminator 17
 186 00e8 7B68     		ldr	r3, [r7, #4]
 187 00ea 1B68     		ldr	r3, [r3]
 188 00ec 6C4A     		ldr	r2, .L9+64
ARM GAS  /tmp/ccMjAmt3.s 			page 10


 189 00ee 9342     		cmp	r3, r2
 190 00f0 00F08F80 		beq	.L5
 191              		.loc 1 320 5 discriminator 18
 192 00f4 7B68     		ldr	r3, [r7, #4]
 193 00f6 1B68     		ldr	r3, [r3]
 194 00f8 6A4A     		ldr	r2, .L9+68
 195 00fa 9342     		cmp	r3, r2
 196 00fc 00F08980 		beq	.L5
 197              		.loc 1 320 5 discriminator 19
 198 0100 7B68     		ldr	r3, [r7, #4]
 199 0102 1B68     		ldr	r3, [r3]
 200 0104 684A     		ldr	r2, .L9+72
 201 0106 9342     		cmp	r3, r2
 202 0108 00F08380 		beq	.L5
 203              		.loc 1 320 5 discriminator 20
 204 010c 7B68     		ldr	r3, [r7, #4]
 205 010e 1B68     		ldr	r3, [r3]
 206 0110 664A     		ldr	r2, .L9+76
 207 0112 9342     		cmp	r3, r2
 208 0114 7DD0     		beq	.L5
 209              		.loc 1 320 5 discriminator 21
 210 0116 7B68     		ldr	r3, [r7, #4]
 211 0118 1B68     		ldr	r3, [r3]
 212 011a 654A     		ldr	r2, .L9+80
 213 011c 9342     		cmp	r3, r2
 214 011e 78D0     		beq	.L5
 215              		.loc 1 320 5 discriminator 22
 216 0120 4FF4A071 		mov	r1, #320
 217 0124 6348     		ldr	r0, .L9+84
 218 0126 FFF7FEFF 		bl	assert_failed
 219 012a 72E0     		b	.L5
 220              	.L4:
 321:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 322:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
 323:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 324:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Check the parameters */
 325:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 221              		.loc 1 325 5 is_stmt 1
 222 012c 7B68     		ldr	r3, [r7, #4]
 223 012e 1B68     		ldr	r3, [r3]
 224 0130 4B4A     		ldr	r2, .L9
 225 0132 9342     		cmp	r3, r2
 226 0134 6DD0     		beq	.L5
 227              		.loc 1 325 5 is_stmt 0 discriminator 1
 228 0136 7B68     		ldr	r3, [r7, #4]
 229 0138 1B68     		ldr	r3, [r3]
 230 013a 4A4A     		ldr	r2, .L9+4
 231 013c 9342     		cmp	r3, r2
 232 013e 68D0     		beq	.L5
 233              		.loc 1 325 5 discriminator 2
 234 0140 7B68     		ldr	r3, [r7, #4]
 235 0142 1B68     		ldr	r3, [r3]
 236 0144 484A     		ldr	r2, .L9+8
 237 0146 9342     		cmp	r3, r2
 238 0148 63D0     		beq	.L5
 239              		.loc 1 325 5 discriminator 3
 240 014a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 11


 241 014c 1B68     		ldr	r3, [r3]
 242 014e 474A     		ldr	r2, .L9+12
 243 0150 9342     		cmp	r3, r2
 244 0152 5ED0     		beq	.L5
 245              		.loc 1 325 5 discriminator 4
 246 0154 7B68     		ldr	r3, [r7, #4]
 247 0156 1B68     		ldr	r3, [r3]
 248 0158 454A     		ldr	r2, .L9+16
 249 015a 9342     		cmp	r3, r2
 250 015c 59D0     		beq	.L5
 251              		.loc 1 325 5 discriminator 5
 252 015e 7B68     		ldr	r3, [r7, #4]
 253 0160 1B68     		ldr	r3, [r3]
 254 0162 444A     		ldr	r2, .L9+20
 255 0164 9342     		cmp	r3, r2
 256 0166 54D0     		beq	.L5
 257              		.loc 1 325 5 discriminator 6
 258 0168 7B68     		ldr	r3, [r7, #4]
 259 016a 1B68     		ldr	r3, [r3]
 260 016c 424A     		ldr	r2, .L9+24
 261 016e 9342     		cmp	r3, r2
 262 0170 4FD0     		beq	.L5
 263              		.loc 1 325 5 discriminator 7
 264 0172 7B68     		ldr	r3, [r7, #4]
 265 0174 1B68     		ldr	r3, [r3]
 266 0176 414A     		ldr	r2, .L9+28
 267 0178 9342     		cmp	r3, r2
 268 017a 4AD0     		beq	.L5
 269              		.loc 1 325 5 discriminator 8
 270 017c 7B68     		ldr	r3, [r7, #4]
 271 017e 1B68     		ldr	r3, [r3]
 272 0180 B3F1502F 		cmp	r3, #1342197760
 273 0184 45D0     		beq	.L5
 274              		.loc 1 325 5 discriminator 9
 275 0186 7B68     		ldr	r3, [r7, #4]
 276 0188 1B68     		ldr	r3, [r3]
 277 018a 3D4A     		ldr	r2, .L9+32
 278 018c 9342     		cmp	r3, r2
 279 018e 40D0     		beq	.L5
 280              		.loc 1 325 5 discriminator 10
 281 0190 7B68     		ldr	r3, [r7, #4]
 282 0192 1B68     		ldr	r3, [r3]
 283 0194 3B4A     		ldr	r2, .L9+36
 284 0196 9342     		cmp	r3, r2
 285 0198 3BD0     		beq	.L5
 286              		.loc 1 325 5 discriminator 11
 287 019a 7B68     		ldr	r3, [r7, #4]
 288 019c 1B68     		ldr	r3, [r3]
 289 019e 3A4A     		ldr	r2, .L9+40
 290 01a0 9342     		cmp	r3, r2
 291 01a2 36D0     		beq	.L5
 292              		.loc 1 325 5 discriminator 12
 293 01a4 7B68     		ldr	r3, [r7, #4]
 294 01a6 1B68     		ldr	r3, [r3]
 295 01a8 384A     		ldr	r2, .L9+44
 296 01aa 9342     		cmp	r3, r2
 297 01ac 31D0     		beq	.L5
ARM GAS  /tmp/ccMjAmt3.s 			page 12


 298              		.loc 1 325 5 discriminator 13
 299 01ae 7B68     		ldr	r3, [r7, #4]
 300 01b0 1B68     		ldr	r3, [r3]
 301 01b2 374A     		ldr	r2, .L9+48
 302 01b4 9342     		cmp	r3, r2
 303 01b6 2CD0     		beq	.L5
 304              		.loc 1 325 5 discriminator 14
 305 01b8 7B68     		ldr	r3, [r7, #4]
 306 01ba 1B68     		ldr	r3, [r3]
 307 01bc 354A     		ldr	r2, .L9+52
 308 01be 9342     		cmp	r3, r2
 309 01c0 27D0     		beq	.L5
 310              		.loc 1 325 5 discriminator 15
 311 01c2 7B68     		ldr	r3, [r7, #4]
 312 01c4 1B68     		ldr	r3, [r3]
 313 01c6 344A     		ldr	r2, .L9+56
 314 01c8 9342     		cmp	r3, r2
 315 01ca 22D0     		beq	.L5
 316              		.loc 1 325 5 discriminator 16
 317 01cc 7B68     		ldr	r3, [r7, #4]
 318 01ce 1B68     		ldr	r3, [r3]
 319 01d0 324A     		ldr	r2, .L9+60
 320 01d2 9342     		cmp	r3, r2
 321 01d4 1DD0     		beq	.L5
 322              		.loc 1 325 5 discriminator 17
 323 01d6 7B68     		ldr	r3, [r7, #4]
 324 01d8 1B68     		ldr	r3, [r3]
 325 01da 314A     		ldr	r2, .L9+64
 326 01dc 9342     		cmp	r3, r2
 327 01de 18D0     		beq	.L5
 328              		.loc 1 325 5 discriminator 18
 329 01e0 7B68     		ldr	r3, [r7, #4]
 330 01e2 1B68     		ldr	r3, [r3]
 331 01e4 2F4A     		ldr	r2, .L9+68
 332 01e6 9342     		cmp	r3, r2
 333 01e8 13D0     		beq	.L5
 334              		.loc 1 325 5 discriminator 19
 335 01ea 7B68     		ldr	r3, [r7, #4]
 336 01ec 1B68     		ldr	r3, [r3]
 337 01ee 2E4A     		ldr	r2, .L9+72
 338 01f0 9342     		cmp	r3, r2
 339 01f2 0ED0     		beq	.L5
 340              		.loc 1 325 5 discriminator 20
 341 01f4 7B68     		ldr	r3, [r7, #4]
 342 01f6 1B68     		ldr	r3, [r3]
 343 01f8 2C4A     		ldr	r2, .L9+76
 344 01fa 9342     		cmp	r3, r2
 345 01fc 09D0     		beq	.L5
 346              		.loc 1 325 5 discriminator 21
 347 01fe 7B68     		ldr	r3, [r7, #4]
 348 0200 1B68     		ldr	r3, [r3]
 349 0202 2B4A     		ldr	r2, .L9+80
 350 0204 9342     		cmp	r3, r2
 351 0206 04D0     		beq	.L5
 352              		.loc 1 325 5 discriminator 22
 353 0208 40F24511 		movw	r1, #325
 354 020c 2948     		ldr	r0, .L9+84
ARM GAS  /tmp/ccMjAmt3.s 			page 13


 355 020e FFF7FEFF 		bl	assert_failed
 356              	.L5:
 326:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 327:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 328:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 357              		.loc 1 328 12 is_stmt 1
 358 0212 7B68     		ldr	r3, [r7, #4]
 359 0214 D3F88830 		ldr	r3, [r3, #136]
 360              		.loc 1 328 6
 361 0218 002B     		cmp	r3, #0
 362 021a 06D1     		bne	.L6
 329:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 330:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 331:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 363              		.loc 1 331 17
 364 021c 7B68     		ldr	r3, [r7, #4]
 365 021e 0022     		movs	r2, #0
 366 0220 83F88420 		strb	r2, [r3, #132]
 332:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 333:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 334:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 335:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 336:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 337:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 338:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 339:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 340:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 341:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Init the low level hardware */
 342:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->MspInitCallback(huart);
 343:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
 344:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 345:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 367              		.loc 1 345 5
 368 0224 7868     		ldr	r0, [r7, #4]
 369 0226 FFF7FEFF 		bl	HAL_UART_MspInit
 370              	.L6:
 346:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 347:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 348:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 349:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 371              		.loc 1 349 17
 372 022a 7B68     		ldr	r3, [r7, #4]
 373 022c 2422     		movs	r2, #36
 374 022e C3F88820 		str	r2, [r3, #136]
 350:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 351:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 375              		.loc 1 351 3
 376 0232 7B68     		ldr	r3, [r7, #4]
 377 0234 1B68     		ldr	r3, [r3]
 378 0236 1A68     		ldr	r2, [r3]
 379 0238 7B68     		ldr	r3, [r7, #4]
 380 023a 1B68     		ldr	r3, [r3]
 381 023c 22F00102 		bic	r2, r2, #1
 382 0240 1A60     		str	r2, [r3]
 352:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 353:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Perform advanced settings configuration */
 354:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
ARM GAS  /tmp/ccMjAmt3.s 			page 14


 355:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 383              		.loc 1 355 26
 384 0242 7B68     		ldr	r3, [r7, #4]
 385 0244 9B6A     		ldr	r3, [r3, #40]
 386              		.loc 1 355 6
 387 0246 002B     		cmp	r3, #0
 388 0248 02D0     		beq	.L7
 356:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 357:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 389              		.loc 1 357 5
 390 024a 7868     		ldr	r0, [r7, #4]
 391 024c FFF7FEFF 		bl	UART_AdvFeatureConfig
 392              	.L7:
 358:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 359:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 360:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Set the UART Communication parameters */
 361:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 393              		.loc 1 361 7
 394 0250 7868     		ldr	r0, [r7, #4]
 395 0252 FFF7FEFF 		bl	UART_SetConfig
 396 0256 0346     		mov	r3, r0
 397              		.loc 1 361 6 discriminator 1
 398 0258 012B     		cmp	r3, #1
 399 025a 2DD1     		bne	.L8
 362:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 363:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 400              		.loc 1 363 12
 401 025c 0123     		movs	r3, #1
 402 025e 47E0     		b	.L3
 403              	.L10:
 404              		.align	2
 405              	.L9:
 406 0260 00100052 		.word	1375735808
 407 0264 00100042 		.word	1107300352
 408 0268 00440050 		.word	1342194688
 409 026c 00440040 		.word	1073759232
 410 0270 00480050 		.word	1342195712
 411 0274 00480040 		.word	1073760256
 412 0278 004C0050 		.word	1342196736
 413 027c 004C0040 		.word	1073761280
 414 0280 00500040 		.word	1073762304
 415 0284 00140052 		.word	1375736832
 416 0288 00140042 		.word	1107301376
 417 028c 00780050 		.word	1342208000
 418 0290 00780040 		.word	1073772544
 419 0294 007C0050 		.word	1342209024
 420 0298 007C0040 		.word	1073773568
 421 029c 00180052 		.word	1375737856
 422 02a0 00180042 		.word	1107302400
 423 02a4 001C0052 		.word	1375738880
 424 02a8 001C0042 		.word	1107303424
 425 02ac 000C0056 		.word	1442843648
 426 02b0 000C0046 		.word	1174408192
 427 02b4 00000000 		.word	.LC0
 428              	.L8:
 364:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 365:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 15


 366:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 367:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 368:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 369:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 429              		.loc 1 369 3
 430 02b8 7B68     		ldr	r3, [r7, #4]
 431 02ba 1B68     		ldr	r3, [r3]
 432 02bc 5A68     		ldr	r2, [r3, #4]
 433 02be 7B68     		ldr	r3, [r7, #4]
 434 02c0 1B68     		ldr	r3, [r3]
 435 02c2 22F49042 		bic	r2, r2, #18432
 436 02c6 5A60     		str	r2, [r3, #4]
 370:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 437              		.loc 1 370 3
 438 02c8 7B68     		ldr	r3, [r7, #4]
 439 02ca 1B68     		ldr	r3, [r3]
 440 02cc 9A68     		ldr	r2, [r3, #8]
 441 02ce 7B68     		ldr	r3, [r7, #4]
 442 02d0 1B68     		ldr	r3, [r3]
 443 02d2 22F02A02 		bic	r2, r2, #42
 444 02d6 9A60     		str	r2, [r3, #8]
 371:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 372:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 445              		.loc 1 372 3
 446 02d8 7B68     		ldr	r3, [r7, #4]
 447 02da 1B68     		ldr	r3, [r3]
 448 02dc 1A68     		ldr	r2, [r3]
 449 02de 7B68     		ldr	r3, [r7, #4]
 450 02e0 1B68     		ldr	r3, [r3]
 451 02e2 42F00102 		orr	r2, r2, #1
 452 02e6 1A60     		str	r2, [r3]
 373:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 374:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 375:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 453              		.loc 1 375 11
 454 02e8 7868     		ldr	r0, [r7, #4]
 455 02ea FFF7FEFF 		bl	UART_CheckIdleState
 456 02ee 0346     		mov	r3, r0
 457              	.L3:
 376:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 458              		.loc 1 376 1
 459 02f0 1846     		mov	r0, r3
 460 02f2 0837     		adds	r7, r7, #8
 461              		.cfi_def_cfa_offset 8
 462 02f4 BD46     		mov	sp, r7
 463              		.cfi_def_cfa_register 13
 464              		@ sp needed
 465 02f6 80BD     		pop	{r7, pc}
 466              		.cfi_endproc
 467              	.LFE835:
 469              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 470              		.align	1
 471              		.global	HAL_HalfDuplex_Init
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 476              	HAL_HalfDuplex_Init:
ARM GAS  /tmp/ccMjAmt3.s 			page 16


 477              	.LFB836:
 377:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 378:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 379:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 380:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 381:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
 382:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
 383:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 384:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 385:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 478              		.loc 1 385 1
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 8
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482 0000 80B5     		push	{r7, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 82B0     		sub	sp, sp, #8
 487              		.cfi_def_cfa_offset 16
 488 0004 00AF     		add	r7, sp, #0
 489              		.cfi_def_cfa_register 7
 490 0006 7860     		str	r0, [r7, #4]
 386:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the UART handle allocation */
 387:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart == NULL)
 491              		.loc 1 387 6
 492 0008 7B68     		ldr	r3, [r7, #4]
 493 000a 002B     		cmp	r3, #0
 494 000c 01D1     		bne	.L12
 388:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 389:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 495              		.loc 1 389 12
 496 000e 0123     		movs	r3, #1
 497 0010 BDE0     		b	.L13
 498              	.L12:
 390:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 391:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 392:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check UART instance */
 393:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 499              		.loc 1 393 3
 500 0012 7B68     		ldr	r3, [r7, #4]
 501 0014 1B68     		ldr	r3, [r3]
 502 0016 604A     		ldr	r2, .L18
 503 0018 9342     		cmp	r3, r2
 504 001a 6DD0     		beq	.L14
 505              		.loc 1 393 3 is_stmt 0 discriminator 1
 506 001c 7B68     		ldr	r3, [r7, #4]
 507 001e 1B68     		ldr	r3, [r3]
 508 0020 5E4A     		ldr	r2, .L18+4
 509 0022 9342     		cmp	r3, r2
 510 0024 68D0     		beq	.L14
 511              		.loc 1 393 3 discriminator 2
 512 0026 7B68     		ldr	r3, [r7, #4]
 513 0028 1B68     		ldr	r3, [r3]
 514 002a 5D4A     		ldr	r2, .L18+8
 515 002c 9342     		cmp	r3, r2
 516 002e 63D0     		beq	.L14
ARM GAS  /tmp/ccMjAmt3.s 			page 17


 517              		.loc 1 393 3 discriminator 3
 518 0030 7B68     		ldr	r3, [r7, #4]
 519 0032 1B68     		ldr	r3, [r3]
 520 0034 5B4A     		ldr	r2, .L18+12
 521 0036 9342     		cmp	r3, r2
 522 0038 5ED0     		beq	.L14
 523              		.loc 1 393 3 discriminator 4
 524 003a 7B68     		ldr	r3, [r7, #4]
 525 003c 1B68     		ldr	r3, [r3]
 526 003e 5A4A     		ldr	r2, .L18+16
 527 0040 9342     		cmp	r3, r2
 528 0042 59D0     		beq	.L14
 529              		.loc 1 393 3 discriminator 5
 530 0044 7B68     		ldr	r3, [r7, #4]
 531 0046 1B68     		ldr	r3, [r3]
 532 0048 584A     		ldr	r2, .L18+20
 533 004a 9342     		cmp	r3, r2
 534 004c 54D0     		beq	.L14
 535              		.loc 1 393 3 discriminator 6
 536 004e 7B68     		ldr	r3, [r7, #4]
 537 0050 1B68     		ldr	r3, [r3]
 538 0052 574A     		ldr	r2, .L18+24
 539 0054 9342     		cmp	r3, r2
 540 0056 4FD0     		beq	.L14
 541              		.loc 1 393 3 discriminator 7
 542 0058 7B68     		ldr	r3, [r7, #4]
 543 005a 1B68     		ldr	r3, [r3]
 544 005c 554A     		ldr	r2, .L18+28
 545 005e 9342     		cmp	r3, r2
 546 0060 4AD0     		beq	.L14
 547              		.loc 1 393 3 discriminator 8
 548 0062 7B68     		ldr	r3, [r7, #4]
 549 0064 1B68     		ldr	r3, [r3]
 550 0066 B3F1502F 		cmp	r3, #1342197760
 551 006a 45D0     		beq	.L14
 552              		.loc 1 393 3 discriminator 9
 553 006c 7B68     		ldr	r3, [r7, #4]
 554 006e 1B68     		ldr	r3, [r3]
 555 0070 514A     		ldr	r2, .L18+32
 556 0072 9342     		cmp	r3, r2
 557 0074 40D0     		beq	.L14
 558              		.loc 1 393 3 discriminator 10
 559 0076 7B68     		ldr	r3, [r7, #4]
 560 0078 1B68     		ldr	r3, [r3]
 561 007a 504A     		ldr	r2, .L18+36
 562 007c 9342     		cmp	r3, r2
 563 007e 3BD0     		beq	.L14
 564              		.loc 1 393 3 discriminator 11
 565 0080 7B68     		ldr	r3, [r7, #4]
 566 0082 1B68     		ldr	r3, [r3]
 567 0084 4E4A     		ldr	r2, .L18+40
 568 0086 9342     		cmp	r3, r2
 569 0088 36D0     		beq	.L14
 570              		.loc 1 393 3 discriminator 12
 571 008a 7B68     		ldr	r3, [r7, #4]
 572 008c 1B68     		ldr	r3, [r3]
 573 008e 4D4A     		ldr	r2, .L18+44
ARM GAS  /tmp/ccMjAmt3.s 			page 18


 574 0090 9342     		cmp	r3, r2
 575 0092 31D0     		beq	.L14
 576              		.loc 1 393 3 discriminator 13
 577 0094 7B68     		ldr	r3, [r7, #4]
 578 0096 1B68     		ldr	r3, [r3]
 579 0098 4B4A     		ldr	r2, .L18+48
 580 009a 9342     		cmp	r3, r2
 581 009c 2CD0     		beq	.L14
 582              		.loc 1 393 3 discriminator 14
 583 009e 7B68     		ldr	r3, [r7, #4]
 584 00a0 1B68     		ldr	r3, [r3]
 585 00a2 4A4A     		ldr	r2, .L18+52
 586 00a4 9342     		cmp	r3, r2
 587 00a6 27D0     		beq	.L14
 588              		.loc 1 393 3 discriminator 15
 589 00a8 7B68     		ldr	r3, [r7, #4]
 590 00aa 1B68     		ldr	r3, [r3]
 591 00ac 484A     		ldr	r2, .L18+56
 592 00ae 9342     		cmp	r3, r2
 593 00b0 22D0     		beq	.L14
 594              		.loc 1 393 3 discriminator 16
 595 00b2 7B68     		ldr	r3, [r7, #4]
 596 00b4 1B68     		ldr	r3, [r3]
 597 00b6 474A     		ldr	r2, .L18+60
 598 00b8 9342     		cmp	r3, r2
 599 00ba 1DD0     		beq	.L14
 600              		.loc 1 393 3 discriminator 17
 601 00bc 7B68     		ldr	r3, [r7, #4]
 602 00be 1B68     		ldr	r3, [r3]
 603 00c0 454A     		ldr	r2, .L18+64
 604 00c2 9342     		cmp	r3, r2
 605 00c4 18D0     		beq	.L14
 606              		.loc 1 393 3 discriminator 18
 607 00c6 7B68     		ldr	r3, [r7, #4]
 608 00c8 1B68     		ldr	r3, [r3]
 609 00ca 444A     		ldr	r2, .L18+68
 610 00cc 9342     		cmp	r3, r2
 611 00ce 13D0     		beq	.L14
 612              		.loc 1 393 3 discriminator 19
 613 00d0 7B68     		ldr	r3, [r7, #4]
 614 00d2 1B68     		ldr	r3, [r3]
 615 00d4 424A     		ldr	r2, .L18+72
 616 00d6 9342     		cmp	r3, r2
 617 00d8 0ED0     		beq	.L14
 618              		.loc 1 393 3 discriminator 20
 619 00da 7B68     		ldr	r3, [r7, #4]
 620 00dc 1B68     		ldr	r3, [r3]
 621 00de 414A     		ldr	r2, .L18+76
 622 00e0 9342     		cmp	r3, r2
 623 00e2 09D0     		beq	.L14
 624              		.loc 1 393 3 discriminator 21
 625 00e4 7B68     		ldr	r3, [r7, #4]
 626 00e6 1B68     		ldr	r3, [r3]
 627 00e8 3F4A     		ldr	r2, .L18+80
 628 00ea 9342     		cmp	r3, r2
 629 00ec 04D0     		beq	.L14
 630              		.loc 1 393 3 discriminator 22
ARM GAS  /tmp/ccMjAmt3.s 			page 19


 631 00ee 40F28911 		movw	r1, #393
 632 00f2 3E48     		ldr	r0, .L18+84
 633 00f4 FFF7FEFF 		bl	assert_failed
 634              	.L14:
 394:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 395:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 635              		.loc 1 395 12 is_stmt 1
 636 00f8 7B68     		ldr	r3, [r7, #4]
 637 00fa D3F88830 		ldr	r3, [r3, #136]
 638              		.loc 1 395 6
 639 00fe 002B     		cmp	r3, #0
 640 0100 06D1     		bne	.L15
 396:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 397:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 398:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 641              		.loc 1 398 17
 642 0102 7B68     		ldr	r3, [r7, #4]
 643 0104 0022     		movs	r2, #0
 644 0106 83F88420 		strb	r2, [r3, #132]
 399:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 400:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 401:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 402:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 403:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 404:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 405:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 406:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 407:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 408:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Init the low level hardware */
 409:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->MspInitCallback(huart);
 410:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
 411:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 412:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 645              		.loc 1 412 5
 646 010a 7868     		ldr	r0, [r7, #4]
 647 010c FFF7FEFF 		bl	HAL_UART_MspInit
 648              	.L15:
 413:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 414:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 415:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 416:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 649              		.loc 1 416 17
 650 0110 7B68     		ldr	r3, [r7, #4]
 651 0112 2422     		movs	r2, #36
 652 0114 C3F88820 		str	r2, [r3, #136]
 417:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 418:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 653              		.loc 1 418 3
 654 0118 7B68     		ldr	r3, [r7, #4]
 655 011a 1B68     		ldr	r3, [r3]
 656 011c 1A68     		ldr	r2, [r3]
 657 011e 7B68     		ldr	r3, [r7, #4]
 658 0120 1B68     		ldr	r3, [r3]
 659 0122 22F00102 		bic	r2, r2, #1
 660 0126 1A60     		str	r2, [r3]
 419:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 420:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Perform advanced settings configuration */
ARM GAS  /tmp/ccMjAmt3.s 			page 20


 421:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 422:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 661              		.loc 1 422 26
 662 0128 7B68     		ldr	r3, [r7, #4]
 663 012a 9B6A     		ldr	r3, [r3, #40]
 664              		.loc 1 422 6
 665 012c 002B     		cmp	r3, #0
 666 012e 02D0     		beq	.L16
 423:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 424:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 667              		.loc 1 424 5
 668 0130 7868     		ldr	r0, [r7, #4]
 669 0132 FFF7FEFF 		bl	UART_AdvFeatureConfig
 670              	.L16:
 425:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 426:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 427:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Set the UART Communication parameters */
 428:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 671              		.loc 1 428 7
 672 0136 7868     		ldr	r0, [r7, #4]
 673 0138 FFF7FEFF 		bl	UART_SetConfig
 674 013c 0346     		mov	r3, r0
 675              		.loc 1 428 6 discriminator 1
 676 013e 012B     		cmp	r3, #1
 677 0140 01D1     		bne	.L17
 429:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 430:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 678              		.loc 1 430 12
 679 0142 0123     		movs	r3, #1
 680 0144 23E0     		b	.L13
 681              	.L17:
 431:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 432:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 433:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 434:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 435:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 436:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 682              		.loc 1 436 3
 683 0146 7B68     		ldr	r3, [r7, #4]
 684 0148 1B68     		ldr	r3, [r3]
 685 014a 5A68     		ldr	r2, [r3, #4]
 686 014c 7B68     		ldr	r3, [r7, #4]
 687 014e 1B68     		ldr	r3, [r3]
 688 0150 22F49042 		bic	r2, r2, #18432
 689 0154 5A60     		str	r2, [r3, #4]
 437:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 690              		.loc 1 437 3
 691 0156 7B68     		ldr	r3, [r7, #4]
 692 0158 1B68     		ldr	r3, [r3]
 693 015a 9A68     		ldr	r2, [r3, #8]
 694 015c 7B68     		ldr	r3, [r7, #4]
 695 015e 1B68     		ldr	r3, [r3]
 696 0160 22F02202 		bic	r2, r2, #34
 697 0164 9A60     		str	r2, [r3, #8]
 438:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 439:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 440:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
ARM GAS  /tmp/ccMjAmt3.s 			page 21


 698              		.loc 1 440 3
 699 0166 7B68     		ldr	r3, [r7, #4]
 700 0168 1B68     		ldr	r3, [r3]
 701 016a 9A68     		ldr	r2, [r3, #8]
 702 016c 7B68     		ldr	r3, [r7, #4]
 703 016e 1B68     		ldr	r3, [r3]
 704 0170 42F00802 		orr	r2, r2, #8
 705 0174 9A60     		str	r2, [r3, #8]
 441:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 442:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 706              		.loc 1 442 3
 707 0176 7B68     		ldr	r3, [r7, #4]
 708 0178 1B68     		ldr	r3, [r3]
 709 017a 1A68     		ldr	r2, [r3]
 710 017c 7B68     		ldr	r3, [r7, #4]
 711 017e 1B68     		ldr	r3, [r3]
 712 0180 42F00102 		orr	r2, r2, #1
 713 0184 1A60     		str	r2, [r3]
 443:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 444:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 445:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 714              		.loc 1 445 11
 715 0186 7868     		ldr	r0, [r7, #4]
 716 0188 FFF7FEFF 		bl	UART_CheckIdleState
 717 018c 0346     		mov	r3, r0
 718              	.L13:
 446:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 719              		.loc 1 446 1
 720 018e 1846     		mov	r0, r3
 721 0190 0837     		adds	r7, r7, #8
 722              		.cfi_def_cfa_offset 8
 723 0192 BD46     		mov	sp, r7
 724              		.cfi_def_cfa_register 13
 725              		@ sp needed
 726 0194 80BD     		pop	{r7, pc}
 727              	.L19:
 728 0196 00BF     		.align	2
 729              	.L18:
 730 0198 00100052 		.word	1375735808
 731 019c 00100042 		.word	1107300352
 732 01a0 00440050 		.word	1342194688
 733 01a4 00440040 		.word	1073759232
 734 01a8 00480050 		.word	1342195712
 735 01ac 00480040 		.word	1073760256
 736 01b0 004C0050 		.word	1342196736
 737 01b4 004C0040 		.word	1073761280
 738 01b8 00500040 		.word	1073762304
 739 01bc 00140052 		.word	1375736832
 740 01c0 00140042 		.word	1107301376
 741 01c4 00780050 		.word	1342208000
 742 01c8 00780040 		.word	1073772544
 743 01cc 007C0050 		.word	1342209024
 744 01d0 007C0040 		.word	1073773568
 745 01d4 00180052 		.word	1375737856
 746 01d8 00180042 		.word	1107302400
 747 01dc 001C0052 		.word	1375738880
 748 01e0 001C0042 		.word	1107303424
ARM GAS  /tmp/ccMjAmt3.s 			page 22


 749 01e4 000C0056 		.word	1442843648
 750 01e8 000C0046 		.word	1174408192
 751 01ec 00000000 		.word	.LC0
 752              		.cfi_endproc
 753              	.LFE836:
 755              		.section	.text.HAL_LIN_Init,"ax",%progbits
 756              		.align	1
 757              		.global	HAL_LIN_Init
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 762              	HAL_LIN_Init:
 763              	.LFB837:
 447:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 448:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 449:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 450:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 451:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 452:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart             UART handle.
 453:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 454:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        This parameter can be one of the following values:
 455:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 456:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 457:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
 458:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 459:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 460:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 764              		.loc 1 460 1
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 8
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 80B5     		push	{r7, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 82B0     		sub	sp, sp, #8
 773              		.cfi_def_cfa_offset 16
 774 0004 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 776 0006 7860     		str	r0, [r7, #4]
 777 0008 3960     		str	r1, [r7]
 461:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the UART handle allocation */
 462:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart == NULL)
 778              		.loc 1 462 6
 779 000a 7B68     		ldr	r3, [r7, #4]
 780 000c 002B     		cmp	r3, #0
 781 000e 01D1     		bne	.L21
 463:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 464:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 782              		.loc 1 464 12
 783 0010 0123     		movs	r3, #1
 784 0012 D5E0     		b	.L22
 785              	.L21:
 465:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 466:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 467:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the LIN UART instance */
 468:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
ARM GAS  /tmp/ccMjAmt3.s 			page 23


 786              		.loc 1 468 3
 787 0014 7B68     		ldr	r3, [r7, #4]
 788 0016 1B68     		ldr	r3, [r3]
 789 0018 6B4A     		ldr	r2, .L30
 790 001a 9342     		cmp	r3, r2
 791 001c 63D0     		beq	.L23
 792              		.loc 1 468 3 is_stmt 0 discriminator 1
 793 001e 7B68     		ldr	r3, [r7, #4]
 794 0020 1B68     		ldr	r3, [r3]
 795 0022 6A4A     		ldr	r2, .L30+4
 796 0024 9342     		cmp	r3, r2
 797 0026 5ED0     		beq	.L23
 798              		.loc 1 468 3 discriminator 2
 799 0028 7B68     		ldr	r3, [r7, #4]
 800 002a 1B68     		ldr	r3, [r3]
 801 002c 684A     		ldr	r2, .L30+8
 802 002e 9342     		cmp	r3, r2
 803 0030 59D0     		beq	.L23
 804              		.loc 1 468 3 discriminator 3
 805 0032 7B68     		ldr	r3, [r7, #4]
 806 0034 1B68     		ldr	r3, [r3]
 807 0036 674A     		ldr	r2, .L30+12
 808 0038 9342     		cmp	r3, r2
 809 003a 54D0     		beq	.L23
 810              		.loc 1 468 3 discriminator 4
 811 003c 7B68     		ldr	r3, [r7, #4]
 812 003e 1B68     		ldr	r3, [r3]
 813 0040 654A     		ldr	r2, .L30+16
 814 0042 9342     		cmp	r3, r2
 815 0044 4FD0     		beq	.L23
 816              		.loc 1 468 3 discriminator 5
 817 0046 7B68     		ldr	r3, [r7, #4]
 818 0048 1B68     		ldr	r3, [r3]
 819 004a 644A     		ldr	r2, .L30+20
 820 004c 9342     		cmp	r3, r2
 821 004e 4AD0     		beq	.L23
 822              		.loc 1 468 3 discriminator 6
 823 0050 7B68     		ldr	r3, [r7, #4]
 824 0052 1B68     		ldr	r3, [r3]
 825 0054 624A     		ldr	r2, .L30+24
 826 0056 9342     		cmp	r3, r2
 827 0058 45D0     		beq	.L23
 828              		.loc 1 468 3 discriminator 7
 829 005a 7B68     		ldr	r3, [r7, #4]
 830 005c 1B68     		ldr	r3, [r3]
 831 005e 614A     		ldr	r2, .L30+28
 832 0060 9342     		cmp	r3, r2
 833 0062 40D0     		beq	.L23
 834              		.loc 1 468 3 discriminator 8
 835 0064 7B68     		ldr	r3, [r7, #4]
 836 0066 1B68     		ldr	r3, [r3]
 837 0068 B3F1502F 		cmp	r3, #1342197760
 838 006c 3BD0     		beq	.L23
 839              		.loc 1 468 3 discriminator 9
 840 006e 7B68     		ldr	r3, [r7, #4]
 841 0070 1B68     		ldr	r3, [r3]
 842 0072 5D4A     		ldr	r2, .L30+32
ARM GAS  /tmp/ccMjAmt3.s 			page 24


 843 0074 9342     		cmp	r3, r2
 844 0076 36D0     		beq	.L23
 845              		.loc 1 468 3 discriminator 10
 846 0078 7B68     		ldr	r3, [r7, #4]
 847 007a 1B68     		ldr	r3, [r3]
 848 007c 5B4A     		ldr	r2, .L30+36
 849 007e 9342     		cmp	r3, r2
 850 0080 31D0     		beq	.L23
 851              		.loc 1 468 3 discriminator 11
 852 0082 7B68     		ldr	r3, [r7, #4]
 853 0084 1B68     		ldr	r3, [r3]
 854 0086 5A4A     		ldr	r2, .L30+40
 855 0088 9342     		cmp	r3, r2
 856 008a 2CD0     		beq	.L23
 857              		.loc 1 468 3 discriminator 12
 858 008c 7B68     		ldr	r3, [r7, #4]
 859 008e 1B68     		ldr	r3, [r3]
 860 0090 584A     		ldr	r2, .L30+44
 861 0092 9342     		cmp	r3, r2
 862 0094 27D0     		beq	.L23
 863              		.loc 1 468 3 discriminator 13
 864 0096 7B68     		ldr	r3, [r7, #4]
 865 0098 1B68     		ldr	r3, [r3]
 866 009a 574A     		ldr	r2, .L30+48
 867 009c 9342     		cmp	r3, r2
 868 009e 22D0     		beq	.L23
 869              		.loc 1 468 3 discriminator 14
 870 00a0 7B68     		ldr	r3, [r7, #4]
 871 00a2 1B68     		ldr	r3, [r3]
 872 00a4 554A     		ldr	r2, .L30+52
 873 00a6 9342     		cmp	r3, r2
 874 00a8 1DD0     		beq	.L23
 875              		.loc 1 468 3 discriminator 15
 876 00aa 7B68     		ldr	r3, [r7, #4]
 877 00ac 1B68     		ldr	r3, [r3]
 878 00ae 544A     		ldr	r2, .L30+56
 879 00b0 9342     		cmp	r3, r2
 880 00b2 18D0     		beq	.L23
 881              		.loc 1 468 3 discriminator 16
 882 00b4 7B68     		ldr	r3, [r7, #4]
 883 00b6 1B68     		ldr	r3, [r3]
 884 00b8 524A     		ldr	r2, .L30+60
 885 00ba 9342     		cmp	r3, r2
 886 00bc 13D0     		beq	.L23
 887              		.loc 1 468 3 discriminator 17
 888 00be 7B68     		ldr	r3, [r7, #4]
 889 00c0 1B68     		ldr	r3, [r3]
 890 00c2 514A     		ldr	r2, .L30+64
 891 00c4 9342     		cmp	r3, r2
 892 00c6 0ED0     		beq	.L23
 893              		.loc 1 468 3 discriminator 18
 894 00c8 7B68     		ldr	r3, [r7, #4]
 895 00ca 1B68     		ldr	r3, [r3]
 896 00cc 4F4A     		ldr	r2, .L30+68
 897 00ce 9342     		cmp	r3, r2
 898 00d0 09D0     		beq	.L23
 899              		.loc 1 468 3 discriminator 19
ARM GAS  /tmp/ccMjAmt3.s 			page 25


 900 00d2 7B68     		ldr	r3, [r7, #4]
 901 00d4 1B68     		ldr	r3, [r3]
 902 00d6 4E4A     		ldr	r2, .L30+72
 903 00d8 9342     		cmp	r3, r2
 904 00da 04D0     		beq	.L23
 905              		.loc 1 468 3 discriminator 20
 906 00dc 4FF4EA71 		mov	r1, #468
 907 00e0 4C48     		ldr	r0, .L30+76
 908 00e2 FFF7FEFF 		bl	assert_failed
 909              	.L23:
 469:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the Break detection length parameter */
 470:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 910              		.loc 1 470 3 is_stmt 1
 911 00e6 3B68     		ldr	r3, [r7]
 912 00e8 002B     		cmp	r3, #0
 913 00ea 07D0     		beq	.L24
 914              		.loc 1 470 3 is_stmt 0 discriminator 1
 915 00ec 3B68     		ldr	r3, [r7]
 916 00ee 202B     		cmp	r3, #32
 917 00f0 04D0     		beq	.L24
 918              		.loc 1 470 3 discriminator 2
 919 00f2 4FF4EB71 		mov	r1, #470
 920 00f6 4748     		ldr	r0, .L30+76
 921 00f8 FFF7FEFF 		bl	assert_failed
 922              	.L24:
 471:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 472:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 473:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 923              		.loc 1 473 18 is_stmt 1
 924 00fc 7B68     		ldr	r3, [r7, #4]
 925 00fe DB69     		ldr	r3, [r3, #28]
 926              		.loc 1 473 6
 927 0100 B3F5004F 		cmp	r3, #32768
 928 0104 01D1     		bne	.L25
 474:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 475:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 929              		.loc 1 475 12
 930 0106 0123     		movs	r3, #1
 931 0108 5AE0     		b	.L22
 932              	.L25:
 476:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 477:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 478:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 933              		.loc 1 478 18
 934 010a 7B68     		ldr	r3, [r7, #4]
 935 010c 9B68     		ldr	r3, [r3, #8]
 936              		.loc 1 478 6
 937 010e 002B     		cmp	r3, #0
 938 0110 01D0     		beq	.L26
 479:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 480:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 939              		.loc 1 480 12
 940 0112 0123     		movs	r3, #1
 941 0114 54E0     		b	.L22
 942              	.L26:
 481:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 482:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 26


 483:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 943              		.loc 1 483 12
 944 0116 7B68     		ldr	r3, [r7, #4]
 945 0118 D3F88830 		ldr	r3, [r3, #136]
 946              		.loc 1 483 6
 947 011c 002B     		cmp	r3, #0
 948 011e 06D1     		bne	.L27
 484:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 485:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 486:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 949              		.loc 1 486 17
 950 0120 7B68     		ldr	r3, [r7, #4]
 951 0122 0022     		movs	r2, #0
 952 0124 83F88420 		strb	r2, [r3, #132]
 487:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 488:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 489:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 490:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 491:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 492:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 493:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 494:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 495:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 496:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Init the low level hardware */
 497:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->MspInitCallback(huart);
 498:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
 499:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 500:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 953              		.loc 1 500 5
 954 0128 7868     		ldr	r0, [r7, #4]
 955 012a FFF7FEFF 		bl	HAL_UART_MspInit
 956              	.L27:
 501:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 502:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 503:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 504:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 957              		.loc 1 504 17
 958 012e 7B68     		ldr	r3, [r7, #4]
 959 0130 2422     		movs	r2, #36
 960 0132 C3F88820 		str	r2, [r3, #136]
 505:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 506:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 961              		.loc 1 506 3
 962 0136 7B68     		ldr	r3, [r7, #4]
 963 0138 1B68     		ldr	r3, [r3]
 964 013a 1A68     		ldr	r2, [r3]
 965 013c 7B68     		ldr	r3, [r7, #4]
 966 013e 1B68     		ldr	r3, [r3]
 967 0140 22F00102 		bic	r2, r2, #1
 968 0144 1A60     		str	r2, [r3]
 507:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 508:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Perform advanced settings configuration */
 509:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 510:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 969              		.loc 1 510 26
 970 0146 7B68     		ldr	r3, [r7, #4]
 971 0148 9B6A     		ldr	r3, [r3, #40]
ARM GAS  /tmp/ccMjAmt3.s 			page 27


 972              		.loc 1 510 6
 973 014a 002B     		cmp	r3, #0
 974 014c 02D0     		beq	.L28
 511:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 512:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 975              		.loc 1 512 5
 976 014e 7868     		ldr	r0, [r7, #4]
 977 0150 FFF7FEFF 		bl	UART_AdvFeatureConfig
 978              	.L28:
 513:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 514:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 515:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Set the UART Communication parameters */
 516:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 979              		.loc 1 516 7
 980 0154 7868     		ldr	r0, [r7, #4]
 981 0156 FFF7FEFF 		bl	UART_SetConfig
 982 015a 0346     		mov	r3, r0
 983              		.loc 1 516 6 discriminator 1
 984 015c 012B     		cmp	r3, #1
 985 015e 01D1     		bne	.L29
 517:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 518:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 986              		.loc 1 518 12
 987 0160 0123     		movs	r3, #1
 988 0162 2DE0     		b	.L22
 989              	.L29:
 519:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 520:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 521:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 522:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 523:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 524:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 990              		.loc 1 524 3
 991 0164 7B68     		ldr	r3, [r7, #4]
 992 0166 1B68     		ldr	r3, [r3]
 993 0168 5A68     		ldr	r2, [r3, #4]
 994 016a 7B68     		ldr	r3, [r7, #4]
 995 016c 1B68     		ldr	r3, [r3]
 996 016e 22F40062 		bic	r2, r2, #2048
 997 0172 5A60     		str	r2, [r3, #4]
 525:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 998              		.loc 1 525 3
 999 0174 7B68     		ldr	r3, [r7, #4]
 1000 0176 1B68     		ldr	r3, [r3]
 1001 0178 9A68     		ldr	r2, [r3, #8]
 1002 017a 7B68     		ldr	r3, [r7, #4]
 1003 017c 1B68     		ldr	r3, [r3]
 1004 017e 22F02A02 		bic	r2, r2, #42
 1005 0182 9A60     		str	r2, [r3, #8]
 526:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 527:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 528:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 1006              		.loc 1 528 3
 1007 0184 7B68     		ldr	r3, [r7, #4]
 1008 0186 1B68     		ldr	r3, [r3]
 1009 0188 5A68     		ldr	r2, [r3, #4]
 1010 018a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 28


 1011 018c 1B68     		ldr	r3, [r3]
 1012 018e 42F48042 		orr	r2, r2, #16384
 1013 0192 5A60     		str	r2, [r3, #4]
 529:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 530:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 531:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 1014              		.loc 1 531 3
 1015 0194 7B68     		ldr	r3, [r7, #4]
 1016 0196 1B68     		ldr	r3, [r3]
 1017 0198 5B68     		ldr	r3, [r3, #4]
 1018 019a 23F02001 		bic	r1, r3, #32
 1019 019e 7B68     		ldr	r3, [r7, #4]
 1020 01a0 1B68     		ldr	r3, [r3]
 1021 01a2 3A68     		ldr	r2, [r7]
 1022 01a4 0A43     		orrs	r2, r2, r1
 1023 01a6 5A60     		str	r2, [r3, #4]
 532:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 533:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 1024              		.loc 1 533 3
 1025 01a8 7B68     		ldr	r3, [r7, #4]
 1026 01aa 1B68     		ldr	r3, [r3]
 1027 01ac 1A68     		ldr	r2, [r3]
 1028 01ae 7B68     		ldr	r3, [r7, #4]
 1029 01b0 1B68     		ldr	r3, [r3]
 1030 01b2 42F00102 		orr	r2, r2, #1
 1031 01b6 1A60     		str	r2, [r3]
 534:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 535:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 536:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 1032              		.loc 1 536 11
 1033 01b8 7868     		ldr	r0, [r7, #4]
 1034 01ba FFF7FEFF 		bl	UART_CheckIdleState
 1035 01be 0346     		mov	r3, r0
 1036              	.L22:
 537:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 1037              		.loc 1 537 1
 1038 01c0 1846     		mov	r0, r3
 1039 01c2 0837     		adds	r7, r7, #8
 1040              		.cfi_def_cfa_offset 8
 1041 01c4 BD46     		mov	sp, r7
 1042              		.cfi_def_cfa_register 13
 1043              		@ sp needed
 1044 01c6 80BD     		pop	{r7, pc}
 1045              	.L31:
 1046              		.align	2
 1047              	.L30:
 1048 01c8 00100052 		.word	1375735808
 1049 01cc 00100042 		.word	1107300352
 1050 01d0 00440050 		.word	1342194688
 1051 01d4 00440040 		.word	1073759232
 1052 01d8 00480050 		.word	1342195712
 1053 01dc 00480040 		.word	1073760256
 1054 01e0 004C0050 		.word	1342196736
 1055 01e4 004C0040 		.word	1073761280
 1056 01e8 00500040 		.word	1073762304
 1057 01ec 00140052 		.word	1375736832
 1058 01f0 00140042 		.word	1107301376
ARM GAS  /tmp/ccMjAmt3.s 			page 29


 1059 01f4 00780050 		.word	1342208000
 1060 01f8 00780040 		.word	1073772544
 1061 01fc 007C0050 		.word	1342209024
 1062 0200 007C0040 		.word	1073773568
 1063 0204 00180052 		.word	1375737856
 1064 0208 00180042 		.word	1107302400
 1065 020c 001C0052 		.word	1375738880
 1066 0210 001C0042 		.word	1107303424
 1067 0214 00000000 		.word	.LC0
 1068              		.cfi_endproc
 1069              	.LFE837:
 1071              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 1072              		.align	1
 1073              		.global	HAL_MultiProcessor_Init
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1078              	HAL_MultiProcessor_Init:
 1079              	.LFB838:
 538:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 539:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 540:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 541:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 542:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 543:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart        UART handle.
 544:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 545:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 546:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        This parameter can be one of the following values:
 547:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 548:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 549:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 550:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 551:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 552:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 553:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 554:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 555:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 556:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
 557:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 558:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 559:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 1080              		.loc 1 559 1
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 16
 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084 0000 80B5     		push	{r7, lr}
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 84B0     		sub	sp, sp, #16
 1089              		.cfi_def_cfa_offset 24
 1090 0004 00AF     		add	r7, sp, #0
 1091              		.cfi_def_cfa_register 7
 1092 0006 F860     		str	r0, [r7, #12]
 1093 0008 0B46     		mov	r3, r1
 1094 000a 7A60     		str	r2, [r7, #4]
 1095 000c FB72     		strb	r3, [r7, #11]
ARM GAS  /tmp/ccMjAmt3.s 			page 30


 560:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the UART handle allocation */
 561:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart == NULL)
 1096              		.loc 1 561 6
 1097 000e FB68     		ldr	r3, [r7, #12]
 1098 0010 002B     		cmp	r3, #0
 1099 0012 01D1     		bne	.L33
 562:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 563:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 1100              		.loc 1 563 12
 1101 0014 0123     		movs	r3, #1
 1102 0016 67E0     		b	.L34
 1103              	.L33:
 564:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 565:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 566:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the wake up method parameter */
 567:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 1104              		.loc 1 567 3
 1105 0018 7B68     		ldr	r3, [r7, #4]
 1106 001a 002B     		cmp	r3, #0
 1107 001c 08D0     		beq	.L35
 1108              		.loc 1 567 3 is_stmt 0 discriminator 1
 1109 001e 7B68     		ldr	r3, [r7, #4]
 1110 0020 B3F5006F 		cmp	r3, #2048
 1111 0024 04D0     		beq	.L35
 1112              		.loc 1 567 3 discriminator 2
 1113 0026 40F23721 		movw	r1, #567
 1114 002a 3148     		ldr	r0, .L40
 1115 002c FFF7FEFF 		bl	assert_failed
 1116              	.L35:
 568:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 569:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 1117              		.loc 1 569 12 is_stmt 1
 1118 0030 FB68     		ldr	r3, [r7, #12]
 1119 0032 D3F88830 		ldr	r3, [r3, #136]
 1120              		.loc 1 569 6
 1121 0036 002B     		cmp	r3, #0
 1122 0038 06D1     		bne	.L36
 570:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 571:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 572:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 1123              		.loc 1 572 17
 1124 003a FB68     		ldr	r3, [r7, #12]
 1125 003c 0022     		movs	r2, #0
 1126 003e 83F88420 		strb	r2, [r3, #132]
 573:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 574:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 575:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 576:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 577:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 578:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 579:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 580:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 581:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 582:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Init the low level hardware */
 583:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->MspInitCallback(huart);
 584:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
 585:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
ARM GAS  /tmp/ccMjAmt3.s 			page 31


 586:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 1127              		.loc 1 586 5
 1128 0042 F868     		ldr	r0, [r7, #12]
 1129 0044 FFF7FEFF 		bl	HAL_UART_MspInit
 1130              	.L36:
 587:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 588:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 589:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 590:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 1131              		.loc 1 590 17
 1132 0048 FB68     		ldr	r3, [r7, #12]
 1133 004a 2422     		movs	r2, #36
 1134 004c C3F88820 		str	r2, [r3, #136]
 591:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 592:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 1135              		.loc 1 592 3
 1136 0050 FB68     		ldr	r3, [r7, #12]
 1137 0052 1B68     		ldr	r3, [r3]
 1138 0054 1A68     		ldr	r2, [r3]
 1139 0056 FB68     		ldr	r3, [r7, #12]
 1140 0058 1B68     		ldr	r3, [r3]
 1141 005a 22F00102 		bic	r2, r2, #1
 1142 005e 1A60     		str	r2, [r3]
 593:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 594:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Perform advanced settings configuration */
 595:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 596:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 1143              		.loc 1 596 26
 1144 0060 FB68     		ldr	r3, [r7, #12]
 1145 0062 9B6A     		ldr	r3, [r3, #40]
 1146              		.loc 1 596 6
 1147 0064 002B     		cmp	r3, #0
 1148 0066 02D0     		beq	.L37
 597:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 598:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 1149              		.loc 1 598 5
 1150 0068 F868     		ldr	r0, [r7, #12]
 1151 006a FFF7FEFF 		bl	UART_AdvFeatureConfig
 1152              	.L37:
 599:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 600:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 601:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Set the UART Communication parameters */
 602:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 1153              		.loc 1 602 7
 1154 006e F868     		ldr	r0, [r7, #12]
 1155 0070 FFF7FEFF 		bl	UART_SetConfig
 1156 0074 0346     		mov	r3, r0
 1157              		.loc 1 602 6 discriminator 1
 1158 0076 012B     		cmp	r3, #1
 1159 0078 01D1     		bne	.L38
 603:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 604:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 1160              		.loc 1 604 12
 1161 007a 0123     		movs	r3, #1
 1162 007c 34E0     		b	.L34
 1163              	.L38:
 605:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
ARM GAS  /tmp/ccMjAmt3.s 			page 32


 606:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 607:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 608:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 609:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 610:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 1164              		.loc 1 610 3
 1165 007e FB68     		ldr	r3, [r7, #12]
 1166 0080 1B68     		ldr	r3, [r3]
 1167 0082 5A68     		ldr	r2, [r3, #4]
 1168 0084 FB68     		ldr	r3, [r7, #12]
 1169 0086 1B68     		ldr	r3, [r3]
 1170 0088 22F49042 		bic	r2, r2, #18432
 1171 008c 5A60     		str	r2, [r3, #4]
 611:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 1172              		.loc 1 611 3
 1173 008e FB68     		ldr	r3, [r7, #12]
 1174 0090 1B68     		ldr	r3, [r3]
 1175 0092 9A68     		ldr	r2, [r3, #8]
 1176 0094 FB68     		ldr	r3, [r7, #12]
 1177 0096 1B68     		ldr	r3, [r3]
 1178 0098 22F02A02 		bic	r2, r2, #42
 1179 009c 9A60     		str	r2, [r3, #8]
 612:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 613:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 1180              		.loc 1 613 6
 1181 009e 7B68     		ldr	r3, [r7, #4]
 1182 00a0 B3F5006F 		cmp	r3, #2048
 1183 00a4 0AD1     		bne	.L39
 614:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 615:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 616:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 1184              		.loc 1 616 5
 1185 00a6 FB68     		ldr	r3, [r7, #12]
 1186 00a8 1B68     		ldr	r3, [r3]
 1187 00aa 5B68     		ldr	r3, [r3, #4]
 1188 00ac 23F07F41 		bic	r1, r3, #-16777216
 1189 00b0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1190 00b2 1A06     		lsls	r2, r3, #24
 1191 00b4 FB68     		ldr	r3, [r7, #12]
 1192 00b6 1B68     		ldr	r3, [r3]
 1193 00b8 0A43     		orrs	r2, r2, r1
 1194 00ba 5A60     		str	r2, [r3, #4]
 1195              	.L39:
 617:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 618:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 619:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 620:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 1196              		.loc 1 620 3
 1197 00bc FB68     		ldr	r3, [r7, #12]
 1198 00be 1B68     		ldr	r3, [r3]
 1199 00c0 1B68     		ldr	r3, [r3]
 1200 00c2 23F40061 		bic	r1, r3, #2048
 1201 00c6 FB68     		ldr	r3, [r7, #12]
 1202 00c8 1B68     		ldr	r3, [r3]
 1203 00ca 7A68     		ldr	r2, [r7, #4]
 1204 00cc 0A43     		orrs	r2, r2, r1
 1205 00ce 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 33


 621:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 622:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 1206              		.loc 1 622 3
 1207 00d0 FB68     		ldr	r3, [r7, #12]
 1208 00d2 1B68     		ldr	r3, [r3]
 1209 00d4 1A68     		ldr	r2, [r3]
 1210 00d6 FB68     		ldr	r3, [r7, #12]
 1211 00d8 1B68     		ldr	r3, [r3]
 1212 00da 42F00102 		orr	r2, r2, #1
 1213 00de 1A60     		str	r2, [r3]
 623:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 624:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 625:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 1214              		.loc 1 625 11
 1215 00e0 F868     		ldr	r0, [r7, #12]
 1216 00e2 FFF7FEFF 		bl	UART_CheckIdleState
 1217 00e6 0346     		mov	r3, r0
 1218              	.L34:
 626:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 1219              		.loc 1 626 1
 1220 00e8 1846     		mov	r0, r3
 1221 00ea 1037     		adds	r7, r7, #16
 1222              		.cfi_def_cfa_offset 8
 1223 00ec BD46     		mov	sp, r7
 1224              		.cfi_def_cfa_register 13
 1225              		@ sp needed
 1226 00ee 80BD     		pop	{r7, pc}
 1227              	.L41:
 1228              		.align	2
 1229              	.L40:
 1230 00f0 00000000 		.word	.LC0
 1231              		.cfi_endproc
 1232              	.LFE838:
 1234              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 1235              		.align	1
 1236              		.global	HAL_UART_DeInit
 1237              		.syntax unified
 1238              		.thumb
 1239              		.thumb_func
 1241              	HAL_UART_DeInit:
 1242              	.LFB839:
 627:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 628:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 629:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 630:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 631:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
 632:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
 633:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 634:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 635:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 1243              		.loc 1 635 1
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 8
 1246              		@ frame_needed = 1, uses_anonymous_args = 0
 1247 0000 80B5     		push	{r7, lr}
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 7, -8
ARM GAS  /tmp/ccMjAmt3.s 			page 34


 1250              		.cfi_offset 14, -4
 1251 0002 82B0     		sub	sp, sp, #8
 1252              		.cfi_def_cfa_offset 16
 1253 0004 00AF     		add	r7, sp, #0
 1254              		.cfi_def_cfa_register 7
 1255 0006 7860     		str	r0, [r7, #4]
 636:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the UART handle allocation */
 637:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart == NULL)
 1256              		.loc 1 637 6
 1257 0008 7B68     		ldr	r3, [r7, #4]
 1258 000a 002B     		cmp	r3, #0
 1259 000c 01D1     		bne	.L43
 638:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 639:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 1260              		.loc 1 639 12
 1261 000e 0123     		movs	r3, #1
 1262 0010 A4E0     		b	.L44
 1263              	.L43:
 640:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 641:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 642:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the parameters */
 643:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 1264              		.loc 1 643 3
 1265 0012 7B68     		ldr	r3, [r7, #4]
 1266 0014 1B68     		ldr	r3, [r3]
 1267 0016 534A     		ldr	r2, .L46
 1268 0018 9342     		cmp	r3, r2
 1269 001a 6DD0     		beq	.L45
 1270              		.loc 1 643 3 is_stmt 0 discriminator 1
 1271 001c 7B68     		ldr	r3, [r7, #4]
 1272 001e 1B68     		ldr	r3, [r3]
 1273 0020 514A     		ldr	r2, .L46+4
 1274 0022 9342     		cmp	r3, r2
 1275 0024 68D0     		beq	.L45
 1276              		.loc 1 643 3 discriminator 2
 1277 0026 7B68     		ldr	r3, [r7, #4]
 1278 0028 1B68     		ldr	r3, [r3]
 1279 002a 504A     		ldr	r2, .L46+8
 1280 002c 9342     		cmp	r3, r2
 1281 002e 63D0     		beq	.L45
 1282              		.loc 1 643 3 discriminator 3
 1283 0030 7B68     		ldr	r3, [r7, #4]
 1284 0032 1B68     		ldr	r3, [r3]
 1285 0034 4E4A     		ldr	r2, .L46+12
 1286 0036 9342     		cmp	r3, r2
 1287 0038 5ED0     		beq	.L45
 1288              		.loc 1 643 3 discriminator 4
 1289 003a 7B68     		ldr	r3, [r7, #4]
 1290 003c 1B68     		ldr	r3, [r3]
 1291 003e 4D4A     		ldr	r2, .L46+16
 1292 0040 9342     		cmp	r3, r2
 1293 0042 59D0     		beq	.L45
 1294              		.loc 1 643 3 discriminator 5
 1295 0044 7B68     		ldr	r3, [r7, #4]
 1296 0046 1B68     		ldr	r3, [r3]
 1297 0048 4B4A     		ldr	r2, .L46+20
 1298 004a 9342     		cmp	r3, r2
ARM GAS  /tmp/ccMjAmt3.s 			page 35


 1299 004c 54D0     		beq	.L45
 1300              		.loc 1 643 3 discriminator 6
 1301 004e 7B68     		ldr	r3, [r7, #4]
 1302 0050 1B68     		ldr	r3, [r3]
 1303 0052 4A4A     		ldr	r2, .L46+24
 1304 0054 9342     		cmp	r3, r2
 1305 0056 4FD0     		beq	.L45
 1306              		.loc 1 643 3 discriminator 7
 1307 0058 7B68     		ldr	r3, [r7, #4]
 1308 005a 1B68     		ldr	r3, [r3]
 1309 005c 484A     		ldr	r2, .L46+28
 1310 005e 9342     		cmp	r3, r2
 1311 0060 4AD0     		beq	.L45
 1312              		.loc 1 643 3 discriminator 8
 1313 0062 7B68     		ldr	r3, [r7, #4]
 1314 0064 1B68     		ldr	r3, [r3]
 1315 0066 B3F1502F 		cmp	r3, #1342197760
 1316 006a 45D0     		beq	.L45
 1317              		.loc 1 643 3 discriminator 9
 1318 006c 7B68     		ldr	r3, [r7, #4]
 1319 006e 1B68     		ldr	r3, [r3]
 1320 0070 444A     		ldr	r2, .L46+32
 1321 0072 9342     		cmp	r3, r2
 1322 0074 40D0     		beq	.L45
 1323              		.loc 1 643 3 discriminator 10
 1324 0076 7B68     		ldr	r3, [r7, #4]
 1325 0078 1B68     		ldr	r3, [r3]
 1326 007a 434A     		ldr	r2, .L46+36
 1327 007c 9342     		cmp	r3, r2
 1328 007e 3BD0     		beq	.L45
 1329              		.loc 1 643 3 discriminator 11
 1330 0080 7B68     		ldr	r3, [r7, #4]
 1331 0082 1B68     		ldr	r3, [r3]
 1332 0084 414A     		ldr	r2, .L46+40
 1333 0086 9342     		cmp	r3, r2
 1334 0088 36D0     		beq	.L45
 1335              		.loc 1 643 3 discriminator 12
 1336 008a 7B68     		ldr	r3, [r7, #4]
 1337 008c 1B68     		ldr	r3, [r3]
 1338 008e 404A     		ldr	r2, .L46+44
 1339 0090 9342     		cmp	r3, r2
 1340 0092 31D0     		beq	.L45
 1341              		.loc 1 643 3 discriminator 13
 1342 0094 7B68     		ldr	r3, [r7, #4]
 1343 0096 1B68     		ldr	r3, [r3]
 1344 0098 3E4A     		ldr	r2, .L46+48
 1345 009a 9342     		cmp	r3, r2
 1346 009c 2CD0     		beq	.L45
 1347              		.loc 1 643 3 discriminator 14
 1348 009e 7B68     		ldr	r3, [r7, #4]
 1349 00a0 1B68     		ldr	r3, [r3]
 1350 00a2 3D4A     		ldr	r2, .L46+52
 1351 00a4 9342     		cmp	r3, r2
 1352 00a6 27D0     		beq	.L45
 1353              		.loc 1 643 3 discriminator 15
 1354 00a8 7B68     		ldr	r3, [r7, #4]
 1355 00aa 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 36


 1356 00ac 3B4A     		ldr	r2, .L46+56
 1357 00ae 9342     		cmp	r3, r2
 1358 00b0 22D0     		beq	.L45
 1359              		.loc 1 643 3 discriminator 16
 1360 00b2 7B68     		ldr	r3, [r7, #4]
 1361 00b4 1B68     		ldr	r3, [r3]
 1362 00b6 3A4A     		ldr	r2, .L46+60
 1363 00b8 9342     		cmp	r3, r2
 1364 00ba 1DD0     		beq	.L45
 1365              		.loc 1 643 3 discriminator 17
 1366 00bc 7B68     		ldr	r3, [r7, #4]
 1367 00be 1B68     		ldr	r3, [r3]
 1368 00c0 384A     		ldr	r2, .L46+64
 1369 00c2 9342     		cmp	r3, r2
 1370 00c4 18D0     		beq	.L45
 1371              		.loc 1 643 3 discriminator 18
 1372 00c6 7B68     		ldr	r3, [r7, #4]
 1373 00c8 1B68     		ldr	r3, [r3]
 1374 00ca 374A     		ldr	r2, .L46+68
 1375 00cc 9342     		cmp	r3, r2
 1376 00ce 13D0     		beq	.L45
 1377              		.loc 1 643 3 discriminator 19
 1378 00d0 7B68     		ldr	r3, [r7, #4]
 1379 00d2 1B68     		ldr	r3, [r3]
 1380 00d4 354A     		ldr	r2, .L46+72
 1381 00d6 9342     		cmp	r3, r2
 1382 00d8 0ED0     		beq	.L45
 1383              		.loc 1 643 3 discriminator 20
 1384 00da 7B68     		ldr	r3, [r7, #4]
 1385 00dc 1B68     		ldr	r3, [r3]
 1386 00de 344A     		ldr	r2, .L46+76
 1387 00e0 9342     		cmp	r3, r2
 1388 00e2 09D0     		beq	.L45
 1389              		.loc 1 643 3 discriminator 21
 1390 00e4 7B68     		ldr	r3, [r7, #4]
 1391 00e6 1B68     		ldr	r3, [r3]
 1392 00e8 324A     		ldr	r2, .L46+80
 1393 00ea 9342     		cmp	r3, r2
 1394 00ec 04D0     		beq	.L45
 1395              		.loc 1 643 3 discriminator 22
 1396 00ee 40F28321 		movw	r1, #643
 1397 00f2 3148     		ldr	r0, .L46+84
 1398 00f4 FFF7FEFF 		bl	assert_failed
 1399              	.L45:
 644:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 645:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 1400              		.loc 1 645 17 is_stmt 1
 1401 00f8 7B68     		ldr	r3, [r7, #4]
 1402 00fa 2422     		movs	r2, #36
 1403 00fc C3F88820 		str	r2, [r3, #136]
 646:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 647:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 1404              		.loc 1 647 3
 1405 0100 7B68     		ldr	r3, [r7, #4]
 1406 0102 1B68     		ldr	r3, [r3]
 1407 0104 1A68     		ldr	r2, [r3]
 1408 0106 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 37


 1409 0108 1B68     		ldr	r3, [r3]
 1410 010a 22F00102 		bic	r2, r2, #1
 1411 010e 1A60     		str	r2, [r3]
 648:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 649:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 1412              		.loc 1 649 8
 1413 0110 7B68     		ldr	r3, [r7, #4]
 1414 0112 1B68     		ldr	r3, [r3]
 1415              		.loc 1 649 24
 1416 0114 0022     		movs	r2, #0
 1417 0116 1A60     		str	r2, [r3]
 650:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 1418              		.loc 1 650 8
 1419 0118 7B68     		ldr	r3, [r7, #4]
 1420 011a 1B68     		ldr	r3, [r3]
 1421              		.loc 1 650 24
 1422 011c 0022     		movs	r2, #0
 1423 011e 5A60     		str	r2, [r3, #4]
 651:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 1424              		.loc 1 651 8
 1425 0120 7B68     		ldr	r3, [r7, #4]
 1426 0122 1B68     		ldr	r3, [r3]
 1427              		.loc 1 651 24
 1428 0124 0022     		movs	r2, #0
 1429 0126 9A60     		str	r2, [r3, #8]
 652:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 653:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 654:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 655:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 656:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 657:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 658:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* DeInit the low level hardware */
 659:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 660:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
 661:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* DeInit the low level hardware */
 662:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 1430              		.loc 1 662 3
 1431 0128 7868     		ldr	r0, [r7, #4]
 1432 012a FFF7FEFF 		bl	HAL_UART_MspDeInit
 663:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 664:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 665:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 1433              		.loc 1 665 20
 1434 012e 7B68     		ldr	r3, [r7, #4]
 1435 0130 0022     		movs	r2, #0
 1436 0132 C3F89020 		str	r2, [r3, #144]
 666:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 1437              		.loc 1 666 17
 1438 0136 7B68     		ldr	r3, [r7, #4]
 1439 0138 0022     		movs	r2, #0
 1440 013a C3F88820 		str	r2, [r3, #136]
 667:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 1441              		.loc 1 667 18
 1442 013e 7B68     		ldr	r3, [r7, #4]
 1443 0140 0022     		movs	r2, #0
 1444 0142 C3F88C20 		str	r2, [r3, #140]
 668:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
ARM GAS  /tmp/ccMjAmt3.s 			page 38


 1445              		.loc 1 668 24
 1446 0146 7B68     		ldr	r3, [r7, #4]
 1447 0148 0022     		movs	r2, #0
 1448 014a DA66     		str	r2, [r3, #108]
 669:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 1449              		.loc 1 669 22
 1450 014c 7B68     		ldr	r3, [r7, #4]
 1451 014e 0022     		movs	r2, #0
 1452 0150 1A67     		str	r2, [r3, #112]
 670:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 671:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1453              		.loc 1 671 3
 1454 0152 7B68     		ldr	r3, [r7, #4]
 1455 0154 0022     		movs	r2, #0
 1456 0156 83F88420 		strb	r2, [r3, #132]
 672:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 673:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 1457              		.loc 1 673 10
 1458 015a 0023     		movs	r3, #0
 1459              	.L44:
 674:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 1460              		.loc 1 674 1
 1461 015c 1846     		mov	r0, r3
 1462 015e 0837     		adds	r7, r7, #8
 1463              		.cfi_def_cfa_offset 8
 1464 0160 BD46     		mov	sp, r7
 1465              		.cfi_def_cfa_register 13
 1466              		@ sp needed
 1467 0162 80BD     		pop	{r7, pc}
 1468              	.L47:
 1469              		.align	2
 1470              	.L46:
 1471 0164 00100052 		.word	1375735808
 1472 0168 00100042 		.word	1107300352
 1473 016c 00440050 		.word	1342194688
 1474 0170 00440040 		.word	1073759232
 1475 0174 00480050 		.word	1342195712
 1476 0178 00480040 		.word	1073760256
 1477 017c 004C0050 		.word	1342196736
 1478 0180 004C0040 		.word	1073761280
 1479 0184 00500040 		.word	1073762304
 1480 0188 00140052 		.word	1375736832
 1481 018c 00140042 		.word	1107301376
 1482 0190 00780050 		.word	1342208000
 1483 0194 00780040 		.word	1073772544
 1484 0198 007C0050 		.word	1342209024
 1485 019c 007C0040 		.word	1073773568
 1486 01a0 00180052 		.word	1375737856
 1487 01a4 00180042 		.word	1107302400
 1488 01a8 001C0052 		.word	1375738880
 1489 01ac 001C0042 		.word	1107303424
 1490 01b0 000C0056 		.word	1442843648
 1491 01b4 000C0046 		.word	1174408192
 1492 01b8 00000000 		.word	.LC0
 1493              		.cfi_endproc
 1494              	.LFE839:
 1496              		.section	.text.HAL_UART_MspInit,"ax",%progbits
ARM GAS  /tmp/ccMjAmt3.s 			page 39


 1497              		.align	1
 1498              		.weak	HAL_UART_MspInit
 1499              		.syntax unified
 1500              		.thumb
 1501              		.thumb_func
 1503              	HAL_UART_MspInit:
 1504              	.LFB840:
 675:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 676:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 677:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 678:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
 679:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
 680:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 681:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 682:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 1505              		.loc 1 682 1
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 8
 1508              		@ frame_needed = 1, uses_anonymous_args = 0
 1509              		@ link register save eliminated.
 1510 0000 80B4     		push	{r7}
 1511              		.cfi_def_cfa_offset 4
 1512              		.cfi_offset 7, -4
 1513 0002 83B0     		sub	sp, sp, #12
 1514              		.cfi_def_cfa_offset 16
 1515 0004 00AF     		add	r7, sp, #0
 1516              		.cfi_def_cfa_register 7
 1517 0006 7860     		str	r0, [r7, #4]
 683:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 684:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
 685:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 686:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 687:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 688:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
 689:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 1518              		.loc 1 689 1
 1519 0008 00BF     		nop
 1520 000a 0C37     		adds	r7, r7, #12
 1521              		.cfi_def_cfa_offset 4
 1522 000c BD46     		mov	sp, r7
 1523              		.cfi_def_cfa_register 13
 1524              		@ sp needed
 1525 000e 5DF8047B 		ldr	r7, [sp], #4
 1526              		.cfi_restore 7
 1527              		.cfi_def_cfa_offset 0
 1528 0012 7047     		bx	lr
 1529              		.cfi_endproc
 1530              	.LFE840:
 1532              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1533              		.align	1
 1534              		.weak	HAL_UART_MspDeInit
 1535              		.syntax unified
 1536              		.thumb
 1537              		.thumb_func
 1539              	HAL_UART_MspDeInit:
 1540              	.LFB841:
 690:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 40


 691:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 692:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 693:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
 694:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
 695:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 696:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 697:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 1541              		.loc 1 697 1
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 8
 1544              		@ frame_needed = 1, uses_anonymous_args = 0
 1545              		@ link register save eliminated.
 1546 0000 80B4     		push	{r7}
 1547              		.cfi_def_cfa_offset 4
 1548              		.cfi_offset 7, -4
 1549 0002 83B0     		sub	sp, sp, #12
 1550              		.cfi_def_cfa_offset 16
 1551 0004 00AF     		add	r7, sp, #0
 1552              		.cfi_def_cfa_register 7
 1553 0006 7860     		str	r0, [r7, #4]
 698:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 699:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
 700:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 701:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 702:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 703:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
 704:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 1554              		.loc 1 704 1
 1555 0008 00BF     		nop
 1556 000a 0C37     		adds	r7, r7, #12
 1557              		.cfi_def_cfa_offset 4
 1558 000c BD46     		mov	sp, r7
 1559              		.cfi_def_cfa_register 13
 1560              		@ sp needed
 1561 000e 5DF8047B 		ldr	r7, [sp], #4
 1562              		.cfi_restore 7
 1563              		.cfi_def_cfa_offset 0
 1564 0012 7047     		bx	lr
 1565              		.cfi_endproc
 1566              	.LFE841:
 1568              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1569              		.align	1
 1570              		.global	HAL_UART_Transmit
 1571              		.syntax unified
 1572              		.thumb
 1573              		.thumb_func
 1575              	HAL_UART_Transmit:
 1576              	.LFB842:
 705:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 706:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 707:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 708:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Register a User UART Callback
 709:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         To be used to override the weak predefined callback
 710:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   The HAL_UART_RegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_In
 711:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() or HAL_RS485Ex_Init() in HAL_UART_STATE_RESET
 712:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART_MSPDEINIT_CB_ID
 713:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart uart handle
ARM GAS  /tmp/ccMjAmt3.s 			page 41


 714:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 715:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         This parameter can be one of the following values:
 716:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 717:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 718:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 719:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 720:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 721:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 722:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 723:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 724:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 725:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 726:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 727:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 728:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 729:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 730:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
 731:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 732:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 733:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 734:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 735:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 736:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 737:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (pCallback == NULL)
 738:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 739:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 740:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 741:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 742:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 743:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 744:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 745:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 746:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     switch (CallbackID)
 747:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 748:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 749:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 750:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 751:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 752:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 753:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 754:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 755:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 756:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 757:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 758:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 759:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 760:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 761:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 762:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 763:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 764:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 765:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 766:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 767:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 768:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 769:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 770:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccMjAmt3.s 			page 42


 771:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 772:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 773:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 774:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 775:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 776:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 777:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 778:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 779:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 780:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 781:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 782:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 783:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 784:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 785:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 786:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 787:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 788:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 789:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 790:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 791:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 792:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 793:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 794:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 795:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 796:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 797:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 798:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 799:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 800:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       default :
 801:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 802:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 803:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         status =  HAL_ERROR;
 804:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 805:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 806:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 807:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 808:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 809:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     switch (CallbackID)
 810:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 811:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 812:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 813:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 814:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 815:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 816:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 817:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 818:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 819:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       default :
 820:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 821:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 822:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         status =  HAL_ERROR;
 823:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 824:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 825:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 826:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
 827:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
ARM GAS  /tmp/ccMjAmt3.s 			page 43


 828:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 829:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 830:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     status =  HAL_ERROR;
 831:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 832:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 833:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return status;
 834:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 835:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 836:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 837:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 838:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 839:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   The HAL_UART_UnRegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_
 840:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() or HAL_RS485Ex_Init() in HAL_UART_STATE_RESET
 841:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART_MSPDEINIT_CB_ID
 842:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart uart handle
 843:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 844:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         This parameter can be one of the following values:
 845:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 846:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 847:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 848:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 849:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 850:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 851:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 852:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 853:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 854:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 855:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 856:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 857:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 858:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
 859:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 860:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 861:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 862:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 863:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 864:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 865:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 866:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     switch (CallbackID)
 867:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 868:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 869:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 870:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 871:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 872:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 873:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 874:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 875:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 876:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 877:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 878:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 879:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 880:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 881:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 882:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 883:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 884:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
ARM GAS  /tmp/ccMjAmt3.s 			page 44


 885:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 886:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 887:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 888:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 889:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 890:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 891:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 892:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 893:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 894:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 895:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 896:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 897:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 898:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 899:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 900:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 901:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 902:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 903:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 904:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 905:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 906:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 907:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 908:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 909:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 910:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 911:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 912:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 913:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 914:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 915:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 916:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 917:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 918:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 919:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 920:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 921:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 922:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       default :
 923:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 924:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 925:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         status =  HAL_ERROR;
 926:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 927:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 928:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 929:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 930:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 931:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     switch (CallbackID)
 932:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 933:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 934:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 935:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 936:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 937:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 938:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 939:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 940:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 941:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       default :
ARM GAS  /tmp/ccMjAmt3.s 			page 45


 942:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 943:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 944:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         status =  HAL_ERROR;
 945:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 946:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 947:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 948:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
 949:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 950:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 951:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 952:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     status =  HAL_ERROR;
 953:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 954:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 955:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return status;
 956:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 957:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 958:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 959:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 960:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 961:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart     Uart handle
 962:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 963:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
 964:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 965:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 966:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 967:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 968:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 969:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (pCallback == NULL)
 970:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 971:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 972:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 973:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 974:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 975:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 976:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 977:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 978:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 979:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 980:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
 981:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 982:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 983:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 984:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     status =  HAL_ERROR;
 985:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 986:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 987:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return status;
 988:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 989:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 990:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
 991:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
 992:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
 993:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart     Uart handle
 994:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
 995:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
 996:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
 997:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 998:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccMjAmt3.s 			page 46


 999:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1000:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1001:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1002:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1003:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1004:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
1005:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1006:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1007:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1008:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     status =  HAL_ERROR;
1009:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1010:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1011:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return status;
1012:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
1013:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1014:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1015:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1016:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1017:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @}
1018:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1019:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1020:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1021:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1022:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *
1023:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** @verbatim
1024:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****  ===============================================================================
1025:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                       ##### IO operation functions #####
1026:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****  ===============================================================================
1027:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
1028:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1029:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     and Half duplex data transfers.
1030:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1031:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) There are two modes of transfer:
1032:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
1033:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function
1034:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             after finishing transfer.
1035:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
1036:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             or DMA, These API's return the HAL status.
1037:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             The end of the data processing will be indicated through the
1038:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1039:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             using DMA mode.
1040:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1041:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             will be executed respectively at the end of the transmit or Receive process
1042:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             The HAL_UART_ErrorCallback()user callback will be executed when a communication error i
1043:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1044:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) Blocking mode API's are :
1045:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_Transmit()
1046:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_Receive()
1047:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1048:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1049:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
1050:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
1051:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
1052:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1053:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1054:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
1055:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
ARM GAS  /tmp/ccMjAmt3.s 			page 47


1056:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
1057:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
1058:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
1059:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1060:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1061:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
1062:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
1063:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
1064:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
1065:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
1066:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1067:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1068:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_Abort()
1069:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
1070:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
1071:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
1072:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
1073:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
1074:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1075:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1076:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
1077:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
1078:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
1079:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1080:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1081:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         reception services:
1082:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UARTEx_RxEventCallback()
1083:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1084:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) Wakeup from Stop mode Callback:
1085:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         (++) HAL_UARTEx_WakeupCallback()
1086:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1087:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1088:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         Errors are handled as follows :
1089:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but e
1090:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1091:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             in Interrupt mode reception .
1092:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             Received character is then retrieved and stored in Rx buffer, Error code is set to allo
1093:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1094:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             Transfer is kept ongoing on UART side.
1095:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             If user wants to abort it, Abort services should be called by user.
1096:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        (++) Error is considered as Blocking : Transfer could not be completed properly and is abort
1097:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1098:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1099:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             user callback is executed.
1100:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1101:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1102:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1103:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1104:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** @endverbatim
1105:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
1106:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1107:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1108:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1109:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1110:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1111:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1112:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         of u16 provided through pData.
ARM GAS  /tmp/ccMjAmt3.s 			page 48


1113:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1114:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1115:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1116:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1117:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart   UART handle.
1118:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1119:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1120:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Timeout Timeout duration.
1121:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1122:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1123:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1124:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 1577              		.loc 1 1124 1
 1578              		.cfi_startproc
 1579              		@ args = 0, pretend = 0, frame = 32
 1580              		@ frame_needed = 1, uses_anonymous_args = 0
 1581 0000 80B5     		push	{r7, lr}
 1582              		.cfi_def_cfa_offset 8
 1583              		.cfi_offset 7, -8
 1584              		.cfi_offset 14, -4
 1585 0002 8AB0     		sub	sp, sp, #40
 1586              		.cfi_def_cfa_offset 48
 1587 0004 02AF     		add	r7, sp, #8
 1588              		.cfi_def_cfa 7, 40
 1589 0006 F860     		str	r0, [r7, #12]
 1590 0008 B960     		str	r1, [r7, #8]
 1591 000a 3B60     		str	r3, [r7]
 1592 000c 1346     		mov	r3, r2	@ movhi
 1593 000e FB80     		strh	r3, [r7, #6]	@ movhi
1125:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1126:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   const uint16_t *pdata16bits;
1127:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t tickstart;
1128:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1129:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1130:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1594              		.loc 1 1130 12
 1595 0010 FB68     		ldr	r3, [r7, #12]
 1596 0012 D3F88830 		ldr	r3, [r3, #136]
 1597              		.loc 1 1130 6
 1598 0016 202B     		cmp	r3, #32
 1599 0018 7BD1     		bne	.L51
1131:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1132:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1600              		.loc 1 1132 8
 1601 001a BB68     		ldr	r3, [r7, #8]
 1602 001c 002B     		cmp	r3, #0
 1603 001e 02D0     		beq	.L52
 1604              		.loc 1 1132 25 discriminator 1
 1605 0020 FB88     		ldrh	r3, [r7, #6]
 1606 0022 002B     		cmp	r3, #0
 1607 0024 01D1     		bne	.L53
 1608              	.L52:
1133:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1134:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return  HAL_ERROR;
 1609              		.loc 1 1134 15
 1610 0026 0123     		movs	r3, #1
 1611 0028 74E0     		b	.L54
ARM GAS  /tmp/ccMjAmt3.s 			page 49


 1612              	.L53:
1135:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1136:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1137:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1613              		.loc 1 1137 22
 1614 002a FB68     		ldr	r3, [r7, #12]
 1615 002c 0022     		movs	r2, #0
 1616 002e C3F89020 		str	r2, [r3, #144]
1138:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1617              		.loc 1 1138 19
 1618 0032 FB68     		ldr	r3, [r7, #12]
 1619 0034 2122     		movs	r2, #33
 1620 0036 C3F88820 		str	r2, [r3, #136]
1139:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1140:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Init tickstart for timeout management */
1141:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1621              		.loc 1 1141 17
 1622 003a FFF7FEFF 		bl	HAL_GetTick
 1623 003e 7861     		str	r0, [r7, #20]
1142:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1143:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1624              		.loc 1 1143 24
 1625 0040 FB68     		ldr	r3, [r7, #12]
 1626 0042 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1627 0044 A3F85420 		strh	r2, [r3, #84]	@ movhi
1144:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxXferCount = Size;
 1628              		.loc 1 1144 24
 1629 0048 FB68     		ldr	r3, [r7, #12]
 1630 004a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1631 004c A3F85620 		strh	r2, [r3, #86]	@ movhi
1145:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1146:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1147:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1632              		.loc 1 1147 21
 1633 0050 FB68     		ldr	r3, [r7, #12]
 1634 0052 9B68     		ldr	r3, [r3, #8]
 1635              		.loc 1 1147 8
 1636 0054 B3F5805F 		cmp	r3, #4096
 1637 0058 08D1     		bne	.L55
 1638              		.loc 1 1147 71 discriminator 1
 1639 005a FB68     		ldr	r3, [r7, #12]
 1640 005c 1B69     		ldr	r3, [r3, #16]
 1641              		.loc 1 1147 56 discriminator 1
 1642 005e 002B     		cmp	r3, #0
 1643 0060 04D1     		bne	.L55
1148:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1149:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       pdata8bits  = NULL;
 1644              		.loc 1 1149 19
 1645 0062 0023     		movs	r3, #0
 1646 0064 FB61     		str	r3, [r7, #28]
1150:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 1647              		.loc 1 1150 19
 1648 0066 BB68     		ldr	r3, [r7, #8]
 1649 0068 BB61     		str	r3, [r7, #24]
 1650 006a 03E0     		b	.L56
 1651              	.L55:
1151:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
ARM GAS  /tmp/ccMjAmt3.s 			page 50


1152:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
1153:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1154:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       pdata8bits  = pData;
 1652              		.loc 1 1154 19
 1653 006c BB68     		ldr	r3, [r7, #8]
 1654 006e FB61     		str	r3, [r7, #28]
1155:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       pdata16bits = NULL;
 1655              		.loc 1 1155 19
 1656 0070 0023     		movs	r3, #0
 1657 0072 BB61     		str	r3, [r7, #24]
 1658              	.L56:
1156:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1157:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1158:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 1659              		.loc 1 1158 11
 1660 0074 30E0     		b	.L57
 1661              	.L61:
1159:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1160:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 1662              		.loc 1 1160 11
 1663 0076 3B68     		ldr	r3, [r7]
 1664 0078 0093     		str	r3, [sp]
 1665 007a 7B69     		ldr	r3, [r7, #20]
 1666 007c 0022     		movs	r2, #0
 1667 007e 8021     		movs	r1, #128
 1668 0080 F868     		ldr	r0, [r7, #12]
 1669 0082 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1670 0086 0346     		mov	r3, r0
 1671              		.loc 1 1160 10 discriminator 1
 1672 0088 002B     		cmp	r3, #0
 1673 008a 05D0     		beq	.L58
1161:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1162:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1163:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1674              		.loc 1 1163 23
 1675 008c FB68     		ldr	r3, [r7, #12]
 1676 008e 2022     		movs	r2, #32
 1677 0090 C3F88820 		str	r2, [r3, #136]
1164:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1165:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         return HAL_TIMEOUT;
 1678              		.loc 1 1165 16
 1679 0094 0323     		movs	r3, #3
 1680 0096 3DE0     		b	.L54
 1681              	.L58:
1166:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1167:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (pdata8bits == NULL)
 1682              		.loc 1 1167 10
 1683 0098 FB69     		ldr	r3, [r7, #28]
 1684 009a 002B     		cmp	r3, #0
 1685 009c 0BD1     		bne	.L59
1168:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1169:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 1686              		.loc 1 1169 43
 1687 009e BB69     		ldr	r3, [r7, #24]
 1688 00a0 1B88     		ldrh	r3, [r3]
 1689              		.loc 1 1169 32
 1690 00a2 1A46     		mov	r2, r3
ARM GAS  /tmp/ccMjAmt3.s 			page 51


 1691              		.loc 1 1169 14
 1692 00a4 FB68     		ldr	r3, [r7, #12]
 1693 00a6 1B68     		ldr	r3, [r3]
 1694              		.loc 1 1169 32
 1695 00a8 C2F30802 		ubfx	r2, r2, #0, #9
 1696              		.loc 1 1169 30
 1697 00ac 9A62     		str	r2, [r3, #40]
1170:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         pdata16bits++;
 1698              		.loc 1 1170 20
 1699 00ae BB69     		ldr	r3, [r7, #24]
 1700 00b0 0233     		adds	r3, r3, #2
 1701 00b2 BB61     		str	r3, [r7, #24]
 1702 00b4 07E0     		b	.L60
 1703              	.L59:
1171:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1172:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
1173:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1174:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 1704              		.loc 1 1174 42
 1705 00b6 FB69     		ldr	r3, [r7, #28]
 1706 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1707              		.loc 1 1174 14
 1708 00ba FB68     		ldr	r3, [r7, #12]
 1709 00bc 1B68     		ldr	r3, [r3]
 1710              		.loc 1 1174 30
 1711 00be 9A62     		str	r2, [r3, #40]
1175:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         pdata8bits++;
 1712              		.loc 1 1175 19
 1713 00c0 FB69     		ldr	r3, [r7, #28]
 1714 00c2 0133     		adds	r3, r3, #1
 1715 00c4 FB61     		str	r3, [r7, #28]
 1716              	.L60:
1176:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1177:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->TxXferCount--;
 1717              		.loc 1 1177 12
 1718 00c6 FB68     		ldr	r3, [r7, #12]
 1719 00c8 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 1720 00cc 9BB2     		uxth	r3, r3
 1721              		.loc 1 1177 25
 1722 00ce 013B     		subs	r3, r3, #1
 1723 00d0 9AB2     		uxth	r2, r3
 1724 00d2 FB68     		ldr	r3, [r7, #12]
 1725 00d4 A3F85620 		strh	r2, [r3, #86]	@ movhi
 1726              	.L57:
1158:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 1727              		.loc 1 1158 17
 1728 00d8 FB68     		ldr	r3, [r7, #12]
 1729 00da B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 1730 00de 9BB2     		uxth	r3, r3
1158:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 1731              		.loc 1 1158 31
 1732 00e0 002B     		cmp	r3, #0
 1733 00e2 C8D1     		bne	.L61
1178:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1179:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1180:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 1734              		.loc 1 1180 9
ARM GAS  /tmp/ccMjAmt3.s 			page 52


 1735 00e4 3B68     		ldr	r3, [r7]
 1736 00e6 0093     		str	r3, [sp]
 1737 00e8 7B69     		ldr	r3, [r7, #20]
 1738 00ea 0022     		movs	r2, #0
 1739 00ec 4021     		movs	r1, #64
 1740 00ee F868     		ldr	r0, [r7, #12]
 1741 00f0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1742 00f4 0346     		mov	r3, r0
 1743              		.loc 1 1180 8 discriminator 1
 1744 00f6 002B     		cmp	r3, #0
 1745 00f8 05D0     		beq	.L62
1181:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1182:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 1746              		.loc 1 1182 21
 1747 00fa FB68     		ldr	r3, [r7, #12]
 1748 00fc 2022     		movs	r2, #32
 1749 00fe C3F88820 		str	r2, [r3, #136]
1183:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1184:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_TIMEOUT;
 1750              		.loc 1 1184 14
 1751 0102 0323     		movs	r3, #3
 1752 0104 06E0     		b	.L54
 1753              	.L62:
1185:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1186:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1187:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1188:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 1754              		.loc 1 1188 19
 1755 0106 FB68     		ldr	r3, [r7, #12]
 1756 0108 2022     		movs	r2, #32
 1757 010a C3F88820 		str	r2, [r3, #136]
1189:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1190:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_OK;
 1758              		.loc 1 1190 12
 1759 010e 0023     		movs	r3, #0
 1760 0110 00E0     		b	.L54
 1761              	.L51:
1191:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1192:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
1193:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1194:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_BUSY;
 1762              		.loc 1 1194 12
 1763 0112 0223     		movs	r3, #2
 1764              	.L54:
1195:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1196:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 1765              		.loc 1 1196 1
 1766 0114 1846     		mov	r0, r3
 1767 0116 2037     		adds	r7, r7, #32
 1768              		.cfi_def_cfa_offset 8
 1769 0118 BD46     		mov	sp, r7
 1770              		.cfi_def_cfa_register 13
 1771              		@ sp needed
 1772 011a 80BD     		pop	{r7, pc}
 1773              		.cfi_endproc
 1774              	.LFE842:
 1776              		.section	.text.HAL_UART_Receive,"ax",%progbits
ARM GAS  /tmp/ccMjAmt3.s 			page 53


 1777              		.align	1
 1778              		.global	HAL_UART_Receive
 1779              		.syntax unified
 1780              		.thumb
 1781              		.thumb_func
 1783              	HAL_UART_Receive:
 1784              	.LFB843:
1197:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1198:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1199:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1200:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1201:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1202:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         of u16 available through pData.
1203:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1204:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1205:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1206:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1207:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart   UART handle.
1208:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1209:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1210:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Timeout Timeout duration.
1211:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1212:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1213:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1214:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 1785              		.loc 1 1214 1
 1786              		.cfi_startproc
 1787              		@ args = 0, pretend = 0, frame = 32
 1788              		@ frame_needed = 1, uses_anonymous_args = 0
 1789 0000 80B5     		push	{r7, lr}
 1790              		.cfi_def_cfa_offset 8
 1791              		.cfi_offset 7, -8
 1792              		.cfi_offset 14, -4
 1793 0002 8AB0     		sub	sp, sp, #40
 1794              		.cfi_def_cfa_offset 48
 1795 0004 02AF     		add	r7, sp, #8
 1796              		.cfi_def_cfa 7, 40
 1797 0006 F860     		str	r0, [r7, #12]
 1798 0008 B960     		str	r1, [r7, #8]
 1799 000a 3B60     		str	r3, [r7]
 1800 000c 1346     		mov	r3, r2	@ movhi
 1801 000e FB80     		strh	r3, [r7, #6]	@ movhi
1215:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint8_t  *pdata8bits;
1216:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t *pdata16bits;
1217:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t uhMask;
1218:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t tickstart;
1219:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1220:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1221:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1802              		.loc 1 1221 12
 1803 0010 FB68     		ldr	r3, [r7, #12]
 1804 0012 D3F88C30 		ldr	r3, [r3, #140]
 1805              		.loc 1 1221 6
 1806 0016 202B     		cmp	r3, #32
 1807 0018 40F0B580 		bne	.L64
1222:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1223:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
ARM GAS  /tmp/ccMjAmt3.s 			page 54


 1808              		.loc 1 1223 8
 1809 001c BB68     		ldr	r3, [r7, #8]
 1810 001e 002B     		cmp	r3, #0
 1811 0020 02D0     		beq	.L65
 1812              		.loc 1 1223 25 discriminator 1
 1813 0022 FB88     		ldrh	r3, [r7, #6]
 1814 0024 002B     		cmp	r3, #0
 1815 0026 01D1     		bne	.L66
 1816              	.L65:
1224:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1225:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return  HAL_ERROR;
 1817              		.loc 1 1225 15
 1818 0028 0123     		movs	r3, #1
 1819 002a ADE0     		b	.L67
 1820              	.L66:
1226:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1227:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1228:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1821              		.loc 1 1228 22
 1822 002c FB68     		ldr	r3, [r7, #12]
 1823 002e 0022     		movs	r2, #0
 1824 0030 C3F89020 		str	r2, [r3, #144]
1229:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1825              		.loc 1 1229 20
 1826 0034 FB68     		ldr	r3, [r7, #12]
 1827 0036 2222     		movs	r2, #34
 1828 0038 C3F88C20 		str	r2, [r3, #140]
1230:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1829              		.loc 1 1230 26
 1830 003c FB68     		ldr	r3, [r7, #12]
 1831 003e 0022     		movs	r2, #0
 1832 0040 DA66     		str	r2, [r3, #108]
1231:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1232:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Init tickstart for timeout management */
1233:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1833              		.loc 1 1233 17
 1834 0042 FFF7FEFF 		bl	HAL_GetTick
 1835 0046 7861     		str	r0, [r7, #20]
1234:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1235:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1836              		.loc 1 1235 24
 1837 0048 FB68     		ldr	r3, [r7, #12]
 1838 004a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1839 004c A3F85C20 		strh	r2, [r3, #92]	@ movhi
1236:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxXferCount = Size;
 1840              		.loc 1 1236 24
 1841 0050 FB68     		ldr	r3, [r7, #12]
 1842 0052 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1843 0054 A3F85E20 		strh	r2, [r3, #94]	@ movhi
1237:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1238:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1239:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1844              		.loc 1 1239 5
 1845 0058 FB68     		ldr	r3, [r7, #12]
 1846 005a 9B68     		ldr	r3, [r3, #8]
 1847 005c B3F5805F 		cmp	r3, #4096
 1848 0060 0ED1     		bne	.L68
ARM GAS  /tmp/ccMjAmt3.s 			page 55


 1849              		.loc 1 1239 5 is_stmt 0 discriminator 1
 1850 0062 FB68     		ldr	r3, [r7, #12]
 1851 0064 1B69     		ldr	r3, [r3, #16]
 1852 0066 002B     		cmp	r3, #0
 1853 0068 05D1     		bne	.L69
 1854              		.loc 1 1239 5 discriminator 3
 1855 006a FB68     		ldr	r3, [r7, #12]
 1856 006c 40F2FF12 		movw	r2, #511
 1857 0070 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1858 0074 2DE0     		b	.L70
 1859              	.L69:
 1860              		.loc 1 1239 5 discriminator 4
 1861 0076 FB68     		ldr	r3, [r7, #12]
 1862 0078 FF22     		movs	r2, #255
 1863 007a A3F86020 		strh	r2, [r3, #96]	@ movhi
 1864 007e 28E0     		b	.L70
 1865              	.L68:
 1866              		.loc 1 1239 5 discriminator 2
 1867 0080 FB68     		ldr	r3, [r7, #12]
 1868 0082 9B68     		ldr	r3, [r3, #8]
 1869 0084 002B     		cmp	r3, #0
 1870 0086 0DD1     		bne	.L71
 1871              		.loc 1 1239 5 discriminator 5
 1872 0088 FB68     		ldr	r3, [r7, #12]
 1873 008a 1B69     		ldr	r3, [r3, #16]
 1874 008c 002B     		cmp	r3, #0
 1875 008e 04D1     		bne	.L72
 1876              		.loc 1 1239 5 discriminator 7
 1877 0090 FB68     		ldr	r3, [r7, #12]
 1878 0092 FF22     		movs	r2, #255
 1879 0094 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1880 0098 1BE0     		b	.L70
 1881              	.L72:
 1882              		.loc 1 1239 5 discriminator 8
 1883 009a FB68     		ldr	r3, [r7, #12]
 1884 009c 7F22     		movs	r2, #127
 1885 009e A3F86020 		strh	r2, [r3, #96]	@ movhi
 1886 00a2 16E0     		b	.L70
 1887              	.L71:
 1888              		.loc 1 1239 5 discriminator 6
 1889 00a4 FB68     		ldr	r3, [r7, #12]
 1890 00a6 9B68     		ldr	r3, [r3, #8]
 1891 00a8 B3F1805F 		cmp	r3, #268435456
 1892 00ac 0DD1     		bne	.L73
 1893              		.loc 1 1239 5 discriminator 9
 1894 00ae FB68     		ldr	r3, [r7, #12]
 1895 00b0 1B69     		ldr	r3, [r3, #16]
 1896 00b2 002B     		cmp	r3, #0
 1897 00b4 04D1     		bne	.L74
 1898              		.loc 1 1239 5 discriminator 11
 1899 00b6 FB68     		ldr	r3, [r7, #12]
 1900 00b8 7F22     		movs	r2, #127
 1901 00ba A3F86020 		strh	r2, [r3, #96]	@ movhi
 1902 00be 08E0     		b	.L70
 1903              	.L74:
 1904              		.loc 1 1239 5 discriminator 12
 1905 00c0 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccMjAmt3.s 			page 56


 1906 00c2 3F22     		movs	r2, #63
 1907 00c4 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1908 00c8 03E0     		b	.L70
 1909              	.L73:
 1910              		.loc 1 1239 5 discriminator 10
 1911 00ca FB68     		ldr	r3, [r7, #12]
 1912 00cc 0022     		movs	r2, #0
 1913 00ce A3F86020 		strh	r2, [r3, #96]	@ movhi
 1914              	.L70:
1240:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     uhMask = huart->Mask;
 1915              		.loc 1 1240 12 is_stmt 1
 1916 00d2 FB68     		ldr	r3, [r7, #12]
 1917 00d4 B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 1918 00d8 7B82     		strh	r3, [r7, #18]	@ movhi
1241:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1242:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1243:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1919              		.loc 1 1243 21
 1920 00da FB68     		ldr	r3, [r7, #12]
 1921 00dc 9B68     		ldr	r3, [r3, #8]
 1922              		.loc 1 1243 8
 1923 00de B3F5805F 		cmp	r3, #4096
 1924 00e2 08D1     		bne	.L75
 1925              		.loc 1 1243 71 discriminator 1
 1926 00e4 FB68     		ldr	r3, [r7, #12]
 1927 00e6 1B69     		ldr	r3, [r3, #16]
 1928              		.loc 1 1243 56 discriminator 1
 1929 00e8 002B     		cmp	r3, #0
 1930 00ea 04D1     		bne	.L75
1244:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1245:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       pdata8bits  = NULL;
 1931              		.loc 1 1245 19
 1932 00ec 0023     		movs	r3, #0
 1933 00ee FB61     		str	r3, [r7, #28]
1246:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1934              		.loc 1 1246 19
 1935 00f0 BB68     		ldr	r3, [r7, #8]
 1936 00f2 BB61     		str	r3, [r7, #24]
 1937 00f4 03E0     		b	.L76
 1938              	.L75:
1247:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1248:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
1249:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1250:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       pdata8bits  = pData;
 1939              		.loc 1 1250 19
 1940 00f6 BB68     		ldr	r3, [r7, #8]
 1941 00f8 FB61     		str	r3, [r7, #28]
1251:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       pdata16bits = NULL;
 1942              		.loc 1 1251 19
 1943 00fa 0023     		movs	r3, #0
 1944 00fc BB61     		str	r3, [r7, #24]
 1945              	.L76:
1252:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1253:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1254:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* as long as data have to be received */
1255:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1946              		.loc 1 1255 11
ARM GAS  /tmp/ccMjAmt3.s 			page 57


 1947 00fe 36E0     		b	.L77
 1948              	.L81:
1256:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1257:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1949              		.loc 1 1257 11
 1950 0100 3B68     		ldr	r3, [r7]
 1951 0102 0093     		str	r3, [sp]
 1952 0104 7B69     		ldr	r3, [r7, #20]
 1953 0106 0022     		movs	r2, #0
 1954 0108 2021     		movs	r1, #32
 1955 010a F868     		ldr	r0, [r7, #12]
 1956 010c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1957 0110 0346     		mov	r3, r0
 1958              		.loc 1 1257 10 discriminator 1
 1959 0112 002B     		cmp	r3, #0
 1960 0114 05D0     		beq	.L78
1258:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1259:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1961              		.loc 1 1259 24
 1962 0116 FB68     		ldr	r3, [r7, #12]
 1963 0118 2022     		movs	r2, #32
 1964 011a C3F88C20 		str	r2, [r3, #140]
1260:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1261:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         return HAL_TIMEOUT;
 1965              		.loc 1 1261 16
 1966 011e 0323     		movs	r3, #3
 1967 0120 32E0     		b	.L67
 1968              	.L78:
1262:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1263:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (pdata8bits == NULL)
 1969              		.loc 1 1263 10
 1970 0122 FB69     		ldr	r3, [r7, #28]
 1971 0124 002B     		cmp	r3, #0
 1972 0126 0CD1     		bne	.L79
1264:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1265:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1973              		.loc 1 1265 40
 1974 0128 FB68     		ldr	r3, [r7, #12]
 1975 012a 1B68     		ldr	r3, [r3]
 1976              		.loc 1 1265 50
 1977 012c 5B6A     		ldr	r3, [r3, #36]
 1978              		.loc 1 1265 24
 1979 012e 9AB2     		uxth	r2, r3
 1980 0130 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1981 0132 1340     		ands	r3, r3, r2
 1982 0134 9AB2     		uxth	r2, r3
 1983              		.loc 1 1265 22
 1984 0136 BB69     		ldr	r3, [r7, #24]
 1985 0138 1A80     		strh	r2, [r3]	@ movhi
1266:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         pdata16bits++;
 1986              		.loc 1 1266 20
 1987 013a BB69     		ldr	r3, [r7, #24]
 1988 013c 0233     		adds	r3, r3, #2
 1989 013e BB61     		str	r3, [r7, #24]
 1990 0140 0CE0     		b	.L80
 1991              	.L79:
1267:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
ARM GAS  /tmp/ccMjAmt3.s 			page 58


1268:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
1269:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1270:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1992              		.loc 1 1270 38
 1993 0142 FB68     		ldr	r3, [r7, #12]
 1994 0144 1B68     		ldr	r3, [r3]
 1995              		.loc 1 1270 48
 1996 0146 5B6A     		ldr	r3, [r3, #36]
 1997              		.loc 1 1270 23
 1998 0148 DAB2     		uxtb	r2, r3
 1999              		.loc 1 1270 56
 2000 014a 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 2001 014c DBB2     		uxtb	r3, r3
 2002              		.loc 1 1270 23
 2003 014e 1340     		ands	r3, r3, r2
 2004 0150 DAB2     		uxtb	r2, r3
 2005              		.loc 1 1270 21
 2006 0152 FB69     		ldr	r3, [r7, #28]
 2007 0154 1A70     		strb	r2, [r3]
1271:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         pdata8bits++;
 2008              		.loc 1 1271 19
 2009 0156 FB69     		ldr	r3, [r7, #28]
 2010 0158 0133     		adds	r3, r3, #1
 2011 015a FB61     		str	r3, [r7, #28]
 2012              	.L80:
1272:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1273:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxXferCount--;
 2013              		.loc 1 1273 12
 2014 015c FB68     		ldr	r3, [r7, #12]
 2015 015e B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 2016 0162 9BB2     		uxth	r3, r3
 2017              		.loc 1 1273 25
 2018 0164 013B     		subs	r3, r3, #1
 2019 0166 9AB2     		uxth	r2, r3
 2020 0168 FB68     		ldr	r3, [r7, #12]
 2021 016a A3F85E20 		strh	r2, [r3, #94]	@ movhi
 2022              	.L77:
1255:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 2023              		.loc 1 1255 17
 2024 016e FB68     		ldr	r3, [r7, #12]
 2025 0170 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 2026 0174 9BB2     		uxth	r3, r3
1255:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 2027              		.loc 1 1255 31
 2028 0176 002B     		cmp	r3, #0
 2029 0178 C2D1     		bne	.L81
1274:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1275:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1276:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1277:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2030              		.loc 1 1277 20
 2031 017a FB68     		ldr	r3, [r7, #12]
 2032 017c 2022     		movs	r2, #32
 2033 017e C3F88C20 		str	r2, [r3, #140]
1278:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1279:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_OK;
 2034              		.loc 1 1279 12
ARM GAS  /tmp/ccMjAmt3.s 			page 59


 2035 0182 0023     		movs	r3, #0
 2036 0184 00E0     		b	.L67
 2037              	.L64:
1280:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1281:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
1282:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1283:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_BUSY;
 2038              		.loc 1 1283 12
 2039 0186 0223     		movs	r3, #2
 2040              	.L67:
1284:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1285:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 2041              		.loc 1 1285 1
 2042 0188 1846     		mov	r0, r3
 2043 018a 2037     		adds	r7, r7, #32
 2044              		.cfi_def_cfa_offset 8
 2045 018c BD46     		mov	sp, r7
 2046              		.cfi_def_cfa_register 13
 2047              		@ sp needed
 2048 018e 80BD     		pop	{r7, pc}
 2049              		.cfi_endproc
 2050              	.LFE843:
 2052              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 2053              		.align	1
 2054              		.global	HAL_UART_Transmit_IT
 2055              		.syntax unified
 2056              		.thumb
 2057              		.thumb_func
 2059              	HAL_UART_Transmit_IT:
 2060              	.LFB844:
1286:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1287:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1288:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1289:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1290:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1291:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         of u16 provided through pData.
1292:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
1293:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1294:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1295:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1296:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1297:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1298:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 2061              		.loc 1 1298 1
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 64
 2064              		@ frame_needed = 1, uses_anonymous_args = 0
 2065              		@ link register save eliminated.
 2066 0000 80B4     		push	{r7}
 2067              		.cfi_def_cfa_offset 4
 2068              		.cfi_offset 7, -4
 2069 0002 91B0     		sub	sp, sp, #68
 2070              		.cfi_def_cfa_offset 72
 2071 0004 00AF     		add	r7, sp, #0
 2072              		.cfi_def_cfa_register 7
 2073 0006 F860     		str	r0, [r7, #12]
 2074 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccMjAmt3.s 			page 60


 2075 000a 1346     		mov	r3, r2
 2076 000c FB80     		strh	r3, [r7, #6]	@ movhi
1299:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1300:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 2077              		.loc 1 1300 12
 2078 000e FB68     		ldr	r3, [r7, #12]
 2079 0010 D3F88830 		ldr	r3, [r3, #136]
 2080              		.loc 1 1300 6
 2081 0014 202B     		cmp	r3, #32
 2082 0016 78D1     		bne	.L83
1301:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1302:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2083              		.loc 1 1302 8
 2084 0018 BB68     		ldr	r3, [r7, #8]
 2085 001a 002B     		cmp	r3, #0
 2086 001c 02D0     		beq	.L84
 2087              		.loc 1 1302 25 discriminator 1
 2088 001e FB88     		ldrh	r3, [r7, #6]
 2089 0020 002B     		cmp	r3, #0
 2090 0022 01D1     		bne	.L85
 2091              	.L84:
1303:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1304:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_ERROR;
 2092              		.loc 1 1304 14
 2093 0024 0123     		movs	r3, #1
 2094 0026 71E0     		b	.L86
 2095              	.L85:
1305:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1306:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1307:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 2096              		.loc 1 1307 24
 2097 0028 FB68     		ldr	r3, [r7, #12]
 2098 002a BA68     		ldr	r2, [r7, #8]
 2099 002c 1A65     		str	r2, [r3, #80]
1308:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxXferSize  = Size;
 2100              		.loc 1 1308 24
 2101 002e FB68     		ldr	r3, [r7, #12]
 2102 0030 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2103 0032 A3F85420 		strh	r2, [r3, #84]	@ movhi
1309:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxXferCount = Size;
 2104              		.loc 1 1309 24
 2105 0036 FB68     		ldr	r3, [r7, #12]
 2106 0038 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2107 003a A3F85620 		strh	r2, [r3, #86]	@ movhi
1310:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxISR       = NULL;
 2108              		.loc 1 1310 24
 2109 003e FB68     		ldr	r3, [r7, #12]
 2110 0040 0022     		movs	r2, #0
 2111 0042 9A67     		str	r2, [r3, #120]
1311:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1312:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2112              		.loc 1 1312 22
 2113 0044 FB68     		ldr	r3, [r7, #12]
 2114 0046 0022     		movs	r2, #0
 2115 0048 C3F89020 		str	r2, [r3, #144]
1313:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2116              		.loc 1 1313 19
ARM GAS  /tmp/ccMjAmt3.s 			page 61


 2117 004c FB68     		ldr	r3, [r7, #12]
 2118 004e 2122     		movs	r2, #33
 2119 0050 C3F88820 		str	r2, [r3, #136]
1314:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1315:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1316:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 2120              		.loc 1 1316 14
 2121 0054 FB68     		ldr	r3, [r7, #12]
 2122 0056 5B6E     		ldr	r3, [r3, #100]
 2123              		.loc 1 1316 8
 2124 0058 B3F1005F 		cmp	r3, #536870912
 2125 005c 2AD1     		bne	.L87
1317:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1318:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1319:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 2126              		.loc 1 1319 23
 2127 005e FB68     		ldr	r3, [r7, #12]
 2128 0060 9B68     		ldr	r3, [r3, #8]
 2129              		.loc 1 1319 10
 2130 0062 B3F5805F 		cmp	r3, #4096
 2131 0066 07D1     		bne	.L88
 2132              		.loc 1 1319 73 discriminator 1
 2133 0068 FB68     		ldr	r3, [r7, #12]
 2134 006a 1B69     		ldr	r3, [r3, #16]
 2135              		.loc 1 1319 58 discriminator 1
 2136 006c 002B     		cmp	r3, #0
 2137 006e 03D1     		bne	.L88
1320:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1321:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
 2138              		.loc 1 1321 22
 2139 0070 FB68     		ldr	r3, [r7, #12]
 2140 0072 294A     		ldr	r2, .L99
 2141 0074 9A67     		str	r2, [r3, #120]
 2142 0076 02E0     		b	.L92
 2143              	.L88:
1322:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1323:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
1324:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1325:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
 2144              		.loc 1 1325 22
 2145 0078 FB68     		ldr	r3, [r7, #12]
 2146 007a 284A     		ldr	r2, .L99+4
 2147 007c 9A67     		str	r2, [r3, #120]
 2148              	.L92:
 2149              	.LBB505:
1326:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1327:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1328:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1329:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 2150              		.loc 1 1329 7 discriminator 1
 2151 007e FB68     		ldr	r3, [r7, #12]
 2152 0080 1B68     		ldr	r3, [r3]
 2153 0082 0833     		adds	r3, r3, #8
 2154 0084 BB62     		str	r3, [r7, #40]
 2155              	.LBB506:
 2156              	.LBB507:
 2157              		.file 2 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  /tmp/ccMjAmt3.s 			page 62


   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccMjAmt3.s 			page 63


  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
ARM GAS  /tmp/ccMjAmt3.s 			page 64


 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccMjAmt3.s 			page 65


 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
ARM GAS  /tmp/ccMjAmt3.s 			page 66


 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 67


 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
ARM GAS  /tmp/ccMjAmt3.s 			page 68


 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
ARM GAS  /tmp/ccMjAmt3.s 			page 69


 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  /tmp/ccMjAmt3.s 			page 70


 457:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 2158              		.loc 2 480 4
 2159 0086 BB6A     		ldr	r3, [r7, #40]
 2160              		.syntax unified
 2161              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2162 0088 53E8003F 		ldrex r3, [r3]
 2163              	@ 0 "" 2
 2164              		.thumb
 2165              		.syntax unified
 2166 008c 7B62     		str	r3, [r7, #36]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2167              		.loc 2 481 10
 2168 008e 7B6A     		ldr	r3, [r7, #36]
 2169              	.LBE507:
 2170              	.LBE506:
 2171              		.loc 1 1329 7 discriminator 1
 2172 0090 43F40003 		orr	r3, r3, #8388608
 2173 0094 BB63     		str	r3, [r7, #56]
 2174 0096 FB68     		ldr	r3, [r7, #12]
 2175 0098 1B68     		ldr	r3, [r3]
 2176 009a 0833     		adds	r3, r3, #8
 2177 009c BA6B     		ldr	r2, [r7, #56]
 2178 009e 7A63     		str	r2, [r7, #52]
 2179 00a0 3B63     		str	r3, [r7, #48]
 2180              	.LBB508:
 2181              	.LBB509:
 482:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /tmp/ccMjAmt3.s 			page 71


 490:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 2182              		.loc 2 531 4
 2183 00a2 396B     		ldr	r1, [r7, #48]
 2184 00a4 7A6B     		ldr	r2, [r7, #52]
 2185              		.syntax unified
 2186              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2187 00a6 41E80023 		strex r3, r2, [r1]
 2188              	@ 0 "" 2
 2189              		.thumb
 2190              		.syntax unified
 2191 00aa FB62     		str	r3, [r7, #44]
 532:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2192              		.loc 2 532 10
 2193 00ac FB6A     		ldr	r3, [r7, #44]
 2194              	.LBE509:
 2195              	.LBE508:
ARM GAS  /tmp/ccMjAmt3.s 			page 72


 2196              		.loc 1 1329 7 discriminator 1
 2197 00ae 002B     		cmp	r3, #0
 2198 00b0 E5D1     		bne	.L92
 2199 00b2 28E0     		b	.L93
 2200              	.L87:
 2201              	.LBE505:
1330:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1331:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
1332:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1333:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1334:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 2202              		.loc 1 1334 23
 2203 00b4 FB68     		ldr	r3, [r7, #12]
 2204 00b6 9B68     		ldr	r3, [r3, #8]
 2205              		.loc 1 1334 10
 2206 00b8 B3F5805F 		cmp	r3, #4096
 2207 00bc 07D1     		bne	.L94
 2208              		.loc 1 1334 73 discriminator 1
 2209 00be FB68     		ldr	r3, [r7, #12]
 2210 00c0 1B69     		ldr	r3, [r3, #16]
 2211              		.loc 1 1334 58 discriminator 1
 2212 00c2 002B     		cmp	r3, #0
 2213 00c4 03D1     		bne	.L94
1335:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1336:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
 2214              		.loc 1 1336 22
 2215 00c6 FB68     		ldr	r3, [r7, #12]
 2216 00c8 154A     		ldr	r2, .L99+8
 2217 00ca 9A67     		str	r2, [r3, #120]
 2218 00cc 02E0     		b	.L98
 2219              	.L94:
1337:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1338:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
1339:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1340:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
 2220              		.loc 1 1340 22
 2221 00ce FB68     		ldr	r3, [r7, #12]
 2222 00d0 144A     		ldr	r2, .L99+12
 2223 00d2 9A67     		str	r2, [r3, #120]
 2224              	.L98:
 2225              	.LBB510:
1341:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1342:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1343:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1344:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 2226              		.loc 1 1344 7 discriminator 1
 2227 00d4 FB68     		ldr	r3, [r7, #12]
 2228 00d6 1B68     		ldr	r3, [r3]
 2229 00d8 7B61     		str	r3, [r7, #20]
 2230              	.LBB511:
 2231              	.LBB512:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2232              		.loc 2 480 4
 2233 00da 7B69     		ldr	r3, [r7, #20]
 2234              		.syntax unified
 2235              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2236 00dc 53E8003F 		ldrex r3, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 73


 2237              	@ 0 "" 2
 2238              		.thumb
 2239              		.syntax unified
 2240 00e0 3B61     		str	r3, [r7, #16]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2241              		.loc 2 481 10
 2242 00e2 3B69     		ldr	r3, [r7, #16]
 2243              	.LBE512:
 2244              	.LBE511:
 2245              		.loc 1 1344 7 discriminator 1
 2246 00e4 43F08003 		orr	r3, r3, #128
 2247 00e8 FB63     		str	r3, [r7, #60]
 2248 00ea FB68     		ldr	r3, [r7, #12]
 2249 00ec 1B68     		ldr	r3, [r3]
 2250 00ee 1A46     		mov	r2, r3
 2251 00f0 FB6B     		ldr	r3, [r7, #60]
 2252 00f2 3B62     		str	r3, [r7, #32]
 2253 00f4 FA61     		str	r2, [r7, #28]
 2254              	.LBB513:
 2255              	.LBB514:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2256              		.loc 2 531 4
 2257 00f6 F969     		ldr	r1, [r7, #28]
 2258 00f8 3A6A     		ldr	r2, [r7, #32]
 2259              		.syntax unified
 2260              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2261 00fa 41E80023 		strex r3, r2, [r1]
 2262              	@ 0 "" 2
 2263              		.thumb
 2264              		.syntax unified
 2265 00fe BB61     		str	r3, [r7, #24]
 2266              		.loc 2 532 10
 2267 0100 BB69     		ldr	r3, [r7, #24]
 2268              	.LBE514:
 2269              	.LBE513:
 2270              		.loc 1 1344 7 discriminator 1
 2271 0102 002B     		cmp	r3, #0
 2272 0104 E6D1     		bne	.L98
 2273              	.L93:
 2274              	.LBE510:
1345:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1346:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1347:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_OK;
 2275              		.loc 1 1347 12
 2276 0106 0023     		movs	r3, #0
 2277 0108 00E0     		b	.L86
 2278              	.L83:
1348:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1349:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
1350:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1351:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_BUSY;
 2279              		.loc 1 1351 12
 2280 010a 0223     		movs	r3, #2
 2281              	.L86:
1352:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1353:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 2282              		.loc 1 1353 1
ARM GAS  /tmp/ccMjAmt3.s 			page 74


 2283 010c 1846     		mov	r0, r3
 2284 010e 4437     		adds	r7, r7, #68
 2285              		.cfi_def_cfa_offset 4
 2286 0110 BD46     		mov	sp, r7
 2287              		.cfi_def_cfa_register 13
 2288              		@ sp needed
 2289 0112 5DF8047B 		ldr	r7, [sp], #4
 2290              		.cfi_restore 7
 2291              		.cfi_def_cfa_offset 0
 2292 0116 7047     		bx	lr
 2293              	.L100:
 2294              		.align	2
 2295              	.L99:
 2296 0118 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 2297 011c 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 2298 0120 00000000 		.word	UART_TxISR_16BIT
 2299 0124 00000000 		.word	UART_TxISR_8BIT
 2300              		.cfi_endproc
 2301              	.LFE844:
 2303              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 2304              		.align	1
 2305              		.global	HAL_UART_Receive_IT
 2306              		.syntax unified
 2307              		.thumb
 2308              		.thumb_func
 2310              	HAL_UART_Receive_IT:
 2311              	.LFB845:
1354:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1355:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1356:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1357:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1358:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1359:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         of u16 available through pData.
1360:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
1361:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1362:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1363:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1364:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1365:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1366:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 2312              		.loc 1 1366 1
 2313              		.cfi_startproc
 2314              		@ args = 0, pretend = 0, frame = 40
 2315              		@ frame_needed = 1, uses_anonymous_args = 0
 2316 0000 80B5     		push	{r7, lr}
 2317              		.cfi_def_cfa_offset 8
 2318              		.cfi_offset 7, -8
 2319              		.cfi_offset 14, -4
 2320 0002 8AB0     		sub	sp, sp, #40
 2321              		.cfi_def_cfa_offset 48
 2322 0004 00AF     		add	r7, sp, #0
 2323              		.cfi_def_cfa_register 7
 2324 0006 F860     		str	r0, [r7, #12]
 2325 0008 B960     		str	r1, [r7, #8]
 2326 000a 1346     		mov	r3, r2
 2327 000c FB80     		strh	r3, [r7, #6]	@ movhi
1367:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
ARM GAS  /tmp/ccMjAmt3.s 			page 75


1368:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2328              		.loc 1 1368 12
 2329 000e FB68     		ldr	r3, [r7, #12]
 2330 0010 D3F88C30 		ldr	r3, [r3, #140]
 2331              		.loc 1 1368 6
 2332 0014 202B     		cmp	r3, #32
 2333 0016 3CD1     		bne	.L102
1369:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1370:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2334              		.loc 1 1370 8
 2335 0018 BB68     		ldr	r3, [r7, #8]
 2336 001a 002B     		cmp	r3, #0
 2337 001c 02D0     		beq	.L103
 2338              		.loc 1 1370 25 discriminator 1
 2339 001e FB88     		ldrh	r3, [r7, #6]
 2340 0020 002B     		cmp	r3, #0
 2341 0022 01D1     		bne	.L104
 2342              	.L103:
1371:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1372:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_ERROR;
 2343              		.loc 1 1372 14
 2344 0024 0123     		movs	r3, #1
 2345 0026 35E0     		b	.L105
 2346              	.L104:
1373:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1374:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1375:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1376:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2347              		.loc 1 1376 26
 2348 0028 FB68     		ldr	r3, [r7, #12]
 2349 002a 0022     		movs	r2, #0
 2350 002c DA66     		str	r2, [r3, #108]
1377:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1378:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
 2351              		.loc 1 1378 11
 2352 002e FB68     		ldr	r3, [r7, #12]
 2353 0030 1B68     		ldr	r3, [r3]
 2354              		.loc 1 1378 8
 2355 0032 1A4A     		ldr	r2, .L110
 2356 0034 9342     		cmp	r3, r2
 2357 0036 24D0     		beq	.L106
 2358              		.loc 1 1378 11 discriminator 1
 2359 0038 FB68     		ldr	r3, [r7, #12]
 2360 003a 1B68     		ldr	r3, [r3]
 2361              		.loc 1 1378 9 discriminator 1
 2362 003c 184A     		ldr	r2, .L110+4
 2363 003e 9342     		cmp	r3, r2
 2364 0040 1FD0     		beq	.L106
1379:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1380:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1381:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 2365              		.loc 1 1381 11
 2366 0042 FB68     		ldr	r3, [r7, #12]
 2367 0044 1B68     		ldr	r3, [r3]
 2368 0046 5B68     		ldr	r3, [r3, #4]
 2369 0048 03F40003 		and	r3, r3, #8388608
 2370              		.loc 1 1381 10
ARM GAS  /tmp/ccMjAmt3.s 			page 76


 2371 004c 002B     		cmp	r3, #0
 2372 004e 18D0     		beq	.L106
 2373              	.L109:
 2374              	.LBB515:
1382:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1383:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1384:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 2375              		.loc 1 1384 9 discriminator 1
 2376 0050 FB68     		ldr	r3, [r7, #12]
 2377 0052 1B68     		ldr	r3, [r3]
 2378 0054 7B61     		str	r3, [r7, #20]
 2379              	.LBB516:
 2380              	.LBB517:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2381              		.loc 2 480 4
 2382 0056 7B69     		ldr	r3, [r7, #20]
 2383              		.syntax unified
 2384              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2385 0058 53E8003F 		ldrex r3, [r3]
 2386              	@ 0 "" 2
 2387              		.thumb
 2388              		.syntax unified
 2389 005c 3B61     		str	r3, [r7, #16]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2390              		.loc 2 481 10
 2391 005e 3B69     		ldr	r3, [r7, #16]
 2392              	.LBE517:
 2393              	.LBE516:
 2394              		.loc 1 1384 9 discriminator 1
 2395 0060 43F08063 		orr	r3, r3, #67108864
 2396 0064 7B62     		str	r3, [r7, #36]
 2397 0066 FB68     		ldr	r3, [r7, #12]
 2398 0068 1B68     		ldr	r3, [r3]
 2399 006a 1A46     		mov	r2, r3
 2400 006c 7B6A     		ldr	r3, [r7, #36]
 2401 006e 3B62     		str	r3, [r7, #32]
 2402 0070 FA61     		str	r2, [r7, #28]
 2403              	.LBB518:
 2404              	.LBB519:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2405              		.loc 2 531 4
 2406 0072 F969     		ldr	r1, [r7, #28]
 2407 0074 3A6A     		ldr	r2, [r7, #32]
 2408              		.syntax unified
 2409              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2410 0076 41E80023 		strex r3, r2, [r1]
 2411              	@ 0 "" 2
 2412              		.thumb
 2413              		.syntax unified
 2414 007a BB61     		str	r3, [r7, #24]
 2415              		.loc 2 532 10
 2416 007c BB69     		ldr	r3, [r7, #24]
 2417              	.LBE519:
 2418              	.LBE518:
 2419              		.loc 1 1384 9 discriminator 1
 2420 007e 002B     		cmp	r3, #0
 2421 0080 E6D1     		bne	.L109
ARM GAS  /tmp/ccMjAmt3.s 			page 77


 2422              	.L106:
 2423              	.LBE515:
1385:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1386:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1387:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1388:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 2424              		.loc 1 1388 13
 2425 0082 FB88     		ldrh	r3, [r7, #6]
 2426 0084 1A46     		mov	r2, r3
 2427 0086 B968     		ldr	r1, [r7, #8]
 2428 0088 F868     		ldr	r0, [r7, #12]
 2429 008a FFF7FEFF 		bl	UART_Start_Receive_IT
 2430 008e 0346     		mov	r3, r0
 2431 0090 00E0     		b	.L105
 2432              	.L102:
1389:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1390:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
1391:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1392:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_BUSY;
 2433              		.loc 1 1392 12
 2434 0092 0223     		movs	r3, #2
 2435              	.L105:
1393:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1394:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 2436              		.loc 1 1394 1
 2437 0094 1846     		mov	r0, r3
 2438 0096 2837     		adds	r7, r7, #40
 2439              		.cfi_def_cfa_offset 8
 2440 0098 BD46     		mov	sp, r7
 2441              		.cfi_def_cfa_register 13
 2442              		@ sp needed
 2443 009a 80BD     		pop	{r7, pc}
 2444              	.L111:
 2445              		.align	2
 2446              	.L110:
 2447 009c 000C0056 		.word	1442843648
 2448 00a0 000C0046 		.word	1174408192
 2449              		.cfi_endproc
 2450              	.LFE845:
 2452              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 2453              		.align	1
 2454              		.global	HAL_UART_Transmit_DMA
 2455              		.syntax unified
 2456              		.thumb
 2457              		.thumb_func
 2459              	HAL_UART_Transmit_DMA:
 2460              	.LFB846:
1395:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1396:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
1397:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1398:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1399:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1400:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1401:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         of u16 provided through pData.
1402:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
1403:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1404:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
ARM GAS  /tmp/ccMjAmt3.s 			page 78


1405:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1406:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1407:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1408:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 2461              		.loc 1 1408 1
 2462              		.cfi_startproc
 2463              		@ args = 0, pretend = 0, frame = 48
 2464              		@ frame_needed = 1, uses_anonymous_args = 0
 2465 0000 80B5     		push	{r7, lr}
 2466              		.cfi_def_cfa_offset 8
 2467              		.cfi_offset 7, -8
 2468              		.cfi_offset 14, -4
 2469 0002 8CB0     		sub	sp, sp, #48
 2470              		.cfi_def_cfa_offset 56
 2471 0004 00AF     		add	r7, sp, #0
 2472              		.cfi_def_cfa_register 7
 2473 0006 F860     		str	r0, [r7, #12]
 2474 0008 B960     		str	r1, [r7, #8]
 2475 000a 1346     		mov	r3, r2
 2476 000c FB80     		strh	r3, [r7, #6]	@ movhi
1409:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_StatusTypeDef status;
1410:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t nbByte = Size;
 2477              		.loc 1 1410 12
 2478 000e FB88     		ldrh	r3, [r7, #6]	@ movhi
 2479 0010 BB85     		strh	r3, [r7, #44]	@ movhi
1411:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1412:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1413:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 2480              		.loc 1 1413 12
 2481 0012 FB68     		ldr	r3, [r7, #12]
 2482 0014 D3F88830 		ldr	r3, [r3, #136]
 2483              		.loc 1 1413 6
 2484 0018 202B     		cmp	r3, #32
 2485 001a 40F0AD80 		bne	.L113
1414:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1415:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2486              		.loc 1 1415 8
 2487 001e BB68     		ldr	r3, [r7, #8]
 2488 0020 002B     		cmp	r3, #0
 2489 0022 02D0     		beq	.L114
 2490              		.loc 1 1415 25 discriminator 1
 2491 0024 FB88     		ldrh	r3, [r7, #6]
 2492 0026 002B     		cmp	r3, #0
 2493 0028 01D1     		bne	.L115
 2494              	.L114:
1416:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1417:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_ERROR;
 2495              		.loc 1 1417 14
 2496 002a 0123     		movs	r3, #1
 2497 002c A5E0     		b	.L116
 2498              	.L115:
1418:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1419:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1420:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 2499              		.loc 1 1420 24
 2500 002e FB68     		ldr	r3, [r7, #12]
 2501 0030 BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccMjAmt3.s 			page 79


 2502 0032 1A65     		str	r2, [r3, #80]
1421:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxXferSize  = Size;
 2503              		.loc 1 1421 24
 2504 0034 FB68     		ldr	r3, [r7, #12]
 2505 0036 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2506 0038 A3F85420 		strh	r2, [r3, #84]	@ movhi
1422:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxXferCount = Size;
 2507              		.loc 1 1422 24
 2508 003c FB68     		ldr	r3, [r7, #12]
 2509 003e FA88     		ldrh	r2, [r7, #6]	@ movhi
 2510 0040 A3F85620 		strh	r2, [r3, #86]	@ movhi
1423:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1424:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2511              		.loc 1 1424 22
 2512 0044 FB68     		ldr	r3, [r7, #12]
 2513 0046 0022     		movs	r2, #0
 2514 0048 C3F89020 		str	r2, [r3, #144]
1425:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2515              		.loc 1 1425 19
 2516 004c FB68     		ldr	r3, [r7, #12]
 2517 004e 2122     		movs	r2, #33
 2518 0050 C3F88820 		str	r2, [r3, #136]
1426:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1427:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2519              		.loc 1 1427 14
 2520 0054 FB68     		ldr	r3, [r7, #12]
 2521 0056 DB6F     		ldr	r3, [r3, #124]
 2522              		.loc 1 1427 8
 2523 0058 002B     		cmp	r3, #0
 2524 005a 6DD0     		beq	.L117
1428:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1429:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1430:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 2525              		.loc 1 1430 12
 2526 005c FB68     		ldr	r3, [r7, #12]
 2527 005e DB6F     		ldr	r3, [r3, #124]
 2528              		.loc 1 1430 39
 2529 0060 484A     		ldr	r2, .L126
 2530 0062 1A66     		str	r2, [r3, #96]
1431:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1432:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1433:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 2531              		.loc 1 1433 12
 2532 0064 FB68     		ldr	r3, [r7, #12]
 2533 0066 DB6F     		ldr	r3, [r3, #124]
 2534              		.loc 1 1433 43
 2535 0068 474A     		ldr	r2, .L126+4
 2536 006a 5A66     		str	r2, [r3, #100]
1434:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1435:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the DMA error callback */
1436:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 2537              		.loc 1 1436 12
 2538 006c FB68     		ldr	r3, [r7, #12]
 2539 006e DB6F     		ldr	r3, [r3, #124]
 2540              		.loc 1 1436 40
 2541 0070 464A     		ldr	r2, .L126+8
 2542 0072 9A66     		str	r2, [r3, #104]
ARM GAS  /tmp/ccMjAmt3.s 			page 80


1437:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1438:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the DMA abort callback */
1439:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2543              		.loc 1 1439 12
 2544 0074 FB68     		ldr	r3, [r7, #12]
 2545 0076 DB6F     		ldr	r3, [r3, #124]
 2546              		.loc 1 1439 40
 2547 0078 0022     		movs	r2, #0
 2548 007a DA66     		str	r2, [r3, #108]
1440:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1441:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1442:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          should be aligned on a u16 frontier, so nbByte should be equal to Size * 2 */
1443:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 2549              		.loc 1 1443 23
 2550 007c FB68     		ldr	r3, [r7, #12]
 2551 007e 9B68     		ldr	r3, [r3, #8]
 2552              		.loc 1 1443 10
 2553 0080 B3F5805F 		cmp	r3, #4096
 2554 0084 06D1     		bne	.L118
 2555              		.loc 1 1443 73 discriminator 1
 2556 0086 FB68     		ldr	r3, [r7, #12]
 2557 0088 1B69     		ldr	r3, [r3, #16]
 2558              		.loc 1 1443 58 discriminator 1
 2559 008a 002B     		cmp	r3, #0
 2560 008c 02D1     		bne	.L118
1444:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1445:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         nbByte = Size * 2U;
 2561              		.loc 1 1445 16
 2562 008e FB88     		ldrh	r3, [r7, #6]	@ movhi
 2563 0090 5B00     		lsls	r3, r3, #1
 2564 0092 BB85     		strh	r3, [r7, #44]	@ movhi
 2565              	.L118:
1446:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1447:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1448:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Check linked list mode */
1449:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((huart->hdmatx->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 2566              		.loc 1 1449 17
 2567 0094 FB68     		ldr	r3, [r7, #12]
 2568 0096 DB6F     		ldr	r3, [r3, #124]
 2569              		.loc 1 1449 25
 2570 0098 1B6D     		ldr	r3, [r3, #80]
 2571              		.loc 1 1449 32
 2572 009a 03F08003 		and	r3, r3, #128
 2573              		.loc 1 1449 10
 2574 009e 002B     		cmp	r3, #0
 2575 00a0 2DD0     		beq	.L119
1450:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1451:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if ((huart->hdmatx->LinkedListQueue != NULL) && (huart->hdmatx->LinkedListQueue->Head != NU
 2576              		.loc 1 1451 19
 2577 00a2 FB68     		ldr	r3, [r7, #12]
 2578 00a4 DB6F     		ldr	r3, [r3, #124]
 2579              		.loc 1 1451 27
 2580 00a6 5B6F     		ldr	r3, [r3, #116]
 2581              		.loc 1 1451 12
 2582 00a8 002B     		cmp	r3, #0
 2583 00aa 24D0     		beq	.L120
 2584              		.loc 1 1451 63 discriminator 1
ARM GAS  /tmp/ccMjAmt3.s 			page 81


 2585 00ac FB68     		ldr	r3, [r7, #12]
 2586 00ae DB6F     		ldr	r3, [r3, #124]
 2587              		.loc 1 1451 71 discriminator 1
 2588 00b0 5B6F     		ldr	r3, [r3, #116]
 2589              		.loc 1 1451 88 discriminator 1
 2590 00b2 1B68     		ldr	r3, [r3]
 2591              		.loc 1 1451 54 discriminator 1
 2592 00b4 002B     		cmp	r3, #0
 2593 00b6 1ED0     		beq	.L120
1452:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
1453:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set DMA data size */
1454:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = nbByte;
 2594              		.loc 1 1454 16
 2595 00b8 FB68     		ldr	r3, [r7, #12]
 2596 00ba DB6F     		ldr	r3, [r3, #124]
 2597              		.loc 1 1454 24
 2598 00bc 5B6F     		ldr	r3, [r3, #116]
 2599              		.loc 1 1454 41
 2600 00be 1B68     		ldr	r3, [r3]
 2601              		.loc 1 1454 89
 2602 00c0 BA8D     		ldrh	r2, [r7, #44]
 2603 00c2 9A60     		str	r2, [r3, #8]
1455:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1456:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set DMA source address */
1457:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t
 2604              		.loc 1 1457 106
 2605 00c4 FB68     		ldr	r3, [r7, #12]
 2606 00c6 1A6D     		ldr	r2, [r3, #80]
 2607              		.loc 1 1457 16
 2608 00c8 FB68     		ldr	r3, [r7, #12]
 2609 00ca DB6F     		ldr	r3, [r3, #124]
 2610              		.loc 1 1457 24
 2611 00cc 5B6F     		ldr	r3, [r3, #116]
 2612              		.loc 1 1457 41
 2613 00ce 1B68     		ldr	r3, [r3]
 2614              		.loc 1 1457 89
 2615 00d0 DA60     		str	r2, [r3, #12]
1458:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1459:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set DMA destination address */
1460:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] =
1461:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (uint32_t)&huart->Instance->TDR;
 2616              		.loc 1 1461 29
 2617 00d2 FB68     		ldr	r3, [r7, #12]
 2618 00d4 1B68     		ldr	r3, [r3]
 2619              		.loc 1 1461 23
 2620 00d6 03F12802 		add	r2, r3, #40
1460:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (uint32_t)&huart->Instance->TDR;
 2621              		.loc 1 1460 16
 2622 00da FB68     		ldr	r3, [r7, #12]
 2623 00dc DB6F     		ldr	r3, [r3, #124]
1460:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (uint32_t)&huart->Instance->TDR;
 2624              		.loc 1 1460 24
 2625 00de 5B6F     		ldr	r3, [r3, #116]
1460:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (uint32_t)&huart->Instance->TDR;
 2626              		.loc 1 1460 41
 2627 00e0 1B68     		ldr	r3, [r3]
1460:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             (uint32_t)&huart->Instance->TDR;
ARM GAS  /tmp/ccMjAmt3.s 			page 82


 2628              		.loc 1 1460 89
 2629 00e2 1A61     		str	r2, [r3, #16]
1462:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1463:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Enable the UART transmit DMA channel */
1464:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           status = HAL_DMAEx_List_Start_IT(huart->hdmatx);
 2630              		.loc 1 1464 20
 2631 00e4 FB68     		ldr	r3, [r7, #12]
 2632 00e6 DB6F     		ldr	r3, [r3, #124]
 2633 00e8 1846     		mov	r0, r3
 2634 00ea FFF7FEFF 		bl	HAL_DMAEx_List_Start_IT
 2635 00ee 0346     		mov	r3, r0
 2636 00f0 87F82F30 		strb	r3, [r7, #47]
 2637              		.loc 1 1464 18
 2638 00f4 12E0     		b	.L122
 2639              	.L120:
1465:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
1466:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         else
1467:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
1468:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Update status */
1469:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           status = HAL_ERROR;
 2640              		.loc 1 1469 18
 2641 00f6 0123     		movs	r3, #1
 2642 00f8 87F82F30 		strb	r3, [r7, #47]
 2643 00fc 0EE0     		b	.L122
 2644              	.L119:
1470:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
1471:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1472:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
1473:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1474:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Enable the UART transmit DMA channel */
1475:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         status = HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Ins
 2645              		.loc 1 1475 18
 2646 00fe FB68     		ldr	r3, [r7, #12]
 2647 0100 D86F     		ldr	r0, [r3, #124]
 2648              		.loc 1 1475 65
 2649 0102 FB68     		ldr	r3, [r7, #12]
 2650 0104 1B6D     		ldr	r3, [r3, #80]
 2651              		.loc 1 1475 18
 2652 0106 1946     		mov	r1, r3
 2653              		.loc 1 1475 95
 2654 0108 FB68     		ldr	r3, [r7, #12]
 2655 010a 1B68     		ldr	r3, [r3]
 2656              		.loc 1 1475 89
 2657 010c 2833     		adds	r3, r3, #40
 2658              		.loc 1 1475 18
 2659 010e 1A46     		mov	r2, r3
 2660 0110 BB8D     		ldrh	r3, [r7, #44]
 2661 0112 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2662 0116 0346     		mov	r3, r0
 2663 0118 87F82F30 		strb	r3, [r7, #47]
 2664              	.L122:
1476:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1477:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1478:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (status != HAL_OK)
 2665              		.loc 1 1478 10
 2666 011c 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2667 0120 002B     		cmp	r3, #0
ARM GAS  /tmp/ccMjAmt3.s 			page 83


 2668 0122 09D0     		beq	.L117
1479:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1480:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Set error code to DMA */
1481:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 2669              		.loc 1 1481 26
 2670 0124 FB68     		ldr	r3, [r7, #12]
 2671 0126 1022     		movs	r2, #16
 2672 0128 C3F89020 		str	r2, [r3, #144]
1482:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1483:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Restore huart->gState to ready */
1484:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 2673              		.loc 1 1484 23
 2674 012c FB68     		ldr	r3, [r7, #12]
 2675 012e 2022     		movs	r2, #32
 2676 0130 C3F88820 		str	r2, [r3, #136]
1485:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1486:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         return HAL_ERROR;
 2677              		.loc 1 1486 16
 2678 0134 0123     		movs	r3, #1
 2679 0136 20E0     		b	.L116
 2680              	.L117:
1487:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1488:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1489:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1490:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 2681              		.loc 1 1490 5
 2682 0138 FB68     		ldr	r3, [r7, #12]
 2683 013a 1B68     		ldr	r3, [r3]
 2684 013c 4022     		movs	r2, #64
 2685 013e 1A62     		str	r2, [r3, #32]
 2686              	.L125:
 2687              	.LBB520:
1491:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1492:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1493:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     in the UART CR3 register */
1494:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2688              		.loc 1 1494 5 discriminator 1
 2689 0140 FB68     		ldr	r3, [r7, #12]
 2690 0142 1B68     		ldr	r3, [r3]
 2691 0144 0833     		adds	r3, r3, #8
 2692 0146 BB61     		str	r3, [r7, #24]
 2693              	.LBB521:
 2694              	.LBB522:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2695              		.loc 2 480 4
 2696 0148 BB69     		ldr	r3, [r7, #24]
 2697              		.syntax unified
 2698              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2699 014a 53E8003F 		ldrex r3, [r3]
 2700              	@ 0 "" 2
 2701              		.thumb
 2702              		.syntax unified
 2703 014e 7B61     		str	r3, [r7, #20]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2704              		.loc 2 481 10
 2705 0150 7B69     		ldr	r3, [r7, #20]
 2706              	.LBE522:
ARM GAS  /tmp/ccMjAmt3.s 			page 84


 2707              	.LBE521:
 2708              		.loc 1 1494 5 discriminator 1
 2709 0152 43F08003 		orr	r3, r3, #128
 2710 0156 BB62     		str	r3, [r7, #40]
 2711 0158 FB68     		ldr	r3, [r7, #12]
 2712 015a 1B68     		ldr	r3, [r3]
 2713 015c 0833     		adds	r3, r3, #8
 2714 015e BA6A     		ldr	r2, [r7, #40]
 2715 0160 7A62     		str	r2, [r7, #36]
 2716 0162 3B62     		str	r3, [r7, #32]
 2717              	.LBB523:
 2718              	.LBB524:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2719              		.loc 2 531 4
 2720 0164 396A     		ldr	r1, [r7, #32]
 2721 0166 7A6A     		ldr	r2, [r7, #36]
 2722              		.syntax unified
 2723              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2724 0168 41E80023 		strex r3, r2, [r1]
 2725              	@ 0 "" 2
 2726              		.thumb
 2727              		.syntax unified
 2728 016c FB61     		str	r3, [r7, #28]
 2729              		.loc 2 532 10
 2730 016e FB69     		ldr	r3, [r7, #28]
 2731              	.LBE524:
 2732              	.LBE523:
 2733              		.loc 1 1494 5 discriminator 1
 2734 0170 002B     		cmp	r3, #0
 2735 0172 E5D1     		bne	.L125
 2736              	.LBE520:
1495:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1496:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_OK;
 2737              		.loc 1 1496 12
 2738 0174 0023     		movs	r3, #0
 2739 0176 00E0     		b	.L116
 2740              	.L113:
1497:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1498:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
1499:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1500:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_BUSY;
 2741              		.loc 1 1500 12
 2742 0178 0223     		movs	r3, #2
 2743              	.L116:
1501:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1502:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 2744              		.loc 1 1502 1
 2745 017a 1846     		mov	r0, r3
 2746 017c 3037     		adds	r7, r7, #48
 2747              		.cfi_def_cfa_offset 8
 2748 017e BD46     		mov	sp, r7
 2749              		.cfi_def_cfa_register 13
 2750              		@ sp needed
 2751 0180 80BD     		pop	{r7, pc}
 2752              	.L127:
 2753 0182 00BF     		.align	2
 2754              	.L126:
ARM GAS  /tmp/ccMjAmt3.s 			page 85


 2755 0184 00000000 		.word	UART_DMATransmitCplt
 2756 0188 00000000 		.word	UART_DMATxHalfCplt
 2757 018c 00000000 		.word	UART_DMAError
 2758              		.cfi_endproc
 2759              	.LFE846:
 2761              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 2762              		.align	1
 2763              		.global	HAL_UART_Receive_DMA
 2764              		.syntax unified
 2765              		.thumb
 2766              		.thumb_func
 2768              	HAL_UART_Receive_DMA:
 2769              	.LFB847:
1503:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1504:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1505:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1506:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1507:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         the parity bit (MSB position).
1508:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1509:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1510:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         of u16 available through pData.
1511:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
1512:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1513:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1514:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1515:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1516:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1517:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 2770              		.loc 1 1517 1
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 40
 2773              		@ frame_needed = 1, uses_anonymous_args = 0
 2774 0000 80B5     		push	{r7, lr}
 2775              		.cfi_def_cfa_offset 8
 2776              		.cfi_offset 7, -8
 2777              		.cfi_offset 14, -4
 2778 0002 8AB0     		sub	sp, sp, #40
 2779              		.cfi_def_cfa_offset 48
 2780 0004 00AF     		add	r7, sp, #0
 2781              		.cfi_def_cfa_register 7
 2782 0006 F860     		str	r0, [r7, #12]
 2783 0008 B960     		str	r1, [r7, #8]
 2784 000a 1346     		mov	r3, r2
 2785 000c FB80     		strh	r3, [r7, #6]	@ movhi
1518:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1519:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2786              		.loc 1 1519 12
 2787 000e FB68     		ldr	r3, [r7, #12]
 2788 0010 D3F88C30 		ldr	r3, [r3, #140]
 2789              		.loc 1 1519 6
 2790 0014 202B     		cmp	r3, #32
 2791 0016 3CD1     		bne	.L129
1520:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1521:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2792              		.loc 1 1521 8
 2793 0018 BB68     		ldr	r3, [r7, #8]
 2794 001a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccMjAmt3.s 			page 86


 2795 001c 02D0     		beq	.L130
 2796              		.loc 1 1521 25 discriminator 1
 2797 001e FB88     		ldrh	r3, [r7, #6]
 2798 0020 002B     		cmp	r3, #0
 2799 0022 01D1     		bne	.L131
 2800              	.L130:
1522:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1523:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_ERROR;
 2801              		.loc 1 1523 14
 2802 0024 0123     		movs	r3, #1
 2803 0026 35E0     		b	.L132
 2804              	.L131:
1524:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1525:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1526:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1527:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2805              		.loc 1 1527 26
 2806 0028 FB68     		ldr	r3, [r7, #12]
 2807 002a 0022     		movs	r2, #0
 2808 002c DA66     		str	r2, [r3, #108]
1528:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1529:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
 2809              		.loc 1 1529 11
 2810 002e FB68     		ldr	r3, [r7, #12]
 2811 0030 1B68     		ldr	r3, [r3]
 2812              		.loc 1 1529 8
 2813 0032 1A4A     		ldr	r2, .L137
 2814 0034 9342     		cmp	r3, r2
 2815 0036 24D0     		beq	.L133
 2816              		.loc 1 1529 11 discriminator 1
 2817 0038 FB68     		ldr	r3, [r7, #12]
 2818 003a 1B68     		ldr	r3, [r3]
 2819              		.loc 1 1529 9 discriminator 1
 2820 003c 184A     		ldr	r2, .L137+4
 2821 003e 9342     		cmp	r3, r2
 2822 0040 1FD0     		beq	.L133
1530:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1531:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1532:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 2823              		.loc 1 1532 11
 2824 0042 FB68     		ldr	r3, [r7, #12]
 2825 0044 1B68     		ldr	r3, [r3]
 2826 0046 5B68     		ldr	r3, [r3, #4]
 2827 0048 03F40003 		and	r3, r3, #8388608
 2828              		.loc 1 1532 10
 2829 004c 002B     		cmp	r3, #0
 2830 004e 18D0     		beq	.L133
 2831              	.L136:
 2832              	.LBB525:
1533:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1534:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1535:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 2833              		.loc 1 1535 9 discriminator 1
 2834 0050 FB68     		ldr	r3, [r7, #12]
 2835 0052 1B68     		ldr	r3, [r3]
 2836 0054 7B61     		str	r3, [r7, #20]
 2837              	.LBB526:
ARM GAS  /tmp/ccMjAmt3.s 			page 87


 2838              	.LBB527:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2839              		.loc 2 480 4
 2840 0056 7B69     		ldr	r3, [r7, #20]
 2841              		.syntax unified
 2842              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2843 0058 53E8003F 		ldrex r3, [r3]
 2844              	@ 0 "" 2
 2845              		.thumb
 2846              		.syntax unified
 2847 005c 3B61     		str	r3, [r7, #16]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2848              		.loc 2 481 10
 2849 005e 3B69     		ldr	r3, [r7, #16]
 2850              	.LBE527:
 2851              	.LBE526:
 2852              		.loc 1 1535 9 discriminator 1
 2853 0060 43F08063 		orr	r3, r3, #67108864
 2854 0064 7B62     		str	r3, [r7, #36]
 2855 0066 FB68     		ldr	r3, [r7, #12]
 2856 0068 1B68     		ldr	r3, [r3]
 2857 006a 1A46     		mov	r2, r3
 2858 006c 7B6A     		ldr	r3, [r7, #36]
 2859 006e 3B62     		str	r3, [r7, #32]
 2860 0070 FA61     		str	r2, [r7, #28]
 2861              	.LBB528:
 2862              	.LBB529:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2863              		.loc 2 531 4
 2864 0072 F969     		ldr	r1, [r7, #28]
 2865 0074 3A6A     		ldr	r2, [r7, #32]
 2866              		.syntax unified
 2867              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2868 0076 41E80023 		strex r3, r2, [r1]
 2869              	@ 0 "" 2
 2870              		.thumb
 2871              		.syntax unified
 2872 007a BB61     		str	r3, [r7, #24]
 2873              		.loc 2 532 10
 2874 007c BB69     		ldr	r3, [r7, #24]
 2875              	.LBE529:
 2876              	.LBE528:
 2877              		.loc 1 1535 9 discriminator 1
 2878 007e 002B     		cmp	r3, #0
 2879 0080 E6D1     		bne	.L136
 2880              	.L133:
 2881              	.LBE525:
1536:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1537:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1538:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1539:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 2882              		.loc 1 1539 13
 2883 0082 FB88     		ldrh	r3, [r7, #6]
 2884 0084 1A46     		mov	r2, r3
 2885 0086 B968     		ldr	r1, [r7, #8]
 2886 0088 F868     		ldr	r0, [r7, #12]
 2887 008a FFF7FEFF 		bl	UART_Start_Receive_DMA
ARM GAS  /tmp/ccMjAmt3.s 			page 88


 2888 008e 0346     		mov	r3, r0
 2889 0090 00E0     		b	.L132
 2890              	.L129:
1540:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1541:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
1542:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1543:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_BUSY;
 2891              		.loc 1 1543 12
 2892 0092 0223     		movs	r3, #2
 2893              	.L132:
1544:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1545:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 2894              		.loc 1 1545 1
 2895 0094 1846     		mov	r0, r3
 2896 0096 2837     		adds	r7, r7, #40
 2897              		.cfi_def_cfa_offset 8
 2898 0098 BD46     		mov	sp, r7
 2899              		.cfi_def_cfa_register 13
 2900              		@ sp needed
 2901 009a 80BD     		pop	{r7, pc}
 2902              	.L138:
 2903              		.align	2
 2904              	.L137:
 2905 009c 000C0056 		.word	1442843648
 2906 00a0 000C0046 		.word	1174408192
 2907              		.cfi_endproc
 2908              	.LFE847:
 2910              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2911              		.align	1
 2912              		.global	HAL_UART_DMAPause
 2913              		.syntax unified
 2914              		.thumb
 2915              		.thumb_func
 2917              	HAL_UART_DMAPause:
 2918              	.LFB848:
1546:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1547:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1548:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1549:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
1550:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1551:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1552:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1553:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 2919              		.loc 1 1553 1
 2920              		.cfi_startproc
 2921              		@ args = 0, pretend = 0, frame = 64
 2922              		@ frame_needed = 1, uses_anonymous_args = 0
 2923 0000 80B5     		push	{r7, lr}
 2924              		.cfi_def_cfa_offset 8
 2925              		.cfi_offset 7, -8
 2926              		.cfi_offset 14, -4
 2927 0002 90B0     		sub	sp, sp, #64
 2928              		.cfi_def_cfa_offset 72
 2929 0004 00AF     		add	r7, sp, #0
 2930              		.cfi_def_cfa_register 7
 2931 0006 7860     		str	r0, [r7, #4]
1554:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
ARM GAS  /tmp/ccMjAmt3.s 			page 89


 2932              		.loc 1 1554 31
 2933 0008 7B68     		ldr	r3, [r7, #4]
 2934 000a D3F88830 		ldr	r3, [r3, #136]
 2935 000e FB63     		str	r3, [r7, #60]
1555:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2936              		.loc 1 1555 31
 2937 0010 7B68     		ldr	r3, [r7, #4]
 2938 0012 D3F88C30 		ldr	r3, [r3, #140]
 2939 0016 BB63     		str	r3, [r7, #56]
1556:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1557:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2940              		.loc 1 1557 8
 2941 0018 7B68     		ldr	r3, [r7, #4]
 2942 001a 1B68     		ldr	r3, [r3]
 2943 001c 9B68     		ldr	r3, [r3, #8]
 2944 001e 03F08003 		and	r3, r3, #128
 2945              		.loc 1 1557 6
 2946 0022 802B     		cmp	r3, #128
 2947 0024 20D1     		bne	.L140
 2948              		.loc 1 1557 62 discriminator 1
 2949 0026 FB6B     		ldr	r3, [r7, #60]
 2950 0028 212B     		cmp	r3, #33
 2951 002a 1DD1     		bne	.L140
1558:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1559:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1560:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Suspend the UART DMA Tx channel : use blocking DMA Suspend API (no callback) */
1561:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2952              		.loc 1 1561 14
 2953 002c 7B68     		ldr	r3, [r7, #4]
 2954 002e DB6F     		ldr	r3, [r3, #124]
 2955              		.loc 1 1561 8
 2956 0030 002B     		cmp	r3, #0
 2957 0032 19D0     		beq	.L140
1562:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1563:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the UART DMA Suspend callback to Null.
1564:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          No call back execution at end of DMA Suspend procedure */
1565:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmatx->XferSuspendCallback = NULL;
 2958              		.loc 1 1565 12
 2959 0034 7B68     		ldr	r3, [r7, #4]
 2960 0036 DB6F     		ldr	r3, [r3, #124]
 2961              		.loc 1 1565 42
 2962 0038 0022     		movs	r2, #0
 2963 003a 1A67     		str	r2, [r3, #112]
1566:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1567:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMAEx_Suspend(huart->hdmatx) != HAL_OK)
 2964              		.loc 1 1567 11
 2965 003c 7B68     		ldr	r3, [r7, #4]
 2966 003e DB6F     		ldr	r3, [r3, #124]
 2967 0040 1846     		mov	r0, r3
 2968 0042 FFF7FEFF 		bl	HAL_DMAEx_Suspend
 2969 0046 0346     		mov	r3, r0
 2970              		.loc 1 1567 10 discriminator 1
 2971 0048 002B     		cmp	r3, #0
 2972 004a 0DD0     		beq	.L140
1568:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1569:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2973              		.loc 1 1569 35
ARM GAS  /tmp/ccMjAmt3.s 			page 90


 2974 004c 7B68     		ldr	r3, [r7, #4]
 2975 004e DB6F     		ldr	r3, [r3, #124]
 2976              		.loc 1 1569 13
 2977 0050 1846     		mov	r0, r3
 2978 0052 FFF7FEFF 		bl	HAL_DMA_GetError
 2979 0056 0346     		mov	r3, r0
 2980              		.loc 1 1569 12 discriminator 1
 2981 0058 102B     		cmp	r3, #16
 2982 005a 05D1     		bne	.L140
1570:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
1571:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set error code to DMA */
1572:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2983              		.loc 1 1572 28
 2984 005c 7B68     		ldr	r3, [r7, #4]
 2985 005e 1022     		movs	r2, #16
 2986 0060 C3F89020 		str	r2, [r3, #144]
1573:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1574:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           return HAL_TIMEOUT;
 2987              		.loc 1 1574 18
 2988 0064 0323     		movs	r3, #3
 2989 0066 5FE0     		b	.L141
 2990              	.L140:
1575:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
1576:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1577:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1578:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1579:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2991              		.loc 1 1579 8
 2992 0068 7B68     		ldr	r3, [r7, #4]
 2993 006a 1B68     		ldr	r3, [r3]
 2994 006c 9B68     		ldr	r3, [r3, #8]
 2995 006e 03F04003 		and	r3, r3, #64
 2996              		.loc 1 1579 6
 2997 0072 402B     		cmp	r3, #64
 2998 0074 57D1     		bne	.L142
 2999              		.loc 1 1579 62 discriminator 1
 3000 0076 BB6B     		ldr	r3, [r7, #56]
 3001 0078 222B     		cmp	r3, #34
 3002 007a 54D1     		bne	.L142
1580:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1581:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1582:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Suspend the UART DMA Rx channel : use blocking DMA Suspend API (no callback) */
1583:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3003              		.loc 1 1583 14
 3004 007c 7B68     		ldr	r3, [r7, #4]
 3005 007e D3F88030 		ldr	r3, [r3, #128]
 3006              		.loc 1 1583 8
 3007 0082 002B     		cmp	r3, #0
 3008 0084 4FD0     		beq	.L142
 3009              	.L145:
 3010              	.LBB530:
1584:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1585:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1586:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 3011              		.loc 1 1586 7 discriminator 1
 3012 0086 7B68     		ldr	r3, [r7, #4]
 3013 0088 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 91


 3014 008a 3B62     		str	r3, [r7, #32]
 3015              	.LBB531:
 3016              	.LBB532:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3017              		.loc 2 480 4
 3018 008c 3B6A     		ldr	r3, [r7, #32]
 3019              		.syntax unified
 3020              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3021 008e 53E8003F 		ldrex r3, [r3]
 3022              	@ 0 "" 2
 3023              		.thumb
 3024              		.syntax unified
 3025 0092 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3026              		.loc 2 481 10
 3027 0094 FB69     		ldr	r3, [r7, #28]
 3028              	.LBE532:
 3029              	.LBE531:
 3030              		.loc 1 1586 7 discriminator 1
 3031 0096 23F48073 		bic	r3, r3, #256
 3032 009a 7B63     		str	r3, [r7, #52]
 3033 009c 7B68     		ldr	r3, [r7, #4]
 3034 009e 1B68     		ldr	r3, [r3]
 3035 00a0 1A46     		mov	r2, r3
 3036 00a2 7B6B     		ldr	r3, [r7, #52]
 3037 00a4 FB62     		str	r3, [r7, #44]
 3038 00a6 BA62     		str	r2, [r7, #40]
 3039              	.LBB533:
 3040              	.LBB534:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3041              		.loc 2 531 4
 3042 00a8 B96A     		ldr	r1, [r7, #40]
 3043 00aa FA6A     		ldr	r2, [r7, #44]
 3044              		.syntax unified
 3045              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3046 00ac 41E80023 		strex r3, r2, [r1]
 3047              	@ 0 "" 2
 3048              		.thumb
 3049              		.syntax unified
 3050 00b0 7B62     		str	r3, [r7, #36]
 3051              		.loc 2 532 10
 3052 00b2 7B6A     		ldr	r3, [r7, #36]
 3053              	.LBE534:
 3054              	.LBE533:
 3055              		.loc 1 1586 7 discriminator 1
 3056 00b4 002B     		cmp	r3, #0
 3057 00b6 E6D1     		bne	.L145
 3058              	.L148:
 3059              	.LBE530:
 3060              	.LBB535:
1587:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3061              		.loc 1 1587 7 discriminator 1
 3062 00b8 7B68     		ldr	r3, [r7, #4]
 3063 00ba 1B68     		ldr	r3, [r3]
 3064 00bc 0833     		adds	r3, r3, #8
 3065 00be FB60     		str	r3, [r7, #12]
 3066              	.LBB536:
ARM GAS  /tmp/ccMjAmt3.s 			page 92


 3067              	.LBB537:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3068              		.loc 2 480 4
 3069 00c0 FB68     		ldr	r3, [r7, #12]
 3070              		.syntax unified
 3071              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3072 00c2 53E8003F 		ldrex r3, [r3]
 3073              	@ 0 "" 2
 3074              		.thumb
 3075              		.syntax unified
 3076 00c6 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3077              		.loc 2 481 10
 3078 00c8 BB68     		ldr	r3, [r7, #8]
 3079              	.LBE537:
 3080              	.LBE536:
 3081              		.loc 1 1587 7 discriminator 1
 3082 00ca 23F00103 		bic	r3, r3, #1
 3083 00ce 3B63     		str	r3, [r7, #48]
 3084 00d0 7B68     		ldr	r3, [r7, #4]
 3085 00d2 1B68     		ldr	r3, [r3]
 3086 00d4 0833     		adds	r3, r3, #8
 3087 00d6 3A6B     		ldr	r2, [r7, #48]
 3088 00d8 BA61     		str	r2, [r7, #24]
 3089 00da 7B61     		str	r3, [r7, #20]
 3090              	.LBB538:
 3091              	.LBB539:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3092              		.loc 2 531 4
 3093 00dc 7969     		ldr	r1, [r7, #20]
 3094 00de BA69     		ldr	r2, [r7, #24]
 3095              		.syntax unified
 3096              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3097 00e0 41E80023 		strex r3, r2, [r1]
 3098              	@ 0 "" 2
 3099              		.thumb
 3100              		.syntax unified
 3101 00e4 3B61     		str	r3, [r7, #16]
 3102              		.loc 2 532 10
 3103 00e6 3B69     		ldr	r3, [r7, #16]
 3104              	.LBE539:
 3105              	.LBE538:
 3106              		.loc 1 1587 7 discriminator 1
 3107 00e8 002B     		cmp	r3, #0
 3108 00ea E5D1     		bne	.L148
 3109              	.LBE535:
1588:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1589:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the UART DMA Suspend callback to Null.
1590:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          No call back execution at end of DMA Suspend procedure */
1591:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmarx->XferSuspendCallback = NULL;
 3110              		.loc 1 1591 12
 3111 00ec 7B68     		ldr	r3, [r7, #4]
 3112 00ee D3F88030 		ldr	r3, [r3, #128]
 3113              		.loc 1 1591 42
 3114 00f2 0022     		movs	r2, #0
 3115 00f4 1A67     		str	r2, [r3, #112]
1592:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 93


1593:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMAEx_Suspend(huart->hdmarx) != HAL_OK)
 3116              		.loc 1 1593 11
 3117 00f6 7B68     		ldr	r3, [r7, #4]
 3118 00f8 D3F88030 		ldr	r3, [r3, #128]
 3119 00fc 1846     		mov	r0, r3
 3120 00fe FFF7FEFF 		bl	HAL_DMAEx_Suspend
 3121 0102 0346     		mov	r3, r0
 3122              		.loc 1 1593 10 discriminator 1
 3123 0104 002B     		cmp	r3, #0
 3124 0106 0ED0     		beq	.L142
1594:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1595:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3125              		.loc 1 1595 35
 3126 0108 7B68     		ldr	r3, [r7, #4]
 3127 010a D3F88030 		ldr	r3, [r3, #128]
 3128              		.loc 1 1595 13
 3129 010e 1846     		mov	r0, r3
 3130 0110 FFF7FEFF 		bl	HAL_DMA_GetError
 3131 0114 0346     		mov	r3, r0
 3132              		.loc 1 1595 12 discriminator 1
 3133 0116 102B     		cmp	r3, #16
 3134 0118 05D1     		bne	.L142
1596:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
1597:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set error code to DMA */
1598:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3135              		.loc 1 1598 28
 3136 011a 7B68     		ldr	r3, [r7, #4]
 3137 011c 1022     		movs	r2, #16
 3138 011e C3F89020 		str	r2, [r3, #144]
1599:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1600:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           return HAL_TIMEOUT;
 3139              		.loc 1 1600 18
 3140 0122 0323     		movs	r3, #3
 3141 0124 00E0     		b	.L141
 3142              	.L142:
1601:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
1602:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1603:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1604:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1605:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1606:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 3143              		.loc 1 1606 10
 3144 0126 0023     		movs	r3, #0
 3145              	.L141:
1607:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 3146              		.loc 1 1607 1
 3147 0128 1846     		mov	r0, r3
 3148 012a 4037     		adds	r7, r7, #64
 3149              		.cfi_def_cfa_offset 8
 3150 012c BD46     		mov	sp, r7
 3151              		.cfi_def_cfa_register 13
 3152              		@ sp needed
 3153 012e 80BD     		pop	{r7, pc}
 3154              		.cfi_endproc
 3155              	.LFE848:
 3157              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 3158              		.align	1
ARM GAS  /tmp/ccMjAmt3.s 			page 94


 3159              		.global	HAL_UART_DMAResume
 3160              		.syntax unified
 3161              		.thumb
 3162              		.thumb_func
 3164              	HAL_UART_DMAResume:
 3165              	.LFB849:
1608:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1609:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1610:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1611:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
1612:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1613:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1614:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1615:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 3166              		.loc 1 1615 1
 3167              		.cfi_startproc
 3168              		@ args = 0, pretend = 0, frame = 56
 3169              		@ frame_needed = 1, uses_anonymous_args = 0
 3170 0000 80B5     		push	{r7, lr}
 3171              		.cfi_def_cfa_offset 8
 3172              		.cfi_offset 7, -8
 3173              		.cfi_offset 14, -4
 3174 0002 8EB0     		sub	sp, sp, #56
 3175              		.cfi_def_cfa_offset 64
 3176 0004 00AF     		add	r7, sp, #0
 3177              		.cfi_def_cfa_register 7
 3178 0006 7860     		str	r0, [r7, #4]
1616:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 3179              		.loc 1 1616 12
 3180 0008 7B68     		ldr	r3, [r7, #4]
 3181 000a D3F88830 		ldr	r3, [r3, #136]
 3182              		.loc 1 1616 6
 3183 000e 212B     		cmp	r3, #33
 3184 0010 11D1     		bne	.L150
1617:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1618:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Resume the UART DMA Tx channel */
1619:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3185              		.loc 1 1619 14
 3186 0012 7B68     		ldr	r3, [r7, #4]
 3187 0014 DB6F     		ldr	r3, [r3, #124]
 3188              		.loc 1 1619 8
 3189 0016 002B     		cmp	r3, #0
 3190 0018 0DD0     		beq	.L150
1620:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1621:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMAEx_Resume(huart->hdmatx) != HAL_OK)
 3191              		.loc 1 1621 11
 3192 001a 7B68     		ldr	r3, [r7, #4]
 3193 001c DB6F     		ldr	r3, [r3, #124]
 3194 001e 1846     		mov	r0, r3
 3195 0020 FFF7FEFF 		bl	HAL_DMAEx_Resume
 3196 0024 0346     		mov	r3, r0
 3197              		.loc 1 1621 10 discriminator 1
 3198 0026 002B     		cmp	r3, #0
 3199 0028 05D0     		beq	.L150
1622:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1623:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Set error code to DMA */
1624:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
ARM GAS  /tmp/ccMjAmt3.s 			page 95


 3200              		.loc 1 1624 26
 3201 002a 7B68     		ldr	r3, [r7, #4]
 3202 002c 1022     		movs	r2, #16
 3203 002e C3F89020 		str	r2, [r3, #144]
1625:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1626:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         return HAL_ERROR;
 3204              		.loc 1 1626 16
 3205 0032 0123     		movs	r3, #1
 3206 0034 54E0     		b	.L151
 3207              	.L150:
1627:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1628:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1629:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1630:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 3208              		.loc 1 1630 12
 3209 0036 7B68     		ldr	r3, [r7, #4]
 3210 0038 D3F88C30 		ldr	r3, [r3, #140]
 3211              		.loc 1 1630 6
 3212 003c 222B     		cmp	r3, #34
 3213 003e 4ED1     		bne	.L152
1631:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1632:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1633:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 3214              		.loc 1 1633 5
 3215 0040 7B68     		ldr	r3, [r7, #4]
 3216 0042 1B68     		ldr	r3, [r3]
 3217 0044 0822     		movs	r2, #8
 3218 0046 1A62     		str	r2, [r3, #32]
1634:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1635:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1636:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 3219              		.loc 1 1636 20
 3220 0048 7B68     		ldr	r3, [r7, #4]
 3221 004a 1B69     		ldr	r3, [r3, #16]
 3222              		.loc 1 1636 8
 3223 004c 002B     		cmp	r3, #0
 3224 004e 18D0     		beq	.L159
 3225              	.L156:
 3226              	.LBB540:
1637:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1638:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 3227              		.loc 1 1638 7 discriminator 1
 3228 0050 7B68     		ldr	r3, [r7, #4]
 3229 0052 1B68     		ldr	r3, [r3]
 3230 0054 3B62     		str	r3, [r7, #32]
 3231              	.LBB541:
 3232              	.LBB542:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3233              		.loc 2 480 4
 3234 0056 3B6A     		ldr	r3, [r7, #32]
 3235              		.syntax unified
 3236              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3237 0058 53E8003F 		ldrex r3, [r3]
 3238              	@ 0 "" 2
 3239              		.thumb
 3240              		.syntax unified
 3241 005c FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/ccMjAmt3.s 			page 96


 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3242              		.loc 2 481 10
 3243 005e FB69     		ldr	r3, [r7, #28]
 3244              	.LBE542:
 3245              	.LBE541:
 3246              		.loc 1 1638 7 discriminator 1
 3247 0060 43F48073 		orr	r3, r3, #256
 3248 0064 7B63     		str	r3, [r7, #52]
 3249 0066 7B68     		ldr	r3, [r7, #4]
 3250 0068 1B68     		ldr	r3, [r3]
 3251 006a 1A46     		mov	r2, r3
 3252 006c 7B6B     		ldr	r3, [r7, #52]
 3253 006e FB62     		str	r3, [r7, #44]
 3254 0070 BA62     		str	r2, [r7, #40]
 3255              	.LBB543:
 3256              	.LBB544:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3257              		.loc 2 531 4
 3258 0072 B96A     		ldr	r1, [r7, #40]
 3259 0074 FA6A     		ldr	r2, [r7, #44]
 3260              		.syntax unified
 3261              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3262 0076 41E80023 		strex r3, r2, [r1]
 3263              	@ 0 "" 2
 3264              		.thumb
 3265              		.syntax unified
 3266 007a 7B62     		str	r3, [r7, #36]
 3267              		.loc 2 532 10
 3268 007c 7B6A     		ldr	r3, [r7, #36]
 3269              	.LBE544:
 3270              	.LBE543:
 3271              		.loc 1 1638 7 discriminator 1
 3272 007e 002B     		cmp	r3, #0
 3273 0080 E6D1     		bne	.L156
 3274              	.L159:
 3275              	.LBE540:
 3276              	.LBB545:
1639:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1640:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3277              		.loc 1 1640 5 discriminator 1
 3278 0082 7B68     		ldr	r3, [r7, #4]
 3279 0084 1B68     		ldr	r3, [r3]
 3280 0086 0833     		adds	r3, r3, #8
 3281 0088 FB60     		str	r3, [r7, #12]
 3282              	.LBB546:
 3283              	.LBB547:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3284              		.loc 2 480 4
 3285 008a FB68     		ldr	r3, [r7, #12]
 3286              		.syntax unified
 3287              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3288 008c 53E8003F 		ldrex r3, [r3]
 3289              	@ 0 "" 2
 3290              		.thumb
 3291              		.syntax unified
 3292 0090 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccMjAmt3.s 			page 97


 3293              		.loc 2 481 10
 3294 0092 BB68     		ldr	r3, [r7, #8]
 3295              	.LBE547:
 3296              	.LBE546:
 3297              		.loc 1 1640 5 discriminator 1
 3298 0094 43F00103 		orr	r3, r3, #1
 3299 0098 3B63     		str	r3, [r7, #48]
 3300 009a 7B68     		ldr	r3, [r7, #4]
 3301 009c 1B68     		ldr	r3, [r3]
 3302 009e 0833     		adds	r3, r3, #8
 3303 00a0 3A6B     		ldr	r2, [r7, #48]
 3304 00a2 BA61     		str	r2, [r7, #24]
 3305 00a4 7B61     		str	r3, [r7, #20]
 3306              	.LBB548:
 3307              	.LBB549:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3308              		.loc 2 531 4
 3309 00a6 7969     		ldr	r1, [r7, #20]
 3310 00a8 BA69     		ldr	r2, [r7, #24]
 3311              		.syntax unified
 3312              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3313 00aa 41E80023 		strex r3, r2, [r1]
 3314              	@ 0 "" 2
 3315              		.thumb
 3316              		.syntax unified
 3317 00ae 3B61     		str	r3, [r7, #16]
 3318              		.loc 2 532 10
 3319 00b0 3B69     		ldr	r3, [r7, #16]
 3320              	.LBE549:
 3321              	.LBE548:
 3322              		.loc 1 1640 5 discriminator 1
 3323 00b2 002B     		cmp	r3, #0
 3324 00b4 E5D1     		bne	.L159
 3325              	.LBE545:
1641:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1642:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Resume the UART DMA Rx channel */
1643:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3326              		.loc 1 1643 14
 3327 00b6 7B68     		ldr	r3, [r7, #4]
 3328 00b8 D3F88030 		ldr	r3, [r3, #128]
 3329              		.loc 1 1643 8
 3330 00bc 002B     		cmp	r3, #0
 3331 00be 0ED0     		beq	.L152
1644:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1645:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMAEx_Resume(huart->hdmarx) != HAL_OK)
 3332              		.loc 1 1645 11
 3333 00c0 7B68     		ldr	r3, [r7, #4]
 3334 00c2 D3F88030 		ldr	r3, [r3, #128]
 3335 00c6 1846     		mov	r0, r3
 3336 00c8 FFF7FEFF 		bl	HAL_DMAEx_Resume
 3337 00cc 0346     		mov	r3, r0
 3338              		.loc 1 1645 10 discriminator 1
 3339 00ce 002B     		cmp	r3, #0
 3340 00d0 05D0     		beq	.L152
1646:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1647:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Set error code to DMA */
1648:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
ARM GAS  /tmp/ccMjAmt3.s 			page 98


 3341              		.loc 1 1648 26
 3342 00d2 7B68     		ldr	r3, [r7, #4]
 3343 00d4 1022     		movs	r2, #16
 3344 00d6 C3F89020 		str	r2, [r3, #144]
1649:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1650:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         return HAL_ERROR;
 3345              		.loc 1 1650 16
 3346 00da 0123     		movs	r3, #1
 3347 00dc 00E0     		b	.L151
 3348              	.L152:
1651:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1652:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1653:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1654:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1655:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 3349              		.loc 1 1655 10
 3350 00de 0023     		movs	r3, #0
 3351              	.L151:
1656:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 3352              		.loc 1 1656 1
 3353 00e0 1846     		mov	r0, r3
 3354 00e2 3837     		adds	r7, r7, #56
 3355              		.cfi_def_cfa_offset 8
 3356 00e4 BD46     		mov	sp, r7
 3357              		.cfi_def_cfa_register 13
 3358              		@ sp needed
 3359 00e6 80BD     		pop	{r7, pc}
 3360              		.cfi_endproc
 3361              	.LFE849:
 3363              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 3364              		.align	1
 3365              		.global	HAL_UART_DMAStop
 3366              		.syntax unified
 3367              		.thumb
 3368              		.thumb_func
 3370              	HAL_UART_DMAStop:
 3371              	.LFB850:
1657:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1658:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1659:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1660:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
1661:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1662:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1663:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1664:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 3372              		.loc 1 1664 1
 3373              		.cfi_startproc
 3374              		@ args = 0, pretend = 0, frame = 64
 3375              		@ frame_needed = 1, uses_anonymous_args = 0
 3376 0000 80B5     		push	{r7, lr}
 3377              		.cfi_def_cfa_offset 8
 3378              		.cfi_offset 7, -8
 3379              		.cfi_offset 14, -4
 3380 0002 90B0     		sub	sp, sp, #64
 3381              		.cfi_def_cfa_offset 72
 3382 0004 00AF     		add	r7, sp, #0
 3383              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccMjAmt3.s 			page 99


 3384 0006 7860     		str	r0, [r7, #4]
1665:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1666:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1667:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1668:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1669:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1670:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1671:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1672:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 3385              		.loc 1 1672 31
 3386 0008 7B68     		ldr	r3, [r7, #4]
 3387 000a D3F88830 		ldr	r3, [r3, #136]
 3388 000e FB63     		str	r3, [r7, #60]
1673:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 3389              		.loc 1 1673 31
 3390 0010 7B68     		ldr	r3, [r7, #4]
 3391 0012 D3F88C30 		ldr	r3, [r3, #140]
 3392 0016 BB63     		str	r3, [r7, #56]
1674:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1675:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1676:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 3393              		.loc 1 1676 8
 3394 0018 7B68     		ldr	r3, [r7, #4]
 3395 001a 1B68     		ldr	r3, [r3]
 3396 001c 9B68     		ldr	r3, [r3, #8]
 3397 001e 03F08003 		and	r3, r3, #128
 3398              		.loc 1 1676 6
 3399 0022 802B     		cmp	r3, #128
 3400 0024 39D1     		bne	.L161
 3401              		.loc 1 1676 62 discriminator 1
 3402 0026 FB6B     		ldr	r3, [r7, #60]
 3403 0028 212B     		cmp	r3, #33
 3404 002a 36D1     		bne	.L161
 3405              	.L164:
 3406              	.LBB550:
1677:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1678:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1679:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3407              		.loc 1 1679 5 discriminator 1
 3408 002c 7B68     		ldr	r3, [r7, #4]
 3409 002e 1B68     		ldr	r3, [r3]
 3410 0030 0833     		adds	r3, r3, #8
 3411 0032 3B62     		str	r3, [r7, #32]
 3412              	.LBB551:
 3413              	.LBB552:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3414              		.loc 2 480 4
 3415 0034 3B6A     		ldr	r3, [r7, #32]
 3416              		.syntax unified
 3417              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3418 0036 53E8003F 		ldrex r3, [r3]
 3419              	@ 0 "" 2
 3420              		.thumb
 3421              		.syntax unified
 3422 003a FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3423              		.loc 2 481 10
ARM GAS  /tmp/ccMjAmt3.s 			page 100


 3424 003c FB69     		ldr	r3, [r7, #28]
 3425              	.LBE552:
 3426              	.LBE551:
 3427              		.loc 1 1679 5 discriminator 1
 3428 003e 23F08003 		bic	r3, r3, #128
 3429 0042 7B63     		str	r3, [r7, #52]
 3430 0044 7B68     		ldr	r3, [r7, #4]
 3431 0046 1B68     		ldr	r3, [r3]
 3432 0048 0833     		adds	r3, r3, #8
 3433 004a 7A6B     		ldr	r2, [r7, #52]
 3434 004c FA62     		str	r2, [r7, #44]
 3435 004e BB62     		str	r3, [r7, #40]
 3436              	.LBB553:
 3437              	.LBB554:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3438              		.loc 2 531 4
 3439 0050 B96A     		ldr	r1, [r7, #40]
 3440 0052 FA6A     		ldr	r2, [r7, #44]
 3441              		.syntax unified
 3442              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3443 0054 41E80023 		strex r3, r2, [r1]
 3444              	@ 0 "" 2
 3445              		.thumb
 3446              		.syntax unified
 3447 0058 7B62     		str	r3, [r7, #36]
 3448              		.loc 2 532 10
 3449 005a 7B6A     		ldr	r3, [r7, #36]
 3450              	.LBE554:
 3451              	.LBE553:
 3452              		.loc 1 1679 5 discriminator 1
 3453 005c 002B     		cmp	r3, #0
 3454 005e E5D1     		bne	.L164
 3455              	.LBE550:
1680:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1681:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1682:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3456              		.loc 1 1682 14
 3457 0060 7B68     		ldr	r3, [r7, #4]
 3458 0062 DB6F     		ldr	r3, [r3, #124]
 3459              		.loc 1 1682 8
 3460 0064 002B     		cmp	r3, #0
 3461 0066 15D0     		beq	.L165
1683:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1684:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3462              		.loc 1 1684 11
 3463 0068 7B68     		ldr	r3, [r7, #4]
 3464 006a DB6F     		ldr	r3, [r3, #124]
 3465 006c 1846     		mov	r0, r3
 3466 006e FFF7FEFF 		bl	HAL_DMA_Abort
 3467 0072 0346     		mov	r3, r0
 3468              		.loc 1 1684 10 discriminator 1
 3469 0074 002B     		cmp	r3, #0
 3470 0076 0DD0     		beq	.L165
1685:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1686:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3471              		.loc 1 1686 35
 3472 0078 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 101


 3473 007a DB6F     		ldr	r3, [r3, #124]
 3474              		.loc 1 1686 13
 3475 007c 1846     		mov	r0, r3
 3476 007e FFF7FEFF 		bl	HAL_DMA_GetError
 3477 0082 0346     		mov	r3, r0
 3478              		.loc 1 1686 12 discriminator 1
 3479 0084 102B     		cmp	r3, #16
 3480 0086 05D1     		bne	.L165
1687:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
1688:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set error code to DMA */
1689:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3481              		.loc 1 1689 28
 3482 0088 7B68     		ldr	r3, [r7, #4]
 3483 008a 1022     		movs	r2, #16
 3484 008c C3F89020 		str	r2, [r3, #144]
1690:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1691:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           return HAL_TIMEOUT;
 3485              		.loc 1 1691 18
 3486 0090 0323     		movs	r3, #3
 3487 0092 47E0     		b	.L166
 3488              	.L165:
1692:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
1693:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1694:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1695:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1696:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3489              		.loc 1 1696 5
 3490 0094 7868     		ldr	r0, [r7, #4]
 3491 0096 FFF7FEFF 		bl	UART_EndTxTransfer
 3492              	.L161:
1697:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1698:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1699:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1700:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 3493              		.loc 1 1700 8
 3494 009a 7B68     		ldr	r3, [r7, #4]
 3495 009c 1B68     		ldr	r3, [r3]
 3496 009e 9B68     		ldr	r3, [r3, #8]
 3497 00a0 03F04003 		and	r3, r3, #64
 3498              		.loc 1 1700 6
 3499 00a4 402B     		cmp	r3, #64
 3500 00a6 3CD1     		bne	.L167
 3501              		.loc 1 1700 62 discriminator 1
 3502 00a8 BB6B     		ldr	r3, [r7, #56]
 3503 00aa 222B     		cmp	r3, #34
 3504 00ac 39D1     		bne	.L167
 3505              	.L170:
 3506              	.LBB555:
1701:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1702:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1703:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3507              		.loc 1 1703 5 discriminator 1
 3508 00ae 7B68     		ldr	r3, [r7, #4]
 3509 00b0 1B68     		ldr	r3, [r3]
 3510 00b2 0833     		adds	r3, r3, #8
 3511 00b4 FB60     		str	r3, [r7, #12]
 3512              	.LBB556:
ARM GAS  /tmp/ccMjAmt3.s 			page 102


 3513              	.LBB557:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3514              		.loc 2 480 4
 3515 00b6 FB68     		ldr	r3, [r7, #12]
 3516              		.syntax unified
 3517              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3518 00b8 53E8003F 		ldrex r3, [r3]
 3519              	@ 0 "" 2
 3520              		.thumb
 3521              		.syntax unified
 3522 00bc BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3523              		.loc 2 481 10
 3524 00be BB68     		ldr	r3, [r7, #8]
 3525              	.LBE557:
 3526              	.LBE556:
 3527              		.loc 1 1703 5 discriminator 1
 3528 00c0 23F04003 		bic	r3, r3, #64
 3529 00c4 3B63     		str	r3, [r7, #48]
 3530 00c6 7B68     		ldr	r3, [r7, #4]
 3531 00c8 1B68     		ldr	r3, [r3]
 3532 00ca 0833     		adds	r3, r3, #8
 3533 00cc 3A6B     		ldr	r2, [r7, #48]
 3534 00ce BA61     		str	r2, [r7, #24]
 3535 00d0 7B61     		str	r3, [r7, #20]
 3536              	.LBB558:
 3537              	.LBB559:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3538              		.loc 2 531 4
 3539 00d2 7969     		ldr	r1, [r7, #20]
 3540 00d4 BA69     		ldr	r2, [r7, #24]
 3541              		.syntax unified
 3542              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3543 00d6 41E80023 		strex r3, r2, [r1]
 3544              	@ 0 "" 2
 3545              		.thumb
 3546              		.syntax unified
 3547 00da 3B61     		str	r3, [r7, #16]
 3548              		.loc 2 532 10
 3549 00dc 3B69     		ldr	r3, [r7, #16]
 3550              	.LBE559:
 3551              	.LBE558:
 3552              		.loc 1 1703 5 discriminator 1
 3553 00de 002B     		cmp	r3, #0
 3554 00e0 E5D1     		bne	.L170
 3555              	.LBE555:
1704:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1705:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1706:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3556              		.loc 1 1706 14
 3557 00e2 7B68     		ldr	r3, [r7, #4]
 3558 00e4 D3F88030 		ldr	r3, [r3, #128]
 3559              		.loc 1 1706 8
 3560 00e8 002B     		cmp	r3, #0
 3561 00ea 17D0     		beq	.L171
1707:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1708:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
ARM GAS  /tmp/ccMjAmt3.s 			page 103


 3562              		.loc 1 1708 11
 3563 00ec 7B68     		ldr	r3, [r7, #4]
 3564 00ee D3F88030 		ldr	r3, [r3, #128]
 3565 00f2 1846     		mov	r0, r3
 3566 00f4 FFF7FEFF 		bl	HAL_DMA_Abort
 3567 00f8 0346     		mov	r3, r0
 3568              		.loc 1 1708 10 discriminator 1
 3569 00fa 002B     		cmp	r3, #0
 3570 00fc 0ED0     		beq	.L171
1709:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1710:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3571              		.loc 1 1710 35
 3572 00fe 7B68     		ldr	r3, [r7, #4]
 3573 0100 D3F88030 		ldr	r3, [r3, #128]
 3574              		.loc 1 1710 13
 3575 0104 1846     		mov	r0, r3
 3576 0106 FFF7FEFF 		bl	HAL_DMA_GetError
 3577 010a 0346     		mov	r3, r0
 3578              		.loc 1 1710 12 discriminator 1
 3579 010c 102B     		cmp	r3, #16
 3580 010e 05D1     		bne	.L171
1711:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
1712:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set error code to DMA */
1713:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3581              		.loc 1 1713 28
 3582 0110 7B68     		ldr	r3, [r7, #4]
 3583 0112 1022     		movs	r2, #16
 3584 0114 C3F89020 		str	r2, [r3, #144]
1714:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1715:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           return HAL_TIMEOUT;
 3585              		.loc 1 1715 18
 3586 0118 0323     		movs	r3, #3
 3587 011a 03E0     		b	.L166
 3588              	.L171:
1716:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
1717:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1718:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1719:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1720:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3589              		.loc 1 1720 5
 3590 011c 7868     		ldr	r0, [r7, #4]
 3591 011e FFF7FEFF 		bl	UART_EndRxTransfer
 3592              	.L167:
1721:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1722:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1723:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 3593              		.loc 1 1723 10
 3594 0122 0023     		movs	r3, #0
 3595              	.L166:
1724:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 3596              		.loc 1 1724 1
 3597 0124 1846     		mov	r0, r3
 3598 0126 4037     		adds	r7, r7, #64
 3599              		.cfi_def_cfa_offset 8
 3600 0128 BD46     		mov	sp, r7
 3601              		.cfi_def_cfa_register 13
 3602              		@ sp needed
ARM GAS  /tmp/ccMjAmt3.s 			page 104


 3603 012a 80BD     		pop	{r7, pc}
 3604              		.cfi_endproc
 3605              	.LFE850:
 3607              		.section	.text.HAL_UART_Abort,"ax",%progbits
 3608              		.align	1
 3609              		.global	HAL_UART_Abort
 3610              		.syntax unified
 3611              		.thumb
 3612              		.thumb_func
 3614              	HAL_UART_Abort:
 3615              	.LFB851:
1725:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
1726:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1727:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1728:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1729:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
1730:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1731:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         This procedure performs following operations :
1732:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1733:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1734:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1735:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Set handle State to READY
1736:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1737:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1738:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1739:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1740:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 3616              		.loc 1 1740 1
 3617              		.cfi_startproc
 3618              		@ args = 0, pretend = 0, frame = 128
 3619              		@ frame_needed = 1, uses_anonymous_args = 0
 3620 0000 80B5     		push	{r7, lr}
 3621              		.cfi_def_cfa_offset 8
 3622              		.cfi_offset 7, -8
 3623              		.cfi_offset 14, -4
 3624 0002 A0B0     		sub	sp, sp, #128
 3625              		.cfi_def_cfa_offset 136
 3626 0004 00AF     		add	r7, sp, #0
 3627              		.cfi_def_cfa_register 7
 3628 0006 7860     		str	r0, [r7, #4]
 3629              	.L175:
 3630              	.LBB560:
1741:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1742:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
 3631              		.loc 1 1742 3 discriminator 1
 3632 0008 7B68     		ldr	r3, [r7, #4]
 3633 000a 1B68     		ldr	r3, [r3]
 3634 000c FB65     		str	r3, [r7, #92]
 3635              	.LBB561:
 3636              	.LBB562:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3637              		.loc 2 480 4
 3638 000e FB6D     		ldr	r3, [r7, #92]
 3639              		.syntax unified
 3640              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3641 0010 53E8003F 		ldrex r3, [r3]
 3642              	@ 0 "" 2
ARM GAS  /tmp/ccMjAmt3.s 			page 105


 3643              		.thumb
 3644              		.syntax unified
 3645 0014 BB65     		str	r3, [r7, #88]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3646              		.loc 2 481 10
 3647 0016 BB6D     		ldr	r3, [r7, #88]
 3648              	.LBE562:
 3649              	.LBE561:
 3650              		.loc 1 1742 3 discriminator 1
 3651 0018 23F4F073 		bic	r3, r3, #480
 3652 001c FB67     		str	r3, [r7, #124]
 3653 001e 7B68     		ldr	r3, [r7, #4]
 3654 0020 1B68     		ldr	r3, [r3]
 3655 0022 1A46     		mov	r2, r3
 3656 0024 FB6F     		ldr	r3, [r7, #124]
 3657 0026 BB66     		str	r3, [r7, #104]
 3658 0028 7A66     		str	r2, [r7, #100]
 3659              	.LBB563:
 3660              	.LBB564:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3661              		.loc 2 531 4
 3662 002a 796E     		ldr	r1, [r7, #100]
 3663 002c BA6E     		ldr	r2, [r7, #104]
 3664              		.syntax unified
 3665              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3666 002e 41E80023 		strex r3, r2, [r1]
 3667              	@ 0 "" 2
 3668              		.thumb
 3669              		.syntax unified
 3670 0032 3B66     		str	r3, [r7, #96]
 3671              		.loc 2 532 10
 3672 0034 3B6E     		ldr	r3, [r7, #96]
 3673              	.LBE564:
 3674              	.LBE563:
 3675              		.loc 1 1742 3 discriminator 1
 3676 0036 002B     		cmp	r3, #0
 3677 0038 E6D1     		bne	.L175
 3678              	.L178:
 3679              	.LBE560:
 3680              	.LBB565:
1743:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
1744:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
 3681              		.loc 1 1744 3 discriminator 1
 3682 003a 7B68     		ldr	r3, [r7, #4]
 3683 003c 1B68     		ldr	r3, [r3]
 3684 003e 0833     		adds	r3, r3, #8
 3685 0040 BB64     		str	r3, [r7, #72]
 3686              	.LBB566:
 3687              	.LBB567:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3688              		.loc 2 480 4
 3689 0042 BB6C     		ldr	r3, [r7, #72]
 3690              		.syntax unified
 3691              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3692 0044 53E8003F 		ldrex r3, [r3]
 3693              	@ 0 "" 2
 3694              		.thumb
ARM GAS  /tmp/ccMjAmt3.s 			page 106


 3695              		.syntax unified
 3696 0048 7B64     		str	r3, [r7, #68]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3697              		.loc 2 481 10
 3698 004a 7B6C     		ldr	r3, [r7, #68]
 3699              	.LBE567:
 3700              	.LBE566:
 3701              		.loc 1 1744 3 discriminator 1
 3702 004c 23F08453 		bic	r3, r3, #276824064
 3703 0050 23F00103 		bic	r3, r3, #1
 3704 0054 BB67     		str	r3, [r7, #120]
 3705 0056 7B68     		ldr	r3, [r7, #4]
 3706 0058 1B68     		ldr	r3, [r3]
 3707 005a 0833     		adds	r3, r3, #8
 3708 005c BA6F     		ldr	r2, [r7, #120]
 3709 005e 7A65     		str	r2, [r7, #84]
 3710 0060 3B65     		str	r3, [r7, #80]
 3711              	.LBB568:
 3712              	.LBB569:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3713              		.loc 2 531 4
 3714 0062 396D     		ldr	r1, [r7, #80]
 3715 0064 7A6D     		ldr	r2, [r7, #84]
 3716              		.syntax unified
 3717              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3718 0066 41E80023 		strex r3, r2, [r1]
 3719              	@ 0 "" 2
 3720              		.thumb
 3721              		.syntax unified
 3722 006a FB64     		str	r3, [r7, #76]
 3723              		.loc 2 532 10
 3724 006c FB6C     		ldr	r3, [r7, #76]
 3725              	.LBE569:
 3726              	.LBE568:
 3727              		.loc 1 1744 3 discriminator 1
 3728 006e 002B     		cmp	r3, #0
 3729 0070 E3D1     		bne	.L178
 3730              	.LBE565:
1745:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1746:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1747:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3731              		.loc 1 1747 12
 3732 0072 7B68     		ldr	r3, [r7, #4]
 3733 0074 DB6E     		ldr	r3, [r3, #108]
 3734              		.loc 1 1747 6
 3735 0076 012B     		cmp	r3, #1
 3736 0078 18D1     		bne	.L179
 3737              	.L182:
 3738              	.LBB570:
1748:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1749:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3739              		.loc 1 1749 5 discriminator 1
 3740 007a 7B68     		ldr	r3, [r7, #4]
 3741 007c 1B68     		ldr	r3, [r3]
 3742 007e 7B63     		str	r3, [r7, #52]
 3743              	.LBB571:
 3744              	.LBB572:
ARM GAS  /tmp/ccMjAmt3.s 			page 107


 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3745              		.loc 2 480 4
 3746 0080 7B6B     		ldr	r3, [r7, #52]
 3747              		.syntax unified
 3748              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3749 0082 53E8003F 		ldrex r3, [r3]
 3750              	@ 0 "" 2
 3751              		.thumb
 3752              		.syntax unified
 3753 0086 3B63     		str	r3, [r7, #48]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3754              		.loc 2 481 10
 3755 0088 3B6B     		ldr	r3, [r7, #48]
 3756              	.LBE572:
 3757              	.LBE571:
 3758              		.loc 1 1749 5 discriminator 1
 3759 008a 23F01003 		bic	r3, r3, #16
 3760 008e 7B67     		str	r3, [r7, #116]
 3761 0090 7B68     		ldr	r3, [r7, #4]
 3762 0092 1B68     		ldr	r3, [r3]
 3763 0094 1A46     		mov	r2, r3
 3764 0096 7B6F     		ldr	r3, [r7, #116]
 3765 0098 3B64     		str	r3, [r7, #64]
 3766 009a FA63     		str	r2, [r7, #60]
 3767              	.LBB573:
 3768              	.LBB574:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3769              		.loc 2 531 4
 3770 009c F96B     		ldr	r1, [r7, #60]
 3771 009e 3A6C     		ldr	r2, [r7, #64]
 3772              		.syntax unified
 3773              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3774 00a0 41E80023 		strex r3, r2, [r1]
 3775              	@ 0 "" 2
 3776              		.thumb
 3777              		.syntax unified
 3778 00a4 BB63     		str	r3, [r7, #56]
 3779              		.loc 2 532 10
 3780 00a6 BB6B     		ldr	r3, [r7, #56]
 3781              	.LBE574:
 3782              	.LBE573:
 3783              		.loc 1 1749 5 discriminator 1
 3784 00a8 002B     		cmp	r3, #0
 3785 00aa E6D1     		bne	.L182
 3786              	.L179:
 3787              	.LBE570:
1750:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1751:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1752:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
1753:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1754:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3788              		.loc 1 1754 7
 3789 00ac 7B68     		ldr	r3, [r7, #4]
 3790 00ae 1B68     		ldr	r3, [r3]
 3791 00b0 9B68     		ldr	r3, [r3, #8]
 3792 00b2 03F08003 		and	r3, r3, #128
 3793              		.loc 1 1754 6
ARM GAS  /tmp/ccMjAmt3.s 			page 108


 3794 00b6 802B     		cmp	r3, #128
 3795 00b8 37D1     		bne	.L183
 3796              	.L186:
 3797              	.LBB575:
1755:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1756:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1757:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3798              		.loc 1 1757 5 discriminator 1
 3799 00ba 7B68     		ldr	r3, [r7, #4]
 3800 00bc 1B68     		ldr	r3, [r3]
 3801 00be 0833     		adds	r3, r3, #8
 3802 00c0 3B62     		str	r3, [r7, #32]
 3803              	.LBB576:
 3804              	.LBB577:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3805              		.loc 2 480 4
 3806 00c2 3B6A     		ldr	r3, [r7, #32]
 3807              		.syntax unified
 3808              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3809 00c4 53E8003F 		ldrex r3, [r3]
 3810              	@ 0 "" 2
 3811              		.thumb
 3812              		.syntax unified
 3813 00c8 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3814              		.loc 2 481 10
 3815 00ca FB69     		ldr	r3, [r7, #28]
 3816              	.LBE577:
 3817              	.LBE576:
 3818              		.loc 1 1757 5 discriminator 1
 3819 00cc 23F08003 		bic	r3, r3, #128
 3820 00d0 3B67     		str	r3, [r7, #112]
 3821 00d2 7B68     		ldr	r3, [r7, #4]
 3822 00d4 1B68     		ldr	r3, [r3]
 3823 00d6 0833     		adds	r3, r3, #8
 3824 00d8 3A6F     		ldr	r2, [r7, #112]
 3825 00da FA62     		str	r2, [r7, #44]
 3826 00dc BB62     		str	r3, [r7, #40]
 3827              	.LBB578:
 3828              	.LBB579:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3829              		.loc 2 531 4
 3830 00de B96A     		ldr	r1, [r7, #40]
 3831 00e0 FA6A     		ldr	r2, [r7, #44]
 3832              		.syntax unified
 3833              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3834 00e2 41E80023 		strex r3, r2, [r1]
 3835              	@ 0 "" 2
 3836              		.thumb
 3837              		.syntax unified
 3838 00e6 7B62     		str	r3, [r7, #36]
 3839              		.loc 2 532 10
 3840 00e8 7B6A     		ldr	r3, [r7, #36]
 3841              	.LBE579:
 3842              	.LBE578:
 3843              		.loc 1 1757 5 discriminator 1
 3844 00ea 002B     		cmp	r3, #0
ARM GAS  /tmp/ccMjAmt3.s 			page 109


 3845 00ec E5D1     		bne	.L186
 3846              	.LBE575:
1758:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1759:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1760:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3847              		.loc 1 1760 14
 3848 00ee 7B68     		ldr	r3, [r7, #4]
 3849 00f0 DB6F     		ldr	r3, [r3, #124]
 3850              		.loc 1 1760 8
 3851 00f2 002B     		cmp	r3, #0
 3852 00f4 19D0     		beq	.L183
1761:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1762:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1763:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1764:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3853              		.loc 1 1764 12
 3854 00f6 7B68     		ldr	r3, [r7, #4]
 3855 00f8 DB6F     		ldr	r3, [r3, #124]
 3856              		.loc 1 1764 40
 3857 00fa 0022     		movs	r2, #0
 3858 00fc DA66     		str	r2, [r3, #108]
1765:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1766:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3859              		.loc 1 1766 11
 3860 00fe 7B68     		ldr	r3, [r7, #4]
 3861 0100 DB6F     		ldr	r3, [r3, #124]
 3862 0102 1846     		mov	r0, r3
 3863 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 3864 0108 0346     		mov	r3, r0
 3865              		.loc 1 1766 10 discriminator 1
 3866 010a 002B     		cmp	r3, #0
 3867 010c 0DD0     		beq	.L183
1767:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1768:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3868              		.loc 1 1768 35
 3869 010e 7B68     		ldr	r3, [r7, #4]
 3870 0110 DB6F     		ldr	r3, [r3, #124]
 3871              		.loc 1 1768 13
 3872 0112 1846     		mov	r0, r3
 3873 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 3874 0118 0346     		mov	r3, r0
 3875              		.loc 1 1768 12 discriminator 1
 3876 011a 102B     		cmp	r3, #16
 3877 011c 05D1     		bne	.L183
1769:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
1770:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set error code to DMA */
1771:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3878              		.loc 1 1771 28
 3879 011e 7B68     		ldr	r3, [r7, #4]
 3880 0120 1022     		movs	r2, #16
 3881 0122 C3F89020 		str	r2, [r3, #144]
1772:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1773:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           return HAL_TIMEOUT;
 3882              		.loc 1 1773 18
 3883 0126 0323     		movs	r3, #3
 3884 0128 73E0     		b	.L187
 3885              	.L183:
ARM GAS  /tmp/ccMjAmt3.s 			page 110


1774:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
1775:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1776:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1777:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1778:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1779:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1780:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3886              		.loc 1 1780 7
 3887 012a 7B68     		ldr	r3, [r7, #4]
 3888 012c 1B68     		ldr	r3, [r3]
 3889 012e 9B68     		ldr	r3, [r3, #8]
 3890 0130 03F04003 		and	r3, r3, #64
 3891              		.loc 1 1780 6
 3892 0134 402B     		cmp	r3, #64
 3893 0136 3BD1     		bne	.L188
 3894              	.L191:
 3895              	.LBB580:
1781:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1782:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1783:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3896              		.loc 1 1783 5 discriminator 1
 3897 0138 7B68     		ldr	r3, [r7, #4]
 3898 013a 1B68     		ldr	r3, [r3]
 3899 013c 0833     		adds	r3, r3, #8
 3900 013e FB60     		str	r3, [r7, #12]
 3901              	.LBB581:
 3902              	.LBB582:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3903              		.loc 2 480 4
 3904 0140 FB68     		ldr	r3, [r7, #12]
 3905              		.syntax unified
 3906              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3907 0142 53E8003F 		ldrex r3, [r3]
 3908              	@ 0 "" 2
 3909              		.thumb
 3910              		.syntax unified
 3911 0146 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3912              		.loc 2 481 10
 3913 0148 BB68     		ldr	r3, [r7, #8]
 3914              	.LBE582:
 3915              	.LBE581:
 3916              		.loc 1 1783 5 discriminator 1
 3917 014a 23F04003 		bic	r3, r3, #64
 3918 014e FB66     		str	r3, [r7, #108]
 3919 0150 7B68     		ldr	r3, [r7, #4]
 3920 0152 1B68     		ldr	r3, [r3]
 3921 0154 0833     		adds	r3, r3, #8
 3922 0156 FA6E     		ldr	r2, [r7, #108]
 3923 0158 BA61     		str	r2, [r7, #24]
 3924 015a 7B61     		str	r3, [r7, #20]
 3925              	.LBB583:
 3926              	.LBB584:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3927              		.loc 2 531 4
 3928 015c 7969     		ldr	r1, [r7, #20]
 3929 015e BA69     		ldr	r2, [r7, #24]
ARM GAS  /tmp/ccMjAmt3.s 			page 111


 3930              		.syntax unified
 3931              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3932 0160 41E80023 		strex r3, r2, [r1]
 3933              	@ 0 "" 2
 3934              		.thumb
 3935              		.syntax unified
 3936 0164 3B61     		str	r3, [r7, #16]
 3937              		.loc 2 532 10
 3938 0166 3B69     		ldr	r3, [r7, #16]
 3939              	.LBE584:
 3940              	.LBE583:
 3941              		.loc 1 1783 5 discriminator 1
 3942 0168 002B     		cmp	r3, #0
 3943 016a E5D1     		bne	.L191
 3944              	.LBE580:
1784:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1785:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1786:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3945              		.loc 1 1786 14
 3946 016c 7B68     		ldr	r3, [r7, #4]
 3947 016e D3F88030 		ldr	r3, [r3, #128]
 3948              		.loc 1 1786 8
 3949 0172 002B     		cmp	r3, #0
 3950 0174 1CD0     		beq	.L188
1787:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1788:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1789:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1790:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3951              		.loc 1 1790 12
 3952 0176 7B68     		ldr	r3, [r7, #4]
 3953 0178 D3F88030 		ldr	r3, [r3, #128]
 3954              		.loc 1 1790 40
 3955 017c 0022     		movs	r2, #0
 3956 017e DA66     		str	r2, [r3, #108]
1791:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1792:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3957              		.loc 1 1792 11
 3958 0180 7B68     		ldr	r3, [r7, #4]
 3959 0182 D3F88030 		ldr	r3, [r3, #128]
 3960 0186 1846     		mov	r0, r3
 3961 0188 FFF7FEFF 		bl	HAL_DMA_Abort
 3962 018c 0346     		mov	r3, r0
 3963              		.loc 1 1792 10 discriminator 1
 3964 018e 002B     		cmp	r3, #0
 3965 0190 0ED0     		beq	.L188
1793:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1794:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3966              		.loc 1 1794 35
 3967 0192 7B68     		ldr	r3, [r7, #4]
 3968 0194 D3F88030 		ldr	r3, [r3, #128]
 3969              		.loc 1 1794 13
 3970 0198 1846     		mov	r0, r3
 3971 019a FFF7FEFF 		bl	HAL_DMA_GetError
 3972 019e 0346     		mov	r3, r0
 3973              		.loc 1 1794 12 discriminator 1
 3974 01a0 102B     		cmp	r3, #16
 3975 01a2 05D1     		bne	.L188
ARM GAS  /tmp/ccMjAmt3.s 			page 112


1795:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
1796:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set error code to DMA */
1797:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3976              		.loc 1 1797 28
 3977 01a4 7B68     		ldr	r3, [r7, #4]
 3978 01a6 1022     		movs	r2, #16
 3979 01a8 C3F89020 		str	r2, [r3, #144]
1798:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1799:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           return HAL_TIMEOUT;
 3980              		.loc 1 1799 18
 3981 01ac 0323     		movs	r3, #3
 3982 01ae 30E0     		b	.L187
 3983              	.L188:
1800:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
1801:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1802:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1803:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1804:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
1805:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1806:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1807:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3984              		.loc 1 1807 22
 3985 01b0 7B68     		ldr	r3, [r7, #4]
 3986 01b2 0022     		movs	r2, #0
 3987 01b4 A3F85620 		strh	r2, [r3, #86]	@ movhi
1808:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3988              		.loc 1 1808 22
 3989 01b8 7B68     		ldr	r3, [r7, #4]
 3990 01ba 0022     		movs	r2, #0
 3991 01bc A3F85E20 		strh	r2, [r3, #94]	@ movhi
1809:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1810:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1811:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 3992              		.loc 1 1811 3
 3993 01c0 7B68     		ldr	r3, [r7, #4]
 3994 01c2 1B68     		ldr	r3, [r3]
 3995 01c4 0F22     		movs	r2, #15
 3996 01c6 1A62     		str	r2, [r3, #32]
1812:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1813:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1814:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 3997              		.loc 1 1814 12
 3998 01c8 7B68     		ldr	r3, [r7, #4]
 3999 01ca 5B6E     		ldr	r3, [r3, #100]
 4000              		.loc 1 1814 6
 4001 01cc B3F1005F 		cmp	r3, #536870912
 4002 01d0 07D1     		bne	.L192
1815:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1816:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 4003              		.loc 1 1816 5
 4004 01d2 7B68     		ldr	r3, [r7, #4]
 4005 01d4 1B68     		ldr	r3, [r3]
 4006 01d6 9A69     		ldr	r2, [r3, #24]
 4007 01d8 7B68     		ldr	r3, [r7, #4]
 4008 01da 1B68     		ldr	r3, [r3]
 4009 01dc 42F01002 		orr	r2, r2, #16
 4010 01e0 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/ccMjAmt3.s 			page 113


 4011              	.L192:
1817:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1818:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1819:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Discard the received data */
1820:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4012              		.loc 1 1820 3
 4013 01e2 7B68     		ldr	r3, [r7, #4]
 4014 01e4 1B68     		ldr	r3, [r3]
 4015 01e6 9A69     		ldr	r2, [r3, #24]
 4016 01e8 7B68     		ldr	r3, [r7, #4]
 4017 01ea 1B68     		ldr	r3, [r3]
 4018 01ec 42F00802 		orr	r2, r2, #8
 4019 01f0 9A61     		str	r2, [r3, #24]
1821:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1822:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1823:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 4020              		.loc 1 1823 18
 4021 01f2 7B68     		ldr	r3, [r7, #4]
 4022 01f4 2022     		movs	r2, #32
 4023 01f6 C3F88820 		str	r2, [r3, #136]
1824:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4024              		.loc 1 1824 18
 4025 01fa 7B68     		ldr	r3, [r7, #4]
 4026 01fc 2022     		movs	r2, #32
 4027 01fe C3F88C20 		str	r2, [r3, #140]
1825:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4028              		.loc 1 1825 24
 4029 0202 7B68     		ldr	r3, [r7, #4]
 4030 0204 0022     		movs	r2, #0
 4031 0206 DA66     		str	r2, [r3, #108]
1826:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1827:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 4032              		.loc 1 1827 20
 4033 0208 7B68     		ldr	r3, [r7, #4]
 4034 020a 0022     		movs	r2, #0
 4035 020c C3F89020 		str	r2, [r3, #144]
1828:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1829:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 4036              		.loc 1 1829 10
 4037 0210 0023     		movs	r3, #0
 4038              	.L187:
1830:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 4039              		.loc 1 1830 1
 4040 0212 1846     		mov	r0, r3
 4041 0214 8037     		adds	r7, r7, #128
 4042              		.cfi_def_cfa_offset 8
 4043 0216 BD46     		mov	sp, r7
 4044              		.cfi_def_cfa_register 13
 4045              		@ sp needed
 4046 0218 80BD     		pop	{r7, pc}
 4047              		.cfi_endproc
 4048              	.LFE851:
 4050              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 4051              		.align	1
 4052              		.global	HAL_UART_AbortTransmit
 4053              		.syntax unified
 4054              		.thumb
ARM GAS  /tmp/ccMjAmt3.s 			page 114


 4055              		.thumb_func
 4057              	HAL_UART_AbortTransmit:
 4058              	.LFB852:
1831:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1832:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1833:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1834:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
1835:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1836:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         This procedure performs following operations :
1837:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1838:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1839:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1840:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Set handle State to READY
1841:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1842:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1843:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1844:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1845:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 4059              		.loc 1 1845 1
 4060              		.cfi_startproc
 4061              		@ args = 0, pretend = 0, frame = 80
 4062              		@ frame_needed = 1, uses_anonymous_args = 0
 4063 0000 80B5     		push	{r7, lr}
 4064              		.cfi_def_cfa_offset 8
 4065              		.cfi_offset 7, -8
 4066              		.cfi_offset 14, -4
 4067 0002 94B0     		sub	sp, sp, #80
 4068              		.cfi_def_cfa_offset 88
 4069 0004 00AF     		add	r7, sp, #0
 4070              		.cfi_def_cfa_register 7
 4071 0006 7860     		str	r0, [r7, #4]
 4072              	.L196:
 4073              	.LBB585:
1846:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1847:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
 4074              		.loc 1 1847 3 discriminator 1
 4075 0008 7B68     		ldr	r3, [r7, #4]
 4076 000a 1B68     		ldr	r3, [r3]
 4077 000c 7B63     		str	r3, [r7, #52]
 4078              	.LBB586:
 4079              	.LBB587:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4080              		.loc 2 480 4
 4081 000e 7B6B     		ldr	r3, [r7, #52]
 4082              		.syntax unified
 4083              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4084 0010 53E8003F 		ldrex r3, [r3]
 4085              	@ 0 "" 2
 4086              		.thumb
 4087              		.syntax unified
 4088 0014 3B63     		str	r3, [r7, #48]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4089              		.loc 2 481 10
 4090 0016 3B6B     		ldr	r3, [r7, #48]
 4091              	.LBE587:
 4092              	.LBE586:
 4093              		.loc 1 1847 3 discriminator 1
ARM GAS  /tmp/ccMjAmt3.s 			page 115


 4094 0018 23F0C003 		bic	r3, r3, #192
 4095 001c FB64     		str	r3, [r7, #76]
 4096 001e 7B68     		ldr	r3, [r7, #4]
 4097 0020 1B68     		ldr	r3, [r3]
 4098 0022 1A46     		mov	r2, r3
 4099 0024 FB6C     		ldr	r3, [r7, #76]
 4100 0026 3B64     		str	r3, [r7, #64]
 4101 0028 FA63     		str	r2, [r7, #60]
 4102              	.LBB588:
 4103              	.LBB589:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4104              		.loc 2 531 4
 4105 002a F96B     		ldr	r1, [r7, #60]
 4106 002c 3A6C     		ldr	r2, [r7, #64]
 4107              		.syntax unified
 4108              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4109 002e 41E80023 		strex r3, r2, [r1]
 4110              	@ 0 "" 2
 4111              		.thumb
 4112              		.syntax unified
 4113 0032 BB63     		str	r3, [r7, #56]
 4114              		.loc 2 532 10
 4115 0034 BB6B     		ldr	r3, [r7, #56]
 4116              	.LBE589:
 4117              	.LBE588:
 4118              		.loc 1 1847 3 discriminator 1
 4119 0036 002B     		cmp	r3, #0
 4120 0038 E6D1     		bne	.L196
 4121              	.L199:
 4122              	.LBE585:
 4123              	.LBB590:
1848:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 4124              		.loc 1 1848 3 discriminator 1
 4125 003a 7B68     		ldr	r3, [r7, #4]
 4126 003c 1B68     		ldr	r3, [r3]
 4127 003e 0833     		adds	r3, r3, #8
 4128 0040 3B62     		str	r3, [r7, #32]
 4129              	.LBB591:
 4130              	.LBB592:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4131              		.loc 2 480 4
 4132 0042 3B6A     		ldr	r3, [r7, #32]
 4133              		.syntax unified
 4134              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4135 0044 53E8003F 		ldrex r3, [r3]
 4136              	@ 0 "" 2
 4137              		.thumb
 4138              		.syntax unified
 4139 0048 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4140              		.loc 2 481 10
 4141 004a FB69     		ldr	r3, [r7, #28]
 4142              	.LBE592:
 4143              	.LBE591:
 4144              		.loc 1 1848 3 discriminator 1
 4145 004c 23F40003 		bic	r3, r3, #8388608
 4146 0050 BB64     		str	r3, [r7, #72]
ARM GAS  /tmp/ccMjAmt3.s 			page 116


 4147 0052 7B68     		ldr	r3, [r7, #4]
 4148 0054 1B68     		ldr	r3, [r3]
 4149 0056 0833     		adds	r3, r3, #8
 4150 0058 BA6C     		ldr	r2, [r7, #72]
 4151 005a FA62     		str	r2, [r7, #44]
 4152 005c BB62     		str	r3, [r7, #40]
 4153              	.LBB593:
 4154              	.LBB594:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4155              		.loc 2 531 4
 4156 005e B96A     		ldr	r1, [r7, #40]
 4157 0060 FA6A     		ldr	r2, [r7, #44]
 4158              		.syntax unified
 4159              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4160 0062 41E80023 		strex r3, r2, [r1]
 4161              	@ 0 "" 2
 4162              		.thumb
 4163              		.syntax unified
 4164 0066 7B62     		str	r3, [r7, #36]
 4165              		.loc 2 532 10
 4166 0068 7B6A     		ldr	r3, [r7, #36]
 4167              	.LBE594:
 4168              	.LBE593:
 4169              		.loc 1 1848 3 discriminator 1
 4170 006a 002B     		cmp	r3, #0
 4171 006c E5D1     		bne	.L199
 4172              	.LBE590:
1849:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1850:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
1851:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1852:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4173              		.loc 1 1852 7
 4174 006e 7B68     		ldr	r3, [r7, #4]
 4175 0070 1B68     		ldr	r3, [r3]
 4176 0072 9B68     		ldr	r3, [r3, #8]
 4177 0074 03F08003 		and	r3, r3, #128
 4178              		.loc 1 1852 6
 4179 0078 802B     		cmp	r3, #128
 4180 007a 37D1     		bne	.L200
 4181              	.L203:
 4182              	.LBB595:
1853:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1854:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1855:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4183              		.loc 1 1855 5 discriminator 1
 4184 007c 7B68     		ldr	r3, [r7, #4]
 4185 007e 1B68     		ldr	r3, [r3]
 4186 0080 0833     		adds	r3, r3, #8
 4187 0082 FB60     		str	r3, [r7, #12]
 4188              	.LBB596:
 4189              	.LBB597:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4190              		.loc 2 480 4
 4191 0084 FB68     		ldr	r3, [r7, #12]
 4192              		.syntax unified
 4193              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4194 0086 53E8003F 		ldrex r3, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 117


 4195              	@ 0 "" 2
 4196              		.thumb
 4197              		.syntax unified
 4198 008a BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4199              		.loc 2 481 10
 4200 008c BB68     		ldr	r3, [r7, #8]
 4201              	.LBE597:
 4202              	.LBE596:
 4203              		.loc 1 1855 5 discriminator 1
 4204 008e 23F08003 		bic	r3, r3, #128
 4205 0092 7B64     		str	r3, [r7, #68]
 4206 0094 7B68     		ldr	r3, [r7, #4]
 4207 0096 1B68     		ldr	r3, [r3]
 4208 0098 0833     		adds	r3, r3, #8
 4209 009a 7A6C     		ldr	r2, [r7, #68]
 4210 009c BA61     		str	r2, [r7, #24]
 4211 009e 7B61     		str	r3, [r7, #20]
 4212              	.LBB598:
 4213              	.LBB599:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4214              		.loc 2 531 4
 4215 00a0 7969     		ldr	r1, [r7, #20]
 4216 00a2 BA69     		ldr	r2, [r7, #24]
 4217              		.syntax unified
 4218              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4219 00a4 41E80023 		strex r3, r2, [r1]
 4220              	@ 0 "" 2
 4221              		.thumb
 4222              		.syntax unified
 4223 00a8 3B61     		str	r3, [r7, #16]
 4224              		.loc 2 532 10
 4225 00aa 3B69     		ldr	r3, [r7, #16]
 4226              	.LBE599:
 4227              	.LBE598:
 4228              		.loc 1 1855 5 discriminator 1
 4229 00ac 002B     		cmp	r3, #0
 4230 00ae E5D1     		bne	.L203
 4231              	.LBE595:
1856:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1857:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1858:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4232              		.loc 1 1858 14
 4233 00b0 7B68     		ldr	r3, [r7, #4]
 4234 00b2 DB6F     		ldr	r3, [r3, #124]
 4235              		.loc 1 1858 8
 4236 00b4 002B     		cmp	r3, #0
 4237 00b6 19D0     		beq	.L200
1859:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1860:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1861:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1862:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 4238              		.loc 1 1862 12
 4239 00b8 7B68     		ldr	r3, [r7, #4]
 4240 00ba DB6F     		ldr	r3, [r3, #124]
 4241              		.loc 1 1862 40
 4242 00bc 0022     		movs	r2, #0
ARM GAS  /tmp/ccMjAmt3.s 			page 118


 4243 00be DA66     		str	r2, [r3, #108]
1863:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1864:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 4244              		.loc 1 1864 11
 4245 00c0 7B68     		ldr	r3, [r7, #4]
 4246 00c2 DB6F     		ldr	r3, [r3, #124]
 4247 00c4 1846     		mov	r0, r3
 4248 00c6 FFF7FEFF 		bl	HAL_DMA_Abort
 4249 00ca 0346     		mov	r3, r0
 4250              		.loc 1 1864 10 discriminator 1
 4251 00cc 002B     		cmp	r3, #0
 4252 00ce 0DD0     		beq	.L200
1865:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1866:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 4253              		.loc 1 1866 35
 4254 00d0 7B68     		ldr	r3, [r7, #4]
 4255 00d2 DB6F     		ldr	r3, [r3, #124]
 4256              		.loc 1 1866 13
 4257 00d4 1846     		mov	r0, r3
 4258 00d6 FFF7FEFF 		bl	HAL_DMA_GetError
 4259 00da 0346     		mov	r3, r0
 4260              		.loc 1 1866 12 discriminator 1
 4261 00dc 102B     		cmp	r3, #16
 4262 00de 05D1     		bne	.L200
1867:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
1868:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set error code to DMA */
1869:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 4263              		.loc 1 1869 28
 4264 00e0 7B68     		ldr	r3, [r7, #4]
 4265 00e2 1022     		movs	r2, #16
 4266 00e4 C3F89020 		str	r2, [r3, #144]
1870:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1871:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           return HAL_TIMEOUT;
 4267              		.loc 1 1871 18
 4268 00e8 0323     		movs	r3, #3
 4269 00ea 15E0     		b	.L204
 4270              	.L200:
1872:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
1873:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1874:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1875:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1876:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
1877:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1878:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Reset Tx transfer counter */
1879:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxXferCount = 0U;
 4271              		.loc 1 1879 22
 4272 00ec 7B68     		ldr	r3, [r7, #4]
 4273 00ee 0022     		movs	r2, #0
 4274 00f0 A3F85620 		strh	r2, [r3, #86]	@ movhi
1880:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1881:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1882:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 4275              		.loc 1 1882 12
 4276 00f4 7B68     		ldr	r3, [r7, #4]
 4277 00f6 5B6E     		ldr	r3, [r3, #100]
 4278              		.loc 1 1882 6
 4279 00f8 B3F1005F 		cmp	r3, #536870912
ARM GAS  /tmp/ccMjAmt3.s 			page 119


 4280 00fc 07D1     		bne	.L205
1883:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1884:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 4281              		.loc 1 1884 5
 4282 00fe 7B68     		ldr	r3, [r7, #4]
 4283 0100 1B68     		ldr	r3, [r3]
 4284 0102 9A69     		ldr	r2, [r3, #24]
 4285 0104 7B68     		ldr	r3, [r7, #4]
 4286 0106 1B68     		ldr	r3, [r3]
 4287 0108 42F01002 		orr	r2, r2, #16
 4288 010c 9A61     		str	r2, [r3, #24]
 4289              	.L205:
1885:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1886:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1887:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1888:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4290              		.loc 1 1888 17
 4291 010e 7B68     		ldr	r3, [r7, #4]
 4292 0110 2022     		movs	r2, #32
 4293 0112 C3F88820 		str	r2, [r3, #136]
1889:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1890:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 4294              		.loc 1 1890 10
 4295 0116 0023     		movs	r3, #0
 4296              	.L204:
1891:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 4297              		.loc 1 1891 1
 4298 0118 1846     		mov	r0, r3
 4299 011a 5037     		adds	r7, r7, #80
 4300              		.cfi_def_cfa_offset 8
 4301 011c BD46     		mov	sp, r7
 4302              		.cfi_def_cfa_register 13
 4303              		@ sp needed
 4304 011e 80BD     		pop	{r7, pc}
 4305              		.cfi_endproc
 4306              	.LFE852:
 4308              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 4309              		.align	1
 4310              		.global	HAL_UART_AbortReceive
 4311              		.syntax unified
 4312              		.thumb
 4313              		.thumb_func
 4315              	HAL_UART_AbortReceive:
 4316              	.LFB853:
1892:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1893:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1894:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1895:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
1896:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1897:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         This procedure performs following operations :
1898:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1899:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1900:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1901:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Set handle State to READY
1902:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1903:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1904:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
ARM GAS  /tmp/ccMjAmt3.s 			page 120


1905:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1906:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 4317              		.loc 1 1906 1
 4318              		.cfi_startproc
 4319              		@ args = 0, pretend = 0, frame = 104
 4320              		@ frame_needed = 1, uses_anonymous_args = 0
 4321 0000 80B5     		push	{r7, lr}
 4322              		.cfi_def_cfa_offset 8
 4323              		.cfi_offset 7, -8
 4324              		.cfi_offset 14, -4
 4325 0002 9AB0     		sub	sp, sp, #104
 4326              		.cfi_def_cfa_offset 112
 4327 0004 00AF     		add	r7, sp, #0
 4328              		.cfi_def_cfa_register 7
 4329 0006 7860     		str	r0, [r7, #4]
 4330              	.L209:
 4331              	.LBB600:
1907:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1908:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
 4332              		.loc 1 1908 3 discriminator 1
 4333 0008 7B68     		ldr	r3, [r7, #4]
 4334 000a 1B68     		ldr	r3, [r3]
 4335 000c BB64     		str	r3, [r7, #72]
 4336              	.LBB601:
 4337              	.LBB602:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4338              		.loc 2 480 4
 4339 000e BB6C     		ldr	r3, [r7, #72]
 4340              		.syntax unified
 4341              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4342 0010 53E8003F 		ldrex r3, [r3]
 4343              	@ 0 "" 2
 4344              		.thumb
 4345              		.syntax unified
 4346 0014 7B64     		str	r3, [r7, #68]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4347              		.loc 2 481 10
 4348 0016 7B6C     		ldr	r3, [r7, #68]
 4349              	.LBE602:
 4350              	.LBE601:
 4351              		.loc 1 1908 3 discriminator 1
 4352 0018 23F49073 		bic	r3, r3, #288
 4353 001c 7B66     		str	r3, [r7, #100]
 4354 001e 7B68     		ldr	r3, [r7, #4]
 4355 0020 1B68     		ldr	r3, [r3]
 4356 0022 1A46     		mov	r2, r3
 4357 0024 7B6E     		ldr	r3, [r7, #100]
 4358 0026 7B65     		str	r3, [r7, #84]
 4359 0028 3A65     		str	r2, [r7, #80]
 4360              	.LBB603:
 4361              	.LBB604:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4362              		.loc 2 531 4
 4363 002a 396D     		ldr	r1, [r7, #80]
 4364 002c 7A6D     		ldr	r2, [r7, #84]
 4365              		.syntax unified
 4366              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccMjAmt3.s 			page 121


 4367 002e 41E80023 		strex r3, r2, [r1]
 4368              	@ 0 "" 2
 4369              		.thumb
 4370              		.syntax unified
 4371 0032 FB64     		str	r3, [r7, #76]
 4372              		.loc 2 532 10
 4373 0034 FB6C     		ldr	r3, [r7, #76]
 4374              	.LBE604:
 4375              	.LBE603:
 4376              		.loc 1 1908 3 discriminator 1
 4377 0036 002B     		cmp	r3, #0
 4378 0038 E6D1     		bne	.L209
 4379              	.L212:
 4380              	.LBE600:
 4381              	.LBB605:
1909:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 4382              		.loc 1 1909 3 discriminator 1
 4383 003a 7B68     		ldr	r3, [r7, #4]
 4384 003c 1B68     		ldr	r3, [r3]
 4385 003e 0833     		adds	r3, r3, #8
 4386 0040 7B63     		str	r3, [r7, #52]
 4387              	.LBB606:
 4388              	.LBB607:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4389              		.loc 2 480 4
 4390 0042 7B6B     		ldr	r3, [r7, #52]
 4391              		.syntax unified
 4392              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4393 0044 53E8003F 		ldrex r3, [r3]
 4394              	@ 0 "" 2
 4395              		.thumb
 4396              		.syntax unified
 4397 0048 3B63     		str	r3, [r7, #48]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4398              		.loc 2 481 10
 4399 004a 3B6B     		ldr	r3, [r7, #48]
 4400              	.LBE607:
 4401              	.LBE606:
 4402              		.loc 1 1909 3 discriminator 1
 4403 004c 23F08053 		bic	r3, r3, #268435456
 4404 0050 23F00103 		bic	r3, r3, #1
 4405 0054 3B66     		str	r3, [r7, #96]
 4406 0056 7B68     		ldr	r3, [r7, #4]
 4407 0058 1B68     		ldr	r3, [r3]
 4408 005a 0833     		adds	r3, r3, #8
 4409 005c 3A6E     		ldr	r2, [r7, #96]
 4410 005e 3A64     		str	r2, [r7, #64]
 4411 0060 FB63     		str	r3, [r7, #60]
 4412              	.LBB608:
 4413              	.LBB609:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4414              		.loc 2 531 4
 4415 0062 F96B     		ldr	r1, [r7, #60]
 4416 0064 3A6C     		ldr	r2, [r7, #64]
 4417              		.syntax unified
 4418              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4419 0066 41E80023 		strex r3, r2, [r1]
ARM GAS  /tmp/ccMjAmt3.s 			page 122


 4420              	@ 0 "" 2
 4421              		.thumb
 4422              		.syntax unified
 4423 006a BB63     		str	r3, [r7, #56]
 4424              		.loc 2 532 10
 4425 006c BB6B     		ldr	r3, [r7, #56]
 4426              	.LBE609:
 4427              	.LBE608:
 4428              		.loc 1 1909 3 discriminator 1
 4429 006e 002B     		cmp	r3, #0
 4430 0070 E3D1     		bne	.L212
 4431              	.LBE605:
1910:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1911:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1912:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4432              		.loc 1 1912 12
 4433 0072 7B68     		ldr	r3, [r7, #4]
 4434 0074 DB6E     		ldr	r3, [r3, #108]
 4435              		.loc 1 1912 6
 4436 0076 012B     		cmp	r3, #1
 4437 0078 18D1     		bne	.L213
 4438              	.L216:
 4439              	.LBB610:
1913:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1914:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4440              		.loc 1 1914 5 discriminator 1
 4441 007a 7B68     		ldr	r3, [r7, #4]
 4442 007c 1B68     		ldr	r3, [r3]
 4443 007e 3B62     		str	r3, [r7, #32]
 4444              	.LBB611:
 4445              	.LBB612:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4446              		.loc 2 480 4
 4447 0080 3B6A     		ldr	r3, [r7, #32]
 4448              		.syntax unified
 4449              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4450 0082 53E8003F 		ldrex r3, [r3]
 4451              	@ 0 "" 2
 4452              		.thumb
 4453              		.syntax unified
 4454 0086 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4455              		.loc 2 481 10
 4456 0088 FB69     		ldr	r3, [r7, #28]
 4457              	.LBE612:
 4458              	.LBE611:
 4459              		.loc 1 1914 5 discriminator 1
 4460 008a 23F01003 		bic	r3, r3, #16
 4461 008e FB65     		str	r3, [r7, #92]
 4462 0090 7B68     		ldr	r3, [r7, #4]
 4463 0092 1B68     		ldr	r3, [r3]
 4464 0094 1A46     		mov	r2, r3
 4465 0096 FB6D     		ldr	r3, [r7, #92]
 4466 0098 FB62     		str	r3, [r7, #44]
 4467 009a BA62     		str	r2, [r7, #40]
 4468              	.LBB613:
 4469              	.LBB614:
ARM GAS  /tmp/ccMjAmt3.s 			page 123


 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4470              		.loc 2 531 4
 4471 009c B96A     		ldr	r1, [r7, #40]
 4472 009e FA6A     		ldr	r2, [r7, #44]
 4473              		.syntax unified
 4474              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4475 00a0 41E80023 		strex r3, r2, [r1]
 4476              	@ 0 "" 2
 4477              		.thumb
 4478              		.syntax unified
 4479 00a4 7B62     		str	r3, [r7, #36]
 4480              		.loc 2 532 10
 4481 00a6 7B6A     		ldr	r3, [r7, #36]
 4482              	.LBE614:
 4483              	.LBE613:
 4484              		.loc 1 1914 5 discriminator 1
 4485 00a8 002B     		cmp	r3, #0
 4486 00aa E6D1     		bne	.L216
 4487              	.L213:
 4488              	.LBE610:
1915:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1916:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1917:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
1918:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1919:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4489              		.loc 1 1919 7
 4490 00ac 7B68     		ldr	r3, [r7, #4]
 4491 00ae 1B68     		ldr	r3, [r3]
 4492 00b0 9B68     		ldr	r3, [r3, #8]
 4493 00b2 03F04003 		and	r3, r3, #64
 4494              		.loc 1 1919 6
 4495 00b6 402B     		cmp	r3, #64
 4496 00b8 3BD1     		bne	.L217
 4497              	.L220:
 4498              	.LBB615:
1920:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1921:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1922:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4499              		.loc 1 1922 5 discriminator 1
 4500 00ba 7B68     		ldr	r3, [r7, #4]
 4501 00bc 1B68     		ldr	r3, [r3]
 4502 00be 0833     		adds	r3, r3, #8
 4503 00c0 FB60     		str	r3, [r7, #12]
 4504              	.LBB616:
 4505              	.LBB617:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4506              		.loc 2 480 4
 4507 00c2 FB68     		ldr	r3, [r7, #12]
 4508              		.syntax unified
 4509              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4510 00c4 53E8003F 		ldrex r3, [r3]
 4511              	@ 0 "" 2
 4512              		.thumb
 4513              		.syntax unified
 4514 00c8 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4515              		.loc 2 481 10
ARM GAS  /tmp/ccMjAmt3.s 			page 124


 4516 00ca BB68     		ldr	r3, [r7, #8]
 4517              	.LBE617:
 4518              	.LBE616:
 4519              		.loc 1 1922 5 discriminator 1
 4520 00cc 23F04003 		bic	r3, r3, #64
 4521 00d0 BB65     		str	r3, [r7, #88]
 4522 00d2 7B68     		ldr	r3, [r7, #4]
 4523 00d4 1B68     		ldr	r3, [r3]
 4524 00d6 0833     		adds	r3, r3, #8
 4525 00d8 BA6D     		ldr	r2, [r7, #88]
 4526 00da BA61     		str	r2, [r7, #24]
 4527 00dc 7B61     		str	r3, [r7, #20]
 4528              	.LBB618:
 4529              	.LBB619:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4530              		.loc 2 531 4
 4531 00de 7969     		ldr	r1, [r7, #20]
 4532 00e0 BA69     		ldr	r2, [r7, #24]
 4533              		.syntax unified
 4534              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4535 00e2 41E80023 		strex r3, r2, [r1]
 4536              	@ 0 "" 2
 4537              		.thumb
 4538              		.syntax unified
 4539 00e6 3B61     		str	r3, [r7, #16]
 4540              		.loc 2 532 10
 4541 00e8 3B69     		ldr	r3, [r7, #16]
 4542              	.LBE619:
 4543              	.LBE618:
 4544              		.loc 1 1922 5 discriminator 1
 4545 00ea 002B     		cmp	r3, #0
 4546 00ec E5D1     		bne	.L220
 4547              	.LBE615:
1923:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1924:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1925:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4548              		.loc 1 1925 14
 4549 00ee 7B68     		ldr	r3, [r7, #4]
 4550 00f0 D3F88030 		ldr	r3, [r3, #128]
 4551              		.loc 1 1925 8
 4552 00f4 002B     		cmp	r3, #0
 4553 00f6 1CD0     		beq	.L217
1926:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
1927:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1928:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1929:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4554              		.loc 1 1929 12
 4555 00f8 7B68     		ldr	r3, [r7, #4]
 4556 00fa D3F88030 		ldr	r3, [r3, #128]
 4557              		.loc 1 1929 40
 4558 00fe 0022     		movs	r2, #0
 4559 0100 DA66     		str	r2, [r3, #108]
1930:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1931:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 4560              		.loc 1 1931 11
 4561 0102 7B68     		ldr	r3, [r7, #4]
 4562 0104 D3F88030 		ldr	r3, [r3, #128]
ARM GAS  /tmp/ccMjAmt3.s 			page 125


 4563 0108 1846     		mov	r0, r3
 4564 010a FFF7FEFF 		bl	HAL_DMA_Abort
 4565 010e 0346     		mov	r3, r0
 4566              		.loc 1 1931 10 discriminator 1
 4567 0110 002B     		cmp	r3, #0
 4568 0112 0ED0     		beq	.L217
1932:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
1933:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 4569              		.loc 1 1933 35
 4570 0114 7B68     		ldr	r3, [r7, #4]
 4571 0116 D3F88030 		ldr	r3, [r3, #128]
 4572              		.loc 1 1933 13
 4573 011a 1846     		mov	r0, r3
 4574 011c FFF7FEFF 		bl	HAL_DMA_GetError
 4575 0120 0346     		mov	r3, r0
 4576              		.loc 1 1933 12 discriminator 1
 4577 0122 102B     		cmp	r3, #16
 4578 0124 05D1     		bne	.L217
1934:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
1935:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set error code to DMA */
1936:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 4579              		.loc 1 1936 28
 4580 0126 7B68     		ldr	r3, [r7, #4]
 4581 0128 1022     		movs	r2, #16
 4582 012a C3F89020 		str	r2, [r3, #144]
1937:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1938:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           return HAL_TIMEOUT;
 4583              		.loc 1 1938 18
 4584 012e 0323     		movs	r3, #3
 4585 0130 17E0     		b	.L221
 4586              	.L217:
1939:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
1940:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
1941:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
1942:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1943:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
1944:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1945:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Reset Rx transfer counter */
1946:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxXferCount = 0U;
 4587              		.loc 1 1946 22
 4588 0132 7B68     		ldr	r3, [r7, #4]
 4589 0134 0022     		movs	r2, #0
 4590 0136 A3F85E20 		strh	r2, [r3, #94]	@ movhi
1947:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1948:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1949:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 4591              		.loc 1 1949 3
 4592 013a 7B68     		ldr	r3, [r7, #4]
 4593 013c 1B68     		ldr	r3, [r3]
 4594 013e 0F22     		movs	r2, #15
 4595 0140 1A62     		str	r2, [r3, #32]
1950:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1951:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Discard the received data */
1952:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4596              		.loc 1 1952 3
 4597 0142 7B68     		ldr	r3, [r7, #4]
 4598 0144 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 126


 4599 0146 9A69     		ldr	r2, [r3, #24]
 4600 0148 7B68     		ldr	r3, [r7, #4]
 4601 014a 1B68     		ldr	r3, [r3]
 4602 014c 42F00802 		orr	r2, r2, #8
 4603 0150 9A61     		str	r2, [r3, #24]
1953:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1954:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1955:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4604              		.loc 1 1955 18
 4605 0152 7B68     		ldr	r3, [r7, #4]
 4606 0154 2022     		movs	r2, #32
 4607 0156 C3F88C20 		str	r2, [r3, #140]
1956:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4608              		.loc 1 1956 24
 4609 015a 7B68     		ldr	r3, [r7, #4]
 4610 015c 0022     		movs	r2, #0
 4611 015e DA66     		str	r2, [r3, #108]
1957:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1958:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 4612              		.loc 1 1958 10
 4613 0160 0023     		movs	r3, #0
 4614              	.L221:
1959:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 4615              		.loc 1 1959 1
 4616 0162 1846     		mov	r0, r3
 4617 0164 6837     		adds	r7, r7, #104
 4618              		.cfi_def_cfa_offset 8
 4619 0166 BD46     		mov	sp, r7
 4620              		.cfi_def_cfa_register 13
 4621              		@ sp needed
 4622 0168 80BD     		pop	{r7, pc}
 4623              		.cfi_endproc
 4624              	.LFE853:
 4626              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 4627              		.align	1
 4628              		.global	HAL_UART_Abort_IT
 4629              		.syntax unified
 4630              		.thumb
 4631              		.thumb_func
 4633              	HAL_UART_Abort_IT:
 4634              	.LFB854:
1960:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1961:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
1962:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1963:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
1964:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1965:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         This procedure performs following operations :
1966:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1967:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1968:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1969:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Set handle State to READY
1970:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1971:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1972:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1973:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
1974:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
1975:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccMjAmt3.s 			page 127


1976:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 4635              		.loc 1 1976 1
 4636              		.cfi_startproc
 4637              		@ args = 0, pretend = 0, frame = 136
 4638              		@ frame_needed = 1, uses_anonymous_args = 0
 4639 0000 80B5     		push	{r7, lr}
 4640              		.cfi_def_cfa_offset 8
 4641              		.cfi_offset 7, -8
 4642              		.cfi_offset 14, -4
 4643 0002 A2B0     		sub	sp, sp, #136
 4644              		.cfi_def_cfa_offset 144
 4645 0004 00AF     		add	r7, sp, #0
 4646              		.cfi_def_cfa_register 7
 4647 0006 7860     		str	r0, [r7, #4]
1977:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 4648              		.loc 1 1977 12
 4649 0008 0123     		movs	r3, #1
 4650 000a C7F88430 		str	r3, [r7, #132]
 4651              	.L225:
 4652              	.LBB620:
1978:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1979:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Disable interrupts */
1980:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEI
 4653              		.loc 1 1980 3 discriminator 1
 4654 000e 7B68     		ldr	r3, [r7, #4]
 4655 0010 1B68     		ldr	r3, [r3]
 4656 0012 3B66     		str	r3, [r7, #96]
 4657              	.LBB621:
 4658              	.LBB622:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4659              		.loc 2 480 4
 4660 0014 3B6E     		ldr	r3, [r7, #96]
 4661              		.syntax unified
 4662              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4663 0016 53E8003F 		ldrex r3, [r3]
 4664              	@ 0 "" 2
 4665              		.thumb
 4666              		.syntax unified
 4667 001a FB65     		str	r3, [r7, #92]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4668              		.loc 2 481 10
 4669 001c FB6D     		ldr	r3, [r7, #92]
 4670              	.LBE622:
 4671              	.LBE621:
 4672              		.loc 1 1980 3 discriminator 1
 4673 001e 23F4F073 		bic	r3, r3, #480
 4674 0022 C7F88030 		str	r3, [r7, #128]
 4675 0026 7B68     		ldr	r3, [r7, #4]
 4676 0028 1B68     		ldr	r3, [r3]
 4677 002a 1A46     		mov	r2, r3
 4678 002c D7F88030 		ldr	r3, [r7, #128]
 4679 0030 FB66     		str	r3, [r7, #108]
 4680 0032 BA66     		str	r2, [r7, #104]
 4681              	.LBB623:
 4682              	.LBB624:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4683              		.loc 2 531 4
ARM GAS  /tmp/ccMjAmt3.s 			page 128


 4684 0034 B96E     		ldr	r1, [r7, #104]
 4685 0036 FA6E     		ldr	r2, [r7, #108]
 4686              		.syntax unified
 4687              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4688 0038 41E80023 		strex r3, r2, [r1]
 4689              	@ 0 "" 2
 4690              		.thumb
 4691              		.syntax unified
 4692 003c 7B66     		str	r3, [r7, #100]
 4693              		.loc 2 532 10
 4694 003e 7B6E     		ldr	r3, [r7, #100]
 4695              	.LBE624:
 4696              	.LBE623:
 4697              		.loc 1 1980 3 discriminator 1
 4698 0040 002B     		cmp	r3, #0
 4699 0042 E4D1     		bne	.L225
 4700              	.L228:
 4701              	.LBE620:
 4702              	.LBB625:
1981:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE));
1982:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
 4703              		.loc 1 1982 3 discriminator 1
 4704 0044 7B68     		ldr	r3, [r7, #4]
 4705 0046 1B68     		ldr	r3, [r3]
 4706 0048 0833     		adds	r3, r3, #8
 4707 004a FB64     		str	r3, [r7, #76]
 4708              	.LBB626:
 4709              	.LBB627:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4710              		.loc 2 480 4
 4711 004c FB6C     		ldr	r3, [r7, #76]
 4712              		.syntax unified
 4713              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4714 004e 53E8003F 		ldrex r3, [r3]
 4715              	@ 0 "" 2
 4716              		.thumb
 4717              		.syntax unified
 4718 0052 BB64     		str	r3, [r7, #72]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4719              		.loc 2 481 10
 4720 0054 BB6C     		ldr	r3, [r7, #72]
 4721              	.LBE627:
 4722              	.LBE626:
 4723              		.loc 1 1982 3 discriminator 1
 4724 0056 23F08453 		bic	r3, r3, #276824064
 4725 005a 23F00103 		bic	r3, r3, #1
 4726 005e FB67     		str	r3, [r7, #124]
 4727 0060 7B68     		ldr	r3, [r7, #4]
 4728 0062 1B68     		ldr	r3, [r3]
 4729 0064 0833     		adds	r3, r3, #8
 4730 0066 FA6F     		ldr	r2, [r7, #124]
 4731 0068 BA65     		str	r2, [r7, #88]
 4732 006a 7B65     		str	r3, [r7, #84]
 4733              	.LBB628:
 4734              	.LBB629:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4735              		.loc 2 531 4
ARM GAS  /tmp/ccMjAmt3.s 			page 129


 4736 006c 796D     		ldr	r1, [r7, #84]
 4737 006e BA6D     		ldr	r2, [r7, #88]
 4738              		.syntax unified
 4739              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4740 0070 41E80023 		strex r3, r2, [r1]
 4741              	@ 0 "" 2
 4742              		.thumb
 4743              		.syntax unified
 4744 0074 3B65     		str	r3, [r7, #80]
 4745              		.loc 2 532 10
 4746 0076 3B6D     		ldr	r3, [r7, #80]
 4747              	.LBE629:
 4748              	.LBE628:
 4749              		.loc 1 1982 3 discriminator 1
 4750 0078 002B     		cmp	r3, #0
 4751 007a E3D1     		bne	.L228
 4752              	.LBE625:
1983:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1984:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1985:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4753              		.loc 1 1985 12
 4754 007c 7B68     		ldr	r3, [r7, #4]
 4755 007e DB6E     		ldr	r3, [r3, #108]
 4756              		.loc 1 1985 6
 4757 0080 012B     		cmp	r3, #1
 4758 0082 18D1     		bne	.L229
 4759              	.L232:
 4760              	.LBB630:
1986:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1987:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4761              		.loc 1 1987 5 discriminator 1
 4762 0084 7B68     		ldr	r3, [r7, #4]
 4763 0086 1B68     		ldr	r3, [r3]
 4764 0088 BB63     		str	r3, [r7, #56]
 4765              	.LBB631:
 4766              	.LBB632:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4767              		.loc 2 480 4
 4768 008a BB6B     		ldr	r3, [r7, #56]
 4769              		.syntax unified
 4770              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4771 008c 53E8003F 		ldrex r3, [r3]
 4772              	@ 0 "" 2
 4773              		.thumb
 4774              		.syntax unified
 4775 0090 7B63     		str	r3, [r7, #52]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4776              		.loc 2 481 10
 4777 0092 7B6B     		ldr	r3, [r7, #52]
 4778              	.LBE632:
 4779              	.LBE631:
 4780              		.loc 1 1987 5 discriminator 1
 4781 0094 23F01003 		bic	r3, r3, #16
 4782 0098 BB67     		str	r3, [r7, #120]
 4783 009a 7B68     		ldr	r3, [r7, #4]
 4784 009c 1B68     		ldr	r3, [r3]
 4785 009e 1A46     		mov	r2, r3
ARM GAS  /tmp/ccMjAmt3.s 			page 130


 4786 00a0 BB6F     		ldr	r3, [r7, #120]
 4787 00a2 7B64     		str	r3, [r7, #68]
 4788 00a4 3A64     		str	r2, [r7, #64]
 4789              	.LBB633:
 4790              	.LBB634:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4791              		.loc 2 531 4
 4792 00a6 396C     		ldr	r1, [r7, #64]
 4793 00a8 7A6C     		ldr	r2, [r7, #68]
 4794              		.syntax unified
 4795              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4796 00aa 41E80023 		strex r3, r2, [r1]
 4797              	@ 0 "" 2
 4798              		.thumb
 4799              		.syntax unified
 4800 00ae FB63     		str	r3, [r7, #60]
 4801              		.loc 2 532 10
 4802 00b0 FB6B     		ldr	r3, [r7, #60]
 4803              	.LBE634:
 4804              	.LBE633:
 4805              		.loc 1 1987 5 discriminator 1
 4806 00b2 002B     		cmp	r3, #0
 4807 00b4 E6D1     		bne	.L232
 4808              	.L229:
 4809              	.LBE630:
1988:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
1989:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
1990:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
1991:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1992:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      before any call to DMA Abort functions */
1993:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1994:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 4810              		.loc 1 1994 12
 4811 00b6 7B68     		ldr	r3, [r7, #4]
 4812 00b8 DB6F     		ldr	r3, [r3, #124]
 4813              		.loc 1 1994 6
 4814 00ba 002B     		cmp	r3, #0
 4815 00bc 0FD0     		beq	.L233
1995:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
1996:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1997:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        Otherwise, set it to NULL */
1998:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4816              		.loc 1 1998 9
 4817 00be 7B68     		ldr	r3, [r7, #4]
 4818 00c0 1B68     		ldr	r3, [r3]
 4819 00c2 9B68     		ldr	r3, [r3, #8]
 4820 00c4 03F08003 		and	r3, r3, #128
 4821              		.loc 1 1998 8
 4822 00c8 802B     		cmp	r3, #128
 4823 00ca 04D1     		bne	.L234
1999:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2000:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 4824              		.loc 1 2000 12
 4825 00cc 7B68     		ldr	r3, [r7, #4]
 4826 00ce DB6F     		ldr	r3, [r3, #124]
 4827              		.loc 1 2000 40
 4828 00d0 674A     		ldr	r2, .L250
ARM GAS  /tmp/ccMjAmt3.s 			page 131


 4829 00d2 DA66     		str	r2, [r3, #108]
 4830 00d4 03E0     		b	.L233
 4831              	.L234:
2001:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2002:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
2003:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2004:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 4832              		.loc 1 2004 12
 4833 00d6 7B68     		ldr	r3, [r7, #4]
 4834 00d8 DB6F     		ldr	r3, [r3, #124]
 4835              		.loc 1 2004 40
 4836 00da 0022     		movs	r2, #0
 4837 00dc DA66     		str	r2, [r3, #108]
 4838              	.L233:
2005:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2006:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2007:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2008:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 4839              		.loc 1 2008 12
 4840 00de 7B68     		ldr	r3, [r7, #4]
 4841 00e0 D3F88030 		ldr	r3, [r3, #128]
 4842              		.loc 1 2008 6
 4843 00e4 002B     		cmp	r3, #0
 4844 00e6 11D0     		beq	.L235
2009:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2010:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2011:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        Otherwise, set it to NULL */
2012:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4845              		.loc 1 2012 9
 4846 00e8 7B68     		ldr	r3, [r7, #4]
 4847 00ea 1B68     		ldr	r3, [r3]
 4848 00ec 9B68     		ldr	r3, [r3, #8]
 4849 00ee 03F04003 		and	r3, r3, #64
 4850              		.loc 1 2012 8
 4851 00f2 402B     		cmp	r3, #64
 4852 00f4 05D1     		bne	.L236
2013:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2014:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 4853              		.loc 1 2014 12
 4854 00f6 7B68     		ldr	r3, [r7, #4]
 4855 00f8 D3F88030 		ldr	r3, [r3, #128]
 4856              		.loc 1 2014 40
 4857 00fc 5D4A     		ldr	r2, .L250+4
 4858 00fe DA66     		str	r2, [r3, #108]
 4859 0100 04E0     		b	.L235
 4860              	.L236:
2015:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2016:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
2017:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2018:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4861              		.loc 1 2018 12
 4862 0102 7B68     		ldr	r3, [r7, #4]
 4863 0104 D3F88030 		ldr	r3, [r3, #128]
 4864              		.loc 1 2018 40
 4865 0108 0022     		movs	r2, #0
 4866 010a DA66     		str	r2, [r3, #108]
 4867              	.L235:
ARM GAS  /tmp/ccMjAmt3.s 			page 132


2019:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2020:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2021:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2022:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2023:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4868              		.loc 1 2023 7
 4869 010c 7B68     		ldr	r3, [r7, #4]
 4870 010e 1B68     		ldr	r3, [r3]
 4871 0110 9B68     		ldr	r3, [r3, #8]
 4872 0112 03F08003 		and	r3, r3, #128
 4873              		.loc 1 2023 6
 4874 0116 802B     		cmp	r3, #128
 4875 0118 2DD1     		bne	.L237
 4876              	.L240:
 4877              	.LBB635:
2024:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2025:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2026:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4878              		.loc 1 2026 5 discriminator 1
 4879 011a 7B68     		ldr	r3, [r7, #4]
 4880 011c 1B68     		ldr	r3, [r3]
 4881 011e 0833     		adds	r3, r3, #8
 4882 0120 7B62     		str	r3, [r7, #36]
 4883              	.LBB636:
 4884              	.LBB637:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4885              		.loc 2 480 4
 4886 0122 7B6A     		ldr	r3, [r7, #36]
 4887              		.syntax unified
 4888              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4889 0124 53E8003F 		ldrex r3, [r3]
 4890              	@ 0 "" 2
 4891              		.thumb
 4892              		.syntax unified
 4893 0128 3B62     		str	r3, [r7, #32]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4894              		.loc 2 481 10
 4895 012a 3B6A     		ldr	r3, [r7, #32]
 4896              	.LBE637:
 4897              	.LBE636:
 4898              		.loc 1 2026 5 discriminator 1
 4899 012c 23F08003 		bic	r3, r3, #128
 4900 0130 7B67     		str	r3, [r7, #116]
 4901 0132 7B68     		ldr	r3, [r7, #4]
 4902 0134 1B68     		ldr	r3, [r3]
 4903 0136 0833     		adds	r3, r3, #8
 4904 0138 7A6F     		ldr	r2, [r7, #116]
 4905 013a 3A63     		str	r2, [r7, #48]
 4906 013c FB62     		str	r3, [r7, #44]
 4907              	.LBB638:
 4908              	.LBB639:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4909              		.loc 2 531 4
 4910 013e F96A     		ldr	r1, [r7, #44]
 4911 0140 3A6B     		ldr	r2, [r7, #48]
 4912              		.syntax unified
 4913              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccMjAmt3.s 			page 133


 4914 0142 41E80023 		strex r3, r2, [r1]
 4915              	@ 0 "" 2
 4916              		.thumb
 4917              		.syntax unified
 4918 0146 BB62     		str	r3, [r7, #40]
 4919              		.loc 2 532 10
 4920 0148 BB6A     		ldr	r3, [r7, #40]
 4921              	.LBE639:
 4922              	.LBE638:
 4923              		.loc 1 2026 5 discriminator 1
 4924 014a 002B     		cmp	r3, #0
 4925 014c E5D1     		bne	.L240
 4926              	.LBE635:
2027:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2028:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2029:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4927              		.loc 1 2029 14
 4928 014e 7B68     		ldr	r3, [r7, #4]
 4929 0150 DB6F     		ldr	r3, [r3, #124]
 4930              		.loc 1 2029 8
 4931 0152 002B     		cmp	r3, #0
 4932 0154 0FD0     		beq	.L237
2030:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2031:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2032:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2033:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2034:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Abort DMA TX */
2035:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4933              		.loc 1 2035 11
 4934 0156 7B68     		ldr	r3, [r7, #4]
 4935 0158 DB6F     		ldr	r3, [r3, #124]
 4936 015a 1846     		mov	r0, r3
 4937 015c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4938 0160 0346     		mov	r3, r0
 4939              		.loc 1 2035 10 discriminator 1
 4940 0162 002B     		cmp	r3, #0
 4941 0164 04D0     		beq	.L241
2036:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2037:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 4942              		.loc 1 2037 14
 4943 0166 7B68     		ldr	r3, [r7, #4]
 4944 0168 DB6F     		ldr	r3, [r3, #124]
 4945              		.loc 1 2037 42
 4946 016a 0022     		movs	r2, #0
 4947 016c DA66     		str	r2, [r3, #108]
 4948 016e 02E0     		b	.L237
 4949              	.L241:
2038:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2039:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
2040:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2041:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         abortcplt = 0U;
 4950              		.loc 1 2041 19
 4951 0170 0023     		movs	r3, #0
 4952 0172 C7F88430 		str	r3, [r7, #132]
 4953              	.L237:
2042:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2043:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
ARM GAS  /tmp/ccMjAmt3.s 			page 134


2044:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2045:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2046:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2047:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4954              		.loc 1 2047 7
 4955 0176 7B68     		ldr	r3, [r7, #4]
 4956 0178 1B68     		ldr	r3, [r3]
 4957 017a 9B68     		ldr	r3, [r3, #8]
 4958 017c 03F04003 		and	r3, r3, #64
 4959              		.loc 1 2047 6
 4960 0180 402B     		cmp	r3, #64
 4961 0182 33D1     		bne	.L242
 4962              	.L245:
 4963              	.LBB640:
2048:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2049:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2050:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4964              		.loc 1 2050 5 discriminator 1
 4965 0184 7B68     		ldr	r3, [r7, #4]
 4966 0186 1B68     		ldr	r3, [r3]
 4967 0188 0833     		adds	r3, r3, #8
 4968 018a 3B61     		str	r3, [r7, #16]
 4969              	.LBB641:
 4970              	.LBB642:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4971              		.loc 2 480 4
 4972 018c 3B69     		ldr	r3, [r7, #16]
 4973              		.syntax unified
 4974              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4975 018e 53E8003F 		ldrex r3, [r3]
 4976              	@ 0 "" 2
 4977              		.thumb
 4978              		.syntax unified
 4979 0192 FB60     		str	r3, [r7, #12]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4980              		.loc 2 481 10
 4981 0194 FB68     		ldr	r3, [r7, #12]
 4982              	.LBE642:
 4983              	.LBE641:
 4984              		.loc 1 2050 5 discriminator 1
 4985 0196 23F04003 		bic	r3, r3, #64
 4986 019a 3B67     		str	r3, [r7, #112]
 4987 019c 7B68     		ldr	r3, [r7, #4]
 4988 019e 1B68     		ldr	r3, [r3]
 4989 01a0 0833     		adds	r3, r3, #8
 4990 01a2 3A6F     		ldr	r2, [r7, #112]
 4991 01a4 FA61     		str	r2, [r7, #28]
 4992 01a6 BB61     		str	r3, [r7, #24]
 4993              	.LBB643:
 4994              	.LBB644:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4995              		.loc 2 531 4
 4996 01a8 B969     		ldr	r1, [r7, #24]
 4997 01aa FA69     		ldr	r2, [r7, #28]
 4998              		.syntax unified
 4999              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5000 01ac 41E80023 		strex r3, r2, [r1]
ARM GAS  /tmp/ccMjAmt3.s 			page 135


 5001              	@ 0 "" 2
 5002              		.thumb
 5003              		.syntax unified
 5004 01b0 7B61     		str	r3, [r7, #20]
 5005              		.loc 2 532 10
 5006 01b2 7B69     		ldr	r3, [r7, #20]
 5007              	.LBE644:
 5008              	.LBE643:
 5009              		.loc 1 2050 5 discriminator 1
 5010 01b4 002B     		cmp	r3, #0
 5011 01b6 E5D1     		bne	.L245
 5012              	.LBE640:
2051:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2052:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2053:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 5013              		.loc 1 2053 14
 5014 01b8 7B68     		ldr	r3, [r7, #4]
 5015 01ba D3F88030 		ldr	r3, [r3, #128]
 5016              		.loc 1 2053 8
 5017 01be 002B     		cmp	r3, #0
 5018 01c0 14D0     		beq	.L242
2054:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2055:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2056:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2057:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2058:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Abort DMA RX */
2059:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5019              		.loc 1 2059 11
 5020 01c2 7B68     		ldr	r3, [r7, #4]
 5021 01c4 D3F88030 		ldr	r3, [r3, #128]
 5022 01c8 1846     		mov	r0, r3
 5023 01ca FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5024 01ce 0346     		mov	r3, r0
 5025              		.loc 1 2059 10 discriminator 1
 5026 01d0 002B     		cmp	r3, #0
 5027 01d2 08D0     		beq	.L246
2060:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2061:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 5028              		.loc 1 2061 14
 5029 01d4 7B68     		ldr	r3, [r7, #4]
 5030 01d6 D3F88030 		ldr	r3, [r3, #128]
 5031              		.loc 1 2061 42
 5032 01da 0022     		movs	r2, #0
 5033 01dc DA66     		str	r2, [r3, #108]
2062:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         abortcplt = 1U;
 5034              		.loc 1 2062 19
 5035 01de 0123     		movs	r3, #1
 5036 01e0 C7F88430 		str	r3, [r7, #132]
 5037 01e4 02E0     		b	.L242
 5038              	.L246:
2063:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2064:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
2065:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2066:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         abortcplt = 0U;
 5039              		.loc 1 2066 19
 5040 01e6 0023     		movs	r3, #0
 5041 01e8 C7F88430 		str	r3, [r7, #132]
ARM GAS  /tmp/ccMjAmt3.s 			page 136


 5042              	.L242:
2067:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2068:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2069:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2070:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
2071:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2072:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2073:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (abortcplt == 1U)
 5043              		.loc 1 2073 6
 5044 01ec D7F88430 		ldr	r3, [r7, #132]
 5045 01f0 012B     		cmp	r3, #1
 5046 01f2 38D1     		bne	.L247
2074:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2075:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2076:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxXferCount = 0U;
 5047              		.loc 1 2076 24
 5048 01f4 7B68     		ldr	r3, [r7, #4]
 5049 01f6 0022     		movs	r2, #0
 5050 01f8 A3F85620 		strh	r2, [r3, #86]	@ movhi
2077:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxXferCount = 0U;
 5051              		.loc 1 2077 24
 5052 01fc 7B68     		ldr	r3, [r7, #4]
 5053 01fe 0022     		movs	r2, #0
 5054 0200 A3F85E20 		strh	r2, [r3, #94]	@ movhi
2078:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2079:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear ISR function pointers */
2080:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxISR = NULL;
 5055              		.loc 1 2080 18
 5056 0204 7B68     		ldr	r3, [r7, #4]
 5057 0206 0022     		movs	r2, #0
 5058 0208 5A67     		str	r2, [r3, #116]
2081:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxISR = NULL;
 5059              		.loc 1 2081 18
 5060 020a 7B68     		ldr	r3, [r7, #4]
 5061 020c 0022     		movs	r2, #0
 5062 020e 9A67     		str	r2, [r3, #120]
2082:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2083:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Reset errorCode */
2084:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 5063              		.loc 1 2084 22
 5064 0210 7B68     		ldr	r3, [r7, #4]
 5065 0212 0022     		movs	r2, #0
 5066 0214 C3F89020 		str	r2, [r3, #144]
2085:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2086:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2087:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 5067              		.loc 1 2087 5
 5068 0218 7B68     		ldr	r3, [r7, #4]
 5069 021a 1B68     		ldr	r3, [r3]
 5070 021c 0F22     		movs	r2, #15
 5071 021e 1A62     		str	r2, [r3, #32]
2088:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2089:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2090:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 5072              		.loc 1 2090 14
 5073 0220 7B68     		ldr	r3, [r7, #4]
 5074 0222 5B6E     		ldr	r3, [r3, #100]
ARM GAS  /tmp/ccMjAmt3.s 			page 137


 5075              		.loc 1 2090 8
 5076 0224 B3F1005F 		cmp	r3, #536870912
 5077 0228 07D1     		bne	.L248
2091:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2092:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 5078              		.loc 1 2092 7
 5079 022a 7B68     		ldr	r3, [r7, #4]
 5080 022c 1B68     		ldr	r3, [r3]
 5081 022e 9A69     		ldr	r2, [r3, #24]
 5082 0230 7B68     		ldr	r3, [r7, #4]
 5083 0232 1B68     		ldr	r3, [r3]
 5084 0234 42F01002 		orr	r2, r2, #16
 5085 0238 9A61     		str	r2, [r3, #24]
 5086              	.L248:
2093:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2094:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2095:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Discard the received data */
2096:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 5087              		.loc 1 2096 5
 5088 023a 7B68     		ldr	r3, [r7, #4]
 5089 023c 1B68     		ldr	r3, [r3]
 5090 023e 9A69     		ldr	r2, [r3, #24]
 5091 0240 7B68     		ldr	r3, [r7, #4]
 5092 0242 1B68     		ldr	r3, [r3]
 5093 0244 42F00802 		orr	r2, r2, #8
 5094 0248 9A61     		str	r2, [r3, #24]
2097:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2098:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2099:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 5095              		.loc 1 2099 20
 5096 024a 7B68     		ldr	r3, [r7, #4]
 5097 024c 2022     		movs	r2, #32
 5098 024e C3F88820 		str	r2, [r3, #136]
2100:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5099              		.loc 1 2100 20
 5100 0252 7B68     		ldr	r3, [r7, #4]
 5101 0254 2022     		movs	r2, #32
 5102 0256 C3F88C20 		str	r2, [r3, #140]
2101:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5103              		.loc 1 2101 26
 5104 025a 7B68     		ldr	r3, [r7, #4]
 5105 025c 0022     		movs	r2, #0
 5106 025e DA66     		str	r2, [r3, #108]
2102:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2103:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2104:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2105:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call registered Abort complete callback */
2106:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2107:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2108:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2109:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 5107              		.loc 1 2109 5
 5108 0260 7868     		ldr	r0, [r7, #4]
 5109 0262 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5110              	.L247:
2110:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2111:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
ARM GAS  /tmp/ccMjAmt3.s 			page 138


2112:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2113:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 5111              		.loc 1 2113 10
 5112 0266 0023     		movs	r3, #0
2114:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 5113              		.loc 1 2114 1
 5114 0268 1846     		mov	r0, r3
 5115 026a 8837     		adds	r7, r7, #136
 5116              		.cfi_def_cfa_offset 8
 5117 026c BD46     		mov	sp, r7
 5118              		.cfi_def_cfa_register 13
 5119              		@ sp needed
 5120 026e 80BD     		pop	{r7, pc}
 5121              	.L251:
 5122              		.align	2
 5123              	.L250:
 5124 0270 00000000 		.word	UART_DMATxAbortCallback
 5125 0274 00000000 		.word	UART_DMARxAbortCallback
 5126              		.cfi_endproc
 5127              	.LFE854:
 5129              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 5130              		.align	1
 5131              		.global	HAL_UART_AbortTransmit_IT
 5132              		.syntax unified
 5133              		.thumb
 5134              		.thumb_func
 5136              	HAL_UART_AbortTransmit_IT:
 5137              	.LFB855:
2115:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2116:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2117:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2118:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2119:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2120:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         This procedure performs following operations :
2121:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2122:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2123:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2124:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Set handle State to READY
2125:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2126:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2127:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2128:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
2129:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2130:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2131:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 5138              		.loc 1 2131 1
 5139              		.cfi_startproc
 5140              		@ args = 0, pretend = 0, frame = 80
 5141              		@ frame_needed = 1, uses_anonymous_args = 0
 5142 0000 80B5     		push	{r7, lr}
 5143              		.cfi_def_cfa_offset 8
 5144              		.cfi_offset 7, -8
 5145              		.cfi_offset 14, -4
 5146 0002 94B0     		sub	sp, sp, #80
 5147              		.cfi_def_cfa_offset 88
 5148 0004 00AF     		add	r7, sp, #0
 5149              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccMjAmt3.s 			page 139


 5150 0006 7860     		str	r0, [r7, #4]
 5151              	.L255:
 5152              	.LBB645:
2132:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Disable interrupts */
2133:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
 5153              		.loc 1 2133 3 discriminator 1
 5154 0008 7B68     		ldr	r3, [r7, #4]
 5155 000a 1B68     		ldr	r3, [r3]
 5156 000c 7B63     		str	r3, [r7, #52]
 5157              	.LBB646:
 5158              	.LBB647:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5159              		.loc 2 480 4
 5160 000e 7B6B     		ldr	r3, [r7, #52]
 5161              		.syntax unified
 5162              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5163 0010 53E8003F 		ldrex r3, [r3]
 5164              	@ 0 "" 2
 5165              		.thumb
 5166              		.syntax unified
 5167 0014 3B63     		str	r3, [r7, #48]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5168              		.loc 2 481 10
 5169 0016 3B6B     		ldr	r3, [r7, #48]
 5170              	.LBE647:
 5171              	.LBE646:
 5172              		.loc 1 2133 3 discriminator 1
 5173 0018 23F0C003 		bic	r3, r3, #192
 5174 001c FB64     		str	r3, [r7, #76]
 5175 001e 7B68     		ldr	r3, [r7, #4]
 5176 0020 1B68     		ldr	r3, [r3]
 5177 0022 1A46     		mov	r2, r3
 5178 0024 FB6C     		ldr	r3, [r7, #76]
 5179 0026 3B64     		str	r3, [r7, #64]
 5180 0028 FA63     		str	r2, [r7, #60]
 5181              	.LBB648:
 5182              	.LBB649:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5183              		.loc 2 531 4
 5184 002a F96B     		ldr	r1, [r7, #60]
 5185 002c 3A6C     		ldr	r2, [r7, #64]
 5186              		.syntax unified
 5187              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5188 002e 41E80023 		strex r3, r2, [r1]
 5189              	@ 0 "" 2
 5190              		.thumb
 5191              		.syntax unified
 5192 0032 BB63     		str	r3, [r7, #56]
 5193              		.loc 2 532 10
 5194 0034 BB6B     		ldr	r3, [r7, #56]
 5195              	.LBE649:
 5196              	.LBE648:
 5197              		.loc 1 2133 3 discriminator 1
 5198 0036 002B     		cmp	r3, #0
 5199 0038 E6D1     		bne	.L255
 5200              	.L258:
 5201              	.LBE645:
ARM GAS  /tmp/ccMjAmt3.s 			page 140


 5202              	.LBB650:
2134:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 5203              		.loc 1 2134 3 discriminator 1
 5204 003a 7B68     		ldr	r3, [r7, #4]
 5205 003c 1B68     		ldr	r3, [r3]
 5206 003e 0833     		adds	r3, r3, #8
 5207 0040 3B62     		str	r3, [r7, #32]
 5208              	.LBB651:
 5209              	.LBB652:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5210              		.loc 2 480 4
 5211 0042 3B6A     		ldr	r3, [r7, #32]
 5212              		.syntax unified
 5213              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5214 0044 53E8003F 		ldrex r3, [r3]
 5215              	@ 0 "" 2
 5216              		.thumb
 5217              		.syntax unified
 5218 0048 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5219              		.loc 2 481 10
 5220 004a FB69     		ldr	r3, [r7, #28]
 5221              	.LBE652:
 5222              	.LBE651:
 5223              		.loc 1 2134 3 discriminator 1
 5224 004c 23F40003 		bic	r3, r3, #8388608
 5225 0050 BB64     		str	r3, [r7, #72]
 5226 0052 7B68     		ldr	r3, [r7, #4]
 5227 0054 1B68     		ldr	r3, [r3]
 5228 0056 0833     		adds	r3, r3, #8
 5229 0058 BA6C     		ldr	r2, [r7, #72]
 5230 005a FA62     		str	r2, [r7, #44]
 5231 005c BB62     		str	r3, [r7, #40]
 5232              	.LBB653:
 5233              	.LBB654:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5234              		.loc 2 531 4
 5235 005e B96A     		ldr	r1, [r7, #40]
 5236 0060 FA6A     		ldr	r2, [r7, #44]
 5237              		.syntax unified
 5238              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5239 0062 41E80023 		strex r3, r2, [r1]
 5240              	@ 0 "" 2
 5241              		.thumb
 5242              		.syntax unified
 5243 0066 7B62     		str	r3, [r7, #36]
 5244              		.loc 2 532 10
 5245 0068 7B6A     		ldr	r3, [r7, #36]
 5246              	.LBE654:
 5247              	.LBE653:
 5248              		.loc 1 2134 3 discriminator 1
 5249 006a 002B     		cmp	r3, #0
 5250 006c E5D1     		bne	.L258
 5251              	.LBE650:
2135:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2136:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
2137:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
ARM GAS  /tmp/ccMjAmt3.s 			page 141


2138:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 5252              		.loc 1 2138 7
 5253 006e 7B68     		ldr	r3, [r7, #4]
 5254 0070 1B68     		ldr	r3, [r3]
 5255 0072 9B68     		ldr	r3, [r3, #8]
 5256 0074 03F08003 		and	r3, r3, #128
 5257              		.loc 1 2138 6
 5258 0078 802B     		cmp	r3, #128
 5259 007a 40D1     		bne	.L259
 5260              	.L262:
 5261              	.LBB655:
2139:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2140:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
2141:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 5262              		.loc 1 2141 5 discriminator 1
 5263 007c 7B68     		ldr	r3, [r7, #4]
 5264 007e 1B68     		ldr	r3, [r3]
 5265 0080 0833     		adds	r3, r3, #8
 5266 0082 FB60     		str	r3, [r7, #12]
 5267              	.LBB656:
 5268              	.LBB657:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5269              		.loc 2 480 4
 5270 0084 FB68     		ldr	r3, [r7, #12]
 5271              		.syntax unified
 5272              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5273 0086 53E8003F 		ldrex r3, [r3]
 5274              	@ 0 "" 2
 5275              		.thumb
 5276              		.syntax unified
 5277 008a BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5278              		.loc 2 481 10
 5279 008c BB68     		ldr	r3, [r7, #8]
 5280              	.LBE657:
 5281              	.LBE656:
 5282              		.loc 1 2141 5 discriminator 1
 5283 008e 23F08003 		bic	r3, r3, #128
 5284 0092 7B64     		str	r3, [r7, #68]
 5285 0094 7B68     		ldr	r3, [r7, #4]
 5286 0096 1B68     		ldr	r3, [r3]
 5287 0098 0833     		adds	r3, r3, #8
 5288 009a 7A6C     		ldr	r2, [r7, #68]
 5289 009c BA61     		str	r2, [r7, #24]
 5290 009e 7B61     		str	r3, [r7, #20]
 5291              	.LBB658:
 5292              	.LBB659:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5293              		.loc 2 531 4
 5294 00a0 7969     		ldr	r1, [r7, #20]
 5295 00a2 BA69     		ldr	r2, [r7, #24]
 5296              		.syntax unified
 5297              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5298 00a4 41E80023 		strex r3, r2, [r1]
 5299              	@ 0 "" 2
 5300              		.thumb
 5301              		.syntax unified
ARM GAS  /tmp/ccMjAmt3.s 			page 142


 5302 00a8 3B61     		str	r3, [r7, #16]
 5303              		.loc 2 532 10
 5304 00aa 3B69     		ldr	r3, [r7, #16]
 5305              	.LBE659:
 5306              	.LBE658:
 5307              		.loc 1 2141 5 discriminator 1
 5308 00ac 002B     		cmp	r3, #0
 5309 00ae E5D1     		bne	.L262
 5310              	.LBE655:
2142:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2143:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2144:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 5311              		.loc 1 2144 14
 5312 00b0 7B68     		ldr	r3, [r7, #4]
 5313 00b2 DB6F     		ldr	r3, [r3, #124]
 5314              		.loc 1 2144 8
 5315 00b4 002B     		cmp	r3, #0
 5316 00b6 13D0     		beq	.L263
2145:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2146:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2147:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2148:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 5317              		.loc 1 2148 12
 5318 00b8 7B68     		ldr	r3, [r7, #4]
 5319 00ba DB6F     		ldr	r3, [r3, #124]
 5320              		.loc 1 2148 40
 5321 00bc 204A     		ldr	r2, .L267
 5322 00be DA66     		str	r2, [r3, #108]
2149:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2150:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Abort DMA TX */
2151:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 5323              		.loc 1 2151 11
 5324 00c0 7B68     		ldr	r3, [r7, #4]
 5325 00c2 DB6F     		ldr	r3, [r3, #124]
 5326 00c4 1846     		mov	r0, r3
 5327 00c6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5328 00ca 0346     		mov	r3, r0
 5329              		.loc 1 2151 10 discriminator 1
 5330 00cc 002B     		cmp	r3, #0
 5331 00ce 31D0     		beq	.L264
2152:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2153:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2154:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 5332              		.loc 1 2154 14
 5333 00d0 7B68     		ldr	r3, [r7, #4]
 5334 00d2 DB6F     		ldr	r3, [r3, #124]
 5335              		.loc 1 2154 22
 5336 00d4 DB6E     		ldr	r3, [r3, #108]
 5337              		.loc 1 2154 47
 5338 00d6 7A68     		ldr	r2, [r7, #4]
 5339 00d8 D26F     		ldr	r2, [r2, #124]
 5340              		.loc 1 2154 9
 5341 00da 1046     		mov	r0, r2
 5342 00dc 9847     		blx	r3
 5343              	.LVL0:
 5344 00de 29E0     		b	.L264
 5345              	.L263:
ARM GAS  /tmp/ccMjAmt3.s 			page 143


2155:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2156:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2157:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
2158:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2159:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Reset Tx transfer counter */
2160:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->TxXferCount = 0U;
 5346              		.loc 1 2160 26
 5347 00e0 7B68     		ldr	r3, [r7, #4]
 5348 00e2 0022     		movs	r2, #0
 5349 00e4 A3F85620 		strh	r2, [r3, #86]	@ movhi
2161:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2162:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Clear TxISR function pointers */
2163:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->TxISR = NULL;
 5350              		.loc 1 2163 20
 5351 00e8 7B68     		ldr	r3, [r7, #4]
 5352 00ea 0022     		movs	r2, #0
 5353 00ec 9A67     		str	r2, [r3, #120]
2164:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2165:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2166:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 5354              		.loc 1 2166 21
 5355 00ee 7B68     		ldr	r3, [r7, #4]
 5356 00f0 2022     		movs	r2, #32
 5357 00f2 C3F88820 		str	r2, [r3, #136]
2167:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2168:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2169:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2170:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2171:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2172:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2173:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2174:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 5358              		.loc 1 2174 7
 5359 00f6 7868     		ldr	r0, [r7, #4]
 5360 00f8 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 5361 00fc 1AE0     		b	.L264
 5362              	.L259:
2175:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2176:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2177:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2178:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
2179:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
2180:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2181:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Reset Tx transfer counter */
2182:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxXferCount = 0U;
 5363              		.loc 1 2182 24
 5364 00fe 7B68     		ldr	r3, [r7, #4]
 5365 0100 0022     		movs	r2, #0
 5366 0102 A3F85620 		strh	r2, [r3, #86]	@ movhi
2183:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2184:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear TxISR function pointers */
2185:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxISR = NULL;
 5367              		.loc 1 2185 18
 5368 0106 7B68     		ldr	r3, [r7, #4]
 5369 0108 0022     		movs	r2, #0
 5370 010a 9A67     		str	r2, [r3, #120]
2186:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 144


2187:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2188:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 5371              		.loc 1 2188 14
 5372 010c 7B68     		ldr	r3, [r7, #4]
 5373 010e 5B6E     		ldr	r3, [r3, #100]
 5374              		.loc 1 2188 8
 5375 0110 B3F1005F 		cmp	r3, #536870912
 5376 0114 07D1     		bne	.L265
2189:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2190:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 5377              		.loc 1 2190 7
 5378 0116 7B68     		ldr	r3, [r7, #4]
 5379 0118 1B68     		ldr	r3, [r3]
 5380 011a 9A69     		ldr	r2, [r3, #24]
 5381 011c 7B68     		ldr	r3, [r7, #4]
 5382 011e 1B68     		ldr	r3, [r3]
 5383 0120 42F01002 		orr	r2, r2, #16
 5384 0124 9A61     		str	r2, [r3, #24]
 5385              	.L265:
2191:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2192:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2193:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2194:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 5386              		.loc 1 2194 19
 5387 0126 7B68     		ldr	r3, [r7, #4]
 5388 0128 2022     		movs	r2, #32
 5389 012a C3F88820 		str	r2, [r3, #136]
2195:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2196:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2197:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2198:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2199:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2200:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2201:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2202:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 5390              		.loc 1 2202 5
 5391 012e 7868     		ldr	r0, [r7, #4]
 5392 0130 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 5393              	.L264:
2203:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2204:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2205:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2206:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 5394              		.loc 1 2206 10
 5395 0134 0023     		movs	r3, #0
2207:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 5396              		.loc 1 2207 1
 5397 0136 1846     		mov	r0, r3
 5398 0138 5037     		adds	r7, r7, #80
 5399              		.cfi_def_cfa_offset 8
 5400 013a BD46     		mov	sp, r7
 5401              		.cfi_def_cfa_register 13
 5402              		@ sp needed
 5403 013c 80BD     		pop	{r7, pc}
 5404              	.L268:
 5405 013e 00BF     		.align	2
 5406              	.L267:
ARM GAS  /tmp/ccMjAmt3.s 			page 145


 5407 0140 00000000 		.word	UART_DMATxOnlyAbortCallback
 5408              		.cfi_endproc
 5409              	.LFE855:
 5411              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 5412              		.align	1
 5413              		.global	HAL_UART_AbortReceive_IT
 5414              		.syntax unified
 5415              		.thumb
 5416              		.thumb_func
 5418              	HAL_UART_AbortReceive_IT:
 5419              	.LFB856:
2208:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2209:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2210:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2211:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2212:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2213:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         This procedure performs following operations :
2214:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2215:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2216:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2217:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - Set handle State to READY
2218:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2219:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2220:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2221:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
2222:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2223:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2224:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 5420              		.loc 1 2224 1
 5421              		.cfi_startproc
 5422              		@ args = 0, pretend = 0, frame = 104
 5423              		@ frame_needed = 1, uses_anonymous_args = 0
 5424 0000 80B5     		push	{r7, lr}
 5425              		.cfi_def_cfa_offset 8
 5426              		.cfi_offset 7, -8
 5427              		.cfi_offset 14, -4
 5428 0002 9AB0     		sub	sp, sp, #104
 5429              		.cfi_def_cfa_offset 112
 5430 0004 00AF     		add	r7, sp, #0
 5431              		.cfi_def_cfa_register 7
 5432 0006 7860     		str	r0, [r7, #4]
 5433              	.L272:
 5434              	.LBB660:
2225:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2226:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
 5435              		.loc 1 2226 3 discriminator 1
 5436 0008 7B68     		ldr	r3, [r7, #4]
 5437 000a 1B68     		ldr	r3, [r3]
 5438 000c BB64     		str	r3, [r7, #72]
 5439              	.LBB661:
 5440              	.LBB662:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5441              		.loc 2 480 4
 5442 000e BB6C     		ldr	r3, [r7, #72]
 5443              		.syntax unified
 5444              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5445 0010 53E8003F 		ldrex r3, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 146


 5446              	@ 0 "" 2
 5447              		.thumb
 5448              		.syntax unified
 5449 0014 7B64     		str	r3, [r7, #68]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5450              		.loc 2 481 10
 5451 0016 7B6C     		ldr	r3, [r7, #68]
 5452              	.LBE662:
 5453              	.LBE661:
 5454              		.loc 1 2226 3 discriminator 1
 5455 0018 23F49073 		bic	r3, r3, #288
 5456 001c 7B66     		str	r3, [r7, #100]
 5457 001e 7B68     		ldr	r3, [r7, #4]
 5458 0020 1B68     		ldr	r3, [r3]
 5459 0022 1A46     		mov	r2, r3
 5460 0024 7B6E     		ldr	r3, [r7, #100]
 5461 0026 7B65     		str	r3, [r7, #84]
 5462 0028 3A65     		str	r2, [r7, #80]
 5463              	.LBB663:
 5464              	.LBB664:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5465              		.loc 2 531 4
 5466 002a 396D     		ldr	r1, [r7, #80]
 5467 002c 7A6D     		ldr	r2, [r7, #84]
 5468              		.syntax unified
 5469              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5470 002e 41E80023 		strex r3, r2, [r1]
 5471              	@ 0 "" 2
 5472              		.thumb
 5473              		.syntax unified
 5474 0032 FB64     		str	r3, [r7, #76]
 5475              		.loc 2 532 10
 5476 0034 FB6C     		ldr	r3, [r7, #76]
 5477              	.LBE664:
 5478              	.LBE663:
 5479              		.loc 1 2226 3 discriminator 1
 5480 0036 002B     		cmp	r3, #0
 5481 0038 E6D1     		bne	.L272
 5482              	.L275:
 5483              	.LBE660:
 5484              	.LBB665:
2227:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 5485              		.loc 1 2227 3 discriminator 1
 5486 003a 7B68     		ldr	r3, [r7, #4]
 5487 003c 1B68     		ldr	r3, [r3]
 5488 003e 0833     		adds	r3, r3, #8
 5489 0040 7B63     		str	r3, [r7, #52]
 5490              	.LBB666:
 5491              	.LBB667:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5492              		.loc 2 480 4
 5493 0042 7B6B     		ldr	r3, [r7, #52]
 5494              		.syntax unified
 5495              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5496 0044 53E8003F 		ldrex r3, [r3]
 5497              	@ 0 "" 2
 5498              		.thumb
ARM GAS  /tmp/ccMjAmt3.s 			page 147


 5499              		.syntax unified
 5500 0048 3B63     		str	r3, [r7, #48]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5501              		.loc 2 481 10
 5502 004a 3B6B     		ldr	r3, [r7, #48]
 5503              	.LBE667:
 5504              	.LBE666:
 5505              		.loc 1 2227 3 discriminator 1
 5506 004c 23F08053 		bic	r3, r3, #268435456
 5507 0050 23F00103 		bic	r3, r3, #1
 5508 0054 3B66     		str	r3, [r7, #96]
 5509 0056 7B68     		ldr	r3, [r7, #4]
 5510 0058 1B68     		ldr	r3, [r3]
 5511 005a 0833     		adds	r3, r3, #8
 5512 005c 3A6E     		ldr	r2, [r7, #96]
 5513 005e 3A64     		str	r2, [r7, #64]
 5514 0060 FB63     		str	r3, [r7, #60]
 5515              	.LBB668:
 5516              	.LBB669:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5517              		.loc 2 531 4
 5518 0062 F96B     		ldr	r1, [r7, #60]
 5519 0064 3A6C     		ldr	r2, [r7, #64]
 5520              		.syntax unified
 5521              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5522 0066 41E80023 		strex r3, r2, [r1]
 5523              	@ 0 "" 2
 5524              		.thumb
 5525              		.syntax unified
 5526 006a BB63     		str	r3, [r7, #56]
 5527              		.loc 2 532 10
 5528 006c BB6B     		ldr	r3, [r7, #56]
 5529              	.LBE669:
 5530              	.LBE668:
 5531              		.loc 1 2227 3 discriminator 1
 5532 006e 002B     		cmp	r3, #0
 5533 0070 E3D1     		bne	.L275
 5534              	.LBE665:
2228:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2229:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2230:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5535              		.loc 1 2230 12
 5536 0072 7B68     		ldr	r3, [r7, #4]
 5537 0074 DB6E     		ldr	r3, [r3, #108]
 5538              		.loc 1 2230 6
 5539 0076 012B     		cmp	r3, #1
 5540 0078 18D1     		bne	.L276
 5541              	.L279:
 5542              	.LBB670:
2231:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2232:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 5543              		.loc 1 2232 5 discriminator 1
 5544 007a 7B68     		ldr	r3, [r7, #4]
 5545 007c 1B68     		ldr	r3, [r3]
 5546 007e 3B62     		str	r3, [r7, #32]
 5547              	.LBB671:
 5548              	.LBB672:
ARM GAS  /tmp/ccMjAmt3.s 			page 148


 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5549              		.loc 2 480 4
 5550 0080 3B6A     		ldr	r3, [r7, #32]
 5551              		.syntax unified
 5552              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5553 0082 53E8003F 		ldrex r3, [r3]
 5554              	@ 0 "" 2
 5555              		.thumb
 5556              		.syntax unified
 5557 0086 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5558              		.loc 2 481 10
 5559 0088 FB69     		ldr	r3, [r7, #28]
 5560              	.LBE672:
 5561              	.LBE671:
 5562              		.loc 1 2232 5 discriminator 1
 5563 008a 23F01003 		bic	r3, r3, #16
 5564 008e FB65     		str	r3, [r7, #92]
 5565 0090 7B68     		ldr	r3, [r7, #4]
 5566 0092 1B68     		ldr	r3, [r3]
 5567 0094 1A46     		mov	r2, r3
 5568 0096 FB6D     		ldr	r3, [r7, #92]
 5569 0098 FB62     		str	r3, [r7, #44]
 5570 009a BA62     		str	r2, [r7, #40]
 5571              	.LBB673:
 5572              	.LBB674:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5573              		.loc 2 531 4
 5574 009c B96A     		ldr	r1, [r7, #40]
 5575 009e FA6A     		ldr	r2, [r7, #44]
 5576              		.syntax unified
 5577              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5578 00a0 41E80023 		strex r3, r2, [r1]
 5579              	@ 0 "" 2
 5580              		.thumb
 5581              		.syntax unified
 5582 00a4 7B62     		str	r3, [r7, #36]
 5583              		.loc 2 532 10
 5584 00a6 7B6A     		ldr	r3, [r7, #36]
 5585              	.LBE674:
 5586              	.LBE673:
 5587              		.loc 1 2232 5 discriminator 1
 5588 00a8 002B     		cmp	r3, #0
 5589 00aa E6D1     		bne	.L279
 5590              	.L276:
 5591              	.LBE670:
2233:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2234:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2235:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
2236:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2237:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5592              		.loc 1 2237 7
 5593 00ac 7B68     		ldr	r3, [r7, #4]
 5594 00ae 1B68     		ldr	r3, [r3]
 5595 00b0 9B68     		ldr	r3, [r3, #8]
 5596 00b2 03F04003 		and	r3, r3, #64
 5597              		.loc 1 2237 6
ARM GAS  /tmp/ccMjAmt3.s 			page 149


 5598 00b6 402B     		cmp	r3, #64
 5599 00b8 54D1     		bne	.L280
 5600              	.L283:
 5601              	.LBB675:
2238:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2239:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2240:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5602              		.loc 1 2240 5 discriminator 1
 5603 00ba 7B68     		ldr	r3, [r7, #4]
 5604 00bc 1B68     		ldr	r3, [r3]
 5605 00be 0833     		adds	r3, r3, #8
 5606 00c0 FB60     		str	r3, [r7, #12]
 5607              	.LBB676:
 5608              	.LBB677:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5609              		.loc 2 480 4
 5610 00c2 FB68     		ldr	r3, [r7, #12]
 5611              		.syntax unified
 5612              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5613 00c4 53E8003F 		ldrex r3, [r3]
 5614              	@ 0 "" 2
 5615              		.thumb
 5616              		.syntax unified
 5617 00c8 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5618              		.loc 2 481 10
 5619 00ca BB68     		ldr	r3, [r7, #8]
 5620              	.LBE677:
 5621              	.LBE676:
 5622              		.loc 1 2240 5 discriminator 1
 5623 00cc 23F04003 		bic	r3, r3, #64
 5624 00d0 BB65     		str	r3, [r7, #88]
 5625 00d2 7B68     		ldr	r3, [r7, #4]
 5626 00d4 1B68     		ldr	r3, [r3]
 5627 00d6 0833     		adds	r3, r3, #8
 5628 00d8 BA6D     		ldr	r2, [r7, #88]
 5629 00da BA61     		str	r2, [r7, #24]
 5630 00dc 7B61     		str	r3, [r7, #20]
 5631              	.LBB678:
 5632              	.LBB679:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5633              		.loc 2 531 4
 5634 00de 7969     		ldr	r1, [r7, #20]
 5635 00e0 BA69     		ldr	r2, [r7, #24]
 5636              		.syntax unified
 5637              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5638 00e2 41E80023 		strex r3, r2, [r1]
 5639              	@ 0 "" 2
 5640              		.thumb
 5641              		.syntax unified
 5642 00e6 3B61     		str	r3, [r7, #16]
 5643              		.loc 2 532 10
 5644 00e8 3B69     		ldr	r3, [r7, #16]
 5645              	.LBE679:
 5646              	.LBE678:
 5647              		.loc 1 2240 5 discriminator 1
 5648 00ea 002B     		cmp	r3, #0
ARM GAS  /tmp/ccMjAmt3.s 			page 150


 5649 00ec E5D1     		bne	.L283
 5650              	.LBE675:
2241:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2242:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2243:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 5651              		.loc 1 2243 14
 5652 00ee 7B68     		ldr	r3, [r7, #4]
 5653 00f0 D3F88030 		ldr	r3, [r3, #128]
 5654              		.loc 1 2243 8
 5655 00f4 002B     		cmp	r3, #0
 5656 00f6 17D0     		beq	.L284
2244:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2245:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2246:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2247:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 5657              		.loc 1 2247 12
 5658 00f8 7B68     		ldr	r3, [r7, #4]
 5659 00fa D3F88030 		ldr	r3, [r3, #128]
 5660              		.loc 1 2247 40
 5661 00fe 264A     		ldr	r2, .L287
 5662 0100 DA66     		str	r2, [r3, #108]
2248:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2249:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Abort DMA RX */
2250:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5663              		.loc 1 2250 11
 5664 0102 7B68     		ldr	r3, [r7, #4]
 5665 0104 D3F88030 		ldr	r3, [r3, #128]
 5666 0108 1846     		mov	r0, r3
 5667 010a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5668 010e 0346     		mov	r3, r0
 5669              		.loc 1 2250 10 discriminator 1
 5670 0110 002B     		cmp	r3, #0
 5671 0112 3CD0     		beq	.L285
2251:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2252:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2253:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5672              		.loc 1 2253 14
 5673 0114 7B68     		ldr	r3, [r7, #4]
 5674 0116 D3F88030 		ldr	r3, [r3, #128]
 5675              		.loc 1 2253 22
 5676 011a DB6E     		ldr	r3, [r3, #108]
 5677              		.loc 1 2253 47
 5678 011c 7A68     		ldr	r2, [r7, #4]
 5679 011e D2F88020 		ldr	r2, [r2, #128]
 5680              		.loc 1 2253 9
 5681 0122 1046     		mov	r0, r2
 5682 0124 9847     		blx	r3
 5683              	.LVL1:
 5684 0126 32E0     		b	.L285
 5685              	.L284:
2254:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2255:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2256:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
2257:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2258:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Reset Rx transfer counter */
2259:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxXferCount = 0U;
 5686              		.loc 1 2259 26
ARM GAS  /tmp/ccMjAmt3.s 			page 151


 5687 0128 7B68     		ldr	r3, [r7, #4]
 5688 012a 0022     		movs	r2, #0
 5689 012c A3F85E20 		strh	r2, [r3, #94]	@ movhi
2260:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2261:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Clear RxISR function pointer */
2262:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 5690              		.loc 1 2262 25
 5691 0130 7B68     		ldr	r3, [r7, #4]
 5692 0132 0022     		movs	r2, #0
 5693 0134 9A65     		str	r2, [r3, #88]
2263:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2264:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2265:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 5694              		.loc 1 2265 7
 5695 0136 7B68     		ldr	r3, [r7, #4]
 5696 0138 1B68     		ldr	r3, [r3]
 5697 013a 0F22     		movs	r2, #15
 5698 013c 1A62     		str	r2, [r3, #32]
2266:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2267:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Discard the received data */
2268:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 5699              		.loc 1 2268 7
 5700 013e 7B68     		ldr	r3, [r7, #4]
 5701 0140 1B68     		ldr	r3, [r3]
 5702 0142 9A69     		ldr	r2, [r3, #24]
 5703 0144 7B68     		ldr	r3, [r7, #4]
 5704 0146 1B68     		ldr	r3, [r3]
 5705 0148 42F00802 		orr	r2, r2, #8
 5706 014c 9A61     		str	r2, [r3, #24]
2269:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2270:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2271:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5707              		.loc 1 2271 22
 5708 014e 7B68     		ldr	r3, [r7, #4]
 5709 0150 2022     		movs	r2, #32
 5710 0152 C3F88C20 		str	r2, [r3, #140]
2272:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5711              		.loc 1 2272 28
 5712 0156 7B68     		ldr	r3, [r7, #4]
 5713 0158 0022     		movs	r2, #0
 5714 015a DA66     		str	r2, [r3, #108]
2273:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2274:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2275:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2276:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2277:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2278:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2279:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2280:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 5715              		.loc 1 2280 7
 5716 015c 7868     		ldr	r0, [r7, #4]
 5717 015e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5718 0162 14E0     		b	.L285
 5719              	.L280:
2281:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2282:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2283:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
ARM GAS  /tmp/ccMjAmt3.s 			page 152


2284:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
2285:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
2286:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2287:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Reset Rx transfer counter */
2288:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxXferCount = 0U;
 5720              		.loc 1 2288 24
 5721 0164 7B68     		ldr	r3, [r7, #4]
 5722 0166 0022     		movs	r2, #0
 5723 0168 A3F85E20 		strh	r2, [r3, #94]	@ movhi
2289:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2290:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear RxISR function pointer */
2291:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 5724              		.loc 1 2291 23
 5725 016c 7B68     		ldr	r3, [r7, #4]
 5726 016e 0022     		movs	r2, #0
 5727 0170 9A65     		str	r2, [r3, #88]
2292:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2293:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2294:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 5728              		.loc 1 2294 5
 5729 0172 7B68     		ldr	r3, [r7, #4]
 5730 0174 1B68     		ldr	r3, [r3]
 5731 0176 0F22     		movs	r2, #15
 5732 0178 1A62     		str	r2, [r3, #32]
2295:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2296:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2297:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5733              		.loc 1 2297 20
 5734 017a 7B68     		ldr	r3, [r7, #4]
 5735 017c 2022     		movs	r2, #32
 5736 017e C3F88C20 		str	r2, [r3, #140]
2298:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5737              		.loc 1 2298 26
 5738 0182 7B68     		ldr	r3, [r7, #4]
 5739 0184 0022     		movs	r2, #0
 5740 0186 DA66     		str	r2, [r3, #108]
2299:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2300:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2301:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2302:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2303:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2304:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2305:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2306:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 5741              		.loc 1 2306 5
 5742 0188 7868     		ldr	r0, [r7, #4]
 5743 018a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5744              	.L285:
2307:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2308:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2309:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2310:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 5745              		.loc 1 2310 10
 5746 018e 0023     		movs	r3, #0
2311:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 5747              		.loc 1 2311 1
 5748 0190 1846     		mov	r0, r3
ARM GAS  /tmp/ccMjAmt3.s 			page 153


 5749 0192 6837     		adds	r7, r7, #104
 5750              		.cfi_def_cfa_offset 8
 5751 0194 BD46     		mov	sp, r7
 5752              		.cfi_def_cfa_register 13
 5753              		@ sp needed
 5754 0196 80BD     		pop	{r7, pc}
 5755              	.L288:
 5756              		.align	2
 5757              	.L287:
 5758 0198 00000000 		.word	UART_DMARxOnlyAbortCallback
 5759              		.cfi_endproc
 5760              	.LFE856:
 5762              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 5763              		.align	1
 5764              		.global	HAL_UART_IRQHandler
 5765              		.syntax unified
 5766              		.thumb
 5767              		.thumb_func
 5769              	HAL_UART_IRQHandler:
 5770              	.LFB857:
2312:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2313:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2314:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2315:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
2316:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2317:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2318:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2319:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 5771              		.loc 1 2319 1
 5772              		.cfi_startproc
 5773              		@ args = 0, pretend = 0, frame = 232
 5774              		@ frame_needed = 1, uses_anonymous_args = 0
 5775 0000 80B5     		push	{r7, lr}
 5776              		.cfi_def_cfa_offset 8
 5777              		.cfi_offset 7, -8
 5778              		.cfi_offset 14, -4
 5779 0002 BAB0     		sub	sp, sp, #232
 5780              		.cfi_def_cfa_offset 240
 5781 0004 00AF     		add	r7, sp, #0
 5782              		.cfi_def_cfa_register 7
 5783 0006 7860     		str	r0, [r7, #4]
2320:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 5784              		.loc 1 2320 25
 5785 0008 7B68     		ldr	r3, [r7, #4]
 5786 000a 1B68     		ldr	r3, [r3]
 5787              		.loc 1 2320 12
 5788 000c DB69     		ldr	r3, [r3, #28]
 5789 000e C7F8E430 		str	r3, [r7, #228]
2321:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 5790              		.loc 1 2321 25
 5791 0012 7B68     		ldr	r3, [r7, #4]
 5792 0014 1B68     		ldr	r3, [r3]
 5793              		.loc 1 2321 12
 5794 0016 1B68     		ldr	r3, [r3]
 5795 0018 C7F8E030 		str	r3, [r7, #224]
2322:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 5796              		.loc 1 2322 25
ARM GAS  /tmp/ccMjAmt3.s 			page 154


 5797 001c 7B68     		ldr	r3, [r7, #4]
 5798 001e 1B68     		ldr	r3, [r3]
 5799              		.loc 1 2322 12
 5800 0020 9B68     		ldr	r3, [r3, #8]
 5801 0022 C7F8DC30 		str	r3, [r7, #220]
2323:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2324:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t errorflags;
2325:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t errorcode;
2326:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2327:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* If no error occurs */
2328:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
 5802              		.loc 1 2328 14
 5803 0026 D7F8E420 		ldr	r2, [r7, #228]
 5804 002a 40F60F03 		movw	r3, #2063
 5805 002e 1340     		ands	r3, r3, r2
 5806 0030 C7F8D830 		str	r3, [r7, #216]
2329:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (errorflags == 0U)
 5807              		.loc 1 2329 6
 5808 0034 D7F8D830 		ldr	r3, [r7, #216]
 5809 0038 002B     		cmp	r3, #0
 5810 003a 1BD1     		bne	.L290
2330:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2331:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2332:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 5811              		.loc 1 2332 20
 5812 003c D7F8E430 		ldr	r3, [r7, #228]
 5813 0040 03F02003 		and	r3, r3, #32
 5814              		.loc 1 2332 8
 5815 0044 002B     		cmp	r3, #0
 5816 0046 15D0     		beq	.L290
2333:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 5817              		.loc 1 2333 22
 5818 0048 D7F8E030 		ldr	r3, [r7, #224]
 5819 004c 03F02003 		and	r3, r3, #32
 5820              		.loc 1 2333 9
 5821 0050 002B     		cmp	r3, #0
 5822 0052 05D1     		bne	.L291
2334:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 5823              		.loc 1 2334 25
 5824 0054 D7F8DC30 		ldr	r3, [r7, #220]
 5825 0058 03F08053 		and	r3, r3, #268435456
 5826              		.loc 1 2334 13
 5827 005c 002B     		cmp	r3, #0
 5828 005e 09D0     		beq	.L290
 5829              	.L291:
2335:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2336:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (huart->RxISR != NULL)
 5830              		.loc 1 2336 16
 5831 0060 7B68     		ldr	r3, [r7, #4]
 5832 0062 5B6F     		ldr	r3, [r3, #116]
 5833              		.loc 1 2336 10
 5834 0064 002B     		cmp	r3, #0
 5835 0066 00F0FA82 		beq	.L346
2337:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2338:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxISR(huart);
 5836              		.loc 1 2338 14
 5837 006a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 155


 5838 006c 5B6F     		ldr	r3, [r3, #116]
 5839              		.loc 1 2338 9
 5840 006e 7868     		ldr	r0, [r7, #4]
 5841 0070 9847     		blx	r3
 5842              	.LVL2:
2339:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2340:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return;
 5843              		.loc 1 2340 7
 5844 0072 F4E2     		b	.L346
 5845              	.L290:
2341:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2342:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2343:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2344:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* If some errors occur */
2345:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((errorflags != 0U)
 5846              		.loc 1 2345 6
 5847 0074 D7F8D830 		ldr	r3, [r7, #216]
 5848 0078 002B     		cmp	r3, #0
 5849 007a 00F02381 		beq	.L294
2346:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 5850              		.loc 1 2346 21
 5851 007e D7F8DC20 		ldr	r2, [r7, #220]
 5852 0082 8D4B     		ldr	r3, .L352
 5853 0084 1340     		ands	r3, r3, r2
 5854              		.loc 1 2346 7
 5855 0086 002B     		cmp	r3, #0
 5856 0088 06D1     		bne	.L295
2347:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 5857              		.loc 1 2347 24
 5858 008a D7F8E020 		ldr	r2, [r7, #224]
 5859 008e 8B4B     		ldr	r3, .L352+4
 5860 0090 1340     		ands	r3, r3, r2
 5861              		.loc 1 2347 12
 5862 0092 002B     		cmp	r3, #0
 5863 0094 00F01681 		beq	.L294
 5864              	.L295:
2348:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2349:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2350:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 5865              		.loc 1 2350 20
 5866 0098 D7F8E430 		ldr	r3, [r7, #228]
 5867 009c 03F00103 		and	r3, r3, #1
 5868              		.loc 1 2350 8
 5869 00a0 002B     		cmp	r3, #0
 5870 00a2 11D0     		beq	.L296
 5871              		.loc 1 2350 55 discriminator 1
 5872 00a4 D7F8E030 		ldr	r3, [r7, #224]
 5873 00a8 03F48073 		and	r3, r3, #256
 5874              		.loc 1 2350 43 discriminator 1
 5875 00ac 002B     		cmp	r3, #0
 5876 00ae 0BD0     		beq	.L296
2351:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2352:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 5877              		.loc 1 2352 7
 5878 00b0 7B68     		ldr	r3, [r7, #4]
 5879 00b2 1B68     		ldr	r3, [r3]
 5880 00b4 0122     		movs	r2, #1
ARM GAS  /tmp/ccMjAmt3.s 			page 156


 5881 00b6 1A62     		str	r2, [r3, #32]
2353:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2354:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 5882              		.loc 1 2354 12
 5883 00b8 7B68     		ldr	r3, [r7, #4]
 5884 00ba D3F89030 		ldr	r3, [r3, #144]
 5885              		.loc 1 2354 24
 5886 00be 43F00102 		orr	r2, r3, #1
 5887 00c2 7B68     		ldr	r3, [r7, #4]
 5888 00c4 C3F89020 		str	r2, [r3, #144]
 5889              	.L296:
2355:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2356:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2357:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2358:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 5890              		.loc 1 2358 20
 5891 00c8 D7F8E430 		ldr	r3, [r7, #228]
 5892 00cc 03F00203 		and	r3, r3, #2
 5893              		.loc 1 2358 8
 5894 00d0 002B     		cmp	r3, #0
 5895 00d2 11D0     		beq	.L297
 5896              		.loc 1 2358 55 discriminator 1
 5897 00d4 D7F8DC30 		ldr	r3, [r7, #220]
 5898 00d8 03F00103 		and	r3, r3, #1
 5899              		.loc 1 2358 43 discriminator 1
 5900 00dc 002B     		cmp	r3, #0
 5901 00de 0BD0     		beq	.L297
2359:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2360:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 5902              		.loc 1 2360 7
 5903 00e0 7B68     		ldr	r3, [r7, #4]
 5904 00e2 1B68     		ldr	r3, [r3]
 5905 00e4 0222     		movs	r2, #2
 5906 00e6 1A62     		str	r2, [r3, #32]
2361:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2362:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 5907              		.loc 1 2362 12
 5908 00e8 7B68     		ldr	r3, [r7, #4]
 5909 00ea D3F89030 		ldr	r3, [r3, #144]
 5910              		.loc 1 2362 24
 5911 00ee 43F00402 		orr	r2, r3, #4
 5912 00f2 7B68     		ldr	r3, [r7, #4]
 5913 00f4 C3F89020 		str	r2, [r3, #144]
 5914              	.L297:
2363:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2364:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2365:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2366:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 5915              		.loc 1 2366 20
 5916 00f8 D7F8E430 		ldr	r3, [r7, #228]
 5917 00fc 03F00403 		and	r3, r3, #4
 5918              		.loc 1 2366 8
 5919 0100 002B     		cmp	r3, #0
 5920 0102 11D0     		beq	.L298
 5921              		.loc 1 2366 55 discriminator 1
 5922 0104 D7F8DC30 		ldr	r3, [r7, #220]
 5923 0108 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccMjAmt3.s 			page 157


 5924              		.loc 1 2366 43 discriminator 1
 5925 010c 002B     		cmp	r3, #0
 5926 010e 0BD0     		beq	.L298
2367:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2368:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 5927              		.loc 1 2368 7
 5928 0110 7B68     		ldr	r3, [r7, #4]
 5929 0112 1B68     		ldr	r3, [r3]
 5930 0114 0422     		movs	r2, #4
 5931 0116 1A62     		str	r2, [r3, #32]
2369:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2370:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 5932              		.loc 1 2370 12
 5933 0118 7B68     		ldr	r3, [r7, #4]
 5934 011a D3F89030 		ldr	r3, [r3, #144]
 5935              		.loc 1 2370 24
 5936 011e 43F00202 		orr	r2, r3, #2
 5937 0122 7B68     		ldr	r3, [r7, #4]
 5938 0124 C3F89020 		str	r2, [r3, #144]
 5939              	.L298:
2371:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2372:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2373:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2374:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 5940              		.loc 1 2374 20
 5941 0128 D7F8E430 		ldr	r3, [r7, #228]
 5942 012c 03F00803 		and	r3, r3, #8
 5943              		.loc 1 2374 8
 5944 0130 002B     		cmp	r3, #0
 5945 0132 17D0     		beq	.L299
2375:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 5946              		.loc 1 2375 22
 5947 0134 D7F8E030 		ldr	r3, [r7, #224]
 5948 0138 03F02003 		and	r3, r3, #32
 5949              		.loc 1 2375 9
 5950 013c 002B     		cmp	r3, #0
 5951 013e 05D1     		bne	.L300
2376:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 5952              		.loc 1 2376 22
 5953 0140 D7F8DC20 		ldr	r2, [r7, #220]
 5954 0144 5C4B     		ldr	r3, .L352
 5955 0146 1340     		ands	r3, r3, r2
2375:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 5956              		.loc 1 2375 57 discriminator 1
 5957 0148 002B     		cmp	r3, #0
 5958 014a 0BD0     		beq	.L299
 5959              	.L300:
2377:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2378:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 5960              		.loc 1 2378 7
 5961 014c 7B68     		ldr	r3, [r7, #4]
 5962 014e 1B68     		ldr	r3, [r3]
 5963 0150 0822     		movs	r2, #8
 5964 0152 1A62     		str	r2, [r3, #32]
2379:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2380:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 5965              		.loc 1 2380 12
ARM GAS  /tmp/ccMjAmt3.s 			page 158


 5966 0154 7B68     		ldr	r3, [r7, #4]
 5967 0156 D3F89030 		ldr	r3, [r3, #144]
 5968              		.loc 1 2380 24
 5969 015a 43F00802 		orr	r2, r3, #8
 5970 015e 7B68     		ldr	r3, [r7, #4]
 5971 0160 C3F89020 		str	r2, [r3, #144]
 5972              	.L299:
2381:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2382:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2383:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2384:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 5973              		.loc 1 2384 20
 5974 0164 D7F8E430 		ldr	r3, [r7, #228]
 5975 0168 03F40063 		and	r3, r3, #2048
 5976              		.loc 1 2384 8
 5977 016c 002B     		cmp	r3, #0
 5978 016e 12D0     		beq	.L301
 5979              		.loc 1 2384 57 discriminator 1
 5980 0170 D7F8E030 		ldr	r3, [r7, #224]
 5981 0174 03F08063 		and	r3, r3, #67108864
 5982              		.loc 1 2384 45 discriminator 1
 5983 0178 002B     		cmp	r3, #0
 5984 017a 0CD0     		beq	.L301
2385:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2386:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 5985              		.loc 1 2386 7
 5986 017c 7B68     		ldr	r3, [r7, #4]
 5987 017e 1B68     		ldr	r3, [r3]
 5988 0180 4FF40062 		mov	r2, #2048
 5989 0184 1A62     		str	r2, [r3, #32]
2387:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2388:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
 5990              		.loc 1 2388 12
 5991 0186 7B68     		ldr	r3, [r7, #4]
 5992 0188 D3F89030 		ldr	r3, [r3, #144]
 5993              		.loc 1 2388 24
 5994 018c 43F02002 		orr	r2, r3, #32
 5995 0190 7B68     		ldr	r3, [r7, #4]
 5996 0192 C3F89020 		str	r2, [r3, #144]
 5997              	.L301:
2389:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2390:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2391:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2392:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 5998              		.loc 1 2392 14
 5999 0196 7B68     		ldr	r3, [r7, #4]
 6000 0198 D3F89030 		ldr	r3, [r3, #144]
 6001              		.loc 1 2392 8
 6002 019c 002B     		cmp	r3, #0
 6003 019e 00F06082 		beq	.L347
2393:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2394:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2395:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 6004              		.loc 1 2395 22
 6005 01a2 D7F8E430 		ldr	r3, [r7, #228]
 6006 01a6 03F02003 		and	r3, r3, #32
 6007              		.loc 1 2395 10
ARM GAS  /tmp/ccMjAmt3.s 			page 159


 6008 01aa 002B     		cmp	r3, #0
 6009 01ac 13D0     		beq	.L303
2396:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 6010              		.loc 1 2396 24
 6011 01ae D7F8E030 		ldr	r3, [r7, #224]
 6012 01b2 03F02003 		and	r3, r3, #32
 6013              		.loc 1 2396 11
 6014 01b6 002B     		cmp	r3, #0
 6015 01b8 05D1     		bne	.L304
2397:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 6016              		.loc 1 2397 27
 6017 01ba D7F8DC30 		ldr	r3, [r7, #220]
 6018 01be 03F08053 		and	r3, r3, #268435456
 6019              		.loc 1 2397 15
 6020 01c2 002B     		cmp	r3, #0
 6021 01c4 07D0     		beq	.L303
 6022              	.L304:
2398:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2399:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (huart->RxISR != NULL)
 6023              		.loc 1 2399 18
 6024 01c6 7B68     		ldr	r3, [r7, #4]
 6025 01c8 5B6F     		ldr	r3, [r3, #116]
 6026              		.loc 1 2399 12
 6027 01ca 002B     		cmp	r3, #0
 6028 01cc 03D0     		beq	.L303
2400:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
2401:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->RxISR(huart);
 6029              		.loc 1 2401 16
 6030 01ce 7B68     		ldr	r3, [r7, #4]
 6031 01d0 5B6F     		ldr	r3, [r3, #116]
 6032              		.loc 1 2401 11
 6033 01d2 7868     		ldr	r0, [r7, #4]
 6034 01d4 9847     		blx	r3
 6035              	.LVL3:
 6036              	.L303:
2402:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
2403:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2404:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2405:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2406:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           - Receiver Timeout error in Reception
2407:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           - Overrun error in Reception
2408:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           - any error occurs in DMA mode reception
2409:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       */
2410:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 6037              		.loc 1 2410 17
 6038 01d6 7B68     		ldr	r3, [r7, #4]
 6039 01d8 D3F89030 		ldr	r3, [r3, #144]
 6040 01dc C7F8D430 		str	r3, [r7, #212]
2411:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 6041              		.loc 1 2411 12
 6042 01e0 7B68     		ldr	r3, [r7, #4]
 6043 01e2 1B68     		ldr	r3, [r3]
 6044 01e4 9B68     		ldr	r3, [r3, #8]
 6045 01e6 03F04003 		and	r3, r3, #64
 6046              		.loc 1 2411 10
 6047 01ea 402B     		cmp	r3, #64
 6048 01ec 05D0     		beq	.L305
ARM GAS  /tmp/ccMjAmt3.s 			page 160


2412:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 6049              		.loc 1 2412 23
 6050 01ee D7F8D430 		ldr	r3, [r7, #212]
 6051 01f2 03F02803 		and	r3, r3, #40
2411:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 6052              		.loc 1 2411 66 discriminator 1
 6053 01f6 002B     		cmp	r3, #0
 6054 01f8 54D0     		beq	.L306
 6055              	.L305:
2413:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2414:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2415:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2416:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2417:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 6056              		.loc 1 2417 9
 6057 01fa 7868     		ldr	r0, [r7, #4]
 6058 01fc FFF7FEFF 		bl	UART_EndRxTransfer
2418:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2419:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
2420:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Abort the UART DMA Rx channel if enabled */
2421:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 6059              		.loc 1 2421 13
 6060 0200 7B68     		ldr	r3, [r7, #4]
 6061 0202 1B68     		ldr	r3, [r3]
 6062 0204 9B68     		ldr	r3, [r3, #8]
 6063 0206 03F04003 		and	r3, r3, #64
 6064              		.loc 1 2421 12
 6065 020a 402B     		cmp	r3, #64
 6066 020c 46D1     		bne	.L307
 6067              	.L310:
 6068              	.LBB680:
2422:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
2423:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Disable the UART DMA Rx request if enabled */
2424:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 6069              		.loc 1 2424 11 discriminator 1
 6070 020e 7B68     		ldr	r3, [r7, #4]
 6071 0210 1B68     		ldr	r3, [r3]
 6072 0212 0833     		adds	r3, r3, #8
 6073 0214 C7F89C30 		str	r3, [r7, #156]
 6074              	.LBB681:
 6075              	.LBB682:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6076              		.loc 2 480 4
 6077 0218 D7F89C30 		ldr	r3, [r7, #156]
 6078              		.syntax unified
 6079              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6080 021c 53E8003F 		ldrex r3, [r3]
 6081              	@ 0 "" 2
 6082              		.thumb
 6083              		.syntax unified
 6084 0220 C7F89830 		str	r3, [r7, #152]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6085              		.loc 2 481 10
 6086 0224 D7F89830 		ldr	r3, [r7, #152]
 6087              	.LBE682:
 6088              	.LBE681:
 6089              		.loc 1 2424 11 discriminator 1
ARM GAS  /tmp/ccMjAmt3.s 			page 161


 6090 0228 23F04003 		bic	r3, r3, #64
 6091 022c C7F8D030 		str	r3, [r7, #208]
 6092 0230 7B68     		ldr	r3, [r7, #4]
 6093 0232 1B68     		ldr	r3, [r3]
 6094 0234 0833     		adds	r3, r3, #8
 6095 0236 D7F8D020 		ldr	r2, [r7, #208]
 6096 023a C7F8A820 		str	r2, [r7, #168]
 6097 023e C7F8A430 		str	r3, [r7, #164]
 6098              	.LBB683:
 6099              	.LBB684:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6100              		.loc 2 531 4
 6101 0242 D7F8A410 		ldr	r1, [r7, #164]
 6102 0246 D7F8A820 		ldr	r2, [r7, #168]
 6103              		.syntax unified
 6104              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6105 024a 41E80023 		strex r3, r2, [r1]
 6106              	@ 0 "" 2
 6107              		.thumb
 6108              		.syntax unified
 6109 024e C7F8A030 		str	r3, [r7, #160]
 6110              		.loc 2 532 10
 6111 0252 D7F8A030 		ldr	r3, [r7, #160]
 6112              	.LBE684:
 6113              	.LBE683:
 6114              		.loc 1 2424 11 discriminator 1
 6115 0256 002B     		cmp	r3, #0
 6116 0258 D9D1     		bne	.L310
 6117              	.LBE680:
2425:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2426:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2427:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 6118              		.loc 1 2427 20
 6119 025a 7B68     		ldr	r3, [r7, #4]
 6120 025c D3F88030 		ldr	r3, [r3, #128]
 6121              		.loc 1 2427 14
 6122 0260 002B     		cmp	r3, #0
 6123 0262 17D0     		beq	.L311
2428:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           {
2429:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2430:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2431:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 6124              		.loc 1 2431 18
 6125 0264 7B68     		ldr	r3, [r7, #4]
 6126 0266 D3F88030 		ldr	r3, [r3, #128]
 6127              		.loc 1 2431 46
 6128 026a 154A     		ldr	r2, .L352+8
 6129 026c DA66     		str	r2, [r3, #108]
2432:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2433:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /* Abort DMA RX */
2434:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 6130              		.loc 1 2434 17
 6131 026e 7B68     		ldr	r3, [r7, #4]
 6132 0270 D3F88030 		ldr	r3, [r3, #128]
 6133 0274 1846     		mov	r0, r3
 6134 0276 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6135 027a 0346     		mov	r3, r0
ARM GAS  /tmp/ccMjAmt3.s 			page 162


 6136              		.loc 1 2434 16 discriminator 1
 6137 027c 002B     		cmp	r3, #0
 6138 027e 19D0     		beq	.L348
2435:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             {
2436:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2437:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 6139              		.loc 1 2437 20
 6140 0280 7B68     		ldr	r3, [r7, #4]
 6141 0282 D3F88030 		ldr	r3, [r3, #128]
 6142              		.loc 1 2437 28
 6143 0286 DB6E     		ldr	r3, [r3, #108]
 6144              		.loc 1 2437 53
 6145 0288 7A68     		ldr	r2, [r7, #4]
 6146 028a D2F88020 		ldr	r2, [r2, #128]
 6147              		.loc 1 2437 15
 6148 028e 1046     		mov	r0, r2
 6149 0290 9847     		blx	r3
 6150              	.LVL4:
2421:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
 6151              		.loc 1 2421 12
 6152 0292 0FE0     		b	.L348
 6153              	.L311:
2438:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             }
2439:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           }
2440:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           else
2441:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           {
2442:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /* Call user error callback */
2443:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2444:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /*Call registered error callback*/
2445:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             huart->ErrorCallback(huart);
2446:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2447:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /*Call legacy weak error callback*/
2448:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 6154              		.loc 1 2448 13
 6155 0294 7868     		ldr	r0, [r7, #4]
 6156 0296 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2421:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
 6157              		.loc 1 2421 12
 6158 029a 0BE0     		b	.L348
 6159              	.L307:
2449:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2450:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2451:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           }
2452:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
2453:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         else
2454:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
2455:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
2456:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Call user error callback */
2457:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2458:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call registered error callback*/
2459:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCallback(huart);
2460:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2461:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call legacy weak error callback*/
2462:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 6160              		.loc 1 2462 11
 6161 029c 7868     		ldr	r0, [r7, #4]
 6162 029e FFF7FEFF 		bl	HAL_UART_ErrorCallback
ARM GAS  /tmp/ccMjAmt3.s 			page 163


2421:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
 6163              		.loc 1 2421 12
 6164 02a2 07E0     		b	.L348
 6165              	.L306:
2463:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2464:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
2465:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2466:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
2467:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2468:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2469:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            Error is notified to user through user error callback */
2470:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2471:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call registered error callback*/
2472:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCallback(huart);
2473:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2474:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call legacy weak error callback*/
2475:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 6166              		.loc 1 2475 9
 6167 02a4 7868     		ldr	r0, [r7, #4]
 6168 02a6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2476:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2477:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 6169              		.loc 1 2477 26
 6170 02aa 7B68     		ldr	r3, [r7, #4]
 6171 02ac 0022     		movs	r2, #0
 6172 02ae C3F89020 		str	r2, [r3, #144]
2478:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2479:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2480:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return;
 6173              		.loc 1 2480 5
 6174 02b2 D6E1     		b	.L347
 6175              	.L348:
2421:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
 6176              		.loc 1 2421 12
 6177 02b4 00BF     		nop
 6178              		.loc 1 2480 5
 6179 02b6 D4E1     		b	.L347
 6180              	.L353:
 6181              		.align	2
 6182              	.L352:
 6183 02b8 01000010 		.word	268435457
 6184 02bc 20010004 		.word	67109152
 6185 02c0 00000000 		.word	UART_DMAAbortOnError
 6186              	.L294:
2481:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2482:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   } /* End if some error occurs */
2483:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2484:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check current reception Mode :
2485:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2486:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 6187              		.loc 1 2486 13
 6188 02c4 7B68     		ldr	r3, [r7, #4]
 6189 02c6 DB6E     		ldr	r3, [r3, #108]
 6190              		.loc 1 2486 6
 6191 02c8 012B     		cmp	r3, #1
 6192 02ca 40F06A81 		bne	.L313
2487:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
ARM GAS  /tmp/ccMjAmt3.s 			page 164


 6193              		.loc 1 2487 21
 6194 02ce D7F8E430 		ldr	r3, [r7, #228]
 6195 02d2 03F01003 		and	r3, r3, #16
 6196              		.loc 1 2487 7
 6197 02d6 002B     		cmp	r3, #0
 6198 02d8 00F06381 		beq	.L313
2488:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
 6199              		.loc 1 2488 19
 6200 02dc D7F8E030 		ldr	r3, [r7, #224]
 6201 02e0 03F01003 		and	r3, r3, #16
 6202              		.loc 1 2488 7
 6203 02e4 002B     		cmp	r3, #0
 6204 02e6 00F05C81 		beq	.L313
2489:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2490:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 6205              		.loc 1 2490 5
 6206 02ea 7B68     		ldr	r3, [r7, #4]
 6207 02ec 1B68     		ldr	r3, [r3]
 6208 02ee 1022     		movs	r2, #16
 6209 02f0 1A62     		str	r2, [r3, #32]
2491:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2492:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
2493:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2494:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 6210              		.loc 1 2494 9
 6211 02f2 7B68     		ldr	r3, [r7, #4]
 6212 02f4 1B68     		ldr	r3, [r3]
 6213 02f6 9B68     		ldr	r3, [r3, #8]
 6214 02f8 03F04003 		and	r3, r3, #64
 6215              		.loc 1 2494 8
 6216 02fc 402B     		cmp	r3, #64
 6217 02fe 40F0D280 		bne	.L314
 6218              	.LBB685:
2495:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2496:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* DMA mode enabled */
2497:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2498:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          (DMA cplt callback will be called).
2499:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2500:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 6219              		.loc 1 2500 50
 6220 0302 7B68     		ldr	r3, [r7, #4]
 6221 0304 D3F88030 		ldr	r3, [r3, #128]
 6222 0308 1B68     		ldr	r3, [r3]
 6223 030a 9B6C     		ldr	r3, [r3, #72]
 6224              		.loc 1 2500 16
 6225 030c A7F8BE30 		strh	r3, [r7, #190]	@ movhi
2501:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 6226              		.loc 1 2501 10
 6227 0310 B7F8BE30 		ldrh	r3, [r7, #190]
 6228 0314 002B     		cmp	r3, #0
 6229 0316 00F0AC80 		beq	.L315
2502:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 6230              		.loc 1 2502 43
 6231 031a 7B68     		ldr	r3, [r7, #4]
 6232 031c B3F85C30 		ldrh	r3, [r3, #92]
 6233              		.loc 1 2502 11
 6234 0320 B7F8BE20 		ldrh	r2, [r7, #190]
ARM GAS  /tmp/ccMjAmt3.s 			page 165


 6235 0324 9A42     		cmp	r2, r3
 6236 0326 80F0A480 		bcs	.L315
2503:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2504:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Reception is not complete */
2505:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 6237              		.loc 1 2505 28
 6238 032a 7B68     		ldr	r3, [r7, #4]
 6239 032c B7F8BE20 		ldrh	r2, [r7, #190]	@ movhi
 6240 0330 A3F85E20 		strh	r2, [r3, #94]	@ movhi
2506:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2507:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2508:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (huart->hdmarx->Mode != DMA_LINKEDLIST_CIRCULAR)
 6241              		.loc 1 2508 18
 6242 0334 7B68     		ldr	r3, [r7, #4]
 6243 0336 D3F88030 		ldr	r3, [r3, #128]
 6244              		.loc 1 2508 26
 6245 033a 1B6D     		ldr	r3, [r3, #80]
 6246              		.loc 1 2508 12
 6247 033c 812B     		cmp	r3, #129
 6248 033e 00F08780 		beq	.L316
 6249              	.L319:
 6250              	.LBB686:
2509:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
2510:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2511:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 6251              		.loc 1 2511 11 discriminator 1
 6252 0342 7B68     		ldr	r3, [r7, #4]
 6253 0344 1B68     		ldr	r3, [r3]
 6254 0346 C7F88830 		str	r3, [r7, #136]
 6255              	.LBB687:
 6256              	.LBB688:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6257              		.loc 2 480 4
 6258 034a D7F88830 		ldr	r3, [r7, #136]
 6259              		.syntax unified
 6260              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6261 034e 53E8003F 		ldrex r3, [r3]
 6262              	@ 0 "" 2
 6263              		.thumb
 6264              		.syntax unified
 6265 0352 C7F88430 		str	r3, [r7, #132]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6266              		.loc 2 481 10
 6267 0356 D7F88430 		ldr	r3, [r7, #132]
 6268              	.LBE688:
 6269              	.LBE687:
 6270              		.loc 1 2511 11 discriminator 1
 6271 035a 23F48073 		bic	r3, r3, #256
 6272 035e C7F8B830 		str	r3, [r7, #184]
 6273 0362 7B68     		ldr	r3, [r7, #4]
 6274 0364 1B68     		ldr	r3, [r3]
 6275 0366 1A46     		mov	r2, r3
 6276 0368 D7F8B830 		ldr	r3, [r7, #184]
 6277 036c C7F89430 		str	r3, [r7, #148]
 6278 0370 C7F89020 		str	r2, [r7, #144]
 6279              	.LBB689:
 6280              	.LBB690:
ARM GAS  /tmp/ccMjAmt3.s 			page 166


 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6281              		.loc 2 531 4
 6282 0374 D7F89010 		ldr	r1, [r7, #144]
 6283 0378 D7F89420 		ldr	r2, [r7, #148]
 6284              		.syntax unified
 6285              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6286 037c 41E80023 		strex r3, r2, [r1]
 6287              	@ 0 "" 2
 6288              		.thumb
 6289              		.syntax unified
 6290 0380 C7F88C30 		str	r3, [r7, #140]
 6291              		.loc 2 532 10
 6292 0384 D7F88C30 		ldr	r3, [r7, #140]
 6293              	.LBE690:
 6294              	.LBE689:
 6295              		.loc 1 2511 11 discriminator 1
 6296 0388 002B     		cmp	r3, #0
 6297 038a DAD1     		bne	.L319
 6298              	.L322:
 6299              	.LBE686:
 6300              	.LBB691:
2512:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6301              		.loc 1 2512 11 discriminator 1
 6302 038c 7B68     		ldr	r3, [r7, #4]
 6303 038e 1B68     		ldr	r3, [r3]
 6304 0390 0833     		adds	r3, r3, #8
 6305 0392 7B67     		str	r3, [r7, #116]
 6306              	.LBB692:
 6307              	.LBB693:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6308              		.loc 2 480 4
 6309 0394 7B6F     		ldr	r3, [r7, #116]
 6310              		.syntax unified
 6311              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6312 0396 53E8003F 		ldrex r3, [r3]
 6313              	@ 0 "" 2
 6314              		.thumb
 6315              		.syntax unified
 6316 039a 3B67     		str	r3, [r7, #112]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6317              		.loc 2 481 10
 6318 039c 3B6F     		ldr	r3, [r7, #112]
 6319              	.LBE693:
 6320              	.LBE692:
 6321              		.loc 1 2512 11 discriminator 1
 6322 039e 23F00103 		bic	r3, r3, #1
 6323 03a2 C7F8B430 		str	r3, [r7, #180]
 6324 03a6 7B68     		ldr	r3, [r7, #4]
 6325 03a8 1B68     		ldr	r3, [r3]
 6326 03aa 0833     		adds	r3, r3, #8
 6327 03ac D7F8B420 		ldr	r2, [r7, #180]
 6328 03b0 C7F88020 		str	r2, [r7, #128]
 6329 03b4 FB67     		str	r3, [r7, #124]
 6330              	.LBB694:
 6331              	.LBB695:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6332              		.loc 2 531 4
ARM GAS  /tmp/ccMjAmt3.s 			page 167


 6333 03b6 F96F     		ldr	r1, [r7, #124]
 6334 03b8 D7F88020 		ldr	r2, [r7, #128]
 6335              		.syntax unified
 6336              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6337 03bc 41E80023 		strex r3, r2, [r1]
 6338              	@ 0 "" 2
 6339              		.thumb
 6340              		.syntax unified
 6341 03c0 BB67     		str	r3, [r7, #120]
 6342              		.loc 2 532 10
 6343 03c2 BB6F     		ldr	r3, [r7, #120]
 6344              	.LBE695:
 6345              	.LBE694:
 6346              		.loc 1 2512 11 discriminator 1
 6347 03c4 002B     		cmp	r3, #0
 6348 03c6 E1D1     		bne	.L322
 6349              	.L325:
 6350              	.LBE691:
 6351              	.LBB696:
2513:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2514:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2515:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****              in the UART CR3 register */
2516:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 6352              		.loc 1 2516 11 discriminator 1
 6353 03c8 7B68     		ldr	r3, [r7, #4]
 6354 03ca 1B68     		ldr	r3, [r3]
 6355 03cc 0833     		adds	r3, r3, #8
 6356 03ce 3B66     		str	r3, [r7, #96]
 6357              	.LBB697:
 6358              	.LBB698:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6359              		.loc 2 480 4
 6360 03d0 3B6E     		ldr	r3, [r7, #96]
 6361              		.syntax unified
 6362              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6363 03d2 53E8003F 		ldrex r3, [r3]
 6364              	@ 0 "" 2
 6365              		.thumb
 6366              		.syntax unified
 6367 03d6 FB65     		str	r3, [r7, #92]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6368              		.loc 2 481 10
 6369 03d8 FB6D     		ldr	r3, [r7, #92]
 6370              	.LBE698:
 6371              	.LBE697:
 6372              		.loc 1 2516 11 discriminator 1
 6373 03da 23F04003 		bic	r3, r3, #64
 6374 03de C7F8B030 		str	r3, [r7, #176]
 6375 03e2 7B68     		ldr	r3, [r7, #4]
 6376 03e4 1B68     		ldr	r3, [r3]
 6377 03e6 0833     		adds	r3, r3, #8
 6378 03e8 D7F8B020 		ldr	r2, [r7, #176]
 6379 03ec FA66     		str	r2, [r7, #108]
 6380 03ee BB66     		str	r3, [r7, #104]
 6381              	.LBB699:
 6382              	.LBB700:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/ccMjAmt3.s 			page 168


 6383              		.loc 2 531 4
 6384 03f0 B96E     		ldr	r1, [r7, #104]
 6385 03f2 FA6E     		ldr	r2, [r7, #108]
 6386              		.syntax unified
 6387              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6388 03f4 41E80023 		strex r3, r2, [r1]
 6389              	@ 0 "" 2
 6390              		.thumb
 6391              		.syntax unified
 6392 03f8 7B66     		str	r3, [r7, #100]
 6393              		.loc 2 532 10
 6394 03fa 7B6E     		ldr	r3, [r7, #100]
 6395              	.LBE700:
 6396              	.LBE699:
 6397              		.loc 1 2516 11 discriminator 1
 6398 03fc 002B     		cmp	r3, #0
 6399 03fe E3D1     		bne	.L325
 6400              	.LBE696:
2517:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2518:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2519:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 6401              		.loc 1 2519 26
 6402 0400 7B68     		ldr	r3, [r7, #4]
 6403 0402 2022     		movs	r2, #32
 6404 0404 C3F88C20 		str	r2, [r3, #140]
2520:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6405              		.loc 1 2520 32
 6406 0408 7B68     		ldr	r3, [r7, #4]
 6407 040a 0022     		movs	r2, #0
 6408 040c DA66     		str	r2, [r3, #108]
 6409              	.L328:
 6410              	.LBB701:
2521:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2522:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6411              		.loc 1 2522 11 discriminator 1
 6412 040e 7B68     		ldr	r3, [r7, #4]
 6413 0410 1B68     		ldr	r3, [r3]
 6414 0412 FB64     		str	r3, [r7, #76]
 6415              	.LBB702:
 6416              	.LBB703:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6417              		.loc 2 480 4
 6418 0414 FB6C     		ldr	r3, [r7, #76]
 6419              		.syntax unified
 6420              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6421 0416 53E8003F 		ldrex r3, [r3]
 6422              	@ 0 "" 2
 6423              		.thumb
 6424              		.syntax unified
 6425 041a BB64     		str	r3, [r7, #72]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6426              		.loc 2 481 10
 6427 041c BB6C     		ldr	r3, [r7, #72]
 6428              	.LBE703:
 6429              	.LBE702:
 6430              		.loc 1 2522 11 discriminator 1
 6431 041e 23F01003 		bic	r3, r3, #16
ARM GAS  /tmp/ccMjAmt3.s 			page 169


 6432 0422 C7F8AC30 		str	r3, [r7, #172]
 6433 0426 7B68     		ldr	r3, [r7, #4]
 6434 0428 1B68     		ldr	r3, [r3]
 6435 042a 1A46     		mov	r2, r3
 6436 042c D7F8AC30 		ldr	r3, [r7, #172]
 6437 0430 BB65     		str	r3, [r7, #88]
 6438 0432 7A65     		str	r2, [r7, #84]
 6439              	.LBB704:
 6440              	.LBB705:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6441              		.loc 2 531 4
 6442 0434 796D     		ldr	r1, [r7, #84]
 6443 0436 BA6D     		ldr	r2, [r7, #88]
 6444              		.syntax unified
 6445              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6446 0438 41E80023 		strex r3, r2, [r1]
 6447              	@ 0 "" 2
 6448              		.thumb
 6449              		.syntax unified
 6450 043c 3B65     		str	r3, [r7, #80]
 6451              		.loc 2 532 10
 6452 043e 3B6D     		ldr	r3, [r7, #80]
 6453              	.LBE705:
 6454              	.LBE704:
 6455              		.loc 1 2522 11 discriminator 1
 6456 0440 002B     		cmp	r3, #0
 6457 0442 E4D1     		bne	.L328
 6458              	.LBE701:
2523:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2524:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2525:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 6459              		.loc 1 2525 17
 6460 0444 7B68     		ldr	r3, [r7, #4]
 6461 0446 D3F88030 		ldr	r3, [r3, #128]
 6462 044a 1846     		mov	r0, r3
 6463 044c FFF7FEFF 		bl	HAL_DMA_Abort
 6464              	.L316:
2526:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
2527:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2528:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2529:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2530:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 6465              		.loc 1 2530 28
 6466 0450 7B68     		ldr	r3, [r7, #4]
 6467 0452 0222     		movs	r2, #2
 6468 0454 1A67     		str	r2, [r3, #112]
2531:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2532:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2533:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2534:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2535:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2536:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2537:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 6469              		.loc 1 2537 49
 6470 0456 7B68     		ldr	r3, [r7, #4]
 6471 0458 B3F85C20 		ldrh	r2, [r3, #92]
 6472              		.loc 1 2537 69
ARM GAS  /tmp/ccMjAmt3.s 			page 170


 6473 045c 7B68     		ldr	r3, [r7, #4]
 6474 045e B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 6475 0462 9BB2     		uxth	r3, r3
 6476              		.loc 1 2537 9
 6477 0464 D31A     		subs	r3, r2, r3
 6478 0466 9BB2     		uxth	r3, r3
 6479 0468 1946     		mov	r1, r3
 6480 046a 7868     		ldr	r0, [r7, #4]
 6481 046c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2538:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2539:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2540:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
2541:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2542:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* If DMA is in Circular mode, Idle event is to be reported to user
2543:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            even if occurring after a Transfer Complete event from DMA */
2544:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (nb_remaining_rx_data == huart->RxXferSize)
2545:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
2546:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           if (huart->hdmarx->Mode == DMA_LINKEDLIST_CIRCULAR)
2547:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           {
2548:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2549:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                In this case, Rx Event type is Idle Event */
2550:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             huart->RxEventType = HAL_UART_RXEVENT_IDLE;
2551:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2552:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2553:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /*Call registered Rx Event callback*/
2554:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             huart->RxEventCallback(huart, huart->RxXferSize);
2555:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2556:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /*Call legacy weak Rx Event callback*/
2557:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
2558:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2559:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           }
2560:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
2561:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2562:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return;
 6482              		.loc 1 2562 7
 6483 0470 F9E0     		b	.L349
 6484              	.L315:
2544:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
 6485              		.loc 1 2544 42
 6486 0472 7B68     		ldr	r3, [r7, #4]
 6487 0474 B3F85C30 		ldrh	r3, [r3, #92]
2544:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
 6488              		.loc 1 2544 12
 6489 0478 B7F8BE20 		ldrh	r2, [r7, #190]
 6490 047c 9A42     		cmp	r2, r3
 6491 047e 40F0F280 		bne	.L349
2546:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           {
 6492              		.loc 1 2546 20
 6493 0482 7B68     		ldr	r3, [r7, #4]
 6494 0484 D3F88030 		ldr	r3, [r3, #128]
2546:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           {
 6495              		.loc 1 2546 28
 6496 0488 1B6D     		ldr	r3, [r3, #80]
2546:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           {
 6497              		.loc 1 2546 14
 6498 048a 812B     		cmp	r3, #129
 6499 048c 40F0EB80 		bne	.L349
ARM GAS  /tmp/ccMjAmt3.s 			page 171


2550:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 6500              		.loc 1 2550 32
 6501 0490 7B68     		ldr	r3, [r7, #4]
 6502 0492 0222     		movs	r2, #2
 6503 0494 1A67     		str	r2, [r3, #112]
2557:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6504              		.loc 1 2557 13
 6505 0496 7B68     		ldr	r3, [r7, #4]
 6506 0498 B3F85C30 		ldrh	r3, [r3, #92]
 6507 049c 1946     		mov	r1, r3
 6508 049e 7868     		ldr	r0, [r7, #4]
 6509 04a0 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 6510              		.loc 1 2562 7
 6511 04a4 DFE0     		b	.L349
 6512              	.L314:
 6513              	.LBE685:
 6514              	.LBB706:
2563:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2564:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
2565:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2566:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
2567:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* DMA mode not enabled */
2568:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2569:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2570:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 6515              		.loc 1 2570 34
 6516 04a6 7B68     		ldr	r3, [r7, #4]
 6517 04a8 B3F85C20 		ldrh	r2, [r3, #92]
 6518              		.loc 1 2570 54
 6519 04ac 7B68     		ldr	r3, [r7, #4]
 6520 04ae B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 6521 04b2 9BB2     		uxth	r3, r3
 6522              		.loc 1 2570 16
 6523 04b4 D31A     		subs	r3, r2, r3
 6524 04b6 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
2571:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 6525              		.loc 1 2571 17
 6526 04ba 7B68     		ldr	r3, [r7, #4]
 6527 04bc B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 6528 04c0 9BB2     		uxth	r3, r3
 6529              		.loc 1 2571 10
 6530 04c2 002B     		cmp	r3, #0
 6531 04c4 00F0D180 		beq	.L350
2572:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           && (nb_rx_data > 0U))
 6532              		.loc 1 2572 11
 6533 04c8 B7F8CE30 		ldrh	r3, [r7, #206]
 6534 04cc 002B     		cmp	r3, #0
 6535 04ce 00F0CC80 		beq	.L350
 6536              	.L333:
 6537              	.LBB707:
2573:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
2574:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2575:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 6538              		.loc 1 2575 9 discriminator 1
 6539 04d2 7B68     		ldr	r3, [r7, #4]
 6540 04d4 1B68     		ldr	r3, [r3]
 6541 04d6 BB63     		str	r3, [r7, #56]
ARM GAS  /tmp/ccMjAmt3.s 			page 172


 6542              	.LBB708:
 6543              	.LBB709:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6544              		.loc 2 480 4
 6545 04d8 BB6B     		ldr	r3, [r7, #56]
 6546              		.syntax unified
 6547              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6548 04da 53E8003F 		ldrex r3, [r3]
 6549              	@ 0 "" 2
 6550              		.thumb
 6551              		.syntax unified
 6552 04de 7B63     		str	r3, [r7, #52]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6553              		.loc 2 481 10
 6554 04e0 7B6B     		ldr	r3, [r7, #52]
 6555              	.LBE709:
 6556              	.LBE708:
 6557              		.loc 1 2575 9 discriminator 1
 6558 04e2 23F49073 		bic	r3, r3, #288
 6559 04e6 C7F8C830 		str	r3, [r7, #200]
 6560 04ea 7B68     		ldr	r3, [r7, #4]
 6561 04ec 1B68     		ldr	r3, [r3]
 6562 04ee 1A46     		mov	r2, r3
 6563 04f0 D7F8C830 		ldr	r3, [r7, #200]
 6564 04f4 7B64     		str	r3, [r7, #68]
 6565 04f6 3A64     		str	r2, [r7, #64]
 6566              	.LBB710:
 6567              	.LBB711:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6568              		.loc 2 531 4
 6569 04f8 396C     		ldr	r1, [r7, #64]
 6570 04fa 7A6C     		ldr	r2, [r7, #68]
 6571              		.syntax unified
 6572              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6573 04fc 41E80023 		strex r3, r2, [r1]
 6574              	@ 0 "" 2
 6575              		.thumb
 6576              		.syntax unified
 6577 0500 FB63     		str	r3, [r7, #60]
 6578              		.loc 2 532 10
 6579 0502 FB6B     		ldr	r3, [r7, #60]
 6580              	.LBE711:
 6581              	.LBE710:
 6582              		.loc 1 2575 9 discriminator 1
 6583 0504 002B     		cmp	r3, #0
 6584 0506 E4D1     		bne	.L333
 6585              	.L336:
 6586              	.LBE707:
 6587              	.LBB712:
2576:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2577:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Disable the UART Error Interrupt:(Frame error, noise error, overrun error) and RX FIFO T
2578:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 6588              		.loc 1 2578 9 discriminator 1
 6589 0508 7B68     		ldr	r3, [r7, #4]
 6590 050a 1B68     		ldr	r3, [r3]
 6591 050c 0833     		adds	r3, r3, #8
 6592 050e 7B62     		str	r3, [r7, #36]
ARM GAS  /tmp/ccMjAmt3.s 			page 173


 6593              	.LBB713:
 6594              	.LBB714:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6595              		.loc 2 480 4
 6596 0510 7B6A     		ldr	r3, [r7, #36]
 6597              		.syntax unified
 6598              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6599 0512 53E8003F 		ldrex r3, [r3]
 6600              	@ 0 "" 2
 6601              		.thumb
 6602              		.syntax unified
 6603 0516 3B62     		str	r3, [r7, #32]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6604              		.loc 2 481 10
 6605 0518 3B6A     		ldr	r3, [r7, #32]
 6606              	.LBE714:
 6607              	.LBE713:
 6608              		.loc 1 2578 9 discriminator 1
 6609 051a 23F08053 		bic	r3, r3, #268435456
 6610 051e 23F00103 		bic	r3, r3, #1
 6611 0522 C7F8C430 		str	r3, [r7, #196]
 6612 0526 7B68     		ldr	r3, [r7, #4]
 6613 0528 1B68     		ldr	r3, [r3]
 6614 052a 0833     		adds	r3, r3, #8
 6615 052c D7F8C420 		ldr	r2, [r7, #196]
 6616 0530 3A63     		str	r2, [r7, #48]
 6617 0532 FB62     		str	r3, [r7, #44]
 6618              	.LBB715:
 6619              	.LBB716:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6620              		.loc 2 531 4
 6621 0534 F96A     		ldr	r1, [r7, #44]
 6622 0536 3A6B     		ldr	r2, [r7, #48]
 6623              		.syntax unified
 6624              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6625 0538 41E80023 		strex r3, r2, [r1]
 6626              	@ 0 "" 2
 6627              		.thumb
 6628              		.syntax unified
 6629 053c BB62     		str	r3, [r7, #40]
 6630              		.loc 2 532 10
 6631 053e BB6A     		ldr	r3, [r7, #40]
 6632              	.LBE716:
 6633              	.LBE715:
 6634              		.loc 1 2578 9 discriminator 1
 6635 0540 002B     		cmp	r3, #0
 6636 0542 E1D1     		bne	.L336
 6637              	.LBE712:
2579:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2580:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2581:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6638              		.loc 1 2581 24
 6639 0544 7B68     		ldr	r3, [r7, #4]
 6640 0546 2022     		movs	r2, #32
 6641 0548 C3F88C20 		str	r2, [r3, #140]
2582:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6642              		.loc 1 2582 30
ARM GAS  /tmp/ccMjAmt3.s 			page 174


 6643 054c 7B68     		ldr	r3, [r7, #4]
 6644 054e 0022     		movs	r2, #0
 6645 0550 DA66     		str	r2, [r3, #108]
2583:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2584:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Clear RxISR function pointer */
2585:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxISR = NULL;
 6646              		.loc 1 2585 22
 6647 0552 7B68     		ldr	r3, [r7, #4]
 6648 0554 0022     		movs	r2, #0
 6649 0556 5A67     		str	r2, [r3, #116]
 6650              	.L339:
 6651              	.LBB717:
2586:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2587:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6652              		.loc 1 2587 9 discriminator 1
 6653 0558 7B68     		ldr	r3, [r7, #4]
 6654 055a 1B68     		ldr	r3, [r3]
 6655 055c 3B61     		str	r3, [r7, #16]
 6656              	.LBB718:
 6657              	.LBB719:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6658              		.loc 2 480 4
 6659 055e 3B69     		ldr	r3, [r7, #16]
 6660              		.syntax unified
 6661              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6662 0560 53E8003F 		ldrex r3, [r3]
 6663              	@ 0 "" 2
 6664              		.thumb
 6665              		.syntax unified
 6666 0564 FB60     		str	r3, [r7, #12]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6667              		.loc 2 481 10
 6668 0566 FB68     		ldr	r3, [r7, #12]
 6669              	.LBE719:
 6670              	.LBE718:
 6671              		.loc 1 2587 9 discriminator 1
 6672 0568 23F01003 		bic	r3, r3, #16
 6673 056c C7F8C030 		str	r3, [r7, #192]
 6674 0570 7B68     		ldr	r3, [r7, #4]
 6675 0572 1B68     		ldr	r3, [r3]
 6676 0574 1A46     		mov	r2, r3
 6677 0576 D7F8C030 		ldr	r3, [r7, #192]
 6678 057a FB61     		str	r3, [r7, #28]
 6679 057c BA61     		str	r2, [r7, #24]
 6680              	.LBB720:
 6681              	.LBB721:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6682              		.loc 2 531 4
 6683 057e B969     		ldr	r1, [r7, #24]
 6684 0580 FA69     		ldr	r2, [r7, #28]
 6685              		.syntax unified
 6686              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6687 0582 41E80023 		strex r3, r2, [r1]
 6688              	@ 0 "" 2
 6689              		.thumb
 6690              		.syntax unified
 6691 0586 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccMjAmt3.s 			page 175


 6692              		.loc 2 532 10
 6693 0588 7B69     		ldr	r3, [r7, #20]
 6694              	.LBE721:
 6695              	.LBE720:
 6696              		.loc 1 2587 9 discriminator 1
 6697 058a 002B     		cmp	r3, #0
 6698 058c E4D1     		bne	.L339
 6699              	.LBE717:
2588:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2589:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2590:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2591:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 6700              		.loc 1 2591 28
 6701 058e 7B68     		ldr	r3, [r7, #4]
 6702 0590 0222     		movs	r2, #2
 6703 0592 1A67     		str	r2, [r3, #112]
2592:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2593:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2594:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2595:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2596:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2597:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2598:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 6704              		.loc 1 2598 9
 6705 0594 B7F8CE30 		ldrh	r3, [r7, #206]
 6706 0598 1946     		mov	r1, r3
 6707 059a 7868     		ldr	r0, [r7, #4]
 6708 059c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2599:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2600:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
2601:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return;
 6709              		.loc 1 2601 7
 6710 05a0 63E0     		b	.L350
 6711              	.L313:
 6712              	.LBE706:
2602:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
2603:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2604:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
2605:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2606:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2607:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2608:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 6713              		.loc 1 2608 18
 6714 05a2 D7F8E430 		ldr	r3, [r7, #228]
 6715 05a6 03F48013 		and	r3, r3, #1048576
 6716              		.loc 1 2608 6
 6717 05aa 002B     		cmp	r3, #0
 6718 05ac 0ED0     		beq	.L340
 6719              		.loc 1 2608 54 discriminator 1
 6720 05ae D7F8DC30 		ldr	r3, [r7, #220]
 6721 05b2 03F48003 		and	r3, r3, #4194304
 6722              		.loc 1 2608 42 discriminator 1
 6723 05b6 002B     		cmp	r3, #0
 6724 05b8 08D0     		beq	.L340
2609:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2610:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 6725              		.loc 1 2610 5
ARM GAS  /tmp/ccMjAmt3.s 			page 176


 6726 05ba 7B68     		ldr	r3, [r7, #4]
 6727 05bc 1B68     		ldr	r3, [r3]
 6728 05be 4FF48012 		mov	r2, #1048576
 6729 05c2 1A62     		str	r2, [r3, #32]
2611:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2612:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2613:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2614:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2615:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2616:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2617:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->WakeupCallback(huart);
2618:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2619:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2620:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 6730              		.loc 1 2620 5
 6731 05c4 7868     		ldr	r0, [r7, #4]
 6732 05c6 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2621:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2622:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return;
 6733              		.loc 1 2622 5
 6734 05ca 51E0     		b	.L289
 6735              	.L340:
2623:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2624:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2625:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2626:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 6736              		.loc 1 2626 18
 6737 05cc D7F8E430 		ldr	r3, [r7, #228]
 6738 05d0 03F08003 		and	r3, r3, #128
 6739              		.loc 1 2626 6
 6740 05d4 002B     		cmp	r3, #0
 6741 05d6 14D0     		beq	.L341
2627:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 6742              		.loc 1 2627 20
 6743 05d8 D7F8E030 		ldr	r3, [r7, #224]
 6744 05dc 03F08003 		and	r3, r3, #128
 6745              		.loc 1 2627 7
 6746 05e0 002B     		cmp	r3, #0
 6747 05e2 05D1     		bne	.L342
2628:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 6748              		.loc 1 2628 23
 6749 05e4 D7F8DC30 		ldr	r3, [r7, #220]
 6750 05e8 03F40003 		and	r3, r3, #8388608
 6751              		.loc 1 2628 11
 6752 05ec 002B     		cmp	r3, #0
 6753 05ee 08D0     		beq	.L341
 6754              	.L342:
2629:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2630:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->TxISR != NULL)
 6755              		.loc 1 2630 14
 6756 05f0 7B68     		ldr	r3, [r7, #4]
 6757 05f2 9B6F     		ldr	r3, [r3, #120]
 6758              		.loc 1 2630 8
 6759 05f4 002B     		cmp	r3, #0
 6760 05f6 3AD0     		beq	.L351
2631:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2632:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->TxISR(huart);
ARM GAS  /tmp/ccMjAmt3.s 			page 177


 6761              		.loc 1 2632 12
 6762 05f8 7B68     		ldr	r3, [r7, #4]
 6763 05fa 9B6F     		ldr	r3, [r3, #120]
 6764              		.loc 1 2632 7
 6765 05fc 7868     		ldr	r0, [r7, #4]
 6766 05fe 9847     		blx	r3
 6767              	.LVL5:
2633:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2634:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return;
 6768              		.loc 1 2634 5
 6769 0600 35E0     		b	.L351
 6770              	.L341:
2635:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2636:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2637:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2638:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 6771              		.loc 1 2638 18
 6772 0602 D7F8E430 		ldr	r3, [r7, #228]
 6773 0606 03F04003 		and	r3, r3, #64
 6774              		.loc 1 2638 6
 6775 060a 002B     		cmp	r3, #0
 6776 060c 09D0     		beq	.L344
 6777              		.loc 1 2638 53 discriminator 1
 6778 060e D7F8E030 		ldr	r3, [r7, #224]
 6779 0612 03F04003 		and	r3, r3, #64
 6780              		.loc 1 2638 41 discriminator 1
 6781 0616 002B     		cmp	r3, #0
 6782 0618 03D0     		beq	.L344
2639:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2640:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 6783              		.loc 1 2640 5
 6784 061a 7868     		ldr	r0, [r7, #4]
 6785 061c FFF7FEFF 		bl	UART_EndTransmit_IT
2641:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return;
 6786              		.loc 1 2641 5
 6787 0620 26E0     		b	.L289
 6788              	.L344:
2642:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2643:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2644:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2645:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 6789              		.loc 1 2645 18
 6790 0622 D7F8E430 		ldr	r3, [r7, #228]
 6791 0626 03F40003 		and	r3, r3, #8388608
 6792              		.loc 1 2645 6
 6793 062a 002B     		cmp	r3, #0
 6794 062c 09D0     		beq	.L345
 6795              		.loc 1 2645 55 discriminator 1
 6796 062e D7F8E030 		ldr	r3, [r7, #224]
 6797 0632 03F08043 		and	r3, r3, #1073741824
 6798              		.loc 1 2645 43 discriminator 1
 6799 0636 002B     		cmp	r3, #0
 6800 0638 03D0     		beq	.L345
2646:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2647:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2648:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2649:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
ARM GAS  /tmp/ccMjAmt3.s 			page 178


2650:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2651:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2652:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
 6801              		.loc 1 2652 5
 6802 063a 7868     		ldr	r0, [r7, #4]
 6803 063c FFF7FEFF 		bl	HAL_UARTEx_TxFifoEmptyCallback
2653:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2654:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return;
 6804              		.loc 1 2654 5
 6805 0640 16E0     		b	.L289
 6806              	.L345:
2655:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2656:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2657:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2658:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 6807              		.loc 1 2658 18
 6808 0642 D7F8E430 		ldr	r3, [r7, #228]
 6809 0646 03F08073 		and	r3, r3, #16777216
 6810              		.loc 1 2658 6
 6811 064a 002B     		cmp	r3, #0
 6812 064c 10D0     		beq	.L289
 6813              		.loc 1 2658 75 discriminator 1
 6814 064e D7F8E030 		ldr	r3, [r7, #224]
 6815              		.loc 1 2658 43 discriminator 1
 6816 0652 002B     		cmp	r3, #0
 6817 0654 0CDA     		bge	.L289
2659:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2660:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2661:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2662:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2663:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
2664:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2665:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
 6818              		.loc 1 2665 5
 6819 0656 7868     		ldr	r0, [r7, #4]
 6820 0658 FFF7FEFF 		bl	HAL_UARTEx_RxFifoFullCallback
2666:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2667:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return;
 6821              		.loc 1 2667 5
 6822 065c 08E0     		b	.L289
 6823              	.L346:
2340:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 6824              		.loc 1 2340 7
 6825 065e 00BF     		nop
 6826 0660 06E0     		b	.L289
 6827              	.L347:
2480:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
 6828              		.loc 1 2480 5
 6829 0662 00BF     		nop
 6830 0664 04E0     		b	.L289
 6831              	.L349:
 6832              	.LBB722:
2562:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 6833              		.loc 1 2562 7
 6834 0666 00BF     		nop
 6835 0668 02E0     		b	.L289
 6836              	.L350:
ARM GAS  /tmp/ccMjAmt3.s 			page 179


 6837              	.LBE722:
 6838              	.LBB723:
2601:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
 6839              		.loc 1 2601 7
 6840 066a 00BF     		nop
 6841 066c 00E0     		b	.L289
 6842              	.L351:
 6843              	.LBE723:
2634:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 6844              		.loc 1 2634 5
 6845 066e 00BF     		nop
 6846              	.L289:
2668:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2669:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 6847              		.loc 1 2669 1
 6848 0670 E837     		adds	r7, r7, #232
 6849              		.cfi_def_cfa_offset 8
 6850 0672 BD46     		mov	sp, r7
 6851              		.cfi_def_cfa_register 13
 6852              		@ sp needed
 6853 0674 80BD     		pop	{r7, pc}
 6854              		.cfi_endproc
 6855              	.LFE857:
 6857 0676 00BF     		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 6858              		.align	1
 6859              		.weak	HAL_UART_TxCpltCallback
 6860              		.syntax unified
 6861              		.thumb
 6862              		.thumb_func
 6864              	HAL_UART_TxCpltCallback:
 6865              	.LFB858:
2670:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2671:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2672:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2673:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
2674:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2675:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2676:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2677:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 6866              		.loc 1 2677 1
 6867              		.cfi_startproc
 6868              		@ args = 0, pretend = 0, frame = 8
 6869              		@ frame_needed = 1, uses_anonymous_args = 0
 6870              		@ link register save eliminated.
 6871 0000 80B4     		push	{r7}
 6872              		.cfi_def_cfa_offset 4
 6873              		.cfi_offset 7, -4
 6874 0002 83B0     		sub	sp, sp, #12
 6875              		.cfi_def_cfa_offset 16
 6876 0004 00AF     		add	r7, sp, #0
 6877              		.cfi_def_cfa_register 7
 6878 0006 7860     		str	r0, [r7, #4]
2678:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2679:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
2680:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2681:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2682:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
ARM GAS  /tmp/ccMjAmt3.s 			page 180


2683:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
2684:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 6879              		.loc 1 2684 1
 6880 0008 00BF     		nop
 6881 000a 0C37     		adds	r7, r7, #12
 6882              		.cfi_def_cfa_offset 4
 6883 000c BD46     		mov	sp, r7
 6884              		.cfi_def_cfa_register 13
 6885              		@ sp needed
 6886 000e 5DF8047B 		ldr	r7, [sp], #4
 6887              		.cfi_restore 7
 6888              		.cfi_def_cfa_offset 0
 6889 0012 7047     		bx	lr
 6890              		.cfi_endproc
 6891              	.LFE858:
 6893              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 6894              		.align	1
 6895              		.weak	HAL_UART_TxHalfCpltCallback
 6896              		.syntax unified
 6897              		.thumb
 6898              		.thumb_func
 6900              	HAL_UART_TxHalfCpltCallback:
 6901              	.LFB859:
2685:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2686:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2687:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2688:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2689:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2690:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2691:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2692:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 6902              		.loc 1 2692 1
 6903              		.cfi_startproc
 6904              		@ args = 0, pretend = 0, frame = 8
 6905              		@ frame_needed = 1, uses_anonymous_args = 0
 6906              		@ link register save eliminated.
 6907 0000 80B4     		push	{r7}
 6908              		.cfi_def_cfa_offset 4
 6909              		.cfi_offset 7, -4
 6910 0002 83B0     		sub	sp, sp, #12
 6911              		.cfi_def_cfa_offset 16
 6912 0004 00AF     		add	r7, sp, #0
 6913              		.cfi_def_cfa_register 7
 6914 0006 7860     		str	r0, [r7, #4]
2693:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2694:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
2695:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2696:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2697:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2698:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
2699:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 6915              		.loc 1 2699 1
 6916 0008 00BF     		nop
 6917 000a 0C37     		adds	r7, r7, #12
 6918              		.cfi_def_cfa_offset 4
 6919 000c BD46     		mov	sp, r7
 6920              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccMjAmt3.s 			page 181


 6921              		@ sp needed
 6922 000e 5DF8047B 		ldr	r7, [sp], #4
 6923              		.cfi_restore 7
 6924              		.cfi_def_cfa_offset 0
 6925 0012 7047     		bx	lr
 6926              		.cfi_endproc
 6927              	.LFE859:
 6929              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6930              		.align	1
 6931              		.weak	HAL_UART_RxCpltCallback
 6932              		.syntax unified
 6933              		.thumb
 6934              		.thumb_func
 6936              	HAL_UART_RxCpltCallback:
 6937              	.LFB860:
2700:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2701:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2702:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2703:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2704:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2705:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2706:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2707:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 6938              		.loc 1 2707 1
 6939              		.cfi_startproc
 6940              		@ args = 0, pretend = 0, frame = 8
 6941              		@ frame_needed = 1, uses_anonymous_args = 0
 6942              		@ link register save eliminated.
 6943 0000 80B4     		push	{r7}
 6944              		.cfi_def_cfa_offset 4
 6945              		.cfi_offset 7, -4
 6946 0002 83B0     		sub	sp, sp, #12
 6947              		.cfi_def_cfa_offset 16
 6948 0004 00AF     		add	r7, sp, #0
 6949              		.cfi_def_cfa_register 7
 6950 0006 7860     		str	r0, [r7, #4]
2708:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2709:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
2710:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2711:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2712:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2713:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
2714:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 6951              		.loc 1 2714 1
 6952 0008 00BF     		nop
 6953 000a 0C37     		adds	r7, r7, #12
 6954              		.cfi_def_cfa_offset 4
 6955 000c BD46     		mov	sp, r7
 6956              		.cfi_def_cfa_register 13
 6957              		@ sp needed
 6958 000e 5DF8047B 		ldr	r7, [sp], #4
 6959              		.cfi_restore 7
 6960              		.cfi_def_cfa_offset 0
 6961 0012 7047     		bx	lr
 6962              		.cfi_endproc
 6963              	.LFE860:
 6965              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccMjAmt3.s 			page 182


 6966              		.align	1
 6967              		.weak	HAL_UART_RxHalfCpltCallback
 6968              		.syntax unified
 6969              		.thumb
 6970              		.thumb_func
 6972              	HAL_UART_RxHalfCpltCallback:
 6973              	.LFB861:
2715:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2716:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2717:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2718:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2719:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2720:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2721:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2722:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 6974              		.loc 1 2722 1
 6975              		.cfi_startproc
 6976              		@ args = 0, pretend = 0, frame = 8
 6977              		@ frame_needed = 1, uses_anonymous_args = 0
 6978              		@ link register save eliminated.
 6979 0000 80B4     		push	{r7}
 6980              		.cfi_def_cfa_offset 4
 6981              		.cfi_offset 7, -4
 6982 0002 83B0     		sub	sp, sp, #12
 6983              		.cfi_def_cfa_offset 16
 6984 0004 00AF     		add	r7, sp, #0
 6985              		.cfi_def_cfa_register 7
 6986 0006 7860     		str	r0, [r7, #4]
2723:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2724:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
2725:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2726:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2727:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2728:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
2729:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 6987              		.loc 1 2729 1
 6988 0008 00BF     		nop
 6989 000a 0C37     		adds	r7, r7, #12
 6990              		.cfi_def_cfa_offset 4
 6991 000c BD46     		mov	sp, r7
 6992              		.cfi_def_cfa_register 13
 6993              		@ sp needed
 6994 000e 5DF8047B 		ldr	r7, [sp], #4
 6995              		.cfi_restore 7
 6996              		.cfi_def_cfa_offset 0
 6997 0012 7047     		bx	lr
 6998              		.cfi_endproc
 6999              	.LFE861:
 7001              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 7002              		.align	1
 7003              		.weak	HAL_UART_ErrorCallback
 7004              		.syntax unified
 7005              		.thumb
 7006              		.thumb_func
 7008              	HAL_UART_ErrorCallback:
 7009              	.LFB862:
2730:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 183


2731:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2732:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  UART error callback.
2733:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2734:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2735:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2736:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2737:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7010              		.loc 1 2737 1
 7011              		.cfi_startproc
 7012              		@ args = 0, pretend = 0, frame = 8
 7013              		@ frame_needed = 1, uses_anonymous_args = 0
 7014              		@ link register save eliminated.
 7015 0000 80B4     		push	{r7}
 7016              		.cfi_def_cfa_offset 4
 7017              		.cfi_offset 7, -4
 7018 0002 83B0     		sub	sp, sp, #12
 7019              		.cfi_def_cfa_offset 16
 7020 0004 00AF     		add	r7, sp, #0
 7021              		.cfi_def_cfa_register 7
 7022 0006 7860     		str	r0, [r7, #4]
2738:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2739:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
2740:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2741:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2742:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2743:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
2744:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7023              		.loc 1 2744 1
 7024 0008 00BF     		nop
 7025 000a 0C37     		adds	r7, r7, #12
 7026              		.cfi_def_cfa_offset 4
 7027 000c BD46     		mov	sp, r7
 7028              		.cfi_def_cfa_register 13
 7029              		@ sp needed
 7030 000e 5DF8047B 		ldr	r7, [sp], #4
 7031              		.cfi_restore 7
 7032              		.cfi_def_cfa_offset 0
 7033 0012 7047     		bx	lr
 7034              		.cfi_endproc
 7035              	.LFE862:
 7037              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 7038              		.align	1
 7039              		.weak	HAL_UART_AbortCpltCallback
 7040              		.syntax unified
 7041              		.thumb
 7042              		.thumb_func
 7044              	HAL_UART_AbortCpltCallback:
 7045              	.LFB863:
2745:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2746:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2747:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2748:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2749:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2750:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2751:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2752:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7046              		.loc 1 2752 1
ARM GAS  /tmp/ccMjAmt3.s 			page 184


 7047              		.cfi_startproc
 7048              		@ args = 0, pretend = 0, frame = 8
 7049              		@ frame_needed = 1, uses_anonymous_args = 0
 7050              		@ link register save eliminated.
 7051 0000 80B4     		push	{r7}
 7052              		.cfi_def_cfa_offset 4
 7053              		.cfi_offset 7, -4
 7054 0002 83B0     		sub	sp, sp, #12
 7055              		.cfi_def_cfa_offset 16
 7056 0004 00AF     		add	r7, sp, #0
 7057              		.cfi_def_cfa_register 7
 7058 0006 7860     		str	r0, [r7, #4]
2753:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2754:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
2755:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2756:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2757:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2758:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
2759:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7059              		.loc 1 2759 1
 7060 0008 00BF     		nop
 7061 000a 0C37     		adds	r7, r7, #12
 7062              		.cfi_def_cfa_offset 4
 7063 000c BD46     		mov	sp, r7
 7064              		.cfi_def_cfa_register 13
 7065              		@ sp needed
 7066 000e 5DF8047B 		ldr	r7, [sp], #4
 7067              		.cfi_restore 7
 7068              		.cfi_def_cfa_offset 0
 7069 0012 7047     		bx	lr
 7070              		.cfi_endproc
 7071              	.LFE863:
 7073              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 7074              		.align	1
 7075              		.weak	HAL_UART_AbortTransmitCpltCallback
 7076              		.syntax unified
 7077              		.thumb
 7078              		.thumb_func
 7080              	HAL_UART_AbortTransmitCpltCallback:
 7081              	.LFB864:
2760:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2761:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2762:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2763:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2764:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2765:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2766:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2767:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7082              		.loc 1 2767 1
 7083              		.cfi_startproc
 7084              		@ args = 0, pretend = 0, frame = 8
 7085              		@ frame_needed = 1, uses_anonymous_args = 0
 7086              		@ link register save eliminated.
 7087 0000 80B4     		push	{r7}
 7088              		.cfi_def_cfa_offset 4
 7089              		.cfi_offset 7, -4
 7090 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccMjAmt3.s 			page 185


 7091              		.cfi_def_cfa_offset 16
 7092 0004 00AF     		add	r7, sp, #0
 7093              		.cfi_def_cfa_register 7
 7094 0006 7860     		str	r0, [r7, #4]
2768:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2769:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
2770:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2771:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2772:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2773:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
2774:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7095              		.loc 1 2774 1
 7096 0008 00BF     		nop
 7097 000a 0C37     		adds	r7, r7, #12
 7098              		.cfi_def_cfa_offset 4
 7099 000c BD46     		mov	sp, r7
 7100              		.cfi_def_cfa_register 13
 7101              		@ sp needed
 7102 000e 5DF8047B 		ldr	r7, [sp], #4
 7103              		.cfi_restore 7
 7104              		.cfi_def_cfa_offset 0
 7105 0012 7047     		bx	lr
 7106              		.cfi_endproc
 7107              	.LFE864:
 7109              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 7110              		.align	1
 7111              		.weak	HAL_UART_AbortReceiveCpltCallback
 7112              		.syntax unified
 7113              		.thumb
 7114              		.thumb_func
 7116              	HAL_UART_AbortReceiveCpltCallback:
 7117              	.LFB865:
2775:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2776:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2777:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2778:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2779:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2780:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2781:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2782:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7118              		.loc 1 2782 1
 7119              		.cfi_startproc
 7120              		@ args = 0, pretend = 0, frame = 8
 7121              		@ frame_needed = 1, uses_anonymous_args = 0
 7122              		@ link register save eliminated.
 7123 0000 80B4     		push	{r7}
 7124              		.cfi_def_cfa_offset 4
 7125              		.cfi_offset 7, -4
 7126 0002 83B0     		sub	sp, sp, #12
 7127              		.cfi_def_cfa_offset 16
 7128 0004 00AF     		add	r7, sp, #0
 7129              		.cfi_def_cfa_register 7
 7130 0006 7860     		str	r0, [r7, #4]
2783:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2784:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
2785:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2786:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/ccMjAmt3.s 			page 186


2787:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2788:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
2789:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7131              		.loc 1 2789 1
 7132 0008 00BF     		nop
 7133 000a 0C37     		adds	r7, r7, #12
 7134              		.cfi_def_cfa_offset 4
 7135 000c BD46     		mov	sp, r7
 7136              		.cfi_def_cfa_register 13
 7137              		@ sp needed
 7138 000e 5DF8047B 		ldr	r7, [sp], #4
 7139              		.cfi_restore 7
 7140              		.cfi_def_cfa_offset 0
 7141 0012 7047     		bx	lr
 7142              		.cfi_endproc
 7143              	.LFE865:
 7145              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 7146              		.align	1
 7147              		.weak	HAL_UARTEx_RxEventCallback
 7148              		.syntax unified
 7149              		.thumb
 7150              		.thumb_func
 7152              	HAL_UARTEx_RxEventCallback:
 7153              	.LFB866:
2790:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2791:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2792:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2793:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle
2794:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2795:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *               reception buffer until which, data are available)
2796:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2797:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2798:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2799:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7154              		.loc 1 2799 1
 7155              		.cfi_startproc
 7156              		@ args = 0, pretend = 0, frame = 8
 7157              		@ frame_needed = 1, uses_anonymous_args = 0
 7158              		@ link register save eliminated.
 7159 0000 80B4     		push	{r7}
 7160              		.cfi_def_cfa_offset 4
 7161              		.cfi_offset 7, -4
 7162 0002 83B0     		sub	sp, sp, #12
 7163              		.cfi_def_cfa_offset 16
 7164 0004 00AF     		add	r7, sp, #0
 7165              		.cfi_def_cfa_register 7
 7166 0006 7860     		str	r0, [r7, #4]
 7167 0008 0B46     		mov	r3, r1
 7168 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2800:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2801:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(huart);
2802:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UNUSED(Size);
2803:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2804:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2805:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2806:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****    */
2807:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
ARM GAS  /tmp/ccMjAmt3.s 			page 187


 7169              		.loc 1 2807 1
 7170 000c 00BF     		nop
 7171 000e 0C37     		adds	r7, r7, #12
 7172              		.cfi_def_cfa_offset 4
 7173 0010 BD46     		mov	sp, r7
 7174              		.cfi_def_cfa_register 13
 7175              		@ sp needed
 7176 0012 5DF8047B 		ldr	r7, [sp], #4
 7177              		.cfi_restore 7
 7178              		.cfi_def_cfa_offset 0
 7179 0016 7047     		bx	lr
 7180              		.cfi_endproc
 7181              	.LFE866:
 7183              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 7184              		.align	1
 7185              		.global	HAL_UART_ReceiverTimeout_Config
 7186              		.syntax unified
 7187              		.thumb
 7188              		.thumb_func
 7190              	HAL_UART_ReceiverTimeout_Config:
 7191              	.LFB867:
2808:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2809:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2810:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @}
2811:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2812:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2813:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2814:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *  @brief   UART control functions
2815:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *
2816:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** @verbatim
2817:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****  ===============================================================================
2818:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2819:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****  ===============================================================================
2820:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
2821:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2822:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2823:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2824:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2825:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2826:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2827:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2828:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2829:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2830:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2831:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2832:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2833:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2834:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** @endverbatim
2835:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
2836:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2837:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2838:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2839:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2840:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2841:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2842:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2843:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
ARM GAS  /tmp/ccMjAmt3.s 			page 188


2844:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2845:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2846:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2847:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7192              		.loc 1 2847 1
 7193              		.cfi_startproc
 7194              		@ args = 0, pretend = 0, frame = 8
 7195              		@ frame_needed = 1, uses_anonymous_args = 0
 7196 0000 80B5     		push	{r7, lr}
 7197              		.cfi_def_cfa_offset 8
 7198              		.cfi_offset 7, -8
 7199              		.cfi_offset 14, -4
 7200 0002 82B0     		sub	sp, sp, #8
 7201              		.cfi_def_cfa_offset 16
 7202 0004 00AF     		add	r7, sp, #0
 7203              		.cfi_def_cfa_register 7
 7204 0006 7860     		str	r0, [r7, #4]
 7205 0008 3960     		str	r1, [r7]
2848:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 7206              		.loc 1 2848 9
 7207 000a 7B68     		ldr	r3, [r7, #4]
 7208 000c 1B68     		ldr	r3, [r3]
 7209              		.loc 1 2848 6
 7210 000e 0F4A     		ldr	r2, .L367
 7211 0010 9342     		cmp	r3, r2
 7212 0012 17D0     		beq	.L366
 7213              		.loc 1 2848 9 discriminator 1
 7214 0014 7B68     		ldr	r3, [r7, #4]
 7215 0016 1B68     		ldr	r3, [r3]
 7216              		.loc 1 2848 7 discriminator 1
 7217 0018 0D4A     		ldr	r2, .L367+4
 7218 001a 9342     		cmp	r3, r2
 7219 001c 12D0     		beq	.L366
2849:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2850:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
 7220              		.loc 1 2850 5
 7221 001e 3B68     		ldr	r3, [r7]
 7222 0020 B3F1807F 		cmp	r3, #16777216
 7223 0024 04D3     		bcc	.L365
 7224              		.loc 1 2850 5 is_stmt 0 discriminator 1
 7225 0026 40F62231 		movw	r1, #2850
 7226 002a 0A48     		ldr	r0, .L367+8
 7227 002c FFF7FEFF 		bl	assert_failed
 7228              	.L365:
2851:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 7229              		.loc 1 2851 5 is_stmt 1
 7230 0030 7B68     		ldr	r3, [r7, #4]
 7231 0032 1B68     		ldr	r3, [r3]
 7232 0034 5B69     		ldr	r3, [r3, #20]
 7233 0036 03F07F41 		and	r1, r3, #-16777216
 7234 003a 7B68     		ldr	r3, [r7, #4]
 7235 003c 1B68     		ldr	r3, [r3]
 7236 003e 3A68     		ldr	r2, [r7]
 7237 0040 0A43     		orrs	r2, r2, r1
 7238 0042 5A61     		str	r2, [r3, #20]
 7239              	.L366:
2852:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
ARM GAS  /tmp/ccMjAmt3.s 			page 189


2853:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7240              		.loc 1 2853 1
 7241 0044 00BF     		nop
 7242 0046 0837     		adds	r7, r7, #8
 7243              		.cfi_def_cfa_offset 8
 7244 0048 BD46     		mov	sp, r7
 7245              		.cfi_def_cfa_register 13
 7246              		@ sp needed
 7247 004a 80BD     		pop	{r7, pc}
 7248              	.L368:
 7249              		.align	2
 7250              	.L367:
 7251 004c 000C0056 		.word	1442843648
 7252 0050 000C0046 		.word	1174408192
 7253 0054 00000000 		.word	.LC0
 7254              		.cfi_endproc
 7255              	.LFE867:
 7257              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 7258              		.align	1
 7259              		.global	HAL_UART_EnableReceiverTimeout
 7260              		.syntax unified
 7261              		.thumb
 7262              		.thumb_func
 7264              	HAL_UART_EnableReceiverTimeout:
 7265              	.LFB868:
2854:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2855:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2856:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2857:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2858:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2859:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
2860:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2861:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2862:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7266              		.loc 1 2862 1
 7267              		.cfi_startproc
 7268              		@ args = 0, pretend = 0, frame = 8
 7269              		@ frame_needed = 1, uses_anonymous_args = 0
 7270              		@ link register save eliminated.
 7271 0000 80B4     		push	{r7}
 7272              		.cfi_def_cfa_offset 4
 7273              		.cfi_offset 7, -4
 7274 0002 83B0     		sub	sp, sp, #12
 7275              		.cfi_def_cfa_offset 16
 7276 0004 00AF     		add	r7, sp, #0
 7277              		.cfi_def_cfa_register 7
 7278 0006 7860     		str	r0, [r7, #4]
2863:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 7279              		.loc 1 2863 9
 7280 0008 7B68     		ldr	r3, [r7, #4]
 7281 000a 1B68     		ldr	r3, [r3]
 7282              		.loc 1 2863 6
 7283 000c 1B4A     		ldr	r2, .L374
 7284 000e 9342     		cmp	r3, r2
 7285 0010 2CD0     		beq	.L370
 7286              		.loc 1 2863 9 discriminator 1
 7287 0012 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 190


 7288 0014 1B68     		ldr	r3, [r3]
 7289              		.loc 1 2863 7 discriminator 1
 7290 0016 1A4A     		ldr	r2, .L374+4
 7291 0018 9342     		cmp	r3, r2
 7292 001a 27D0     		beq	.L370
2864:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2865:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
 7293              		.loc 1 2865 14
 7294 001c 7B68     		ldr	r3, [r7, #4]
 7295 001e D3F88830 		ldr	r3, [r3, #136]
 7296              		.loc 1 2865 8
 7297 0022 202B     		cmp	r3, #32
 7298 0024 20D1     		bne	.L371
2866:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2867:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Process Locked */
2868:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_LOCK(huart);
 7299              		.loc 1 2868 7
 7300 0026 7B68     		ldr	r3, [r7, #4]
 7301 0028 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 7302 002c 012B     		cmp	r3, #1
 7303 002e 01D1     		bne	.L372
 7304              		.loc 1 2868 7 is_stmt 0 discriminator 1
 7305 0030 0223     		movs	r3, #2
 7306              		.loc 1 2868 7
 7307 0032 1CE0     		b	.L373
 7308              	.L372:
 7309              		.loc 1 2868 7 discriminator 2
 7310 0034 7B68     		ldr	r3, [r7, #4]
 7311 0036 0122     		movs	r2, #1
 7312 0038 83F88420 		strb	r2, [r3, #132]
2869:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2870:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
 7313              		.loc 1 2870 21 is_stmt 1
 7314 003c 7B68     		ldr	r3, [r7, #4]
 7315 003e 2422     		movs	r2, #36
 7316 0040 C3F88820 		str	r2, [r3, #136]
2871:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2872:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2873:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 7317              		.loc 1 2873 7
 7318 0044 7B68     		ldr	r3, [r7, #4]
 7319 0046 1B68     		ldr	r3, [r3]
 7320 0048 5A68     		ldr	r2, [r3, #4]
 7321 004a 7B68     		ldr	r3, [r7, #4]
 7322 004c 1B68     		ldr	r3, [r3]
 7323 004e 42F40002 		orr	r2, r2, #8388608
 7324 0052 5A60     		str	r2, [r3, #4]
2874:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2875:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 7325              		.loc 1 2875 21
 7326 0054 7B68     		ldr	r3, [r7, #4]
 7327 0056 2022     		movs	r2, #32
 7328 0058 C3F88820 		str	r2, [r3, #136]
2876:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2877:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Process Unlocked */
2878:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 7329              		.loc 1 2878 7
ARM GAS  /tmp/ccMjAmt3.s 			page 191


 7330 005c 7B68     		ldr	r3, [r7, #4]
 7331 005e 0022     		movs	r2, #0
 7332 0060 83F88420 		strb	r2, [r3, #132]
2879:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2880:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_OK;
 7333              		.loc 1 2880 14
 7334 0064 0023     		movs	r3, #0
 7335 0066 02E0     		b	.L373
 7336              	.L371:
2881:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2882:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
2883:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2884:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_BUSY;
 7337              		.loc 1 2884 14
 7338 0068 0223     		movs	r3, #2
 7339 006a 00E0     		b	.L373
 7340              	.L370:
2885:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2886:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2887:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
2888:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2889:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 7341              		.loc 1 2889 12
 7342 006c 0123     		movs	r3, #1
 7343              	.L373:
2890:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2891:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7344              		.loc 1 2891 1
 7345 006e 1846     		mov	r0, r3
 7346 0070 0C37     		adds	r7, r7, #12
 7347              		.cfi_def_cfa_offset 4
 7348 0072 BD46     		mov	sp, r7
 7349              		.cfi_def_cfa_register 13
 7350              		@ sp needed
 7351 0074 5DF8047B 		ldr	r7, [sp], #4
 7352              		.cfi_restore 7
 7353              		.cfi_def_cfa_offset 0
 7354 0078 7047     		bx	lr
 7355              	.L375:
 7356 007a 00BF     		.align	2
 7357              	.L374:
 7358 007c 000C0056 		.word	1442843648
 7359 0080 000C0046 		.word	1174408192
 7360              		.cfi_endproc
 7361              	.LFE868:
 7363              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 7364              		.align	1
 7365              		.global	HAL_UART_DisableReceiverTimeout
 7366              		.syntax unified
 7367              		.thumb
 7368              		.thumb_func
 7370              	HAL_UART_DisableReceiverTimeout:
 7371              	.LFB869:
2892:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2893:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2894:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2895:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccMjAmt3.s 			page 192


2896:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2897:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
2898:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2899:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2900:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7372              		.loc 1 2900 1
 7373              		.cfi_startproc
 7374              		@ args = 0, pretend = 0, frame = 8
 7375              		@ frame_needed = 1, uses_anonymous_args = 0
 7376              		@ link register save eliminated.
 7377 0000 80B4     		push	{r7}
 7378              		.cfi_def_cfa_offset 4
 7379              		.cfi_offset 7, -4
 7380 0002 83B0     		sub	sp, sp, #12
 7381              		.cfi_def_cfa_offset 16
 7382 0004 00AF     		add	r7, sp, #0
 7383              		.cfi_def_cfa_register 7
 7384 0006 7860     		str	r0, [r7, #4]
2901:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 7385              		.loc 1 2901 9
 7386 0008 7B68     		ldr	r3, [r7, #4]
 7387 000a 1B68     		ldr	r3, [r3]
 7388              		.loc 1 2901 6
 7389 000c 1B4A     		ldr	r2, .L381
 7390 000e 9342     		cmp	r3, r2
 7391 0010 2CD0     		beq	.L377
 7392              		.loc 1 2901 9 discriminator 1
 7393 0012 7B68     		ldr	r3, [r7, #4]
 7394 0014 1B68     		ldr	r3, [r3]
 7395              		.loc 1 2901 7 discriminator 1
 7396 0016 1A4A     		ldr	r2, .L381+4
 7397 0018 9342     		cmp	r3, r2
 7398 001a 27D0     		beq	.L377
2902:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2903:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
 7399              		.loc 1 2903 14
 7400 001c 7B68     		ldr	r3, [r7, #4]
 7401 001e D3F88830 		ldr	r3, [r3, #136]
 7402              		.loc 1 2903 8
 7403 0022 202B     		cmp	r3, #32
 7404 0024 20D1     		bne	.L378
2904:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2905:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Process Locked */
2906:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_LOCK(huart);
 7405              		.loc 1 2906 7
 7406 0026 7B68     		ldr	r3, [r7, #4]
 7407 0028 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 7408 002c 012B     		cmp	r3, #1
 7409 002e 01D1     		bne	.L379
 7410              		.loc 1 2906 7 is_stmt 0 discriminator 1
 7411 0030 0223     		movs	r3, #2
 7412              		.loc 1 2906 7
 7413 0032 1CE0     		b	.L380
 7414              	.L379:
 7415              		.loc 1 2906 7 discriminator 2
 7416 0034 7B68     		ldr	r3, [r7, #4]
 7417 0036 0122     		movs	r2, #1
ARM GAS  /tmp/ccMjAmt3.s 			page 193


 7418 0038 83F88420 		strb	r2, [r3, #132]
2907:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2908:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
 7419              		.loc 1 2908 21 is_stmt 1
 7420 003c 7B68     		ldr	r3, [r7, #4]
 7421 003e 2422     		movs	r2, #36
 7422 0040 C3F88820 		str	r2, [r3, #136]
2909:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2910:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2911:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 7423              		.loc 1 2911 7
 7424 0044 7B68     		ldr	r3, [r7, #4]
 7425 0046 1B68     		ldr	r3, [r3]
 7426 0048 5A68     		ldr	r2, [r3, #4]
 7427 004a 7B68     		ldr	r3, [r7, #4]
 7428 004c 1B68     		ldr	r3, [r3]
 7429 004e 22F40002 		bic	r2, r2, #8388608
 7430 0052 5A60     		str	r2, [r3, #4]
2912:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2913:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 7431              		.loc 1 2913 21
 7432 0054 7B68     		ldr	r3, [r7, #4]
 7433 0056 2022     		movs	r2, #32
 7434 0058 C3F88820 		str	r2, [r3, #136]
2914:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2915:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Process Unlocked */
2916:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 7435              		.loc 1 2916 7
 7436 005c 7B68     		ldr	r3, [r7, #4]
 7437 005e 0022     		movs	r2, #0
 7438 0060 83F88420 		strb	r2, [r3, #132]
2917:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2918:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_OK;
 7439              		.loc 1 2918 14
 7440 0064 0023     		movs	r3, #0
 7441 0066 02E0     		b	.L380
 7442              	.L378:
2919:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2920:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
2921:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
2922:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_BUSY;
 7443              		.loc 1 2922 14
 7444 0068 0223     		movs	r3, #2
 7445 006a 00E0     		b	.L380
 7446              	.L377:
2923:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
2924:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2925:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
2926:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
2927:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     return HAL_ERROR;
 7447              		.loc 1 2927 12
 7448 006c 0123     		movs	r3, #1
 7449              	.L380:
2928:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
2929:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7450              		.loc 1 2929 1
 7451 006e 1846     		mov	r0, r3
ARM GAS  /tmp/ccMjAmt3.s 			page 194


 7452 0070 0C37     		adds	r7, r7, #12
 7453              		.cfi_def_cfa_offset 4
 7454 0072 BD46     		mov	sp, r7
 7455              		.cfi_def_cfa_register 13
 7456              		@ sp needed
 7457 0074 5DF8047B 		ldr	r7, [sp], #4
 7458              		.cfi_restore 7
 7459              		.cfi_def_cfa_offset 0
 7460 0078 7047     		bx	lr
 7461              	.L382:
 7462 007a 00BF     		.align	2
 7463              	.L381:
 7464 007c 000C0056 		.word	1442843648
 7465 0080 000C0046 		.word	1174408192
 7466              		.cfi_endproc
 7467              	.LFE869:
 7469              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 7470              		.align	1
 7471              		.global	HAL_MultiProcessor_EnableMuteMode
 7472              		.syntax unified
 7473              		.thumb
 7474              		.thumb_func
 7476              	HAL_MultiProcessor_EnableMuteMode:
 7477              	.LFB870:
2930:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2931:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2932:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2933:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2934:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2935:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
2936:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2937:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2938:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7478              		.loc 1 2938 1
 7479              		.cfi_startproc
 7480              		@ args = 0, pretend = 0, frame = 32
 7481              		@ frame_needed = 1, uses_anonymous_args = 0
 7482 0000 80B5     		push	{r7, lr}
 7483              		.cfi_def_cfa_offset 8
 7484              		.cfi_offset 7, -8
 7485              		.cfi_offset 14, -4
 7486 0002 88B0     		sub	sp, sp, #32
 7487              		.cfi_def_cfa_offset 40
 7488 0004 00AF     		add	r7, sp, #0
 7489              		.cfi_def_cfa_register 7
 7490 0006 7860     		str	r0, [r7, #4]
2939:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_LOCK(huart);
 7491              		.loc 1 2939 3
 7492 0008 7B68     		ldr	r3, [r7, #4]
 7493 000a 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 7494 000e 012B     		cmp	r3, #1
 7495 0010 01D1     		bne	.L384
 7496              		.loc 1 2939 3 is_stmt 0 discriminator 1
 7497 0012 0223     		movs	r3, #2
 7498              		.loc 1 2939 3
 7499 0014 28E0     		b	.L385
 7500              	.L384:
ARM GAS  /tmp/ccMjAmt3.s 			page 195


 7501              		.loc 1 2939 3 discriminator 2
 7502 0016 7B68     		ldr	r3, [r7, #4]
 7503 0018 0122     		movs	r2, #1
 7504 001a 83F88420 		strb	r2, [r3, #132]
2940:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2941:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7505              		.loc 1 2941 17 is_stmt 1
 7506 001e 7B68     		ldr	r3, [r7, #4]
 7507 0020 2422     		movs	r2, #36
 7508 0022 C3F88820 		str	r2, [r3, #136]
 7509              	.L388:
 7510              	.LBB724:
2942:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2943:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2944:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 7511              		.loc 1 2944 3 discriminator 1
 7512 0026 7B68     		ldr	r3, [r7, #4]
 7513 0028 1B68     		ldr	r3, [r3]
 7514 002a FB60     		str	r3, [r7, #12]
 7515              	.LBB725:
 7516              	.LBB726:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7517              		.loc 2 480 4
 7518 002c FB68     		ldr	r3, [r7, #12]
 7519              		.syntax unified
 7520              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7521 002e 53E8003F 		ldrex r3, [r3]
 7522              	@ 0 "" 2
 7523              		.thumb
 7524              		.syntax unified
 7525 0032 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7526              		.loc 2 481 10
 7527 0034 BB68     		ldr	r3, [r7, #8]
 7528              	.LBE726:
 7529              	.LBE725:
 7530              		.loc 1 2944 3 discriminator 1
 7531 0036 43F40053 		orr	r3, r3, #8192
 7532 003a FB61     		str	r3, [r7, #28]
 7533 003c 7B68     		ldr	r3, [r7, #4]
 7534 003e 1B68     		ldr	r3, [r3]
 7535 0040 1A46     		mov	r2, r3
 7536 0042 FB69     		ldr	r3, [r7, #28]
 7537 0044 BB61     		str	r3, [r7, #24]
 7538 0046 7A61     		str	r2, [r7, #20]
 7539              	.LBB727:
 7540              	.LBB728:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7541              		.loc 2 531 4
 7542 0048 7969     		ldr	r1, [r7, #20]
 7543 004a BA69     		ldr	r2, [r7, #24]
 7544              		.syntax unified
 7545              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7546 004c 41E80023 		strex r3, r2, [r1]
 7547              	@ 0 "" 2
 7548              		.thumb
 7549              		.syntax unified
ARM GAS  /tmp/ccMjAmt3.s 			page 196


 7550 0050 3B61     		str	r3, [r7, #16]
 7551              		.loc 2 532 10
 7552 0052 3B69     		ldr	r3, [r7, #16]
 7553              	.LBE728:
 7554              	.LBE727:
 7555              		.loc 1 2944 3 discriminator 1
 7556 0054 002B     		cmp	r3, #0
 7557 0056 E6D1     		bne	.L388
 7558              	.LBE724:
2945:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2946:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7559              		.loc 1 2946 17
 7560 0058 7B68     		ldr	r3, [r7, #4]
 7561 005a 2022     		movs	r2, #32
 7562 005c C3F88820 		str	r2, [r3, #136]
2947:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2948:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 7563              		.loc 1 2948 11
 7564 0060 7868     		ldr	r0, [r7, #4]
 7565 0062 FFF7FEFF 		bl	UART_CheckIdleState
 7566 0066 0346     		mov	r3, r0
 7567              	.L385:
2949:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7568              		.loc 1 2949 1
 7569 0068 1846     		mov	r0, r3
 7570 006a 2037     		adds	r7, r7, #32
 7571              		.cfi_def_cfa_offset 8
 7572 006c BD46     		mov	sp, r7
 7573              		.cfi_def_cfa_register 13
 7574              		@ sp needed
 7575 006e 80BD     		pop	{r7, pc}
 7576              		.cfi_endproc
 7577              	.LFE870:
 7579              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 7580              		.align	1
 7581              		.global	HAL_MultiProcessor_DisableMuteMode
 7582              		.syntax unified
 7583              		.thumb
 7584              		.thumb_func
 7586              	HAL_MultiProcessor_DisableMuteMode:
 7587              	.LFB871:
2950:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2951:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2952:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2953:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2954:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2955:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
2956:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2957:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2958:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7588              		.loc 1 2958 1
 7589              		.cfi_startproc
 7590              		@ args = 0, pretend = 0, frame = 32
 7591              		@ frame_needed = 1, uses_anonymous_args = 0
 7592 0000 80B5     		push	{r7, lr}
 7593              		.cfi_def_cfa_offset 8
 7594              		.cfi_offset 7, -8
ARM GAS  /tmp/ccMjAmt3.s 			page 197


 7595              		.cfi_offset 14, -4
 7596 0002 88B0     		sub	sp, sp, #32
 7597              		.cfi_def_cfa_offset 40
 7598 0004 00AF     		add	r7, sp, #0
 7599              		.cfi_def_cfa_register 7
 7600 0006 7860     		str	r0, [r7, #4]
2959:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_LOCK(huart);
 7601              		.loc 1 2959 3
 7602 0008 7B68     		ldr	r3, [r7, #4]
 7603 000a 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 7604 000e 012B     		cmp	r3, #1
 7605 0010 01D1     		bne	.L390
 7606              		.loc 1 2959 3 is_stmt 0 discriminator 1
 7607 0012 0223     		movs	r3, #2
 7608              		.loc 1 2959 3
 7609 0014 28E0     		b	.L391
 7610              	.L390:
 7611              		.loc 1 2959 3 discriminator 2
 7612 0016 7B68     		ldr	r3, [r7, #4]
 7613 0018 0122     		movs	r2, #1
 7614 001a 83F88420 		strb	r2, [r3, #132]
2960:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2961:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7615              		.loc 1 2961 17 is_stmt 1
 7616 001e 7B68     		ldr	r3, [r7, #4]
 7617 0020 2422     		movs	r2, #36
 7618 0022 C3F88820 		str	r2, [r3, #136]
 7619              	.L394:
 7620              	.LBB729:
2962:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2963:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2964:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 7621              		.loc 1 2964 3 discriminator 1
 7622 0026 7B68     		ldr	r3, [r7, #4]
 7623 0028 1B68     		ldr	r3, [r3]
 7624 002a FB60     		str	r3, [r7, #12]
 7625              	.LBB730:
 7626              	.LBB731:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7627              		.loc 2 480 4
 7628 002c FB68     		ldr	r3, [r7, #12]
 7629              		.syntax unified
 7630              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7631 002e 53E8003F 		ldrex r3, [r3]
 7632              	@ 0 "" 2
 7633              		.thumb
 7634              		.syntax unified
 7635 0032 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7636              		.loc 2 481 10
 7637 0034 BB68     		ldr	r3, [r7, #8]
 7638              	.LBE731:
 7639              	.LBE730:
 7640              		.loc 1 2964 3 discriminator 1
 7641 0036 23F40053 		bic	r3, r3, #8192
 7642 003a FB61     		str	r3, [r7, #28]
 7643 003c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 198


 7644 003e 1B68     		ldr	r3, [r3]
 7645 0040 1A46     		mov	r2, r3
 7646 0042 FB69     		ldr	r3, [r7, #28]
 7647 0044 BB61     		str	r3, [r7, #24]
 7648 0046 7A61     		str	r2, [r7, #20]
 7649              	.LBB732:
 7650              	.LBB733:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7651              		.loc 2 531 4
 7652 0048 7969     		ldr	r1, [r7, #20]
 7653 004a BA69     		ldr	r2, [r7, #24]
 7654              		.syntax unified
 7655              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7656 004c 41E80023 		strex r3, r2, [r1]
 7657              	@ 0 "" 2
 7658              		.thumb
 7659              		.syntax unified
 7660 0050 3B61     		str	r3, [r7, #16]
 7661              		.loc 2 532 10
 7662 0052 3B69     		ldr	r3, [r7, #16]
 7663              	.LBE733:
 7664              	.LBE732:
 7665              		.loc 1 2964 3 discriminator 1
 7666 0054 002B     		cmp	r3, #0
 7667 0056 E6D1     		bne	.L394
 7668              	.LBE729:
2965:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2966:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7669              		.loc 1 2966 17
 7670 0058 7B68     		ldr	r3, [r7, #4]
 7671 005a 2022     		movs	r2, #32
 7672 005c C3F88820 		str	r2, [r3, #136]
2967:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2968:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 7673              		.loc 1 2968 11
 7674 0060 7868     		ldr	r0, [r7, #4]
 7675 0062 FFF7FEFF 		bl	UART_CheckIdleState
 7676 0066 0346     		mov	r3, r0
 7677              	.L391:
2969:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7678              		.loc 1 2969 1
 7679 0068 1846     		mov	r0, r3
 7680 006a 2037     		adds	r7, r7, #32
 7681              		.cfi_def_cfa_offset 8
 7682 006c BD46     		mov	sp, r7
 7683              		.cfi_def_cfa_register 13
 7684              		@ sp needed
 7685 006e 80BD     		pop	{r7, pc}
 7686              		.cfi_endproc
 7687              	.LFE871:
 7689              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 7690              		.align	1
 7691              		.global	HAL_MultiProcessor_EnterMuteMode
 7692              		.syntax unified
 7693              		.thumb
 7694              		.thumb_func
 7696              	HAL_MultiProcessor_EnterMuteMode:
ARM GAS  /tmp/ccMjAmt3.s 			page 199


 7697              	.LFB872:
2970:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2971:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2972:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2973:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2974:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
2975:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
2976:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2977:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2978:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7698              		.loc 1 2978 1
 7699              		.cfi_startproc
 7700              		@ args = 0, pretend = 0, frame = 8
 7701              		@ frame_needed = 1, uses_anonymous_args = 0
 7702              		@ link register save eliminated.
 7703 0000 80B4     		push	{r7}
 7704              		.cfi_def_cfa_offset 4
 7705              		.cfi_offset 7, -4
 7706 0002 83B0     		sub	sp, sp, #12
 7707              		.cfi_def_cfa_offset 16
 7708 0004 00AF     		add	r7, sp, #0
 7709              		.cfi_def_cfa_register 7
 7710 0006 7860     		str	r0, [r7, #4]
2979:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 7711              		.loc 1 2979 3
 7712 0008 7B68     		ldr	r3, [r7, #4]
 7713 000a 1B68     		ldr	r3, [r3]
 7714 000c 9A69     		ldr	r2, [r3, #24]
 7715 000e 7B68     		ldr	r3, [r7, #4]
 7716 0010 1B68     		ldr	r3, [r3]
 7717 0012 42F00402 		orr	r2, r2, #4
 7718 0016 9A61     		str	r2, [r3, #24]
2980:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7719              		.loc 1 2980 1
 7720 0018 00BF     		nop
 7721 001a 0C37     		adds	r7, r7, #12
 7722              		.cfi_def_cfa_offset 4
 7723 001c BD46     		mov	sp, r7
 7724              		.cfi_def_cfa_register 13
 7725              		@ sp needed
 7726 001e 5DF8047B 		ldr	r7, [sp], #4
 7727              		.cfi_restore 7
 7728              		.cfi_def_cfa_offset 0
 7729 0022 7047     		bx	lr
 7730              		.cfi_endproc
 7731              	.LFE872:
 7733              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 7734              		.align	1
 7735              		.global	HAL_HalfDuplex_EnableTransmitter
 7736              		.syntax unified
 7737              		.thumb
 7738              		.thumb_func
 7740              	HAL_HalfDuplex_EnableTransmitter:
 7741              	.LFB873:
2981:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2982:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
2983:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
ARM GAS  /tmp/ccMjAmt3.s 			page 200


2984:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
2985:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
2986:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
2987:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2988:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7742              		.loc 1 2988 1
 7743              		.cfi_startproc
 7744              		@ args = 0, pretend = 0, frame = 56
 7745              		@ frame_needed = 1, uses_anonymous_args = 0
 7746              		@ link register save eliminated.
 7747 0000 80B4     		push	{r7}
 7748              		.cfi_def_cfa_offset 4
 7749              		.cfi_offset 7, -4
 7750 0002 8FB0     		sub	sp, sp, #60
 7751              		.cfi_def_cfa_offset 64
 7752 0004 00AF     		add	r7, sp, #0
 7753              		.cfi_def_cfa_register 7
 7754 0006 7860     		str	r0, [r7, #4]
2989:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_LOCK(huart);
 7755              		.loc 1 2989 3
 7756 0008 7B68     		ldr	r3, [r7, #4]
 7757 000a 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 7758 000e 012B     		cmp	r3, #1
 7759 0010 01D1     		bne	.L397
 7760              		.loc 1 2989 3 is_stmt 0 discriminator 1
 7761 0012 0223     		movs	r3, #2
 7762              		.loc 1 2989 3
 7763 0014 42E0     		b	.L398
 7764              	.L397:
 7765              		.loc 1 2989 3 discriminator 2
 7766 0016 7B68     		ldr	r3, [r7, #4]
 7767 0018 0122     		movs	r2, #1
 7768 001a 83F88420 		strb	r2, [r3, #132]
2990:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7769              		.loc 1 2990 17 is_stmt 1
 7770 001e 7B68     		ldr	r3, [r7, #4]
 7771 0020 2422     		movs	r2, #36
 7772 0022 C3F88820 		str	r2, [r3, #136]
 7773              	.L401:
 7774              	.LBB734:
2991:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2992:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Clear TE and RE bits */
2993:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 7775              		.loc 1 2993 3 discriminator 1
 7776 0026 7B68     		ldr	r3, [r7, #4]
 7777 0028 1B68     		ldr	r3, [r3]
 7778 002a 3B62     		str	r3, [r7, #32]
 7779              	.LBB735:
 7780              	.LBB736:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7781              		.loc 2 480 4
 7782 002c 3B6A     		ldr	r3, [r7, #32]
 7783              		.syntax unified
 7784              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7785 002e 53E8003F 		ldrex r3, [r3]
 7786              	@ 0 "" 2
 7787              		.thumb
ARM GAS  /tmp/ccMjAmt3.s 			page 201


 7788              		.syntax unified
 7789 0032 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7790              		.loc 2 481 10
 7791 0034 FB69     		ldr	r3, [r7, #28]
 7792              	.LBE736:
 7793              	.LBE735:
 7794              		.loc 1 2993 3 discriminator 1
 7795 0036 23F00C03 		bic	r3, r3, #12
 7796 003a 7B63     		str	r3, [r7, #52]
 7797 003c 7B68     		ldr	r3, [r7, #4]
 7798 003e 1B68     		ldr	r3, [r3]
 7799 0040 1A46     		mov	r2, r3
 7800 0042 7B6B     		ldr	r3, [r7, #52]
 7801 0044 FB62     		str	r3, [r7, #44]
 7802 0046 BA62     		str	r2, [r7, #40]
 7803              	.LBB737:
 7804              	.LBB738:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7805              		.loc 2 531 4
 7806 0048 B96A     		ldr	r1, [r7, #40]
 7807 004a FA6A     		ldr	r2, [r7, #44]
 7808              		.syntax unified
 7809              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7810 004c 41E80023 		strex r3, r2, [r1]
 7811              	@ 0 "" 2
 7812              		.thumb
 7813              		.syntax unified
 7814 0050 7B62     		str	r3, [r7, #36]
 7815              		.loc 2 532 10
 7816 0052 7B6A     		ldr	r3, [r7, #36]
 7817              	.LBE738:
 7818              	.LBE737:
 7819              		.loc 1 2993 3 discriminator 1
 7820 0054 002B     		cmp	r3, #0
 7821 0056 E6D1     		bne	.L401
 7822              	.L404:
 7823              	.LBE734:
 7824              	.LBB739:
2994:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2995:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2996:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 7825              		.loc 1 2996 3 discriminator 1
 7826 0058 7B68     		ldr	r3, [r7, #4]
 7827 005a 1B68     		ldr	r3, [r3]
 7828 005c FB60     		str	r3, [r7, #12]
 7829              	.LBB740:
 7830              	.LBB741:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7831              		.loc 2 480 4
 7832 005e FB68     		ldr	r3, [r7, #12]
 7833              		.syntax unified
 7834              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7835 0060 53E8003F 		ldrex r3, [r3]
 7836              	@ 0 "" 2
 7837              		.thumb
 7838              		.syntax unified
ARM GAS  /tmp/ccMjAmt3.s 			page 202


 7839 0064 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7840              		.loc 2 481 10
 7841 0066 BB68     		ldr	r3, [r7, #8]
 7842              	.LBE741:
 7843              	.LBE740:
 7844              		.loc 1 2996 3 discriminator 1
 7845 0068 43F00803 		orr	r3, r3, #8
 7846 006c 3B63     		str	r3, [r7, #48]
 7847 006e 7B68     		ldr	r3, [r7, #4]
 7848 0070 1B68     		ldr	r3, [r3]
 7849 0072 1A46     		mov	r2, r3
 7850 0074 3B6B     		ldr	r3, [r7, #48]
 7851 0076 BB61     		str	r3, [r7, #24]
 7852 0078 7A61     		str	r2, [r7, #20]
 7853              	.LBB742:
 7854              	.LBB743:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7855              		.loc 2 531 4
 7856 007a 7969     		ldr	r1, [r7, #20]
 7857 007c BA69     		ldr	r2, [r7, #24]
 7858              		.syntax unified
 7859              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7860 007e 41E80023 		strex r3, r2, [r1]
 7861              	@ 0 "" 2
 7862              		.thumb
 7863              		.syntax unified
 7864 0082 3B61     		str	r3, [r7, #16]
 7865              		.loc 2 532 10
 7866 0084 3B69     		ldr	r3, [r7, #16]
 7867              	.LBE743:
 7868              	.LBE742:
 7869              		.loc 1 2996 3 discriminator 1
 7870 0086 002B     		cmp	r3, #0
 7871 0088 E6D1     		bne	.L404
 7872              	.LBE739:
2997:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
2998:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7873              		.loc 1 2998 17
 7874 008a 7B68     		ldr	r3, [r7, #4]
 7875 008c 2022     		movs	r2, #32
 7876 008e C3F88820 		str	r2, [r3, #136]
2999:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3000:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7877              		.loc 1 3000 3
 7878 0092 7B68     		ldr	r3, [r7, #4]
 7879 0094 0022     		movs	r2, #0
 7880 0096 83F88420 		strb	r2, [r3, #132]
3001:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3002:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 7881              		.loc 1 3002 10
 7882 009a 0023     		movs	r3, #0
 7883              	.L398:
3003:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 7884              		.loc 1 3003 1
 7885 009c 1846     		mov	r0, r3
 7886 009e 3C37     		adds	r7, r7, #60
ARM GAS  /tmp/ccMjAmt3.s 			page 203


 7887              		.cfi_def_cfa_offset 4
 7888 00a0 BD46     		mov	sp, r7
 7889              		.cfi_def_cfa_register 13
 7890              		@ sp needed
 7891 00a2 5DF8047B 		ldr	r7, [sp], #4
 7892              		.cfi_restore 7
 7893              		.cfi_def_cfa_offset 0
 7894 00a6 7047     		bx	lr
 7895              		.cfi_endproc
 7896              	.LFE873:
 7898              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 7899              		.align	1
 7900              		.global	HAL_HalfDuplex_EnableReceiver
 7901              		.syntax unified
 7902              		.thumb
 7903              		.thumb_func
 7905              	HAL_HalfDuplex_EnableReceiver:
 7906              	.LFB874:
3004:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3005:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3006:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
3007:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
3008:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status.
3009:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3010:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
3011:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 7907              		.loc 1 3011 1
 7908              		.cfi_startproc
 7909              		@ args = 0, pretend = 0, frame = 56
 7910              		@ frame_needed = 1, uses_anonymous_args = 0
 7911              		@ link register save eliminated.
 7912 0000 80B4     		push	{r7}
 7913              		.cfi_def_cfa_offset 4
 7914              		.cfi_offset 7, -4
 7915 0002 8FB0     		sub	sp, sp, #60
 7916              		.cfi_def_cfa_offset 64
 7917 0004 00AF     		add	r7, sp, #0
 7918              		.cfi_def_cfa_register 7
 7919 0006 7860     		str	r0, [r7, #4]
3012:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_LOCK(huart);
 7920              		.loc 1 3012 3
 7921 0008 7B68     		ldr	r3, [r7, #4]
 7922 000a 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 7923 000e 012B     		cmp	r3, #1
 7924 0010 01D1     		bne	.L406
 7925              		.loc 1 3012 3 is_stmt 0 discriminator 1
 7926 0012 0223     		movs	r3, #2
 7927              		.loc 1 3012 3
 7928 0014 42E0     		b	.L407
 7929              	.L406:
 7930              		.loc 1 3012 3 discriminator 2
 7931 0016 7B68     		ldr	r3, [r7, #4]
 7932 0018 0122     		movs	r2, #1
 7933 001a 83F88420 		strb	r2, [r3, #132]
3013:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7934              		.loc 1 3013 17 is_stmt 1
 7935 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 204


 7936 0020 2422     		movs	r2, #36
 7937 0022 C3F88820 		str	r2, [r3, #136]
 7938              	.L410:
 7939              	.LBB744:
3014:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3015:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Clear TE and RE bits */
3016:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 7940              		.loc 1 3016 3 discriminator 1
 7941 0026 7B68     		ldr	r3, [r7, #4]
 7942 0028 1B68     		ldr	r3, [r3]
 7943 002a 3B62     		str	r3, [r7, #32]
 7944              	.LBB745:
 7945              	.LBB746:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7946              		.loc 2 480 4
 7947 002c 3B6A     		ldr	r3, [r7, #32]
 7948              		.syntax unified
 7949              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7950 002e 53E8003F 		ldrex r3, [r3]
 7951              	@ 0 "" 2
 7952              		.thumb
 7953              		.syntax unified
 7954 0032 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7955              		.loc 2 481 10
 7956 0034 FB69     		ldr	r3, [r7, #28]
 7957              	.LBE746:
 7958              	.LBE745:
 7959              		.loc 1 3016 3 discriminator 1
 7960 0036 23F00C03 		bic	r3, r3, #12
 7961 003a 7B63     		str	r3, [r7, #52]
 7962 003c 7B68     		ldr	r3, [r7, #4]
 7963 003e 1B68     		ldr	r3, [r3]
 7964 0040 1A46     		mov	r2, r3
 7965 0042 7B6B     		ldr	r3, [r7, #52]
 7966 0044 FB62     		str	r3, [r7, #44]
 7967 0046 BA62     		str	r2, [r7, #40]
 7968              	.LBB747:
 7969              	.LBB748:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7970              		.loc 2 531 4
 7971 0048 B96A     		ldr	r1, [r7, #40]
 7972 004a FA6A     		ldr	r2, [r7, #44]
 7973              		.syntax unified
 7974              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7975 004c 41E80023 		strex r3, r2, [r1]
 7976              	@ 0 "" 2
 7977              		.thumb
 7978              		.syntax unified
 7979 0050 7B62     		str	r3, [r7, #36]
 7980              		.loc 2 532 10
 7981 0052 7B6A     		ldr	r3, [r7, #36]
 7982              	.LBE748:
 7983              	.LBE747:
 7984              		.loc 1 3016 3 discriminator 1
 7985 0054 002B     		cmp	r3, #0
 7986 0056 E6D1     		bne	.L410
ARM GAS  /tmp/ccMjAmt3.s 			page 205


 7987              	.L413:
 7988              	.LBE744:
 7989              	.LBB749:
3017:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3018:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
3019:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 7990              		.loc 1 3019 3 discriminator 1
 7991 0058 7B68     		ldr	r3, [r7, #4]
 7992 005a 1B68     		ldr	r3, [r3]
 7993 005c FB60     		str	r3, [r7, #12]
 7994              	.LBB750:
 7995              	.LBB751:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7996              		.loc 2 480 4
 7997 005e FB68     		ldr	r3, [r7, #12]
 7998              		.syntax unified
 7999              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8000 0060 53E8003F 		ldrex r3, [r3]
 8001              	@ 0 "" 2
 8002              		.thumb
 8003              		.syntax unified
 8004 0064 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8005              		.loc 2 481 10
 8006 0066 BB68     		ldr	r3, [r7, #8]
 8007              	.LBE751:
 8008              	.LBE750:
 8009              		.loc 1 3019 3 discriminator 1
 8010 0068 43F00403 		orr	r3, r3, #4
 8011 006c 3B63     		str	r3, [r7, #48]
 8012 006e 7B68     		ldr	r3, [r7, #4]
 8013 0070 1B68     		ldr	r3, [r3]
 8014 0072 1A46     		mov	r2, r3
 8015 0074 3B6B     		ldr	r3, [r7, #48]
 8016 0076 BB61     		str	r3, [r7, #24]
 8017 0078 7A61     		str	r2, [r7, #20]
 8018              	.LBB752:
 8019              	.LBB753:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8020              		.loc 2 531 4
 8021 007a 7969     		ldr	r1, [r7, #20]
 8022 007c BA69     		ldr	r2, [r7, #24]
 8023              		.syntax unified
 8024              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8025 007e 41E80023 		strex r3, r2, [r1]
 8026              	@ 0 "" 2
 8027              		.thumb
 8028              		.syntax unified
 8029 0082 3B61     		str	r3, [r7, #16]
 8030              		.loc 2 532 10
 8031 0084 3B69     		ldr	r3, [r7, #16]
 8032              	.LBE753:
 8033              	.LBE752:
 8034              		.loc 1 3019 3 discriminator 1
 8035 0086 002B     		cmp	r3, #0
 8036 0088 E6D1     		bne	.L413
 8037              	.LBE749:
ARM GAS  /tmp/ccMjAmt3.s 			page 206


3020:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3021:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8038              		.loc 1 3021 17
 8039 008a 7B68     		ldr	r3, [r7, #4]
 8040 008c 2022     		movs	r2, #32
 8041 008e C3F88820 		str	r2, [r3, #136]
3022:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3023:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 8042              		.loc 1 3023 3
 8043 0092 7B68     		ldr	r3, [r7, #4]
 8044 0094 0022     		movs	r2, #0
 8045 0096 83F88420 		strb	r2, [r3, #132]
3024:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3025:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 8046              		.loc 1 3025 10
 8047 009a 0023     		movs	r3, #0
 8048              	.L407:
3026:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 8049              		.loc 1 3026 1
 8050 009c 1846     		mov	r0, r3
 8051 009e 3C37     		adds	r7, r7, #60
 8052              		.cfi_def_cfa_offset 4
 8053 00a0 BD46     		mov	sp, r7
 8054              		.cfi_def_cfa_register 13
 8055              		@ sp needed
 8056 00a2 5DF8047B 		ldr	r7, [sp], #4
 8057              		.cfi_restore 7
 8058              		.cfi_def_cfa_offset 0
 8059 00a6 7047     		bx	lr
 8060              		.cfi_endproc
 8061              	.LFE874:
 8063              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 8064              		.align	1
 8065              		.global	HAL_LIN_SendBreak
 8066              		.syntax unified
 8067              		.thumb
 8068              		.thumb_func
 8070              	HAL_LIN_SendBreak:
 8071              	.LFB875:
3027:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3028:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3029:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3030:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Transmit break characters.
3031:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
3032:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
3033:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3034:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
3035:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 8072              		.loc 1 3035 1
 8073              		.cfi_startproc
 8074              		@ args = 0, pretend = 0, frame = 8
 8075              		@ frame_needed = 1, uses_anonymous_args = 0
 8076 0000 80B5     		push	{r7, lr}
 8077              		.cfi_def_cfa_offset 8
 8078              		.cfi_offset 7, -8
 8079              		.cfi_offset 14, -4
 8080 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccMjAmt3.s 			page 207


 8081              		.cfi_def_cfa_offset 16
 8082 0004 00AF     		add	r7, sp, #0
 8083              		.cfi_def_cfa_register 7
 8084 0006 7860     		str	r0, [r7, #4]
3036:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the parameters */
3037:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 8085              		.loc 1 3037 3
 8086 0008 7B68     		ldr	r3, [r7, #4]
 8087 000a 1B68     		ldr	r3, [r3]
 8088 000c 454A     		ldr	r2, .L418
 8089 000e 9342     		cmp	r3, r2
 8090 0010 63D0     		beq	.L415
 8091              		.loc 1 3037 3 is_stmt 0 discriminator 1
 8092 0012 7B68     		ldr	r3, [r7, #4]
 8093 0014 1B68     		ldr	r3, [r3]
 8094 0016 444A     		ldr	r2, .L418+4
 8095 0018 9342     		cmp	r3, r2
 8096 001a 5ED0     		beq	.L415
 8097              		.loc 1 3037 3 discriminator 2
 8098 001c 7B68     		ldr	r3, [r7, #4]
 8099 001e 1B68     		ldr	r3, [r3]
 8100 0020 424A     		ldr	r2, .L418+8
 8101 0022 9342     		cmp	r3, r2
 8102 0024 59D0     		beq	.L415
 8103              		.loc 1 3037 3 discriminator 3
 8104 0026 7B68     		ldr	r3, [r7, #4]
 8105 0028 1B68     		ldr	r3, [r3]
 8106 002a 414A     		ldr	r2, .L418+12
 8107 002c 9342     		cmp	r3, r2
 8108 002e 54D0     		beq	.L415
 8109              		.loc 1 3037 3 discriminator 4
 8110 0030 7B68     		ldr	r3, [r7, #4]
 8111 0032 1B68     		ldr	r3, [r3]
 8112 0034 3F4A     		ldr	r2, .L418+16
 8113 0036 9342     		cmp	r3, r2
 8114 0038 4FD0     		beq	.L415
 8115              		.loc 1 3037 3 discriminator 5
 8116 003a 7B68     		ldr	r3, [r7, #4]
 8117 003c 1B68     		ldr	r3, [r3]
 8118 003e 3E4A     		ldr	r2, .L418+20
 8119 0040 9342     		cmp	r3, r2
 8120 0042 4AD0     		beq	.L415
 8121              		.loc 1 3037 3 discriminator 6
 8122 0044 7B68     		ldr	r3, [r7, #4]
 8123 0046 1B68     		ldr	r3, [r3]
 8124 0048 3C4A     		ldr	r2, .L418+24
 8125 004a 9342     		cmp	r3, r2
 8126 004c 45D0     		beq	.L415
 8127              		.loc 1 3037 3 discriminator 7
 8128 004e 7B68     		ldr	r3, [r7, #4]
 8129 0050 1B68     		ldr	r3, [r3]
 8130 0052 3B4A     		ldr	r2, .L418+28
 8131 0054 9342     		cmp	r3, r2
 8132 0056 40D0     		beq	.L415
 8133              		.loc 1 3037 3 discriminator 8
 8134 0058 7B68     		ldr	r3, [r7, #4]
 8135 005a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 208


 8136 005c B3F1502F 		cmp	r3, #1342197760
 8137 0060 3BD0     		beq	.L415
 8138              		.loc 1 3037 3 discriminator 9
 8139 0062 7B68     		ldr	r3, [r7, #4]
 8140 0064 1B68     		ldr	r3, [r3]
 8141 0066 374A     		ldr	r2, .L418+32
 8142 0068 9342     		cmp	r3, r2
 8143 006a 36D0     		beq	.L415
 8144              		.loc 1 3037 3 discriminator 10
 8145 006c 7B68     		ldr	r3, [r7, #4]
 8146 006e 1B68     		ldr	r3, [r3]
 8147 0070 354A     		ldr	r2, .L418+36
 8148 0072 9342     		cmp	r3, r2
 8149 0074 31D0     		beq	.L415
 8150              		.loc 1 3037 3 discriminator 11
 8151 0076 7B68     		ldr	r3, [r7, #4]
 8152 0078 1B68     		ldr	r3, [r3]
 8153 007a 344A     		ldr	r2, .L418+40
 8154 007c 9342     		cmp	r3, r2
 8155 007e 2CD0     		beq	.L415
 8156              		.loc 1 3037 3 discriminator 12
 8157 0080 7B68     		ldr	r3, [r7, #4]
 8158 0082 1B68     		ldr	r3, [r3]
 8159 0084 324A     		ldr	r2, .L418+44
 8160 0086 9342     		cmp	r3, r2
 8161 0088 27D0     		beq	.L415
 8162              		.loc 1 3037 3 discriminator 13
 8163 008a 7B68     		ldr	r3, [r7, #4]
 8164 008c 1B68     		ldr	r3, [r3]
 8165 008e 314A     		ldr	r2, .L418+48
 8166 0090 9342     		cmp	r3, r2
 8167 0092 22D0     		beq	.L415
 8168              		.loc 1 3037 3 discriminator 14
 8169 0094 7B68     		ldr	r3, [r7, #4]
 8170 0096 1B68     		ldr	r3, [r3]
 8171 0098 2F4A     		ldr	r2, .L418+52
 8172 009a 9342     		cmp	r3, r2
 8173 009c 1DD0     		beq	.L415
 8174              		.loc 1 3037 3 discriminator 15
 8175 009e 7B68     		ldr	r3, [r7, #4]
 8176 00a0 1B68     		ldr	r3, [r3]
 8177 00a2 2E4A     		ldr	r2, .L418+56
 8178 00a4 9342     		cmp	r3, r2
 8179 00a6 18D0     		beq	.L415
 8180              		.loc 1 3037 3 discriminator 16
 8181 00a8 7B68     		ldr	r3, [r7, #4]
 8182 00aa 1B68     		ldr	r3, [r3]
 8183 00ac 2C4A     		ldr	r2, .L418+60
 8184 00ae 9342     		cmp	r3, r2
 8185 00b0 13D0     		beq	.L415
 8186              		.loc 1 3037 3 discriminator 17
 8187 00b2 7B68     		ldr	r3, [r7, #4]
 8188 00b4 1B68     		ldr	r3, [r3]
 8189 00b6 2B4A     		ldr	r2, .L418+64
 8190 00b8 9342     		cmp	r3, r2
 8191 00ba 0ED0     		beq	.L415
 8192              		.loc 1 3037 3 discriminator 18
ARM GAS  /tmp/ccMjAmt3.s 			page 209


 8193 00bc 7B68     		ldr	r3, [r7, #4]
 8194 00be 1B68     		ldr	r3, [r3]
 8195 00c0 294A     		ldr	r2, .L418+68
 8196 00c2 9342     		cmp	r3, r2
 8197 00c4 09D0     		beq	.L415
 8198              		.loc 1 3037 3 discriminator 19
 8199 00c6 7B68     		ldr	r3, [r7, #4]
 8200 00c8 1B68     		ldr	r3, [r3]
 8201 00ca 284A     		ldr	r2, .L418+72
 8202 00cc 9342     		cmp	r3, r2
 8203 00ce 04D0     		beq	.L415
 8204              		.loc 1 3037 3 discriminator 20
 8205 00d0 40F6DD31 		movw	r1, #3037
 8206 00d4 2648     		ldr	r0, .L418+76
 8207 00d6 FFF7FEFF 		bl	assert_failed
 8208              	.L415:
3038:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3039:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_LOCK(huart);
 8209              		.loc 1 3039 3 is_stmt 1
 8210 00da 7B68     		ldr	r3, [r7, #4]
 8211 00dc 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 8212 00e0 012B     		cmp	r3, #1
 8213 00e2 01D1     		bne	.L416
 8214              		.loc 1 3039 3 is_stmt 0 discriminator 1
 8215 00e4 0223     		movs	r3, #2
 8216              		.loc 1 3039 3
 8217 00e6 18E0     		b	.L417
 8218              	.L416:
 8219              		.loc 1 3039 3 discriminator 2
 8220 00e8 7B68     		ldr	r3, [r7, #4]
 8221 00ea 0122     		movs	r2, #1
 8222 00ec 83F88420 		strb	r2, [r3, #132]
3040:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3041:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 8223              		.loc 1 3041 17 is_stmt 1
 8224 00f0 7B68     		ldr	r3, [r7, #4]
 8225 00f2 2422     		movs	r2, #36
 8226 00f4 C3F88820 		str	r2, [r3, #136]
3042:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3043:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Send break characters */
3044:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 8227              		.loc 1 3044 3
 8228 00f8 7B68     		ldr	r3, [r7, #4]
 8229 00fa 1B68     		ldr	r3, [r3]
 8230 00fc 9A69     		ldr	r2, [r3, #24]
 8231 00fe 7B68     		ldr	r3, [r7, #4]
 8232 0100 1B68     		ldr	r3, [r3]
 8233 0102 42F00202 		orr	r2, r2, #2
 8234 0106 9A61     		str	r2, [r3, #24]
3045:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3046:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8235              		.loc 1 3046 17
 8236 0108 7B68     		ldr	r3, [r7, #4]
 8237 010a 2022     		movs	r2, #32
 8238 010c C3F88820 		str	r2, [r3, #136]
3047:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3048:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccMjAmt3.s 			page 210


 8239              		.loc 1 3048 3
 8240 0110 7B68     		ldr	r3, [r7, #4]
 8241 0112 0022     		movs	r2, #0
 8242 0114 83F88420 		strb	r2, [r3, #132]
3049:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3050:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 8243              		.loc 1 3050 10
 8244 0118 0023     		movs	r3, #0
 8245              	.L417:
3051:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 8246              		.loc 1 3051 1
 8247 011a 1846     		mov	r0, r3
 8248 011c 0837     		adds	r7, r7, #8
 8249              		.cfi_def_cfa_offset 8
 8250 011e BD46     		mov	sp, r7
 8251              		.cfi_def_cfa_register 13
 8252              		@ sp needed
 8253 0120 80BD     		pop	{r7, pc}
 8254              	.L419:
 8255 0122 00BF     		.align	2
 8256              	.L418:
 8257 0124 00100052 		.word	1375735808
 8258 0128 00100042 		.word	1107300352
 8259 012c 00440050 		.word	1342194688
 8260 0130 00440040 		.word	1073759232
 8261 0134 00480050 		.word	1342195712
 8262 0138 00480040 		.word	1073760256
 8263 013c 004C0050 		.word	1342196736
 8264 0140 004C0040 		.word	1073761280
 8265 0144 00500040 		.word	1073762304
 8266 0148 00140052 		.word	1375736832
 8267 014c 00140042 		.word	1107301376
 8268 0150 00780050 		.word	1342208000
 8269 0154 00780040 		.word	1073772544
 8270 0158 007C0050 		.word	1342209024
 8271 015c 007C0040 		.word	1073773568
 8272 0160 00180052 		.word	1375737856
 8273 0164 00180042 		.word	1107302400
 8274 0168 001C0052 		.word	1375738880
 8275 016c 001C0042 		.word	1107303424
 8276 0170 00000000 		.word	.LC0
 8277              		.cfi_endproc
 8278              	.LFE875:
 8280              		.section	.text.HAL_UART_GetState,"ax",%progbits
 8281              		.align	1
 8282              		.global	HAL_UART_GetState
 8283              		.syntax unified
 8284              		.thumb
 8285              		.thumb_func
 8287              	HAL_UART_GetState:
 8288              	.LFB876:
3052:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3053:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3054:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @}
3055:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3056:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3057:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
ARM GAS  /tmp/ccMjAmt3.s 			page 211


3058:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
3059:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *
3060:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** @verbatim
3061:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ==============================================================================
3062:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
3063:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ==============================================================================
3064:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     [..]
3065:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     This subsection provides functions allowing to :
3066:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       (+) Return the UART handle state.
3067:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       (+) Return the UART handle error code
3068:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3069:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** @endverbatim
3070:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
3071:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3072:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3073:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3074:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Return the UART handle state.
3075:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
3076:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *               the configuration information for the specified UART.
3077:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL state
3078:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3079:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
3080:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 8289              		.loc 1 3080 1
 8290              		.cfi_startproc
 8291              		@ args = 0, pretend = 0, frame = 16
 8292              		@ frame_needed = 1, uses_anonymous_args = 0
 8293              		@ link register save eliminated.
 8294 0000 80B4     		push	{r7}
 8295              		.cfi_def_cfa_offset 4
 8296              		.cfi_offset 7, -4
 8297 0002 85B0     		sub	sp, sp, #20
 8298              		.cfi_def_cfa_offset 24
 8299 0004 00AF     		add	r7, sp, #0
 8300              		.cfi_def_cfa_register 7
 8301 0006 7860     		str	r0, [r7, #4]
3081:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t temp1;
3082:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t temp2;
3083:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   temp1 = huart->gState;
 8302              		.loc 1 3083 9
 8303 0008 7B68     		ldr	r3, [r7, #4]
 8304 000a D3F88830 		ldr	r3, [r3, #136]
 8305 000e FB60     		str	r3, [r7, #12]
3084:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   temp2 = huart->RxState;
 8306              		.loc 1 3084 9
 8307 0010 7B68     		ldr	r3, [r7, #4]
 8308 0012 D3F88C30 		ldr	r3, [r3, #140]
 8309 0016 BB60     		str	r3, [r7, #8]
3085:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3086:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 8310              		.loc 1 3086 10
 8311 0018 FA68     		ldr	r2, [r7, #12]
 8312 001a BB68     		ldr	r3, [r7, #8]
 8313 001c 1343     		orrs	r3, r3, r2
3087:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 8314              		.loc 1 3087 1
 8315 001e 1846     		mov	r0, r3
ARM GAS  /tmp/ccMjAmt3.s 			page 212


 8316 0020 1437     		adds	r7, r7, #20
 8317              		.cfi_def_cfa_offset 4
 8318 0022 BD46     		mov	sp, r7
 8319              		.cfi_def_cfa_register 13
 8320              		@ sp needed
 8321 0024 5DF8047B 		ldr	r7, [sp], #4
 8322              		.cfi_restore 7
 8323              		.cfi_def_cfa_offset 0
 8324 0028 7047     		bx	lr
 8325              		.cfi_endproc
 8326              	.LFE876:
 8328              		.section	.text.HAL_UART_GetError,"ax",%progbits
 8329              		.align	1
 8330              		.global	HAL_UART_GetError
 8331              		.syntax unified
 8332              		.thumb
 8333              		.thumb_func
 8335              	HAL_UART_GetError:
 8336              	.LFB877:
3088:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3089:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3090:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Return the UART handle error code.
3091:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
3092:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *               the configuration information for the specified UART.
3093:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval UART Error Code
3094:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3095:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
3096:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 8337              		.loc 1 3096 1
 8338              		.cfi_startproc
 8339              		@ args = 0, pretend = 0, frame = 8
 8340              		@ frame_needed = 1, uses_anonymous_args = 0
 8341              		@ link register save eliminated.
 8342 0000 80B4     		push	{r7}
 8343              		.cfi_def_cfa_offset 4
 8344              		.cfi_offset 7, -4
 8345 0002 83B0     		sub	sp, sp, #12
 8346              		.cfi_def_cfa_offset 16
 8347 0004 00AF     		add	r7, sp, #0
 8348              		.cfi_def_cfa_register 7
 8349 0006 7860     		str	r0, [r7, #4]
3097:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return huart->ErrorCode;
 8350              		.loc 1 3097 15
 8351 0008 7B68     		ldr	r3, [r7, #4]
 8352 000a D3F89030 		ldr	r3, [r3, #144]
3098:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 8353              		.loc 1 3098 1
 8354 000e 1846     		mov	r0, r3
 8355 0010 0C37     		adds	r7, r7, #12
 8356              		.cfi_def_cfa_offset 4
 8357 0012 BD46     		mov	sp, r7
 8358              		.cfi_def_cfa_register 13
 8359              		@ sp needed
 8360 0014 5DF8047B 		ldr	r7, [sp], #4
 8361              		.cfi_restore 7
 8362              		.cfi_def_cfa_offset 0
 8363 0018 7047     		bx	lr
ARM GAS  /tmp/ccMjAmt3.s 			page 213


 8364              		.cfi_endproc
 8365              	.LFE877:
 8367              		.global	__aeabi_uldivmod
 8368              		.section	.text.UART_SetConfig,"ax",%progbits
 8369              		.align	1
 8370              		.global	UART_SetConfig
 8371              		.syntax unified
 8372              		.thumb
 8373              		.thumb_func
 8375              	UART_SetConfig:
 8376              	.LFB878:
3099:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3100:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @}
3101:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3102:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3103:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3104:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @}
3105:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3106:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3107:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
3108:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @{
3109:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3110:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3111:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3112:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
3113:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
3114:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval none
3115:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3116:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3117:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
3118:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
3119:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Init the UART Callback settings */
3120:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
3121:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
3122:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
3123:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
3124:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
3125:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
3126:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
3127:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
3128:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
3129:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
3130:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
3131:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
3132:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3133:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
3134:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3135:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3136:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3137:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Configure the UART peripheral.
3138:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
3139:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
3140:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3141:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
3142:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 8377              		.loc 1 3142 1
 8378              		.cfi_startproc
ARM GAS  /tmp/ccMjAmt3.s 			page 214


 8379              		@ args = 0, pretend = 0, frame = 64
 8380              		@ frame_needed = 1, uses_anonymous_args = 0
 8381 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 8382              		.cfi_def_cfa_offset 32
 8383              		.cfi_offset 4, -32
 8384              		.cfi_offset 5, -28
 8385              		.cfi_offset 7, -24
 8386              		.cfi_offset 8, -20
 8387              		.cfi_offset 9, -16
 8388              		.cfi_offset 10, -12
 8389              		.cfi_offset 11, -8
 8390              		.cfi_offset 14, -4
 8391 0004 90B0     		sub	sp, sp, #64
 8392              		.cfi_def_cfa_offset 96
 8393 0006 00AF     		add	r7, sp, #0
 8394              		.cfi_def_cfa_register 7
 8395 0008 7861     		str	r0, [r7, #20]
3143:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t tmpreg;
3144:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t brrtemp;
3145:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint64_t clocksource;
3146:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t usartdiv;
3147:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 8396              		.loc 1 3147 21
 8397 000a 0023     		movs	r3, #0
 8398 000c 87F82F30 		strb	r3, [r7, #47]
3148:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
3149:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t pclk;
3150:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3151:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check the parameters */
3152:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 8399              		.loc 1 3152 3
 8400 0010 7B69     		ldr	r3, [r7, #20]
 8401 0012 5B68     		ldr	r3, [r3, #4]
 8402 0014 194A     		ldr	r2, .L463
 8403 0016 9342     		cmp	r3, r2
 8404 0018 04D9     		bls	.L425
 8405              		.loc 1 3152 3 is_stmt 0 discriminator 1
 8406 001a 4FF44561 		mov	r1, #3152
 8407 001e 1848     		ldr	r0, .L463+4
 8408 0020 FFF7FEFF 		bl	assert_failed
 8409              	.L425:
3153:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8410              		.loc 1 3153 3 is_stmt 1
 8411 0024 7B69     		ldr	r3, [r7, #20]
 8412 0026 9B68     		ldr	r3, [r3, #8]
 8413 0028 B3F1805F 		cmp	r3, #268435456
 8414 002c 0DD0     		beq	.L426
 8415              		.loc 1 3153 3 is_stmt 0 discriminator 1
 8416 002e 7B69     		ldr	r3, [r7, #20]
 8417 0030 9B68     		ldr	r3, [r3, #8]
 8418 0032 002B     		cmp	r3, #0
 8419 0034 09D0     		beq	.L426
 8420              		.loc 1 3153 3 discriminator 2
 8421 0036 7B69     		ldr	r3, [r7, #20]
 8422 0038 9B68     		ldr	r3, [r3, #8]
 8423 003a B3F5805F 		cmp	r3, #4096
 8424 003e 04D0     		beq	.L426
ARM GAS  /tmp/ccMjAmt3.s 			page 215


 8425              		.loc 1 3153 3 discriminator 3
 8426 0040 40F65141 		movw	r1, #3153
 8427 0044 0E48     		ldr	r0, .L463+4
 8428 0046 FFF7FEFF 		bl	assert_failed
 8429              	.L426:
3154:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 8430              		.loc 1 3154 7 is_stmt 1
 8431 004a 7B69     		ldr	r3, [r7, #20]
 8432 004c 1B68     		ldr	r3, [r3]
 8433              		.loc 1 3154 6
 8434 004e 0D4A     		ldr	r2, .L463+8
 8435 0050 9342     		cmp	r3, r2
 8436 0052 04D0     		beq	.L427
 8437              		.loc 1 3154 7 discriminator 1
 8438 0054 7B69     		ldr	r3, [r7, #20]
 8439 0056 1B68     		ldr	r3, [r3]
 8440 0058 0B4A     		ldr	r2, .L463+12
 8441 005a 9342     		cmp	r3, r2
 8442 005c 16D1     		bne	.L428
 8443              	.L427:
3155:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3156:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
 8444              		.loc 1 3156 5
 8445 005e 7B69     		ldr	r3, [r7, #20]
 8446 0060 DB68     		ldr	r3, [r3, #12]
 8447 0062 002B     		cmp	r3, #0
 8448 0064 38D0     		beq	.L430
 8449              		.loc 1 3156 5 is_stmt 0 discriminator 1
 8450 0066 7B69     		ldr	r3, [r7, #20]
 8451 0068 DB68     		ldr	r3, [r3, #12]
 8452 006a B3F5005F 		cmp	r3, #8192
 8453 006e 33D0     		beq	.L430
 8454              		.loc 1 3156 5 discriminator 2
 8455 0070 40F65441 		movw	r1, #3156
 8456 0074 0248     		ldr	r0, .L463+4
 8457 0076 FFF7FEFF 		bl	assert_failed
 8458              		.loc 1 3156 5
 8459 007a 2DE0     		b	.L430
 8460              	.L464:
 8461              		.align	2
 8462              	.L463:
 8463 007c 1FBCBE00 		.word	12499999
 8464 0080 00000000 		.word	.LC0
 8465 0084 000C0056 		.word	1442843648
 8466 0088 000C0046 		.word	1174408192
 8467              	.L428:
3157:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3158:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
3159:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3160:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8468              		.loc 1 3160 5 is_stmt 1
 8469 008c 7B69     		ldr	r3, [r7, #20]
 8470 008e DB68     		ldr	r3, [r3, #12]
 8471 0090 B3F5805F 		cmp	r3, #4096
 8472 0094 12D0     		beq	.L431
 8473              		.loc 1 3160 5 is_stmt 0 discriminator 1
 8474 0096 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccMjAmt3.s 			page 216


 8475 0098 DB68     		ldr	r3, [r3, #12]
 8476 009a 002B     		cmp	r3, #0
 8477 009c 0ED0     		beq	.L431
 8478              		.loc 1 3160 5 discriminator 2
 8479 009e 7B69     		ldr	r3, [r7, #20]
 8480 00a0 DB68     		ldr	r3, [r3, #12]
 8481 00a2 B3F5405F 		cmp	r3, #12288
 8482 00a6 09D0     		beq	.L431
 8483              		.loc 1 3160 5 discriminator 3
 8484 00a8 7B69     		ldr	r3, [r7, #20]
 8485 00aa DB68     		ldr	r3, [r3, #12]
 8486 00ac B3F5005F 		cmp	r3, #8192
 8487 00b0 04D0     		beq	.L431
 8488              		.loc 1 3160 5 discriminator 4
 8489 00b2 40F65841 		movw	r1, #3160
 8490 00b6 9648     		ldr	r0, .L465
 8491 00b8 FFF7FEFF 		bl	assert_failed
 8492              	.L431:
3161:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 8493              		.loc 1 3161 5 is_stmt 1
 8494 00bc 7B69     		ldr	r3, [r7, #20]
 8495 00be 1B6A     		ldr	r3, [r3, #32]
 8496 00c0 002B     		cmp	r3, #0
 8497 00c2 09D0     		beq	.L430
 8498              		.loc 1 3161 5 is_stmt 0 discriminator 1
 8499 00c4 7B69     		ldr	r3, [r7, #20]
 8500 00c6 1B6A     		ldr	r3, [r3, #32]
 8501 00c8 B3F5006F 		cmp	r3, #2048
 8502 00cc 04D0     		beq	.L430
 8503              		.loc 1 3161 5 discriminator 2
 8504 00ce 40F65941 		movw	r1, #3161
 8505 00d2 8F48     		ldr	r0, .L465
 8506 00d4 FFF7FEFF 		bl	assert_failed
 8507              	.L430:
3162:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3163:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3164:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 8508              		.loc 1 3164 3 is_stmt 1
 8509 00d8 7B69     		ldr	r3, [r7, #20]
 8510 00da 1B69     		ldr	r3, [r3, #16]
 8511 00dc 002B     		cmp	r3, #0
 8512 00de 0ED0     		beq	.L432
 8513              		.loc 1 3164 3 is_stmt 0 discriminator 1
 8514 00e0 7B69     		ldr	r3, [r7, #20]
 8515 00e2 1B69     		ldr	r3, [r3, #16]
 8516 00e4 B3F5806F 		cmp	r3, #1024
 8517 00e8 09D0     		beq	.L432
 8518              		.loc 1 3164 3 discriminator 2
 8519 00ea 7B69     		ldr	r3, [r7, #20]
 8520 00ec 1B69     		ldr	r3, [r3, #16]
 8521 00ee B3F5C06F 		cmp	r3, #1536
 8522 00f2 04D0     		beq	.L432
 8523              		.loc 1 3164 3 discriminator 3
 8524 00f4 40F65C41 		movw	r1, #3164
 8525 00f8 8548     		ldr	r0, .L465
 8526 00fa FFF7FEFF 		bl	assert_failed
 8527              	.L432:
ARM GAS  /tmp/ccMjAmt3.s 			page 217


3165:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 8528              		.loc 1 3165 3 is_stmt 1
 8529 00fe 7B69     		ldr	r3, [r7, #20]
 8530 0100 5B69     		ldr	r3, [r3, #20]
 8531 0102 23F00C03 		bic	r3, r3, #12
 8532 0106 002B     		cmp	r3, #0
 8533 0108 03D1     		bne	.L433
 8534              		.loc 1 3165 3 is_stmt 0 discriminator 2
 8535 010a 7B69     		ldr	r3, [r7, #20]
 8536 010c 5B69     		ldr	r3, [r3, #20]
 8537 010e 002B     		cmp	r3, #0
 8538 0110 04D1     		bne	.L434
 8539              	.L433:
 8540              		.loc 1 3165 3 discriminator 3
 8541 0112 40F65D41 		movw	r1, #3165
 8542 0116 7E48     		ldr	r0, .L465
 8543 0118 FFF7FEFF 		bl	assert_failed
 8544              	.L434:
3166:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8545              		.loc 1 3166 3 is_stmt 1
 8546 011c 7B69     		ldr	r3, [r7, #20]
 8547 011e 9B69     		ldr	r3, [r3, #24]
 8548 0120 002B     		cmp	r3, #0
 8549 0122 13D0     		beq	.L435
 8550              		.loc 1 3166 3 is_stmt 0 discriminator 1
 8551 0124 7B69     		ldr	r3, [r7, #20]
 8552 0126 9B69     		ldr	r3, [r3, #24]
 8553 0128 B3F5807F 		cmp	r3, #256
 8554 012c 0ED0     		beq	.L435
 8555              		.loc 1 3166 3 discriminator 2
 8556 012e 7B69     		ldr	r3, [r7, #20]
 8557 0130 9B69     		ldr	r3, [r3, #24]
 8558 0132 B3F5007F 		cmp	r3, #512
 8559 0136 09D0     		beq	.L435
 8560              		.loc 1 3166 3 discriminator 3
 8561 0138 7B69     		ldr	r3, [r7, #20]
 8562 013a 9B69     		ldr	r3, [r3, #24]
 8563 013c B3F5407F 		cmp	r3, #768
 8564 0140 04D0     		beq	.L435
 8565              		.loc 1 3166 3 discriminator 4
 8566 0142 40F65E41 		movw	r1, #3166
 8567 0146 7248     		ldr	r0, .L465
 8568 0148 FFF7FEFF 		bl	assert_failed
 8569              	.L435:
3167:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8570              		.loc 1 3167 3 is_stmt 1
 8571 014c 7B69     		ldr	r3, [r7, #20]
 8572 014e DB69     		ldr	r3, [r3, #28]
 8573 0150 002B     		cmp	r3, #0
 8574 0152 09D0     		beq	.L436
 8575              		.loc 1 3167 3 is_stmt 0 discriminator 1
 8576 0154 7B69     		ldr	r3, [r7, #20]
 8577 0156 DB69     		ldr	r3, [r3, #28]
 8578 0158 B3F5004F 		cmp	r3, #32768
 8579 015c 04D0     		beq	.L436
 8580              		.loc 1 3167 3 discriminator 2
 8581 015e 40F65F41 		movw	r1, #3167
ARM GAS  /tmp/ccMjAmt3.s 			page 218


 8582 0162 6B48     		ldr	r0, .L465
 8583 0164 FFF7FEFF 		bl	assert_failed
 8584              	.L436:
3168:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
 8585              		.loc 1 3168 3 is_stmt 1
 8586 0168 7B69     		ldr	r3, [r7, #20]
 8587 016a 5B6A     		ldr	r3, [r3, #36]
 8588 016c 002B     		cmp	r3, #0
 8589 016e 30D0     		beq	.L437
 8590              		.loc 1 3168 3 is_stmt 0 discriminator 1
 8591 0170 7B69     		ldr	r3, [r7, #20]
 8592 0172 5B6A     		ldr	r3, [r3, #36]
 8593 0174 012B     		cmp	r3, #1
 8594 0176 2CD0     		beq	.L437
 8595              		.loc 1 3168 3 discriminator 2
 8596 0178 7B69     		ldr	r3, [r7, #20]
 8597 017a 5B6A     		ldr	r3, [r3, #36]
 8598 017c 022B     		cmp	r3, #2
 8599 017e 28D0     		beq	.L437
 8600              		.loc 1 3168 3 discriminator 3
 8601 0180 7B69     		ldr	r3, [r7, #20]
 8602 0182 5B6A     		ldr	r3, [r3, #36]
 8603 0184 032B     		cmp	r3, #3
 8604 0186 24D0     		beq	.L437
 8605              		.loc 1 3168 3 discriminator 4
 8606 0188 7B69     		ldr	r3, [r7, #20]
 8607 018a 5B6A     		ldr	r3, [r3, #36]
 8608 018c 042B     		cmp	r3, #4
 8609 018e 20D0     		beq	.L437
 8610              		.loc 1 3168 3 discriminator 5
 8611 0190 7B69     		ldr	r3, [r7, #20]
 8612 0192 5B6A     		ldr	r3, [r3, #36]
 8613 0194 052B     		cmp	r3, #5
 8614 0196 1CD0     		beq	.L437
 8615              		.loc 1 3168 3 discriminator 6
 8616 0198 7B69     		ldr	r3, [r7, #20]
 8617 019a 5B6A     		ldr	r3, [r3, #36]
 8618 019c 062B     		cmp	r3, #6
 8619 019e 18D0     		beq	.L437
 8620              		.loc 1 3168 3 discriminator 7
 8621 01a0 7B69     		ldr	r3, [r7, #20]
 8622 01a2 5B6A     		ldr	r3, [r3, #36]
 8623 01a4 072B     		cmp	r3, #7
 8624 01a6 14D0     		beq	.L437
 8625              		.loc 1 3168 3 discriminator 8
 8626 01a8 7B69     		ldr	r3, [r7, #20]
 8627 01aa 5B6A     		ldr	r3, [r3, #36]
 8628 01ac 082B     		cmp	r3, #8
 8629 01ae 10D0     		beq	.L437
 8630              		.loc 1 3168 3 discriminator 9
 8631 01b0 7B69     		ldr	r3, [r7, #20]
 8632 01b2 5B6A     		ldr	r3, [r3, #36]
 8633 01b4 092B     		cmp	r3, #9
 8634 01b6 0CD0     		beq	.L437
 8635              		.loc 1 3168 3 discriminator 10
 8636 01b8 7B69     		ldr	r3, [r7, #20]
 8637 01ba 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccMjAmt3.s 			page 219


 8638 01bc 0A2B     		cmp	r3, #10
 8639 01be 08D0     		beq	.L437
 8640              		.loc 1 3168 3 discriminator 11
 8641 01c0 7B69     		ldr	r3, [r7, #20]
 8642 01c2 5B6A     		ldr	r3, [r3, #36]
 8643 01c4 0B2B     		cmp	r3, #11
 8644 01c6 04D0     		beq	.L437
 8645              		.loc 1 3168 3 discriminator 12
 8646 01c8 4FF44661 		mov	r1, #3168
 8647 01cc 5048     		ldr	r0, .L465
 8648 01ce FFF7FEFF 		bl	assert_failed
 8649              	.L437:
3169:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3170:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3171:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3172:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3173:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3174:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3175:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3176:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3177:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 8650              		.loc 1 3177 33 is_stmt 1
 8651 01d2 7B69     		ldr	r3, [r7, #20]
 8652 01d4 9A68     		ldr	r2, [r3, #8]
 8653              		.loc 1 3177 58
 8654 01d6 7B69     		ldr	r3, [r7, #20]
 8655 01d8 1B69     		ldr	r3, [r3, #16]
 8656              		.loc 1 3177 45
 8657 01da 1A43     		orrs	r2, r2, r3
 8658              		.loc 1 3177 79
 8659 01dc 7B69     		ldr	r3, [r7, #20]
 8660 01de 5B69     		ldr	r3, [r3, #20]
 8661              		.loc 1 3177 66
 8662 01e0 1A43     		orrs	r2, r2, r3
 8663              		.loc 1 3177 98
 8664 01e2 7B69     		ldr	r3, [r7, #20]
 8665 01e4 DB69     		ldr	r3, [r3, #28]
 8666              		.loc 1 3177 10
 8667 01e6 1343     		orrs	r3, r3, r2
 8668 01e8 FB63     		str	r3, [r7, #60]
3178:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8669              		.loc 1 3178 3
 8670 01ea 7B69     		ldr	r3, [r7, #20]
 8671 01ec 1B68     		ldr	r3, [r3]
 8672 01ee 1A68     		ldr	r2, [r3]
 8673 01f0 484B     		ldr	r3, .L465+4
 8674 01f2 1340     		ands	r3, r3, r2
 8675 01f4 7A69     		ldr	r2, [r7, #20]
 8676 01f6 1268     		ldr	r2, [r2]
 8677 01f8 F96B     		ldr	r1, [r7, #60]
 8678 01fa 0B43     		orrs	r3, r3, r1
 8679 01fc 1360     		str	r3, [r2]
3179:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3180:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3181:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3182:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * to huart->Init.StopBits value */
3183:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
ARM GAS  /tmp/ccMjAmt3.s 			page 220


 8680              		.loc 1 3183 3
 8681 01fe 7B69     		ldr	r3, [r7, #20]
 8682 0200 1B68     		ldr	r3, [r3]
 8683 0202 5B68     		ldr	r3, [r3, #4]
 8684 0204 23F44051 		bic	r1, r3, #12288
 8685 0208 7B69     		ldr	r3, [r7, #20]
 8686 020a DA68     		ldr	r2, [r3, #12]
 8687 020c 7B69     		ldr	r3, [r7, #20]
 8688 020e 1B68     		ldr	r3, [r3]
 8689 0210 0A43     		orrs	r2, r2, r1
 8690 0212 5A60     		str	r2, [r3, #4]
3184:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3185:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3186:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Configure
3187:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3188:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3189:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3190:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3191:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8691              		.loc 1 3191 10
 8692 0214 7B69     		ldr	r3, [r7, #20]
 8693 0216 9B69     		ldr	r3, [r3, #24]
 8694 0218 FB63     		str	r3, [r7, #60]
3192:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3193:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
 8695              		.loc 1 3193 9
 8696 021a 7B69     		ldr	r3, [r7, #20]
 8697 021c 1B68     		ldr	r3, [r3]
 8698              		.loc 1 3193 6
 8699 021e 3E4A     		ldr	r2, .L465+8
 8700 0220 9342     		cmp	r3, r2
 8701 0222 09D0     		beq	.L438
 8702              		.loc 1 3193 9 discriminator 1
 8703 0224 7B69     		ldr	r3, [r7, #20]
 8704 0226 1B68     		ldr	r3, [r3]
 8705              		.loc 1 3193 7 discriminator 1
 8706 0228 3C4A     		ldr	r2, .L465+12
 8707 022a 9342     		cmp	r3, r2
 8708 022c 04D0     		beq	.L438
3194:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3195:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
 8709              		.loc 1 3195 26
 8710 022e 7B69     		ldr	r3, [r7, #20]
 8711 0230 1B6A     		ldr	r3, [r3, #32]
 8712              		.loc 1 3195 12
 8713 0232 FA6B     		ldr	r2, [r7, #60]
 8714 0234 1343     		orrs	r3, r3, r2
 8715 0236 FB63     		str	r3, [r7, #60]
 8716              	.L438:
3196:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3197:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8717              		.loc 1 3197 3
 8718 0238 7B69     		ldr	r3, [r7, #20]
 8719 023a 1B68     		ldr	r3, [r3]
 8720 023c 9B68     		ldr	r3, [r3, #8]
 8721 023e 23F06E43 		bic	r3, r3, #-301989888
 8722 0242 23F43063 		bic	r3, r3, #2816
ARM GAS  /tmp/ccMjAmt3.s 			page 221


 8723 0246 7A69     		ldr	r2, [r7, #20]
 8724 0248 1268     		ldr	r2, [r2]
 8725 024a F96B     		ldr	r1, [r7, #60]
 8726 024c 0B43     		orrs	r3, r3, r1
 8727 024e 9360     		str	r3, [r2, #8]
3198:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3199:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
3200:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Configure
3201:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
3202:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 8728              		.loc 1 3202 3
 8729 0250 7B69     		ldr	r3, [r7, #20]
 8730 0252 1B68     		ldr	r3, [r3]
 8731 0254 DB6A     		ldr	r3, [r3, #44]
 8732 0256 23F00F01 		bic	r1, r3, #15
 8733 025a 7B69     		ldr	r3, [r7, #20]
 8734 025c 5A6A     		ldr	r2, [r3, #36]
 8735 025e 7B69     		ldr	r3, [r7, #20]
 8736 0260 1B68     		ldr	r3, [r3]
 8737 0262 0A43     		orrs	r2, r2, r1
 8738 0264 DA62     		str	r2, [r3, #44]
3203:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3204:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3205:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 8739              		.loc 1 3205 3
 8740 0266 7B69     		ldr	r3, [r7, #20]
 8741 0268 1B68     		ldr	r3, [r3]
 8742 026a 2D4A     		ldr	r2, .L465+16
 8743 026c 9342     		cmp	r3, r2
 8744 026e 06D1     		bne	.L439
 8745              		.loc 1 3205 3 is_stmt 0 discriminator 1
 8746 0270 4FF00002 		mov	r2, #0
 8747 0274 4FF48073 		mov	r3, #256
 8748 0278 C7E90C23 		strd	r2, [r7, #48]
 8749 027c 92E0     		b	.L440
 8750              	.L439:
 8751              		.loc 1 3205 3 discriminator 2
 8752 027e 7B69     		ldr	r3, [r7, #20]
 8753 0280 1B68     		ldr	r3, [r3]
 8754 0282 284A     		ldr	r2, .L465+20
 8755 0284 9342     		cmp	r3, r2
 8756 0286 06D1     		bne	.L441
 8757              		.loc 1 3205 3 discriminator 3
 8758 0288 4FF00002 		mov	r2, #0
 8759 028c 4FF40073 		mov	r3, #512
 8760 0290 C7E90C23 		strd	r2, [r7, #48]
 8761 0294 86E0     		b	.L440
 8762              	.L441:
 8763              		.loc 1 3205 3 discriminator 4
 8764 0296 7B69     		ldr	r3, [r7, #20]
 8765 0298 1B68     		ldr	r3, [r3]
 8766 029a 234A     		ldr	r2, .L465+24
 8767 029c 9342     		cmp	r3, r2
 8768 029e 06D1     		bne	.L442
 8769              		.loc 1 3205 3 discriminator 5
 8770 02a0 4FF00002 		mov	r2, #0
 8771 02a4 4FF48063 		mov	r3, #1024
ARM GAS  /tmp/ccMjAmt3.s 			page 222


 8772 02a8 C7E90C23 		strd	r2, [r7, #48]
 8773 02ac 7AE0     		b	.L440
 8774              	.L442:
 8775              		.loc 1 3205 3 discriminator 6
 8776 02ae 7B69     		ldr	r3, [r7, #20]
 8777 02b0 1B68     		ldr	r3, [r3]
 8778 02b2 1E4A     		ldr	r2, .L465+28
 8779 02b4 9342     		cmp	r3, r2
 8780 02b6 06D1     		bne	.L443
 8781              		.loc 1 3205 3 discriminator 7
 8782 02b8 4FF00002 		mov	r2, #0
 8783 02bc 4FF40063 		mov	r3, #2048
 8784 02c0 C7E90C23 		strd	r2, [r7, #48]
 8785 02c4 6EE0     		b	.L440
 8786              	.L443:
 8787              		.loc 1 3205 3 discriminator 8
 8788 02c6 7B69     		ldr	r3, [r7, #20]
 8789 02c8 1B68     		ldr	r3, [r3]
 8790 02ca B3F1502F 		cmp	r3, #1342197760
 8791 02ce 06D1     		bne	.L444
 8792              		.loc 1 3205 3 discriminator 9
 8793 02d0 4FF00002 		mov	r2, #0
 8794 02d4 4FF48053 		mov	r3, #4096
 8795 02d8 C7E90C23 		strd	r2, [r7, #48]
 8796 02dc 62E0     		b	.L440
 8797              	.L444:
 8798              		.loc 1 3205 3 discriminator 10
 8799 02de 7B69     		ldr	r3, [r7, #20]
 8800 02e0 1B68     		ldr	r3, [r3]
 8801 02e2 134A     		ldr	r2, .L465+32
 8802 02e4 9342     		cmp	r3, r2
 8803 02e6 06D1     		bne	.L445
 8804              		.loc 1 3205 3 discriminator 11
 8805 02e8 4FF00002 		mov	r2, #0
 8806 02ec 4FF40053 		mov	r3, #8192
 8807 02f0 C7E90C23 		strd	r2, [r7, #48]
 8808 02f4 56E0     		b	.L440
 8809              	.L445:
 8810              		.loc 1 3205 3 discriminator 12
 8811 02f6 7B69     		ldr	r3, [r7, #20]
 8812 02f8 1B68     		ldr	r3, [r3]
 8813 02fa 0E4A     		ldr	r2, .L465+36
 8814 02fc 9342     		cmp	r3, r2
 8815 02fe 1BD1     		bne	.L446
 8816              		.loc 1 3205 3 discriminator 13
 8817 0300 4FF00002 		mov	r2, #0
 8818 0304 4FF48043 		mov	r3, #16384
 8819 0308 C7E90C23 		strd	r2, [r7, #48]
 8820 030c 4AE0     		b	.L440
 8821              	.L466:
 8822 030e 00BF     		.align	2
 8823              	.L465:
 8824 0310 00000000 		.word	.LC0
 8825 0314 F369FFCF 		.word	-805344781
 8826 0318 000C0056 		.word	1442843648
 8827 031c 000C0046 		.word	1174408192
 8828 0320 00100052 		.word	1375735808
ARM GAS  /tmp/ccMjAmt3.s 			page 223


 8829 0324 00440050 		.word	1342194688
 8830 0328 00480050 		.word	1342195712
 8831 032c 004C0050 		.word	1342196736
 8832 0330 00140052 		.word	1375736832
 8833 0334 00780050 		.word	1342208000
 8834              	.L446:
 8835              		.loc 1 3205 3 discriminator 14
 8836 0338 7B69     		ldr	r3, [r7, #20]
 8837 033a 1B68     		ldr	r3, [r3]
 8838 033c 904A     		ldr	r2, .L467
 8839 033e 9342     		cmp	r3, r2
 8840 0340 06D1     		bne	.L447
 8841              		.loc 1 3205 3 discriminator 15
 8842 0342 4FF00002 		mov	r2, #0
 8843 0346 4FF40043 		mov	r3, #32768
 8844 034a C7E90C23 		strd	r2, [r7, #48]
 8845 034e 29E0     		b	.L440
 8846              	.L447:
 8847              		.loc 1 3205 3 discriminator 16
 8848 0350 7B69     		ldr	r3, [r7, #20]
 8849 0352 1B68     		ldr	r3, [r3]
 8850 0354 8B4A     		ldr	r2, .L467+4
 8851 0356 9342     		cmp	r3, r2
 8852 0358 06D1     		bne	.L448
 8853              		.loc 1 3205 3 discriminator 17
 8854 035a 4FF00002 		mov	r2, #0
 8855 035e 4FF48033 		mov	r3, #65536
 8856 0362 C7E90C23 		strd	r2, [r7, #48]
 8857 0366 1DE0     		b	.L440
 8858              	.L448:
 8859              		.loc 1 3205 3 discriminator 18
 8860 0368 7B69     		ldr	r3, [r7, #20]
 8861 036a 1B68     		ldr	r3, [r3]
 8862 036c 864A     		ldr	r2, .L467+8
 8863 036e 9342     		cmp	r3, r2
 8864 0370 06D1     		bne	.L449
 8865              		.loc 1 3205 3 discriminator 19
 8866 0372 4FF00002 		mov	r2, #0
 8867 0376 4FF40033 		mov	r3, #131072
 8868 037a C7E90C23 		strd	r2, [r7, #48]
 8869 037e 11E0     		b	.L440
 8870              	.L449:
 8871              		.loc 1 3205 3 discriminator 20
 8872 0380 7B69     		ldr	r3, [r7, #20]
 8873 0382 1B68     		ldr	r3, [r3]
 8874 0384 814A     		ldr	r2, .L467+12
 8875 0386 9342     		cmp	r3, r2
 8876 0388 06D1     		bne	.L450
 8877              		.loc 1 3205 3 discriminator 21
 8878 038a 4FF40002 		mov	r2, #8388608
 8879 038e 4FF00003 		mov	r3, #0
 8880 0392 C7E90C23 		strd	r2, [r7, #48]
 8881 0396 05E0     		b	.L440
 8882              	.L450:
 8883              		.loc 1 3205 3 discriminator 22
 8884 0398 4FF00002 		mov	r2, #0
 8885 039c 4FF00003 		mov	r3, #0
ARM GAS  /tmp/ccMjAmt3.s 			page 224


 8886 03a0 C7E90C23 		strd	r2, [r7, #48]
 8887              	.L440:
3206:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3207:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check LPUART instance */
3208:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 8888              		.loc 1 3208 7 is_stmt 1
 8889 03a4 7B69     		ldr	r3, [r7, #20]
 8890 03a6 1B68     		ldr	r3, [r3]
 8891              		.loc 1 3208 6
 8892 03a8 784A     		ldr	r2, .L467+12
 8893 03aa 9342     		cmp	r3, r2
 8894 03ac 04D0     		beq	.L451
 8895              		.loc 1 3208 7 discriminator 1
 8896 03ae 7B69     		ldr	r3, [r7, #20]
 8897 03b0 1B68     		ldr	r3, [r3]
 8898 03b2 774A     		ldr	r2, .L467+16
 8899 03b4 9342     		cmp	r3, r2
 8900 03b6 66D1     		bne	.L452
 8901              	.L451:
3209:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3210:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Retrieve frequency clock */
3211:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     pclk = HAL_RCCEx_GetPeriphCLKFreq(clocksource);
 8902              		.loc 1 3211 12
 8903 03b8 D7E90C01 		ldrd	r0, [r7, #48]
 8904 03bc FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 8905 03c0 B862     		str	r0, [r7, #40]
3212:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3213:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* If proper clock source reported */
3214:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (pclk != 0U)
 8906              		.loc 1 3214 8
 8907 03c2 BB6A     		ldr	r3, [r7, #40]
 8908 03c4 002B     		cmp	r3, #0
 8909 03c6 00F0C680 		beq	.L457
3215:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3216:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Compute clock after Prescaler */
3217:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 8910              		.loc 1 3217 62
 8911 03ca 7B69     		ldr	r3, [r7, #20]
 8912 03cc 5B6A     		ldr	r3, [r3, #36]
 8913              		.loc 1 3217 50
 8914 03ce 714A     		ldr	r2, .L467+20
 8915 03d0 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 8916 03d4 1A46     		mov	r2, r3
 8917              		.loc 1 3217 26
 8918 03d6 BB6A     		ldr	r3, [r7, #40]
 8919 03d8 B3FBF2F3 		udiv	r3, r3, r2
 8920 03dc FB61     		str	r3, [r7, #28]
3218:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3219:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3220:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8921              		.loc 1 3220 50
 8922 03de 7B69     		ldr	r3, [r7, #20]
 8923 03e0 5A68     		ldr	r2, [r3, #4]
 8924              		.loc 1 3220 37
 8925 03e2 1346     		mov	r3, r2
 8926 03e4 5B00     		lsls	r3, r3, #1
 8927 03e6 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccMjAmt3.s 			page 225


 8928              		.loc 1 3220 10
 8929 03e8 FA69     		ldr	r2, [r7, #28]
 8930 03ea 9A42     		cmp	r2, r3
 8931 03ec 05D3     		bcc	.L454
3221:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 8932              		.loc 1 3221 53
 8933 03ee 7B69     		ldr	r3, [r7, #20]
 8934 03f0 5B68     		ldr	r3, [r3, #4]
 8935              		.loc 1 3221 40
 8936 03f2 1B03     		lsls	r3, r3, #12
3220:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 8937              		.loc 1 3220 62 discriminator 1
 8938 03f4 FA69     		ldr	r2, [r7, #28]
 8939 03f6 9A42     		cmp	r2, r3
 8940 03f8 03D9     		bls	.L455
 8941              	.L454:
3222:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
3223:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ret = HAL_ERROR;
 8942              		.loc 1 3223 13
 8943 03fa 0123     		movs	r3, #1
 8944 03fc 87F82F30 		strb	r3, [r7, #47]
 8945 0400 40E0     		b	.L453
 8946              	.L455:
3224:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
3225:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
3226:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
3227:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
3228:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
3229:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescale
 8947              		.loc 1 3229 31
 8948 0402 BB6A     		ldr	r3, [r7, #40]
 8949 0404 0022     		movs	r2, #0
 8950 0406 BB60     		str	r3, [r7, #8]
 8951 0408 FA60     		str	r2, [r7, #12]
 8952 040a 7B69     		ldr	r3, [r7, #20]
 8953 040c 5B6A     		ldr	r3, [r3, #36]
 8954 040e 614A     		ldr	r2, .L467+20
 8955 0410 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 8956 0414 9BB2     		uxth	r3, r3
 8957 0416 0022     		movs	r2, #0
 8958 0418 3B60     		str	r3, [r7]
 8959 041a 7A60     		str	r2, [r7, #4]
 8960 041c D7E90023 		ldrd	r2, [r7]
 8961 0420 D7E90201 		ldrd	r0, [r7, #8]
 8962 0424 FFF7FEFF 		bl	__aeabi_uldivmod
 8963 0428 0246     		mov	r2, r0
 8964 042a 0B46     		mov	r3, r1
 8965 042c 52EA0F23 		lsll	r2, r3, #8
 8966 0430 7969     		ldr	r1, [r7, #20]
 8967 0432 4968     		ldr	r1, [r1, #4]
 8968 0434 4908     		lsrs	r1, r1, #1
 8969 0436 0020     		movs	r0, #0
 8970 0438 0C46     		mov	r4, r1
 8971 043a 0546     		mov	r5, r0
 8972 043c 12EB0408 		adds	r8, r2, r4
 8973 0440 43EB0509 		adc	r9, r3, r5
 8974 0444 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccMjAmt3.s 			page 226


 8975 0446 5B68     		ldr	r3, [r3, #4]
 8976 0448 0022     		movs	r2, #0
 8977 044a 9A46     		mov	r10, r3
 8978 044c 9346     		mov	fp, r2
 8979 044e 5246     		mov	r2, r10
 8980 0450 5B46     		mov	r3, fp
 8981 0452 4046     		mov	r0, r8
 8982 0454 4946     		mov	r1, r9
 8983 0456 FFF7FEFF 		bl	__aeabi_uldivmod
 8984 045a 0246     		mov	r2, r0
 8985 045c 0B46     		mov	r3, r1
 8986              		.loc 1 3229 18
 8987 045e 1346     		mov	r3, r2
 8988 0460 7B62     		str	r3, [r7, #36]
3230:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 8989              		.loc 1 3230 12
 8990 0462 7B6A     		ldr	r3, [r7, #36]
 8991 0464 B3F5407F 		cmp	r3, #768
 8992 0468 08D3     		bcc	.L456
 8993              		.loc 1 3230 42 discriminator 1
 8994 046a 7B6A     		ldr	r3, [r7, #36]
 8995 046c B3F5801F 		cmp	r3, #1048576
 8996 0470 04D2     		bcs	.L456
3231:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
3232:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
 8997              		.loc 1 3232 16
 8998 0472 7B69     		ldr	r3, [r7, #20]
 8999 0474 1B68     		ldr	r3, [r3]
 9000              		.loc 1 3232 32
 9001 0476 7A6A     		ldr	r2, [r7, #36]
 9002 0478 DA60     		str	r2, [r3, #12]
 9003 047a 03E0     		b	.L453
 9004              	.L456:
3233:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
3234:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         else
3235:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
3236:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ret = HAL_ERROR;
 9005              		.loc 1 3236 15
 9006 047c 0123     		movs	r3, #1
 9007 047e 87F82F30 		strb	r3, [r7, #47]
3214:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 9008              		.loc 1 3214 8
 9009 0482 68E0     		b	.L457
 9010              	.L453:
 9011 0484 67E0     		b	.L457
 9012              	.L452:
3237:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
3238:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
3239:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                 (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
3240:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     } /* if (pclk != 0) */
3241:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3242:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3243:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 9013              		.loc 1 3243 23
 9014 0486 7B69     		ldr	r3, [r7, #20]
 9015 0488 DB69     		ldr	r3, [r3, #28]
 9016              		.loc 1 3243 11
ARM GAS  /tmp/ccMjAmt3.s 			page 227


 9017 048a B3F5004F 		cmp	r3, #32768
 9018 048e 38D1     		bne	.L458
3244:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3245:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     pclk = HAL_RCCEx_GetPeriphCLKFreq(clocksource);
 9019              		.loc 1 3245 12
 9020 0490 D7E90C01 		ldrd	r0, [r7, #48]
 9021 0494 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 9022 0498 B862     		str	r0, [r7, #40]
3246:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3247:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3248:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (pclk != 0U)
 9023              		.loc 1 3248 8
 9024 049a BB6A     		ldr	r3, [r7, #40]
 9025 049c 002B     		cmp	r3, #0
 9026 049e 5AD0     		beq	.L457
3249:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3250:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
 9027              		.loc 1 3250 29
 9028 04a0 7B69     		ldr	r3, [r7, #20]
 9029 04a2 5B6A     		ldr	r3, [r3, #36]
 9030 04a4 3B4A     		ldr	r2, .L467+20
 9031 04a6 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 9032 04aa 1A46     		mov	r2, r3
 9033 04ac BB6A     		ldr	r3, [r7, #40]
 9034 04ae B3FBF2F3 		udiv	r3, r3, r2
 9035 04b2 5A00     		lsls	r2, r3, #1
 9036 04b4 7B69     		ldr	r3, [r7, #20]
 9037 04b6 5B68     		ldr	r3, [r3, #4]
 9038 04b8 5B08     		lsrs	r3, r3, #1
 9039 04ba 1A44     		add	r2, r2, r3
 9040 04bc 7B69     		ldr	r3, [r7, #20]
 9041 04be 5B68     		ldr	r3, [r3, #4]
 9042              		.loc 1 3250 16
 9043 04c0 B2FBF3F3 		udiv	r3, r2, r3
 9044 04c4 7B62     		str	r3, [r7, #36]
3251:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 9045              		.loc 1 3251 10
 9046 04c6 7B6A     		ldr	r3, [r7, #36]
 9047 04c8 0F2B     		cmp	r3, #15
 9048 04ca 16D9     		bls	.L460
 9049              		.loc 1 3251 38 discriminator 1
 9050 04cc 7B6A     		ldr	r3, [r7, #36]
 9051 04ce B3F5803F 		cmp	r3, #65536
 9052 04d2 12D2     		bcs	.L460
3252:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
3253:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 9053              		.loc 1 3253 19
 9054 04d4 7B6A     		ldr	r3, [r7, #36]
 9055 04d6 9BB2     		uxth	r3, r3
 9056              		.loc 1 3253 17
 9057 04d8 23F00F03 		bic	r3, r3, #15
 9058 04dc 7B84     		strh	r3, [r7, #34]	@ movhi
3254:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 9059              		.loc 1 3254 62
 9060 04de 7B6A     		ldr	r3, [r7, #36]
 9061 04e0 5B08     		lsrs	r3, r3, #1
 9062              		.loc 1 3254 20
ARM GAS  /tmp/ccMjAmt3.s 			page 228


 9063 04e2 9BB2     		uxth	r3, r3
 9064 04e4 03F00703 		and	r3, r3, #7
 9065 04e8 9AB2     		uxth	r2, r3
 9066              		.loc 1 3254 17
 9067 04ea 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 9068 04ec 1343     		orrs	r3, r3, r2
 9069 04ee 7B84     		strh	r3, [r7, #34]	@ movhi
3255:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 9070              		.loc 1 3255 14
 9071 04f0 7B69     		ldr	r3, [r7, #20]
 9072 04f2 1B68     		ldr	r3, [r3]
 9073              		.loc 1 3255 30
 9074 04f4 7A8C     		ldrh	r2, [r7, #34]
 9075 04f6 DA60     		str	r2, [r3, #12]
 9076 04f8 2DE0     		b	.L457
 9077              	.L460:
3256:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
3257:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
3258:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
3259:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ret = HAL_ERROR;
 9078              		.loc 1 3259 13
 9079 04fa 0123     		movs	r3, #1
 9080 04fc 87F82F30 		strb	r3, [r7, #47]
 9081 0500 29E0     		b	.L457
 9082              	.L458:
3260:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
3261:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3262:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3263:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
3264:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3265:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     pclk = HAL_RCCEx_GetPeriphCLKFreq(clocksource);
 9083              		.loc 1 3265 12
 9084 0502 D7E90C01 		ldrd	r0, [r7, #48]
 9085 0506 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 9086 050a B862     		str	r0, [r7, #40]
3266:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3267:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (pclk != 0U)
 9087              		.loc 1 3267 8
 9088 050c BB6A     		ldr	r3, [r7, #40]
 9089 050e 002B     		cmp	r3, #0
 9090 0510 21D0     		beq	.L457
3268:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3269:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3270:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
 9091              		.loc 1 3270 29
 9092 0512 7B69     		ldr	r3, [r7, #20]
 9093 0514 5B6A     		ldr	r3, [r3, #36]
 9094 0516 1F4A     		ldr	r2, .L467+20
 9095 0518 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 9096 051c 1A46     		mov	r2, r3
 9097 051e BB6A     		ldr	r3, [r7, #40]
 9098 0520 B3FBF2F2 		udiv	r2, r3, r2
 9099 0524 7B69     		ldr	r3, [r7, #20]
 9100 0526 5B68     		ldr	r3, [r3, #4]
 9101 0528 5B08     		lsrs	r3, r3, #1
 9102 052a 1A44     		add	r2, r2, r3
 9103 052c 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccMjAmt3.s 			page 229


 9104 052e 5B68     		ldr	r3, [r3, #4]
 9105              		.loc 1 3270 16
 9106 0530 B2FBF3F3 		udiv	r3, r2, r3
 9107 0534 7B62     		str	r3, [r7, #36]
3271:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 9108              		.loc 1 3271 10
 9109 0536 7B6A     		ldr	r3, [r7, #36]
 9110 0538 0F2B     		cmp	r3, #15
 9111 053a 09D9     		bls	.L461
 9112              		.loc 1 3271 38 discriminator 1
 9113 053c 7B6A     		ldr	r3, [r7, #36]
 9114 053e B3F5803F 		cmp	r3, #65536
 9115 0542 05D2     		bcs	.L461
3272:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
3273:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)usartdiv;
 9116              		.loc 1 3273 32
 9117 0544 7B6A     		ldr	r3, [r7, #36]
 9118 0546 9AB2     		uxth	r2, r3
 9119              		.loc 1 3273 14
 9120 0548 7B69     		ldr	r3, [r7, #20]
 9121 054a 1B68     		ldr	r3, [r3]
 9122              		.loc 1 3273 30
 9123 054c DA60     		str	r2, [r3, #12]
 9124 054e 02E0     		b	.L457
 9125              	.L461:
3274:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
3275:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
3276:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
3277:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ret = HAL_ERROR;
 9126              		.loc 1 3277 13
 9127 0550 0123     		movs	r3, #1
 9128 0552 87F82F30 		strb	r3, [r7, #47]
 9129              	.L457:
3278:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
3279:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3280:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3281:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3282:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3283:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
 9130              		.loc 1 3283 28
 9131 0556 7B69     		ldr	r3, [r7, #20]
 9132 0558 0122     		movs	r2, #1
 9133 055a A3F86A20 		strh	r2, [r3, #106]	@ movhi
3284:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
 9134              		.loc 1 3284 28
 9135 055e 7B69     		ldr	r3, [r7, #20]
 9136 0560 0122     		movs	r2, #1
 9137 0562 A3F86820 		strh	r2, [r3, #104]	@ movhi
3285:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3286:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Clear ISR function pointers */
3287:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxISR = NULL;
 9138              		.loc 1 3287 16
 9139 0566 7B69     		ldr	r3, [r7, #20]
 9140 0568 0022     		movs	r2, #0
 9141 056a 5A67     		str	r2, [r3, #116]
3288:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxISR = NULL;
 9142              		.loc 1 3288 16
ARM GAS  /tmp/ccMjAmt3.s 			page 230


 9143 056c 7B69     		ldr	r3, [r7, #20]
 9144 056e 0022     		movs	r2, #0
 9145 0570 9A67     		str	r2, [r3, #120]
3289:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3290:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return ret;
 9146              		.loc 1 3290 10
 9147 0572 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
3291:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 9148              		.loc 1 3291 1
 9149 0576 1846     		mov	r0, r3
 9150 0578 4037     		adds	r7, r7, #64
 9151              		.cfi_def_cfa_offset 32
 9152 057a BD46     		mov	sp, r7
 9153              		.cfi_def_cfa_register 13
 9154              		@ sp needed
 9155 057c BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 9156              	.L468:
 9157              		.align	2
 9158              	.L467:
 9159 0580 007C0050 		.word	1342209024
 9160 0584 00180052 		.word	1375737856
 9161 0588 001C0052 		.word	1375738880
 9162 058c 000C0056 		.word	1442843648
 9163 0590 000C0046 		.word	1174408192
 9164 0594 00000000 		.word	UARTPrescTable
 9165              		.cfi_endproc
 9166              	.LFE878:
 9168              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 9169              		.align	1
 9170              		.global	UART_AdvFeatureConfig
 9171              		.syntax unified
 9172              		.thumb
 9173              		.thumb_func
 9175              	UART_AdvFeatureConfig:
 9176              	.LFB879:
3292:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3293:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3294:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3295:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
3296:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
3297:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3298:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3299:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 9177              		.loc 1 3299 1
 9178              		.cfi_startproc
 9179              		@ args = 0, pretend = 0, frame = 8
 9180              		@ frame_needed = 1, uses_anonymous_args = 0
 9181 0000 80B5     		push	{r7, lr}
 9182              		.cfi_def_cfa_offset 8
 9183              		.cfi_offset 7, -8
 9184              		.cfi_offset 14, -4
 9185 0002 82B0     		sub	sp, sp, #8
 9186              		.cfi_def_cfa_offset 16
 9187 0004 00AF     		add	r7, sp, #0
 9188              		.cfi_def_cfa_register 7
 9189 0006 7860     		str	r0, [r7, #4]
3300:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
ARM GAS  /tmp/ccMjAmt3.s 			page 231


3301:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
 9190              		.loc 1 3301 3
 9191 0008 7B68     		ldr	r3, [r7, #4]
 9192 000a 9B6A     		ldr	r3, [r3, #40]
 9193 000c FF2B     		cmp	r3, #255
 9194 000e 04D9     		bls	.L470
 9195              		.loc 1 3301 3 is_stmt 0 discriminator 1
 9196 0010 40F6E541 		movw	r1, #3301
 9197 0014 9048     		ldr	r0, .L490
 9198 0016 FFF7FEFF 		bl	assert_failed
 9199              	.L470:
3302:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3303:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3304:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 9200              		.loc 1 3304 7 is_stmt 1
 9201 001a 7B68     		ldr	r3, [r7, #4]
 9202 001c 9B6A     		ldr	r3, [r3, #40]
 9203 001e 03F00803 		and	r3, r3, #8
 9204              		.loc 1 3304 6
 9205 0022 002B     		cmp	r3, #0
 9206 0024 18D0     		beq	.L471
3305:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3306:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
 9207              		.loc 1 3306 5
 9208 0026 7B68     		ldr	r3, [r7, #4]
 9209 0028 9B6B     		ldr	r3, [r3, #56]
 9210 002a 002B     		cmp	r3, #0
 9211 002c 09D0     		beq	.L472
 9212              		.loc 1 3306 5 is_stmt 0 discriminator 1
 9213 002e 7B68     		ldr	r3, [r7, #4]
 9214 0030 9B6B     		ldr	r3, [r3, #56]
 9215 0032 B3F5004F 		cmp	r3, #32768
 9216 0036 04D0     		beq	.L472
 9217              		.loc 1 3306 5 discriminator 2
 9218 0038 40F6EA41 		movw	r1, #3306
 9219 003c 8648     		ldr	r0, .L490
 9220 003e FFF7FEFF 		bl	assert_failed
 9221              	.L472:
3307:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 9222              		.loc 1 3307 5 is_stmt 1
 9223 0042 7B68     		ldr	r3, [r7, #4]
 9224 0044 1B68     		ldr	r3, [r3]
 9225 0046 5B68     		ldr	r3, [r3, #4]
 9226 0048 23F40041 		bic	r1, r3, #32768
 9227 004c 7B68     		ldr	r3, [r7, #4]
 9228 004e 9A6B     		ldr	r2, [r3, #56]
 9229 0050 7B68     		ldr	r3, [r7, #4]
 9230 0052 1B68     		ldr	r3, [r3]
 9231 0054 0A43     		orrs	r2, r2, r1
 9232 0056 5A60     		str	r2, [r3, #4]
 9233              	.L471:
3308:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3309:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3310:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3311:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 9234              		.loc 1 3311 7
 9235 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 232


 9236 005a 9B6A     		ldr	r3, [r3, #40]
 9237 005c 03F00103 		and	r3, r3, #1
 9238              		.loc 1 3311 6
 9239 0060 002B     		cmp	r3, #0
 9240 0062 18D0     		beq	.L473
3312:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3313:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
 9241              		.loc 1 3313 5
 9242 0064 7B68     		ldr	r3, [r7, #4]
 9243 0066 DB6A     		ldr	r3, [r3, #44]
 9244 0068 002B     		cmp	r3, #0
 9245 006a 09D0     		beq	.L474
 9246              		.loc 1 3313 5 is_stmt 0 discriminator 1
 9247 006c 7B68     		ldr	r3, [r7, #4]
 9248 006e DB6A     		ldr	r3, [r3, #44]
 9249 0070 B3F5003F 		cmp	r3, #131072
 9250 0074 04D0     		beq	.L474
 9251              		.loc 1 3313 5 discriminator 2
 9252 0076 40F6F141 		movw	r1, #3313
 9253 007a 7748     		ldr	r0, .L490
 9254 007c FFF7FEFF 		bl	assert_failed
 9255              	.L474:
3314:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 9256              		.loc 1 3314 5 is_stmt 1
 9257 0080 7B68     		ldr	r3, [r7, #4]
 9258 0082 1B68     		ldr	r3, [r3]
 9259 0084 5B68     		ldr	r3, [r3, #4]
 9260 0086 23F40031 		bic	r1, r3, #131072
 9261 008a 7B68     		ldr	r3, [r7, #4]
 9262 008c DA6A     		ldr	r2, [r3, #44]
 9263 008e 7B68     		ldr	r3, [r7, #4]
 9264 0090 1B68     		ldr	r3, [r3]
 9265 0092 0A43     		orrs	r2, r2, r1
 9266 0094 5A60     		str	r2, [r3, #4]
 9267              	.L473:
3315:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3316:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3317:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3318:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 9268              		.loc 1 3318 7
 9269 0096 7B68     		ldr	r3, [r7, #4]
 9270 0098 9B6A     		ldr	r3, [r3, #40]
 9271 009a 03F00203 		and	r3, r3, #2
 9272              		.loc 1 3318 6
 9273 009e 002B     		cmp	r3, #0
 9274 00a0 18D0     		beq	.L475
3319:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3320:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
 9275              		.loc 1 3320 5
 9276 00a2 7B68     		ldr	r3, [r7, #4]
 9277 00a4 1B6B     		ldr	r3, [r3, #48]
 9278 00a6 002B     		cmp	r3, #0
 9279 00a8 09D0     		beq	.L476
 9280              		.loc 1 3320 5 is_stmt 0 discriminator 1
 9281 00aa 7B68     		ldr	r3, [r7, #4]
 9282 00ac 1B6B     		ldr	r3, [r3, #48]
 9283 00ae B3F5803F 		cmp	r3, #65536
ARM GAS  /tmp/ccMjAmt3.s 			page 233


 9284 00b2 04D0     		beq	.L476
 9285              		.loc 1 3320 5 discriminator 2
 9286 00b4 40F6F841 		movw	r1, #3320
 9287 00b8 6748     		ldr	r0, .L490
 9288 00ba FFF7FEFF 		bl	assert_failed
 9289              	.L476:
3321:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 9290              		.loc 1 3321 5 is_stmt 1
 9291 00be 7B68     		ldr	r3, [r7, #4]
 9292 00c0 1B68     		ldr	r3, [r3]
 9293 00c2 5B68     		ldr	r3, [r3, #4]
 9294 00c4 23F48031 		bic	r1, r3, #65536
 9295 00c8 7B68     		ldr	r3, [r7, #4]
 9296 00ca 1A6B     		ldr	r2, [r3, #48]
 9297 00cc 7B68     		ldr	r3, [r7, #4]
 9298 00ce 1B68     		ldr	r3, [r3]
 9299 00d0 0A43     		orrs	r2, r2, r1
 9300 00d2 5A60     		str	r2, [r3, #4]
 9301              	.L475:
3322:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3323:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3324:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* if required, configure data inversion */
3325:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 9302              		.loc 1 3325 7
 9303 00d4 7B68     		ldr	r3, [r7, #4]
 9304 00d6 9B6A     		ldr	r3, [r3, #40]
 9305 00d8 03F00403 		and	r3, r3, #4
 9306              		.loc 1 3325 6
 9307 00dc 002B     		cmp	r3, #0
 9308 00de 18D0     		beq	.L477
3326:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3327:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
 9309              		.loc 1 3327 5
 9310 00e0 7B68     		ldr	r3, [r7, #4]
 9311 00e2 5B6B     		ldr	r3, [r3, #52]
 9312 00e4 002B     		cmp	r3, #0
 9313 00e6 09D0     		beq	.L478
 9314              		.loc 1 3327 5 is_stmt 0 discriminator 1
 9315 00e8 7B68     		ldr	r3, [r7, #4]
 9316 00ea 5B6B     		ldr	r3, [r3, #52]
 9317 00ec B3F5802F 		cmp	r3, #262144
 9318 00f0 04D0     		beq	.L478
 9319              		.loc 1 3327 5 discriminator 2
 9320 00f2 40F6FF41 		movw	r1, #3327
 9321 00f6 5848     		ldr	r0, .L490
 9322 00f8 FFF7FEFF 		bl	assert_failed
 9323              	.L478:
3328:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 9324              		.loc 1 3328 5 is_stmt 1
 9325 00fc 7B68     		ldr	r3, [r7, #4]
 9326 00fe 1B68     		ldr	r3, [r3]
 9327 0100 5B68     		ldr	r3, [r3, #4]
 9328 0102 23F48021 		bic	r1, r3, #262144
 9329 0106 7B68     		ldr	r3, [r7, #4]
 9330 0108 5A6B     		ldr	r2, [r3, #52]
 9331 010a 7B68     		ldr	r3, [r7, #4]
 9332 010c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 234


 9333 010e 0A43     		orrs	r2, r2, r1
 9334 0110 5A60     		str	r2, [r3, #4]
 9335              	.L477:
3329:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3330:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3331:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3332:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 9336              		.loc 1 3332 7
 9337 0112 7B68     		ldr	r3, [r7, #4]
 9338 0114 9B6A     		ldr	r3, [r3, #40]
 9339 0116 03F01003 		and	r3, r3, #16
 9340              		.loc 1 3332 6
 9341 011a 002B     		cmp	r3, #0
 9342 011c 18D0     		beq	.L479
3333:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3334:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
 9343              		.loc 1 3334 5
 9344 011e 7B68     		ldr	r3, [r7, #4]
 9345 0120 DB6B     		ldr	r3, [r3, #60]
 9346 0122 002B     		cmp	r3, #0
 9347 0124 09D0     		beq	.L480
 9348              		.loc 1 3334 5 is_stmt 0 discriminator 1
 9349 0126 7B68     		ldr	r3, [r7, #4]
 9350 0128 DB6B     		ldr	r3, [r3, #60]
 9351 012a B3F5805F 		cmp	r3, #4096
 9352 012e 04D0     		beq	.L480
 9353              		.loc 1 3334 5 discriminator 2
 9354 0130 40F60651 		movw	r1, #3334
 9355 0134 4848     		ldr	r0, .L490
 9356 0136 FFF7FEFF 		bl	assert_failed
 9357              	.L480:
3335:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 9358              		.loc 1 3335 5 is_stmt 1
 9359 013a 7B68     		ldr	r3, [r7, #4]
 9360 013c 1B68     		ldr	r3, [r3]
 9361 013e 9B68     		ldr	r3, [r3, #8]
 9362 0140 23F48051 		bic	r1, r3, #4096
 9363 0144 7B68     		ldr	r3, [r7, #4]
 9364 0146 DA6B     		ldr	r2, [r3, #60]
 9365 0148 7B68     		ldr	r3, [r7, #4]
 9366 014a 1B68     		ldr	r3, [r3]
 9367 014c 0A43     		orrs	r2, r2, r1
 9368 014e 9A60     		str	r2, [r3, #8]
 9369              	.L479:
3336:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3337:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3338:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
3339:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3340:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 9370              		.loc 1 3340 7
 9371 0150 7B68     		ldr	r3, [r7, #4]
 9372 0152 9B6A     		ldr	r3, [r3, #40]
 9373 0154 03F02003 		and	r3, r3, #32
 9374              		.loc 1 3340 6
 9375 0158 002B     		cmp	r3, #0
 9376 015a 18D0     		beq	.L481
3341:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
ARM GAS  /tmp/ccMjAmt3.s 			page 235


3342:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
 9377              		.loc 1 3342 5
 9378 015c 7B68     		ldr	r3, [r7, #4]
 9379 015e 1B6C     		ldr	r3, [r3, #64]
 9380 0160 002B     		cmp	r3, #0
 9381 0162 09D0     		beq	.L482
 9382              		.loc 1 3342 5 is_stmt 0 discriminator 1
 9383 0164 7B68     		ldr	r3, [r7, #4]
 9384 0166 1B6C     		ldr	r3, [r3, #64]
 9385 0168 B3F5005F 		cmp	r3, #8192
 9386 016c 04D0     		beq	.L482
 9387              		.loc 1 3342 5 discriminator 2
 9388 016e 40F60E51 		movw	r1, #3342
 9389 0172 3948     		ldr	r0, .L490
 9390 0174 FFF7FEFF 		bl	assert_failed
 9391              	.L482:
3343:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 9392              		.loc 1 3343 5 is_stmt 1
 9393 0178 7B68     		ldr	r3, [r7, #4]
 9394 017a 1B68     		ldr	r3, [r3]
 9395 017c 9B68     		ldr	r3, [r3, #8]
 9396 017e 23F40051 		bic	r1, r3, #8192
 9397 0182 7B68     		ldr	r3, [r7, #4]
 9398 0184 1A6C     		ldr	r2, [r3, #64]
 9399 0186 7B68     		ldr	r3, [r7, #4]
 9400 0188 1B68     		ldr	r3, [r3]
 9401 018a 0A43     		orrs	r2, r2, r1
 9402 018c 9A60     		str	r2, [r3, #8]
 9403              	.L481:
3344:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3345:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
3346:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3347:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3348:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 9404              		.loc 1 3348 7
 9405 018e 7B68     		ldr	r3, [r7, #4]
 9406 0190 9B6A     		ldr	r3, [r3, #40]
 9407 0192 03F04003 		and	r3, r3, #64
 9408              		.loc 1 3348 6
 9409 0196 002B     		cmp	r3, #0
 9410 0198 00F0D280 		beq	.L483
3349:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3350:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
 9411              		.loc 1 3350 5
 9412 019c 7B68     		ldr	r3, [r7, #4]
 9413 019e 1B68     		ldr	r3, [r3]
 9414 01a0 2E4A     		ldr	r2, .L490+4
 9415 01a2 9342     		cmp	r3, r2
 9416 01a4 00F08B80 		beq	.L484
 9417              		.loc 1 3350 5 is_stmt 0 discriminator 1
 9418 01a8 7B68     		ldr	r3, [r7, #4]
 9419 01aa 1B68     		ldr	r3, [r3]
 9420 01ac 2C4A     		ldr	r2, .L490+8
 9421 01ae 9342     		cmp	r3, r2
 9422 01b0 00F08580 		beq	.L484
 9423              		.loc 1 3350 5 discriminator 2
 9424 01b4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 236


 9425 01b6 1B68     		ldr	r3, [r3]
 9426 01b8 2A4A     		ldr	r2, .L490+12
 9427 01ba 9342     		cmp	r3, r2
 9428 01bc 7FD0     		beq	.L484
 9429              		.loc 1 3350 5 discriminator 3
 9430 01be 7B68     		ldr	r3, [r7, #4]
 9431 01c0 1B68     		ldr	r3, [r3]
 9432 01c2 294A     		ldr	r2, .L490+16
 9433 01c4 9342     		cmp	r3, r2
 9434 01c6 7AD0     		beq	.L484
 9435              		.loc 1 3350 5 discriminator 4
 9436 01c8 7B68     		ldr	r3, [r7, #4]
 9437 01ca 1B68     		ldr	r3, [r3]
 9438 01cc 274A     		ldr	r2, .L490+20
 9439 01ce 9342     		cmp	r3, r2
 9440 01d0 75D0     		beq	.L484
 9441              		.loc 1 3350 5 discriminator 5
 9442 01d2 7B68     		ldr	r3, [r7, #4]
 9443 01d4 1B68     		ldr	r3, [r3]
 9444 01d6 264A     		ldr	r2, .L490+24
 9445 01d8 9342     		cmp	r3, r2
 9446 01da 70D0     		beq	.L484
 9447              		.loc 1 3350 5 discriminator 6
 9448 01dc 7B68     		ldr	r3, [r7, #4]
 9449 01de 1B68     		ldr	r3, [r3]
 9450 01e0 244A     		ldr	r2, .L490+28
 9451 01e2 9342     		cmp	r3, r2
 9452 01e4 6BD0     		beq	.L484
 9453              		.loc 1 3350 5 discriminator 7
 9454 01e6 7B68     		ldr	r3, [r7, #4]
 9455 01e8 1B68     		ldr	r3, [r3]
 9456 01ea 234A     		ldr	r2, .L490+32
 9457 01ec 9342     		cmp	r3, r2
 9458 01ee 66D0     		beq	.L484
 9459              		.loc 1 3350 5 discriminator 8
 9460 01f0 7B68     		ldr	r3, [r7, #4]
 9461 01f2 1B68     		ldr	r3, [r3]
 9462 01f4 B3F1502F 		cmp	r3, #1342197760
 9463 01f8 61D0     		beq	.L484
 9464              		.loc 1 3350 5 discriminator 9
 9465 01fa 7B68     		ldr	r3, [r7, #4]
 9466 01fc 1B68     		ldr	r3, [r3]
 9467 01fe 1F4A     		ldr	r2, .L490+36
 9468 0200 9342     		cmp	r3, r2
 9469 0202 5CD0     		beq	.L484
 9470              		.loc 1 3350 5 discriminator 10
 9471 0204 7B68     		ldr	r3, [r7, #4]
 9472 0206 1B68     		ldr	r3, [r3]
 9473 0208 1D4A     		ldr	r2, .L490+40
 9474 020a 9342     		cmp	r3, r2
 9475 020c 57D0     		beq	.L484
 9476              		.loc 1 3350 5 discriminator 11
 9477 020e 7B68     		ldr	r3, [r7, #4]
 9478 0210 1B68     		ldr	r3, [r3]
 9479 0212 1C4A     		ldr	r2, .L490+44
 9480 0214 9342     		cmp	r3, r2
 9481 0216 52D0     		beq	.L484
ARM GAS  /tmp/ccMjAmt3.s 			page 237


 9482              		.loc 1 3350 5 discriminator 12
 9483 0218 7B68     		ldr	r3, [r7, #4]
 9484 021a 1B68     		ldr	r3, [r3]
 9485 021c 1A4A     		ldr	r2, .L490+48
 9486 021e 9342     		cmp	r3, r2
 9487 0220 4DD0     		beq	.L484
 9488              		.loc 1 3350 5 discriminator 13
 9489 0222 7B68     		ldr	r3, [r7, #4]
 9490 0224 1B68     		ldr	r3, [r3]
 9491 0226 194A     		ldr	r2, .L490+52
 9492 0228 9342     		cmp	r3, r2
 9493 022a 48D0     		beq	.L484
 9494              		.loc 1 3350 5 discriminator 14
 9495 022c 7B68     		ldr	r3, [r7, #4]
 9496 022e 1B68     		ldr	r3, [r3]
 9497 0230 174A     		ldr	r2, .L490+56
 9498 0232 9342     		cmp	r3, r2
 9499 0234 43D0     		beq	.L484
 9500              		.loc 1 3350 5 discriminator 15
 9501 0236 7B68     		ldr	r3, [r7, #4]
 9502 0238 1B68     		ldr	r3, [r3]
 9503 023a 164A     		ldr	r2, .L490+60
 9504 023c 9342     		cmp	r3, r2
 9505 023e 3ED0     		beq	.L484
 9506              		.loc 1 3350 5 discriminator 16
 9507 0240 7B68     		ldr	r3, [r7, #4]
 9508 0242 1B68     		ldr	r3, [r3]
 9509 0244 144A     		ldr	r2, .L490+64
 9510 0246 9342     		cmp	r3, r2
 9511 0248 39D0     		beq	.L484
 9512              		.loc 1 3350 5 discriminator 17
 9513 024a 7B68     		ldr	r3, [r7, #4]
 9514 024c 1B68     		ldr	r3, [r3]
 9515 024e 134A     		ldr	r2, .L490+68
 9516 0250 9342     		cmp	r3, r2
 9517 0252 34D0     		beq	.L484
 9518 0254 24E0     		b	.L491
 9519              	.L492:
 9520 0256 00BF     		.align	2
 9521              	.L490:
 9522 0258 00000000 		.word	.LC0
 9523 025c 00100052 		.word	1375735808
 9524 0260 00100042 		.word	1107300352
 9525 0264 00440050 		.word	1342194688
 9526 0268 00440040 		.word	1073759232
 9527 026c 00480050 		.word	1342195712
 9528 0270 00480040 		.word	1073760256
 9529 0274 004C0050 		.word	1342196736
 9530 0278 004C0040 		.word	1073761280
 9531 027c 00500040 		.word	1073762304
 9532 0280 00140052 		.word	1375736832
 9533 0284 00140042 		.word	1107301376
 9534 0288 00780050 		.word	1342208000
 9535 028c 00780040 		.word	1073772544
 9536 0290 007C0050 		.word	1342209024
 9537 0294 007C0040 		.word	1073773568
 9538 0298 00180052 		.word	1375737856
ARM GAS  /tmp/ccMjAmt3.s 			page 238


 9539 029c 00180042 		.word	1107302400
 9540              	.L491:
 9541              		.loc 1 3350 5 discriminator 18
 9542 02a0 7B68     		ldr	r3, [r7, #4]
 9543 02a2 1B68     		ldr	r3, [r3]
 9544 02a4 384A     		ldr	r2, .L493
 9545 02a6 9342     		cmp	r3, r2
 9546 02a8 09D0     		beq	.L484
 9547              		.loc 1 3350 5 discriminator 19
 9548 02aa 7B68     		ldr	r3, [r7, #4]
 9549 02ac 1B68     		ldr	r3, [r3]
 9550 02ae 374A     		ldr	r2, .L493+4
 9551 02b0 9342     		cmp	r3, r2
 9552 02b2 04D0     		beq	.L484
 9553              		.loc 1 3350 5 discriminator 20
 9554 02b4 40F61651 		movw	r1, #3350
 9555 02b8 3548     		ldr	r0, .L493+8
 9556 02ba FFF7FEFF 		bl	assert_failed
 9557              	.L484:
3351:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 9558              		.loc 1 3351 5 is_stmt 1
 9559 02be 7B68     		ldr	r3, [r7, #4]
 9560 02c0 5B6C     		ldr	r3, [r3, #68]
 9561 02c2 002B     		cmp	r3, #0
 9562 02c4 09D0     		beq	.L485
 9563              		.loc 1 3351 5 is_stmt 0 discriminator 1
 9564 02c6 7B68     		ldr	r3, [r7, #4]
 9565 02c8 5B6C     		ldr	r3, [r3, #68]
 9566 02ca B3F5801F 		cmp	r3, #1048576
 9567 02ce 04D0     		beq	.L485
 9568              		.loc 1 3351 5 discriminator 2
 9569 02d0 40F61751 		movw	r1, #3351
 9570 02d4 2E48     		ldr	r0, .L493+8
 9571 02d6 FFF7FEFF 		bl	assert_failed
 9572              	.L485:
3352:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 9573              		.loc 1 3352 5 is_stmt 1
 9574 02da 7B68     		ldr	r3, [r7, #4]
 9575 02dc 1B68     		ldr	r3, [r3]
 9576 02de 5B68     		ldr	r3, [r3, #4]
 9577 02e0 23F48011 		bic	r1, r3, #1048576
 9578 02e4 7B68     		ldr	r3, [r7, #4]
 9579 02e6 5A6C     		ldr	r2, [r3, #68]
 9580 02e8 7B68     		ldr	r3, [r7, #4]
 9581 02ea 1B68     		ldr	r3, [r3]
 9582 02ec 0A43     		orrs	r2, r2, r1
 9583 02ee 5A60     		str	r2, [r3, #4]
3353:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3354:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 9584              		.loc 1 3354 28
 9585 02f0 7B68     		ldr	r3, [r7, #4]
 9586 02f2 5B6C     		ldr	r3, [r3, #68]
 9587              		.loc 1 3354 8
 9588 02f4 B3F5801F 		cmp	r3, #1048576
 9589 02f8 22D1     		bne	.L483
3355:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3356:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
ARM GAS  /tmp/ccMjAmt3.s 			page 239


 9590              		.loc 1 3356 7
 9591 02fa 7B68     		ldr	r3, [r7, #4]
 9592 02fc 9B6C     		ldr	r3, [r3, #72]
 9593 02fe 002B     		cmp	r3, #0
 9594 0300 13D0     		beq	.L486
 9595              		.loc 1 3356 7 is_stmt 0 discriminator 1
 9596 0302 7B68     		ldr	r3, [r7, #4]
 9597 0304 9B6C     		ldr	r3, [r3, #72]
 9598 0306 B3F5001F 		cmp	r3, #2097152
 9599 030a 0ED0     		beq	.L486
 9600              		.loc 1 3356 7 discriminator 2
 9601 030c 7B68     		ldr	r3, [r7, #4]
 9602 030e 9B6C     		ldr	r3, [r3, #72]
 9603 0310 B3F5800F 		cmp	r3, #4194304
 9604 0314 09D0     		beq	.L486
 9605              		.loc 1 3356 7 discriminator 3
 9606 0316 7B68     		ldr	r3, [r7, #4]
 9607 0318 9B6C     		ldr	r3, [r3, #72]
 9608 031a B3F5C00F 		cmp	r3, #6291456
 9609 031e 04D0     		beq	.L486
 9610              		.loc 1 3356 7 discriminator 4
 9611 0320 40F61C51 		movw	r1, #3356
 9612 0324 1A48     		ldr	r0, .L493+8
 9613 0326 FFF7FEFF 		bl	assert_failed
 9614              	.L486:
3357:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 9615              		.loc 1 3357 7 is_stmt 1
 9616 032a 7B68     		ldr	r3, [r7, #4]
 9617 032c 1B68     		ldr	r3, [r3]
 9618 032e 5B68     		ldr	r3, [r3, #4]
 9619 0330 23F4C001 		bic	r1, r3, #6291456
 9620 0334 7B68     		ldr	r3, [r7, #4]
 9621 0336 9A6C     		ldr	r2, [r3, #72]
 9622 0338 7B68     		ldr	r3, [r7, #4]
 9623 033a 1B68     		ldr	r3, [r3]
 9624 033c 0A43     		orrs	r2, r2, r1
 9625 033e 5A60     		str	r2, [r3, #4]
 9626              	.L483:
3358:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3359:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3360:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3361:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3362:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 9627              		.loc 1 3362 7
 9628 0340 7B68     		ldr	r3, [r7, #4]
 9629 0342 9B6A     		ldr	r3, [r3, #40]
 9630 0344 03F08003 		and	r3, r3, #128
 9631              		.loc 1 3362 6
 9632 0348 002B     		cmp	r3, #0
 9633 034a 18D0     		beq	.L489
3363:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3364:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
 9634              		.loc 1 3364 5
 9635 034c 7B68     		ldr	r3, [r7, #4]
 9636 034e DB6C     		ldr	r3, [r3, #76]
 9637 0350 002B     		cmp	r3, #0
 9638 0352 09D0     		beq	.L488
ARM GAS  /tmp/ccMjAmt3.s 			page 240


 9639              		.loc 1 3364 5 is_stmt 0 discriminator 1
 9640 0354 7B68     		ldr	r3, [r7, #4]
 9641 0356 DB6C     		ldr	r3, [r3, #76]
 9642 0358 B3F5002F 		cmp	r3, #524288
 9643 035c 04D0     		beq	.L488
 9644              		.loc 1 3364 5 discriminator 2
 9645 035e 40F62451 		movw	r1, #3364
 9646 0362 0B48     		ldr	r0, .L493+8
 9647 0364 FFF7FEFF 		bl	assert_failed
 9648              	.L488:
3365:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 9649              		.loc 1 3365 5 is_stmt 1
 9650 0368 7B68     		ldr	r3, [r7, #4]
 9651 036a 1B68     		ldr	r3, [r3]
 9652 036c 5B68     		ldr	r3, [r3, #4]
 9653 036e 23F40021 		bic	r1, r3, #524288
 9654 0372 7B68     		ldr	r3, [r7, #4]
 9655 0374 DA6C     		ldr	r2, [r3, #76]
 9656 0376 7B68     		ldr	r3, [r7, #4]
 9657 0378 1B68     		ldr	r3, [r3]
 9658 037a 0A43     		orrs	r2, r2, r1
 9659 037c 5A60     		str	r2, [r3, #4]
 9660              	.L489:
3366:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3367:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 9661              		.loc 1 3367 1
 9662 037e 00BF     		nop
 9663 0380 0837     		adds	r7, r7, #8
 9664              		.cfi_def_cfa_offset 8
 9665 0382 BD46     		mov	sp, r7
 9666              		.cfi_def_cfa_register 13
 9667              		@ sp needed
 9668 0384 80BD     		pop	{r7, pc}
 9669              	.L494:
 9670 0386 00BF     		.align	2
 9671              	.L493:
 9672 0388 001C0052 		.word	1375738880
 9673 038c 001C0042 		.word	1107303424
 9674 0390 00000000 		.word	.LC0
 9675              		.cfi_endproc
 9676              	.LFE879:
 9678              		.section	.text.UART_CheckIdleState,"ax",%progbits
 9679              		.align	1
 9680              		.global	UART_CheckIdleState
 9681              		.syntax unified
 9682              		.thumb
 9683              		.thumb_func
 9685              	UART_CheckIdleState:
 9686              	.LFB880:
3368:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3369:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3370:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief Check the UART Idle State.
3371:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
3372:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
3373:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3374:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3375:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
ARM GAS  /tmp/ccMjAmt3.s 			page 241


 9687              		.loc 1 3375 1
 9688              		.cfi_startproc
 9689              		@ args = 0, pretend = 0, frame = 88
 9690              		@ frame_needed = 1, uses_anonymous_args = 0
 9691 0000 80B5     		push	{r7, lr}
 9692              		.cfi_def_cfa_offset 8
 9693              		.cfi_offset 7, -8
 9694              		.cfi_offset 14, -4
 9695 0002 98B0     		sub	sp, sp, #96
 9696              		.cfi_def_cfa_offset 104
 9697 0004 02AF     		add	r7, sp, #8
 9698              		.cfi_def_cfa 7, 96
 9699 0006 7860     		str	r0, [r7, #4]
3376:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t tickstart;
3377:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3378:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3379:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 9700              		.loc 1 3379 20
 9701 0008 7B68     		ldr	r3, [r7, #4]
 9702 000a 0022     		movs	r2, #0
 9703 000c C3F89020 		str	r2, [r3, #144]
3380:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3381:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Init tickstart for timeout management */
3382:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   tickstart = HAL_GetTick();
 9704              		.loc 1 3382 15
 9705 0010 FFF7FEFF 		bl	HAL_GetTick
 9706 0014 7865     		str	r0, [r7, #84]
3383:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3384:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3385:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 9707              		.loc 1 3385 13
 9708 0016 7B68     		ldr	r3, [r7, #4]
 9709 0018 1B68     		ldr	r3, [r3]
 9710              		.loc 1 3385 23
 9711 001a 1B68     		ldr	r3, [r3]
 9712              		.loc 1 3385 29
 9713 001c 03F00803 		and	r3, r3, #8
 9714              		.loc 1 3385 6
 9715 0020 082B     		cmp	r3, #8
 9716 0022 2FD1     		bne	.L496
3386:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3387:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3388:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 9717              		.loc 1 3388 9
 9718 0024 6FF07E43 		mvn	r3, #-33554432
 9719 0028 0093     		str	r3, [sp]
 9720 002a 7B6D     		ldr	r3, [r7, #84]
 9721 002c 0022     		movs	r2, #0
 9722 002e 4FF40011 		mov	r1, #2097152
 9723 0032 7868     		ldr	r0, [r7, #4]
 9724 0034 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 9725 0038 0346     		mov	r3, r0
 9726              		.loc 1 3388 8 discriminator 1
 9727 003a 002B     		cmp	r3, #0
 9728 003c 22D0     		beq	.L496
 9729              	.L499:
 9730              	.LBB754:
ARM GAS  /tmp/ccMjAmt3.s 			page 242


3389:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3390:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable TXE interrupt for the interrupt process */
3391:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
 9731              		.loc 1 3391 7 discriminator 1
 9732 003e 7B68     		ldr	r3, [r7, #4]
 9733 0040 1B68     		ldr	r3, [r3]
 9734 0042 BB63     		str	r3, [r7, #56]
 9735              	.LBB755:
 9736              	.LBB756:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9737              		.loc 2 480 4
 9738 0044 BB6B     		ldr	r3, [r7, #56]
 9739              		.syntax unified
 9740              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9741 0046 53E8003F 		ldrex r3, [r3]
 9742              	@ 0 "" 2
 9743              		.thumb
 9744              		.syntax unified
 9745 004a 7B63     		str	r3, [r7, #52]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9746              		.loc 2 481 10
 9747 004c 7B6B     		ldr	r3, [r7, #52]
 9748              	.LBE756:
 9749              	.LBE755:
 9750              		.loc 1 3391 7 discriminator 1
 9751 004e 23F08003 		bic	r3, r3, #128
 9752 0052 3B65     		str	r3, [r7, #80]
 9753 0054 7B68     		ldr	r3, [r7, #4]
 9754 0056 1B68     		ldr	r3, [r3]
 9755 0058 1A46     		mov	r2, r3
 9756 005a 3B6D     		ldr	r3, [r7, #80]
 9757 005c 7B64     		str	r3, [r7, #68]
 9758 005e 3A64     		str	r2, [r7, #64]
 9759              	.LBB757:
 9760              	.LBB758:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9761              		.loc 2 531 4
 9762 0060 396C     		ldr	r1, [r7, #64]
 9763 0062 7A6C     		ldr	r2, [r7, #68]
 9764              		.syntax unified
 9765              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9766 0064 41E80023 		strex r3, r2, [r1]
 9767              	@ 0 "" 2
 9768              		.thumb
 9769              		.syntax unified
 9770 0068 FB63     		str	r3, [r7, #60]
 9771              		.loc 2 532 10
 9772 006a FB6B     		ldr	r3, [r7, #60]
 9773              	.LBE758:
 9774              	.LBE757:
 9775              		.loc 1 3391 7 discriminator 1
 9776 006c 002B     		cmp	r3, #0
 9777 006e E6D1     		bne	.L499
 9778              	.LBE754:
3392:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3393:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 9779              		.loc 1 3393 21
ARM GAS  /tmp/ccMjAmt3.s 			page 243


 9780 0070 7B68     		ldr	r3, [r7, #4]
 9781 0072 2022     		movs	r2, #32
 9782 0074 C3F88820 		str	r2, [r3, #136]
3394:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3395:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 9783              		.loc 1 3395 7
 9784 0078 7B68     		ldr	r3, [r7, #4]
 9785 007a 0022     		movs	r2, #0
 9786 007c 83F88420 		strb	r2, [r3, #132]
3396:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3397:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Timeout occurred */
3398:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_TIMEOUT;
 9787              		.loc 1 3398 14
 9788 0080 0323     		movs	r3, #3
 9789 0082 63E0     		b	.L500
 9790              	.L496:
3399:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3400:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3401:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3402:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3403:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 9791              		.loc 1 3403 13
 9792 0084 7B68     		ldr	r3, [r7, #4]
 9793 0086 1B68     		ldr	r3, [r3]
 9794              		.loc 1 3403 23
 9795 0088 1B68     		ldr	r3, [r3]
 9796              		.loc 1 3403 29
 9797 008a 03F00403 		and	r3, r3, #4
 9798              		.loc 1 3403 6
 9799 008e 042B     		cmp	r3, #4
 9800 0090 49D1     		bne	.L501
3404:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3405:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Wait until REACK flag is set */
3406:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 9801              		.loc 1 3406 9
 9802 0092 6FF07E43 		mvn	r3, #-33554432
 9803 0096 0093     		str	r3, [sp]
 9804 0098 7B6D     		ldr	r3, [r7, #84]
 9805 009a 0022     		movs	r2, #0
 9806 009c 4FF48001 		mov	r1, #4194304
 9807 00a0 7868     		ldr	r0, [r7, #4]
 9808 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 9809 00a6 0346     		mov	r3, r0
 9810              		.loc 1 3406 8 discriminator 1
 9811 00a8 002B     		cmp	r3, #0
 9812 00aa 3CD0     		beq	.L501
 9813              	.L504:
 9814              	.LBB759:
3407:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3408:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
3409:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       interrupts for the interrupt process */
3410:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 9815              		.loc 1 3410 7 discriminator 1
 9816 00ac 7B68     		ldr	r3, [r7, #4]
 9817 00ae 1B68     		ldr	r3, [r3]
 9818 00b0 7B62     		str	r3, [r7, #36]
 9819              	.LBB760:
ARM GAS  /tmp/ccMjAmt3.s 			page 244


 9820              	.LBB761:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9821              		.loc 2 480 4
 9822 00b2 7B6A     		ldr	r3, [r7, #36]
 9823              		.syntax unified
 9824              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9825 00b4 53E8003F 		ldrex r3, [r3]
 9826              	@ 0 "" 2
 9827              		.thumb
 9828              		.syntax unified
 9829 00b8 3B62     		str	r3, [r7, #32]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9830              		.loc 2 481 10
 9831 00ba 3B6A     		ldr	r3, [r7, #32]
 9832              	.LBE761:
 9833              	.LBE760:
 9834              		.loc 1 3410 7 discriminator 1
 9835 00bc 23F49073 		bic	r3, r3, #288
 9836 00c0 FB64     		str	r3, [r7, #76]
 9837 00c2 7B68     		ldr	r3, [r7, #4]
 9838 00c4 1B68     		ldr	r3, [r3]
 9839 00c6 1A46     		mov	r2, r3
 9840 00c8 FB6C     		ldr	r3, [r7, #76]
 9841 00ca 3B63     		str	r3, [r7, #48]
 9842 00cc FA62     		str	r2, [r7, #44]
 9843              	.LBB762:
 9844              	.LBB763:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9845              		.loc 2 531 4
 9846 00ce F96A     		ldr	r1, [r7, #44]
 9847 00d0 3A6B     		ldr	r2, [r7, #48]
 9848              		.syntax unified
 9849              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9850 00d2 41E80023 		strex r3, r2, [r1]
 9851              	@ 0 "" 2
 9852              		.thumb
 9853              		.syntax unified
 9854 00d6 BB62     		str	r3, [r7, #40]
 9855              		.loc 2 532 10
 9856 00d8 BB6A     		ldr	r3, [r7, #40]
 9857              	.LBE763:
 9858              	.LBE762:
 9859              		.loc 1 3410 7 discriminator 1
 9860 00da 002B     		cmp	r3, #0
 9861 00dc E6D1     		bne	.L504
 9862              	.L507:
 9863              	.LBE759:
 9864              	.LBB764:
3411:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9865              		.loc 1 3411 7 discriminator 1
 9866 00de 7B68     		ldr	r3, [r7, #4]
 9867 00e0 1B68     		ldr	r3, [r3]
 9868 00e2 0833     		adds	r3, r3, #8
 9869 00e4 3B61     		str	r3, [r7, #16]
 9870              	.LBB765:
 9871              	.LBB766:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/ccMjAmt3.s 			page 245


 9872              		.loc 2 480 4
 9873 00e6 3B69     		ldr	r3, [r7, #16]
 9874              		.syntax unified
 9875              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9876 00e8 53E8003F 		ldrex r3, [r3]
 9877              	@ 0 "" 2
 9878              		.thumb
 9879              		.syntax unified
 9880 00ec FB60     		str	r3, [r7, #12]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9881              		.loc 2 481 10
 9882 00ee FB68     		ldr	r3, [r7, #12]
 9883              	.LBE766:
 9884              	.LBE765:
 9885              		.loc 1 3411 7 discriminator 1
 9886 00f0 23F00103 		bic	r3, r3, #1
 9887 00f4 BB64     		str	r3, [r7, #72]
 9888 00f6 7B68     		ldr	r3, [r7, #4]
 9889 00f8 1B68     		ldr	r3, [r3]
 9890 00fa 0833     		adds	r3, r3, #8
 9891 00fc BA6C     		ldr	r2, [r7, #72]
 9892 00fe FA61     		str	r2, [r7, #28]
 9893 0100 BB61     		str	r3, [r7, #24]
 9894              	.LBB767:
 9895              	.LBB768:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9896              		.loc 2 531 4
 9897 0102 B969     		ldr	r1, [r7, #24]
 9898 0104 FA69     		ldr	r2, [r7, #28]
 9899              		.syntax unified
 9900              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9901 0106 41E80023 		strex r3, r2, [r1]
 9902              	@ 0 "" 2
 9903              		.thumb
 9904              		.syntax unified
 9905 010a 7B61     		str	r3, [r7, #20]
 9906              		.loc 2 532 10
 9907 010c 7B69     		ldr	r3, [r7, #20]
 9908              	.LBE768:
 9909              	.LBE767:
 9910              		.loc 1 3411 7 discriminator 1
 9911 010e 002B     		cmp	r3, #0
 9912 0110 E5D1     		bne	.L507
 9913              	.LBE764:
3412:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3413:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9914              		.loc 1 3413 22
 9915 0112 7B68     		ldr	r3, [r7, #4]
 9916 0114 2022     		movs	r2, #32
 9917 0116 C3F88C20 		str	r2, [r3, #140]
3414:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3415:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 9918              		.loc 1 3415 7
 9919 011a 7B68     		ldr	r3, [r7, #4]
 9920 011c 0022     		movs	r2, #0
 9921 011e 83F88420 		strb	r2, [r3, #132]
3416:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 246


3417:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Timeout occurred */
3418:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_TIMEOUT;
 9922              		.loc 1 3418 14
 9923 0122 0323     		movs	r3, #3
 9924 0124 12E0     		b	.L500
 9925              	.L501:
3419:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3420:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3421:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3422:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Initialize the UART State */
3423:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9926              		.loc 1 3423 17
 9927 0126 7B68     		ldr	r3, [r7, #4]
 9928 0128 2022     		movs	r2, #32
 9929 012a C3F88820 		str	r2, [r3, #136]
3424:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9930              		.loc 1 3424 18
 9931 012e 7B68     		ldr	r3, [r7, #4]
 9932 0130 2022     		movs	r2, #32
 9933 0132 C3F88C20 		str	r2, [r3, #140]
3425:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9934              		.loc 1 3425 24
 9935 0136 7B68     		ldr	r3, [r7, #4]
 9936 0138 0022     		movs	r2, #0
 9937 013a DA66     		str	r2, [r3, #108]
3426:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 9938              		.loc 1 3426 22
 9939 013c 7B68     		ldr	r3, [r7, #4]
 9940 013e 0022     		movs	r2, #0
 9941 0140 1A67     		str	r2, [r3, #112]
3427:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3428:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 9942              		.loc 1 3428 3
 9943 0142 7B68     		ldr	r3, [r7, #4]
 9944 0144 0022     		movs	r2, #0
 9945 0146 83F88420 		strb	r2, [r3, #132]
3429:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3430:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 9946              		.loc 1 3430 10
 9947 014a 0023     		movs	r3, #0
 9948              	.L500:
3431:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 9949              		.loc 1 3431 1
 9950 014c 1846     		mov	r0, r3
 9951 014e 5837     		adds	r7, r7, #88
 9952              		.cfi_def_cfa_offset 8
 9953 0150 BD46     		mov	sp, r7
 9954              		.cfi_def_cfa_register 13
 9955              		@ sp needed
 9956 0152 80BD     		pop	{r7, pc}
 9957              		.cfi_endproc
 9958              	.LFE880:
 9960              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 9961              		.align	1
 9962              		.global	UART_WaitOnFlagUntilTimeout
 9963              		.syntax unified
 9964              		.thumb
ARM GAS  /tmp/ccMjAmt3.s 			page 247


 9965              		.thumb_func
 9967              	UART_WaitOnFlagUntilTimeout:
 9968              	.LFB881:
3432:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3433:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3434:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3435:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *                  until a flag is no longer in the specified status.
3436:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart     UART handle.
3437:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3438:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Status    The actual Flag status (SET or RESET)
3439:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Tickstart Tick start value
3440:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param Timeout   Timeout duration
3441:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
3442:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3443:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3444:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3445:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 9969              		.loc 1 3445 1
 9970              		.cfi_startproc
 9971              		@ args = 4, pretend = 0, frame = 16
 9972              		@ frame_needed = 1, uses_anonymous_args = 0
 9973 0000 80B5     		push	{r7, lr}
 9974              		.cfi_def_cfa_offset 8
 9975              		.cfi_offset 7, -8
 9976              		.cfi_offset 14, -4
 9977 0002 84B0     		sub	sp, sp, #16
 9978              		.cfi_def_cfa_offset 24
 9979 0004 00AF     		add	r7, sp, #0
 9980              		.cfi_def_cfa_register 7
 9981 0006 F860     		str	r0, [r7, #12]
 9982 0008 B960     		str	r1, [r7, #8]
 9983 000a 3B60     		str	r3, [r7]
 9984 000c 1346     		mov	r3, r2
 9985 000e FB71     		strb	r3, [r7, #7]
3446:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Wait until flag is set */
3447:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 9986              		.loc 1 3447 9
 9987 0010 4FE0     		b	.L510
 9988              	.L516:
3448:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3449:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Check for the Timeout */
3450:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 9989              		.loc 1 3450 8
 9990 0012 BB69     		ldr	r3, [r7, #24]
 9991 0014 B3F1FF3F 		cmp	r3, #-1
 9992 0018 4BD0     		beq	.L510
3451:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3452:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 9993              		.loc 1 3452 13
 9994 001a FFF7FEFF 		bl	HAL_GetTick
 9995 001e 0246     		mov	r2, r0
 9996              		.loc 1 3452 27 discriminator 1
 9997 0020 3B68     		ldr	r3, [r7]
 9998 0022 D31A     		subs	r3, r2, r3
 9999              		.loc 1 3452 10 discriminator 1
 10000 0024 BA69     		ldr	r2, [r7, #24]
 10001 0026 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccMjAmt3.s 			page 248


 10002 0028 02D3     		bcc	.L511
 10003              		.loc 1 3452 51 discriminator 1
 10004 002a BB69     		ldr	r3, [r7, #24]
 10005 002c 002B     		cmp	r3, #0
 10006 002e 01D1     		bne	.L512
 10007              	.L511:
3453:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
3454:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3455:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         return HAL_TIMEOUT;
 10008              		.loc 1 3455 16
 10009 0030 0323     		movs	r3, #3
 10010 0032 4EE0     		b	.L513
 10011              	.L512:
3456:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
3457:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3458:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag 
 10012              		.loc 1 3458 12
 10013 0034 FB68     		ldr	r3, [r7, #12]
 10014 0036 1B68     		ldr	r3, [r3]
 10015 0038 1B68     		ldr	r3, [r3]
 10016 003a 03F00403 		and	r3, r3, #4
 10017              		.loc 1 3458 10
 10018 003e 002B     		cmp	r3, #0
 10019 0040 37D0     		beq	.L510
 10020              		.loc 1 3458 64 discriminator 1
 10021 0042 BB68     		ldr	r3, [r7, #8]
 10022 0044 802B     		cmp	r3, #128
 10023 0046 34D0     		beq	.L510
 10024              		.loc 1 3458 91 discriminator 2
 10025 0048 BB68     		ldr	r3, [r7, #8]
 10026 004a 402B     		cmp	r3, #64
 10027 004c 31D0     		beq	.L510
3459:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
3460:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 10028              		.loc 1 3460 13
 10029 004e FB68     		ldr	r3, [r7, #12]
 10030 0050 1B68     		ldr	r3, [r3]
 10031 0052 DB69     		ldr	r3, [r3, #28]
 10032 0054 03F00803 		and	r3, r3, #8
 10033              		.loc 1 3460 12
 10034 0058 082B     		cmp	r3, #8
 10035 005a 10D1     		bne	.L515
3461:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
3462:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Clear Overrun Error flag*/
3463:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 10036              		.loc 1 3463 11
 10037 005c FB68     		ldr	r3, [r7, #12]
 10038 005e 1B68     		ldr	r3, [r3]
 10039 0060 0822     		movs	r2, #8
 10040 0062 1A62     		str	r2, [r3, #32]
3464:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3465:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Blocking error : transfer is aborted
3466:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           Set the UART state ready to be able to start again the process,
3467:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           Disable Rx Interrupts if ongoing */
3468:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           UART_EndRxTransfer(huart);
 10041              		.loc 1 3468 11
 10042 0064 F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/ccMjAmt3.s 			page 249


 10043 0066 FFF7FEFF 		bl	UART_EndRxTransfer
3469:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3470:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_ORE;
 10044              		.loc 1 3470 28
 10045 006a FB68     		ldr	r3, [r7, #12]
 10046 006c 0822     		movs	r2, #8
 10047 006e C3F89020 		str	r2, [r3, #144]
3471:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3472:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Process Unlocked */
3473:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 10048              		.loc 1 3473 11
 10049 0072 FB68     		ldr	r3, [r7, #12]
 10050 0074 0022     		movs	r2, #0
 10051 0076 83F88420 		strb	r2, [r3, #132]
3474:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3475:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           return HAL_ERROR;
 10052              		.loc 1 3475 18
 10053 007a 0123     		movs	r3, #1
 10054 007c 29E0     		b	.L513
 10055              	.L515:
3476:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
3477:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 10056              		.loc 1 3477 13
 10057 007e FB68     		ldr	r3, [r7, #12]
 10058 0080 1B68     		ldr	r3, [r3]
 10059 0082 DB69     		ldr	r3, [r3, #28]
 10060 0084 03F40063 		and	r3, r3, #2048
 10061              		.loc 1 3477 12
 10062 0088 B3F5006F 		cmp	r3, #2048
 10063 008c 11D1     		bne	.L510
3478:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
3479:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3480:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 10064              		.loc 1 3480 11
 10065 008e FB68     		ldr	r3, [r7, #12]
 10066 0090 1B68     		ldr	r3, [r3]
 10067 0092 4FF40062 		mov	r2, #2048
 10068 0096 1A62     		str	r2, [r3, #32]
3481:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3482:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Blocking error : transfer is aborted
3483:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           Set the UART state ready to be able to start again the process,
3484:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           Disable Rx Interrupts if ongoing */
3485:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           UART_EndRxTransfer(huart);
 10069              		.loc 1 3485 11
 10070 0098 F868     		ldr	r0, [r7, #12]
 10071 009a FFF7FEFF 		bl	UART_EndRxTransfer
3486:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3487:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 10072              		.loc 1 3487 28
 10073 009e FB68     		ldr	r3, [r7, #12]
 10074 00a0 2022     		movs	r2, #32
 10075 00a2 C3F89020 		str	r2, [r3, #144]
3488:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3489:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Process Unlocked */
3490:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 10076              		.loc 1 3490 11
 10077 00a6 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccMjAmt3.s 			page 250


 10078 00a8 0022     		movs	r2, #0
 10079 00aa 83F88420 		strb	r2, [r3, #132]
3491:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3492:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           return HAL_TIMEOUT;
 10080              		.loc 1 3492 18
 10081 00ae 0323     		movs	r3, #3
 10082 00b0 0FE0     		b	.L513
 10083              	.L510:
3447:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 10084              		.loc 1 3447 11
 10085 00b2 FB68     		ldr	r3, [r7, #12]
 10086 00b4 1B68     		ldr	r3, [r3]
 10087 00b6 DA69     		ldr	r2, [r3, #28]
 10088 00b8 BB68     		ldr	r3, [r7, #8]
 10089 00ba 1340     		ands	r3, r3, r2
3447:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 10090              		.loc 1 3447 50
 10091 00bc BA68     		ldr	r2, [r7, #8]
 10092 00be 9A42     		cmp	r2, r3
 10093 00c0 0CBF     		ite	eq
 10094 00c2 0123     		moveq	r3, #1
 10095 00c4 0023     		movne	r3, #0
 10096 00c6 DBB2     		uxtb	r3, r3
 10097 00c8 1A46     		mov	r2, r3
3447:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
 10098              		.loc 1 3447 59
 10099 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10100 00cc 9A42     		cmp	r2, r3
 10101 00ce A0D0     		beq	.L516
3493:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
3494:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
3495:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3496:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3497:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 10102              		.loc 1 3497 10
 10103 00d0 0023     		movs	r3, #0
 10104              	.L513:
3498:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 10105              		.loc 1 3498 1
 10106 00d2 1846     		mov	r0, r3
 10107 00d4 1037     		adds	r7, r7, #16
 10108              		.cfi_def_cfa_offset 8
 10109 00d6 BD46     		mov	sp, r7
 10110              		.cfi_def_cfa_register 13
 10111              		@ sp needed
 10112 00d8 80BD     		pop	{r7, pc}
 10113              		.cfi_endproc
 10114              	.LFE881:
 10116              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 10117              		.align	1
 10118              		.global	UART_Start_Receive_IT
 10119              		.syntax unified
 10120              		.thumb
 10121              		.thumb_func
 10123              	UART_Start_Receive_IT:
 10124              	.LFB882:
3499:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 251


3500:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3501:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3502:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3503:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3504:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3505:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3506:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
3507:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3508:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3509:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
3510:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3511:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3512:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 10125              		.loc 1 3512 1
 10126              		.cfi_startproc
 10127              		@ args = 0, pretend = 0, frame = 136
 10128              		@ frame_needed = 1, uses_anonymous_args = 0
 10129              		@ link register save eliminated.
 10130 0000 80B4     		push	{r7}
 10131              		.cfi_def_cfa_offset 4
 10132              		.cfi_offset 7, -4
 10133 0002 A3B0     		sub	sp, sp, #140
 10134              		.cfi_def_cfa_offset 144
 10135 0004 00AF     		add	r7, sp, #0
 10136              		.cfi_def_cfa_register 7
 10137 0006 F860     		str	r0, [r7, #12]
 10138 0008 B960     		str	r1, [r7, #8]
 10139 000a 1346     		mov	r3, r2
 10140 000c FB80     		strh	r3, [r7, #6]	@ movhi
3513:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 10141              		.loc 1 3513 22
 10142 000e FB68     		ldr	r3, [r7, #12]
 10143 0010 BA68     		ldr	r2, [r7, #8]
 10144 0012 9A65     		str	r2, [r3, #88]
3514:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxXferSize  = Size;
 10145              		.loc 1 3514 22
 10146 0014 FB68     		ldr	r3, [r7, #12]
 10147 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 10148 0018 A3F85C20 		strh	r2, [r3, #92]	@ movhi
3515:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxXferCount = Size;
 10149              		.loc 1 3515 22
 10150 001c FB68     		ldr	r3, [r7, #12]
 10151 001e FA88     		ldrh	r2, [r7, #6]	@ movhi
 10152 0020 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3516:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxISR       = NULL;
 10153              		.loc 1 3516 22
 10154 0024 FB68     		ldr	r3, [r7, #12]
 10155 0026 0022     		movs	r2, #0
 10156 0028 5A67     		str	r2, [r3, #116]
3517:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3518:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3519:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
 10157              		.loc 1 3519 3
 10158 002a FB68     		ldr	r3, [r7, #12]
 10159 002c 9B68     		ldr	r3, [r3, #8]
 10160 002e B3F5805F 		cmp	r3, #4096
 10161 0032 0ED1     		bne	.L518
ARM GAS  /tmp/ccMjAmt3.s 			page 252


 10162              		.loc 1 3519 3 is_stmt 0 discriminator 1
 10163 0034 FB68     		ldr	r3, [r7, #12]
 10164 0036 1B69     		ldr	r3, [r3, #16]
 10165 0038 002B     		cmp	r3, #0
 10166 003a 05D1     		bne	.L519
 10167              		.loc 1 3519 3 discriminator 3
 10168 003c FB68     		ldr	r3, [r7, #12]
 10169 003e 40F2FF12 		movw	r2, #511
 10170 0042 A3F86020 		strh	r2, [r3, #96]	@ movhi
 10171 0046 2DE0     		b	.L520
 10172              	.L519:
 10173              		.loc 1 3519 3 discriminator 4
 10174 0048 FB68     		ldr	r3, [r7, #12]
 10175 004a FF22     		movs	r2, #255
 10176 004c A3F86020 		strh	r2, [r3, #96]	@ movhi
 10177 0050 28E0     		b	.L520
 10178              	.L518:
 10179              		.loc 1 3519 3 discriminator 2
 10180 0052 FB68     		ldr	r3, [r7, #12]
 10181 0054 9B68     		ldr	r3, [r3, #8]
 10182 0056 002B     		cmp	r3, #0
 10183 0058 0DD1     		bne	.L521
 10184              		.loc 1 3519 3 discriminator 5
 10185 005a FB68     		ldr	r3, [r7, #12]
 10186 005c 1B69     		ldr	r3, [r3, #16]
 10187 005e 002B     		cmp	r3, #0
 10188 0060 04D1     		bne	.L522
 10189              		.loc 1 3519 3 discriminator 7
 10190 0062 FB68     		ldr	r3, [r7, #12]
 10191 0064 FF22     		movs	r2, #255
 10192 0066 A3F86020 		strh	r2, [r3, #96]	@ movhi
 10193 006a 1BE0     		b	.L520
 10194              	.L522:
 10195              		.loc 1 3519 3 discriminator 8
 10196 006c FB68     		ldr	r3, [r7, #12]
 10197 006e 7F22     		movs	r2, #127
 10198 0070 A3F86020 		strh	r2, [r3, #96]	@ movhi
 10199 0074 16E0     		b	.L520
 10200              	.L521:
 10201              		.loc 1 3519 3 discriminator 6
 10202 0076 FB68     		ldr	r3, [r7, #12]
 10203 0078 9B68     		ldr	r3, [r3, #8]
 10204 007a B3F1805F 		cmp	r3, #268435456
 10205 007e 0DD1     		bne	.L523
 10206              		.loc 1 3519 3 discriminator 9
 10207 0080 FB68     		ldr	r3, [r7, #12]
 10208 0082 1B69     		ldr	r3, [r3, #16]
 10209 0084 002B     		cmp	r3, #0
 10210 0086 04D1     		bne	.L524
 10211              		.loc 1 3519 3 discriminator 11
 10212 0088 FB68     		ldr	r3, [r7, #12]
 10213 008a 7F22     		movs	r2, #127
 10214 008c A3F86020 		strh	r2, [r3, #96]	@ movhi
 10215 0090 08E0     		b	.L520
 10216              	.L524:
 10217              		.loc 1 3519 3 discriminator 12
 10218 0092 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccMjAmt3.s 			page 253


 10219 0094 3F22     		movs	r2, #63
 10220 0096 A3F86020 		strh	r2, [r3, #96]	@ movhi
 10221 009a 03E0     		b	.L520
 10222              	.L523:
 10223              		.loc 1 3519 3 discriminator 10
 10224 009c FB68     		ldr	r3, [r7, #12]
 10225 009e 0022     		movs	r2, #0
 10226 00a0 A3F86020 		strh	r2, [r3, #96]	@ movhi
 10227              	.L520:
3520:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3521:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 10228              		.loc 1 3521 20 is_stmt 1
 10229 00a4 FB68     		ldr	r3, [r7, #12]
 10230 00a6 0022     		movs	r2, #0
 10231 00a8 C3F89020 		str	r2, [r3, #144]
3522:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 10232              		.loc 1 3522 18
 10233 00ac FB68     		ldr	r3, [r7, #12]
 10234 00ae 2222     		movs	r2, #34
 10235 00b0 C3F88C20 		str	r2, [r3, #140]
 10236              	.L527:
 10237              	.LBB769:
3523:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3524:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3525:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 10238              		.loc 1 3525 3 discriminator 1
 10239 00b4 FB68     		ldr	r3, [r7, #12]
 10240 00b6 1B68     		ldr	r3, [r3]
 10241 00b8 0833     		adds	r3, r3, #8
 10242 00ba 7B66     		str	r3, [r7, #100]
 10243              	.LBB770:
 10244              	.LBB771:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10245              		.loc 2 480 4
 10246 00bc 7B6E     		ldr	r3, [r7, #100]
 10247              		.syntax unified
 10248              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10249 00be 53E8003F 		ldrex r3, [r3]
 10250              	@ 0 "" 2
 10251              		.thumb
 10252              		.syntax unified
 10253 00c2 3B66     		str	r3, [r7, #96]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10254              		.loc 2 481 10
 10255 00c4 3B6E     		ldr	r3, [r7, #96]
 10256              	.LBE771:
 10257              	.LBE770:
 10258              		.loc 1 3525 3 discriminator 1
 10259 00c6 43F00103 		orr	r3, r3, #1
 10260 00ca C7F88430 		str	r3, [r7, #132]
 10261 00ce FB68     		ldr	r3, [r7, #12]
 10262 00d0 1B68     		ldr	r3, [r3]
 10263 00d2 0833     		adds	r3, r3, #8
 10264 00d4 D7F88420 		ldr	r2, [r7, #132]
 10265 00d8 3A67     		str	r2, [r7, #112]
 10266 00da FB66     		str	r3, [r7, #108]
 10267              	.LBB772:
ARM GAS  /tmp/ccMjAmt3.s 			page 254


 10268              	.LBB773:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10269              		.loc 2 531 4
 10270 00dc F96E     		ldr	r1, [r7, #108]
 10271 00de 3A6F     		ldr	r2, [r7, #112]
 10272              		.syntax unified
 10273              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10274 00e0 41E80023 		strex r3, r2, [r1]
 10275              	@ 0 "" 2
 10276              		.thumb
 10277              		.syntax unified
 10278 00e4 BB66     		str	r3, [r7, #104]
 10279              		.loc 2 532 10
 10280 00e6 BB6E     		ldr	r3, [r7, #104]
 10281              	.LBE773:
 10282              	.LBE772:
 10283              		.loc 1 3525 3 discriminator 1
 10284 00e8 002B     		cmp	r3, #0
 10285 00ea E3D1     		bne	.L527
 10286              	.LBE769:
3526:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3527:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Configure Rx interrupt processing */
3528:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 10287              		.loc 1 3528 13
 10288 00ec FB68     		ldr	r3, [r7, #12]
 10289 00ee 5B6E     		ldr	r3, [r3, #100]
 10290              		.loc 1 3528 6
 10291 00f0 B3F1005F 		cmp	r3, #536870912
 10292 00f4 4FD1     		bne	.L528
 10293              		.loc 1 3528 66 discriminator 1
 10294 00f6 FB68     		ldr	r3, [r7, #12]
 10295 00f8 B3F86830 		ldrh	r3, [r3, #104]
 10296              		.loc 1 3528 49 discriminator 1
 10297 00fc FA88     		ldrh	r2, [r7, #6]
 10298 00fe 9A42     		cmp	r2, r3
 10299 0100 49D3     		bcc	.L528
3529:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3530:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3531:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 10300              		.loc 1 3531 21
 10301 0102 FB68     		ldr	r3, [r7, #12]
 10302 0104 9B68     		ldr	r3, [r3, #8]
 10303              		.loc 1 3531 8
 10304 0106 B3F5805F 		cmp	r3, #4096
 10305 010a 07D1     		bne	.L529
 10306              		.loc 1 3531 71 discriminator 1
 10307 010c FB68     		ldr	r3, [r7, #12]
 10308 010e 1B69     		ldr	r3, [r3, #16]
 10309              		.loc 1 3531 56 discriminator 1
 10310 0110 002B     		cmp	r3, #0
 10311 0112 03D1     		bne	.L529
3532:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3533:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT_FIFOEN;
 10312              		.loc 1 3533 20
 10313 0114 FB68     		ldr	r3, [r7, #12]
 10314 0116 474A     		ldr	r2, .L548
 10315 0118 5A67     		str	r2, [r3, #116]
ARM GAS  /tmp/ccMjAmt3.s 			page 255


 10316 011a 02E0     		b	.L530
 10317              	.L529:
3534:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3535:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
3536:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3537:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 10318              		.loc 1 3537 20
 10319 011c FB68     		ldr	r3, [r7, #12]
 10320 011e 464A     		ldr	r2, .L548+4
 10321 0120 5A67     		str	r2, [r3, #116]
 10322              	.L530:
3538:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3539:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3540:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
3541:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 10323              		.loc 1 3541 20
 10324 0122 FB68     		ldr	r3, [r7, #12]
 10325 0124 1B69     		ldr	r3, [r3, #16]
 10326              		.loc 1 3541 8
 10327 0126 002B     		cmp	r3, #0
 10328 0128 1AD0     		beq	.L537
 10329              	.L534:
 10330              	.LBB774:
3542:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3543:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 10331              		.loc 1 3543 7 discriminator 1
 10332 012a FB68     		ldr	r3, [r7, #12]
 10333 012c 1B68     		ldr	r3, [r3]
 10334 012e 3B65     		str	r3, [r7, #80]
 10335              	.LBB775:
 10336              	.LBB776:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10337              		.loc 2 480 4
 10338 0130 3B6D     		ldr	r3, [r7, #80]
 10339              		.syntax unified
 10340              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10341 0132 53E8003F 		ldrex r3, [r3]
 10342              	@ 0 "" 2
 10343              		.thumb
 10344              		.syntax unified
 10345 0136 FB64     		str	r3, [r7, #76]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10346              		.loc 2 481 10
 10347 0138 FB6C     		ldr	r3, [r7, #76]
 10348              	.LBE776:
 10349              	.LBE775:
 10350              		.loc 1 3543 7 discriminator 1
 10351 013a 43F48073 		orr	r3, r3, #256
 10352 013e C7F88030 		str	r3, [r7, #128]
 10353 0142 FB68     		ldr	r3, [r7, #12]
 10354 0144 1B68     		ldr	r3, [r3]
 10355 0146 1A46     		mov	r2, r3
 10356 0148 D7F88030 		ldr	r3, [r7, #128]
 10357 014c FB65     		str	r3, [r7, #92]
 10358 014e BA65     		str	r2, [r7, #88]
 10359              	.LBB777:
 10360              	.LBB778:
ARM GAS  /tmp/ccMjAmt3.s 			page 256


 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10361              		.loc 2 531 4
 10362 0150 B96D     		ldr	r1, [r7, #88]
 10363 0152 FA6D     		ldr	r2, [r7, #92]
 10364              		.syntax unified
 10365              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10366 0154 41E80023 		strex r3, r2, [r1]
 10367              	@ 0 "" 2
 10368              		.thumb
 10369              		.syntax unified
 10370 0158 7B65     		str	r3, [r7, #84]
 10371              		.loc 2 532 10
 10372 015a 7B6D     		ldr	r3, [r7, #84]
 10373              	.LBE778:
 10374              	.LBE777:
 10375              		.loc 1 3543 7 discriminator 1
 10376 015c 002B     		cmp	r3, #0
 10377 015e E4D1     		bne	.L534
 10378              	.L537:
 10379              	.LBE774:
 10380              	.LBB779:
3544:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3545:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 10381              		.loc 1 3545 5 discriminator 1
 10382 0160 FB68     		ldr	r3, [r7, #12]
 10383 0162 1B68     		ldr	r3, [r3]
 10384 0164 0833     		adds	r3, r3, #8
 10385 0166 FB63     		str	r3, [r7, #60]
 10386              	.LBB780:
 10387              	.LBB781:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10388              		.loc 2 480 4
 10389 0168 FB6B     		ldr	r3, [r7, #60]
 10390              		.syntax unified
 10391              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10392 016a 53E8003F 		ldrex r3, [r3]
 10393              	@ 0 "" 2
 10394              		.thumb
 10395              		.syntax unified
 10396 016e BB63     		str	r3, [r7, #56]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10397              		.loc 2 481 10
 10398 0170 BB6B     		ldr	r3, [r7, #56]
 10399              	.LBE781:
 10400              	.LBE780:
 10401              		.loc 1 3545 5 discriminator 1
 10402 0172 43F08053 		orr	r3, r3, #268435456
 10403 0176 FB67     		str	r3, [r7, #124]
 10404 0178 FB68     		ldr	r3, [r7, #12]
 10405 017a 1B68     		ldr	r3, [r3]
 10406 017c 0833     		adds	r3, r3, #8
 10407 017e FA6F     		ldr	r2, [r7, #124]
 10408 0180 BA64     		str	r2, [r7, #72]
 10409 0182 7B64     		str	r3, [r7, #68]
 10410              	.LBB782:
 10411              	.LBB783:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/ccMjAmt3.s 			page 257


 10412              		.loc 2 531 4
 10413 0184 796C     		ldr	r1, [r7, #68]
 10414 0186 BA6C     		ldr	r2, [r7, #72]
 10415              		.syntax unified
 10416              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10417 0188 41E80023 		strex r3, r2, [r1]
 10418              	@ 0 "" 2
 10419              		.thumb
 10420              		.syntax unified
 10421 018c 3B64     		str	r3, [r7, #64]
 10422              		.loc 2 532 10
 10423 018e 3B6C     		ldr	r3, [r7, #64]
 10424              	.LBE783:
 10425              	.LBE782:
 10426              		.loc 1 3545 5 discriminator 1
 10427 0190 002B     		cmp	r3, #0
 10428 0192 E5D1     		bne	.L537
 10429              	.LBE779:
 10430              		.loc 1 3545 5 is_stmt 0
 10431 0194 46E0     		b	.L538
 10432              	.L528:
3546:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3547:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
3548:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3549:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3550:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 10433              		.loc 1 3550 21 is_stmt 1
 10434 0196 FB68     		ldr	r3, [r7, #12]
 10435 0198 9B68     		ldr	r3, [r3, #8]
 10436              		.loc 1 3550 8
 10437 019a B3F5805F 		cmp	r3, #4096
 10438 019e 07D1     		bne	.L539
 10439              		.loc 1 3550 71 discriminator 1
 10440 01a0 FB68     		ldr	r3, [r7, #12]
 10441 01a2 1B69     		ldr	r3, [r3, #16]
 10442              		.loc 1 3550 56 discriminator 1
 10443 01a4 002B     		cmp	r3, #0
 10444 01a6 03D1     		bne	.L539
3551:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3552:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 10445              		.loc 1 3552 20
 10446 01a8 FB68     		ldr	r3, [r7, #12]
 10447 01aa 244A     		ldr	r2, .L548+8
 10448 01ac 5A67     		str	r2, [r3, #116]
 10449 01ae 02E0     		b	.L540
 10450              	.L539:
3553:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3554:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
3555:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3556:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 10451              		.loc 1 3556 20
 10452 01b0 FB68     		ldr	r3, [r7, #12]
 10453 01b2 234A     		ldr	r2, .L548+12
 10454 01b4 5A67     		str	r2, [r3, #116]
 10455              	.L540:
3557:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3558:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 258


3559:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3560:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 10456              		.loc 1 3560 20
 10457 01b6 FB68     		ldr	r3, [r7, #12]
 10458 01b8 1B69     		ldr	r3, [r3, #16]
 10459              		.loc 1 3560 8
 10460 01ba 002B     		cmp	r3, #0
 10461 01bc 19D0     		beq	.L541
 10462              	.L544:
 10463              	.LBB784:
3561:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3562:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 10464              		.loc 1 3562 7 discriminator 1
 10465 01be FB68     		ldr	r3, [r7, #12]
 10466 01c0 1B68     		ldr	r3, [r3]
 10467 01c2 BB62     		str	r3, [r7, #40]
 10468              	.LBB785:
 10469              	.LBB786:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10470              		.loc 2 480 4
 10471 01c4 BB6A     		ldr	r3, [r7, #40]
 10472              		.syntax unified
 10473              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10474 01c6 53E8003F 		ldrex r3, [r3]
 10475              	@ 0 "" 2
 10476              		.thumb
 10477              		.syntax unified
 10478 01ca 7B62     		str	r3, [r7, #36]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10479              		.loc 2 481 10
 10480 01cc 7B6A     		ldr	r3, [r7, #36]
 10481              	.LBE786:
 10482              	.LBE785:
 10483              		.loc 1 3562 7 discriminator 1
 10484 01ce 43F49073 		orr	r3, r3, #288
 10485 01d2 7B67     		str	r3, [r7, #116]
 10486 01d4 FB68     		ldr	r3, [r7, #12]
 10487 01d6 1B68     		ldr	r3, [r3]
 10488 01d8 1A46     		mov	r2, r3
 10489 01da 7B6F     		ldr	r3, [r7, #116]
 10490 01dc 7B63     		str	r3, [r7, #52]
 10491 01de 3A63     		str	r2, [r7, #48]
 10492              	.LBB787:
 10493              	.LBB788:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10494              		.loc 2 531 4
 10495 01e0 396B     		ldr	r1, [r7, #48]
 10496 01e2 7A6B     		ldr	r2, [r7, #52]
 10497              		.syntax unified
 10498              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10499 01e4 41E80023 		strex r3, r2, [r1]
 10500              	@ 0 "" 2
 10501              		.thumb
 10502              		.syntax unified
 10503 01e8 FB62     		str	r3, [r7, #44]
 10504              		.loc 2 532 10
 10505 01ea FB6A     		ldr	r3, [r7, #44]
ARM GAS  /tmp/ccMjAmt3.s 			page 259


 10506              	.LBE788:
 10507              	.LBE787:
 10508              		.loc 1 3562 7 discriminator 1
 10509 01ec 002B     		cmp	r3, #0
 10510 01ee E6D1     		bne	.L544
 10511 01f0 18E0     		b	.L538
 10512              	.L541:
 10513              	.LBE784:
 10514              	.LBB789:
3563:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3564:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
3565:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3566:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 10515              		.loc 1 3566 7 discriminator 1
 10516 01f2 FB68     		ldr	r3, [r7, #12]
 10517 01f4 1B68     		ldr	r3, [r3]
 10518 01f6 7B61     		str	r3, [r7, #20]
 10519              	.LBB790:
 10520              	.LBB791:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10521              		.loc 2 480 4
 10522 01f8 7B69     		ldr	r3, [r7, #20]
 10523              		.syntax unified
 10524              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10525 01fa 53E8003F 		ldrex r3, [r3]
 10526              	@ 0 "" 2
 10527              		.thumb
 10528              		.syntax unified
 10529 01fe 3B61     		str	r3, [r7, #16]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10530              		.loc 2 481 10
 10531 0200 3B69     		ldr	r3, [r7, #16]
 10532              	.LBE791:
 10533              	.LBE790:
 10534              		.loc 1 3566 7 discriminator 1
 10535 0202 43F02003 		orr	r3, r3, #32
 10536 0206 BB67     		str	r3, [r7, #120]
 10537 0208 FB68     		ldr	r3, [r7, #12]
 10538 020a 1B68     		ldr	r3, [r3]
 10539 020c 1A46     		mov	r2, r3
 10540 020e BB6F     		ldr	r3, [r7, #120]
 10541 0210 3B62     		str	r3, [r7, #32]
 10542 0212 FA61     		str	r2, [r7, #28]
 10543              	.LBB792:
 10544              	.LBB793:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10545              		.loc 2 531 4
 10546 0214 F969     		ldr	r1, [r7, #28]
 10547 0216 3A6A     		ldr	r2, [r7, #32]
 10548              		.syntax unified
 10549              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10550 0218 41E80023 		strex r3, r2, [r1]
 10551              	@ 0 "" 2
 10552              		.thumb
 10553              		.syntax unified
 10554 021c BB61     		str	r3, [r7, #24]
 10555              		.loc 2 532 10
ARM GAS  /tmp/ccMjAmt3.s 			page 260


 10556 021e BB69     		ldr	r3, [r7, #24]
 10557              	.LBE793:
 10558              	.LBE792:
 10559              		.loc 1 3566 7 discriminator 1
 10560 0220 002B     		cmp	r3, #0
 10561 0222 E6D1     		bne	.L541
 10562              	.L538:
 10563              	.LBE789:
3567:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3568:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3569:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 10564              		.loc 1 3569 10
 10565 0224 0023     		movs	r3, #0
3570:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 10566              		.loc 1 3570 1
 10567 0226 1846     		mov	r0, r3
 10568 0228 8C37     		adds	r7, r7, #140
 10569              		.cfi_def_cfa_offset 4
 10570 022a BD46     		mov	sp, r7
 10571              		.cfi_def_cfa_register 13
 10572              		@ sp needed
 10573 022c 5DF8047B 		ldr	r7, [sp], #4
 10574              		.cfi_restore 7
 10575              		.cfi_def_cfa_offset 0
 10576 0230 7047     		bx	lr
 10577              	.L549:
 10578 0232 00BF     		.align	2
 10579              	.L548:
 10580 0234 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 10581 0238 00000000 		.word	UART_RxISR_8BIT_FIFOEN
 10582 023c 00000000 		.word	UART_RxISR_16BIT
 10583 0240 00000000 		.word	UART_RxISR_8BIT
 10584              		.cfi_endproc
 10585              	.LFE882:
 10587              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 10588              		.align	1
 10589              		.global	UART_Start_Receive_DMA
 10590              		.syntax unified
 10591              		.thumb
 10592              		.thumb_func
 10594              	UART_Start_Receive_DMA:
 10595              	.LFB883:
3571:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3572:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
3573:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3574:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3575:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3576:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3577:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3578:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3579:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
3580:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3581:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3582:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval HAL status
3583:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3584:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3585:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
ARM GAS  /tmp/ccMjAmt3.s 			page 261


 10596              		.loc 1 3585 1
 10597              		.cfi_startproc
 10598              		@ args = 0, pretend = 0, frame = 96
 10599              		@ frame_needed = 1, uses_anonymous_args = 0
 10600 0000 80B5     		push	{r7, lr}
 10601              		.cfi_def_cfa_offset 8
 10602              		.cfi_offset 7, -8
 10603              		.cfi_offset 14, -4
 10604 0002 98B0     		sub	sp, sp, #96
 10605              		.cfi_def_cfa_offset 104
 10606 0004 00AF     		add	r7, sp, #0
 10607              		.cfi_def_cfa_register 7
 10608 0006 F860     		str	r0, [r7, #12]
 10609 0008 B960     		str	r1, [r7, #8]
 10610 000a 1346     		mov	r3, r2
 10611 000c FB80     		strh	r3, [r7, #6]	@ movhi
3586:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_StatusTypeDef status;
3587:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t nbByte = Size;
 10612              		.loc 1 3587 12
 10613 000e FB88     		ldrh	r3, [r7, #6]	@ movhi
 10614 0010 A7F85C30 		strh	r3, [r7, #92]	@ movhi
3588:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3589:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 10615              		.loc 1 3589 21
 10616 0014 FB68     		ldr	r3, [r7, #12]
 10617 0016 BA68     		ldr	r2, [r7, #8]
 10618 0018 9A65     		str	r2, [r3, #88]
3590:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxXferSize = Size;
 10619              		.loc 1 3590 21
 10620 001a FB68     		ldr	r3, [r7, #12]
 10621 001c FA88     		ldrh	r2, [r7, #6]	@ movhi
 10622 001e A3F85C20 		strh	r2, [r3, #92]	@ movhi
3591:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3592:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 10623              		.loc 1 3592 20
 10624 0022 FB68     		ldr	r3, [r7, #12]
 10625 0024 0022     		movs	r2, #0
 10626 0026 C3F89020 		str	r2, [r3, #144]
3593:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 10627              		.loc 1 3593 18
 10628 002a FB68     		ldr	r3, [r7, #12]
 10629 002c 2222     		movs	r2, #34
 10630 002e C3F88C20 		str	r2, [r3, #140]
3594:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3595:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 10631              		.loc 1 3595 12
 10632 0032 FB68     		ldr	r3, [r7, #12]
 10633 0034 D3F88030 		ldr	r3, [r3, #128]
 10634              		.loc 1 3595 6
 10635 0038 002B     		cmp	r3, #0
 10636 003a 7CD0     		beq	.L551
3596:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3597:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3598:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 10637              		.loc 1 3598 10
 10638 003c FB68     		ldr	r3, [r7, #12]
 10639 003e D3F88030 		ldr	r3, [r3, #128]
ARM GAS  /tmp/ccMjAmt3.s 			page 262


 10640              		.loc 1 3598 37
 10641 0042 684A     		ldr	r2, .L568
 10642 0044 1A66     		str	r2, [r3, #96]
3599:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3600:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3601:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 10643              		.loc 1 3601 10
 10644 0046 FB68     		ldr	r3, [r7, #12]
 10645 0048 D3F88030 		ldr	r3, [r3, #128]
 10646              		.loc 1 3601 41
 10647 004c 664A     		ldr	r2, .L568+4
 10648 004e 5A66     		str	r2, [r3, #100]
3602:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3603:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Set the DMA error callback */
3604:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 10649              		.loc 1 3604 10
 10650 0050 FB68     		ldr	r3, [r7, #12]
 10651 0052 D3F88030 		ldr	r3, [r3, #128]
 10652              		.loc 1 3604 38
 10653 0056 654A     		ldr	r2, .L568+8
 10654 0058 9A66     		str	r2, [r3, #104]
3605:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3606:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Set the DMA abort callback */
3607:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 10655              		.loc 1 3607 10
 10656 005a FB68     		ldr	r3, [r7, #12]
 10657 005c D3F88030 		ldr	r3, [r3, #128]
 10658              		.loc 1 3607 38
 10659 0060 0022     		movs	r2, #0
 10660 0062 DA66     		str	r2, [r3, #108]
3608:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3609:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
3610:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        should be aligned on a u16 frontier, so nbByte should be equal to Size * 2 */
3611:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 10661              		.loc 1 3611 21
 10662 0064 FB68     		ldr	r3, [r7, #12]
 10663 0066 9B68     		ldr	r3, [r3, #8]
 10664              		.loc 1 3611 8
 10665 0068 B3F5805F 		cmp	r3, #4096
 10666 006c 07D1     		bne	.L552
 10667              		.loc 1 3611 71 discriminator 1
 10668 006e FB68     		ldr	r3, [r7, #12]
 10669 0070 1B69     		ldr	r3, [r3, #16]
 10670              		.loc 1 3611 56 discriminator 1
 10671 0072 002B     		cmp	r3, #0
 10672 0074 03D1     		bne	.L552
3612:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3613:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       nbByte = Size * 2U;
 10673              		.loc 1 3613 14
 10674 0076 FB88     		ldrh	r3, [r7, #6]	@ movhi
 10675 0078 5B00     		lsls	r3, r3, #1
 10676 007a A7F85C30 		strh	r3, [r7, #92]	@ movhi
 10677              	.L552:
3614:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3615:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3616:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Check linked list mode */
3617:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((huart->hdmarx->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
ARM GAS  /tmp/ccMjAmt3.s 			page 263


 10678              		.loc 1 3617 15
 10679 007e FB68     		ldr	r3, [r7, #12]
 10680 0080 D3F88030 		ldr	r3, [r3, #128]
 10681              		.loc 1 3617 23
 10682 0084 1B6D     		ldr	r3, [r3, #80]
 10683              		.loc 1 3617 30
 10684 0086 03F08003 		and	r3, r3, #128
 10685              		.loc 1 3617 8
 10686 008a 002B     		cmp	r3, #0
 10687 008c 34D0     		beq	.L553
3618:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3619:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((huart->hdmarx->LinkedListQueue != NULL) && (huart->hdmarx->LinkedListQueue->Head != NULL
 10688              		.loc 1 3619 17
 10689 008e FB68     		ldr	r3, [r7, #12]
 10690 0090 D3F88030 		ldr	r3, [r3, #128]
 10691              		.loc 1 3619 25
 10692 0094 5B6F     		ldr	r3, [r3, #116]
 10693              		.loc 1 3619 10
 10694 0096 002B     		cmp	r3, #0
 10695 0098 2AD0     		beq	.L554
 10696              		.loc 1 3619 61 discriminator 1
 10697 009a FB68     		ldr	r3, [r7, #12]
 10698 009c D3F88030 		ldr	r3, [r3, #128]
 10699              		.loc 1 3619 69 discriminator 1
 10700 00a0 5B6F     		ldr	r3, [r3, #116]
 10701              		.loc 1 3619 86 discriminator 1
 10702 00a2 1B68     		ldr	r3, [r3]
 10703              		.loc 1 3619 52 discriminator 1
 10704 00a4 002B     		cmp	r3, #0
 10705 00a6 23D0     		beq	.L554
3620:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
3621:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Set DMA data size */
3622:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->hdmarx->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = nbByte;
 10706              		.loc 1 3622 14
 10707 00a8 FB68     		ldr	r3, [r7, #12]
 10708 00aa D3F88030 		ldr	r3, [r3, #128]
 10709              		.loc 1 3622 22
 10710 00ae 5B6F     		ldr	r3, [r3, #116]
 10711              		.loc 1 3622 39
 10712 00b0 1B68     		ldr	r3, [r3]
 10713              		.loc 1 3622 87
 10714 00b2 B7F85C20 		ldrh	r2, [r7, #92]
 10715 00b6 9A60     		str	r2, [r3, #8]
3623:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3624:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Set DMA source address */
3625:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->hdmarx->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] =
3626:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           (uint32_t)&huart->Instance->RDR;
 10716              		.loc 1 3626 27
 10717 00b8 FB68     		ldr	r3, [r7, #12]
 10718 00ba 1B68     		ldr	r3, [r3]
 10719              		.loc 1 3626 21
 10720 00bc 03F12402 		add	r2, r3, #36
3625:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           (uint32_t)&huart->Instance->RDR;
 10721              		.loc 1 3625 14
 10722 00c0 FB68     		ldr	r3, [r7, #12]
 10723 00c2 D3F88030 		ldr	r3, [r3, #128]
3625:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           (uint32_t)&huart->Instance->RDR;
ARM GAS  /tmp/ccMjAmt3.s 			page 264


 10724              		.loc 1 3625 22
 10725 00c6 5B6F     		ldr	r3, [r3, #116]
3625:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           (uint32_t)&huart->Instance->RDR;
 10726              		.loc 1 3625 39
 10727 00c8 1B68     		ldr	r3, [r3]
3625:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           (uint32_t)&huart->Instance->RDR;
 10728              		.loc 1 3625 87
 10729 00ca DA60     		str	r2, [r3, #12]
3627:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3628:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Set DMA destination address */
3629:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->hdmarx->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)h
 10730              		.loc 1 3629 104
 10731 00cc FB68     		ldr	r3, [r7, #12]
 10732 00ce 9A6D     		ldr	r2, [r3, #88]
 10733              		.loc 1 3629 14
 10734 00d0 FB68     		ldr	r3, [r7, #12]
 10735 00d2 D3F88030 		ldr	r3, [r3, #128]
 10736              		.loc 1 3629 22
 10737 00d6 5B6F     		ldr	r3, [r3, #116]
 10738              		.loc 1 3629 39
 10739 00d8 1B68     		ldr	r3, [r3]
 10740              		.loc 1 3629 87
 10741 00da 1A61     		str	r2, [r3, #16]
3630:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3631:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Enable the UART receive DMA channel */
3632:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         status = HAL_DMAEx_List_Start_IT(huart->hdmarx);
 10742              		.loc 1 3632 18
 10743 00dc FB68     		ldr	r3, [r7, #12]
 10744 00de D3F88030 		ldr	r3, [r3, #128]
 10745 00e2 1846     		mov	r0, r3
 10746 00e4 FFF7FEFF 		bl	HAL_DMAEx_List_Start_IT
 10747 00e8 0346     		mov	r3, r0
 10748 00ea 87F85F30 		strb	r3, [r7, #95]
 10749              		.loc 1 3632 16
 10750 00ee 14E0     		b	.L556
 10751              	.L554:
3633:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
3634:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
3635:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
3636:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Update status */
3637:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         status = HAL_ERROR;
 10752              		.loc 1 3637 16
 10753 00f0 0123     		movs	r3, #1
 10754 00f2 87F85F30 		strb	r3, [r7, #95]
 10755 00f6 10E0     		b	.L556
 10756              	.L553:
3638:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
3639:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3640:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
3641:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3642:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Enable the UART receive DMA channel */
3643:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       status = HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pR
 10757              		.loc 1 3643 16
 10758 00f8 FB68     		ldr	r3, [r7, #12]
 10759 00fa D3F88000 		ldr	r0, [r3, #128]
 10760              		.loc 1 3643 64
 10761 00fe FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccMjAmt3.s 			page 265


 10762 0100 1B68     		ldr	r3, [r3]
 10763              		.loc 1 3643 58
 10764 0102 2433     		adds	r3, r3, #36
 10765              		.loc 1 3643 16
 10766 0104 1946     		mov	r1, r3
 10767              		.loc 1 3643 96
 10768 0106 FB68     		ldr	r3, [r7, #12]
 10769 0108 9B6D     		ldr	r3, [r3, #88]
 10770              		.loc 1 3643 16
 10771 010a 1A46     		mov	r2, r3
 10772 010c B7F85C30 		ldrh	r3, [r7, #92]
 10773 0110 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10774 0114 0346     		mov	r3, r0
 10775 0116 87F85F30 		strb	r3, [r7, #95]
 10776              	.L556:
3644:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3645:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3646:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (status != HAL_OK)
 10777              		.loc 1 3646 8
 10778 011a 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
 10779 011e 002B     		cmp	r3, #0
 10780 0120 09D0     		beq	.L551
3647:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3648:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Set error code to DMA */
3649:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
 10781              		.loc 1 3649 24
 10782 0122 FB68     		ldr	r3, [r7, #12]
 10783 0124 1022     		movs	r2, #16
 10784 0126 C3F89020 		str	r2, [r3, #144]
3650:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3651:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Restore huart->RxState to ready */
3652:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 10785              		.loc 1 3652 22
 10786 012a FB68     		ldr	r3, [r7, #12]
 10787 012c 2022     		movs	r2, #32
 10788 012e C3F88C20 		str	r2, [r3, #140]
3653:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3654:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return HAL_ERROR;
 10789              		.loc 1 3654 14
 10790 0132 0123     		movs	r3, #1
 10791 0134 51E0     		b	.L557
 10792              	.L551:
3655:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3656:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3657:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3658:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3659:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 10793              		.loc 1 3659 18
 10794 0136 FB68     		ldr	r3, [r7, #12]
 10795 0138 1B69     		ldr	r3, [r3, #16]
 10796              		.loc 1 3659 6
 10797 013a 002B     		cmp	r3, #0
 10798 013c 18D0     		beq	.L564
 10799              	.L561:
 10800              	.LBB794:
3660:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3661:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  /tmp/ccMjAmt3.s 			page 266


 10801              		.loc 1 3661 5 discriminator 1
 10802 013e FB68     		ldr	r3, [r7, #12]
 10803 0140 1B68     		ldr	r3, [r3]
 10804 0142 3B64     		str	r3, [r7, #64]
 10805              	.LBB795:
 10806              	.LBB796:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10807              		.loc 2 480 4
 10808 0144 3B6C     		ldr	r3, [r7, #64]
 10809              		.syntax unified
 10810              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10811 0146 53E8003F 		ldrex r3, [r3]
 10812              	@ 0 "" 2
 10813              		.thumb
 10814              		.syntax unified
 10815 014a FB63     		str	r3, [r7, #60]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10816              		.loc 2 481 10
 10817 014c FB6B     		ldr	r3, [r7, #60]
 10818              	.LBE796:
 10819              	.LBE795:
 10820              		.loc 1 3661 5 discriminator 1
 10821 014e 43F48073 		orr	r3, r3, #256
 10822 0152 BB65     		str	r3, [r7, #88]
 10823 0154 FB68     		ldr	r3, [r7, #12]
 10824 0156 1B68     		ldr	r3, [r3]
 10825 0158 1A46     		mov	r2, r3
 10826 015a BB6D     		ldr	r3, [r7, #88]
 10827 015c FB64     		str	r3, [r7, #76]
 10828 015e BA64     		str	r2, [r7, #72]
 10829              	.LBB797:
 10830              	.LBB798:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10831              		.loc 2 531 4
 10832 0160 B96C     		ldr	r1, [r7, #72]
 10833 0162 FA6C     		ldr	r2, [r7, #76]
 10834              		.syntax unified
 10835              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10836 0164 41E80023 		strex r3, r2, [r1]
 10837              	@ 0 "" 2
 10838              		.thumb
 10839              		.syntax unified
 10840 0168 7B64     		str	r3, [r7, #68]
 10841              		.loc 2 532 10
 10842 016a 7B6C     		ldr	r3, [r7, #68]
 10843              	.LBE798:
 10844              	.LBE797:
 10845              		.loc 1 3661 5 discriminator 1
 10846 016c 002B     		cmp	r3, #0
 10847 016e E6D1     		bne	.L561
 10848              	.L564:
 10849              	.LBE794:
 10850              	.LBB799:
3662:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3663:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3664:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3665:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccMjAmt3.s 			page 267


 10851              		.loc 1 3665 3 discriminator 1
 10852 0170 FB68     		ldr	r3, [r7, #12]
 10853 0172 1B68     		ldr	r3, [r3]
 10854 0174 0833     		adds	r3, r3, #8
 10855 0176 FB62     		str	r3, [r7, #44]
 10856              	.LBB800:
 10857              	.LBB801:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10858              		.loc 2 480 4
 10859 0178 FB6A     		ldr	r3, [r7, #44]
 10860              		.syntax unified
 10861              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10862 017a 53E8003F 		ldrex r3, [r3]
 10863              	@ 0 "" 2
 10864              		.thumb
 10865              		.syntax unified
 10866 017e BB62     		str	r3, [r7, #40]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10867              		.loc 2 481 10
 10868 0180 BB6A     		ldr	r3, [r7, #40]
 10869              	.LBE801:
 10870              	.LBE800:
 10871              		.loc 1 3665 3 discriminator 1
 10872 0182 43F00103 		orr	r3, r3, #1
 10873 0186 7B65     		str	r3, [r7, #84]
 10874 0188 FB68     		ldr	r3, [r7, #12]
 10875 018a 1B68     		ldr	r3, [r3]
 10876 018c 0833     		adds	r3, r3, #8
 10877 018e 7A6D     		ldr	r2, [r7, #84]
 10878 0190 BA63     		str	r2, [r7, #56]
 10879 0192 7B63     		str	r3, [r7, #52]
 10880              	.LBB802:
 10881              	.LBB803:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10882              		.loc 2 531 4
 10883 0194 796B     		ldr	r1, [r7, #52]
 10884 0196 BA6B     		ldr	r2, [r7, #56]
 10885              		.syntax unified
 10886              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10887 0198 41E80023 		strex r3, r2, [r1]
 10888              	@ 0 "" 2
 10889              		.thumb
 10890              		.syntax unified
 10891 019c 3B63     		str	r3, [r7, #48]
 10892              		.loc 2 532 10
 10893 019e 3B6B     		ldr	r3, [r7, #48]
 10894              	.LBE803:
 10895              	.LBE802:
 10896              		.loc 1 3665 3 discriminator 1
 10897 01a0 002B     		cmp	r3, #0
 10898 01a2 E5D1     		bne	.L564
 10899              	.L567:
 10900              	.LBE799:
 10901              	.LBB804:
3666:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3667:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3668:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   in the UART CR3 register */
ARM GAS  /tmp/ccMjAmt3.s 			page 268


3669:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 10902              		.loc 1 3669 3 discriminator 1
 10903 01a4 FB68     		ldr	r3, [r7, #12]
 10904 01a6 1B68     		ldr	r3, [r3]
 10905 01a8 0833     		adds	r3, r3, #8
 10906 01aa BB61     		str	r3, [r7, #24]
 10907              	.LBB805:
 10908              	.LBB806:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10909              		.loc 2 480 4
 10910 01ac BB69     		ldr	r3, [r7, #24]
 10911              		.syntax unified
 10912              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10913 01ae 53E8003F 		ldrex r3, [r3]
 10914              	@ 0 "" 2
 10915              		.thumb
 10916              		.syntax unified
 10917 01b2 7B61     		str	r3, [r7, #20]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10918              		.loc 2 481 10
 10919 01b4 7B69     		ldr	r3, [r7, #20]
 10920              	.LBE806:
 10921              	.LBE805:
 10922              		.loc 1 3669 3 discriminator 1
 10923 01b6 43F04003 		orr	r3, r3, #64
 10924 01ba 3B65     		str	r3, [r7, #80]
 10925 01bc FB68     		ldr	r3, [r7, #12]
 10926 01be 1B68     		ldr	r3, [r3]
 10927 01c0 0833     		adds	r3, r3, #8
 10928 01c2 3A6D     		ldr	r2, [r7, #80]
 10929 01c4 7A62     		str	r2, [r7, #36]
 10930 01c6 3B62     		str	r3, [r7, #32]
 10931              	.LBB807:
 10932              	.LBB808:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10933              		.loc 2 531 4
 10934 01c8 396A     		ldr	r1, [r7, #32]
 10935 01ca 7A6A     		ldr	r2, [r7, #36]
 10936              		.syntax unified
 10937              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10938 01cc 41E80023 		strex r3, r2, [r1]
 10939              	@ 0 "" 2
 10940              		.thumb
 10941              		.syntax unified
 10942 01d0 FB61     		str	r3, [r7, #28]
 10943              		.loc 2 532 10
 10944 01d2 FB69     		ldr	r3, [r7, #28]
 10945              	.LBE808:
 10946              	.LBE807:
 10947              		.loc 1 3669 3 discriminator 1
 10948 01d4 002B     		cmp	r3, #0
 10949 01d6 E5D1     		bne	.L567
 10950              	.LBE804:
3670:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3671:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   return HAL_OK;
 10951              		.loc 1 3671 10
 10952 01d8 0023     		movs	r3, #0
ARM GAS  /tmp/ccMjAmt3.s 			page 269


 10953              	.L557:
3672:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 10954              		.loc 1 3672 1
 10955 01da 1846     		mov	r0, r3
 10956 01dc 6037     		adds	r7, r7, #96
 10957              		.cfi_def_cfa_offset 8
 10958 01de BD46     		mov	sp, r7
 10959              		.cfi_def_cfa_register 13
 10960              		@ sp needed
 10961 01e0 80BD     		pop	{r7, pc}
 10962              	.L569:
 10963 01e2 00BF     		.align	2
 10964              	.L568:
 10965 01e4 00000000 		.word	UART_DMAReceiveCplt
 10966 01e8 00000000 		.word	UART_DMARxHalfCplt
 10967 01ec 00000000 		.word	UART_DMAError
 10968              		.cfi_endproc
 10969              	.LFE883:
 10971              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 10972              		.align	1
 10973              		.syntax unified
 10974              		.thumb
 10975              		.thumb_func
 10977              	UART_EndTxTransfer:
 10978              	.LFB884:
3673:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3674:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3675:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3676:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3677:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
3678:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
3679:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3680:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3681:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 10979              		.loc 1 3681 1
 10980              		.cfi_startproc
 10981              		@ args = 0, pretend = 0, frame = 56
 10982              		@ frame_needed = 1, uses_anonymous_args = 0
 10983              		@ link register save eliminated.
 10984 0000 80B4     		push	{r7}
 10985              		.cfi_def_cfa_offset 4
 10986              		.cfi_offset 7, -4
 10987 0002 8FB0     		sub	sp, sp, #60
 10988              		.cfi_def_cfa_offset 64
 10989 0004 00AF     		add	r7, sp, #0
 10990              		.cfi_def_cfa_register 7
 10991 0006 7860     		str	r0, [r7, #4]
 10992              	.L573:
 10993              	.LBB809:
3682:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3683:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
 10994              		.loc 1 3683 3 discriminator 1
 10995 0008 7B68     		ldr	r3, [r7, #4]
 10996 000a 1B68     		ldr	r3, [r3]
 10997 000c 3B62     		str	r3, [r7, #32]
 10998              	.LBB810:
 10999              	.LBB811:
ARM GAS  /tmp/ccMjAmt3.s 			page 270


 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11000              		.loc 2 480 4
 11001 000e 3B6A     		ldr	r3, [r7, #32]
 11002              		.syntax unified
 11003              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11004 0010 53E8003F 		ldrex r3, [r3]
 11005              	@ 0 "" 2
 11006              		.thumb
 11007              		.syntax unified
 11008 0014 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11009              		.loc 2 481 10
 11010 0016 FB69     		ldr	r3, [r7, #28]
 11011              	.LBE811:
 11012              	.LBE810:
 11013              		.loc 1 3683 3 discriminator 1
 11014 0018 23F0C003 		bic	r3, r3, #192
 11015 001c 7B63     		str	r3, [r7, #52]
 11016 001e 7B68     		ldr	r3, [r7, #4]
 11017 0020 1B68     		ldr	r3, [r3]
 11018 0022 1A46     		mov	r2, r3
 11019 0024 7B6B     		ldr	r3, [r7, #52]
 11020 0026 FB62     		str	r3, [r7, #44]
 11021 0028 BA62     		str	r2, [r7, #40]
 11022              	.LBB812:
 11023              	.LBB813:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11024              		.loc 2 531 4
 11025 002a B96A     		ldr	r1, [r7, #40]
 11026 002c FA6A     		ldr	r2, [r7, #44]
 11027              		.syntax unified
 11028              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11029 002e 41E80023 		strex r3, r2, [r1]
 11030              	@ 0 "" 2
 11031              		.thumb
 11032              		.syntax unified
 11033 0032 7B62     		str	r3, [r7, #36]
 11034              		.loc 2 532 10
 11035 0034 7B6A     		ldr	r3, [r7, #36]
 11036              	.LBE813:
 11037              	.LBE812:
 11038              		.loc 1 3683 3 discriminator 1
 11039 0036 002B     		cmp	r3, #0
 11040 0038 E6D1     		bne	.L573
 11041              	.L576:
 11042              	.LBE809:
 11043              	.LBB814:
3684:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
 11044              		.loc 1 3684 3 discriminator 1
 11045 003a 7B68     		ldr	r3, [r7, #4]
 11046 003c 1B68     		ldr	r3, [r3]
 11047 003e 0833     		adds	r3, r3, #8
 11048 0040 FB60     		str	r3, [r7, #12]
 11049              	.LBB815:
 11050              	.LBB816:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11051              		.loc 2 480 4
ARM GAS  /tmp/ccMjAmt3.s 			page 271


 11052 0042 FB68     		ldr	r3, [r7, #12]
 11053              		.syntax unified
 11054              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11055 0044 53E8003F 		ldrex r3, [r3]
 11056              	@ 0 "" 2
 11057              		.thumb
 11058              		.syntax unified
 11059 0048 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11060              		.loc 2 481 10
 11061 004a BB68     		ldr	r3, [r7, #8]
 11062              	.LBE816:
 11063              	.LBE815:
 11064              		.loc 1 3684 3 discriminator 1
 11065 004c 23F40003 		bic	r3, r3, #8388608
 11066 0050 3B63     		str	r3, [r7, #48]
 11067 0052 7B68     		ldr	r3, [r7, #4]
 11068 0054 1B68     		ldr	r3, [r3]
 11069 0056 0833     		adds	r3, r3, #8
 11070 0058 3A6B     		ldr	r2, [r7, #48]
 11071 005a BA61     		str	r2, [r7, #24]
 11072 005c 7B61     		str	r3, [r7, #20]
 11073              	.LBB817:
 11074              	.LBB818:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11075              		.loc 2 531 4
 11076 005e 7969     		ldr	r1, [r7, #20]
 11077 0060 BA69     		ldr	r2, [r7, #24]
 11078              		.syntax unified
 11079              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11080 0062 41E80023 		strex r3, r2, [r1]
 11081              	@ 0 "" 2
 11082              		.thumb
 11083              		.syntax unified
 11084 0066 3B61     		str	r3, [r7, #16]
 11085              		.loc 2 532 10
 11086 0068 3B69     		ldr	r3, [r7, #16]
 11087              	.LBE818:
 11088              	.LBE817:
 11089              		.loc 1 3684 3 discriminator 1
 11090 006a 002B     		cmp	r3, #0
 11091 006c E5D1     		bne	.L576
 11092              	.LBE814:
3685:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3686:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3687:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 11093              		.loc 1 3687 17
 11094 006e 7B68     		ldr	r3, [r7, #4]
 11095 0070 2022     		movs	r2, #32
 11096 0072 C3F88820 		str	r2, [r3, #136]
3688:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 11097              		.loc 1 3688 1
 11098 0076 00BF     		nop
 11099 0078 3C37     		adds	r7, r7, #60
 11100              		.cfi_def_cfa_offset 4
 11101 007a BD46     		mov	sp, r7
 11102              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccMjAmt3.s 			page 272


 11103              		@ sp needed
 11104 007c 5DF8047B 		ldr	r7, [sp], #4
 11105              		.cfi_restore 7
 11106              		.cfi_def_cfa_offset 0
 11107 0080 7047     		bx	lr
 11108              		.cfi_endproc
 11109              	.LFE884:
 11111              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 11112              		.align	1
 11113              		.syntax unified
 11114              		.thumb
 11115              		.thumb_func
 11117              	UART_EndRxTransfer:
 11118              	.LFB885:
3689:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
3690:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3691:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3692:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3693:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3694:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart UART handle.
3695:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
3696:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3697:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3698:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 11119              		.loc 1 3698 1
 11120              		.cfi_startproc
 11121              		@ args = 0, pretend = 0, frame = 80
 11122              		@ frame_needed = 1, uses_anonymous_args = 0
 11123              		@ link register save eliminated.
 11124 0000 80B4     		push	{r7}
 11125              		.cfi_def_cfa_offset 4
 11126              		.cfi_offset 7, -4
 11127 0002 95B0     		sub	sp, sp, #84
 11128              		.cfi_def_cfa_offset 88
 11129 0004 00AF     		add	r7, sp, #0
 11130              		.cfi_def_cfa_register 7
 11131 0006 7860     		str	r0, [r7, #4]
 11132              	.L580:
 11133              	.LBB819:
3699:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3700:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 11134              		.loc 1 3700 3 discriminator 1
 11135 0008 7B68     		ldr	r3, [r7, #4]
 11136 000a 1B68     		ldr	r3, [r3]
 11137 000c 7B63     		str	r3, [r7, #52]
 11138              	.LBB820:
 11139              	.LBB821:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11140              		.loc 2 480 4
 11141 000e 7B6B     		ldr	r3, [r7, #52]
 11142              		.syntax unified
 11143              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11144 0010 53E8003F 		ldrex r3, [r3]
 11145              	@ 0 "" 2
 11146              		.thumb
 11147              		.syntax unified
 11148 0014 3B63     		str	r3, [r7, #48]
ARM GAS  /tmp/ccMjAmt3.s 			page 273


 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11149              		.loc 2 481 10
 11150 0016 3B6B     		ldr	r3, [r7, #48]
 11151              	.LBE821:
 11152              	.LBE820:
 11153              		.loc 1 3700 3 discriminator 1
 11154 0018 23F49073 		bic	r3, r3, #288
 11155 001c FB64     		str	r3, [r7, #76]
 11156 001e 7B68     		ldr	r3, [r7, #4]
 11157 0020 1B68     		ldr	r3, [r3]
 11158 0022 1A46     		mov	r2, r3
 11159 0024 FB6C     		ldr	r3, [r7, #76]
 11160 0026 3B64     		str	r3, [r7, #64]
 11161 0028 FA63     		str	r2, [r7, #60]
 11162              	.LBB822:
 11163              	.LBB823:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11164              		.loc 2 531 4
 11165 002a F96B     		ldr	r1, [r7, #60]
 11166 002c 3A6C     		ldr	r2, [r7, #64]
 11167              		.syntax unified
 11168              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11169 002e 41E80023 		strex r3, r2, [r1]
 11170              	@ 0 "" 2
 11171              		.thumb
 11172              		.syntax unified
 11173 0032 BB63     		str	r3, [r7, #56]
 11174              		.loc 2 532 10
 11175 0034 BB6B     		ldr	r3, [r7, #56]
 11176              	.LBE823:
 11177              	.LBE822:
 11178              		.loc 1 3700 3 discriminator 1
 11179 0036 002B     		cmp	r3, #0
 11180 0038 E6D1     		bne	.L580
 11181              	.L583:
 11182              	.LBE819:
 11183              	.LBB824:
3701:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 11184              		.loc 1 3701 3 discriminator 1
 11185 003a 7B68     		ldr	r3, [r7, #4]
 11186 003c 1B68     		ldr	r3, [r3]
 11187 003e 0833     		adds	r3, r3, #8
 11188 0040 3B62     		str	r3, [r7, #32]
 11189              	.LBB825:
 11190              	.LBB826:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11191              		.loc 2 480 4
 11192 0042 3B6A     		ldr	r3, [r7, #32]
 11193              		.syntax unified
 11194              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11195 0044 53E8003F 		ldrex r3, [r3]
 11196              	@ 0 "" 2
 11197              		.thumb
 11198              		.syntax unified
 11199 0048 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11200              		.loc 2 481 10
ARM GAS  /tmp/ccMjAmt3.s 			page 274


 11201 004a FB69     		ldr	r3, [r7, #28]
 11202              	.LBE826:
 11203              	.LBE825:
 11204              		.loc 1 3701 3 discriminator 1
 11205 004c 23F08053 		bic	r3, r3, #268435456
 11206 0050 23F00103 		bic	r3, r3, #1
 11207 0054 BB64     		str	r3, [r7, #72]
 11208 0056 7B68     		ldr	r3, [r7, #4]
 11209 0058 1B68     		ldr	r3, [r3]
 11210 005a 0833     		adds	r3, r3, #8
 11211 005c BA6C     		ldr	r2, [r7, #72]
 11212 005e FA62     		str	r2, [r7, #44]
 11213 0060 BB62     		str	r3, [r7, #40]
 11214              	.LBB827:
 11215              	.LBB828:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11216              		.loc 2 531 4
 11217 0062 B96A     		ldr	r1, [r7, #40]
 11218 0064 FA6A     		ldr	r2, [r7, #44]
 11219              		.syntax unified
 11220              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11221 0066 41E80023 		strex r3, r2, [r1]
 11222              	@ 0 "" 2
 11223              		.thumb
 11224              		.syntax unified
 11225 006a 7B62     		str	r3, [r7, #36]
 11226              		.loc 2 532 10
 11227 006c 7B6A     		ldr	r3, [r7, #36]
 11228              	.LBE828:
 11229              	.LBE827:
 11230              		.loc 1 3701 3 discriminator 1
 11231 006e 002B     		cmp	r3, #0
 11232 0070 E3D1     		bne	.L583
 11233              	.LBE824:
3702:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3703:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3704:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11234              		.loc 1 3704 12
 11235 0072 7B68     		ldr	r3, [r7, #4]
 11236 0074 DB6E     		ldr	r3, [r3, #108]
 11237              		.loc 1 3704 6
 11238 0076 012B     		cmp	r3, #1
 11239 0078 18D1     		bne	.L584
 11240              	.L587:
 11241              	.LBB829:
3705:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3706:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 11242              		.loc 1 3706 5 discriminator 1
 11243 007a 7B68     		ldr	r3, [r7, #4]
 11244 007c 1B68     		ldr	r3, [r3]
 11245 007e FB60     		str	r3, [r7, #12]
 11246              	.LBB830:
 11247              	.LBB831:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11248              		.loc 2 480 4
 11249 0080 FB68     		ldr	r3, [r7, #12]
 11250              		.syntax unified
ARM GAS  /tmp/ccMjAmt3.s 			page 275


 11251              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11252 0082 53E8003F 		ldrex r3, [r3]
 11253              	@ 0 "" 2
 11254              		.thumb
 11255              		.syntax unified
 11256 0086 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11257              		.loc 2 481 10
 11258 0088 BB68     		ldr	r3, [r7, #8]
 11259              	.LBE831:
 11260              	.LBE830:
 11261              		.loc 1 3706 5 discriminator 1
 11262 008a 23F01003 		bic	r3, r3, #16
 11263 008e 7B64     		str	r3, [r7, #68]
 11264 0090 7B68     		ldr	r3, [r7, #4]
 11265 0092 1B68     		ldr	r3, [r3]
 11266 0094 1A46     		mov	r2, r3
 11267 0096 7B6C     		ldr	r3, [r7, #68]
 11268 0098 BB61     		str	r3, [r7, #24]
 11269 009a 7A61     		str	r2, [r7, #20]
 11270              	.LBB832:
 11271              	.LBB833:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11272              		.loc 2 531 4
 11273 009c 7969     		ldr	r1, [r7, #20]
 11274 009e BA69     		ldr	r2, [r7, #24]
 11275              		.syntax unified
 11276              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11277 00a0 41E80023 		strex r3, r2, [r1]
 11278              	@ 0 "" 2
 11279              		.thumb
 11280              		.syntax unified
 11281 00a4 3B61     		str	r3, [r7, #16]
 11282              		.loc 2 532 10
 11283 00a6 3B69     		ldr	r3, [r7, #16]
 11284              	.LBE833:
 11285              	.LBE832:
 11286              		.loc 1 3706 5 discriminator 1
 11287 00a8 002B     		cmp	r3, #0
 11288 00aa E6D1     		bne	.L587
 11289              	.L584:
 11290              	.LBE829:
3707:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3708:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3709:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3710:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 11291              		.loc 1 3710 18
 11292 00ac 7B68     		ldr	r3, [r7, #4]
 11293 00ae 2022     		movs	r2, #32
 11294 00b0 C3F88C20 		str	r2, [r3, #140]
3711:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 11295              		.loc 1 3711 24
 11296 00b4 7B68     		ldr	r3, [r7, #4]
 11297 00b6 0022     		movs	r2, #0
 11298 00b8 DA66     		str	r2, [r3, #108]
3712:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3713:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Reset RxIsr function pointer */
ARM GAS  /tmp/ccMjAmt3.s 			page 276


3714:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxISR = NULL;
 11299              		.loc 1 3714 16
 11300 00ba 7B68     		ldr	r3, [r7, #4]
 11301 00bc 0022     		movs	r2, #0
 11302 00be 5A67     		str	r2, [r3, #116]
3715:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 11303              		.loc 1 3715 1
 11304 00c0 00BF     		nop
 11305 00c2 5437     		adds	r7, r7, #84
 11306              		.cfi_def_cfa_offset 4
 11307 00c4 BD46     		mov	sp, r7
 11308              		.cfi_def_cfa_register 13
 11309              		@ sp needed
 11310 00c6 5DF8047B 		ldr	r7, [sp], #4
 11311              		.cfi_restore 7
 11312              		.cfi_def_cfa_offset 0
 11313 00ca 7047     		bx	lr
 11314              		.cfi_endproc
 11315              	.LFE885:
 11317              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 11318              		.align	1
 11319              		.syntax unified
 11320              		.thumb
 11321              		.thumb_func
 11323              	UART_DMATransmitCplt:
 11324              	.LFB886:
3716:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3717:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3718:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if defined(HAL_DMA_MODULE_ENABLED)
3719:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3720:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3721:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param hdma DMA handle.
3722:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
3723:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3724:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3725:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 11325              		.loc 1 3725 1
 11326              		.cfi_startproc
 11327              		@ args = 0, pretend = 0, frame = 64
 11328              		@ frame_needed = 1, uses_anonymous_args = 0
 11329 0000 80B5     		push	{r7, lr}
 11330              		.cfi_def_cfa_offset 8
 11331              		.cfi_offset 7, -8
 11332              		.cfi_offset 14, -4
 11333 0002 90B0     		sub	sp, sp, #64
 11334              		.cfi_def_cfa_offset 72
 11335 0004 00AF     		add	r7, sp, #0
 11336              		.cfi_def_cfa_register 7
 11337 0006 7860     		str	r0, [r7, #4]
3726:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11338              		.loc 1 3726 23
 11339 0008 7B68     		ldr	r3, [r7, #4]
 11340 000a DB6D     		ldr	r3, [r3, #92]
 11341 000c FB63     		str	r3, [r7, #60]
3727:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3728:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check if DMA in circular mode */
3729:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (hdma->Mode != DMA_LINKEDLIST_CIRCULAR)
ARM GAS  /tmp/ccMjAmt3.s 			page 277


 11342              		.loc 1 3729 11
 11343 000e 7B68     		ldr	r3, [r7, #4]
 11344 0010 1B6D     		ldr	r3, [r3, #80]
 11345              		.loc 1 3729 6
 11346 0012 812B     		cmp	r3, #129
 11347 0014 37D0     		beq	.L589
3730:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3731:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxXferCount = 0U;
 11348              		.loc 1 3731 24
 11349 0016 FB6B     		ldr	r3, [r7, #60]
 11350 0018 0022     		movs	r2, #0
 11351 001a A3F85620 		strh	r2, [r3, #86]	@ movhi
 11352              	.L592:
 11353              	.LBB834:
3732:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3733:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3734:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        in the UART CR3 register */
3735:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 11354              		.loc 1 3735 5 discriminator 1
 11355 001e FB6B     		ldr	r3, [r7, #60]
 11356 0020 1B68     		ldr	r3, [r3]
 11357 0022 0833     		adds	r3, r3, #8
 11358 0024 7B62     		str	r3, [r7, #36]
 11359              	.LBB835:
 11360              	.LBB836:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11361              		.loc 2 480 4
 11362 0026 7B6A     		ldr	r3, [r7, #36]
 11363              		.syntax unified
 11364              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11365 0028 53E8003F 		ldrex r3, [r3]
 11366              	@ 0 "" 2
 11367              		.thumb
 11368              		.syntax unified
 11369 002c 3B62     		str	r3, [r7, #32]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11370              		.loc 2 481 10
 11371 002e 3B6A     		ldr	r3, [r7, #32]
 11372              	.LBE836:
 11373              	.LBE835:
 11374              		.loc 1 3735 5 discriminator 1
 11375 0030 23F08003 		bic	r3, r3, #128
 11376 0034 BB63     		str	r3, [r7, #56]
 11377 0036 FB6B     		ldr	r3, [r7, #60]
 11378 0038 1B68     		ldr	r3, [r3]
 11379 003a 0833     		adds	r3, r3, #8
 11380 003c BA6B     		ldr	r2, [r7, #56]
 11381 003e 3A63     		str	r2, [r7, #48]
 11382 0040 FB62     		str	r3, [r7, #44]
 11383              	.LBB837:
 11384              	.LBB838:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11385              		.loc 2 531 4
 11386 0042 F96A     		ldr	r1, [r7, #44]
 11387 0044 3A6B     		ldr	r2, [r7, #48]
 11388              		.syntax unified
 11389              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccMjAmt3.s 			page 278


 11390 0046 41E80023 		strex r3, r2, [r1]
 11391              	@ 0 "" 2
 11392              		.thumb
 11393              		.syntax unified
 11394 004a BB62     		str	r3, [r7, #40]
 11395              		.loc 2 532 10
 11396 004c BB6A     		ldr	r3, [r7, #40]
 11397              	.LBE838:
 11398              	.LBE837:
 11399              		.loc 1 3735 5 discriminator 1
 11400 004e 002B     		cmp	r3, #0
 11401 0050 E5D1     		bne	.L592
 11402              	.L595:
 11403              	.LBE834:
 11404              	.LBB839:
3736:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3737:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3738:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 11405              		.loc 1 3738 5 discriminator 1
 11406 0052 FB6B     		ldr	r3, [r7, #60]
 11407 0054 1B68     		ldr	r3, [r3]
 11408 0056 3B61     		str	r3, [r7, #16]
 11409              	.LBB840:
 11410              	.LBB841:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11411              		.loc 2 480 4
 11412 0058 3B69     		ldr	r3, [r7, #16]
 11413              		.syntax unified
 11414              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11415 005a 53E8003F 		ldrex r3, [r3]
 11416              	@ 0 "" 2
 11417              		.thumb
 11418              		.syntax unified
 11419 005e FB60     		str	r3, [r7, #12]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11420              		.loc 2 481 10
 11421 0060 FB68     		ldr	r3, [r7, #12]
 11422              	.LBE841:
 11423              	.LBE840:
 11424              		.loc 1 3738 5 discriminator 1
 11425 0062 43F04003 		orr	r3, r3, #64
 11426 0066 7B63     		str	r3, [r7, #52]
 11427 0068 FB6B     		ldr	r3, [r7, #60]
 11428 006a 1B68     		ldr	r3, [r3]
 11429 006c 1A46     		mov	r2, r3
 11430 006e 7B6B     		ldr	r3, [r7, #52]
 11431 0070 FB61     		str	r3, [r7, #28]
 11432 0072 BA61     		str	r2, [r7, #24]
 11433              	.LBB842:
 11434              	.LBB843:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11435              		.loc 2 531 4
 11436 0074 B969     		ldr	r1, [r7, #24]
 11437 0076 FA69     		ldr	r2, [r7, #28]
 11438              		.syntax unified
 11439              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11440 0078 41E80023 		strex r3, r2, [r1]
ARM GAS  /tmp/ccMjAmt3.s 			page 279


 11441              	@ 0 "" 2
 11442              		.thumb
 11443              		.syntax unified
 11444 007c 7B61     		str	r3, [r7, #20]
 11445              		.loc 2 532 10
 11446 007e 7B69     		ldr	r3, [r7, #20]
 11447              	.LBE843:
 11448              	.LBE842:
 11449              		.loc 1 3738 5 discriminator 1
 11450 0080 002B     		cmp	r3, #0
 11451 0082 E6D1     		bne	.L595
 11452              	.LBE839:
3739:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3740:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* DMA Circular mode */
3741:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
3742:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3743:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3744:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3745:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3746:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
3747:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3748:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3749:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3750:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3751:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 11453              		.loc 1 3751 1
 11454 0084 02E0     		b	.L597
 11455              	.L589:
3748:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11456              		.loc 1 3748 5
 11457 0086 F86B     		ldr	r0, [r7, #60]
 11458 0088 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 11459              	.L597:
 11460              		.loc 1 3751 1
 11461 008c 00BF     		nop
 11462 008e 4037     		adds	r7, r7, #64
 11463              		.cfi_def_cfa_offset 8
 11464 0090 BD46     		mov	sp, r7
 11465              		.cfi_def_cfa_register 13
 11466              		@ sp needed
 11467 0092 80BD     		pop	{r7, pc}
 11468              		.cfi_endproc
 11469              	.LFE886:
 11471              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 11472              		.align	1
 11473              		.syntax unified
 11474              		.thumb
 11475              		.thumb_func
 11477              	UART_DMATxHalfCplt:
 11478              	.LFB887:
3752:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3753:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3754:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3755:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param hdma DMA handle.
3756:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
3757:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3758:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccMjAmt3.s 			page 280


3759:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 11479              		.loc 1 3759 1
 11480              		.cfi_startproc
 11481              		@ args = 0, pretend = 0, frame = 16
 11482              		@ frame_needed = 1, uses_anonymous_args = 0
 11483 0000 80B5     		push	{r7, lr}
 11484              		.cfi_def_cfa_offset 8
 11485              		.cfi_offset 7, -8
 11486              		.cfi_offset 14, -4
 11487 0002 84B0     		sub	sp, sp, #16
 11488              		.cfi_def_cfa_offset 24
 11489 0004 00AF     		add	r7, sp, #0
 11490              		.cfi_def_cfa_register 7
 11491 0006 7860     		str	r0, [r7, #4]
3760:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11492              		.loc 1 3760 23
 11493 0008 7B68     		ldr	r3, [r7, #4]
 11494 000a DB6D     		ldr	r3, [r3, #92]
 11495 000c FB60     		str	r3, [r7, #12]
3761:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3762:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3763:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3764:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3765:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
3766:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3767:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 11496              		.loc 1 3767 3
 11497 000e F868     		ldr	r0, [r7, #12]
 11498 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3768:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3769:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 11499              		.loc 1 3769 1
 11500 0014 00BF     		nop
 11501 0016 1037     		adds	r7, r7, #16
 11502              		.cfi_def_cfa_offset 8
 11503 0018 BD46     		mov	sp, r7
 11504              		.cfi_def_cfa_register 13
 11505              		@ sp needed
 11506 001a 80BD     		pop	{r7, pc}
 11507              		.cfi_endproc
 11508              	.LFE887:
 11510              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 11511              		.align	1
 11512              		.syntax unified
 11513              		.thumb
 11514              		.thumb_func
 11516              	UART_DMAReceiveCplt:
 11517              	.LFB888:
3770:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3771:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3772:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3773:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param hdma DMA handle.
3774:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
3775:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3776:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3777:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 11518              		.loc 1 3777 1
ARM GAS  /tmp/ccMjAmt3.s 			page 281


 11519              		.cfi_startproc
 11520              		@ args = 0, pretend = 0, frame = 112
 11521              		@ frame_needed = 1, uses_anonymous_args = 0
 11522 0000 80B5     		push	{r7, lr}
 11523              		.cfi_def_cfa_offset 8
 11524              		.cfi_offset 7, -8
 11525              		.cfi_offset 14, -4
 11526 0002 9CB0     		sub	sp, sp, #112
 11527              		.cfi_def_cfa_offset 120
 11528 0004 00AF     		add	r7, sp, #0
 11529              		.cfi_def_cfa_register 7
 11530 0006 7860     		str	r0, [r7, #4]
3778:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11531              		.loc 1 3778 23
 11532 0008 7B68     		ldr	r3, [r7, #4]
 11533 000a DB6D     		ldr	r3, [r3, #92]
 11534 000c FB66     		str	r3, [r7, #108]
3779:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3780:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check if DMA in circular mode */
3781:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (hdma->Mode != DMA_LINKEDLIST_CIRCULAR)
 11535              		.loc 1 3781 11
 11536 000e 7B68     		ldr	r3, [r7, #4]
 11537 0010 1B6D     		ldr	r3, [r3, #80]
 11538              		.loc 1 3781 6
 11539 0012 812B     		cmp	r3, #129
 11540 0014 71D0     		beq	.L600
3782:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3783:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxXferCount = 0U;
 11541              		.loc 1 3783 24
 11542 0016 FB6E     		ldr	r3, [r7, #108]
 11543 0018 0022     		movs	r2, #0
 11544 001a A3F85E20 		strh	r2, [r3, #94]	@ movhi
 11545              	.L603:
 11546              	.LBB844:
3784:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3785:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3786:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 11547              		.loc 1 3786 5 discriminator 1
 11548 001e FB6E     		ldr	r3, [r7, #108]
 11549 0020 1B68     		ldr	r3, [r3]
 11550 0022 BB64     		str	r3, [r7, #72]
 11551              	.LBB845:
 11552              	.LBB846:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11553              		.loc 2 480 4
 11554 0024 BB6C     		ldr	r3, [r7, #72]
 11555              		.syntax unified
 11556              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11557 0026 53E8003F 		ldrex r3, [r3]
 11558              	@ 0 "" 2
 11559              		.thumb
 11560              		.syntax unified
 11561 002a 7B64     		str	r3, [r7, #68]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11562              		.loc 2 481 10
 11563 002c 7B6C     		ldr	r3, [r7, #68]
 11564              	.LBE846:
ARM GAS  /tmp/ccMjAmt3.s 			page 282


 11565              	.LBE845:
 11566              		.loc 1 3786 5 discriminator 1
 11567 002e 23F48073 		bic	r3, r3, #256
 11568 0032 BB66     		str	r3, [r7, #104]
 11569 0034 FB6E     		ldr	r3, [r7, #108]
 11570 0036 1B68     		ldr	r3, [r3]
 11571 0038 1A46     		mov	r2, r3
 11572 003a BB6E     		ldr	r3, [r7, #104]
 11573 003c 7B65     		str	r3, [r7, #84]
 11574 003e 3A65     		str	r2, [r7, #80]
 11575              	.LBB847:
 11576              	.LBB848:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11577              		.loc 2 531 4
 11578 0040 396D     		ldr	r1, [r7, #80]
 11579 0042 7A6D     		ldr	r2, [r7, #84]
 11580              		.syntax unified
 11581              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11582 0044 41E80023 		strex r3, r2, [r1]
 11583              	@ 0 "" 2
 11584              		.thumb
 11585              		.syntax unified
 11586 0048 FB64     		str	r3, [r7, #76]
 11587              		.loc 2 532 10
 11588 004a FB6C     		ldr	r3, [r7, #76]
 11589              	.LBE848:
 11590              	.LBE847:
 11591              		.loc 1 3786 5 discriminator 1
 11592 004c 002B     		cmp	r3, #0
 11593 004e E6D1     		bne	.L603
 11594              	.L606:
 11595              	.LBE844:
 11596              	.LBB849:
3787:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 11597              		.loc 1 3787 5 discriminator 1
 11598 0050 FB6E     		ldr	r3, [r7, #108]
 11599 0052 1B68     		ldr	r3, [r3]
 11600 0054 0833     		adds	r3, r3, #8
 11601 0056 7B63     		str	r3, [r7, #52]
 11602              	.LBB850:
 11603              	.LBB851:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11604              		.loc 2 480 4
 11605 0058 7B6B     		ldr	r3, [r7, #52]
 11606              		.syntax unified
 11607              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11608 005a 53E8003F 		ldrex r3, [r3]
 11609              	@ 0 "" 2
 11610              		.thumb
 11611              		.syntax unified
 11612 005e 3B63     		str	r3, [r7, #48]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11613              		.loc 2 481 10
 11614 0060 3B6B     		ldr	r3, [r7, #48]
 11615              	.LBE851:
 11616              	.LBE850:
 11617              		.loc 1 3787 5 discriminator 1
ARM GAS  /tmp/ccMjAmt3.s 			page 283


 11618 0062 23F00103 		bic	r3, r3, #1
 11619 0066 7B66     		str	r3, [r7, #100]
 11620 0068 FB6E     		ldr	r3, [r7, #108]
 11621 006a 1B68     		ldr	r3, [r3]
 11622 006c 0833     		adds	r3, r3, #8
 11623 006e 7A6E     		ldr	r2, [r7, #100]
 11624 0070 3A64     		str	r2, [r7, #64]
 11625 0072 FB63     		str	r3, [r7, #60]
 11626              	.LBB852:
 11627              	.LBB853:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11628              		.loc 2 531 4
 11629 0074 F96B     		ldr	r1, [r7, #60]
 11630 0076 3A6C     		ldr	r2, [r7, #64]
 11631              		.syntax unified
 11632              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11633 0078 41E80023 		strex r3, r2, [r1]
 11634              	@ 0 "" 2
 11635              		.thumb
 11636              		.syntax unified
 11637 007c BB63     		str	r3, [r7, #56]
 11638              		.loc 2 532 10
 11639 007e BB6B     		ldr	r3, [r7, #56]
 11640              	.LBE853:
 11641              	.LBE852:
 11642              		.loc 1 3787 5 discriminator 1
 11643 0080 002B     		cmp	r3, #0
 11644 0082 E5D1     		bne	.L606
 11645              	.L609:
 11646              	.LBE849:
 11647              	.LBB854:
3788:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3789:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3790:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        in the UART CR3 register */
3791:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 11648              		.loc 1 3791 5 discriminator 1
 11649 0084 FB6E     		ldr	r3, [r7, #108]
 11650 0086 1B68     		ldr	r3, [r3]
 11651 0088 0833     		adds	r3, r3, #8
 11652 008a 3B62     		str	r3, [r7, #32]
 11653              	.LBB855:
 11654              	.LBB856:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11655              		.loc 2 480 4
 11656 008c 3B6A     		ldr	r3, [r7, #32]
 11657              		.syntax unified
 11658              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11659 008e 53E8003F 		ldrex r3, [r3]
 11660              	@ 0 "" 2
 11661              		.thumb
 11662              		.syntax unified
 11663 0092 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11664              		.loc 2 481 10
 11665 0094 FB69     		ldr	r3, [r7, #28]
 11666              	.LBE856:
 11667              	.LBE855:
ARM GAS  /tmp/ccMjAmt3.s 			page 284


 11668              		.loc 1 3791 5 discriminator 1
 11669 0096 23F04003 		bic	r3, r3, #64
 11670 009a 3B66     		str	r3, [r7, #96]
 11671 009c FB6E     		ldr	r3, [r7, #108]
 11672 009e 1B68     		ldr	r3, [r3]
 11673 00a0 0833     		adds	r3, r3, #8
 11674 00a2 3A6E     		ldr	r2, [r7, #96]
 11675 00a4 FA62     		str	r2, [r7, #44]
 11676 00a6 BB62     		str	r3, [r7, #40]
 11677              	.LBB857:
 11678              	.LBB858:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11679              		.loc 2 531 4
 11680 00a8 B96A     		ldr	r1, [r7, #40]
 11681 00aa FA6A     		ldr	r2, [r7, #44]
 11682              		.syntax unified
 11683              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11684 00ac 41E80023 		strex r3, r2, [r1]
 11685              	@ 0 "" 2
 11686              		.thumb
 11687              		.syntax unified
 11688 00b0 7B62     		str	r3, [r7, #36]
 11689              		.loc 2 532 10
 11690 00b2 7B6A     		ldr	r3, [r7, #36]
 11691              	.LBE858:
 11692              	.LBE857:
 11693              		.loc 1 3791 5 discriminator 1
 11694 00b4 002B     		cmp	r3, #0
 11695 00b6 E5D1     		bne	.L609
 11696              	.LBE854:
3792:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3793:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3794:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 11697              		.loc 1 3794 20
 11698 00b8 FB6E     		ldr	r3, [r7, #108]
 11699 00ba 2022     		movs	r2, #32
 11700 00bc C3F88C20 		str	r2, [r3, #140]
3795:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3796:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3797:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11701              		.loc 1 3797 14
 11702 00c0 FB6E     		ldr	r3, [r7, #108]
 11703 00c2 DB6E     		ldr	r3, [r3, #108]
 11704              		.loc 1 3797 8
 11705 00c4 012B     		cmp	r3, #1
 11706 00c6 18D1     		bne	.L600
 11707              	.L612:
 11708              	.LBB859:
3798:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3799:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 11709              		.loc 1 3799 7 discriminator 1
 11710 00c8 FB6E     		ldr	r3, [r7, #108]
 11711 00ca 1B68     		ldr	r3, [r3]
 11712 00cc FB60     		str	r3, [r7, #12]
 11713              	.LBB860:
 11714              	.LBB861:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/ccMjAmt3.s 			page 285


 11715              		.loc 2 480 4
 11716 00ce FB68     		ldr	r3, [r7, #12]
 11717              		.syntax unified
 11718              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11719 00d0 53E8003F 		ldrex r3, [r3]
 11720              	@ 0 "" 2
 11721              		.thumb
 11722              		.syntax unified
 11723 00d4 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11724              		.loc 2 481 10
 11725 00d6 BB68     		ldr	r3, [r7, #8]
 11726              	.LBE861:
 11727              	.LBE860:
 11728              		.loc 1 3799 7 discriminator 1
 11729 00d8 23F01003 		bic	r3, r3, #16
 11730 00dc FB65     		str	r3, [r7, #92]
 11731 00de FB6E     		ldr	r3, [r7, #108]
 11732 00e0 1B68     		ldr	r3, [r3]
 11733 00e2 1A46     		mov	r2, r3
 11734 00e4 FB6D     		ldr	r3, [r7, #92]
 11735 00e6 BB61     		str	r3, [r7, #24]
 11736 00e8 7A61     		str	r2, [r7, #20]
 11737              	.LBB862:
 11738              	.LBB863:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11739              		.loc 2 531 4
 11740 00ea 7969     		ldr	r1, [r7, #20]
 11741 00ec BA69     		ldr	r2, [r7, #24]
 11742              		.syntax unified
 11743              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11744 00ee 41E80023 		strex r3, r2, [r1]
 11745              	@ 0 "" 2
 11746              		.thumb
 11747              		.syntax unified
 11748 00f2 3B61     		str	r3, [r7, #16]
 11749              		.loc 2 532 10
 11750 00f4 3B69     		ldr	r3, [r7, #16]
 11751              	.LBE863:
 11752              	.LBE862:
 11753              		.loc 1 3799 7 discriminator 1
 11754 00f6 002B     		cmp	r3, #0
 11755 00f8 E6D1     		bne	.L612
 11756              	.L600:
 11757              	.LBE859:
3800:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3801:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3802:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3803:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3804:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      In this case, Rx Event type is Transfer Complete */
3805:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 11758              		.loc 1 3805 22
 11759 00fa FB6E     		ldr	r3, [r7, #108]
 11760 00fc 0022     		movs	r2, #0
 11761 00fe 1A67     		str	r2, [r3, #112]
3806:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3807:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check current reception Mode :
ARM GAS  /tmp/ccMjAmt3.s 			page 286


3808:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3809:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11762              		.loc 1 3809 12
 11763 0100 FB6E     		ldr	r3, [r7, #108]
 11764 0102 DB6E     		ldr	r3, [r3, #108]
 11765              		.loc 1 3809 6
 11766 0104 012B     		cmp	r3, #1
 11767 0106 22D1     		bne	.L613
 11768              	.LBB864:
3810:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3811:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxXferCount = 0;
 11769              		.loc 1 3811 24
 11770 0108 FB6E     		ldr	r3, [r7, #108]
 11771 010a 0022     		movs	r2, #0
 11772 010c A3F85E20 		strh	r2, [r3, #94]	@ movhi
3812:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3813:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Check current nb of data still to be received on DMA side.
3814:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        DMA Normal mode, remaining nb of data will be 0
3815:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****        DMA Circular mode, remaining nb of data is reset to RxXferSize */
3816:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(hdma);
 11773              		.loc 1 3816 48
 11774 0110 7B68     		ldr	r3, [r7, #4]
 11775 0112 1B68     		ldr	r3, [r3]
 11776 0114 9B6C     		ldr	r3, [r3, #72]
 11777              		.loc 1 3816 14
 11778 0116 A7F85A30 		strh	r3, [r7, #90]	@ movhi
3817:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (nb_remaining_rx_data < huart->RxXferSize)
 11779              		.loc 1 3817 37
 11780 011a FB6E     		ldr	r3, [r7, #108]
 11781 011c B3F85C30 		ldrh	r3, [r3, #92]
 11782              		.loc 1 3817 8
 11783 0120 B7F85A20 		ldrh	r2, [r7, #90]
 11784 0124 9A42     		cmp	r2, r3
 11785 0126 04D2     		bcs	.L614
3818:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3819:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Update nb of remaining data */
3820:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxXferCount = nb_remaining_rx_data;
 11786              		.loc 1 3820 26
 11787 0128 FB6E     		ldr	r3, [r7, #108]
 11788 012a B7F85A20 		ldrh	r2, [r7, #90]	@ movhi
 11789 012e A3F85E20 		strh	r2, [r3, #94]	@ movhi
 11790              	.L614:
3821:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3822:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3823:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3824:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3825:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
3826:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
3827:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3828:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 11791              		.loc 1 3828 45
 11792 0132 FB6E     		ldr	r3, [r7, #108]
 11793 0134 B3F85C20 		ldrh	r2, [r3, #92]
 11794              		.loc 1 3828 65
 11795 0138 FB6E     		ldr	r3, [r7, #108]
 11796 013a B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 11797 013e 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccMjAmt3.s 			page 287


 11798              		.loc 1 3828 5
 11799 0140 D31A     		subs	r3, r2, r3
 11800 0142 9BB2     		uxth	r3, r3
 11801 0144 1946     		mov	r1, r3
 11802 0146 F86E     		ldr	r0, [r7, #108]
 11803 0148 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 11804              	.LBE864:
3829:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3830:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3831:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
3832:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3833:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3834:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3835:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3836:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3837:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
3838:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3839:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3840:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3841:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3842:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 11805              		.loc 1 3842 1
 11806 014c 02E0     		b	.L616
 11807              	.L613:
3839:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11808              		.loc 1 3839 5
 11809 014e F86E     		ldr	r0, [r7, #108]
 11810 0150 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 11811              	.L616:
 11812              		.loc 1 3842 1
 11813 0154 00BF     		nop
 11814 0156 7037     		adds	r7, r7, #112
 11815              		.cfi_def_cfa_offset 8
 11816 0158 BD46     		mov	sp, r7
 11817              		.cfi_def_cfa_register 13
 11818              		@ sp needed
 11819 015a 80BD     		pop	{r7, pc}
 11820              		.cfi_endproc
 11821              	.LFE888:
 11823              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 11824              		.align	1
 11825              		.syntax unified
 11826              		.thumb
 11827              		.thumb_func
 11829              	UART_DMARxHalfCplt:
 11830              	.LFB889:
3843:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3844:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3845:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3846:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param hdma DMA handle.
3847:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
3848:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3849:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3850:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 11831              		.loc 1 3850 1
 11832              		.cfi_startproc
 11833              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccMjAmt3.s 			page 288


 11834              		@ frame_needed = 1, uses_anonymous_args = 0
 11835 0000 80B5     		push	{r7, lr}
 11836              		.cfi_def_cfa_offset 8
 11837              		.cfi_offset 7, -8
 11838              		.cfi_offset 14, -4
 11839 0002 84B0     		sub	sp, sp, #16
 11840              		.cfi_def_cfa_offset 24
 11841 0004 00AF     		add	r7, sp, #0
 11842              		.cfi_def_cfa_register 7
 11843 0006 7860     		str	r0, [r7, #4]
3851:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11844              		.loc 1 3851 23
 11845 0008 7B68     		ldr	r3, [r7, #4]
 11846 000a DB6D     		ldr	r3, [r3, #92]
 11847 000c FB60     		str	r3, [r7, #12]
3852:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3853:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3854:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      In this case, Rx Event type is Half Transfer */
3855:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_HT;
 11848              		.loc 1 3855 22
 11849 000e FB68     		ldr	r3, [r7, #12]
 11850 0010 0122     		movs	r2, #1
 11851 0012 1A67     		str	r2, [r3, #112]
3856:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3857:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check current reception Mode :
3858:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3859:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11852              		.loc 1 3859 12
 11853 0014 FB68     		ldr	r3, [r7, #12]
 11854 0016 DB6E     		ldr	r3, [r3, #108]
 11855              		.loc 1 3859 6
 11856 0018 012B     		cmp	r3, #1
 11857 001a 23D1     		bne	.L618
 11858              	.LBB865:
3860:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3861:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxXferCount = huart->RxXferSize / 2U;
 11859              		.loc 1 3861 31
 11860 001c FB68     		ldr	r3, [r7, #12]
 11861 001e B3F85C30 		ldrh	r3, [r3, #92]
 11862              		.loc 1 3861 24
 11863 0022 5B08     		lsrs	r3, r3, #1
 11864 0024 9AB2     		uxth	r2, r3
 11865 0026 FB68     		ldr	r3, [r7, #12]
 11866 0028 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3862:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3863:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Check current nb of data still to be received on DMA side. */
3864:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(hdma);
 11867              		.loc 1 3864 48
 11868 002c 7B68     		ldr	r3, [r7, #4]
 11869 002e 1B68     		ldr	r3, [r3]
 11870 0030 9B6C     		ldr	r3, [r3, #72]
 11871              		.loc 1 3864 14
 11872 0032 7B81     		strh	r3, [r7, #10]	@ movhi
3865:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (nb_remaining_rx_data <= huart->RxXferSize)
 11873              		.loc 1 3865 38
 11874 0034 FB68     		ldr	r3, [r7, #12]
 11875 0036 B3F85C30 		ldrh	r3, [r3, #92]
ARM GAS  /tmp/ccMjAmt3.s 			page 289


 11876              		.loc 1 3865 8
 11877 003a 7A89     		ldrh	r2, [r7, #10]
 11878 003c 9A42     		cmp	r2, r3
 11879 003e 03D8     		bhi	.L619
3866:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3867:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Update nb of remaining data */
3868:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxXferCount = nb_remaining_rx_data;
 11880              		.loc 1 3868 26
 11881 0040 FB68     		ldr	r3, [r7, #12]
 11882 0042 7A89     		ldrh	r2, [r7, #10]	@ movhi
 11883 0044 A3F85E20 		strh	r2, [r3, #94]	@ movhi
 11884              	.L619:
3869:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3870:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3871:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3872:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3873:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
3874:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
3875:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3876:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 11885              		.loc 1 3876 45
 11886 0048 FB68     		ldr	r3, [r7, #12]
 11887 004a B3F85C20 		ldrh	r2, [r3, #92]
 11888              		.loc 1 3876 65
 11889 004e FB68     		ldr	r3, [r7, #12]
 11890 0050 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 11891 0054 9BB2     		uxth	r3, r3
 11892              		.loc 1 3876 5
 11893 0056 D31A     		subs	r3, r2, r3
 11894 0058 9BB2     		uxth	r3, r3
 11895 005a 1946     		mov	r1, r3
 11896 005c F868     		ldr	r0, [r7, #12]
 11897 005e FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 11898              	.LBE865:
3877:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3878:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3879:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
3880:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3881:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3882:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3883:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3884:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3885:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
3886:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3887:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3888:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3889:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3890:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 11899              		.loc 1 3890 1
 11900 0062 02E0     		b	.L621
 11901              	.L618:
3887:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11902              		.loc 1 3887 5
 11903 0064 F868     		ldr	r0, [r7, #12]
 11904 0066 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 11905              	.L621:
 11906              		.loc 1 3890 1
ARM GAS  /tmp/ccMjAmt3.s 			page 290


 11907 006a 00BF     		nop
 11908 006c 1037     		adds	r7, r7, #16
 11909              		.cfi_def_cfa_offset 8
 11910 006e BD46     		mov	sp, r7
 11911              		.cfi_def_cfa_register 13
 11912              		@ sp needed
 11913 0070 80BD     		pop	{r7, pc}
 11914              		.cfi_endproc
 11915              	.LFE889:
 11917              		.section	.text.UART_DMAError,"ax",%progbits
 11918              		.align	1
 11919              		.syntax unified
 11920              		.thumb
 11921              		.thumb_func
 11923              	UART_DMAError:
 11924              	.LFB890:
3891:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3892:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3893:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3894:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param hdma DMA handle.
3895:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
3896:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3897:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3898:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 11925              		.loc 1 3898 1
 11926              		.cfi_startproc
 11927              		@ args = 0, pretend = 0, frame = 24
 11928              		@ frame_needed = 1, uses_anonymous_args = 0
 11929 0000 80B5     		push	{r7, lr}
 11930              		.cfi_def_cfa_offset 8
 11931              		.cfi_offset 7, -8
 11932              		.cfi_offset 14, -4
 11933 0002 86B0     		sub	sp, sp, #24
 11934              		.cfi_def_cfa_offset 32
 11935 0004 00AF     		add	r7, sp, #0
 11936              		.cfi_def_cfa_register 7
 11937 0006 7860     		str	r0, [r7, #4]
3899:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11938              		.loc 1 3899 23
 11939 0008 7B68     		ldr	r3, [r7, #4]
 11940 000a DB6D     		ldr	r3, [r3, #92]
 11941 000c 7B61     		str	r3, [r7, #20]
3900:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3901:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 11942              		.loc 1 3901 31
 11943 000e 7B69     		ldr	r3, [r7, #20]
 11944 0010 D3F88830 		ldr	r3, [r3, #136]
 11945 0014 3B61     		str	r3, [r7, #16]
3902:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 11946              		.loc 1 3902 31
 11947 0016 7B69     		ldr	r3, [r7, #20]
 11948 0018 D3F88C30 		ldr	r3, [r3, #140]
 11949 001c FB60     		str	r3, [r7, #12]
3903:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3904:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3905:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 11950              		.loc 1 3905 8
ARM GAS  /tmp/ccMjAmt3.s 			page 291


 11951 001e 7B69     		ldr	r3, [r7, #20]
 11952 0020 1B68     		ldr	r3, [r3]
 11953 0022 9B68     		ldr	r3, [r3, #8]
 11954 0024 03F08003 		and	r3, r3, #128
 11955              		.loc 1 3905 6
 11956 0028 802B     		cmp	r3, #128
 11957 002a 09D1     		bne	.L623
 11958              		.loc 1 3905 62 discriminator 1
 11959 002c 3B69     		ldr	r3, [r7, #16]
 11960 002e 212B     		cmp	r3, #33
 11961 0030 06D1     		bne	.L623
3906:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3907:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3908:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->TxXferCount = 0U;
 11962              		.loc 1 3908 24
 11963 0032 7B69     		ldr	r3, [r7, #20]
 11964 0034 0022     		movs	r2, #0
 11965 0036 A3F85620 		strh	r2, [r3, #86]	@ movhi
3909:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 11966              		.loc 1 3909 5
 11967 003a 7869     		ldr	r0, [r7, #20]
 11968 003c FFF7FEFF 		bl	UART_EndTxTransfer
 11969              	.L623:
3910:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3911:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3912:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3913:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 11970              		.loc 1 3913 8
 11971 0040 7B69     		ldr	r3, [r7, #20]
 11972 0042 1B68     		ldr	r3, [r3]
 11973 0044 9B68     		ldr	r3, [r3, #8]
 11974 0046 03F04003 		and	r3, r3, #64
 11975              		.loc 1 3913 6
 11976 004a 402B     		cmp	r3, #64
 11977 004c 09D1     		bne	.L624
 11978              		.loc 1 3913 62 discriminator 1
 11979 004e FB68     		ldr	r3, [r7, #12]
 11980 0050 222B     		cmp	r3, #34
 11981 0052 06D1     		bne	.L624
3914:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3915:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3916:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxXferCount = 0U;
 11982              		.loc 1 3916 24
 11983 0054 7B69     		ldr	r3, [r7, #20]
 11984 0056 0022     		movs	r2, #0
 11985 0058 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3917:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 11986              		.loc 1 3917 5
 11987 005c 7869     		ldr	r0, [r7, #20]
 11988 005e FFF7FEFF 		bl	UART_EndRxTransfer
 11989              	.L624:
3918:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3919:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3920:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 11990              		.loc 1 3920 8
 11991 0062 7B69     		ldr	r3, [r7, #20]
 11992 0064 D3F89030 		ldr	r3, [r3, #144]
ARM GAS  /tmp/ccMjAmt3.s 			page 292


 11993              		.loc 1 3920 20
 11994 0068 43F01002 		orr	r2, r3, #16
 11995 006c 7B69     		ldr	r3, [r7, #20]
 11996 006e C3F89020 		str	r2, [r3, #144]
3921:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3922:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3923:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*Call registered error callback*/
3924:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCallback(huart);
3925:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
3926:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*Call legacy weak error callback*/
3927:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 11997              		.loc 1 3927 3
 11998 0072 7869     		ldr	r0, [r7, #20]
 11999 0074 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3928:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3929:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 12000              		.loc 1 3929 1
 12001 0078 00BF     		nop
 12002 007a 1837     		adds	r7, r7, #24
 12003              		.cfi_def_cfa_offset 8
 12004 007c BD46     		mov	sp, r7
 12005              		.cfi_def_cfa_register 13
 12006              		@ sp needed
 12007 007e 80BD     		pop	{r7, pc}
 12008              		.cfi_endproc
 12009              	.LFE890:
 12011              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 12012              		.align	1
 12013              		.syntax unified
 12014              		.thumb
 12015              		.thumb_func
 12017              	UART_DMAAbortOnError:
 12018              	.LFB891:
3930:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3931:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3932:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3933:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3934:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  hdma DMA handle.
3935:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
3936:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3937:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3938:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 12019              		.loc 1 3938 1
 12020              		.cfi_startproc
 12021              		@ args = 0, pretend = 0, frame = 16
 12022              		@ frame_needed = 1, uses_anonymous_args = 0
 12023 0000 80B5     		push	{r7, lr}
 12024              		.cfi_def_cfa_offset 8
 12025              		.cfi_offset 7, -8
 12026              		.cfi_offset 14, -4
 12027 0002 84B0     		sub	sp, sp, #16
 12028              		.cfi_def_cfa_offset 24
 12029 0004 00AF     		add	r7, sp, #0
 12030              		.cfi_def_cfa_register 7
 12031 0006 7860     		str	r0, [r7, #4]
3939:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 12032              		.loc 1 3939 23
ARM GAS  /tmp/ccMjAmt3.s 			page 293


 12033 0008 7B68     		ldr	r3, [r7, #4]
 12034 000a DB6D     		ldr	r3, [r3, #92]
 12035 000c FB60     		str	r3, [r7, #12]
3940:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxXferCount = 0U;
 12036              		.loc 1 3940 22
 12037 000e FB68     		ldr	r3, [r7, #12]
 12038 0010 0022     		movs	r2, #0
 12039 0012 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3941:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3942:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3943:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*Call registered error callback*/
3944:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCallback(huart);
3945:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
3946:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*Call legacy weak error callback*/
3947:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 12040              		.loc 1 3947 3
 12041 0016 F868     		ldr	r0, [r7, #12]
 12042 0018 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3948:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3949:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 12043              		.loc 1 3949 1
 12044 001c 00BF     		nop
 12045 001e 1037     		adds	r7, r7, #16
 12046              		.cfi_def_cfa_offset 8
 12047 0020 BD46     		mov	sp, r7
 12048              		.cfi_def_cfa_register 13
 12049              		@ sp needed
 12050 0022 80BD     		pop	{r7, pc}
 12051              		.cfi_endproc
 12052              	.LFE891:
 12054              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 12055              		.align	1
 12056              		.syntax unified
 12057              		.thumb
 12058              		.thumb_func
 12060              	UART_DMATxAbortCallback:
 12061              	.LFB892:
3950:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3951:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
3952:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3953:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3954:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3955:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3956:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  hdma DMA handle.
3957:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
3958:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
3959:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3960:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 12062              		.loc 1 3960 1
 12063              		.cfi_startproc
 12064              		@ args = 0, pretend = 0, frame = 16
 12065              		@ frame_needed = 1, uses_anonymous_args = 0
 12066 0000 80B5     		push	{r7, lr}
 12067              		.cfi_def_cfa_offset 8
 12068              		.cfi_offset 7, -8
 12069              		.cfi_offset 14, -4
 12070 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccMjAmt3.s 			page 294


 12071              		.cfi_def_cfa_offset 24
 12072 0004 00AF     		add	r7, sp, #0
 12073              		.cfi_def_cfa_register 7
 12074 0006 7860     		str	r0, [r7, #4]
3961:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 12075              		.loc 1 3961 23
 12076 0008 7B68     		ldr	r3, [r7, #4]
 12077 000a DB6D     		ldr	r3, [r3, #92]
 12078 000c FB60     		str	r3, [r7, #12]
3962:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3963:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 12079              		.loc 1 3963 8
 12080 000e FB68     		ldr	r3, [r7, #12]
 12081 0010 DB6F     		ldr	r3, [r3, #124]
 12082              		.loc 1 3963 36
 12083 0012 0022     		movs	r2, #0
 12084 0014 DA66     		str	r2, [r3, #108]
3964:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3965:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3966:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 12085              		.loc 1 3966 12
 12086 0016 FB68     		ldr	r3, [r7, #12]
 12087 0018 D3F88030 		ldr	r3, [r3, #128]
 12088              		.loc 1 3966 6
 12089 001c 002B     		cmp	r3, #0
 12090 001e 05D0     		beq	.L627
3967:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3968:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 12091              		.loc 1 3968 14
 12092 0020 FB68     		ldr	r3, [r7, #12]
 12093 0022 D3F88030 		ldr	r3, [r3, #128]
 12094              		.loc 1 3968 22
 12095 0026 DB6E     		ldr	r3, [r3, #108]
 12096              		.loc 1 3968 8
 12097 0028 002B     		cmp	r3, #0
 12098 002a 2BD1     		bne	.L630
 12099              	.L627:
3969:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
3970:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return;
3971:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
3972:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3973:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3974:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3975:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxXferCount = 0U;
 12100              		.loc 1 3975 22
 12101 002c FB68     		ldr	r3, [r7, #12]
 12102 002e 0022     		movs	r2, #0
 12103 0030 A3F85620 		strh	r2, [r3, #86]	@ movhi
3976:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxXferCount = 0U;
 12104              		.loc 1 3976 22
 12105 0034 FB68     		ldr	r3, [r7, #12]
 12106 0036 0022     		movs	r2, #0
 12107 0038 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3977:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3978:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Reset errorCode */
3979:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 12108              		.loc 1 3979 20
ARM GAS  /tmp/ccMjAmt3.s 			page 295


 12109 003c FB68     		ldr	r3, [r7, #12]
 12110 003e 0022     		movs	r2, #0
 12111 0040 C3F89020 		str	r2, [r3, #144]
3980:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3981:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3982:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 12112              		.loc 1 3982 3
 12113 0044 FB68     		ldr	r3, [r7, #12]
 12114 0046 1B68     		ldr	r3, [r3]
 12115 0048 0F22     		movs	r2, #15
 12116 004a 1A62     		str	r2, [r3, #32]
3983:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3984:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3985:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 12117              		.loc 1 3985 12
 12118 004c FB68     		ldr	r3, [r7, #12]
 12119 004e 5B6E     		ldr	r3, [r3, #100]
 12120              		.loc 1 3985 6
 12121 0050 B3F1005F 		cmp	r3, #536870912
 12122 0054 07D1     		bne	.L629
3986:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
3987:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 12123              		.loc 1 3987 5
 12124 0056 FB68     		ldr	r3, [r7, #12]
 12125 0058 1B68     		ldr	r3, [r3]
 12126 005a 9A69     		ldr	r2, [r3, #24]
 12127 005c FB68     		ldr	r3, [r7, #12]
 12128 005e 1B68     		ldr	r3, [r3]
 12129 0060 42F01002 		orr	r2, r2, #16
 12130 0064 9A61     		str	r2, [r3, #24]
 12131              	.L629:
3988:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
3989:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3990:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3991:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 12132              		.loc 1 3991 18
 12133 0066 FB68     		ldr	r3, [r7, #12]
 12134 0068 2022     		movs	r2, #32
 12135 006a C3F88820 		str	r2, [r3, #136]
3992:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 12136              		.loc 1 3992 18
 12137 006e FB68     		ldr	r3, [r7, #12]
 12138 0070 2022     		movs	r2, #32
 12139 0072 C3F88C20 		str	r2, [r3, #140]
3993:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 12140              		.loc 1 3993 24
 12141 0076 FB68     		ldr	r3, [r7, #12]
 12142 0078 0022     		movs	r2, #0
 12143 007a DA66     		str	r2, [r3, #108]
3994:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
3995:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call user Abort complete callback */
3996:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3997:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call registered Abort complete callback */
3998:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3999:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4000:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
4001:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
ARM GAS  /tmp/ccMjAmt3.s 			page 296


 12144              		.loc 1 4001 3
 12145 007c F868     		ldr	r0, [r7, #12]
 12146 007e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 12147 0082 00E0     		b	.L626
 12148              	.L630:
3970:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 12149              		.loc 1 3970 7
 12150 0084 00BF     		nop
 12151              	.L626:
4002:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4003:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 12152              		.loc 1 4003 1
 12153 0086 1037     		adds	r7, r7, #16
 12154              		.cfi_def_cfa_offset 8
 12155 0088 BD46     		mov	sp, r7
 12156              		.cfi_def_cfa_register 13
 12157              		@ sp needed
 12158 008a 80BD     		pop	{r7, pc}
 12159              		.cfi_endproc
 12160              	.LFE892:
 12162              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 12163              		.align	1
 12164              		.syntax unified
 12165              		.thumb
 12166              		.thumb_func
 12168              	UART_DMARxAbortCallback:
 12169              	.LFB893:
4004:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4005:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4006:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4007:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
4008:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
4009:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
4010:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
4011:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  hdma DMA handle.
4012:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4013:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4014:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
4015:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 12170              		.loc 1 4015 1
 12171              		.cfi_startproc
 12172              		@ args = 0, pretend = 0, frame = 16
 12173              		@ frame_needed = 1, uses_anonymous_args = 0
 12174 0000 80B5     		push	{r7, lr}
 12175              		.cfi_def_cfa_offset 8
 12176              		.cfi_offset 7, -8
 12177              		.cfi_offset 14, -4
 12178 0002 84B0     		sub	sp, sp, #16
 12179              		.cfi_def_cfa_offset 24
 12180 0004 00AF     		add	r7, sp, #0
 12181              		.cfi_def_cfa_register 7
 12182 0006 7860     		str	r0, [r7, #4]
4016:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 12183              		.loc 1 4016 23
 12184 0008 7B68     		ldr	r3, [r7, #4]
 12185 000a DB6D     		ldr	r3, [r3, #92]
 12186 000c FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccMjAmt3.s 			page 297


4017:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4018:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 12187              		.loc 1 4018 8
 12188 000e FB68     		ldr	r3, [r7, #12]
 12189 0010 D3F88030 		ldr	r3, [r3, #128]
 12190              		.loc 1 4018 36
 12191 0014 0022     		movs	r2, #0
 12192 0016 DA66     		str	r2, [r3, #108]
4019:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4020:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
4021:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 12193              		.loc 1 4021 12
 12194 0018 FB68     		ldr	r3, [r7, #12]
 12195 001a DB6F     		ldr	r3, [r3, #124]
 12196              		.loc 1 4021 6
 12197 001c 002B     		cmp	r3, #0
 12198 001e 04D0     		beq	.L632
4022:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4023:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 12199              		.loc 1 4023 14
 12200 0020 FB68     		ldr	r3, [r7, #12]
 12201 0022 DB6F     		ldr	r3, [r3, #124]
 12202              		.loc 1 4023 22
 12203 0024 DB6E     		ldr	r3, [r3, #108]
 12204              		.loc 1 4023 8
 12205 0026 002B     		cmp	r3, #0
 12206 0028 26D1     		bne	.L634
 12207              	.L632:
4024:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4025:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       return;
4026:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4027:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4028:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4029:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
4030:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxXferCount = 0U;
 12208              		.loc 1 4030 22
 12209 002a FB68     		ldr	r3, [r7, #12]
 12210 002c 0022     		movs	r2, #0
 12211 002e A3F85620 		strh	r2, [r3, #86]	@ movhi
4031:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxXferCount = 0U;
 12212              		.loc 1 4031 22
 12213 0032 FB68     		ldr	r3, [r7, #12]
 12214 0034 0022     		movs	r2, #0
 12215 0036 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4032:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4033:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Reset errorCode */
4034:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 12216              		.loc 1 4034 20
 12217 003a FB68     		ldr	r3, [r7, #12]
 12218 003c 0022     		movs	r2, #0
 12219 003e C3F89020 		str	r2, [r3, #144]
4035:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4036:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4037:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 12220              		.loc 1 4037 3
 12221 0042 FB68     		ldr	r3, [r7, #12]
 12222 0044 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 298


 12223 0046 0F22     		movs	r2, #15
 12224 0048 1A62     		str	r2, [r3, #32]
4038:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4039:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Discard the received data */
4040:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 12225              		.loc 1 4040 3
 12226 004a FB68     		ldr	r3, [r7, #12]
 12227 004c 1B68     		ldr	r3, [r3]
 12228 004e 9A69     		ldr	r2, [r3, #24]
 12229 0050 FB68     		ldr	r3, [r7, #12]
 12230 0052 1B68     		ldr	r3, [r3]
 12231 0054 42F00802 		orr	r2, r2, #8
 12232 0058 9A61     		str	r2, [r3, #24]
4041:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4042:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
4043:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 12233              		.loc 1 4043 18
 12234 005a FB68     		ldr	r3, [r7, #12]
 12235 005c 2022     		movs	r2, #32
 12236 005e C3F88820 		str	r2, [r3, #136]
4044:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 12237              		.loc 1 4044 18
 12238 0062 FB68     		ldr	r3, [r7, #12]
 12239 0064 2022     		movs	r2, #32
 12240 0066 C3F88C20 		str	r2, [r3, #140]
4045:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 12241              		.loc 1 4045 24
 12242 006a FB68     		ldr	r3, [r7, #12]
 12243 006c 0022     		movs	r2, #0
 12244 006e DA66     		str	r2, [r3, #108]
4046:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4047:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call user Abort complete callback */
4048:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4049:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call registered Abort complete callback */
4050:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
4051:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4052:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
4053:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 12245              		.loc 1 4053 3
 12246 0070 F868     		ldr	r0, [r7, #12]
 12247 0072 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 12248 0076 00E0     		b	.L631
 12249              	.L634:
4025:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 12250              		.loc 1 4025 7
 12251 0078 00BF     		nop
 12252              	.L631:
4054:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4055:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 12253              		.loc 1 4055 1
 12254 007a 1037     		adds	r7, r7, #16
 12255              		.cfi_def_cfa_offset 8
 12256 007c BD46     		mov	sp, r7
 12257              		.cfi_def_cfa_register 13
 12258              		@ sp needed
 12259 007e 80BD     		pop	{r7, pc}
 12260              		.cfi_endproc
ARM GAS  /tmp/ccMjAmt3.s 			page 299


 12261              	.LFE893:
 12263              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 12264              		.align	1
 12265              		.syntax unified
 12266              		.thumb
 12267              		.thumb_func
 12269              	UART_DMATxOnlyAbortCallback:
 12270              	.LFB894:
4056:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4057:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4058:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4059:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
4060:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
4061:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
4062:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
4063:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  hdma DMA handle.
4064:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4065:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4066:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
4067:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 12271              		.loc 1 4067 1
 12272              		.cfi_startproc
 12273              		@ args = 0, pretend = 0, frame = 16
 12274              		@ frame_needed = 1, uses_anonymous_args = 0
 12275 0000 80B5     		push	{r7, lr}
 12276              		.cfi_def_cfa_offset 8
 12277              		.cfi_offset 7, -8
 12278              		.cfi_offset 14, -4
 12279 0002 84B0     		sub	sp, sp, #16
 12280              		.cfi_def_cfa_offset 24
 12281 0004 00AF     		add	r7, sp, #0
 12282              		.cfi_def_cfa_register 7
 12283 0006 7860     		str	r0, [r7, #4]
4068:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 12284              		.loc 1 4068 23
 12285 0008 7B68     		ldr	r3, [r7, #4]
 12286 000a DB6D     		ldr	r3, [r3, #92]
 12287 000c FB60     		str	r3, [r7, #12]
4069:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4070:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxXferCount = 0U;
 12288              		.loc 1 4070 22
 12289 000e FB68     		ldr	r3, [r7, #12]
 12290 0010 0022     		movs	r2, #0
 12291 0012 A3F85620 		strh	r2, [r3, #86]	@ movhi
4071:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4072:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
4073:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 12292              		.loc 1 4073 12
 12293 0016 FB68     		ldr	r3, [r7, #12]
 12294 0018 5B6E     		ldr	r3, [r3, #100]
 12295              		.loc 1 4073 6
 12296 001a B3F1005F 		cmp	r3, #536870912
 12297 001e 07D1     		bne	.L636
4074:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4075:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 12298              		.loc 1 4075 5
 12299 0020 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccMjAmt3.s 			page 300


 12300 0022 1B68     		ldr	r3, [r3]
 12301 0024 9A69     		ldr	r2, [r3, #24]
 12302 0026 FB68     		ldr	r3, [r7, #12]
 12303 0028 1B68     		ldr	r3, [r3]
 12304 002a 42F01002 		orr	r2, r2, #16
 12305 002e 9A61     		str	r2, [r3, #24]
 12306              	.L636:
4076:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4077:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4078:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Restore huart->gState to Ready */
4079:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 12307              		.loc 1 4079 17
 12308 0030 FB68     		ldr	r3, [r7, #12]
 12309 0032 2022     		movs	r2, #32
 12310 0034 C3F88820 		str	r2, [r3, #136]
4080:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4081:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call user Abort complete callback */
4082:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4083:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
4084:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
4085:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4086:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
4087:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 12311              		.loc 1 4087 3
 12312 0038 F868     		ldr	r0, [r7, #12]
 12313 003a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
4088:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4089:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 12314              		.loc 1 4089 1
 12315 003e 00BF     		nop
 12316 0040 1037     		adds	r7, r7, #16
 12317              		.cfi_def_cfa_offset 8
 12318 0042 BD46     		mov	sp, r7
 12319              		.cfi_def_cfa_register 13
 12320              		@ sp needed
 12321 0044 80BD     		pop	{r7, pc}
 12322              		.cfi_endproc
 12323              	.LFE894:
 12325              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 12326              		.align	1
 12327              		.syntax unified
 12328              		.thumb
 12329              		.thumb_func
 12331              	UART_DMARxOnlyAbortCallback:
 12332              	.LFB895:
4090:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4091:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4092:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
4093:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
4094:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
4095:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
4096:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  hdma DMA handle.
4097:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4098:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4099:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
4100:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 12333              		.loc 1 4100 1
ARM GAS  /tmp/ccMjAmt3.s 			page 301


 12334              		.cfi_startproc
 12335              		@ args = 0, pretend = 0, frame = 16
 12336              		@ frame_needed = 1, uses_anonymous_args = 0
 12337 0000 80B5     		push	{r7, lr}
 12338              		.cfi_def_cfa_offset 8
 12339              		.cfi_offset 7, -8
 12340              		.cfi_offset 14, -4
 12341 0002 84B0     		sub	sp, sp, #16
 12342              		.cfi_def_cfa_offset 24
 12343 0004 00AF     		add	r7, sp, #0
 12344              		.cfi_def_cfa_register 7
 12345 0006 7860     		str	r0, [r7, #4]
4101:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 12346              		.loc 1 4101 23
 12347 0008 7B68     		ldr	r3, [r7, #4]
 12348 000a DB6D     		ldr	r3, [r3, #92]
 12349 000c FB60     		str	r3, [r7, #12]
4102:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4103:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxXferCount = 0U;
 12350              		.loc 1 4103 22
 12351 000e FB68     		ldr	r3, [r7, #12]
 12352 0010 0022     		movs	r2, #0
 12353 0012 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4104:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4105:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4106:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 12354              		.loc 1 4106 3
 12355 0016 FB68     		ldr	r3, [r7, #12]
 12356 0018 1B68     		ldr	r3, [r3]
 12357 001a 0F22     		movs	r2, #15
 12358 001c 1A62     		str	r2, [r3, #32]
4107:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4108:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Discard the received data */
4109:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 12359              		.loc 1 4109 3
 12360 001e FB68     		ldr	r3, [r7, #12]
 12361 0020 1B68     		ldr	r3, [r3]
 12362 0022 9A69     		ldr	r2, [r3, #24]
 12363 0024 FB68     		ldr	r3, [r7, #12]
 12364 0026 1B68     		ldr	r3, [r3]
 12365 0028 42F00802 		orr	r2, r2, #8
 12366 002c 9A61     		str	r2, [r3, #24]
4110:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4111:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
4112:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 12367              		.loc 1 4112 18
 12368 002e FB68     		ldr	r3, [r7, #12]
 12369 0030 2022     		movs	r2, #32
 12370 0032 C3F88C20 		str	r2, [r3, #140]
4113:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 12371              		.loc 1 4113 24
 12372 0036 FB68     		ldr	r3, [r7, #12]
 12373 0038 0022     		movs	r2, #0
 12374 003a DA66     		str	r2, [r3, #108]
4114:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4115:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call user Abort complete callback */
4116:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccMjAmt3.s 			page 302


4117:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
4118:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
4119:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4120:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
4121:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 12375              		.loc 1 4121 3
 12376 003c F868     		ldr	r0, [r7, #12]
 12377 003e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
4122:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4123:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 12378              		.loc 1 4123 1
 12379 0042 00BF     		nop
 12380 0044 1037     		adds	r7, r7, #16
 12381              		.cfi_def_cfa_offset 8
 12382 0046 BD46     		mov	sp, r7
 12383              		.cfi_def_cfa_register 13
 12384              		@ sp needed
 12385 0048 80BD     		pop	{r7, pc}
 12386              		.cfi_endproc
 12387              	.LFE895:
 12389              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 12390              		.align	1
 12391              		.syntax unified
 12392              		.thumb
 12393              		.thumb_func
 12395              	UART_TxISR_8BIT:
 12396              	.LFB896:
4124:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* HAL_DMA_MODULE_ENABLED */
4125:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4126:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4127:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
4128:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4129:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4130:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
4131:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4132:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4133:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
4134:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 12397              		.loc 1 4134 1
 12398              		.cfi_startproc
 12399              		@ args = 0, pretend = 0, frame = 56
 12400              		@ frame_needed = 1, uses_anonymous_args = 0
 12401              		@ link register save eliminated.
 12402 0000 80B4     		push	{r7}
 12403              		.cfi_def_cfa_offset 4
 12404              		.cfi_offset 7, -4
 12405 0002 8FB0     		sub	sp, sp, #60
 12406              		.cfi_def_cfa_offset 64
 12407 0004 00AF     		add	r7, sp, #0
 12408              		.cfi_def_cfa_register 7
 12409 0006 7860     		str	r0, [r7, #4]
4135:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4136:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 12410              		.loc 1 4136 12
 12411 0008 7B68     		ldr	r3, [r7, #4]
 12412 000a D3F88830 		ldr	r3, [r3, #136]
 12413              		.loc 1 4136 6
ARM GAS  /tmp/ccMjAmt3.s 			page 303


 12414 000e 212B     		cmp	r3, #33
 12415 0010 4CD1     		bne	.L647
4137:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4138:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 12416              		.loc 1 4138 14
 12417 0012 7B68     		ldr	r3, [r7, #4]
 12418 0014 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12419 0018 9BB2     		uxth	r3, r3
 12420              		.loc 1 4138 8
 12421 001a 002B     		cmp	r3, #0
 12422 001c 32D1     		bne	.L640
 12423              	.L643:
 12424              	.LBB866:
4139:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4140:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4141:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 12425              		.loc 1 4141 7 discriminator 1
 12426 001e 7B68     		ldr	r3, [r7, #4]
 12427 0020 1B68     		ldr	r3, [r3]
 12428 0022 3B62     		str	r3, [r7, #32]
 12429              	.LBB867:
 12430              	.LBB868:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12431              		.loc 2 480 4
 12432 0024 3B6A     		ldr	r3, [r7, #32]
 12433              		.syntax unified
 12434              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12435 0026 53E8003F 		ldrex r3, [r3]
 12436              	@ 0 "" 2
 12437              		.thumb
 12438              		.syntax unified
 12439 002a FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12440              		.loc 2 481 10
 12441 002c FB69     		ldr	r3, [r7, #28]
 12442              	.LBE868:
 12443              	.LBE867:
 12444              		.loc 1 4141 7 discriminator 1
 12445 002e 23F08003 		bic	r3, r3, #128
 12446 0032 7B63     		str	r3, [r7, #52]
 12447 0034 7B68     		ldr	r3, [r7, #4]
 12448 0036 1B68     		ldr	r3, [r3]
 12449 0038 1A46     		mov	r2, r3
 12450 003a 7B6B     		ldr	r3, [r7, #52]
 12451 003c FB62     		str	r3, [r7, #44]
 12452 003e BA62     		str	r2, [r7, #40]
 12453              	.LBB869:
 12454              	.LBB870:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12455              		.loc 2 531 4
 12456 0040 B96A     		ldr	r1, [r7, #40]
 12457 0042 FA6A     		ldr	r2, [r7, #44]
 12458              		.syntax unified
 12459              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12460 0044 41E80023 		strex r3, r2, [r1]
 12461              	@ 0 "" 2
 12462              		.thumb
ARM GAS  /tmp/ccMjAmt3.s 			page 304


 12463              		.syntax unified
 12464 0048 7B62     		str	r3, [r7, #36]
 12465              		.loc 2 532 10
 12466 004a 7B6A     		ldr	r3, [r7, #36]
 12467              	.LBE870:
 12468              	.LBE869:
 12469              		.loc 1 4141 7 discriminator 1
 12470 004c 002B     		cmp	r3, #0
 12471 004e E6D1     		bne	.L643
 12472              	.L646:
 12473              	.LBE866:
 12474              	.LBB871:
4142:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4143:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4144:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 12475              		.loc 1 4144 7 discriminator 1
 12476 0050 7B68     		ldr	r3, [r7, #4]
 12477 0052 1B68     		ldr	r3, [r3]
 12478 0054 FB60     		str	r3, [r7, #12]
 12479              	.LBB872:
 12480              	.LBB873:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12481              		.loc 2 480 4
 12482 0056 FB68     		ldr	r3, [r7, #12]
 12483              		.syntax unified
 12484              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12485 0058 53E8003F 		ldrex r3, [r3]
 12486              	@ 0 "" 2
 12487              		.thumb
 12488              		.syntax unified
 12489 005c BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12490              		.loc 2 481 10
 12491 005e BB68     		ldr	r3, [r7, #8]
 12492              	.LBE873:
 12493              	.LBE872:
 12494              		.loc 1 4144 7 discriminator 1
 12495 0060 43F04003 		orr	r3, r3, #64
 12496 0064 3B63     		str	r3, [r7, #48]
 12497 0066 7B68     		ldr	r3, [r7, #4]
 12498 0068 1B68     		ldr	r3, [r3]
 12499 006a 1A46     		mov	r2, r3
 12500 006c 3B6B     		ldr	r3, [r7, #48]
 12501 006e BB61     		str	r3, [r7, #24]
 12502 0070 7A61     		str	r2, [r7, #20]
 12503              	.LBB874:
 12504              	.LBB875:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12505              		.loc 2 531 4
 12506 0072 7969     		ldr	r1, [r7, #20]
 12507 0074 BA69     		ldr	r2, [r7, #24]
 12508              		.syntax unified
 12509              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12510 0076 41E80023 		strex r3, r2, [r1]
 12511              	@ 0 "" 2
 12512              		.thumb
 12513              		.syntax unified
ARM GAS  /tmp/ccMjAmt3.s 			page 305


 12514 007a 3B61     		str	r3, [r7, #16]
 12515              		.loc 2 532 10
 12516 007c 3B69     		ldr	r3, [r7, #16]
 12517              	.LBE875:
 12518              	.LBE874:
 12519              		.loc 1 4144 7 discriminator 1
 12520 007e 002B     		cmp	r3, #0
 12521 0080 E6D1     		bne	.L646
 12522              	.LBE871:
4145:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4146:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
4147:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4148:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4149:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr++;
4150:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->TxXferCount--;
4151:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4152:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4153:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 12523              		.loc 1 4153 1
 12524 0082 13E0     		b	.L647
 12525              	.L640:
4148:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr++;
 12526              		.loc 1 4148 46
 12527 0084 7B68     		ldr	r3, [r7, #4]
 12528 0086 1B6D     		ldr	r3, [r3, #80]
4148:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr++;
 12529              		.loc 1 4148 40
 12530 0088 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
4148:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr++;
 12531              		.loc 1 4148 12
 12532 008a 7B68     		ldr	r3, [r7, #4]
 12533 008c 1B68     		ldr	r3, [r3]
4148:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr++;
 12534              		.loc 1 4148 28
 12535 008e 9A62     		str	r2, [r3, #40]
4149:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->TxXferCount--;
 12536              		.loc 1 4149 12
 12537 0090 7B68     		ldr	r3, [r7, #4]
 12538 0092 1B6D     		ldr	r3, [r3, #80]
4149:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->TxXferCount--;
 12539              		.loc 1 4149 24
 12540 0094 5A1C     		adds	r2, r3, #1
 12541 0096 7B68     		ldr	r3, [r7, #4]
 12542 0098 1A65     		str	r2, [r3, #80]
4150:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 12543              		.loc 1 4150 12
 12544 009a 7B68     		ldr	r3, [r7, #4]
 12545 009c B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12546 00a0 9BB2     		uxth	r3, r3
4150:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 12547              		.loc 1 4150 25
 12548 00a2 013B     		subs	r3, r3, #1
 12549 00a4 9AB2     		uxth	r2, r3
 12550 00a6 7B68     		ldr	r3, [r7, #4]
 12551 00a8 A3F85620 		strh	r2, [r3, #86]	@ movhi
 12552              	.L647:
 12553              		.loc 1 4153 1
ARM GAS  /tmp/ccMjAmt3.s 			page 306


 12554 00ac 00BF     		nop
 12555 00ae 3C37     		adds	r7, r7, #60
 12556              		.cfi_def_cfa_offset 4
 12557 00b0 BD46     		mov	sp, r7
 12558              		.cfi_def_cfa_register 13
 12559              		@ sp needed
 12560 00b2 5DF8047B 		ldr	r7, [sp], #4
 12561              		.cfi_restore 7
 12562              		.cfi_def_cfa_offset 0
 12563 00b6 7047     		bx	lr
 12564              		.cfi_endproc
 12565              	.LFE896:
 12567              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 12568              		.align	1
 12569              		.syntax unified
 12570              		.thumb
 12571              		.thumb_func
 12573              	UART_TxISR_16BIT:
 12574              	.LFB897:
4154:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4155:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4156:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
4157:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4158:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4159:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
4160:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4161:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4162:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
4163:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 12575              		.loc 1 4163 1
 12576              		.cfi_startproc
 12577              		@ args = 0, pretend = 0, frame = 64
 12578              		@ frame_needed = 1, uses_anonymous_args = 0
 12579              		@ link register save eliminated.
 12580 0000 80B4     		push	{r7}
 12581              		.cfi_def_cfa_offset 4
 12582              		.cfi_offset 7, -4
 12583 0002 91B0     		sub	sp, sp, #68
 12584              		.cfi_def_cfa_offset 72
 12585 0004 00AF     		add	r7, sp, #0
 12586              		.cfi_def_cfa_register 7
 12587 0006 7860     		str	r0, [r7, #4]
4164:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   const uint16_t *tmp;
4165:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4166:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4167:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 12588              		.loc 1 4167 12
 12589 0008 7B68     		ldr	r3, [r7, #4]
 12590 000a D3F88830 		ldr	r3, [r3, #136]
 12591              		.loc 1 4167 6
 12592 000e 212B     		cmp	r3, #33
 12593 0010 51D1     		bne	.L657
4168:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4169:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 12594              		.loc 1 4169 14
 12595 0012 7B68     		ldr	r3, [r7, #4]
 12596 0014 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
ARM GAS  /tmp/ccMjAmt3.s 			page 307


 12597 0018 9BB2     		uxth	r3, r3
 12598              		.loc 1 4169 8
 12599 001a 002B     		cmp	r3, #0
 12600 001c 32D1     		bne	.L650
 12601              	.L653:
 12602              	.LBB876:
4170:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4171:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4172:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 12603              		.loc 1 4172 7 discriminator 1
 12604 001e 7B68     		ldr	r3, [r7, #4]
 12605 0020 1B68     		ldr	r3, [r3]
 12606 0022 7B62     		str	r3, [r7, #36]
 12607              	.LBB877:
 12608              	.LBB878:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12609              		.loc 2 480 4
 12610 0024 7B6A     		ldr	r3, [r7, #36]
 12611              		.syntax unified
 12612              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12613 0026 53E8003F 		ldrex r3, [r3]
 12614              	@ 0 "" 2
 12615              		.thumb
 12616              		.syntax unified
 12617 002a 3B62     		str	r3, [r7, #32]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12618              		.loc 2 481 10
 12619 002c 3B6A     		ldr	r3, [r7, #32]
 12620              	.LBE878:
 12621              	.LBE877:
 12622              		.loc 1 4172 7 discriminator 1
 12623 002e 23F08003 		bic	r3, r3, #128
 12624 0032 BB63     		str	r3, [r7, #56]
 12625 0034 7B68     		ldr	r3, [r7, #4]
 12626 0036 1B68     		ldr	r3, [r3]
 12627 0038 1A46     		mov	r2, r3
 12628 003a BB6B     		ldr	r3, [r7, #56]
 12629 003c 3B63     		str	r3, [r7, #48]
 12630 003e FA62     		str	r2, [r7, #44]
 12631              	.LBB879:
 12632              	.LBB880:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12633              		.loc 2 531 4
 12634 0040 F96A     		ldr	r1, [r7, #44]
 12635 0042 3A6B     		ldr	r2, [r7, #48]
 12636              		.syntax unified
 12637              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12638 0044 41E80023 		strex r3, r2, [r1]
 12639              	@ 0 "" 2
 12640              		.thumb
 12641              		.syntax unified
 12642 0048 BB62     		str	r3, [r7, #40]
 12643              		.loc 2 532 10
 12644 004a BB6A     		ldr	r3, [r7, #40]
 12645              	.LBE880:
 12646              	.LBE879:
 12647              		.loc 1 4172 7 discriminator 1
ARM GAS  /tmp/ccMjAmt3.s 			page 308


 12648 004c 002B     		cmp	r3, #0
 12649 004e E6D1     		bne	.L653
 12650              	.L656:
 12651              	.LBE876:
 12652              	.LBB881:
4173:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4174:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4175:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 12653              		.loc 1 4175 7 discriminator 1
 12654 0050 7B68     		ldr	r3, [r7, #4]
 12655 0052 1B68     		ldr	r3, [r3]
 12656 0054 3B61     		str	r3, [r7, #16]
 12657              	.LBB882:
 12658              	.LBB883:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12659              		.loc 2 480 4
 12660 0056 3B69     		ldr	r3, [r7, #16]
 12661              		.syntax unified
 12662              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12663 0058 53E8003F 		ldrex r3, [r3]
 12664              	@ 0 "" 2
 12665              		.thumb
 12666              		.syntax unified
 12667 005c FB60     		str	r3, [r7, #12]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12668              		.loc 2 481 10
 12669 005e FB68     		ldr	r3, [r7, #12]
 12670              	.LBE883:
 12671              	.LBE882:
 12672              		.loc 1 4175 7 discriminator 1
 12673 0060 43F04003 		orr	r3, r3, #64
 12674 0064 7B63     		str	r3, [r7, #52]
 12675 0066 7B68     		ldr	r3, [r7, #4]
 12676 0068 1B68     		ldr	r3, [r3]
 12677 006a 1A46     		mov	r2, r3
 12678 006c 7B6B     		ldr	r3, [r7, #52]
 12679 006e FB61     		str	r3, [r7, #28]
 12680 0070 BA61     		str	r2, [r7, #24]
 12681              	.LBB884:
 12682              	.LBB885:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12683              		.loc 2 531 4
 12684 0072 B969     		ldr	r1, [r7, #24]
 12685 0074 FA69     		ldr	r2, [r7, #28]
 12686              		.syntax unified
 12687              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12688 0076 41E80023 		strex r3, r2, [r1]
 12689              	@ 0 "" 2
 12690              		.thumb
 12691              		.syntax unified
 12692 007a 7B61     		str	r3, [r7, #20]
 12693              		.loc 2 532 10
 12694 007c 7B69     		ldr	r3, [r7, #20]
 12695              	.LBE885:
 12696              	.LBE884:
 12697              		.loc 1 4175 7 discriminator 1
 12698 007e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccMjAmt3.s 			page 309


 12699 0080 E6D1     		bne	.L656
 12700              	.LBE881:
4176:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4177:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     else
4178:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4179:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
4180:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
4181:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
4182:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->TxXferCount--;
4183:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4184:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4185:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 12701              		.loc 1 4185 1
 12702 0082 18E0     		b	.L657
 12703              	.L650:
4179:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 12704              		.loc 1 4179 11
 12705 0084 7B68     		ldr	r3, [r7, #4]
 12706 0086 1B6D     		ldr	r3, [r3, #80]
 12707 0088 FB63     		str	r3, [r7, #60]
4180:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 12708              		.loc 1 4180 43
 12709 008a FB6B     		ldr	r3, [r7, #60]
 12710 008c 1B88     		ldrh	r3, [r3]
4180:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 12711              		.loc 1 4180 50
 12712 008e 1A46     		mov	r2, r3
4180:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 12713              		.loc 1 4180 12
 12714 0090 7B68     		ldr	r3, [r7, #4]
 12715 0092 1B68     		ldr	r3, [r3]
4180:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 12716              		.loc 1 4180 50
 12717 0094 C2F30802 		ubfx	r2, r2, #0, #9
4180:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 12718              		.loc 1 4180 28
 12719 0098 9A62     		str	r2, [r3, #40]
4181:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->TxXferCount--;
 12720              		.loc 1 4181 12
 12721 009a 7B68     		ldr	r3, [r7, #4]
 12722 009c 1B6D     		ldr	r3, [r3, #80]
4181:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->TxXferCount--;
 12723              		.loc 1 4181 25
 12724 009e 9A1C     		adds	r2, r3, #2
 12725 00a0 7B68     		ldr	r3, [r7, #4]
 12726 00a2 1A65     		str	r2, [r3, #80]
4182:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 12727              		.loc 1 4182 12
 12728 00a4 7B68     		ldr	r3, [r7, #4]
 12729 00a6 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12730 00aa 9BB2     		uxth	r3, r3
4182:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
 12731              		.loc 1 4182 25
 12732 00ac 013B     		subs	r3, r3, #1
 12733 00ae 9AB2     		uxth	r2, r3
 12734 00b0 7B68     		ldr	r3, [r7, #4]
 12735 00b2 A3F85620 		strh	r2, [r3, #86]	@ movhi
ARM GAS  /tmp/ccMjAmt3.s 			page 310


 12736              	.L657:
 12737              		.loc 1 4185 1
 12738 00b6 00BF     		nop
 12739 00b8 4437     		adds	r7, r7, #68
 12740              		.cfi_def_cfa_offset 4
 12741 00ba BD46     		mov	sp, r7
 12742              		.cfi_def_cfa_register 13
 12743              		@ sp needed
 12744 00bc 5DF8047B 		ldr	r7, [sp], #4
 12745              		.cfi_restore 7
 12746              		.cfi_def_cfa_offset 0
 12747 00c0 7047     		bx	lr
 12748              		.cfi_endproc
 12749              	.LFE897:
 12751              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 12752              		.align	1
 12753              		.syntax unified
 12754              		.thumb
 12755              		.thumb_func
 12757              	UART_TxISR_8BIT_FIFOEN:
 12758              	.LFB898:
4186:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4187:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4188:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
4189:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4190:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4191:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
4192:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4193:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4194:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4195:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 12759              		.loc 1 4195 1
 12760              		.cfi_startproc
 12761              		@ args = 0, pretend = 0, frame = 64
 12762              		@ frame_needed = 1, uses_anonymous_args = 0
 12763              		@ link register save eliminated.
 12764 0000 80B4     		push	{r7}
 12765              		.cfi_def_cfa_offset 4
 12766              		.cfi_offset 7, -4
 12767 0002 91B0     		sub	sp, sp, #68
 12768              		.cfi_def_cfa_offset 72
 12769 0004 00AF     		add	r7, sp, #0
 12770              		.cfi_def_cfa_register 7
 12771 0006 7860     		str	r0, [r7, #4]
4196:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  nb_tx_data;
4197:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4198:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4199:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 12772              		.loc 1 4199 12
 12773 0008 7B68     		ldr	r3, [r7, #4]
 12774 000a D3F88830 		ldr	r3, [r3, #136]
 12775              		.loc 1 4199 6
 12776 000e 212B     		cmp	r3, #33
 12777 0010 60D1     		bne	.L671
4200:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4201:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 12778              		.loc 1 4201 21
ARM GAS  /tmp/ccMjAmt3.s 			page 311


 12779 0012 7B68     		ldr	r3, [r7, #4]
 12780 0014 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 12781 0018 FB87     		strh	r3, [r7, #62]	@ movhi
 12782              		.loc 1 4201 5
 12783 001a 57E0     		b	.L660
 12784              	.L669:
4202:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4203:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 12785              		.loc 1 4203 16
 12786 001c 7B68     		ldr	r3, [r7, #4]
 12787 001e B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12788 0022 9BB2     		uxth	r3, r3
 12789              		.loc 1 4203 10
 12790 0024 002B     		cmp	r3, #0
 12791 0026 33D1     		bne	.L661
 12792              	.L664:
 12793              	.LBB886:
4204:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4205:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4206:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 12794              		.loc 1 4206 9 discriminator 1
 12795 0028 7B68     		ldr	r3, [r7, #4]
 12796 002a 1B68     		ldr	r3, [r3]
 12797 002c 0833     		adds	r3, r3, #8
 12798 002e 7B62     		str	r3, [r7, #36]
 12799              	.LBB887:
 12800              	.LBB888:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12801              		.loc 2 480 4
 12802 0030 7B6A     		ldr	r3, [r7, #36]
 12803              		.syntax unified
 12804              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12805 0032 53E8003F 		ldrex r3, [r3]
 12806              	@ 0 "" 2
 12807              		.thumb
 12808              		.syntax unified
 12809 0036 3B62     		str	r3, [r7, #32]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12810              		.loc 2 481 10
 12811 0038 3B6A     		ldr	r3, [r7, #32]
 12812              	.LBE888:
 12813              	.LBE887:
 12814              		.loc 1 4206 9 discriminator 1
 12815 003a 23F40003 		bic	r3, r3, #8388608
 12816 003e BB63     		str	r3, [r7, #56]
 12817 0040 7B68     		ldr	r3, [r7, #4]
 12818 0042 1B68     		ldr	r3, [r3]
 12819 0044 0833     		adds	r3, r3, #8
 12820 0046 BA6B     		ldr	r2, [r7, #56]
 12821 0048 3A63     		str	r2, [r7, #48]
 12822 004a FB62     		str	r3, [r7, #44]
 12823              	.LBB889:
 12824              	.LBB890:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12825              		.loc 2 531 4
 12826 004c F96A     		ldr	r1, [r7, #44]
 12827 004e 3A6B     		ldr	r2, [r7, #48]
ARM GAS  /tmp/ccMjAmt3.s 			page 312


 12828              		.syntax unified
 12829              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12830 0050 41E80023 		strex r3, r2, [r1]
 12831              	@ 0 "" 2
 12832              		.thumb
 12833              		.syntax unified
 12834 0054 BB62     		str	r3, [r7, #40]
 12835              		.loc 2 532 10
 12836 0056 BB6A     		ldr	r3, [r7, #40]
 12837              	.LBE890:
 12838              	.LBE889:
 12839              		.loc 1 4206 9 discriminator 1
 12840 0058 002B     		cmp	r3, #0
 12841 005a E5D1     		bne	.L664
 12842              	.L667:
 12843              	.LBE886:
 12844              	.LBB891:
4207:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4208:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4209:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 12845              		.loc 1 4209 9 discriminator 1
 12846 005c 7B68     		ldr	r3, [r7, #4]
 12847 005e 1B68     		ldr	r3, [r3]
 12848 0060 3B61     		str	r3, [r7, #16]
 12849              	.LBB892:
 12850              	.LBB893:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12851              		.loc 2 480 4
 12852 0062 3B69     		ldr	r3, [r7, #16]
 12853              		.syntax unified
 12854              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12855 0064 53E8003F 		ldrex r3, [r3]
 12856              	@ 0 "" 2
 12857              		.thumb
 12858              		.syntax unified
 12859 0068 FB60     		str	r3, [r7, #12]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12860              		.loc 2 481 10
 12861 006a FB68     		ldr	r3, [r7, #12]
 12862              	.LBE893:
 12863              	.LBE892:
 12864              		.loc 1 4209 9 discriminator 1
 12865 006c 43F04003 		orr	r3, r3, #64
 12866 0070 7B63     		str	r3, [r7, #52]
 12867 0072 7B68     		ldr	r3, [r7, #4]
 12868 0074 1B68     		ldr	r3, [r3]
 12869 0076 1A46     		mov	r2, r3
 12870 0078 7B6B     		ldr	r3, [r7, #52]
 12871 007a FB61     		str	r3, [r7, #28]
 12872 007c BA61     		str	r2, [r7, #24]
 12873              	.LBB894:
 12874              	.LBB895:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12875              		.loc 2 531 4
 12876 007e B969     		ldr	r1, [r7, #24]
 12877 0080 FA69     		ldr	r2, [r7, #28]
 12878              		.syntax unified
ARM GAS  /tmp/ccMjAmt3.s 			page 313


 12879              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12880 0082 41E80023 		strex r3, r2, [r1]
 12881              	@ 0 "" 2
 12882              		.thumb
 12883              		.syntax unified
 12884 0086 7B61     		str	r3, [r7, #20]
 12885              		.loc 2 532 10
 12886 0088 7B69     		ldr	r3, [r7, #20]
 12887              	.LBE895:
 12888              	.LBE894:
 12889              		.loc 1 4209 9 discriminator 1
 12890 008a 002B     		cmp	r3, #0
 12891 008c E6D1     		bne	.L667
 12892              	.LBE891:
4210:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4211:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break; /* force exit loop */
 12893              		.loc 1 4211 9
 12894 008e 21E0     		b	.L670
 12895              	.L661:
4212:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4213:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 12896              		.loc 1 4213 16
 12897 0090 7B68     		ldr	r3, [r7, #4]
 12898 0092 1B68     		ldr	r3, [r3]
 12899 0094 DB69     		ldr	r3, [r3, #28]
 12900 0096 03F08003 		and	r3, r3, #128
 12901              		.loc 1 4213 15
 12902 009a 002B     		cmp	r3, #0
 12903 009c 13D0     		beq	.L668
4214:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4215:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 12904              		.loc 1 4215 48
 12905 009e 7B68     		ldr	r3, [r7, #4]
 12906 00a0 1B6D     		ldr	r3, [r3, #80]
 12907              		.loc 1 4215 42
 12908 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12909              		.loc 1 4215 14
 12910 00a4 7B68     		ldr	r3, [r7, #4]
 12911 00a6 1B68     		ldr	r3, [r3]
 12912              		.loc 1 4215 30
 12913 00a8 9A62     		str	r2, [r3, #40]
4216:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->pTxBuffPtr++;
 12914              		.loc 1 4216 14
 12915 00aa 7B68     		ldr	r3, [r7, #4]
 12916 00ac 1B6D     		ldr	r3, [r3, #80]
 12917              		.loc 1 4216 26
 12918 00ae 5A1C     		adds	r2, r3, #1
 12919 00b0 7B68     		ldr	r3, [r7, #4]
 12920 00b2 1A65     		str	r2, [r3, #80]
4217:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxXferCount--;
 12921              		.loc 1 4217 14
 12922 00b4 7B68     		ldr	r3, [r7, #4]
 12923 00b6 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12924 00ba 9BB2     		uxth	r3, r3
 12925              		.loc 1 4217 27
 12926 00bc 013B     		subs	r3, r3, #1
 12927 00be 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccMjAmt3.s 			page 314


 12928 00c0 7B68     		ldr	r3, [r7, #4]
 12929 00c2 A3F85620 		strh	r2, [r3, #86]	@ movhi
 12930              	.L668:
4201:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 12931              		.loc 1 4201 78 discriminator 2
 12932 00c6 FB8F     		ldrh	r3, [r7, #62]
 12933 00c8 013B     		subs	r3, r3, #1
 12934 00ca FB87     		strh	r3, [r7, #62]	@ movhi
 12935              	.L660:
4201:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 12936              		.loc 1 4201 61 discriminator 1
 12937 00cc FB8F     		ldrh	r3, [r7, #62]
 12938 00ce 002B     		cmp	r3, #0
 12939 00d0 A4D1     		bne	.L669
4218:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4219:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
4220:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4221:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Nothing to do */
4222:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4223:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4224:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4225:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 12940              		.loc 1 4225 1
 12941 00d2 FFE7     		b	.L671
 12942              	.L670:
 12943              	.L671:
 12944 00d4 00BF     		nop
 12945 00d6 4437     		adds	r7, r7, #68
 12946              		.cfi_def_cfa_offset 4
 12947 00d8 BD46     		mov	sp, r7
 12948              		.cfi_def_cfa_register 13
 12949              		@ sp needed
 12950 00da 5DF8047B 		ldr	r7, [sp], #4
 12951              		.cfi_restore 7
 12952              		.cfi_def_cfa_offset 0
 12953 00de 7047     		bx	lr
 12954              		.cfi_endproc
 12955              	.LFE898:
 12957              		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 12958              		.align	1
 12959              		.syntax unified
 12960              		.thumb
 12961              		.thumb_func
 12963              	UART_TxISR_16BIT_FIFOEN:
 12964              	.LFB899:
4226:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4227:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4228:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4229:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4230:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4231:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
4232:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4233:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4234:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4235:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 12965              		.loc 1 4235 1
 12966              		.cfi_startproc
ARM GAS  /tmp/ccMjAmt3.s 			page 315


 12967              		@ args = 0, pretend = 0, frame = 64
 12968              		@ frame_needed = 1, uses_anonymous_args = 0
 12969              		@ link register save eliminated.
 12970 0000 80B4     		push	{r7}
 12971              		.cfi_def_cfa_offset 4
 12972              		.cfi_offset 7, -4
 12973 0002 91B0     		sub	sp, sp, #68
 12974              		.cfi_def_cfa_offset 72
 12975 0004 00AF     		add	r7, sp, #0
 12976              		.cfi_def_cfa_register 7
 12977 0006 7860     		str	r0, [r7, #4]
4236:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   const uint16_t *tmp;
4237:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  nb_tx_data;
4238:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4239:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4240:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 12978              		.loc 1 4240 12
 12979 0008 7B68     		ldr	r3, [r7, #4]
 12980 000a D3F88830 		ldr	r3, [r3, #136]
 12981              		.loc 1 4240 6
 12982 000e 212B     		cmp	r3, #33
 12983 0010 65D1     		bne	.L685
4241:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4242:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 12984              		.loc 1 4242 21
 12985 0012 7B68     		ldr	r3, [r7, #4]
 12986 0014 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 12987 0018 FB87     		strh	r3, [r7, #62]	@ movhi
 12988              		.loc 1 4242 5
 12989 001a 5CE0     		b	.L674
 12990              	.L683:
4243:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4244:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 12991              		.loc 1 4244 16
 12992 001c 7B68     		ldr	r3, [r7, #4]
 12993 001e B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12994 0022 9BB2     		uxth	r3, r3
 12995              		.loc 1 4244 10
 12996 0024 002B     		cmp	r3, #0
 12997 0026 33D1     		bne	.L675
 12998              	.L678:
 12999              	.LBB896:
4245:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4246:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4247:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 13000              		.loc 1 4247 9 discriminator 1
 13001 0028 7B68     		ldr	r3, [r7, #4]
 13002 002a 1B68     		ldr	r3, [r3]
 13003 002c 0833     		adds	r3, r3, #8
 13004 002e 3B62     		str	r3, [r7, #32]
 13005              	.LBB897:
 13006              	.LBB898:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13007              		.loc 2 480 4
 13008 0030 3B6A     		ldr	r3, [r7, #32]
 13009              		.syntax unified
 13010              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccMjAmt3.s 			page 316


 13011 0032 53E8003F 		ldrex r3, [r3]
 13012              	@ 0 "" 2
 13013              		.thumb
 13014              		.syntax unified
 13015 0036 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13016              		.loc 2 481 10
 13017 0038 FB69     		ldr	r3, [r7, #28]
 13018              	.LBE898:
 13019              	.LBE897:
 13020              		.loc 1 4247 9 discriminator 1
 13021 003a 23F40003 		bic	r3, r3, #8388608
 13022 003e 7B63     		str	r3, [r7, #52]
 13023 0040 7B68     		ldr	r3, [r7, #4]
 13024 0042 1B68     		ldr	r3, [r3]
 13025 0044 0833     		adds	r3, r3, #8
 13026 0046 7A6B     		ldr	r2, [r7, #52]
 13027 0048 FA62     		str	r2, [r7, #44]
 13028 004a BB62     		str	r3, [r7, #40]
 13029              	.LBB899:
 13030              	.LBB900:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13031              		.loc 2 531 4
 13032 004c B96A     		ldr	r1, [r7, #40]
 13033 004e FA6A     		ldr	r2, [r7, #44]
 13034              		.syntax unified
 13035              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13036 0050 41E80023 		strex r3, r2, [r1]
 13037              	@ 0 "" 2
 13038              		.thumb
 13039              		.syntax unified
 13040 0054 7B62     		str	r3, [r7, #36]
 13041              		.loc 2 532 10
 13042 0056 7B6A     		ldr	r3, [r7, #36]
 13043              	.LBE900:
 13044              	.LBE899:
 13045              		.loc 1 4247 9 discriminator 1
 13046 0058 002B     		cmp	r3, #0
 13047 005a E5D1     		bne	.L678
 13048              	.L681:
 13049              	.LBE896:
 13050              	.LBB901:
4248:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4249:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4250:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 13051              		.loc 1 4250 9 discriminator 1
 13052 005c 7B68     		ldr	r3, [r7, #4]
 13053 005e 1B68     		ldr	r3, [r3]
 13054 0060 FB60     		str	r3, [r7, #12]
 13055              	.LBB902:
 13056              	.LBB903:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13057              		.loc 2 480 4
 13058 0062 FB68     		ldr	r3, [r7, #12]
 13059              		.syntax unified
 13060              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13061 0064 53E8003F 		ldrex r3, [r3]
ARM GAS  /tmp/ccMjAmt3.s 			page 317


 13062              	@ 0 "" 2
 13063              		.thumb
 13064              		.syntax unified
 13065 0068 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13066              		.loc 2 481 10
 13067 006a BB68     		ldr	r3, [r7, #8]
 13068              	.LBE903:
 13069              	.LBE902:
 13070              		.loc 1 4250 9 discriminator 1
 13071 006c 43F04003 		orr	r3, r3, #64
 13072 0070 3B63     		str	r3, [r7, #48]
 13073 0072 7B68     		ldr	r3, [r7, #4]
 13074 0074 1B68     		ldr	r3, [r3]
 13075 0076 1A46     		mov	r2, r3
 13076 0078 3B6B     		ldr	r3, [r7, #48]
 13077 007a BB61     		str	r3, [r7, #24]
 13078 007c 7A61     		str	r2, [r7, #20]
 13079              	.LBB904:
 13080              	.LBB905:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13081              		.loc 2 531 4
 13082 007e 7969     		ldr	r1, [r7, #20]
 13083 0080 BA69     		ldr	r2, [r7, #24]
 13084              		.syntax unified
 13085              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13086 0082 41E80023 		strex r3, r2, [r1]
 13087              	@ 0 "" 2
 13088              		.thumb
 13089              		.syntax unified
 13090 0086 3B61     		str	r3, [r7, #16]
 13091              		.loc 2 532 10
 13092 0088 3B69     		ldr	r3, [r7, #16]
 13093              	.LBE905:
 13094              	.LBE904:
 13095              		.loc 1 4250 9 discriminator 1
 13096 008a 002B     		cmp	r3, #0
 13097 008c E6D1     		bne	.L681
 13098              	.LBE901:
4251:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4252:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break; /* force exit loop */
 13099              		.loc 1 4252 9
 13100 008e 26E0     		b	.L684
 13101              	.L675:
4253:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4254:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 13102              		.loc 1 4254 16
 13103 0090 7B68     		ldr	r3, [r7, #4]
 13104 0092 1B68     		ldr	r3, [r3]
 13105 0094 DB69     		ldr	r3, [r3, #28]
 13106 0096 03F08003 		and	r3, r3, #128
 13107              		.loc 1 4254 15
 13108 009a 002B     		cmp	r3, #0
 13109 009c 18D0     		beq	.L682
4255:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4256:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         tmp = (const uint16_t *) huart->pTxBuffPtr;
 13110              		.loc 1 4256 13
ARM GAS  /tmp/ccMjAmt3.s 			page 318


 13111 009e 7B68     		ldr	r3, [r7, #4]
 13112 00a0 1B6D     		ldr	r3, [r3, #80]
 13113 00a2 BB63     		str	r3, [r7, #56]
4257:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 13114              		.loc 1 4257 45
 13115 00a4 BB6B     		ldr	r3, [r7, #56]
 13116 00a6 1B88     		ldrh	r3, [r3]
 13117              		.loc 1 4257 52
 13118 00a8 1A46     		mov	r2, r3
 13119              		.loc 1 4257 14
 13120 00aa 7B68     		ldr	r3, [r7, #4]
 13121 00ac 1B68     		ldr	r3, [r3]
 13122              		.loc 1 4257 52
 13123 00ae C2F30802 		ubfx	r2, r2, #0, #9
 13124              		.loc 1 4257 30
 13125 00b2 9A62     		str	r2, [r3, #40]
4258:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 13126              		.loc 1 4258 14
 13127 00b4 7B68     		ldr	r3, [r7, #4]
 13128 00b6 1B6D     		ldr	r3, [r3, #80]
 13129              		.loc 1 4258 27
 13130 00b8 9A1C     		adds	r2, r3, #2
 13131 00ba 7B68     		ldr	r3, [r7, #4]
 13132 00bc 1A65     		str	r2, [r3, #80]
4259:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->TxXferCount--;
 13133              		.loc 1 4259 14
 13134 00be 7B68     		ldr	r3, [r7, #4]
 13135 00c0 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 13136 00c4 9BB2     		uxth	r3, r3
 13137              		.loc 1 4259 27
 13138 00c6 013B     		subs	r3, r3, #1
 13139 00c8 9AB2     		uxth	r2, r3
 13140 00ca 7B68     		ldr	r3, [r7, #4]
 13141 00cc A3F85620 		strh	r2, [r3, #86]	@ movhi
 13142              	.L682:
4242:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 13143              		.loc 1 4242 78 discriminator 2
 13144 00d0 FB8F     		ldrh	r3, [r7, #62]
 13145 00d2 013B     		subs	r3, r3, #1
 13146 00d4 FB87     		strh	r3, [r7, #62]	@ movhi
 13147              	.L674:
4242:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 13148              		.loc 1 4242 61 discriminator 1
 13149 00d6 FB8F     		ldrh	r3, [r7, #62]
 13150 00d8 002B     		cmp	r3, #0
 13151 00da 9FD1     		bne	.L683
4260:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4261:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
4262:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4263:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Nothing to do */
4264:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4265:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4266:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4267:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 13152              		.loc 1 4267 1
 13153 00dc FFE7     		b	.L685
 13154              	.L684:
ARM GAS  /tmp/ccMjAmt3.s 			page 319


 13155              	.L685:
 13156 00de 00BF     		nop
 13157 00e0 4437     		adds	r7, r7, #68
 13158              		.cfi_def_cfa_offset 4
 13159 00e2 BD46     		mov	sp, r7
 13160              		.cfi_def_cfa_register 13
 13161              		@ sp needed
 13162 00e4 5DF8047B 		ldr	r7, [sp], #4
 13163              		.cfi_restore 7
 13164              		.cfi_def_cfa_offset 0
 13165 00e8 7047     		bx	lr
 13166              		.cfi_endproc
 13167              	.LFE899:
 13169              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 13170              		.align	1
 13171              		.syntax unified
 13172              		.thumb
 13173              		.thumb_func
 13175              	UART_EndTransmit_IT:
 13176              	.LFB900:
4268:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4269:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4270:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
4271:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
4272:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *                the configuration information for the specified UART module.
4273:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4274:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4275:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
4276:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 13177              		.loc 1 4276 1
 13178              		.cfi_startproc
 13179              		@ args = 0, pretend = 0, frame = 32
 13180              		@ frame_needed = 1, uses_anonymous_args = 0
 13181 0000 80B5     		push	{r7, lr}
 13182              		.cfi_def_cfa_offset 8
 13183              		.cfi_offset 7, -8
 13184              		.cfi_offset 14, -4
 13185 0002 88B0     		sub	sp, sp, #32
 13186              		.cfi_def_cfa_offset 40
 13187 0004 00AF     		add	r7, sp, #0
 13188              		.cfi_def_cfa_register 7
 13189 0006 7860     		str	r0, [r7, #4]
 13190              	.L689:
 13191              	.LBB906:
4277:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
4278:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 13192              		.loc 1 4278 3 discriminator 1
 13193 0008 7B68     		ldr	r3, [r7, #4]
 13194 000a 1B68     		ldr	r3, [r3]
 13195 000c FB60     		str	r3, [r7, #12]
 13196              	.LBB907:
 13197              	.LBB908:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13198              		.loc 2 480 4
 13199 000e FB68     		ldr	r3, [r7, #12]
 13200              		.syntax unified
 13201              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccMjAmt3.s 			page 320


 13202 0010 53E8003F 		ldrex r3, [r3]
 13203              	@ 0 "" 2
 13204              		.thumb
 13205              		.syntax unified
 13206 0014 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13207              		.loc 2 481 10
 13208 0016 BB68     		ldr	r3, [r7, #8]
 13209              	.LBE908:
 13210              	.LBE907:
 13211              		.loc 1 4278 3 discriminator 1
 13212 0018 23F04003 		bic	r3, r3, #64
 13213 001c FB61     		str	r3, [r7, #28]
 13214 001e 7B68     		ldr	r3, [r7, #4]
 13215 0020 1B68     		ldr	r3, [r3]
 13216 0022 1A46     		mov	r2, r3
 13217 0024 FB69     		ldr	r3, [r7, #28]
 13218 0026 BB61     		str	r3, [r7, #24]
 13219 0028 7A61     		str	r2, [r7, #20]
 13220              	.LBB909:
 13221              	.LBB910:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13222              		.loc 2 531 4
 13223 002a 7969     		ldr	r1, [r7, #20]
 13224 002c BA69     		ldr	r2, [r7, #24]
 13225              		.syntax unified
 13226              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13227 002e 41E80023 		strex r3, r2, [r1]
 13228              	@ 0 "" 2
 13229              		.thumb
 13230              		.syntax unified
 13231 0032 3B61     		str	r3, [r7, #16]
 13232              		.loc 2 532 10
 13233 0034 3B69     		ldr	r3, [r7, #16]
 13234              	.LBE910:
 13235              	.LBE909:
 13236              		.loc 1 4278 3 discriminator 1
 13237 0036 002B     		cmp	r3, #0
 13238 0038 E6D1     		bne	.L689
 13239              	.LBE906:
4279:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4280:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
4281:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 13240              		.loc 1 4281 17
 13241 003a 7B68     		ldr	r3, [r7, #4]
 13242 003c 2022     		movs	r2, #32
 13243 003e C3F88820 		str	r2, [r3, #136]
4282:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4283:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Cleat TxISR function pointer */
4284:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxISR = NULL;
 13244              		.loc 1 4284 16
 13245 0042 7B68     		ldr	r3, [r7, #4]
 13246 0044 0022     		movs	r2, #0
 13247 0046 9A67     		str	r2, [r3, #120]
4285:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4286:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4287:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*Call registered Tx complete callback*/
ARM GAS  /tmp/ccMjAmt3.s 			page 321


4288:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   huart->TxCpltCallback(huart);
4289:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4290:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
4291:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 13248              		.loc 1 4291 3
 13249 0048 7868     		ldr	r0, [r7, #4]
 13250 004a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
4292:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4293:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 13251              		.loc 1 4293 1
 13252 004e 00BF     		nop
 13253 0050 2037     		adds	r7, r7, #32
 13254              		.cfi_def_cfa_offset 8
 13255 0052 BD46     		mov	sp, r7
 13256              		.cfi_def_cfa_register 13
 13257              		@ sp needed
 13258 0054 80BD     		pop	{r7, pc}
 13259              		.cfi_endproc
 13260              	.LFE900:
 13262              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 13263              		.align	1
 13264              		.syntax unified
 13265              		.thumb
 13266              		.thumb_func
 13268              	UART_RxISR_8BIT:
 13269              	.LFB901:
4294:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4295:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4296:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
4297:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
4298:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4299:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4300:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
4301:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 13270              		.loc 1 4301 1
 13271              		.cfi_startproc
 13272              		@ args = 0, pretend = 0, frame = 112
 13273              		@ frame_needed = 1, uses_anonymous_args = 0
 13274 0000 80B5     		push	{r7, lr}
 13275              		.cfi_def_cfa_offset 8
 13276              		.cfi_offset 7, -8
 13277              		.cfi_offset 14, -4
 13278 0002 9CB0     		sub	sp, sp, #112
 13279              		.cfi_def_cfa_offset 120
 13280 0004 00AF     		add	r7, sp, #0
 13281              		.cfi_def_cfa_register 7
 13282 0006 7860     		str	r0, [r7, #4]
4302:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 13283              		.loc 1 4302 12
 13284 0008 7B68     		ldr	r3, [r7, #4]
 13285 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 13286 000e A7F86E30 		strh	r3, [r7, #110]	@ movhi
4303:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  uhdata;
4304:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4305:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4306:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 13287              		.loc 1 4306 12
ARM GAS  /tmp/ccMjAmt3.s 			page 322


 13288 0012 7B68     		ldr	r3, [r7, #4]
 13289 0014 D3F88C30 		ldr	r3, [r3, #140]
 13290              		.loc 1 4306 6
 13291 0018 222B     		cmp	r3, #34
 13292 001a 40F0C380 		bne	.L691
4307:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4308:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 13293              		.loc 1 4308 25
 13294 001e 7B68     		ldr	r3, [r7, #4]
 13295 0020 1B68     		ldr	r3, [r3]
 13296 0022 5B6A     		ldr	r3, [r3, #36]
 13297              		.loc 1 4308 12
 13298 0024 A7F86C30 		strh	r3, [r7, #108]	@ movhi
4309:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 13299              		.loc 1 4309 26
 13300 0028 B7F86C30 		ldrh	r3, [r7, #108]	@ movhi
 13301 002c D9B2     		uxtb	r1, r3
 13302              		.loc 1 4309 45
 13303 002e B7F86E30 		ldrh	r3, [r7, #110]	@ movhi
 13304 0032 DAB2     		uxtb	r2, r3
 13305              		.loc 1 4309 11
 13306 0034 7B68     		ldr	r3, [r7, #4]
 13307 0036 9B6D     		ldr	r3, [r3, #88]
 13308              		.loc 1 4309 26
 13309 0038 0A40     		ands	r2, r2, r1
 13310 003a D2B2     		uxtb	r2, r2
 13311              		.loc 1 4309 24
 13312 003c 1A70     		strb	r2, [r3]
4310:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->pRxBuffPtr++;
 13313              		.loc 1 4310 10
 13314 003e 7B68     		ldr	r3, [r7, #4]
 13315 0040 9B6D     		ldr	r3, [r3, #88]
 13316              		.loc 1 4310 22
 13317 0042 5A1C     		adds	r2, r3, #1
 13318 0044 7B68     		ldr	r3, [r7, #4]
 13319 0046 9A65     		str	r2, [r3, #88]
4311:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxXferCount--;
 13320              		.loc 1 4311 10
 13321 0048 7B68     		ldr	r3, [r7, #4]
 13322 004a B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 13323 004e 9BB2     		uxth	r3, r3
 13324              		.loc 1 4311 23
 13325 0050 013B     		subs	r3, r3, #1
 13326 0052 9AB2     		uxth	r2, r3
 13327 0054 7B68     		ldr	r3, [r7, #4]
 13328 0056 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4312:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4313:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 13329              		.loc 1 4313 14
 13330 005a 7B68     		ldr	r3, [r7, #4]
 13331 005c B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 13332 0060 9BB2     		uxth	r3, r3
 13333              		.loc 1 4313 8
 13334 0062 002B     		cmp	r3, #0
 13335 0064 40F0A680 		bne	.L708
 13336              	.L695:
 13337              	.LBB911:
ARM GAS  /tmp/ccMjAmt3.s 			page 323


4314:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4315:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4316:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 13338              		.loc 1 4316 7 discriminator 1
 13339 0068 7B68     		ldr	r3, [r7, #4]
 13340 006a 1B68     		ldr	r3, [r3]
 13341 006c FB64     		str	r3, [r7, #76]
 13342              	.LBB912:
 13343              	.LBB913:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13344              		.loc 2 480 4
 13345 006e FB6C     		ldr	r3, [r7, #76]
 13346              		.syntax unified
 13347              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13348 0070 53E8003F 		ldrex r3, [r3]
 13349              	@ 0 "" 2
 13350              		.thumb
 13351              		.syntax unified
 13352 0074 BB64     		str	r3, [r7, #72]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13353              		.loc 2 481 10
 13354 0076 BB6C     		ldr	r3, [r7, #72]
 13355              	.LBE913:
 13356              	.LBE912:
 13357              		.loc 1 4316 7 discriminator 1
 13358 0078 23F49073 		bic	r3, r3, #288
 13359 007c BB66     		str	r3, [r7, #104]
 13360 007e 7B68     		ldr	r3, [r7, #4]
 13361 0080 1B68     		ldr	r3, [r3]
 13362 0082 1A46     		mov	r2, r3
 13363 0084 BB6E     		ldr	r3, [r7, #104]
 13364 0086 BB65     		str	r3, [r7, #88]
 13365 0088 7A65     		str	r2, [r7, #84]
 13366              	.LBB914:
 13367              	.LBB915:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13368              		.loc 2 531 4
 13369 008a 796D     		ldr	r1, [r7, #84]
 13370 008c BA6D     		ldr	r2, [r7, #88]
 13371              		.syntax unified
 13372              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13373 008e 41E80023 		strex r3, r2, [r1]
 13374              	@ 0 "" 2
 13375              		.thumb
 13376              		.syntax unified
 13377 0092 3B65     		str	r3, [r7, #80]
 13378              		.loc 2 532 10
 13379 0094 3B6D     		ldr	r3, [r7, #80]
 13380              	.LBE915:
 13381              	.LBE914:
 13382              		.loc 1 4316 7 discriminator 1
 13383 0096 002B     		cmp	r3, #0
 13384 0098 E6D1     		bne	.L695
 13385              	.L698:
 13386              	.LBE911:
 13387              	.LBB916:
4317:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 324


4318:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4319:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 13388              		.loc 1 4319 7 discriminator 1
 13389 009a 7B68     		ldr	r3, [r7, #4]
 13390 009c 1B68     		ldr	r3, [r3]
 13391 009e 0833     		adds	r3, r3, #8
 13392 00a0 BB63     		str	r3, [r7, #56]
 13393              	.LBB917:
 13394              	.LBB918:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13395              		.loc 2 480 4
 13396 00a2 BB6B     		ldr	r3, [r7, #56]
 13397              		.syntax unified
 13398              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13399 00a4 53E8003F 		ldrex r3, [r3]
 13400              	@ 0 "" 2
 13401              		.thumb
 13402              		.syntax unified
 13403 00a8 7B63     		str	r3, [r7, #52]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13404              		.loc 2 481 10
 13405 00aa 7B6B     		ldr	r3, [r7, #52]
 13406              	.LBE918:
 13407              	.LBE917:
 13408              		.loc 1 4319 7 discriminator 1
 13409 00ac 23F00103 		bic	r3, r3, #1
 13410 00b0 7B66     		str	r3, [r7, #100]
 13411 00b2 7B68     		ldr	r3, [r7, #4]
 13412 00b4 1B68     		ldr	r3, [r3]
 13413 00b6 0833     		adds	r3, r3, #8
 13414 00b8 7A6E     		ldr	r2, [r7, #100]
 13415 00ba 7A64     		str	r2, [r7, #68]
 13416 00bc 3B64     		str	r3, [r7, #64]
 13417              	.LBB919:
 13418              	.LBB920:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13419              		.loc 2 531 4
 13420 00be 396C     		ldr	r1, [r7, #64]
 13421 00c0 7A6C     		ldr	r2, [r7, #68]
 13422              		.syntax unified
 13423              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13424 00c2 41E80023 		strex r3, r2, [r1]
 13425              	@ 0 "" 2
 13426              		.thumb
 13427              		.syntax unified
 13428 00c6 FB63     		str	r3, [r7, #60]
 13429              		.loc 2 532 10
 13430 00c8 FB6B     		ldr	r3, [r7, #60]
 13431              	.LBE920:
 13432              	.LBE919:
 13433              		.loc 1 4319 7 discriminator 1
 13434 00ca 002B     		cmp	r3, #0
 13435 00cc E5D1     		bne	.L698
 13436              	.LBE916:
4320:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4321:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4322:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccMjAmt3.s 			page 325


 13437              		.loc 1 4322 22
 13438 00ce 7B68     		ldr	r3, [r7, #4]
 13439 00d0 2022     		movs	r2, #32
 13440 00d2 C3F88C20 		str	r2, [r3, #140]
4323:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4324:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Clear RxISR function pointer */
4325:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxISR = NULL;
 13441              		.loc 1 4325 20
 13442 00d6 7B68     		ldr	r3, [r7, #4]
 13443 00d8 0022     		movs	r2, #0
 13444 00da 5A67     		str	r2, [r3, #116]
4326:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4327:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
4328:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 13445              		.loc 1 4328 26
 13446 00dc 7B68     		ldr	r3, [r7, #4]
 13447 00de 0022     		movs	r2, #0
 13448 00e0 1A67     		str	r2, [r3, #112]
4329:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4330:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (!(IS_LPUART_INSTANCE(huart->Instance)))
 13449              		.loc 1 4330 13
 13450 00e2 7B68     		ldr	r3, [r7, #4]
 13451 00e4 1B68     		ldr	r3, [r3]
 13452              		.loc 1 4330 10
 13453 00e6 354A     		ldr	r2, .L709
 13454 00e8 9342     		cmp	r3, r2
 13455 00ea 24D0     		beq	.L699
 13456              		.loc 1 4330 13 discriminator 1
 13457 00ec 7B68     		ldr	r3, [r7, #4]
 13458 00ee 1B68     		ldr	r3, [r3]
 13459              		.loc 1 4330 11 discriminator 1
 13460 00f0 334A     		ldr	r2, .L709+4
 13461 00f2 9342     		cmp	r3, r2
 13462 00f4 1FD0     		beq	.L699
4331:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4332:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Check that USART RTOEN bit is set */
4333:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 13463              		.loc 1 4333 13
 13464 00f6 7B68     		ldr	r3, [r7, #4]
 13465 00f8 1B68     		ldr	r3, [r3]
 13466 00fa 5B68     		ldr	r3, [r3, #4]
 13467 00fc 03F40003 		and	r3, r3, #8388608
 13468              		.loc 1 4333 12
 13469 0100 002B     		cmp	r3, #0
 13470 0102 18D0     		beq	.L699
 13471              	.L702:
 13472              	.LBB921:
4334:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4335:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Enable the UART Receiver Timeout Interrupt */
4336:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 13473              		.loc 1 4336 11 discriminator 1
 13474 0104 7B68     		ldr	r3, [r7, #4]
 13475 0106 1B68     		ldr	r3, [r3]
 13476 0108 7B62     		str	r3, [r7, #36]
 13477              	.LBB922:
 13478              	.LBB923:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/ccMjAmt3.s 			page 326


 13479              		.loc 2 480 4
 13480 010a 7B6A     		ldr	r3, [r7, #36]
 13481              		.syntax unified
 13482              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13483 010c 53E8003F 		ldrex r3, [r3]
 13484              	@ 0 "" 2
 13485              		.thumb
 13486              		.syntax unified
 13487 0110 3B62     		str	r3, [r7, #32]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13488              		.loc 2 481 10
 13489 0112 3B6A     		ldr	r3, [r7, #32]
 13490              	.LBE923:
 13491              	.LBE922:
 13492              		.loc 1 4336 11 discriminator 1
 13493 0114 23F08063 		bic	r3, r3, #67108864
 13494 0118 3B66     		str	r3, [r7, #96]
 13495 011a 7B68     		ldr	r3, [r7, #4]
 13496 011c 1B68     		ldr	r3, [r3]
 13497 011e 1A46     		mov	r2, r3
 13498 0120 3B6E     		ldr	r3, [r7, #96]
 13499 0122 3B63     		str	r3, [r7, #48]
 13500 0124 FA62     		str	r2, [r7, #44]
 13501              	.LBB924:
 13502              	.LBB925:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13503              		.loc 2 531 4
 13504 0126 F96A     		ldr	r1, [r7, #44]
 13505 0128 3A6B     		ldr	r2, [r7, #48]
 13506              		.syntax unified
 13507              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13508 012a 41E80023 		strex r3, r2, [r1]
 13509              	@ 0 "" 2
 13510              		.thumb
 13511              		.syntax unified
 13512 012e BB62     		str	r3, [r7, #40]
 13513              		.loc 2 532 10
 13514 0130 BB6A     		ldr	r3, [r7, #40]
 13515              	.LBE925:
 13516              	.LBE924:
 13517              		.loc 1 4336 11 discriminator 1
 13518 0132 002B     		cmp	r3, #0
 13519 0134 E6D1     		bne	.L702
 13520              	.L699:
 13521              	.LBE921:
4337:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4338:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4339:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4340:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Check current reception Mode :
4341:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4342:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 13522              		.loc 1 4342 16
 13523 0136 7B68     		ldr	r3, [r7, #4]
 13524 0138 DB6E     		ldr	r3, [r3, #108]
 13525              		.loc 1 4342 10
 13526 013a 012B     		cmp	r3, #1
 13527 013c 2ED1     		bne	.L703
ARM GAS  /tmp/ccMjAmt3.s 			page 327


4343:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4344:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Set reception type to Standard */
4345:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 13528              		.loc 1 4345 30
 13529 013e 7B68     		ldr	r3, [r7, #4]
 13530 0140 0022     		movs	r2, #0
 13531 0142 DA66     		str	r2, [r3, #108]
 13532              	.L706:
 13533              	.LBB926:
4346:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4347:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Disable IDLE interrupt */
4348:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 13534              		.loc 1 4348 9 discriminator 1
 13535 0144 7B68     		ldr	r3, [r7, #4]
 13536 0146 1B68     		ldr	r3, [r3]
 13537 0148 3B61     		str	r3, [r7, #16]
 13538              	.LBB927:
 13539              	.LBB928:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13540              		.loc 2 480 4
 13541 014a 3B69     		ldr	r3, [r7, #16]
 13542              		.syntax unified
 13543              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13544 014c 53E8003F 		ldrex r3, [r3]
 13545              	@ 0 "" 2
 13546              		.thumb
 13547              		.syntax unified
 13548 0150 FB60     		str	r3, [r7, #12]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13549              		.loc 2 481 10
 13550 0152 FB68     		ldr	r3, [r7, #12]
 13551              	.LBE928:
 13552              	.LBE927:
 13553              		.loc 1 4348 9 discriminator 1
 13554 0154 23F01003 		bic	r3, r3, #16
 13555 0158 FB65     		str	r3, [r7, #92]
 13556 015a 7B68     		ldr	r3, [r7, #4]
 13557 015c 1B68     		ldr	r3, [r3]
 13558 015e 1A46     		mov	r2, r3
 13559 0160 FB6D     		ldr	r3, [r7, #92]
 13560 0162 FB61     		str	r3, [r7, #28]
 13561 0164 BA61     		str	r2, [r7, #24]
 13562              	.LBB929:
 13563              	.LBB930:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13564              		.loc 2 531 4
 13565 0166 B969     		ldr	r1, [r7, #24]
 13566 0168 FA69     		ldr	r2, [r7, #28]
 13567              		.syntax unified
 13568              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13569 016a 41E80023 		strex r3, r2, [r1]
 13570              	@ 0 "" 2
 13571              		.thumb
 13572              		.syntax unified
 13573 016e 7B61     		str	r3, [r7, #20]
 13574              		.loc 2 532 10
 13575 0170 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccMjAmt3.s 			page 328


 13576              	.LBE930:
 13577              	.LBE929:
 13578              		.loc 1 4348 9 discriminator 1
 13579 0172 002B     		cmp	r3, #0
 13580 0174 E6D1     		bne	.L706
 13581              	.LBE926:
4349:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4350:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 13582              		.loc 1 4350 13
 13583 0176 7B68     		ldr	r3, [r7, #4]
 13584 0178 1B68     		ldr	r3, [r3]
 13585 017a DB69     		ldr	r3, [r3, #28]
 13586 017c 03F01003 		and	r3, r3, #16
 13587              		.loc 1 4350 12
 13588 0180 102B     		cmp	r3, #16
 13589 0182 03D1     		bne	.L707
4351:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4352:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Clear IDLE Flag */
4353:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 13590              		.loc 1 4353 11
 13591 0184 7B68     		ldr	r3, [r7, #4]
 13592 0186 1B68     		ldr	r3, [r3]
 13593 0188 1022     		movs	r2, #16
 13594 018a 1A62     		str	r2, [r3, #32]
 13595              	.L707:
4354:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4355:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4356:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4357:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4358:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4359:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4360:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4361:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 13596              		.loc 1 4361 9
 13597 018c 7B68     		ldr	r3, [r7, #4]
 13598 018e B3F85C30 		ldrh	r3, [r3, #92]
 13599 0192 1946     		mov	r1, r3
 13600 0194 7868     		ldr	r0, [r7, #4]
 13601 0196 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4362:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4363:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4364:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
4365:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4366:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Standard reception API called */
4367:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4368:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4369:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4370:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4371:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4372:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4373:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4374:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4375:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4376:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4377:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
4378:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4379:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
ARM GAS  /tmp/ccMjAmt3.s 			page 329


4380:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4381:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4382:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 13602              		.loc 1 4382 1
 13603 019a 0BE0     		b	.L708
 13604              	.L703:
4372:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 13605              		.loc 1 4372 9
 13606 019c 7868     		ldr	r0, [r7, #4]
 13607 019e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 13608              		.loc 1 4382 1
 13609 01a2 07E0     		b	.L708
 13610              	.L691:
4380:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 13611              		.loc 1 4380 5
 13612 01a4 7B68     		ldr	r3, [r7, #4]
 13613 01a6 1B68     		ldr	r3, [r3]
 13614 01a8 9A69     		ldr	r2, [r3, #24]
 13615 01aa 7B68     		ldr	r3, [r7, #4]
 13616 01ac 1B68     		ldr	r3, [r3]
 13617 01ae 42F00802 		orr	r2, r2, #8
 13618 01b2 9A61     		str	r2, [r3, #24]
 13619              	.L708:
 13620              		.loc 1 4382 1
 13621 01b4 00BF     		nop
 13622 01b6 7037     		adds	r7, r7, #112
 13623              		.cfi_def_cfa_offset 8
 13624 01b8 BD46     		mov	sp, r7
 13625              		.cfi_def_cfa_register 13
 13626              		@ sp needed
 13627 01ba 80BD     		pop	{r7, pc}
 13628              	.L710:
 13629              		.align	2
 13630              	.L709:
 13631 01bc 000C0056 		.word	1442843648
 13632 01c0 000C0046 		.word	1174408192
 13633              		.cfi_endproc
 13634              	.LFE901:
 13636              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 13637              		.align	1
 13638              		.syntax unified
 13639              		.thumb
 13640              		.thumb_func
 13642              	UART_RxISR_16BIT:
 13643              	.LFB902:
4383:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4384:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4385:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
4386:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4387:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4388:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
4389:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4390:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4391:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4392:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 13644              		.loc 1 4392 1
 13645              		.cfi_startproc
ARM GAS  /tmp/ccMjAmt3.s 			page 330


 13646              		@ args = 0, pretend = 0, frame = 112
 13647              		@ frame_needed = 1, uses_anonymous_args = 0
 13648 0000 80B5     		push	{r7, lr}
 13649              		.cfi_def_cfa_offset 8
 13650              		.cfi_offset 7, -8
 13651              		.cfi_offset 14, -4
 13652 0002 9CB0     		sub	sp, sp, #112
 13653              		.cfi_def_cfa_offset 120
 13654 0004 00AF     		add	r7, sp, #0
 13655              		.cfi_def_cfa_register 7
 13656 0006 7860     		str	r0, [r7, #4]
4393:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t *tmp;
4394:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 13657              		.loc 1 4394 12
 13658 0008 7B68     		ldr	r3, [r7, #4]
 13659 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 13660 000e A7F86E30 		strh	r3, [r7, #110]	@ movhi
4395:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  uhdata;
4396:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4397:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4398:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 13661              		.loc 1 4398 12
 13662 0012 7B68     		ldr	r3, [r7, #4]
 13663 0014 D3F88C30 		ldr	r3, [r3, #140]
 13664              		.loc 1 4398 6
 13665 0018 222B     		cmp	r3, #34
 13666 001a 40F0C380 		bne	.L712
4399:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4400:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 13667              		.loc 1 4400 25
 13668 001e 7B68     		ldr	r3, [r7, #4]
 13669 0020 1B68     		ldr	r3, [r3]
 13670 0022 5B6A     		ldr	r3, [r3, #36]
 13671              		.loc 1 4400 12
 13672 0024 A7F86C30 		strh	r3, [r7, #108]	@ movhi
4401:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 13673              		.loc 1 4401 9
 13674 0028 7B68     		ldr	r3, [r7, #4]
 13675 002a 9B6D     		ldr	r3, [r3, #88]
 13676 002c BB66     		str	r3, [r7, #104]
4402:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 13677              		.loc 1 4402 12
 13678 002e B7F86C20 		ldrh	r2, [r7, #108]	@ movhi
 13679 0032 B7F86E30 		ldrh	r3, [r7, #110]	@ movhi
 13680 0036 1340     		ands	r3, r3, r2
 13681 0038 9AB2     		uxth	r2, r3
 13682              		.loc 1 4402 10
 13683 003a BB6E     		ldr	r3, [r7, #104]
 13684 003c 1A80     		strh	r2, [r3]	@ movhi
4403:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 13685              		.loc 1 4403 10
 13686 003e 7B68     		ldr	r3, [r7, #4]
 13687 0040 9B6D     		ldr	r3, [r3, #88]
 13688              		.loc 1 4403 23
 13689 0042 9A1C     		adds	r2, r3, #2
 13690 0044 7B68     		ldr	r3, [r7, #4]
 13691 0046 9A65     		str	r2, [r3, #88]
ARM GAS  /tmp/ccMjAmt3.s 			page 331


4404:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     huart->RxXferCount--;
 13692              		.loc 1 4404 10
 13693 0048 7B68     		ldr	r3, [r7, #4]
 13694 004a B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 13695 004e 9BB2     		uxth	r3, r3
 13696              		.loc 1 4404 23
 13697 0050 013B     		subs	r3, r3, #1
 13698 0052 9AB2     		uxth	r2, r3
 13699 0054 7B68     		ldr	r3, [r7, #4]
 13700 0056 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4405:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4406:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 13701              		.loc 1 4406 14
 13702 005a 7B68     		ldr	r3, [r7, #4]
 13703 005c B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 13704 0060 9BB2     		uxth	r3, r3
 13705              		.loc 1 4406 8
 13706 0062 002B     		cmp	r3, #0
 13707 0064 40F0A680 		bne	.L729
 13708              	.L716:
 13709              	.LBB931:
4407:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4408:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4409:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 13710              		.loc 1 4409 7 discriminator 1
 13711 0068 7B68     		ldr	r3, [r7, #4]
 13712 006a 1B68     		ldr	r3, [r3]
 13713 006c BB64     		str	r3, [r7, #72]
 13714              	.LBB932:
 13715              	.LBB933:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13716              		.loc 2 480 4
 13717 006e BB6C     		ldr	r3, [r7, #72]
 13718              		.syntax unified
 13719              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13720 0070 53E8003F 		ldrex r3, [r3]
 13721              	@ 0 "" 2
 13722              		.thumb
 13723              		.syntax unified
 13724 0074 7B64     		str	r3, [r7, #68]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13725              		.loc 2 481 10
 13726 0076 7B6C     		ldr	r3, [r7, #68]
 13727              	.LBE933:
 13728              	.LBE932:
 13729              		.loc 1 4409 7 discriminator 1
 13730 0078 23F49073 		bic	r3, r3, #288
 13731 007c 7B66     		str	r3, [r7, #100]
 13732 007e 7B68     		ldr	r3, [r7, #4]
 13733 0080 1B68     		ldr	r3, [r3]
 13734 0082 1A46     		mov	r2, r3
 13735 0084 7B6E     		ldr	r3, [r7, #100]
 13736 0086 7B65     		str	r3, [r7, #84]
 13737 0088 3A65     		str	r2, [r7, #80]
 13738              	.LBB934:
 13739              	.LBB935:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/ccMjAmt3.s 			page 332


 13740              		.loc 2 531 4
 13741 008a 396D     		ldr	r1, [r7, #80]
 13742 008c 7A6D     		ldr	r2, [r7, #84]
 13743              		.syntax unified
 13744              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13745 008e 41E80023 		strex r3, r2, [r1]
 13746              	@ 0 "" 2
 13747              		.thumb
 13748              		.syntax unified
 13749 0092 FB64     		str	r3, [r7, #76]
 13750              		.loc 2 532 10
 13751 0094 FB6C     		ldr	r3, [r7, #76]
 13752              	.LBE935:
 13753              	.LBE934:
 13754              		.loc 1 4409 7 discriminator 1
 13755 0096 002B     		cmp	r3, #0
 13756 0098 E6D1     		bne	.L716
 13757              	.L719:
 13758              	.LBE931:
 13759              	.LBB936:
4410:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4411:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4412:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 13760              		.loc 1 4412 7 discriminator 1
 13761 009a 7B68     		ldr	r3, [r7, #4]
 13762 009c 1B68     		ldr	r3, [r3]
 13763 009e 0833     		adds	r3, r3, #8
 13764 00a0 7B63     		str	r3, [r7, #52]
 13765              	.LBB937:
 13766              	.LBB938:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13767              		.loc 2 480 4
 13768 00a2 7B6B     		ldr	r3, [r7, #52]
 13769              		.syntax unified
 13770              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13771 00a4 53E8003F 		ldrex r3, [r3]
 13772              	@ 0 "" 2
 13773              		.thumb
 13774              		.syntax unified
 13775 00a8 3B63     		str	r3, [r7, #48]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13776              		.loc 2 481 10
 13777 00aa 3B6B     		ldr	r3, [r7, #48]
 13778              	.LBE938:
 13779              	.LBE937:
 13780              		.loc 1 4412 7 discriminator 1
 13781 00ac 23F00103 		bic	r3, r3, #1
 13782 00b0 3B66     		str	r3, [r7, #96]
 13783 00b2 7B68     		ldr	r3, [r7, #4]
 13784 00b4 1B68     		ldr	r3, [r3]
 13785 00b6 0833     		adds	r3, r3, #8
 13786 00b8 3A6E     		ldr	r2, [r7, #96]
 13787 00ba 3A64     		str	r2, [r7, #64]
 13788 00bc FB63     		str	r3, [r7, #60]
 13789              	.LBB939:
 13790              	.LBB940:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/ccMjAmt3.s 			page 333


 13791              		.loc 2 531 4
 13792 00be F96B     		ldr	r1, [r7, #60]
 13793 00c0 3A6C     		ldr	r2, [r7, #64]
 13794              		.syntax unified
 13795              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13796 00c2 41E80023 		strex r3, r2, [r1]
 13797              	@ 0 "" 2
 13798              		.thumb
 13799              		.syntax unified
 13800 00c6 BB63     		str	r3, [r7, #56]
 13801              		.loc 2 532 10
 13802 00c8 BB6B     		ldr	r3, [r7, #56]
 13803              	.LBE940:
 13804              	.LBE939:
 13805              		.loc 1 4412 7 discriminator 1
 13806 00ca 002B     		cmp	r3, #0
 13807 00cc E5D1     		bne	.L719
 13808              	.LBE936:
4413:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4414:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4415:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 13809              		.loc 1 4415 22
 13810 00ce 7B68     		ldr	r3, [r7, #4]
 13811 00d0 2022     		movs	r2, #32
 13812 00d2 C3F88C20 		str	r2, [r3, #140]
4416:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4417:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Clear RxISR function pointer */
4418:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxISR = NULL;
 13813              		.loc 1 4418 20
 13814 00d6 7B68     		ldr	r3, [r7, #4]
 13815 00d8 0022     		movs	r2, #0
 13816 00da 5A67     		str	r2, [r3, #116]
4419:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4420:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
4421:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 13817              		.loc 1 4421 26
 13818 00dc 7B68     		ldr	r3, [r7, #4]
 13819 00de 0022     		movs	r2, #0
 13820 00e0 1A67     		str	r2, [r3, #112]
4422:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4423:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (!(IS_LPUART_INSTANCE(huart->Instance)))
 13821              		.loc 1 4423 13
 13822 00e2 7B68     		ldr	r3, [r7, #4]
 13823 00e4 1B68     		ldr	r3, [r3]
 13824              		.loc 1 4423 10
 13825 00e6 354A     		ldr	r2, .L730
 13826 00e8 9342     		cmp	r3, r2
 13827 00ea 24D0     		beq	.L720
 13828              		.loc 1 4423 13 discriminator 1
 13829 00ec 7B68     		ldr	r3, [r7, #4]
 13830 00ee 1B68     		ldr	r3, [r3]
 13831              		.loc 1 4423 11 discriminator 1
 13832 00f0 334A     		ldr	r2, .L730+4
 13833 00f2 9342     		cmp	r3, r2
 13834 00f4 1FD0     		beq	.L720
4424:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4425:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Check that USART RTOEN bit is set */
ARM GAS  /tmp/ccMjAmt3.s 			page 334


4426:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 13835              		.loc 1 4426 13
 13836 00f6 7B68     		ldr	r3, [r7, #4]
 13837 00f8 1B68     		ldr	r3, [r3]
 13838 00fa 5B68     		ldr	r3, [r3, #4]
 13839 00fc 03F40003 		and	r3, r3, #8388608
 13840              		.loc 1 4426 12
 13841 0100 002B     		cmp	r3, #0
 13842 0102 18D0     		beq	.L720
 13843              	.L723:
 13844              	.LBB941:
4427:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4428:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Enable the UART Receiver Timeout Interrupt */
4429:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 13845              		.loc 1 4429 11 discriminator 1
 13846 0104 7B68     		ldr	r3, [r7, #4]
 13847 0106 1B68     		ldr	r3, [r3]
 13848 0108 3B62     		str	r3, [r7, #32]
 13849              	.LBB942:
 13850              	.LBB943:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13851              		.loc 2 480 4
 13852 010a 3B6A     		ldr	r3, [r7, #32]
 13853              		.syntax unified
 13854              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13855 010c 53E8003F 		ldrex r3, [r3]
 13856              	@ 0 "" 2
 13857              		.thumb
 13858              		.syntax unified
 13859 0110 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13860              		.loc 2 481 10
 13861 0112 FB69     		ldr	r3, [r7, #28]
 13862              	.LBE943:
 13863              	.LBE942:
 13864              		.loc 1 4429 11 discriminator 1
 13865 0114 23F08063 		bic	r3, r3, #67108864
 13866 0118 FB65     		str	r3, [r7, #92]
 13867 011a 7B68     		ldr	r3, [r7, #4]
 13868 011c 1B68     		ldr	r3, [r3]
 13869 011e 1A46     		mov	r2, r3
 13870 0120 FB6D     		ldr	r3, [r7, #92]
 13871 0122 FB62     		str	r3, [r7, #44]
 13872 0124 BA62     		str	r2, [r7, #40]
 13873              	.LBB944:
 13874              	.LBB945:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13875              		.loc 2 531 4
 13876 0126 B96A     		ldr	r1, [r7, #40]
 13877 0128 FA6A     		ldr	r2, [r7, #44]
 13878              		.syntax unified
 13879              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13880 012a 41E80023 		strex r3, r2, [r1]
 13881              	@ 0 "" 2
 13882              		.thumb
 13883              		.syntax unified
 13884 012e 7B62     		str	r3, [r7, #36]
ARM GAS  /tmp/ccMjAmt3.s 			page 335


 13885              		.loc 2 532 10
 13886 0130 7B6A     		ldr	r3, [r7, #36]
 13887              	.LBE945:
 13888              	.LBE944:
 13889              		.loc 1 4429 11 discriminator 1
 13890 0132 002B     		cmp	r3, #0
 13891 0134 E6D1     		bne	.L723
 13892              	.L720:
 13893              	.LBE941:
4430:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4431:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4432:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4433:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Check current reception Mode :
4434:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4435:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 13894              		.loc 1 4435 16
 13895 0136 7B68     		ldr	r3, [r7, #4]
 13896 0138 DB6E     		ldr	r3, [r3, #108]
 13897              		.loc 1 4435 10
 13898 013a 012B     		cmp	r3, #1
 13899 013c 2ED1     		bne	.L724
4436:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4437:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Set reception type to Standard */
4438:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 13900              		.loc 1 4438 30
 13901 013e 7B68     		ldr	r3, [r7, #4]
 13902 0140 0022     		movs	r2, #0
 13903 0142 DA66     		str	r2, [r3, #108]
 13904              	.L727:
 13905              	.LBB946:
4439:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4440:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Disable IDLE interrupt */
4441:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 13906              		.loc 1 4441 9 discriminator 1
 13907 0144 7B68     		ldr	r3, [r7, #4]
 13908 0146 1B68     		ldr	r3, [r3]
 13909 0148 FB60     		str	r3, [r7, #12]
 13910              	.LBB947:
 13911              	.LBB948:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13912              		.loc 2 480 4
 13913 014a FB68     		ldr	r3, [r7, #12]
 13914              		.syntax unified
 13915              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13916 014c 53E8003F 		ldrex r3, [r3]
 13917              	@ 0 "" 2
 13918              		.thumb
 13919              		.syntax unified
 13920 0150 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13921              		.loc 2 481 10
 13922 0152 BB68     		ldr	r3, [r7, #8]
 13923              	.LBE948:
 13924              	.LBE947:
 13925              		.loc 1 4441 9 discriminator 1
 13926 0154 23F01003 		bic	r3, r3, #16
 13927 0158 BB65     		str	r3, [r7, #88]
ARM GAS  /tmp/ccMjAmt3.s 			page 336


 13928 015a 7B68     		ldr	r3, [r7, #4]
 13929 015c 1B68     		ldr	r3, [r3]
 13930 015e 1A46     		mov	r2, r3
 13931 0160 BB6D     		ldr	r3, [r7, #88]
 13932 0162 BB61     		str	r3, [r7, #24]
 13933 0164 7A61     		str	r2, [r7, #20]
 13934              	.LBB949:
 13935              	.LBB950:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13936              		.loc 2 531 4
 13937 0166 7969     		ldr	r1, [r7, #20]
 13938 0168 BA69     		ldr	r2, [r7, #24]
 13939              		.syntax unified
 13940              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13941 016a 41E80023 		strex r3, r2, [r1]
 13942              	@ 0 "" 2
 13943              		.thumb
 13944              		.syntax unified
 13945 016e 3B61     		str	r3, [r7, #16]
 13946              		.loc 2 532 10
 13947 0170 3B69     		ldr	r3, [r7, #16]
 13948              	.LBE950:
 13949              	.LBE949:
 13950              		.loc 1 4441 9 discriminator 1
 13951 0172 002B     		cmp	r3, #0
 13952 0174 E6D1     		bne	.L727
 13953              	.LBE946:
4442:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4443:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 13954              		.loc 1 4443 13
 13955 0176 7B68     		ldr	r3, [r7, #4]
 13956 0178 1B68     		ldr	r3, [r3]
 13957 017a DB69     		ldr	r3, [r3, #28]
 13958 017c 03F01003 		and	r3, r3, #16
 13959              		.loc 1 4443 12
 13960 0180 102B     		cmp	r3, #16
 13961 0182 03D1     		bne	.L728
4444:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4445:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Clear IDLE Flag */
4446:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 13962              		.loc 1 4446 11
 13963 0184 7B68     		ldr	r3, [r7, #4]
 13964 0186 1B68     		ldr	r3, [r3]
 13965 0188 1022     		movs	r2, #16
 13966 018a 1A62     		str	r2, [r3, #32]
 13967              	.L728:
4447:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4448:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4449:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4450:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4451:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4452:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4453:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4454:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 13968              		.loc 1 4454 9
 13969 018c 7B68     		ldr	r3, [r7, #4]
 13970 018e B3F85C30 		ldrh	r3, [r3, #92]
ARM GAS  /tmp/ccMjAmt3.s 			page 337


 13971 0192 1946     		mov	r1, r3
 13972 0194 7868     		ldr	r0, [r7, #4]
 13973 0196 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4455:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4456:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4457:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       else
4458:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4459:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Standard reception API called */
4460:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4461:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4462:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4463:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4464:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4465:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4466:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4467:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4468:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4469:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4470:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
4471:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4472:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4473:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4474:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4475:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 13974              		.loc 1 4475 1
 13975 019a 0BE0     		b	.L729
 13976              	.L724:
4465:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 13977              		.loc 1 4465 9
 13978 019c 7868     		ldr	r0, [r7, #4]
 13979 019e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 13980              		.loc 1 4475 1
 13981 01a2 07E0     		b	.L729
 13982              	.L712:
4473:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 13983              		.loc 1 4473 5
 13984 01a4 7B68     		ldr	r3, [r7, #4]
 13985 01a6 1B68     		ldr	r3, [r3]
 13986 01a8 9A69     		ldr	r2, [r3, #24]
 13987 01aa 7B68     		ldr	r3, [r7, #4]
 13988 01ac 1B68     		ldr	r3, [r3]
 13989 01ae 42F00802 		orr	r2, r2, #8
 13990 01b2 9A61     		str	r2, [r3, #24]
 13991              	.L729:
 13992              		.loc 1 4475 1
 13993 01b4 00BF     		nop
 13994 01b6 7037     		adds	r7, r7, #112
 13995              		.cfi_def_cfa_offset 8
 13996 01b8 BD46     		mov	sp, r7
 13997              		.cfi_def_cfa_register 13
 13998              		@ sp needed
 13999 01ba 80BD     		pop	{r7, pc}
 14000              	.L731:
 14001              		.align	2
 14002              	.L730:
 14003 01bc 000C0056 		.word	1442843648
 14004 01c0 000C0046 		.word	1174408192
ARM GAS  /tmp/ccMjAmt3.s 			page 338


 14005              		.cfi_endproc
 14006              	.LFE902:
 14008              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 14009              		.align	1
 14010              		.syntax unified
 14011              		.thumb
 14012              		.thumb_func
 14014              	UART_RxISR_8BIT_FIFOEN:
 14015              	.LFB903:
4476:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4477:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4478:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
4479:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4480:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4481:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
4482:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4483:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4484:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4485:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 14016              		.loc 1 4485 1
 14017              		.cfi_startproc
 14018              		@ args = 0, pretend = 0, frame = 176
 14019              		@ frame_needed = 1, uses_anonymous_args = 0
 14020 0000 80B5     		push	{r7, lr}
 14021              		.cfi_def_cfa_offset 8
 14022              		.cfi_offset 7, -8
 14023              		.cfi_offset 14, -4
 14024 0002 ACB0     		sub	sp, sp, #176
 14025              		.cfi_def_cfa_offset 184
 14026 0004 00AF     		add	r7, sp, #0
 14027              		.cfi_def_cfa_register 7
 14028 0006 7860     		str	r0, [r7, #4]
4486:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 14029              		.loc 1 4486 13
 14030 0008 7B68     		ldr	r3, [r7, #4]
 14031 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 14032 000e A7F8AA30 		strh	r3, [r7, #170]	@ movhi
4487:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  uhdata;
4488:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  nb_rx_data;
4489:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  rxdatacount;
4490:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 14033              		.loc 1 4490 24
 14034 0012 7B68     		ldr	r3, [r7, #4]
 14035 0014 1B68     		ldr	r3, [r3]
 14036              		.loc 1 4490 13
 14037 0016 DB69     		ldr	r3, [r3, #28]
 14038 0018 C7F8AC30 		str	r3, [r7, #172]
4491:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 14039              		.loc 1 4491 24
 14040 001c 7B68     		ldr	r3, [r7, #4]
 14041 001e 1B68     		ldr	r3, [r3]
 14042              		.loc 1 4491 13
 14043 0020 1B68     		ldr	r3, [r3]
 14044 0022 C7F8A430 		str	r3, [r7, #164]
4492:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 14045              		.loc 1 4492 24
 14046 0026 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 339


 14047 0028 1B68     		ldr	r3, [r3]
 14048              		.loc 1 4492 13
 14049 002a 9B68     		ldr	r3, [r3, #8]
 14050 002c C7F8A030 		str	r3, [r7, #160]
4493:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4494:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4495:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 14051              		.loc 1 4495 12
 14052 0030 7B68     		ldr	r3, [r7, #4]
 14053 0032 D3F88C30 		ldr	r3, [r3, #140]
 14054              		.loc 1 4495 6
 14055 0036 222B     		cmp	r3, #34
 14056 0038 40F08881 		bne	.L733
4496:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4497:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     nb_rx_data = huart->NbRxDataToProcess;
 14057              		.loc 1 4497 16
 14058 003c 7B68     		ldr	r3, [r7, #4]
 14059 003e B3F86830 		ldrh	r3, [r3, #104]	@ movhi
 14060 0042 A7F89E30 		strh	r3, [r7, #158]	@ movhi
4498:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 14061              		.loc 1 4498 11
 14062 0046 2BE1     		b	.L734
 14063              	.L756:
4499:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4500:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 14064              		.loc 1 4500 27
 14065 0048 7B68     		ldr	r3, [r7, #4]
 14066 004a 1B68     		ldr	r3, [r3]
 14067 004c 5B6A     		ldr	r3, [r3, #36]
 14068              		.loc 1 4500 14
 14069 004e A7F89C30 		strh	r3, [r7, #156]	@ movhi
4501:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 14070              		.loc 1 4501 28
 14071 0052 B7F89C30 		ldrh	r3, [r7, #156]	@ movhi
 14072 0056 D9B2     		uxtb	r1, r3
 14073              		.loc 1 4501 47
 14074 0058 B7F8AA30 		ldrh	r3, [r7, #170]	@ movhi
 14075 005c DAB2     		uxtb	r2, r3
 14076              		.loc 1 4501 13
 14077 005e 7B68     		ldr	r3, [r7, #4]
 14078 0060 9B6D     		ldr	r3, [r3, #88]
 14079              		.loc 1 4501 28
 14080 0062 0A40     		ands	r2, r2, r1
 14081 0064 D2B2     		uxtb	r2, r2
 14082              		.loc 1 4501 26
 14083 0066 1A70     		strb	r2, [r3]
4502:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pRxBuffPtr++;
 14084              		.loc 1 4502 12
 14085 0068 7B68     		ldr	r3, [r7, #4]
 14086 006a 9B6D     		ldr	r3, [r3, #88]
 14087              		.loc 1 4502 24
 14088 006c 5A1C     		adds	r2, r3, #1
 14089 006e 7B68     		ldr	r3, [r7, #4]
 14090 0070 9A65     		str	r2, [r3, #88]
4503:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxXferCount--;
 14091              		.loc 1 4503 12
 14092 0072 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 340


 14093 0074 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 14094 0078 9BB2     		uxth	r3, r3
 14095              		.loc 1 4503 25
 14096 007a 013B     		subs	r3, r3, #1
 14097 007c 9AB2     		uxth	r2, r3
 14098 007e 7B68     		ldr	r3, [r7, #4]
 14099 0080 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4504:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
 14100              		.loc 1 4504 18
 14101 0084 7B68     		ldr	r3, [r7, #4]
 14102 0086 1B68     		ldr	r3, [r3]
 14103              		.loc 1 4504 16
 14104 0088 DB69     		ldr	r3, [r3, #28]
 14105 008a C7F8AC30 		str	r3, [r7, #172]
4505:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4506:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* If some non blocking errors occurred */
4507:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 14106              		.loc 1 4507 21
 14107 008e D7F8AC30 		ldr	r3, [r7, #172]
 14108 0092 03F00703 		and	r3, r3, #7
 14109              		.loc 1 4507 10
 14110 0096 002B     		cmp	r3, #0
 14111 0098 53D0     		beq	.L735
4508:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4509:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* UART parity error interrupt occurred -------------------------------------*/
4510:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 14112              		.loc 1 4510 24
 14113 009a D7F8AC30 		ldr	r3, [r7, #172]
 14114 009e 03F00103 		and	r3, r3, #1
 14115              		.loc 1 4510 12
 14116 00a2 002B     		cmp	r3, #0
 14117 00a4 11D0     		beq	.L736
 14118              		.loc 1 4510 59 discriminator 1
 14119 00a6 D7F8A430 		ldr	r3, [r7, #164]
 14120 00aa 03F48073 		and	r3, r3, #256
 14121              		.loc 1 4510 47 discriminator 1
 14122 00ae 002B     		cmp	r3, #0
 14123 00b0 0BD0     		beq	.L736
4511:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4512:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 14124              		.loc 1 4512 11
 14125 00b2 7B68     		ldr	r3, [r7, #4]
 14126 00b4 1B68     		ldr	r3, [r3]
 14127 00b6 0122     		movs	r2, #1
 14128 00b8 1A62     		str	r2, [r3, #32]
4513:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4514:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_PE;
 14129              		.loc 1 4514 16
 14130 00ba 7B68     		ldr	r3, [r7, #4]
 14131 00bc D3F89030 		ldr	r3, [r3, #144]
 14132              		.loc 1 4514 28
 14133 00c0 43F00102 		orr	r2, r3, #1
 14134 00c4 7B68     		ldr	r3, [r7, #4]
 14135 00c6 C3F89020 		str	r2, [r3, #144]
 14136              	.L736:
4515:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4516:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
ARM GAS  /tmp/ccMjAmt3.s 			page 341


4517:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* UART frame error interrupt occurred --------------------------------------*/
4518:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 14137              		.loc 1 4518 24
 14138 00ca D7F8AC30 		ldr	r3, [r7, #172]
 14139 00ce 03F00203 		and	r3, r3, #2
 14140              		.loc 1 4518 12
 14141 00d2 002B     		cmp	r3, #0
 14142 00d4 11D0     		beq	.L737
 14143              		.loc 1 4518 59 discriminator 1
 14144 00d6 D7F8A030 		ldr	r3, [r7, #160]
 14145 00da 03F00103 		and	r3, r3, #1
 14146              		.loc 1 4518 47 discriminator 1
 14147 00de 002B     		cmp	r3, #0
 14148 00e0 0BD0     		beq	.L737
4519:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4520:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 14149              		.loc 1 4520 11
 14150 00e2 7B68     		ldr	r3, [r7, #4]
 14151 00e4 1B68     		ldr	r3, [r3]
 14152 00e6 0222     		movs	r2, #2
 14153 00e8 1A62     		str	r2, [r3, #32]
4521:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4522:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_FE;
 14154              		.loc 1 4522 16
 14155 00ea 7B68     		ldr	r3, [r7, #4]
 14156 00ec D3F89030 		ldr	r3, [r3, #144]
 14157              		.loc 1 4522 28
 14158 00f0 43F00402 		orr	r2, r3, #4
 14159 00f4 7B68     		ldr	r3, [r7, #4]
 14160 00f6 C3F89020 		str	r2, [r3, #144]
 14161              	.L737:
4523:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4524:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4525:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* UART noise error interrupt occurred --------------------------------------*/
4526:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 14162              		.loc 1 4526 24
 14163 00fa D7F8AC30 		ldr	r3, [r7, #172]
 14164 00fe 03F00403 		and	r3, r3, #4
 14165              		.loc 1 4526 12
 14166 0102 002B     		cmp	r3, #0
 14167 0104 11D0     		beq	.L738
 14168              		.loc 1 4526 59 discriminator 1
 14169 0106 D7F8A030 		ldr	r3, [r7, #160]
 14170 010a 03F00103 		and	r3, r3, #1
 14171              		.loc 1 4526 47 discriminator 1
 14172 010e 002B     		cmp	r3, #0
 14173 0110 0BD0     		beq	.L738
4527:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4528:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 14174              		.loc 1 4528 11
 14175 0112 7B68     		ldr	r3, [r7, #4]
 14176 0114 1B68     		ldr	r3, [r3]
 14177 0116 0422     		movs	r2, #4
 14178 0118 1A62     		str	r2, [r3, #32]
4529:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4530:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_NE;
 14179              		.loc 1 4530 16
ARM GAS  /tmp/ccMjAmt3.s 			page 342


 14180 011a 7B68     		ldr	r3, [r7, #4]
 14181 011c D3F89030 		ldr	r3, [r3, #144]
 14182              		.loc 1 4530 28
 14183 0120 43F00202 		orr	r2, r3, #2
 14184 0124 7B68     		ldr	r3, [r7, #4]
 14185 0126 C3F89020 		str	r2, [r3, #144]
 14186              	.L738:
4531:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4532:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4533:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Call UART Error Call back function if need be ----------------------------*/
4534:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 14187              		.loc 1 4534 18
 14188 012a 7B68     		ldr	r3, [r7, #4]
 14189 012c D3F89030 		ldr	r3, [r3, #144]
 14190              		.loc 1 4534 12
 14191 0130 002B     		cmp	r3, #0
 14192 0132 06D0     		beq	.L735
4535:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4536:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Non Blocking error : transfer could go on.
4537:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           Error is notified to user through user error callback */
4538:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4539:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call registered error callback*/
4540:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCallback(huart);
4541:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4542:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call legacy weak error callback*/
4543:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 14193              		.loc 1 4543 11
 14194 0134 7868     		ldr	r0, [r7, #4]
 14195 0136 FFF7FEFF 		bl	HAL_UART_ErrorCallback
4544:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4545:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_NONE;
 14196              		.loc 1 4545 28
 14197 013a 7B68     		ldr	r3, [r7, #4]
 14198 013c 0022     		movs	r2, #0
 14199 013e C3F89020 		str	r2, [r3, #144]
 14200              	.L735:
4546:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4547:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4548:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4549:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 14201              		.loc 1 4549 16
 14202 0142 7B68     		ldr	r3, [r7, #4]
 14203 0144 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 14204 0148 9BB2     		uxth	r3, r3
 14205              		.loc 1 4549 10
 14206 014a 002B     		cmp	r3, #0
 14207 014c 40F0A880 		bne	.L734
 14208              	.L741:
 14209              	.LBB951:
4550:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4551:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4552:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 14210              		.loc 1 4552 9 discriminator 1
 14211 0150 7B68     		ldr	r3, [r7, #4]
 14212 0152 1B68     		ldr	r3, [r3]
 14213 0154 3B67     		str	r3, [r7, #112]
 14214              	.LBB952:
ARM GAS  /tmp/ccMjAmt3.s 			page 343


 14215              	.LBB953:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14216              		.loc 2 480 4
 14217 0156 3B6F     		ldr	r3, [r7, #112]
 14218              		.syntax unified
 14219              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14220 0158 53E8003F 		ldrex r3, [r3]
 14221              	@ 0 "" 2
 14222              		.thumb
 14223              		.syntax unified
 14224 015c FB66     		str	r3, [r7, #108]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14225              		.loc 2 481 10
 14226 015e FB6E     		ldr	r3, [r7, #108]
 14227              	.LBE953:
 14228              	.LBE952:
 14229              		.loc 1 4552 9 discriminator 1
 14230 0160 23F48073 		bic	r3, r3, #256
 14231 0164 C7F89830 		str	r3, [r7, #152]
 14232 0168 7B68     		ldr	r3, [r7, #4]
 14233 016a 1B68     		ldr	r3, [r3]
 14234 016c 1A46     		mov	r2, r3
 14235 016e D7F89830 		ldr	r3, [r7, #152]
 14236 0172 FB67     		str	r3, [r7, #124]
 14237 0174 BA67     		str	r2, [r7, #120]
 14238              	.LBB954:
 14239              	.LBB955:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14240              		.loc 2 531 4
 14241 0176 B96F     		ldr	r1, [r7, #120]
 14242 0178 FA6F     		ldr	r2, [r7, #124]
 14243              		.syntax unified
 14244              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14245 017a 41E80023 		strex r3, r2, [r1]
 14246              	@ 0 "" 2
 14247              		.thumb
 14248              		.syntax unified
 14249 017e 7B67     		str	r3, [r7, #116]
 14250              		.loc 2 532 10
 14251 0180 7B6F     		ldr	r3, [r7, #116]
 14252              	.LBE955:
 14253              	.LBE954:
 14254              		.loc 1 4552 9 discriminator 1
 14255 0182 002B     		cmp	r3, #0
 14256 0184 E4D1     		bne	.L741
 14257              	.L744:
 14258              	.LBE951:
 14259              	.LBB956:
4553:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4554:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4555:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4556:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 14260              		.loc 1 4556 9 discriminator 1
 14261 0186 7B68     		ldr	r3, [r7, #4]
 14262 0188 1B68     		ldr	r3, [r3]
 14263 018a 0833     		adds	r3, r3, #8
 14264 018c FB65     		str	r3, [r7, #92]
ARM GAS  /tmp/ccMjAmt3.s 			page 344


 14265              	.LBB957:
 14266              	.LBB958:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14267              		.loc 2 480 4
 14268 018e FB6D     		ldr	r3, [r7, #92]
 14269              		.syntax unified
 14270              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14271 0190 53E8003F 		ldrex r3, [r3]
 14272              	@ 0 "" 2
 14273              		.thumb
 14274              		.syntax unified
 14275 0194 BB65     		str	r3, [r7, #88]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14276              		.loc 2 481 10
 14277 0196 BB6D     		ldr	r3, [r7, #88]
 14278              	.LBE958:
 14279              	.LBE957:
 14280              		.loc 1 4556 9 discriminator 1
 14281 0198 23F08053 		bic	r3, r3, #268435456
 14282 019c 23F00103 		bic	r3, r3, #1
 14283 01a0 C7F89430 		str	r3, [r7, #148]
 14284 01a4 7B68     		ldr	r3, [r7, #4]
 14285 01a6 1B68     		ldr	r3, [r3]
 14286 01a8 0833     		adds	r3, r3, #8
 14287 01aa D7F89420 		ldr	r2, [r7, #148]
 14288 01ae BA66     		str	r2, [r7, #104]
 14289 01b0 7B66     		str	r3, [r7, #100]
 14290              	.LBB959:
 14291              	.LBB960:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14292              		.loc 2 531 4
 14293 01b2 796E     		ldr	r1, [r7, #100]
 14294 01b4 BA6E     		ldr	r2, [r7, #104]
 14295              		.syntax unified
 14296              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14297 01b6 41E80023 		strex r3, r2, [r1]
 14298              	@ 0 "" 2
 14299              		.thumb
 14300              		.syntax unified
 14301 01ba 3B66     		str	r3, [r7, #96]
 14302              		.loc 2 532 10
 14303 01bc 3B6E     		ldr	r3, [r7, #96]
 14304              	.LBE960:
 14305              	.LBE959:
 14306              		.loc 1 4556 9 discriminator 1
 14307 01be 002B     		cmp	r3, #0
 14308 01c0 E1D1     		bne	.L744
 14309              	.LBE956:
4557:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4558:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4559:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 14310              		.loc 1 4559 24
 14311 01c2 7B68     		ldr	r3, [r7, #4]
 14312 01c4 2022     		movs	r2, #32
 14313 01c6 C3F88C20 		str	r2, [r3, #140]
4560:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4561:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Clear RxISR function pointer */
ARM GAS  /tmp/ccMjAmt3.s 			page 345


4562:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxISR = NULL;
 14314              		.loc 1 4562 22
 14315 01ca 7B68     		ldr	r3, [r7, #4]
 14316 01cc 0022     		movs	r2, #0
 14317 01ce 5A67     		str	r2, [r3, #116]
4563:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4564:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Initialize type of RxEvent to Transfer Complete */
4565:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_TC;
 14318              		.loc 1 4565 28
 14319 01d0 7B68     		ldr	r3, [r7, #4]
 14320 01d2 0022     		movs	r2, #0
 14321 01d4 1A67     		str	r2, [r3, #112]
4566:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4567:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (!(IS_LPUART_INSTANCE(huart->Instance)))
 14322              		.loc 1 4567 15
 14323 01d6 7B68     		ldr	r3, [r7, #4]
 14324 01d8 1B68     		ldr	r3, [r3]
 14325              		.loc 1 4567 12
 14326 01da 624A     		ldr	r2, .L765
 14327 01dc 9342     		cmp	r3, r2
 14328 01de 26D0     		beq	.L745
 14329              		.loc 1 4567 15 discriminator 1
 14330 01e0 7B68     		ldr	r3, [r7, #4]
 14331 01e2 1B68     		ldr	r3, [r3]
 14332              		.loc 1 4567 13 discriminator 1
 14333 01e4 604A     		ldr	r2, .L765+4
 14334 01e6 9342     		cmp	r3, r2
 14335 01e8 21D0     		beq	.L745
4568:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4569:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Check that USART RTOEN bit is set */
4570:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 14336              		.loc 1 4570 15
 14337 01ea 7B68     		ldr	r3, [r7, #4]
 14338 01ec 1B68     		ldr	r3, [r3]
 14339 01ee 5B68     		ldr	r3, [r3, #4]
 14340 01f0 03F40003 		and	r3, r3, #8388608
 14341              		.loc 1 4570 14
 14342 01f4 002B     		cmp	r3, #0
 14343 01f6 1AD0     		beq	.L745
 14344              	.L748:
 14345              	.LBB961:
4571:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           {
4572:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /* Enable the UART Receiver Timeout Interrupt */
4573:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 14346              		.loc 1 4573 13 discriminator 1
 14347 01f8 7B68     		ldr	r3, [r7, #4]
 14348 01fa 1B68     		ldr	r3, [r3]
 14349 01fc BB64     		str	r3, [r7, #72]
 14350              	.LBB962:
 14351              	.LBB963:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14352              		.loc 2 480 4
 14353 01fe BB6C     		ldr	r3, [r7, #72]
 14354              		.syntax unified
 14355              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14356 0200 53E8003F 		ldrex r3, [r3]
 14357              	@ 0 "" 2
ARM GAS  /tmp/ccMjAmt3.s 			page 346


 14358              		.thumb
 14359              		.syntax unified
 14360 0204 7B64     		str	r3, [r7, #68]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14361              		.loc 2 481 10
 14362 0206 7B6C     		ldr	r3, [r7, #68]
 14363              	.LBE963:
 14364              	.LBE962:
 14365              		.loc 1 4573 13 discriminator 1
 14366 0208 23F08063 		bic	r3, r3, #67108864
 14367 020c C7F89030 		str	r3, [r7, #144]
 14368 0210 7B68     		ldr	r3, [r7, #4]
 14369 0212 1B68     		ldr	r3, [r3]
 14370 0214 1A46     		mov	r2, r3
 14371 0216 D7F89030 		ldr	r3, [r7, #144]
 14372 021a 7B65     		str	r3, [r7, #84]
 14373 021c 3A65     		str	r2, [r7, #80]
 14374              	.LBB964:
 14375              	.LBB965:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14376              		.loc 2 531 4
 14377 021e 396D     		ldr	r1, [r7, #80]
 14378 0220 7A6D     		ldr	r2, [r7, #84]
 14379              		.syntax unified
 14380              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14381 0222 41E80023 		strex r3, r2, [r1]
 14382              	@ 0 "" 2
 14383              		.thumb
 14384              		.syntax unified
 14385 0226 FB64     		str	r3, [r7, #76]
 14386              		.loc 2 532 10
 14387 0228 FB6C     		ldr	r3, [r7, #76]
 14388              	.LBE965:
 14389              	.LBE964:
 14390              		.loc 1 4573 13 discriminator 1
 14391 022a 002B     		cmp	r3, #0
 14392 022c E4D1     		bne	.L748
 14393              	.L745:
 14394              	.LBE961:
4574:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           }
4575:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4576:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4577:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Check current reception Mode :
4578:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            If Reception till IDLE event has been selected : */
4579:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 14395              		.loc 1 4579 18
 14396 022e 7B68     		ldr	r3, [r7, #4]
 14397 0230 DB6E     		ldr	r3, [r3, #108]
 14398              		.loc 1 4579 12
 14399 0232 012B     		cmp	r3, #1
 14400 0234 30D1     		bne	.L749
4580:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4581:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set reception type to Standard */
4582:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 14401              		.loc 1 4582 32
 14402 0236 7B68     		ldr	r3, [r7, #4]
 14403 0238 0022     		movs	r2, #0
ARM GAS  /tmp/ccMjAmt3.s 			page 347


 14404 023a DA66     		str	r2, [r3, #108]
 14405              	.L752:
 14406              	.LBB966:
4583:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4584:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Disable IDLE interrupt */
4585:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 14407              		.loc 1 4585 11 discriminator 1
 14408 023c 7B68     		ldr	r3, [r7, #4]
 14409 023e 1B68     		ldr	r3, [r3]
 14410 0240 7B63     		str	r3, [r7, #52]
 14411              	.LBB967:
 14412              	.LBB968:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14413              		.loc 2 480 4
 14414 0242 7B6B     		ldr	r3, [r7, #52]
 14415              		.syntax unified
 14416              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14417 0244 53E8003F 		ldrex r3, [r3]
 14418              	@ 0 "" 2
 14419              		.thumb
 14420              		.syntax unified
 14421 0248 3B63     		str	r3, [r7, #48]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14422              		.loc 2 481 10
 14423 024a 3B6B     		ldr	r3, [r7, #48]
 14424              	.LBE968:
 14425              	.LBE967:
 14426              		.loc 1 4585 11 discriminator 1
 14427 024c 23F01003 		bic	r3, r3, #16
 14428 0250 C7F88C30 		str	r3, [r7, #140]
 14429 0254 7B68     		ldr	r3, [r7, #4]
 14430 0256 1B68     		ldr	r3, [r3]
 14431 0258 1A46     		mov	r2, r3
 14432 025a D7F88C30 		ldr	r3, [r7, #140]
 14433 025e 3B64     		str	r3, [r7, #64]
 14434 0260 FA63     		str	r2, [r7, #60]
 14435              	.LBB969:
 14436              	.LBB970:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14437              		.loc 2 531 4
 14438 0262 F96B     		ldr	r1, [r7, #60]
 14439 0264 3A6C     		ldr	r2, [r7, #64]
 14440              		.syntax unified
 14441              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14442 0266 41E80023 		strex r3, r2, [r1]
 14443              	@ 0 "" 2
 14444              		.thumb
 14445              		.syntax unified
 14446 026a BB63     		str	r3, [r7, #56]
 14447              		.loc 2 532 10
 14448 026c BB6B     		ldr	r3, [r7, #56]
 14449              	.LBE970:
 14450              	.LBE969:
 14451              		.loc 1 4585 11 discriminator 1
 14452 026e 002B     		cmp	r3, #0
 14453 0270 E4D1     		bne	.L752
 14454              	.LBE966:
ARM GAS  /tmp/ccMjAmt3.s 			page 348


4586:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4587:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 14455              		.loc 1 4587 15
 14456 0272 7B68     		ldr	r3, [r7, #4]
 14457 0274 1B68     		ldr	r3, [r3]
 14458 0276 DB69     		ldr	r3, [r3, #28]
 14459 0278 03F01003 		and	r3, r3, #16
 14460              		.loc 1 4587 14
 14461 027c 102B     		cmp	r3, #16
 14462 027e 03D1     		bne	.L753
4588:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           {
4589:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /* Clear IDLE Flag */
4590:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 14463              		.loc 1 4590 13
 14464 0280 7B68     		ldr	r3, [r7, #4]
 14465 0282 1B68     		ldr	r3, [r3]
 14466 0284 1022     		movs	r2, #16
 14467 0286 1A62     		str	r2, [r3, #32]
 14468              	.L753:
4591:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           }
4592:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4593:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4594:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call registered Rx Event callback*/
4595:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->RxEventCallback(huart, huart->RxXferSize);
4596:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4597:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call legacy weak Rx Event callback*/
4598:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 14469              		.loc 1 4598 11
 14470 0288 7B68     		ldr	r3, [r7, #4]
 14471 028a B3F85C30 		ldrh	r3, [r3, #92]
 14472 028e 1946     		mov	r1, r3
 14473 0290 7868     		ldr	r0, [r7, #4]
 14474 0292 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4599:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4600:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4601:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         else
4602:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4603:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Standard reception API called */
4604:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4605:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call registered Rx complete callback*/
4606:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->RxCpltCallback(huart);
4607:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4608:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call legacy weak Rx complete callback*/
4609:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           HAL_UART_RxCpltCallback(huart);
4610:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4611:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4612:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 14475              		.loc 1 4612 9
 14476 0296 0EE0     		b	.L755
 14477              	.L749:
4609:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 14478              		.loc 1 4609 11
 14479 0298 7868     		ldr	r0, [r7, #4]
 14480 029a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 14481              		.loc 1 4612 9
 14482 029e 0AE0     		b	.L755
 14483              	.L734:
ARM GAS  /tmp/ccMjAmt3.s 			page 349


4498:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 14484              		.loc 1 4498 30
 14485 02a0 B7F89E30 		ldrh	r3, [r7, #158]
 14486 02a4 002B     		cmp	r3, #0
 14487 02a6 06D0     		beq	.L755
4498:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 14488              		.loc 1 4498 44 discriminator 1
 14489 02a8 D7F8AC30 		ldr	r3, [r7, #172]
 14490 02ac 03F02003 		and	r3, r3, #32
4498:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 14491              		.loc 1 4498 30 discriminator 1
 14492 02b0 002B     		cmp	r3, #0
 14493 02b2 7FF4C9AE 		bne	.L756
 14494              	.L755:
4613:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4614:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4615:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4616:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4617:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4618:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4619:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     */
4620:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 14495              		.loc 1 4620 17
 14496 02b6 7B68     		ldr	r3, [r7, #4]
 14497 02b8 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 14498 02bc A7F88A30 		strh	r3, [r7, #138]	@ movhi
4621:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 14499              		.loc 1 4621 8
 14500 02c0 B7F88A30 		ldrh	r3, [r7, #138]
 14501 02c4 002B     		cmp	r3, #0
 14502 02c6 49D0     		beq	.L764
 14503              		.loc 1 4621 52 discriminator 1
 14504 02c8 7B68     		ldr	r3, [r7, #4]
 14505 02ca B3F86830 		ldrh	r3, [r3, #104]
 14506              		.loc 1 4621 29 discriminator 1
 14507 02ce B7F88A20 		ldrh	r2, [r7, #138]
 14508 02d2 9A42     		cmp	r2, r3
 14509 02d4 42D2     		bcs	.L764
 14510              	.L760:
 14511              	.LBB971:
4622:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4623:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4624:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 14512              		.loc 1 4624 7 discriminator 1
 14513 02d6 7B68     		ldr	r3, [r7, #4]
 14514 02d8 1B68     		ldr	r3, [r3]
 14515 02da 0833     		adds	r3, r3, #8
 14516 02dc 3B62     		str	r3, [r7, #32]
 14517              	.LBB972:
 14518              	.LBB973:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14519              		.loc 2 480 4
 14520 02de 3B6A     		ldr	r3, [r7, #32]
 14521              		.syntax unified
 14522              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14523 02e0 53E8003F 		ldrex r3, [r3]
 14524              	@ 0 "" 2
ARM GAS  /tmp/ccMjAmt3.s 			page 350


 14525              		.thumb
 14526              		.syntax unified
 14527 02e4 FB61     		str	r3, [r7, #28]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14528              		.loc 2 481 10
 14529 02e6 FB69     		ldr	r3, [r7, #28]
 14530              	.LBE973:
 14531              	.LBE972:
 14532              		.loc 1 4624 7 discriminator 1
 14533 02e8 23F08053 		bic	r3, r3, #268435456
 14534 02ec C7F88430 		str	r3, [r7, #132]
 14535 02f0 7B68     		ldr	r3, [r7, #4]
 14536 02f2 1B68     		ldr	r3, [r3]
 14537 02f4 0833     		adds	r3, r3, #8
 14538 02f6 D7F88420 		ldr	r2, [r7, #132]
 14539 02fa FA62     		str	r2, [r7, #44]
 14540 02fc BB62     		str	r3, [r7, #40]
 14541              	.LBB974:
 14542              	.LBB975:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14543              		.loc 2 531 4
 14544 02fe B96A     		ldr	r1, [r7, #40]
 14545 0300 FA6A     		ldr	r2, [r7, #44]
 14546              		.syntax unified
 14547              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14548 0302 41E80023 		strex r3, r2, [r1]
 14549              	@ 0 "" 2
 14550              		.thumb
 14551              		.syntax unified
 14552 0306 7B62     		str	r3, [r7, #36]
 14553              		.loc 2 532 10
 14554 0308 7B6A     		ldr	r3, [r7, #36]
 14555              	.LBE975:
 14556              	.LBE974:
 14557              		.loc 1 4624 7 discriminator 1
 14558 030a 002B     		cmp	r3, #0
 14559 030c E3D1     		bne	.L760
 14560              	.LBE971:
4625:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4626:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Update the RxISR function pointer */
4627:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 14561              		.loc 1 4627 20
 14562 030e 7B68     		ldr	r3, [r7, #4]
 14563 0310 164A     		ldr	r2, .L765+8
 14564 0312 5A67     		str	r2, [r3, #116]
 14565              	.L763:
 14566              	.LBB976:
4628:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4629:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4630:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 14567              		.loc 1 4630 7 discriminator 1
 14568 0314 7B68     		ldr	r3, [r7, #4]
 14569 0316 1B68     		ldr	r3, [r3]
 14570 0318 FB60     		str	r3, [r7, #12]
 14571              	.LBB977:
 14572              	.LBB978:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/ccMjAmt3.s 			page 351


 14573              		.loc 2 480 4
 14574 031a FB68     		ldr	r3, [r7, #12]
 14575              		.syntax unified
 14576              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14577 031c 53E8003F 		ldrex r3, [r3]
 14578              	@ 0 "" 2
 14579              		.thumb
 14580              		.syntax unified
 14581 0320 BB60     		str	r3, [r7, #8]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14582              		.loc 2 481 10
 14583 0322 BB68     		ldr	r3, [r7, #8]
 14584              	.LBE978:
 14585              	.LBE977:
 14586              		.loc 1 4630 7 discriminator 1
 14587 0324 43F02003 		orr	r3, r3, #32
 14588 0328 C7F88030 		str	r3, [r7, #128]
 14589 032c 7B68     		ldr	r3, [r7, #4]
 14590 032e 1B68     		ldr	r3, [r3]
 14591 0330 1A46     		mov	r2, r3
 14592 0332 D7F88030 		ldr	r3, [r7, #128]
 14593 0336 BB61     		str	r3, [r7, #24]
 14594 0338 7A61     		str	r2, [r7, #20]
 14595              	.LBB979:
 14596              	.LBB980:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14597              		.loc 2 531 4
 14598 033a 7969     		ldr	r1, [r7, #20]
 14599 033c BA69     		ldr	r2, [r7, #24]
 14600              		.syntax unified
 14601              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14602 033e 41E80023 		strex r3, r2, [r1]
 14603              	@ 0 "" 2
 14604              		.thumb
 14605              		.syntax unified
 14606 0342 3B61     		str	r3, [r7, #16]
 14607              		.loc 2 532 10
 14608 0344 3B69     		ldr	r3, [r7, #16]
 14609              	.LBE980:
 14610              	.LBE979:
 14611              		.loc 1 4630 7 discriminator 1
 14612 0346 002B     		cmp	r3, #0
 14613 0348 E4D1     		bne	.L763
 14614              	.LBE976:
4631:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4632:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4633:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
4634:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4635:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4636:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4637:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4638:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 14615              		.loc 1 4638 1
 14616 034a 07E0     		b	.L764
 14617              	.L733:
4636:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 14618              		.loc 1 4636 5
ARM GAS  /tmp/ccMjAmt3.s 			page 352


 14619 034c 7B68     		ldr	r3, [r7, #4]
 14620 034e 1B68     		ldr	r3, [r3]
 14621 0350 9A69     		ldr	r2, [r3, #24]
 14622 0352 7B68     		ldr	r3, [r7, #4]
 14623 0354 1B68     		ldr	r3, [r3]
 14624 0356 42F00802 		orr	r2, r2, #8
 14625 035a 9A61     		str	r2, [r3, #24]
 14626              	.L764:
 14627              		.loc 1 4638 1
 14628 035c 00BF     		nop
 14629 035e B037     		adds	r7, r7, #176
 14630              		.cfi_def_cfa_offset 8
 14631 0360 BD46     		mov	sp, r7
 14632              		.cfi_def_cfa_register 13
 14633              		@ sp needed
 14634 0362 80BD     		pop	{r7, pc}
 14635              	.L766:
 14636              		.align	2
 14637              	.L765:
 14638 0364 000C0056 		.word	1442843648
 14639 0368 000C0046 		.word	1174408192
 14640 036c 00000000 		.word	UART_RxISR_8BIT
 14641              		.cfi_endproc
 14642              	.LFE903:
 14644              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 14645              		.align	1
 14646              		.syntax unified
 14647              		.thumb
 14648              		.thumb_func
 14650              	UART_RxISR_16BIT_FIFOEN:
 14651              	.LFB904:
4639:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4640:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** /**
4641:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4642:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4643:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4644:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @param huart UART handle.
4645:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   * @retval None
4646:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   */
4647:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4648:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** {
 14652              		.loc 1 4648 1
 14653              		.cfi_startproc
 14654              		@ args = 0, pretend = 0, frame = 184
 14655              		@ frame_needed = 1, uses_anonymous_args = 0
 14656 0000 80B5     		push	{r7, lr}
 14657              		.cfi_def_cfa_offset 8
 14658              		.cfi_offset 7, -8
 14659              		.cfi_offset 14, -4
 14660 0002 AEB0     		sub	sp, sp, #184
 14661              		.cfi_def_cfa_offset 192
 14662 0004 00AF     		add	r7, sp, #0
 14663              		.cfi_def_cfa_register 7
 14664 0006 7860     		str	r0, [r7, #4]
4649:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t *tmp;
4650:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 14665              		.loc 1 4650 13
ARM GAS  /tmp/ccMjAmt3.s 			page 353


 14666 0008 7B68     		ldr	r3, [r7, #4]
 14667 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 14668 000e A7F8B230 		strh	r3, [r7, #178]	@ movhi
4651:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  uhdata;
4652:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  nb_rx_data;
4653:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint16_t  rxdatacount;
4654:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 14669              		.loc 1 4654 24
 14670 0012 7B68     		ldr	r3, [r7, #4]
 14671 0014 1B68     		ldr	r3, [r3]
 14672              		.loc 1 4654 13
 14673 0016 DB69     		ldr	r3, [r3, #28]
 14674 0018 C7F8B430 		str	r3, [r7, #180]
4655:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 14675              		.loc 1 4655 24
 14676 001c 7B68     		ldr	r3, [r7, #4]
 14677 001e 1B68     		ldr	r3, [r3]
 14678              		.loc 1 4655 13
 14679 0020 1B68     		ldr	r3, [r3]
 14680 0022 C7F8AC30 		str	r3, [r7, #172]
4656:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 14681              		.loc 1 4656 24
 14682 0026 7B68     		ldr	r3, [r7, #4]
 14683 0028 1B68     		ldr	r3, [r3]
 14684              		.loc 1 4656 13
 14685 002a 9B68     		ldr	r3, [r3, #8]
 14686 002c C7F8A830 		str	r3, [r7, #168]
4657:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4658:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4659:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 14687              		.loc 1 4659 12
 14688 0030 7B68     		ldr	r3, [r7, #4]
 14689 0032 D3F88C30 		ldr	r3, [r3, #140]
 14690              		.loc 1 4659 6
 14691 0036 222B     		cmp	r3, #34
 14692 0038 40F08C81 		bne	.L768
4660:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4661:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     nb_rx_data = huart->NbRxDataToProcess;
 14693              		.loc 1 4661 16
 14694 003c 7B68     		ldr	r3, [r7, #4]
 14695 003e B3F86830 		ldrh	r3, [r3, #104]	@ movhi
 14696 0042 A7F8A630 		strh	r3, [r7, #166]	@ movhi
4662:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 14697              		.loc 1 4662 11
 14698 0046 2FE1     		b	.L769
 14699              	.L791:
4663:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4664:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 14700              		.loc 1 4664 27
 14701 0048 7B68     		ldr	r3, [r7, #4]
 14702 004a 1B68     		ldr	r3, [r3]
 14703 004c 5B6A     		ldr	r3, [r3, #36]
 14704              		.loc 1 4664 14
 14705 004e A7F8A430 		strh	r3, [r7, #164]	@ movhi
4665:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 14706              		.loc 1 4665 11
 14707 0052 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 354


 14708 0054 9B6D     		ldr	r3, [r3, #88]
 14709 0056 C7F8A030 		str	r3, [r7, #160]
4666:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 14710              		.loc 1 4666 14
 14711 005a B7F8A420 		ldrh	r2, [r7, #164]	@ movhi
 14712 005e B7F8B230 		ldrh	r3, [r7, #178]	@ movhi
 14713 0062 1340     		ands	r3, r3, r2
 14714 0064 9AB2     		uxth	r2, r3
 14715              		.loc 1 4666 12
 14716 0066 D7F8A030 		ldr	r3, [r7, #160]
 14717 006a 1A80     		strh	r2, [r3]	@ movhi
4667:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 14718              		.loc 1 4667 12
 14719 006c 7B68     		ldr	r3, [r7, #4]
 14720 006e 9B6D     		ldr	r3, [r3, #88]
 14721              		.loc 1 4667 25
 14722 0070 9A1C     		adds	r2, r3, #2
 14723 0072 7B68     		ldr	r3, [r7, #4]
 14724 0074 9A65     		str	r2, [r3, #88]
4668:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxXferCount--;
 14725              		.loc 1 4668 12
 14726 0076 7B68     		ldr	r3, [r7, #4]
 14727 0078 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 14728 007c 9BB2     		uxth	r3, r3
 14729              		.loc 1 4668 25
 14730 007e 013B     		subs	r3, r3, #1
 14731 0080 9AB2     		uxth	r2, r3
 14732 0082 7B68     		ldr	r3, [r7, #4]
 14733 0084 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4669:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
 14734              		.loc 1 4669 18
 14735 0088 7B68     		ldr	r3, [r7, #4]
 14736 008a 1B68     		ldr	r3, [r3]
 14737              		.loc 1 4669 16
 14738 008c DB69     		ldr	r3, [r3, #28]
 14739 008e C7F8B430 		str	r3, [r7, #180]
4670:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4671:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* If some non blocking errors occurred */
4672:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 14740              		.loc 1 4672 21
 14741 0092 D7F8B430 		ldr	r3, [r7, #180]
 14742 0096 03F00703 		and	r3, r3, #7
 14743              		.loc 1 4672 10
 14744 009a 002B     		cmp	r3, #0
 14745 009c 53D0     		beq	.L770
4673:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4674:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* UART parity error interrupt occurred -------------------------------------*/
4675:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 14746              		.loc 1 4675 24
 14747 009e D7F8B430 		ldr	r3, [r7, #180]
 14748 00a2 03F00103 		and	r3, r3, #1
 14749              		.loc 1 4675 12
 14750 00a6 002B     		cmp	r3, #0
 14751 00a8 11D0     		beq	.L771
 14752              		.loc 1 4675 59 discriminator 1
 14753 00aa D7F8AC30 		ldr	r3, [r7, #172]
 14754 00ae 03F48073 		and	r3, r3, #256
ARM GAS  /tmp/ccMjAmt3.s 			page 355


 14755              		.loc 1 4675 47 discriminator 1
 14756 00b2 002B     		cmp	r3, #0
 14757 00b4 0BD0     		beq	.L771
4676:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4677:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 14758              		.loc 1 4677 11
 14759 00b6 7B68     		ldr	r3, [r7, #4]
 14760 00b8 1B68     		ldr	r3, [r3]
 14761 00ba 0122     		movs	r2, #1
 14762 00bc 1A62     		str	r2, [r3, #32]
4678:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4679:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_PE;
 14763              		.loc 1 4679 16
 14764 00be 7B68     		ldr	r3, [r7, #4]
 14765 00c0 D3F89030 		ldr	r3, [r3, #144]
 14766              		.loc 1 4679 28
 14767 00c4 43F00102 		orr	r2, r3, #1
 14768 00c8 7B68     		ldr	r3, [r7, #4]
 14769 00ca C3F89020 		str	r2, [r3, #144]
 14770              	.L771:
4680:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4681:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4682:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* UART frame error interrupt occurred --------------------------------------*/
4683:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 14771              		.loc 1 4683 24
 14772 00ce D7F8B430 		ldr	r3, [r7, #180]
 14773 00d2 03F00203 		and	r3, r3, #2
 14774              		.loc 1 4683 12
 14775 00d6 002B     		cmp	r3, #0
 14776 00d8 11D0     		beq	.L772
 14777              		.loc 1 4683 59 discriminator 1
 14778 00da D7F8A830 		ldr	r3, [r7, #168]
 14779 00de 03F00103 		and	r3, r3, #1
 14780              		.loc 1 4683 47 discriminator 1
 14781 00e2 002B     		cmp	r3, #0
 14782 00e4 0BD0     		beq	.L772
4684:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4685:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 14783              		.loc 1 4685 11
 14784 00e6 7B68     		ldr	r3, [r7, #4]
 14785 00e8 1B68     		ldr	r3, [r3]
 14786 00ea 0222     		movs	r2, #2
 14787 00ec 1A62     		str	r2, [r3, #32]
4686:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4687:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_FE;
 14788              		.loc 1 4687 16
 14789 00ee 7B68     		ldr	r3, [r7, #4]
 14790 00f0 D3F89030 		ldr	r3, [r3, #144]
 14791              		.loc 1 4687 28
 14792 00f4 43F00402 		orr	r2, r3, #4
 14793 00f8 7B68     		ldr	r3, [r7, #4]
 14794 00fa C3F89020 		str	r2, [r3, #144]
 14795              	.L772:
4688:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4689:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4690:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* UART noise error interrupt occurred --------------------------------------*/
4691:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
ARM GAS  /tmp/ccMjAmt3.s 			page 356


 14796              		.loc 1 4691 24
 14797 00fe D7F8B430 		ldr	r3, [r7, #180]
 14798 0102 03F00403 		and	r3, r3, #4
 14799              		.loc 1 4691 12
 14800 0106 002B     		cmp	r3, #0
 14801 0108 11D0     		beq	.L773
 14802              		.loc 1 4691 59 discriminator 1
 14803 010a D7F8A830 		ldr	r3, [r7, #168]
 14804 010e 03F00103 		and	r3, r3, #1
 14805              		.loc 1 4691 47 discriminator 1
 14806 0112 002B     		cmp	r3, #0
 14807 0114 0BD0     		beq	.L773
4692:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4693:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 14808              		.loc 1 4693 11
 14809 0116 7B68     		ldr	r3, [r7, #4]
 14810 0118 1B68     		ldr	r3, [r3]
 14811 011a 0422     		movs	r2, #4
 14812 011c 1A62     		str	r2, [r3, #32]
4694:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4695:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_NE;
 14813              		.loc 1 4695 16
 14814 011e 7B68     		ldr	r3, [r7, #4]
 14815 0120 D3F89030 		ldr	r3, [r3, #144]
 14816              		.loc 1 4695 28
 14817 0124 43F00202 		orr	r2, r3, #2
 14818 0128 7B68     		ldr	r3, [r7, #4]
 14819 012a C3F89020 		str	r2, [r3, #144]
 14820              	.L773:
4696:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4697:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4698:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Call UART Error Call back function if need be ----------------------------*/
4699:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 14821              		.loc 1 4699 18
 14822 012e 7B68     		ldr	r3, [r7, #4]
 14823 0130 D3F89030 		ldr	r3, [r3, #144]
 14824              		.loc 1 4699 12
 14825 0134 002B     		cmp	r3, #0
 14826 0136 06D0     		beq	.L770
4700:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4701:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Non Blocking error : transfer could go on.
4702:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           Error is notified to user through user error callback */
4703:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4704:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call registered error callback*/
4705:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCallback(huart);
4706:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4707:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call legacy weak error callback*/
4708:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 14827              		.loc 1 4708 11
 14828 0138 7868     		ldr	r0, [r7, #4]
 14829 013a FFF7FEFF 		bl	HAL_UART_ErrorCallback
4709:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4710:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_NONE;
 14830              		.loc 1 4710 28
 14831 013e 7B68     		ldr	r3, [r7, #4]
 14832 0140 0022     		movs	r2, #0
 14833 0142 C3F89020 		str	r2, [r3, #144]
ARM GAS  /tmp/ccMjAmt3.s 			page 357


 14834              	.L770:
4711:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4712:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4713:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4714:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 14835              		.loc 1 4714 16
 14836 0146 7B68     		ldr	r3, [r7, #4]
 14837 0148 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 14838 014c 9BB2     		uxth	r3, r3
 14839              		.loc 1 4714 10
 14840 014e 002B     		cmp	r3, #0
 14841 0150 40F0AA80 		bne	.L769
 14842              	.L776:
 14843              	.LBB981:
4715:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       {
4716:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4717:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 14844              		.loc 1 4717 9 discriminator 1
 14845 0154 7B68     		ldr	r3, [r7, #4]
 14846 0156 1B68     		ldr	r3, [r3]
 14847 0158 7B67     		str	r3, [r7, #116]
 14848              	.LBB982:
 14849              	.LBB983:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14850              		.loc 2 480 4
 14851 015a 7B6F     		ldr	r3, [r7, #116]
 14852              		.syntax unified
 14853              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14854 015c 53E8003F 		ldrex r3, [r3]
 14855              	@ 0 "" 2
 14856              		.thumb
 14857              		.syntax unified
 14858 0160 3B67     		str	r3, [r7, #112]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14859              		.loc 2 481 10
 14860 0162 3B6F     		ldr	r3, [r7, #112]
 14861              	.LBE983:
 14862              	.LBE982:
 14863              		.loc 1 4717 9 discriminator 1
 14864 0164 23F48073 		bic	r3, r3, #256
 14865 0168 C7F89C30 		str	r3, [r7, #156]
 14866 016c 7B68     		ldr	r3, [r7, #4]
 14867 016e 1B68     		ldr	r3, [r3]
 14868 0170 1A46     		mov	r2, r3
 14869 0172 D7F89C30 		ldr	r3, [r7, #156]
 14870 0176 C7F88030 		str	r3, [r7, #128]
 14871 017a FA67     		str	r2, [r7, #124]
 14872              	.LBB984:
 14873              	.LBB985:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14874              		.loc 2 531 4
 14875 017c F96F     		ldr	r1, [r7, #124]
 14876 017e D7F88020 		ldr	r2, [r7, #128]
 14877              		.syntax unified
 14878              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14879 0182 41E80023 		strex r3, r2, [r1]
 14880              	@ 0 "" 2
ARM GAS  /tmp/ccMjAmt3.s 			page 358


 14881              		.thumb
 14882              		.syntax unified
 14883 0186 BB67     		str	r3, [r7, #120]
 14884              		.loc 2 532 10
 14885 0188 BB6F     		ldr	r3, [r7, #120]
 14886              	.LBE985:
 14887              	.LBE984:
 14888              		.loc 1 4717 9 discriminator 1
 14889 018a 002B     		cmp	r3, #0
 14890 018c E2D1     		bne	.L776
 14891              	.L779:
 14892              	.LBE981:
 14893              	.LBB986:
4718:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4719:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4720:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4721:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 14894              		.loc 1 4721 9 discriminator 1
 14895 018e 7B68     		ldr	r3, [r7, #4]
 14896 0190 1B68     		ldr	r3, [r3]
 14897 0192 0833     		adds	r3, r3, #8
 14898 0194 3B66     		str	r3, [r7, #96]
 14899              	.LBB987:
 14900              	.LBB988:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14901              		.loc 2 480 4
 14902 0196 3B6E     		ldr	r3, [r7, #96]
 14903              		.syntax unified
 14904              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14905 0198 53E8003F 		ldrex r3, [r3]
 14906              	@ 0 "" 2
 14907              		.thumb
 14908              		.syntax unified
 14909 019c FB65     		str	r3, [r7, #92]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14910              		.loc 2 481 10
 14911 019e FB6D     		ldr	r3, [r7, #92]
 14912              	.LBE988:
 14913              	.LBE987:
 14914              		.loc 1 4721 9 discriminator 1
 14915 01a0 23F08053 		bic	r3, r3, #268435456
 14916 01a4 23F00103 		bic	r3, r3, #1
 14917 01a8 C7F89830 		str	r3, [r7, #152]
 14918 01ac 7B68     		ldr	r3, [r7, #4]
 14919 01ae 1B68     		ldr	r3, [r3]
 14920 01b0 0833     		adds	r3, r3, #8
 14921 01b2 D7F89820 		ldr	r2, [r7, #152]
 14922 01b6 FA66     		str	r2, [r7, #108]
 14923 01b8 BB66     		str	r3, [r7, #104]
 14924              	.LBB989:
 14925              	.LBB990:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14926              		.loc 2 531 4
 14927 01ba B96E     		ldr	r1, [r7, #104]
 14928 01bc FA6E     		ldr	r2, [r7, #108]
 14929              		.syntax unified
 14930              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccMjAmt3.s 			page 359


 14931 01be 41E80023 		strex r3, r2, [r1]
 14932              	@ 0 "" 2
 14933              		.thumb
 14934              		.syntax unified
 14935 01c2 7B66     		str	r3, [r7, #100]
 14936              		.loc 2 532 10
 14937 01c4 7B6E     		ldr	r3, [r7, #100]
 14938              	.LBE990:
 14939              	.LBE989:
 14940              		.loc 1 4721 9 discriminator 1
 14941 01c6 002B     		cmp	r3, #0
 14942 01c8 E1D1     		bne	.L779
 14943              	.LBE986:
4722:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4723:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4724:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 14944              		.loc 1 4724 24
 14945 01ca 7B68     		ldr	r3, [r7, #4]
 14946 01cc 2022     		movs	r2, #32
 14947 01ce C3F88C20 		str	r2, [r3, #140]
4725:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4726:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Clear RxISR function pointer */
4727:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxISR = NULL;
 14948              		.loc 1 4727 22
 14949 01d2 7B68     		ldr	r3, [r7, #4]
 14950 01d4 0022     		movs	r2, #0
 14951 01d6 5A67     		str	r2, [r3, #116]
4728:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4729:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Initialize type of RxEvent to Transfer Complete */
4730:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_TC;
 14952              		.loc 1 4730 28
 14953 01d8 7B68     		ldr	r3, [r7, #4]
 14954 01da 0022     		movs	r2, #0
 14955 01dc 1A67     		str	r2, [r3, #112]
4731:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4732:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (!(IS_LPUART_INSTANCE(huart->Instance)))
 14956              		.loc 1 4732 15
 14957 01de 7B68     		ldr	r3, [r7, #4]
 14958 01e0 1B68     		ldr	r3, [r3]
 14959              		.loc 1 4732 12
 14960 01e2 624A     		ldr	r2, .L800
 14961 01e4 9342     		cmp	r3, r2
 14962 01e6 26D0     		beq	.L780
 14963              		.loc 1 4732 15 discriminator 1
 14964 01e8 7B68     		ldr	r3, [r7, #4]
 14965 01ea 1B68     		ldr	r3, [r3]
 14966              		.loc 1 4732 13 discriminator 1
 14967 01ec 604A     		ldr	r2, .L800+4
 14968 01ee 9342     		cmp	r3, r2
 14969 01f0 21D0     		beq	.L780
4733:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4734:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Check that USART RTOEN bit is set */
4735:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 14970              		.loc 1 4735 15
 14971 01f2 7B68     		ldr	r3, [r7, #4]
 14972 01f4 1B68     		ldr	r3, [r3]
 14973 01f6 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccMjAmt3.s 			page 360


 14974 01f8 03F40003 		and	r3, r3, #8388608
 14975              		.loc 1 4735 14
 14976 01fc 002B     		cmp	r3, #0
 14977 01fe 1AD0     		beq	.L780
 14978              	.L783:
 14979              	.LBB991:
4736:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           {
4737:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /* Enable the UART Receiver Timeout Interrupt */
4738:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 14980              		.loc 1 4738 13 discriminator 1
 14981 0200 7B68     		ldr	r3, [r7, #4]
 14982 0202 1B68     		ldr	r3, [r3]
 14983 0204 FB64     		str	r3, [r7, #76]
 14984              	.LBB992:
 14985              	.LBB993:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14986              		.loc 2 480 4
 14987 0206 FB6C     		ldr	r3, [r7, #76]
 14988              		.syntax unified
 14989              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14990 0208 53E8003F 		ldrex r3, [r3]
 14991              	@ 0 "" 2
 14992              		.thumb
 14993              		.syntax unified
 14994 020c BB64     		str	r3, [r7, #72]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14995              		.loc 2 481 10
 14996 020e BB6C     		ldr	r3, [r7, #72]
 14997              	.LBE993:
 14998              	.LBE992:
 14999              		.loc 1 4738 13 discriminator 1
 15000 0210 23F08063 		bic	r3, r3, #67108864
 15001 0214 C7F89430 		str	r3, [r7, #148]
 15002 0218 7B68     		ldr	r3, [r7, #4]
 15003 021a 1B68     		ldr	r3, [r3]
 15004 021c 1A46     		mov	r2, r3
 15005 021e D7F89430 		ldr	r3, [r7, #148]
 15006 0222 BB65     		str	r3, [r7, #88]
 15007 0224 7A65     		str	r2, [r7, #84]
 15008              	.LBB994:
 15009              	.LBB995:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15010              		.loc 2 531 4
 15011 0226 796D     		ldr	r1, [r7, #84]
 15012 0228 BA6D     		ldr	r2, [r7, #88]
 15013              		.syntax unified
 15014              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15015 022a 41E80023 		strex r3, r2, [r1]
 15016              	@ 0 "" 2
 15017              		.thumb
 15018              		.syntax unified
 15019 022e 3B65     		str	r3, [r7, #80]
 15020              		.loc 2 532 10
 15021 0230 3B6D     		ldr	r3, [r7, #80]
 15022              	.LBE995:
 15023              	.LBE994:
 15024              		.loc 1 4738 13 discriminator 1
ARM GAS  /tmp/ccMjAmt3.s 			page 361


 15025 0232 002B     		cmp	r3, #0
 15026 0234 E4D1     		bne	.L783
 15027              	.L780:
 15028              	.LBE991:
4739:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           }
4740:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4741:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4742:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         /* Check current reception Mode :
4743:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****            If Reception till IDLE event has been selected : */
4744:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 15029              		.loc 1 4744 18
 15030 0236 7B68     		ldr	r3, [r7, #4]
 15031 0238 DB6E     		ldr	r3, [r3, #108]
 15032              		.loc 1 4744 12
 15033 023a 012B     		cmp	r3, #1
 15034 023c 30D1     		bne	.L784
4745:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4746:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Set reception type to Standard */
4747:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 15035              		.loc 1 4747 32
 15036 023e 7B68     		ldr	r3, [r7, #4]
 15037 0240 0022     		movs	r2, #0
 15038 0242 DA66     		str	r2, [r3, #108]
 15039              	.L787:
 15040              	.LBB996:
4748:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4749:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Disable IDLE interrupt */
4750:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 15041              		.loc 1 4750 11 discriminator 1
 15042 0244 7B68     		ldr	r3, [r7, #4]
 15043 0246 1B68     		ldr	r3, [r3]
 15044 0248 BB63     		str	r3, [r7, #56]
 15045              	.LBB997:
 15046              	.LBB998:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15047              		.loc 2 480 4
 15048 024a BB6B     		ldr	r3, [r7, #56]
 15049              		.syntax unified
 15050              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15051 024c 53E8003F 		ldrex r3, [r3]
 15052              	@ 0 "" 2
 15053              		.thumb
 15054              		.syntax unified
 15055 0250 7B63     		str	r3, [r7, #52]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 15056              		.loc 2 481 10
 15057 0252 7B6B     		ldr	r3, [r7, #52]
 15058              	.LBE998:
 15059              	.LBE997:
 15060              		.loc 1 4750 11 discriminator 1
 15061 0254 23F01003 		bic	r3, r3, #16
 15062 0258 C7F89030 		str	r3, [r7, #144]
 15063 025c 7B68     		ldr	r3, [r7, #4]
 15064 025e 1B68     		ldr	r3, [r3]
 15065 0260 1A46     		mov	r2, r3
 15066 0262 D7F89030 		ldr	r3, [r7, #144]
 15067 0266 7B64     		str	r3, [r7, #68]
ARM GAS  /tmp/ccMjAmt3.s 			page 362


 15068 0268 3A64     		str	r2, [r7, #64]
 15069              	.LBB999:
 15070              	.LBB1000:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15071              		.loc 2 531 4
 15072 026a 396C     		ldr	r1, [r7, #64]
 15073 026c 7A6C     		ldr	r2, [r7, #68]
 15074              		.syntax unified
 15075              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15076 026e 41E80023 		strex r3, r2, [r1]
 15077              	@ 0 "" 2
 15078              		.thumb
 15079              		.syntax unified
 15080 0272 FB63     		str	r3, [r7, #60]
 15081              		.loc 2 532 10
 15082 0274 FB6B     		ldr	r3, [r7, #60]
 15083              	.LBE1000:
 15084              	.LBE999:
 15085              		.loc 1 4750 11 discriminator 1
 15086 0276 002B     		cmp	r3, #0
 15087 0278 E4D1     		bne	.L787
 15088              	.LBE996:
4751:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4752:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 15089              		.loc 1 4752 15
 15090 027a 7B68     		ldr	r3, [r7, #4]
 15091 027c 1B68     		ldr	r3, [r3]
 15092 027e DB69     		ldr	r3, [r3, #28]
 15093 0280 03F01003 		and	r3, r3, #16
 15094              		.loc 1 4752 14
 15095 0284 102B     		cmp	r3, #16
 15096 0286 03D1     		bne	.L788
4753:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           {
4754:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             /* Clear IDLE Flag */
4755:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****             __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 15097              		.loc 1 4755 13
 15098 0288 7B68     		ldr	r3, [r7, #4]
 15099 028a 1B68     		ldr	r3, [r3]
 15100 028c 1022     		movs	r2, #16
 15101 028e 1A62     		str	r2, [r3, #32]
 15102              	.L788:
4756:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           }
4757:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4758:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4759:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call registered Rx Event callback*/
4760:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->RxEventCallback(huart, huart->RxXferSize);
4761:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4762:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call legacy weak Rx Event callback*/
4763:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 15103              		.loc 1 4763 11
 15104 0290 7B68     		ldr	r3, [r7, #4]
 15105 0292 B3F85C30 		ldrh	r3, [r3, #92]
 15106 0296 1946     		mov	r1, r3
 15107 0298 7868     		ldr	r0, [r7, #4]
 15108 029a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4764:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4765:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
ARM GAS  /tmp/ccMjAmt3.s 			page 363


4766:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         else
4767:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         {
4768:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /* Standard reception API called */
4769:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4770:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call registered Rx complete callback*/
4771:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           huart->RxCpltCallback(huart);
4772:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #else
4773:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           /*Call legacy weak Rx complete callback*/
4774:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****           HAL_UART_RxCpltCallback(huart);
4775:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4776:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         }
4777:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****         break;
 15109              		.loc 1 4777 9
 15110 029e 0EE0     		b	.L790
 15111              	.L784:
4774:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 15112              		.loc 1 4774 11
 15113 02a0 7868     		ldr	r0, [r7, #4]
 15114 02a2 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 15115              		.loc 1 4777 9
 15116 02a6 0AE0     		b	.L790
 15117              	.L769:
4662:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 15118              		.loc 1 4662 30
 15119 02a8 B7F8A630 		ldrh	r3, [r7, #166]
 15120 02ac 002B     		cmp	r3, #0
 15121 02ae 06D0     		beq	.L790
4662:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 15122              		.loc 1 4662 44 discriminator 1
 15123 02b0 D7F8B430 		ldr	r3, [r7, #180]
 15124 02b4 03F02003 		and	r3, r3, #32
4662:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
 15125              		.loc 1 4662 30 discriminator 1
 15126 02b8 002B     		cmp	r3, #0
 15127 02ba 7FF4C5AE 		bne	.L791
 15128              	.L790:
4778:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       }
4779:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4780:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4781:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4782:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4783:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4784:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     */
4785:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 15129              		.loc 1 4785 17
 15130 02be 7B68     		ldr	r3, [r7, #4]
 15131 02c0 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 15132 02c4 A7F88E30 		strh	r3, [r7, #142]	@ movhi
4786:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 15133              		.loc 1 4786 8
 15134 02c8 B7F88E30 		ldrh	r3, [r7, #142]
 15135 02cc 002B     		cmp	r3, #0
 15136 02ce 49D0     		beq	.L799
 15137              		.loc 1 4786 52 discriminator 1
 15138 02d0 7B68     		ldr	r3, [r7, #4]
 15139 02d2 B3F86830 		ldrh	r3, [r3, #104]
 15140              		.loc 1 4786 29 discriminator 1
ARM GAS  /tmp/ccMjAmt3.s 			page 364


 15141 02d6 B7F88E20 		ldrh	r2, [r7, #142]
 15142 02da 9A42     		cmp	r2, r3
 15143 02dc 42D2     		bcs	.L799
 15144              	.L795:
 15145              	.LBB1001:
4787:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     {
4788:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4789:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 15146              		.loc 1 4789 7 discriminator 1
 15147 02de 7B68     		ldr	r3, [r7, #4]
 15148 02e0 1B68     		ldr	r3, [r3]
 15149 02e2 0833     		adds	r3, r3, #8
 15150 02e4 7B62     		str	r3, [r7, #36]
 15151              	.LBB1002:
 15152              	.LBB1003:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15153              		.loc 2 480 4
 15154 02e6 7B6A     		ldr	r3, [r7, #36]
 15155              		.syntax unified
 15156              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15157 02e8 53E8003F 		ldrex r3, [r3]
 15158              	@ 0 "" 2
 15159              		.thumb
 15160              		.syntax unified
 15161 02ec 3B62     		str	r3, [r7, #32]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 15162              		.loc 2 481 10
 15163 02ee 3B6A     		ldr	r3, [r7, #32]
 15164              	.LBE1003:
 15165              	.LBE1002:
 15166              		.loc 1 4789 7 discriminator 1
 15167 02f0 23F08053 		bic	r3, r3, #268435456
 15168 02f4 C7F88830 		str	r3, [r7, #136]
 15169 02f8 7B68     		ldr	r3, [r7, #4]
 15170 02fa 1B68     		ldr	r3, [r3]
 15171 02fc 0833     		adds	r3, r3, #8
 15172 02fe D7F88820 		ldr	r2, [r7, #136]
 15173 0302 3A63     		str	r2, [r7, #48]
 15174 0304 FB62     		str	r3, [r7, #44]
 15175              	.LBB1004:
 15176              	.LBB1005:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15177              		.loc 2 531 4
 15178 0306 F96A     		ldr	r1, [r7, #44]
 15179 0308 3A6B     		ldr	r2, [r7, #48]
 15180              		.syntax unified
 15181              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15182 030a 41E80023 		strex r3, r2, [r1]
 15183              	@ 0 "" 2
 15184              		.thumb
 15185              		.syntax unified
 15186 030e BB62     		str	r3, [r7, #40]
 15187              		.loc 2 532 10
 15188 0310 BB6A     		ldr	r3, [r7, #40]
 15189              	.LBE1005:
 15190              	.LBE1004:
 15191              		.loc 1 4789 7 discriminator 1
ARM GAS  /tmp/ccMjAmt3.s 			page 365


 15192 0312 002B     		cmp	r3, #0
 15193 0314 E3D1     		bne	.L795
 15194              	.LBE1001:
4790:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4791:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Update the RxISR function pointer */
4792:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 15195              		.loc 1 4792 20
 15196 0316 7B68     		ldr	r3, [r7, #4]
 15197 0318 164A     		ldr	r2, .L800+8
 15198 031a 5A67     		str	r2, [r3, #116]
 15199              	.L798:
 15200              	.LBB1006:
4793:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** 
4794:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4795:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 15201              		.loc 1 4795 7 discriminator 1
 15202 031c 7B68     		ldr	r3, [r7, #4]
 15203 031e 1B68     		ldr	r3, [r3]
 15204 0320 3B61     		str	r3, [r7, #16]
 15205              	.LBB1007:
 15206              	.LBB1008:
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15207              		.loc 2 480 4
 15208 0322 3B69     		ldr	r3, [r7, #16]
 15209              		.syntax unified
 15210              	@ 480 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15211 0324 53E8003F 		ldrex r3, [r3]
 15212              	@ 0 "" 2
 15213              		.thumb
 15214              		.syntax unified
 15215 0328 FB60     		str	r3, [r7, #12]
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 15216              		.loc 2 481 10
 15217 032a FB68     		ldr	r3, [r7, #12]
 15218              	.LBE1008:
 15219              	.LBE1007:
 15220              		.loc 1 4795 7 discriminator 1
 15221 032c 43F02003 		orr	r3, r3, #32
 15222 0330 C7F88430 		str	r3, [r7, #132]
 15223 0334 7B68     		ldr	r3, [r7, #4]
 15224 0336 1B68     		ldr	r3, [r3]
 15225 0338 1A46     		mov	r2, r3
 15226 033a D7F88430 		ldr	r3, [r7, #132]
 15227 033e FB61     		str	r3, [r7, #28]
 15228 0340 BA61     		str	r2, [r7, #24]
 15229              	.LBB1009:
 15230              	.LBB1010:
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15231              		.loc 2 531 4
 15232 0342 B969     		ldr	r1, [r7, #24]
 15233 0344 FA69     		ldr	r2, [r7, #28]
 15234              		.syntax unified
 15235              	@ 531 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15236 0346 41E80023 		strex r3, r2, [r1]
 15237              	@ 0 "" 2
 15238              		.thumb
 15239              		.syntax unified
ARM GAS  /tmp/ccMjAmt3.s 			page 366


 15240 034a 7B61     		str	r3, [r7, #20]
 15241              		.loc 2 532 10
 15242 034c 7B69     		ldr	r3, [r7, #20]
 15243              	.LBE1010:
 15244              	.LBE1009:
 15245              		.loc 1 4795 7 discriminator 1
 15246 034e 002B     		cmp	r3, #0
 15247 0350 E4D1     		bne	.L798
 15248              	.LBE1006:
4796:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     }
4797:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4798:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   else
4799:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   {
4800:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4801:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4802:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
4803:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c **** }
 15249              		.loc 1 4803 1
 15250 0352 07E0     		b	.L799
 15251              	.L768:
4801:STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Src/stm32n6xx_hal_uart.c ****   }
 15252              		.loc 1 4801 5
 15253 0354 7B68     		ldr	r3, [r7, #4]
 15254 0356 1B68     		ldr	r3, [r3]
 15255 0358 9A69     		ldr	r2, [r3, #24]
 15256 035a 7B68     		ldr	r3, [r7, #4]
 15257 035c 1B68     		ldr	r3, [r3]
 15258 035e 42F00802 		orr	r2, r2, #8
 15259 0362 9A61     		str	r2, [r3, #24]
 15260              	.L799:
 15261              		.loc 1 4803 1
 15262 0364 00BF     		nop
 15263 0366 B837     		adds	r7, r7, #184
 15264              		.cfi_def_cfa_offset 8
 15265 0368 BD46     		mov	sp, r7
 15266              		.cfi_def_cfa_register 13
 15267              		@ sp needed
 15268 036a 80BD     		pop	{r7, pc}
 15269              	.L801:
 15270              		.align	2
 15271              	.L800:
 15272 036c 000C0056 		.word	1442843648
 15273 0370 000C0046 		.word	1174408192
 15274 0374 00000000 		.word	UART_RxISR_16BIT
 15275              		.cfi_endproc
 15276              	.LFE904:
 15278              		.text
 15279              	.Letext0:
 15280              		.file 3 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 15281              		.file 4 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 15282              		.file 5 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n657xx.h"
 15283              		.file 6 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n6xx.h"
 15284              		.file 7 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_def.h"
 15285              		.file 8 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_dma.h"
 15286              		.file 9 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_dma_ex.h"
 15287              		.file 10 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_uart.h"
 15288              		.file 11 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_uart_ex.h"
ARM GAS  /tmp/ccMjAmt3.s 			page 367


 15289              		.file 12 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_rcc_ex.h"
 15290              		.file 13 "Inc/stm32n6xx_hal_conf.h"
 15291              		.file 14 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal.h"
ARM GAS  /tmp/ccMjAmt3.s 			page 368


DEFINED SYMBOLS
                            *ABS*:00000000 stm32n6xx_hal_uart.c
     /tmp/ccMjAmt3.s:30     .rodata.UARTPrescTable:00000000 UARTPrescTable
     /tmp/ccMjAmt3.s:27     .rodata.UARTPrescTable:00000000 $d
     /tmp/ccMjAmt3.s:44     .rodata:00000000 $d
     /tmp/ccMjAmt3.s:49     .text.HAL_UART_Init:00000000 $t
     /tmp/ccMjAmt3.s:55     .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/ccMjAmt3.s:1503   .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccMjAmt3.s:9175   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
     /tmp/ccMjAmt3.s:8375   .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/ccMjAmt3.s:406    .text.HAL_UART_Init:00000260 $d
     /tmp/ccMjAmt3.s:430    .text.HAL_UART_Init:000002b8 $t
     /tmp/ccMjAmt3.s:9685   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
     /tmp/ccMjAmt3.s:470    .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/ccMjAmt3.s:476    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/ccMjAmt3.s:730    .text.HAL_HalfDuplex_Init:00000198 $d
     /tmp/ccMjAmt3.s:756    .text.HAL_LIN_Init:00000000 $t
     /tmp/ccMjAmt3.s:762    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
     /tmp/ccMjAmt3.s:1048   .text.HAL_LIN_Init:000001c8 $d
     /tmp/ccMjAmt3.s:1072   .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/ccMjAmt3.s:1078   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/ccMjAmt3.s:1230   .text.HAL_MultiProcessor_Init:000000f0 $d
     /tmp/ccMjAmt3.s:1235   .text.HAL_UART_DeInit:00000000 $t
     /tmp/ccMjAmt3.s:1241   .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/ccMjAmt3.s:1539   .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccMjAmt3.s:1471   .text.HAL_UART_DeInit:00000164 $d
     /tmp/ccMjAmt3.s:1497   .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccMjAmt3.s:1533   .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccMjAmt3.s:1569   .text.HAL_UART_Transmit:00000000 $t
     /tmp/ccMjAmt3.s:1575   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/ccMjAmt3.s:9967   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccMjAmt3.s:1777   .text.HAL_UART_Receive:00000000 $t
     /tmp/ccMjAmt3.s:1783   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/ccMjAmt3.s:2053   .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/ccMjAmt3.s:2059   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/ccMjAmt3.s:2296   .text.HAL_UART_Transmit_IT:00000118 $d
     /tmp/ccMjAmt3.s:12963  .text.UART_TxISR_16BIT_FIFOEN:00000000 UART_TxISR_16BIT_FIFOEN
     /tmp/ccMjAmt3.s:12757  .text.UART_TxISR_8BIT_FIFOEN:00000000 UART_TxISR_8BIT_FIFOEN
     /tmp/ccMjAmt3.s:12573  .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
     /tmp/ccMjAmt3.s:12395  .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
     /tmp/ccMjAmt3.s:2304   .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/ccMjAmt3.s:2310   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/ccMjAmt3.s:10123  .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
     /tmp/ccMjAmt3.s:2447   .text.HAL_UART_Receive_IT:0000009c $d
     /tmp/ccMjAmt3.s:2453   .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/ccMjAmt3.s:2459   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/ccMjAmt3.s:2755   .text.HAL_UART_Transmit_DMA:00000184 $d
     /tmp/ccMjAmt3.s:11323  .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/ccMjAmt3.s:11477  .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/ccMjAmt3.s:11923  .text.UART_DMAError:00000000 UART_DMAError
     /tmp/ccMjAmt3.s:2762   .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/ccMjAmt3.s:2768   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
     /tmp/ccMjAmt3.s:10594  .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
     /tmp/ccMjAmt3.s:2905   .text.HAL_UART_Receive_DMA:0000009c $d
     /tmp/ccMjAmt3.s:2911   .text.HAL_UART_DMAPause:00000000 $t
     /tmp/ccMjAmt3.s:2917   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/ccMjAmt3.s:3158   .text.HAL_UART_DMAResume:00000000 $t
ARM GAS  /tmp/ccMjAmt3.s 			page 369


     /tmp/ccMjAmt3.s:3164   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/ccMjAmt3.s:3364   .text.HAL_UART_DMAStop:00000000 $t
     /tmp/ccMjAmt3.s:3370   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/ccMjAmt3.s:10977  .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/ccMjAmt3.s:11117  .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/ccMjAmt3.s:3608   .text.HAL_UART_Abort:00000000 $t
     /tmp/ccMjAmt3.s:3614   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
     /tmp/ccMjAmt3.s:4051   .text.HAL_UART_AbortTransmit:00000000 $t
     /tmp/ccMjAmt3.s:4057   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
     /tmp/ccMjAmt3.s:4309   .text.HAL_UART_AbortReceive:00000000 $t
     /tmp/ccMjAmt3.s:4315   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
     /tmp/ccMjAmt3.s:4627   .text.HAL_UART_Abort_IT:00000000 $t
     /tmp/ccMjAmt3.s:4633   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
     /tmp/ccMjAmt3.s:7044   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
     /tmp/ccMjAmt3.s:5124   .text.HAL_UART_Abort_IT:00000270 $d
     /tmp/ccMjAmt3.s:12060  .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
     /tmp/ccMjAmt3.s:12168  .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
     /tmp/ccMjAmt3.s:5130   .text.HAL_UART_AbortTransmit_IT:00000000 $t
     /tmp/ccMjAmt3.s:5136   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
     /tmp/ccMjAmt3.s:7080   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccMjAmt3.s:5407   .text.HAL_UART_AbortTransmit_IT:00000140 $d
     /tmp/ccMjAmt3.s:12269  .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
     /tmp/ccMjAmt3.s:5412   .text.HAL_UART_AbortReceive_IT:00000000 $t
     /tmp/ccMjAmt3.s:5418   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
     /tmp/ccMjAmt3.s:7116   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccMjAmt3.s:5758   .text.HAL_UART_AbortReceive_IT:00000198 $d
     /tmp/ccMjAmt3.s:12331  .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
     /tmp/ccMjAmt3.s:5763   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/ccMjAmt3.s:5769   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/ccMjAmt3.s:7008   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/ccMjAmt3.s:6183   .text.HAL_UART_IRQHandler:000002b8 $d
     /tmp/ccMjAmt3.s:12017  .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/ccMjAmt3.s:6188   .text.HAL_UART_IRQHandler:000002c4 $t
     /tmp/ccMjAmt3.s:7152   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
     /tmp/ccMjAmt3.s:13175  .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/ccMjAmt3.s:6858   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/ccMjAmt3.s:6864   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/ccMjAmt3.s:6894   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/ccMjAmt3.s:6900   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccMjAmt3.s:6930   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/ccMjAmt3.s:6936   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/ccMjAmt3.s:6966   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/ccMjAmt3.s:6972   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccMjAmt3.s:7002   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/ccMjAmt3.s:7038   .text.HAL_UART_AbortCpltCallback:00000000 $t
     /tmp/ccMjAmt3.s:7074   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
     /tmp/ccMjAmt3.s:7110   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
     /tmp/ccMjAmt3.s:7146   .text.HAL_UARTEx_RxEventCallback:00000000 $t
     /tmp/ccMjAmt3.s:7184   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
     /tmp/ccMjAmt3.s:7190   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
     /tmp/ccMjAmt3.s:7251   .text.HAL_UART_ReceiverTimeout_Config:0000004c $d
     /tmp/ccMjAmt3.s:7258   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
     /tmp/ccMjAmt3.s:7264   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
     /tmp/ccMjAmt3.s:7358   .text.HAL_UART_EnableReceiverTimeout:0000007c $d
     /tmp/ccMjAmt3.s:7364   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
     /tmp/ccMjAmt3.s:7370   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
     /tmp/ccMjAmt3.s:7464   .text.HAL_UART_DisableReceiverTimeout:0000007c $d
ARM GAS  /tmp/ccMjAmt3.s 			page 370


     /tmp/ccMjAmt3.s:7470   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
     /tmp/ccMjAmt3.s:7476   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccMjAmt3.s:7580   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
     /tmp/ccMjAmt3.s:7586   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccMjAmt3.s:7690   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/ccMjAmt3.s:7696   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccMjAmt3.s:7734   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/ccMjAmt3.s:7740   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccMjAmt3.s:7899   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
     /tmp/ccMjAmt3.s:7905   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccMjAmt3.s:8064   .text.HAL_LIN_SendBreak:00000000 $t
     /tmp/ccMjAmt3.s:8070   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
     /tmp/ccMjAmt3.s:8257   .text.HAL_LIN_SendBreak:00000124 $d
     /tmp/ccMjAmt3.s:8281   .text.HAL_UART_GetState:00000000 $t
     /tmp/ccMjAmt3.s:8287   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/ccMjAmt3.s:8329   .text.HAL_UART_GetError:00000000 $t
     /tmp/ccMjAmt3.s:8335   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
     /tmp/ccMjAmt3.s:8369   .text.UART_SetConfig:00000000 $t
     /tmp/ccMjAmt3.s:8463   .text.UART_SetConfig:0000007c $d
     /tmp/ccMjAmt3.s:8469   .text.UART_SetConfig:0000008c $t
     /tmp/ccMjAmt3.s:8824   .text.UART_SetConfig:00000310 $d
     /tmp/ccMjAmt3.s:8836   .text.UART_SetConfig:00000338 $t
     /tmp/ccMjAmt3.s:9159   .text.UART_SetConfig:00000580 $d
     /tmp/ccMjAmt3.s:9169   .text.UART_AdvFeatureConfig:00000000 $t
     /tmp/ccMjAmt3.s:9522   .text.UART_AdvFeatureConfig:00000258 $d
     /tmp/ccMjAmt3.s:9542   .text.UART_AdvFeatureConfig:000002a0 $t
     /tmp/ccMjAmt3.s:9672   .text.UART_AdvFeatureConfig:00000388 $d
     /tmp/ccMjAmt3.s:9679   .text.UART_CheckIdleState:00000000 $t
     /tmp/ccMjAmt3.s:9961   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/ccMjAmt3.s:10117  .text.UART_Start_Receive_IT:00000000 $t
     /tmp/ccMjAmt3.s:10580  .text.UART_Start_Receive_IT:00000234 $d
     /tmp/ccMjAmt3.s:14650  .text.UART_RxISR_16BIT_FIFOEN:00000000 UART_RxISR_16BIT_FIFOEN
     /tmp/ccMjAmt3.s:14014  .text.UART_RxISR_8BIT_FIFOEN:00000000 UART_RxISR_8BIT_FIFOEN
     /tmp/ccMjAmt3.s:13642  .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
     /tmp/ccMjAmt3.s:13268  .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
     /tmp/ccMjAmt3.s:10588  .text.UART_Start_Receive_DMA:00000000 $t
     /tmp/ccMjAmt3.s:10965  .text.UART_Start_Receive_DMA:000001e4 $d
     /tmp/ccMjAmt3.s:11516  .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/ccMjAmt3.s:11829  .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/ccMjAmt3.s:10972  .text.UART_EndTxTransfer:00000000 $t
     /tmp/ccMjAmt3.s:11112  .text.UART_EndRxTransfer:00000000 $t
     /tmp/ccMjAmt3.s:11318  .text.UART_DMATransmitCplt:00000000 $t
     /tmp/ccMjAmt3.s:11472  .text.UART_DMATxHalfCplt:00000000 $t
     /tmp/ccMjAmt3.s:11511  .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/ccMjAmt3.s:11824  .text.UART_DMARxHalfCplt:00000000 $t
     /tmp/ccMjAmt3.s:11918  .text.UART_DMAError:00000000 $t
     /tmp/ccMjAmt3.s:12012  .text.UART_DMAAbortOnError:00000000 $t
     /tmp/ccMjAmt3.s:12055  .text.UART_DMATxAbortCallback:00000000 $t
     /tmp/ccMjAmt3.s:12163  .text.UART_DMARxAbortCallback:00000000 $t
     /tmp/ccMjAmt3.s:12264  .text.UART_DMATxOnlyAbortCallback:00000000 $t
     /tmp/ccMjAmt3.s:12326  .text.UART_DMARxOnlyAbortCallback:00000000 $t
     /tmp/ccMjAmt3.s:12390  .text.UART_TxISR_8BIT:00000000 $t
     /tmp/ccMjAmt3.s:12568  .text.UART_TxISR_16BIT:00000000 $t
     /tmp/ccMjAmt3.s:12752  .text.UART_TxISR_8BIT_FIFOEN:00000000 $t
     /tmp/ccMjAmt3.s:12958  .text.UART_TxISR_16BIT_FIFOEN:00000000 $t
     /tmp/ccMjAmt3.s:13170  .text.UART_EndTransmit_IT:00000000 $t
     /tmp/ccMjAmt3.s:13263  .text.UART_RxISR_8BIT:00000000 $t
ARM GAS  /tmp/ccMjAmt3.s 			page 371


     /tmp/ccMjAmt3.s:13631  .text.UART_RxISR_8BIT:000001bc $d
     /tmp/ccMjAmt3.s:13637  .text.UART_RxISR_16BIT:00000000 $t
     /tmp/ccMjAmt3.s:14003  .text.UART_RxISR_16BIT:000001bc $d
     /tmp/ccMjAmt3.s:14009  .text.UART_RxISR_8BIT_FIFOEN:00000000 $t
     /tmp/ccMjAmt3.s:14638  .text.UART_RxISR_8BIT_FIFOEN:00000364 $d
     /tmp/ccMjAmt3.s:14645  .text.UART_RxISR_16BIT_FIFOEN:00000000 $t
     /tmp/ccMjAmt3.s:15272  .text.UART_RxISR_16BIT_FIFOEN:0000036c $d
                           .group:00000000 wm4.0.2a10773746a5c5ebb5552f50e466f80b
                           .group:00000000 wm4.stm32n6xx_hal_conf.h.21.004a06df6e15ac197e03f723792da58a
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.arm_cmse.h.103.a0d15a79c4c9a67da8d5831704d7248e
                           .group:00000000 wm4.stm32n6xx.h.34.80585dd08aa426c932f6311fdb7386da
                           .group:00000000 wm4.stm32n657xx.h.26.acd272cb67318cc1a4791ce2f0720ca6
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.e0c9f337c65cb9f22ed5f23d082bc78b
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm55.h.68.832d5cf835639cc0d28219c3d2867330
                           .group:00000000 wm4.cmsis_gcc.h.26.7a5fd1a99dbedde687044a4433ab3e15
                           .group:00000000 wm4.core_cm55.h.196.52e437a270752da561676e507b35baeb
                           .group:00000000 wm4.mpu_armv8.h.32.9d72426c8e2b47753456dcb84802c5b3
                           .group:00000000 wm4.pmu_armv8.h.32.eaa95f88a71b29390b135fd81c071b6b
                           .group:00000000 wm4.core_cm55.h.4411.860dad8650880893dd57b815844f7186
                           .group:00000000 wm4.cachel1_armv7.h.32.abd77761a989e008b0c60891114a33c7
                           .group:00000000 wm4.stm32n657xx.h.575.1c2a5e6bedffc6f9083dcc857bc6d09d
                           .group:00000000 wm4.stm32n6xx.h.114.5cf793d8af485e14f110e3e24bde1aa5
                           .group:00000000 wm4.stm32_hal_legacy.h.22.87fb12bf5a1a1e00fc134f22bc9aa8c4
                           .group:00000000 wm4.newlib.h.7.591ac1bd65c1f5b34864757667a05252
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.math.h.13.47cfc34cae8a1153323939c4d32cf7c2
                           .group:00000000 wm4.stm32n6xx_hal_def.h.63.3a8f01490e8852464e9fcb69092e9c75
                           .group:00000000 wm4.stm32n6xx_ll_bus.h.38.2366a295ee4cdb04833997d3787fcd2d
                           .group:00000000 wm4.stm32n6xx_ll_rcc.h.21.002e22a16fd7f67dde6dce41e8ba9620
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.194.1cb1283e40f9bebcd3fba2a9a961838e
                           .group:00000000 wm4.stm32n6xx_hal_rcc_ex.h.21.79aa32178dfef625fbd20d362449acfa
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.4359.3f0b7ad33826d95438602c9aebc08af9
                           .group:00000000 wm4.stm32n6xx_hal_gpio.h.21.89d54af663b98eb8fc098192053f7eeb
                           .group:00000000 wm4.stm32n6xx_hal_gpio_ex.h.22.4acb2e3511a98bb48b81cfc8e09fd59e
                           .group:00000000 wm4.stm32n6xx_hal_rif.h.21.424d0bafb874a777dee3742a22e13037
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.21.61e48c5c2e8d25d22177834b232fe45c
                           .group:00000000 wm4.stm32n6xx_hal_dma_ex.h.21.66e597beb090a165329d6ccf665e41bc
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.1020.87e2180c009560b617c1f8208140c950
                           .group:00000000 wm4.stm32n6xx_hal_cortex.h.21.f493623cc58f9454ab4eae41e395c5cc
                           .group:00000000 wm4.stm32n6xx_hal_bsec.h.21.61b309e67dd810e28897a01b1b21a97f
                           .group:00000000 wm4.stm32n6xx_hal_dcmipp.h.21.f538bfd785c6469670251ac9bc7af55d
ARM GAS  /tmp/ccMjAmt3.s 			page 372


                           .group:00000000 wm4.stm32n6xx_hal_dma2d.h.21.75c8d46cdbb72970123b3f34ae2043d7
                           .group:00000000 wm4.stm32n6xx_hal_exti.h.21.fda87e715ea6b98239ec30171d1df594
                           .group:00000000 wm4.stm32n6xx_hal_gfxmmu.h.21.9784a9103143d48bd3c37389d0e0b8e6
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.21.3f483626ff64c5bf027265bb2e1d1331
                           .group:00000000 wm4.stm32n6xx_hal_i2c_ex.h.21.79e9196c22282cdaf6b4047893638c45
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.741.1084702632703acc669e4282b3043372
                           .group:00000000 wm4.stm32n6xx_hal_icache.h.21.194b4ec6e76f32b14f65c85616854850
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.21.ae1eb09930e7e550e48e418ac5849e4d
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.1002.b13ede7fc94ed5ad1c6768a157d2149a
                           .group:00000000 wm4.stm32n6xx_ll_usb.h.21.d518a5d97876c2ff49040c20a2c4a120
                           .group:00000000 wm4.stm32n6xx_hal_pcd.h.155.27040aac6844effe2af8c180caf1dd2e
                           .group:00000000 wm4.stm32n6xx_hal_pwr.h.21.cdb73e4869c3fed3fc84f901ec0e5f0a
                           .group:00000000 wm4.stm32n6xx_hal_pwr_ex.h.21.1a673224a58b0c1e5fad8eeda6514208
                           .group:00000000 wm4.stm32n6xx_hal_ramcfg.h.21.a62dfbb4d2c14e9a8c634a215e37bd3d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.21.9f810303326e2d91749800e9911f8e4d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.906.93ec0695066db4253cdbcb7d84358a0b
                           .group:00000000 wm4.stm32n6xx_hal_tim.h.21.839dd2b2a70382fb2c44f8f293a84d5f
                           .group:00000000 wm4.stm32n6xx_hal_tim_ex.h.21.e372d5ac63c13441211ea4ecbd353150
                           .group:00000000 wm4.stm32n6xx_hal_uart.h.21.230f549bfa0d5ebfd77bfb311b2aca15
                           .group:00000000 wm4.stm32n6xx_hal_uart_ex.h.21.a0d5511e1d0703b7b5278c8f5472b96d
                           .group:00000000 wm4.stm32n6xx_hal_xspi.h.21.e17898be2073b6b6b19faf30b4e304e9
                           .group:00000000 wm4.stm32n6xx_hal_cacheaxi.h.21.7c3375b7903ec42376e4883320997f74
                           .group:00000000 wm4.stm32n6xx_hal_gpu2d.h.21.48d0249122abad294a630c39cc4ebaed
                           .group:00000000 wm4.stm32n6xx_hal.h.81.5e59143eba07faca3e9aeaa5470826c8

UNDEFINED SYMBOLS
assert_failed
HAL_GetTick
HAL_DMAEx_List_Start_IT
HAL_DMA_Start_IT
HAL_DMAEx_Suspend
HAL_DMA_GetError
HAL_DMAEx_Resume
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_TxFifoEmptyCallback
HAL_UARTEx_RxFifoFullCallback
__aeabi_uldivmod
HAL_RCCEx_GetPeriphCLKFreq
