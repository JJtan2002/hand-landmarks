ARM GAS  /tmp/ccReAcTZ.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 4
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"app.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "Src/app.c"
  25              		.section	.text.clamp_point,"ax",%progbits
  26              		.align	1
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	clamp_point:
  32              	.LVL0:
  33              	.LFB7380:
   1:Src/app.c     **** /**
   2:Src/app.c     ****   ******************************************************************************
   3:Src/app.c     ****   * @file    app.c
   4:Src/app.c     ****   * @author  MDG Application Team
   5:Src/app.c     ****   ******************************************************************************
   6:Src/app.c     ****   * @attention
   7:Src/app.c     ****   *
   8:Src/app.c     ****   * Copyright (c) 2024 STMicroelectronics.
   9:Src/app.c     ****   * All rights reserved.
  10:Src/app.c     ****   *
  11:Src/app.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  12:Src/app.c     ****   * in the root directory of this software component.
  13:Src/app.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  14:Src/app.c     ****   *
  15:Src/app.c     ****   ******************************************************************************
  16:Src/app.c     ****   */
  17:Src/app.c     **** 
  18:Src/app.c     **** #include "app.h"
  19:Src/app.c     **** 
  20:Src/app.c     **** #include <stdint.h>
  21:Src/app.c     **** #include <stdio.h>
  22:Src/app.c     **** 
  23:Src/app.c     **** #include "app_cam.h"
  24:Src/app.c     **** #include "app_config.h"
  25:Src/app.c     **** #include "IPL_resize.h"
ARM GAS  /tmp/ccReAcTZ.s 			page 2


  26:Src/app.c     **** #include "app_postprocess.h"
  27:Src/app.c     **** #include "isp_api.h"
  28:Src/app.c     **** #include "ld.h"
  29:Src/app.c     **** #include "ll_aton_runtime.h"
  30:Src/app.c     **** #include "cmw_camera.h"
  31:Src/app.c     **** #include "scrl.h"
  32:Src/app.c     **** #ifdef STM32N6570_DK_REV
  33:Src/app.c     **** #include "stm32n6570_discovery.h"
  34:Src/app.c     **** #else
  35:Src/app.c     **** #include "stm32n6xx_nucleo.h"
  36:Src/app.c     **** #endif
  37:Src/app.c     **** #include "stm32_lcd.h"
  38:Src/app.c     **** #include "stm32_lcd_ex.h"
  39:Src/app.c     **** #include "stm32n6xx_hal.h"
  40:Src/app.c     **** #include "FreeRTOS.h"
  41:Src/app.c     **** #include "task.h"
  42:Src/app.c     **** #include "semphr.h"
  43:Src/app.c     **** #include "utils.h"
  44:Src/app.c     **** 
  45:Src/app.c     **** #define FREERTOS_PRIORITY(p) ((UBaseType_t)((int)tskIDLE_PRIORITY + configMAX_PRIORITIES / 2 + (p))
  46:Src/app.c     **** 
  47:Src/app.c     **** #ifndef M_PI
  48:Src/app.c     **** #define M_PI 3.14159265358979323846
  49:Src/app.c     **** #endif
  50:Src/app.c     **** 
  51:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  52:Src/app.c     **** #include "nema_core.h"
  53:Src/app.c     **** #include "nema_error.h"
  54:Src/app.c     **** void nema_enable_tiling(int);
  55:Src/app.c     **** #endif
  56:Src/app.c     **** 
  57:Src/app.c     **** #define LCD_FG_WIDTH LCD_BG_WIDTH
  58:Src/app.c     **** #define LCD_FG_HEIGHT LCD_BG_HEIGHT
  59:Src/app.c     **** 
  60:Src/app.c     **** #define CACHE_OP(__op__) do { \
  61:Src/app.c     ****   if (is_cache_enable()) { \
  62:Src/app.c     ****     __op__; \
  63:Src/app.c     ****   } \
  64:Src/app.c     **** } while (0)
  65:Src/app.c     **** 
  66:Src/app.c     **** #define DBG_INFO 0
  67:Src/app.c     **** #define USE_FILTERED_TS 1
  68:Src/app.c     **** 
  69:Src/app.c     **** #define BQUEUE_MAX_BUFFERS 2
  70:Src/app.c     **** #define CPU_LOAD_HISTORY_DEPTH 8
  71:Src/app.c     **** 
  72:Src/app.c     **** #define DISPLAY_BUFFER_NB (DISPLAY_DELAY + 2)
  73:Src/app.c     **** 
  74:Src/app.c     **** /* palm detector */
  75:Src/app.c     **** #define PD_MAX_HAND_NB 1
  76:Src/app.c     **** 
  77:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  78:Src/app.c     **** typedef float app_v3_t[3];
  79:Src/app.c     **** #endif
  80:Src/app.c     **** 
  81:Src/app.c     **** typedef struct {
  82:Src/app.c     ****   float cx;
ARM GAS  /tmp/ccReAcTZ.s 			page 3


  83:Src/app.c     ****   float cy;
  84:Src/app.c     ****   float w;
  85:Src/app.c     ****   float h;
  86:Src/app.c     ****   float rotation;
  87:Src/app.c     **** } roi_t;
  88:Src/app.c     **** 
  89:Src/app.c     **** #define UTIL_LCD_COLOR_TRANSPARENT 0
  90:Src/app.c     **** 
  91:Src/app.c     **** #ifdef STM32N6570_DK_REV
  92:Src/app.c     **** #define LCD_FONT Font20
  93:Src/app.c     **** #define DISK_RADIUS 2
  94:Src/app.c     **** #else
  95:Src/app.c     **** #define LCD_FONT Font12
  96:Src/app.c     **** #define DISK_RADIUS 1
  97:Src/app.c     **** #endif
  98:Src/app.c     **** 
  99:Src/app.c     **** typedef struct
 100:Src/app.c     **** {
 101:Src/app.c     ****   uint32_t X0;
 102:Src/app.c     ****   uint32_t Y0;
 103:Src/app.c     ****   uint32_t XSize;
 104:Src/app.c     ****   uint32_t YSize;
 105:Src/app.c     **** } Rectangle_TypeDef;
 106:Src/app.c     **** 
 107:Src/app.c     **** typedef struct {
 108:Src/app.c     ****   SemaphoreHandle_t free;
 109:Src/app.c     ****   StaticSemaphore_t free_buffer;
 110:Src/app.c     ****   SemaphoreHandle_t ready;
 111:Src/app.c     ****   StaticSemaphore_t ready_buffer;
 112:Src/app.c     ****   int buffer_nb;
 113:Src/app.c     ****   uint8_t *buffers[BQUEUE_MAX_BUFFERS];
 114:Src/app.c     ****   int free_idx;
 115:Src/app.c     ****   int ready_idx;
 116:Src/app.c     **** } bqueue_t;
 117:Src/app.c     **** 
 118:Src/app.c     **** typedef struct {
 119:Src/app.c     ****   uint64_t current_total;
 120:Src/app.c     ****   uint64_t current_thread_total;
 121:Src/app.c     ****   uint64_t prev_total;
 122:Src/app.c     ****   uint64_t prev_thread_total;
 123:Src/app.c     ****   struct {
 124:Src/app.c     ****     uint64_t total;
 125:Src/app.c     ****     uint64_t thread;
 126:Src/app.c     ****     uint32_t tick;
 127:Src/app.c     ****   } history[CPU_LOAD_HISTORY_DEPTH];
 128:Src/app.c     **** } cpuload_info_t;
 129:Src/app.c     **** 
 130:Src/app.c     **** typedef struct {
 131:Src/app.c     ****   int is_valid;
 132:Src/app.c     ****   pd_pp_box_t pd_hands;
 133:Src/app.c     ****   roi_t roi;
 134:Src/app.c     ****   ld_point_t ld_landmarks[LD_LANDMARK_NB];
 135:Src/app.c     **** } hand_info_t;
 136:Src/app.c     **** 
 137:Src/app.c     **** typedef struct {
 138:Src/app.c     ****   float nn_period_ms;
 139:Src/app.c     ****   uint32_t pd_ms;
ARM GAS  /tmp/ccReAcTZ.s 			page 4


 140:Src/app.c     ****   uint32_t hl_ms;
 141:Src/app.c     ****   uint32_t pp_ms;
 142:Src/app.c     ****   uint32_t disp_ms;
 143:Src/app.c     ****   int is_ld_displayed;
 144:Src/app.c     ****   int is_pd_displayed;
 145:Src/app.c     ****   int pd_hand_nb;
 146:Src/app.c     ****   float pd_max_prob;
 147:Src/app.c     ****   hand_info_t hands[PD_MAX_HAND_NB];
 148:Src/app.c     **** } display_info_t;
 149:Src/app.c     **** 
 150:Src/app.c     **** typedef struct {
 151:Src/app.c     ****   SemaphoreHandle_t update;
 152:Src/app.c     ****   StaticSemaphore_t update_buffer;
 153:Src/app.c     ****   SemaphoreHandle_t lock;
 154:Src/app.c     ****   StaticSemaphore_t lock_buffer;
 155:Src/app.c     ****   display_info_t info;
 156:Src/app.c     **** } display_t;
 157:Src/app.c     **** 
 158:Src/app.c     **** typedef struct {
 159:Src/app.c     ****   uint32_t nn_in_len;
 160:Src/app.c     ****   float *prob_out;
 161:Src/app.c     ****   uint32_t prob_out_len;
 162:Src/app.c     ****   float *boxes_out;
 163:Src/app.c     ****   uint32_t boxes_out_len;
 164:Src/app.c     ****   pd_model_pp_static_param_t static_param;
 165:Src/app.c     ****   pd_pp_out_t pd_out;
 166:Src/app.c     **** } pd_model_info_t;
 167:Src/app.c     **** 
 168:Src/app.c     **** /**
 169:Src/app.c     ****  * @brief  YOLO detector model context struct
 170:Src/app.c     ****  */
 171:Src/app.c     **** typedef struct {
 172:Src/app.c     ****   // Input buffer info
 173:Src/app.c     ****   uint32_t nn_in_len;
 174:Src/app.c     **** 
 175:Src/app.c     ****   // Raw output buffer info from the model
 176:Src/app.c     ****   float *raw_detections_out;
 177:Src/app.c     ****   uint32_t raw_detections_out_len;
 178:Src/app.c     **** 
 179:Src/app.c     ****   // Post-processing parameters and final output
 180:Src/app.c     ****   od_yolov8_pp_static_param_t static_param;
 181:Src/app.c     ****   od_pp_out_t yolo_out; // CORRECTED: Using the provided output type
 182:Src/app.c     **** 
 183:Src/app.c     **** } yolo_detector_info_t;
 184:Src/app.c     **** 
 185:Src/app.c     **** typedef struct {
 186:Src/app.c     ****   uint8_t *nn_in;
 187:Src/app.c     ****   uint32_t nn_in_len;
 188:Src/app.c     ****   float *prob_out;
 189:Src/app.c     ****   uint32_t prob_out_len;
 190:Src/app.c     ****   float *landmarks_out;
 191:Src/app.c     ****   uint32_t landmarks_out_len;
 192:Src/app.c     **** } hl_model_info_t;
 193:Src/app.c     **** 
 194:Src/app.c     **** typedef struct {
 195:Src/app.c     ****   Button_TypeDef button_id;
 196:Src/app.c     ****   int prev_state;
ARM GAS  /tmp/ccReAcTZ.s 			page 5


 197:Src/app.c     ****   void (*on_click_handler)(void *cb_args);
 198:Src/app.c     ****   void *cb_args;
 199:Src/app.c     **** } button_t;
 200:Src/app.c     **** 
 201:Src/app.c     **** /* Globals */
 202:Src/app.c     **** /* Lcd Background area */
 203:Src/app.c     **** static Rectangle_TypeDef lcd_bg_area = {
 204:Src/app.c     ****   .X0 = 0,
 205:Src/app.c     ****   .Y0 = 0,
 206:Src/app.c     ****   .XSize = LCD_BG_WIDTH,
 207:Src/app.c     ****   .YSize = LCD_BG_HEIGHT,
 208:Src/app.c     **** };
 209:Src/app.c     **** /* Lcd Foreground area */
 210:Src/app.c     **** static Rectangle_TypeDef lcd_fg_area = {
 211:Src/app.c     ****   .X0 = 0,
 212:Src/app.c     ****   .Y0 = 0,
 213:Src/app.c     ****   .XSize = LCD_FG_WIDTH,
 214:Src/app.c     ****   .YSize = LCD_FG_HEIGHT,
 215:Src/app.c     **** };
 216:Src/app.c     **** /* Lcd Background Buffer */
 217:Src/app.c     **** static uint8_t lcd_bg_buffer[DISPLAY_BUFFER_NB][LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP] ALIGN_3
 218:Src/app.c     **** static int lcd_bg_buffer_disp_idx = 1;
 219:Src/app.c     **** static int lcd_bg_buffer_capt_idx = 0;
 220:Src/app.c     **** /* Lcd Foreground Buffer */
 221:Src/app.c     **** static uint8_t lcd_fg_buffer[2][LCD_FG_WIDTH * LCD_FG_HEIGHT* 2] ALIGN_32 IN_PSRAM;
 222:Src/app.c     **** static int lcd_fg_buffer_rd_idx;
 223:Src/app.c     **** static display_t disp = {
 224:Src/app.c     ****   .info.is_ld_displayed = 1,
 225:Src/app.c     ****   .info.is_pd_displayed = 0,
 226:Src/app.c     **** };
 227:Src/app.c     **** static cpuload_info_t cpu_load;
 228:Src/app.c     **** /* screen buffer */
 229:Src/app.c     **** static uint8_t screen_buffer[LCD_BG_WIDTH * LCD_BG_HEIGHT * 2] ALIGN_32 IN_PSRAM;
 230:Src/app.c     **** 
 231:Src/app.c     **** /* model */
 232:Src/app.c     ****  /* palm detector */
 233:Src/app.c     **** //LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(palm_detector);
 234:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(yolo_detector);
 235:Src/app.c     **** static roi_t rois[PD_MAX_HAND_NB];
 236:Src/app.c     ****  /* hand landmark */
 237:Src/app.c     **** //LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(hand_landmark);
 238:Src/app.c     **** static ld_point_t ld_landmarks[PD_MAX_HAND_NB][LD_LANDMARK_NB];
 239:Src/app.c     **** static uint32_t frame_event_nb;
 240:Src/app.c     **** static volatile uint32_t frame_event_nb_for_resize;
 241:Src/app.c     **** 
 242:Src/app.c     ****  /* nn input buffers */
 243:Src/app.c     **** static uint8_t nn_input_buffers[2][NN_WIDTH * NN_HEIGHT * NN_BPP] ALIGN_32 IN_PSRAM;
 244:Src/app.c     **** static bqueue_t nn_input_queue;
 245:Src/app.c     **** 
 246:Src/app.c     ****  /* rtos */
 247:Src/app.c     **** static StaticTask_t nn_thread;
 248:Src/app.c     **** static StackType_t nn_thread_stack[2 * configMINIMAL_STACK_SIZE];
 249:Src/app.c     **** static StaticTask_t dp_thread;
 250:Src/app.c     **** static StackType_t dp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 251:Src/app.c     **** static StaticTask_t isp_thread;
 252:Src/app.c     **** static StackType_t isp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 253:Src/app.c     **** static SemaphoreHandle_t isp_sem;
ARM GAS  /tmp/ccReAcTZ.s 			page 6


 254:Src/app.c     **** static StaticSemaphore_t isp_sem_buffer;
 255:Src/app.c     **** 
 256:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
 257:Src/app.c     **** static GFXMMU_HandleTypeDef hgfxmmu;
 258:Src/app.c     **** static nema_cmdlist_t cl;
 259:Src/app.c     **** #endif
 260:Src/app.c     **** 
 261:Src/app.c     **** static int is_cache_enable()
 262:Src/app.c     **** {
 263:Src/app.c     **** #if defined(USE_DCACHE)
 264:Src/app.c     ****   return 1;
 265:Src/app.c     **** #else
 266:Src/app.c     ****   return 0;
 267:Src/app.c     **** #endif
 268:Src/app.c     **** }
 269:Src/app.c     **** 
 270:Src/app.c     **** static float pd_normalize_angle(float angle)
 271:Src/app.c     **** {
 272:Src/app.c     ****   return angle - 2 * M_PI * floorf((angle - (-M_PI)) / (2 * M_PI));
 273:Src/app.c     **** }
 274:Src/app.c     **** 
 275:Src/app.c     **** /* Without rotation support allow limited amount of angles */
 276:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 277:Src/app.c     **** static float pd_cook_rotation(float angle)
 278:Src/app.c     **** {
 279:Src/app.c     ****   if (angle >= (3 * M_PI) / 4)
 280:Src/app.c     ****     angle = M_PI;
 281:Src/app.c     ****   else if (angle >= (1 * M_PI) / 4)
 282:Src/app.c     ****     angle = M_PI / 2;
 283:Src/app.c     ****   else if (angle >= -(1 * M_PI) / 4)
 284:Src/app.c     ****     angle = 0;
 285:Src/app.c     ****   else if (angle >= -(3 * M_PI) / 4)
 286:Src/app.c     ****     angle = -M_PI / 2;
 287:Src/app.c     ****   else
 288:Src/app.c     ****     angle = -M_PI;
 289:Src/app.c     **** 
 290:Src/app.c     ****   return angle;
 291:Src/app.c     **** }
 292:Src/app.c     **** #else
 293:Src/app.c     **** static float pd_cook_rotation(float angle)
 294:Src/app.c     **** {
 295:Src/app.c     ****   return angle;
 296:Src/app.c     **** }
 297:Src/app.c     **** #endif
 298:Src/app.c     **** 
 299:Src/app.c     **** static float pd_compute_rotation(pd_pp_box_t *box)
 300:Src/app.c     **** {
 301:Src/app.c     ****   float x0, y0, x1, y1;
 302:Src/app.c     ****   float rotation;
 303:Src/app.c     **** 
 304:Src/app.c     ****   x0 = box->pKps[0].x;
 305:Src/app.c     ****   y0 = box->pKps[0].y;
 306:Src/app.c     ****   x1 = box->pKps[2].x;
 307:Src/app.c     ****   y1 = box->pKps[2].y;
 308:Src/app.c     **** 
 309:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
 310:Src/app.c     **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 7


 311:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
 312:Src/app.c     **** }
 313:Src/app.c     **** 
 314:Src/app.c     **** static void cvt_pd_coord_to_screen_coord(pd_pp_box_t *box)
 315:Src/app.c     **** {
 316:Src/app.c     ****   int i;
 317:Src/app.c     **** 
 318:Src/app.c     ****   /* This is not a typo. Since screen aspect ratio was conserved. We really want to use LCD_BG_WIDT
 319:Src/app.c     ****    * y positions.
 320:Src/app.c     ****    */
 321:Src/app.c     **** 
 322:Src/app.c     ****   box->x_center *= LCD_BG_WIDTH;
 323:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 324:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
 325:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 326:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 327:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 328:Src/app.c     ****     box->pKps[i].y *= LCD_BG_WIDTH;
 329:Src/app.c     ****   }
 330:Src/app.c     **** }
 331:Src/app.c     **** 
 332:Src/app.c     **** static void roi_shift_and_scale(roi_t *roi, float shift_x, float shift_y, float scale_x, float scal
 333:Src/app.c     **** {
 334:Src/app.c     ****   float long_side;
 335:Src/app.c     ****   float sx, sy;
 336:Src/app.c     **** 
 337:Src/app.c     ****   sx = (roi->w * shift_x * cos(roi->rotation) - roi->h * shift_y * sin(roi->rotation));
 338:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 339:Src/app.c     **** 
 340:Src/app.c     ****   roi->cx += sx;
 341:Src/app.c     ****   roi->cy += sy;
 342:Src/app.c     **** 
 343:Src/app.c     ****   long_side = MAX(roi->w, roi->h);
 344:Src/app.c     ****   roi->w = long_side;
 345:Src/app.c     ****   roi->h = long_side;
 346:Src/app.c     **** 
 347:Src/app.c     ****   roi->w *= scale_x;
 348:Src/app.c     ****   roi->h *= scale_y;
 349:Src/app.c     **** }
 350:Src/app.c     **** 
 351:Src/app.c     **** static void pd_box_to_roi(pd_pp_box_t *box,  roi_t *roi)
 352:Src/app.c     **** {
 353:Src/app.c     ****   const float shift_x = 0;
 354:Src/app.c     ****   const float shift_y = -0.5;
 355:Src/app.c     ****   const float scale = 2.6;
 356:Src/app.c     **** 
 357:Src/app.c     ****   roi->cx = box->x_center;
 358:Src/app.c     ****   roi->cy = box->y_center;
 359:Src/app.c     ****   roi->w = box->width;
 360:Src/app.c     ****   roi->h = box->height;
 361:Src/app.c     ****   roi->rotation = pd_compute_rotation(box);
 362:Src/app.c     **** 
 363:Src/app.c     ****   roi_shift_and_scale(roi, shift_x, shift_y, scale, scale);
 364:Src/app.c     **** 
 365:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 366:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
 367:Src/app.c     ****   roi->rotation = 0;
ARM GAS  /tmp/ccReAcTZ.s 			page 8


 368:Src/app.c     **** #endif
 369:Src/app.c     **** }
 370:Src/app.c     **** 
 371:Src/app.c     **** static void copy_pd_box(pd_pp_box_t *dst, pd_pp_box_t *src)
 372:Src/app.c     **** {
 373:Src/app.c     ****   int i;
 374:Src/app.c     **** 
 375:Src/app.c     ****   dst->prob = src->prob;
 376:Src/app.c     ****   dst->x_center = src->x_center;
 377:Src/app.c     ****   dst->y_center = src->y_center;
 378:Src/app.c     ****   dst->width = src->width;
 379:Src/app.c     ****   dst->height = src->height;
 380:Src/app.c     ****   for (i = 0 ; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++)
 381:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 382:Src/app.c     **** }
 383:Src/app.c     **** 
 384:Src/app.c     **** static void button_init(button_t *b, Button_TypeDef id, void (*on_click_handler)(void *), void *cb_
 385:Src/app.c     **** {
 386:Src/app.c     ****   int ret;
 387:Src/app.c     **** 
 388:Src/app.c     ****   ret = BSP_PB_Init(id, BUTTON_MODE_GPIO);
 389:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 390:Src/app.c     **** 
 391:Src/app.c     ****   b->button_id = id;
 392:Src/app.c     ****   b->on_click_handler = on_click_handler;
 393:Src/app.c     ****   b->prev_state = 0;
 394:Src/app.c     ****   b->cb_args = cb_args;
 395:Src/app.c     **** }
 396:Src/app.c     **** 
 397:Src/app.c     **** static void button_process(button_t *b)
 398:Src/app.c     **** {
 399:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 400:Src/app.c     **** 
 401:Src/app.c     ****   if (state != b->prev_state && state && b->on_click_handler)
 402:Src/app.c     ****     b->on_click_handler(b->cb_args);
 403:Src/app.c     **** 
 404:Src/app.c     ****   b->prev_state = state;
 405:Src/app.c     **** }
 406:Src/app.c     **** 
 407:Src/app.c     **** static void cpuload_init(cpuload_info_t *cpu_load)
 408:Src/app.c     **** {
 409:Src/app.c     ****   memset(cpu_load, 0, sizeof(cpuload_info_t));
 410:Src/app.c     **** }
 411:Src/app.c     **** 
 412:Src/app.c     **** static void cpuload_update(cpuload_info_t *cpu_load)
 413:Src/app.c     **** {
 414:Src/app.c     ****   int i;
 415:Src/app.c     **** 
 416:Src/app.c     ****   cpu_load->history[1] = cpu_load->history[0];
 417:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 418:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 419:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 420:Src/app.c     **** 
 421:Src/app.c     ****   if (cpu_load->history[1].tick - cpu_load->history[2].tick < 1000)
 422:Src/app.c     ****     return ;
 423:Src/app.c     **** 
 424:Src/app.c     ****   for (i = 0; i < CPU_LOAD_HISTORY_DEPTH - 2; i++)
ARM GAS  /tmp/ccReAcTZ.s 			page 9


 425:Src/app.c     ****     cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 1 - i] = cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 
 426:Src/app.c     **** }
 427:Src/app.c     **** 
 428:Src/app.c     **** static void cpuload_get_info(cpuload_info_t *cpu_load, float *cpu_load_last, float *cpu_load_last_s
 429:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 430:Src/app.c     **** {
 431:Src/app.c     ****   if (cpu_load_last)
 432:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 433:Src/app.c     ****                      (cpu_load->history[0].total - cpu_load->history[1].total);
 434:Src/app.c     ****   if (cpu_load_last_second)
 435:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 436:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 437:Src/app.c     ****   if (cpu_load_last_five_seconds)
 438:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 439:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[7].total);
 440:Src/app.c     **** }
 441:Src/app.c     **** 
 442:Src/app.c     **** static int bqueue_init(bqueue_t *bq, int buffer_nb, uint8_t **buffers)
 443:Src/app.c     **** {
 444:Src/app.c     ****   int i;
 445:Src/app.c     **** 
 446:Src/app.c     ****   if (buffer_nb > BQUEUE_MAX_BUFFERS)
 447:Src/app.c     ****     return -1;
 448:Src/app.c     **** 
 449:Src/app.c     ****   bq->free = xSemaphoreCreateCountingStatic(buffer_nb, buffer_nb, &bq->free_buffer);
 450:Src/app.c     ****   if (!bq->free)
 451:Src/app.c     ****     goto free_sem_error;
 452:Src/app.c     ****   bq->ready = xSemaphoreCreateCountingStatic(buffer_nb, 0, &bq->ready_buffer);
 453:Src/app.c     ****   if (!bq->ready)
 454:Src/app.c     ****     goto ready_sem_error;
 455:Src/app.c     **** 
 456:Src/app.c     ****   bq->buffer_nb = buffer_nb;
 457:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 458:Src/app.c     ****     assert(buffers[i]);
 459:Src/app.c     ****     bq->buffers[i] = buffers[i];
 460:Src/app.c     ****   }
 461:Src/app.c     ****   bq->free_idx = 0;
 462:Src/app.c     ****   bq->ready_idx = 0;
 463:Src/app.c     **** 
 464:Src/app.c     ****   return 0;
 465:Src/app.c     **** 
 466:Src/app.c     **** ready_sem_error:
 467:Src/app.c     ****   vSemaphoreDelete(bq->free);
 468:Src/app.c     **** free_sem_error:
 469:Src/app.c     ****   return -1;
 470:Src/app.c     **** }
 471:Src/app.c     **** 
 472:Src/app.c     **** static uint8_t *bqueue_get_free(bqueue_t *bq, int is_blocking)
 473:Src/app.c     **** {
 474:Src/app.c     ****   uint8_t *res;
 475:Src/app.c     ****   int ret;
 476:Src/app.c     **** 
 477:Src/app.c     ****   ret = xSemaphoreTake(bq->free, is_blocking ? portMAX_DELAY : 0);
 478:Src/app.c     ****   if (ret == pdFALSE)
 479:Src/app.c     ****     return NULL;
 480:Src/app.c     **** 
 481:Src/app.c     ****   res = bq->buffers[bq->free_idx];
ARM GAS  /tmp/ccReAcTZ.s 			page 10


 482:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 483:Src/app.c     **** 
 484:Src/app.c     ****   return res;
 485:Src/app.c     **** }
 486:Src/app.c     **** 
 487:Src/app.c     **** static void bqueue_put_free(bqueue_t *bq)
 488:Src/app.c     **** {
 489:Src/app.c     ****   int ret;
 490:Src/app.c     **** 
 491:Src/app.c     ****   ret = xSemaphoreGive(bq->free);
 492:Src/app.c     ****   assert(ret == pdTRUE);
 493:Src/app.c     **** }
 494:Src/app.c     **** 
 495:Src/app.c     **** static uint8_t *bqueue_get_ready(bqueue_t *bq)
 496:Src/app.c     **** {
 497:Src/app.c     ****   uint8_t *res;
 498:Src/app.c     ****   int ret;
 499:Src/app.c     **** 
 500:Src/app.c     ****   ret = xSemaphoreTake(bq->ready, portMAX_DELAY);
 501:Src/app.c     ****   assert(ret == pdTRUE);
 502:Src/app.c     **** 
 503:Src/app.c     ****   res = bq->buffers[bq->ready_idx];
 504:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 505:Src/app.c     **** 
 506:Src/app.c     ****   return res;
 507:Src/app.c     **** }
 508:Src/app.c     **** 
 509:Src/app.c     **** static void bqueue_put_ready(bqueue_t *bq)
 510:Src/app.c     **** {
 511:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 512:Src/app.c     ****   int ret;
 513:Src/app.c     **** 
 514:Src/app.c     ****   if (xPortIsInsideInterrupt()) {
 515:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 516:Src/app.c     ****     assert(ret == pdTRUE);
 517:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 518:Src/app.c     ****   } else {
 519:Src/app.c     ****     ret = xSemaphoreGive(bq->ready);
 520:Src/app.c     ****     assert(ret == pdTRUE);
 521:Src/app.c     ****   }
 522:Src/app.c     **** }
 523:Src/app.c     **** 
 524:Src/app.c     **** static void reload_bg_layer(int next_disp_idx)
 525:Src/app.c     **** {
 526:Src/app.c     ****   int ret;
 527:Src/app.c     **** 
 528:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_bg_buffer[next_disp_idx], SCRL_LAYER_0);
 529:Src/app.c     ****   assert(ret == 0);
 530:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 531:Src/app.c     ****   assert(ret == 0);
 532:Src/app.c     **** 
 533:Src/app.c     ****   ret = SRCL_Update();
 534:Src/app.c     ****   assert(ret == 0);
 535:Src/app.c     **** }
 536:Src/app.c     **** 
 537:Src/app.c     **** static void app_main_pipe_frame_event()
 538:Src/app.c     **** {
ARM GAS  /tmp/ccReAcTZ.s 			page 11


 539:Src/app.c     ****   int next_disp_idx = (lcd_bg_buffer_disp_idx + 1) % DISPLAY_BUFFER_NB;
 540:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 541:Src/app.c     ****   int ret;
 542:Src/app.c     **** 
 543:Src/app.c     ****   ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE1,
 544:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 545:Src/app.c     ****   assert(ret == HAL_OK);
 546:Src/app.c     **** 
 547:Src/app.c     ****   reload_bg_layer(next_disp_idx);
 548:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 549:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 550:Src/app.c     **** 
 551:Src/app.c     ****   frame_event_nb++;
 552:Src/app.c     **** }
 553:Src/app.c     **** 
 554:Src/app.c     **** 
 555:Src/app.c     **** static void app_ancillary_pipe_frame_event()
 556:Src/app.c     **** {
 557:Src/app.c     ****   uint8_t *next_buffer;
 558:Src/app.c     ****   int ret;
 559:Src/app.c     **** 
 560:Src/app.c     ****   next_buffer = bqueue_get_free(&nn_input_queue, 0);
 561:Src/app.c     ****   if (next_buffer) {
 562:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 563:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 564:Src/app.c     ****     assert(ret == HAL_OK);
 565:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 566:Src/app.c     ****     frame_event_nb_for_resize = frame_event_nb - 1;
 567:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 568:Src/app.c     ****   }
 569:Src/app.c     **** }
 570:Src/app.c     **** 
 571:Src/app.c     **** static void app_main_pipe_vsync_event()
 572:Src/app.c     **** {
 573:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 574:Src/app.c     ****   int ret;
 575:Src/app.c     **** 
 576:Src/app.c     ****   ret = xSemaphoreGiveFromISR(isp_sem, &xHigherPriorityTaskWoken);
 577:Src/app.c     ****   if (ret == pdTRUE)
 578:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 579:Src/app.c     **** }
 580:Src/app.c     **** 
 581:Src/app.c     **** static int clamp_point(int *x, int *y)
 582:Src/app.c     **** {
  34              		.loc 1 582 1 view -0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
 583:Src/app.c     ****   int xi = *x;
  38              		.loc 1 583 3 view .LVU1
  39              		.loc 1 583 7 is_stmt 0 view .LVU2
  40 0000 0368     		ldr	r3, [r0]
  41              	.LVL1:
 584:Src/app.c     ****   int yi = *y;
  42              		.loc 1 584 3 is_stmt 1 view .LVU3
 582:Src/app.c     ****   int xi = *x;
  43              		.loc 1 582 1 is_stmt 0 view .LVU4
ARM GAS  /tmp/ccReAcTZ.s 			page 12


  44 0002 10B5     		push	{r4, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 4, -8
  47              		.cfi_offset 14, -4
 585:Src/app.c     **** 
 586:Src/app.c     ****   if (*x < 0)
  48              		.loc 1 586 6 view .LVU5
  49 0004 002B     		cmp	r3, #0
 587:Src/app.c     ****     *x = 0;
  50              		.loc 1 587 8 view .LVU6
  51 0006 B8BF     		it	lt
  52 0008 0024     		movlt	r4, #0
 584:Src/app.c     **** 
  53              		.loc 1 584 7 view .LVU7
  54 000a 0A68     		ldr	r2, [r1]
  55              	.LVL2:
 586:Src/app.c     ****     *x = 0;
  56              		.loc 1 586 3 is_stmt 1 view .LVU8
  57              		.loc 1 587 5 view .LVU9
  58              		.loc 1 587 8 is_stmt 0 view .LVU10
  59 000c B8BF     		it	lt
  60 000e 0460     		strlt	r4, [r0]
 588:Src/app.c     ****   if (*y < 0)
  61              		.loc 1 588 3 is_stmt 1 view .LVU11
  62              		.loc 1 588 6 is_stmt 0 view .LVU12
  63 0010 0C68     		ldr	r4, [r1]
  64 0012 002C     		cmp	r4, #0
 589:Src/app.c     ****     *y = 0;
  65              		.loc 1 589 5 is_stmt 1 view .LVU13
  66              		.loc 1 589 8 is_stmt 0 view .LVU14
  67 0014 BCBF     		itt	lt
  68 0016 0024     		movlt	r4, #0
  69 0018 0C60     		strlt	r4, [r1]
 590:Src/app.c     ****   if (*x >= lcd_bg_area.XSize)
  70              		.loc 1 590 3 is_stmt 1 view .LVU15
  71              		.loc 1 590 6 is_stmt 0 view .LVU16
  72 001a 0468     		ldr	r4, [r0]
  73 001c B4F5487F 		cmp	r4, #800
 591:Src/app.c     ****     *x = lcd_bg_area.XSize - 1;
  74              		.loc 1 591 5 is_stmt 1 view .LVU17
  75              		.loc 1 591 8 is_stmt 0 view .LVU18
  76 0020 24BF     		itt	cs
  77 0022 40F21F34 		movwcs	r4, #799
  78 0026 0460     		strcs	r4, [r0]
 592:Src/app.c     ****   if (*y >= lcd_bg_area.YSize)
  79              		.loc 1 592 3 is_stmt 1 view .LVU19
  80              		.loc 1 592 6 is_stmt 0 view .LVU20
  81 0028 0C68     		ldr	r4, [r1]
  82 002a B4F5F07F 		cmp	r4, #480
 593:Src/app.c     ****     *y = lcd_bg_area.YSize - 1;
  83              		.loc 1 593 5 is_stmt 1 view .LVU21
  84              		.loc 1 593 8 is_stmt 0 view .LVU22
  85 002e 24BF     		itt	cs
  86 0030 40F2DF14 		movwcs	r4, #479
  87 0034 0C60     		strcs	r4, [r1]
 594:Src/app.c     **** 
 595:Src/app.c     ****   return (xi != *x) || (yi != *y);
ARM GAS  /tmp/ccReAcTZ.s 			page 13


  88              		.loc 1 595 3 is_stmt 1 view .LVU23
  89              		.loc 1 595 21 is_stmt 0 view .LVU24
  90 0036 0068     		ldr	r0, [r0]
  91              	.LVL3:
  92              		.loc 1 595 21 view .LVU25
  93 0038 9842     		cmp	r0, r3
  94 003a 04D1     		bne	.L7
  95              		.loc 1 595 21 discriminator 2 view .LVU26
  96 003c 0868     		ldr	r0, [r1]
  97 003e 801A     		subs	r0, r0, r2
  98 0040 18BF     		it	ne
  99 0042 0120     		movne	r0, #1
 100              	.L1:
 596:Src/app.c     **** }
 101              		.loc 1 596 1 view .LVU27
 102 0044 10BD     		pop	{r4, pc}
 103              	.L7:
 595:Src/app.c     **** }
 104              		.loc 1 595 21 discriminator 3 view .LVU28
 105 0046 0120     		movs	r0, #1
 595:Src/app.c     **** }
 106              		.loc 1 595 21 view .LVU29
 107 0048 FCE7     		b	.L1
 108              		.cfi_endproc
 109              	.LFE7380:
 111              		.section	.rodata.isp_thread_fct.str1.1,"aMS",%progbits,1
 112              	.LC1:
 113 0000 72657420 		.ascii	"ret == pdTRUE\000"
 113      3D3D2070 
 113      64545255 
 113      4500
 114              	.LC2:
 115 000e 5372632F 		.ascii	"Src/app.c\000"
 115      6170702E 
 115      6300
 116              		.section	.text.isp_thread_fct,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	isp_thread_fct:
 123              	.LVL4:
 124              	.LFB7405:
 597:Src/app.c     **** 
 598:Src/app.c     **** static int clamp_point_with_margin(int *x, int *y, int margin)
 599:Src/app.c     **** {
 600:Src/app.c     ****   int xi = *x;
 601:Src/app.c     ****   int yi = *y;
 602:Src/app.c     **** 
 603:Src/app.c     ****   if (*x < margin)
 604:Src/app.c     ****     *x = margin;
 605:Src/app.c     ****   if (*y < margin)
 606:Src/app.c     ****     *y = margin;
 607:Src/app.c     ****   if (*x >= lcd_bg_area.XSize - margin)
 608:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 609:Src/app.c     ****   if (*y >= lcd_bg_area.YSize - margin)
 610:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
ARM GAS  /tmp/ccReAcTZ.s 			page 14


 611:Src/app.c     **** 
 612:Src/app.c     ****   return (xi != *x) || (yi != *y);
 613:Src/app.c     **** }
 614:Src/app.c     **** 
 615:Src/app.c     **** static void display_pd_hand(pd_pp_box_t *hand)
 616:Src/app.c     **** {
 617:Src/app.c     ****   int xc, yc;
 618:Src/app.c     ****   int x0, y0;
 619:Src/app.c     ****   int x1, y1;
 620:Src/app.c     ****   int w, h;
 621:Src/app.c     ****   int i;
 622:Src/app.c     **** 
 623:Src/app.c     ****   /* display box around palm */
 624:Src/app.c     ****   xc = (int)hand->x_center;
 625:Src/app.c     ****   yc = (int)hand->y_center;
 626:Src/app.c     ****   w = (int)hand->width;
 627:Src/app.c     ****   h = (int)hand->height;
 628:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 629:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 630:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 631:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 632:Src/app.c     ****   clamp_point(&x0, &y0);
 633:Src/app.c     ****   clamp_point(&x1, &y1);
 634:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 635:Src/app.c     **** 
 636:Src/app.c     ****   /* display palm key points */
 637:Src/app.c     ****   for (i = 0; i < 7; i++) {
 638:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 639:Src/app.c     **** 
 640:Src/app.c     ****     x0 = (int)hand->pKps[i].x;
 641:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 642:Src/app.c     ****     clamp_point(&x0, &y0);
 643:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 644:Src/app.c     ****   }
 645:Src/app.c     **** }
 646:Src/app.c     **** 
 647:Src/app.c     **** static void rotate_point(float pt[2], float rotation)
 648:Src/app.c     **** {
 649:Src/app.c     ****   float x = pt[0];
 650:Src/app.c     ****   float y = pt[1];
 651:Src/app.c     **** 
 652:Src/app.c     ****   pt[0] = cos(rotation) * x - sin(rotation) * y;
 653:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 654:Src/app.c     **** }
 655:Src/app.c     **** 
 656:Src/app.c     **** static void roi_to_corners(roi_t *roi, float corners[4][2])
 657:Src/app.c     **** {
 658:Src/app.c     ****   const float corners_init[4][2] = {
 659:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 660:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 661:Src/app.c     ****     { roi->w / 2,  roi->h / 2},
 662:Src/app.c     ****     {-roi->w / 2,  roi->h / 2},
 663:Src/app.c     ****   };
 664:Src/app.c     ****   int i;
 665:Src/app.c     **** 
 666:Src/app.c     ****   memcpy(corners, corners_init, sizeof(corners_init));
 667:Src/app.c     ****   /* rotate */
ARM GAS  /tmp/ccReAcTZ.s 			page 15


 668:Src/app.c     ****   for (i = 0; i < 4; i++)
 669:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 670:Src/app.c     **** 
 671:Src/app.c     ****   /* shift */
 672:Src/app.c     ****   for (i = 0; i < 4; i++) {
 673:Src/app.c     ****     corners[i][0] += roi->cx;
 674:Src/app.c     ****     corners[i][1] += roi->cy;
 675:Src/app.c     ****   }
 676:Src/app.c     **** }
 677:Src/app.c     **** 
 678:Src/app.c     **** static int clamp_corners(float corners_in[4][2], int corners_out[4][2])
 679:Src/app.c     **** {
 680:Src/app.c     ****   int is_clamp = 0;
 681:Src/app.c     ****   int i;
 682:Src/app.c     **** 
 683:Src/app.c     ****   for (i = 0; i < 4; i++) {
 684:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 685:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 686:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 687:Src/app.c     ****   }
 688:Src/app.c     **** 
 689:Src/app.c     ****   return is_clamp;
 690:Src/app.c     **** }
 691:Src/app.c     **** 
 692:Src/app.c     **** static void display_roi(roi_t *roi)
 693:Src/app.c     **** {
 694:Src/app.c     ****   float corners_f[4][2];
 695:Src/app.c     ****   int corners[4][2];
 696:Src/app.c     ****   int is_clamp;
 697:Src/app.c     ****   int i;
 698:Src/app.c     **** 
 699:Src/app.c     ****   /* compute box corners */
 700:Src/app.c     ****   roi_to_corners(roi, corners_f);
 701:Src/app.c     **** 
 702:Src/app.c     ****   /* clamp */
 703:Src/app.c     ****   is_clamp = clamp_corners(corners_f, corners);
 704:Src/app.c     ****   if (is_clamp)
 705:Src/app.c     ****     return ;
 706:Src/app.c     **** 
 707:Src/app.c     ****   /* display */
 708:Src/app.c     ****   for (i = 0; i < 4; i++)
 709:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 710:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 711:Src/app.c     **** }
 712:Src/app.c     **** 
 713:Src/app.c     **** static void decode_ld_landmark(roi_t *roi, ld_point_t *lm, ld_point_t *decoded)
 714:Src/app.c     **** {
 715:Src/app.c     ****   float rotation = roi->rotation;
 716:Src/app.c     ****   float w = roi->w;
 717:Src/app.c     ****   float h = roi->h;
 718:Src/app.c     **** 
 719:Src/app.c     ****   decoded->x = roi->cx + (lm->x - 0.5) * w * cos(rotation) - (lm->y - 0.5) * h * sin(rotation);
 720:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 721:Src/app.c     **** }
 722:Src/app.c     **** 
 723:Src/app.c     **** static void display_ld_hand(hand_info_t *hand)
 724:Src/app.c     **** {
ARM GAS  /tmp/ccReAcTZ.s 			page 16


 725:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 726:Src/app.c     ****   roi_t *roi = &hand->roi;
 727:Src/app.c     ****   int x[LD_LANDMARK_NB];
 728:Src/app.c     ****   int y[LD_LANDMARK_NB];
 729:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 730:Src/app.c     ****   ld_point_t decoded;
 731:Src/app.c     ****   int i;
 732:Src/app.c     **** 
 733:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 734:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 735:Src/app.c     ****     x[i] = (int)decoded.x;
 736:Src/app.c     ****     y[i] = (int)decoded.y;
 737:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 738:Src/app.c     ****   }
 739:Src/app.c     **** 
 740:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 741:Src/app.c     ****     if (is_clamped[i])
 742:Src/app.c     ****       continue;
 743:Src/app.c     ****     UTIL_LCD_FillCircle(x[i], y[i], disk_radius, UTIL_LCD_COLOR_YELLOW);
 744:Src/app.c     ****   }
 745:Src/app.c     **** 
 746:Src/app.c     ****   for (i = 0; i < LD_BINDING_NB; i++) {
 747:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 748:Src/app.c     ****       continue;
 749:Src/app.c     ****     UTIL_LCD_DrawLine(x[ld_bindings_idx[i][0]], y[ld_bindings_idx[i][0]],
 750:Src/app.c     ****                       x[ld_bindings_idx[i][1]], y[ld_bindings_idx[i][1]],
 751:Src/app.c     ****                       UTIL_LCD_COLOR_BLACK);
 752:Src/app.c     ****   }
 753:Src/app.c     **** }
 754:Src/app.c     **** 
 755:Src/app.c     **** void display_hand(display_info_t *info, hand_info_t *hand)
 756:Src/app.c     **** {
 757:Src/app.c     ****   if (info->is_pd_displayed) {
 758:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 759:Src/app.c     ****     display_roi(&hand->roi);
 760:Src/app.c     ****   }
 761:Src/app.c     ****   if (info->is_ld_displayed)
 762:Src/app.c     ****     display_ld_hand(hand);
 763:Src/app.c     **** }
 764:Src/app.c     **** 
 765:Src/app.c     **** static void Display_NetworkOutput(display_info_t *info)
 766:Src/app.c     **** {
 767:Src/app.c     ****   float cpu_load_one_second;
 768:Src/app.c     ****   int line_nb = 0;
 769:Src/app.c     ****   float nn_fps;
 770:Src/app.c     ****   int i;
 771:Src/app.c     **** 
 772:Src/app.c     ****   /* clear previous ui */
 773:Src/app.c     ****   UTIL_LCD_FillRect(lcd_fg_area.X0, lcd_fg_area.Y0, lcd_fg_area.XSize, lcd_fg_area.YSize, 0x0000000
 774:Src/app.c     **** 
 775:Src/app.c     ****   /* cpu load */
 776:Src/app.c     ****   cpuload_update(&cpu_load);
 777:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 778:Src/app.c     **** 
 779:Src/app.c     ****   /* draw metrics */
 780:Src/app.c     ****   nn_fps = 1000.0 / info->nn_period_ms;
 781:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
ARM GAS  /tmp/ccReAcTZ.s 			page 17


 782:Src/app.c     ****   line_nb += 1;
 783:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 784:Src/app.c     ****   line_nb += 2;
 785:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 786:Src/app.c     ****   line_nb += 1;
 787:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " pd %2ums", info->pd_ms);
 788:Src/app.c     ****   line_nb += 1;
 789:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " hl %2ums", info->hl_ms);
 790:Src/app.c     ****   line_nb += 2;
 791:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 792:Src/app.c     ****   line_nb += 2;
 793:Src/app.c     ****   if (DBG_INFO) {
 794:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 795:Src/app.c     ****     line_nb += 1;
 796:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "   %ums", info->disp_ms);
 797:Src/app.c     ****     line_nb += 1;
 798:Src/app.c     ****   }
 799:Src/app.c     **** 
 800:Src/app.c     ****   /* display palm detector output */
 801:Src/app.c     ****   for (i = 0; i < info->pd_hand_nb; i++) {
 802:Src/app.c     ****     if (info->hands[i].is_valid)
 803:Src/app.c     ****       display_hand(info, &info->hands[i]);
 804:Src/app.c     ****   }
 805:Src/app.c     **** 
 806:Src/app.c     ****   if (DBG_INFO)
 807:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 808:Src/app.c     **** }
 809:Src/app.c     **** 
 810:Src/app.c     **** /**
 811:Src/app.c     ****  * @brief  Initializes the YOLO detector model info and post-processing
 812:Src/app.c     ****  * @param  info  Pointer to the yolo_detector_info_t context struct
 813:Src/app.c     ****  * @retval None
 814:Src/app.c     ****  */
 815:Src/app.c     **** static void yolo_detector_init(yolo_detector_info_t *info)
 816:Src/app.c     **** {
 817:Src/app.c     ****   // Assumes your YOLO model is named 'yolo_detector' in the Cube.AI tool
 818:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_yolo_detector();
 819:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 820:Src/app.c     ****   int ret;
 821:Src/app.c     **** 
 822:Src/app.c     ****   /* Link model I/O buffers to the info struct */
 823:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 824:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 825:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 826:Src/app.c     **** 
 827:Src/app.c     ****   /* Initialize YOLO post-processing static parameters */
 828:Src/app.c     ****   info->static_param.nb_classes = 80;        // Example: 80 for COCO dataset
 829:Src/app.c     ****   info->static_param.nb_total_boxes = 8400;  // Example: Standard for YOLOv8
 830:Src/app.c     ****   info->static_param.max_boxes_limit = 100;  // Max boxes after NMS
 831:Src/app.c     ****   info->static_param.conf_threshold = 0.40f; // Confidence threshold
 832:Src/app.c     ****   info->static_param.iou_threshold = 0.45f;  // IoU threshold for NMS
 833:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 834:Src/app.c     ****   info->static_param.raw_output_scale = 1.0f;
 835:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 836:Src/app.c     **** 
 837:Src/app.c     ****   /* Initialize the post-processing module */
 838:Src/app.c     ****   // Assumes a generic post-processing init function exists
ARM GAS  /tmp/ccReAcTZ.s 			page 18


 839:Src/app.c     ****   ret = app_postprocess_init(&info->static_param, &NN_Instance_yolo_detector);
 840:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 841:Src/app.c     **** }
 842:Src/app.c     **** 
 843:Src/app.c     **** static int yolo_detector_run(uint8_t *buffer, yolo_detector_info_t *info, uint32_t *exec_time)
 844:Src/app.c     **** {
 845:Src/app.c     ****   uint32_t start_ts;
 846:Src/app.c     ****   int detection_nb;
 847:Src/app.c     ****   int ret;
 848:Src/app.c     ****   int i;
 849:Src/app.c     **** 
 850:Src/app.c     ****   start_ts = HAL_GetTick();
 851:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 852:Src/app.c     ****   ret = LL_ATON_Set_User_Input_Buffer_yolo_detector(0, buffer, info->nn_in_len);
 853:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 854:Src/app.c     **** 
 855:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_yolo_detector);
 856:Src/app.c     **** 
 857:Src/app.c     ****   /* Run post-processing on the model's raw output */
 858:Src/app.c     ****   ret = app_postprocess_run((void * []){info->raw_detections_out}, 1, &info->yolo_out, &info->stati
 859:Src/app.c     **** 
 860:Src/app.c     ****   // Get the number of final detections after NMS
 861:Src/app.c     ****   detection_nb = info->yolo_out.nb_detect;
 862:Src/app.c     **** 
 863:Src/app.c     ****   /* Optional: Post-process final bounding boxes (e.g., coordinate scaling) */
 864:Src/app.c     ****   for (i = 0; i < detection_nb; i++) {
 865:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 866:Src/app.c     ****   }
 867:Src/app.c     **** 
 868:Src/app.c     ****   /* Invalidate D-Cache for the output region to ensure CPU sees updated data */
 869:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->raw_detections_out, info->raw_detections_out_len));
 870:Src/app.c     **** 
 871:Src/app.c     ****   *exec_time = HAL_GetTick() - start_ts;
 872:Src/app.c     **** 
 873:Src/app.c     ****   return detection_nb;
 874:Src/app.c     **** }
 875:Src/app.c     **** 
 876:Src/app.c     **** // static void palm_detector_init(pd_model_info_t *info)
 877:Src/app.c     **** // {
 878:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_palm_detector();
 879:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_palm_detector();
 880:Src/app.c     **** //   int ret;
 881:Src/app.c     **** 
 882:Src/app.c     **** //   /* model info */
 883:Src/app.c     **** //   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 884:Src/app.c     **** //   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 885:Src/app.c     **** //   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 886:Src/app.c     **** //   assert(info->prob_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float));
 887:Src/app.c     **** //   info->boxes_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 888:Src/app.c     **** //   info->boxes_out_len = LL_Buffer_len(&nn_out_info[1]);
 889:Src/app.c     **** //   assert(info->boxes_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float) * 18);
 890:Src/app.c     **** 
 891:Src/app.c     **** //   /* post processor info */
 892:Src/app.c     **** //   ret = app_postprocess_init(&info->static_param, &NN_Instance_palm_detector);
 893:Src/app.c     **** //   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 894:Src/app.c     **** // }
 895:Src/app.c     **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 19


 896:Src/app.c     **** // static int palm_detector_run(uint8_t *buffer, pd_model_info_t *info, uint32_t *pd_exec_time)
 897:Src/app.c     **** // {
 898:Src/app.c     **** //   uint32_t start_ts;
 899:Src/app.c     **** //   int hand_nb;
 900:Src/app.c     **** //   int ret;
 901:Src/app.c     **** //   int i;
 902:Src/app.c     **** 
 903:Src/app.c     **** //   start_ts = HAL_GetTick();
 904:Src/app.c     **** //   /* Note that we don't need to clean/invalidate those input buffers since they are only access 
 905:Src/app.c     **** //   ret = LL_ATON_Set_User_Input_Buffer_palm_detector(0, buffer, info->nn_in_len);
 906:Src/app.c     **** //   assert(ret == LL_ATON_User_IO_NOERROR);
 907:Src/app.c     **** 
 908:Src/app.c     **** //   LL_ATON_RT_Main(&NN_Instance_palm_detector);
 909:Src/app.c     **** 
 910:Src/app.c     **** //   ret = app_postprocess_run((void * []){info->prob_out, info->boxes_out}, 2, &info->pd_out, &inf
 911:Src/app.c     **** //   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 912:Src/app.c     **** //   hand_nb = MIN(info->pd_out.box_nb, PD_MAX_HAND_NB);
 913:Src/app.c     **** 
 914:Src/app.c     **** //   for (i = 0; i < hand_nb; i++) {
 915:Src/app.c     **** //     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
 916:Src/app.c     **** //     pd_box_to_roi(&info->pd_out.pOutData[i], &rois[i]);
 917:Src/app.c     **** //   }
 918:Src/app.c     **** 
 919:Src/app.c     **** //   /* Discard nn_out region (used by pp_outputs variables) to avoid Dcache evictions during nn in
 920:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
 921:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
 922:Src/app.c     **** 
 923:Src/app.c     **** //   *pd_exec_time = HAL_GetTick() - start_ts;
 924:Src/app.c     **** 
 925:Src/app.c     **** //   return hand_nb;
 926:Src/app.c     **** // }
 927:Src/app.c     **** 
 928:Src/app.c     **** // static void hand_landmark_init(hl_model_info_t *info)
 929:Src/app.c     **** // {
 930:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_hand_landmark();
 931:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_hand_landmark();
 932:Src/app.c     **** 
 933:Src/app.c     **** //   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
 934:Src/app.c     **** //   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 935:Src/app.c     **** //   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[2]);
 936:Src/app.c     **** //   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
 937:Src/app.c     **** //   assert(info->prob_out_len == sizeof(float));
 938:Src/app.c     **** //   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
 939:Src/app.c     **** //   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
 940:Src/app.c     **** //   assert(info->landmarks_out_len == sizeof(float) * 63);
 941:Src/app.c     **** // }
 942:Src/app.c     **** 
 943:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 944:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
 945:Src/app.c     **** {
 946:Src/app.c     ****   float corners_f[4][2];
 947:Src/app.c     ****   int corners[4][2];
 948:Src/app.c     ****   uint8_t* out_data;
 949:Src/app.c     ****   size_t height_out;
 950:Src/app.c     ****   uint8_t *in_data;
 951:Src/app.c     ****   size_t height_in;
 952:Src/app.c     ****   size_t width_out;
ARM GAS  /tmp/ccReAcTZ.s 			page 20


 953:Src/app.c     ****   size_t width_in;
 954:Src/app.c     ****   int is_clamped;
 955:Src/app.c     **** 
 956:Src/app.c     ****   /* defaults when no clamping occurs */
 957:Src/app.c     ****   out_data = info->nn_in;
 958:Src/app.c     ****   width_out = LD_WIDTH;
 959:Src/app.c     ****   height_out = LD_HEIGHT;
 960:Src/app.c     **** 
 961:Src/app.c     ****   roi_to_corners(roi, corners_f);
 962:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 963:Src/app.c     **** 
 964:Src/app.c     ****   /* If clamp perform a partial resize */
 965:Src/app.c     ****   if (is_clamped) {
 966:Src/app.c     ****     int offset_x;
 967:Src/app.c     ****     int offset_y;
 968:Src/app.c     **** 
 969:Src/app.c     ****     /* clear target memory since resize will partially write it */
 970:Src/app.c     ****     memset(info->nn_in, 0, info->nn_in_len);
 971:Src/app.c     **** 
 972:Src/app.c     ****     /* compute start address of output buffer */
 973:Src/app.c     ****     offset_x = (int)(((corners[0][0] - corners_f[0][0]) * LD_WIDTH) / (corners_f[2][0] - corners_f[
 974:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 975:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 976:Src/app.c     **** 
 977:Src/app.c     ****     /* compute output width and height */
 978:Src/app.c     ****     width_out = (int)((corners[2][0] - corners[0][0]) / (corners_f[2][0] - corners_f[0][0]) * LD_WI
 979:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 980:Src/app.c     **** 
 981:Src/app.c     ****     assert(width_out > 0);
 982:Src/app.c     ****     assert(height_out > 0);
 983:Src/app.c     ****     {
 984:Src/app.c     ****       uint8_t* out_data_end;
 985:Src/app.c     **** 
 986:Src/app.c     ****       out_data_end = out_data + (int)LD_WIDTH * DISPLAY_BPP * (height_out - 1) + DISPLAY_BPP * widt
 987:Src/app.c     **** 
 988:Src/app.c     ****       assert(out_data_end >= info->nn_in);
 989:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 990:Src/app.c     ****     }
 991:Src/app.c     ****   }
 992:Src/app.c     **** 
 993:Src/app.c     ****   in_data = buffer + corners[0][1] * LCD_BG_WIDTH * DISPLAY_BPP + corners[0][0]* DISPLAY_BPP;
 994:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 995:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
 996:Src/app.c     **** 
 997:Src/app.c     ****   assert(width_in > 0);
 998:Src/app.c     ****   assert(height_in > 0);
 999:Src/app.c     ****   {
1000:Src/app.c     ****     uint8_t* in_data_end;
1001:Src/app.c     **** 
1002:Src/app.c     ****     in_data_end = in_data + LCD_BG_WIDTH * DISPLAY_BPP * (height_in - 1) + DISPLAY_BPP * width_in -
1003:Src/app.c     **** 
1004:Src/app.c     ****     assert(in_data_end >= buffer);
1005:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
1006:Src/app.c     ****   }
1007:Src/app.c     **** 
1008:Src/app.c     ****   IPL_resize_bilinear_iu8ou8_with_strides_RGB(in_data, out_data, LCD_BG_WIDTH * DISPLAY_BPP, LD_WID
1009:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
ARM GAS  /tmp/ccReAcTZ.s 			page 21


1010:Src/app.c     **** 
1011:Src/app.c     ****   return 0;
1012:Src/app.c     **** }
1013:Src/app.c     **** #else
1014:Src/app.c     **** static void app_transform(nema_matrix3x3_t t, app_v3_t v)
1015:Src/app.c     **** {
1016:Src/app.c     ****   app_v3_t r;
1017:Src/app.c     ****   int i;
1018:Src/app.c     **** 
1019:Src/app.c     ****   for (i = 0; i < 3; i++)
1020:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
1021:Src/app.c     **** 
1022:Src/app.c     ****   for (i = 0; i < 3; i++)
1023:Src/app.c     ****     v[i] = r[i];
1024:Src/app.c     **** }
1025:Src/app.c     **** 
1026:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1027:Src/app.c     **** {
1028:Src/app.c     ****   app_v3_t vertex[] = {
1029:Src/app.c     ****     {           0,             0, 1},
1030:Src/app.c     ****     {LCD_BG_WIDTH,             0, 1},
1031:Src/app.c     ****     {LCD_BG_WIDTH, LCD_BG_HEIGHT, 1},
1032:Src/app.c     ****     {           0, LCD_BG_HEIGHT, 1},
1033:Src/app.c     ****   };
1034:Src/app.c     ****   GFXMMU_BuffersTypeDef buffers = { 0 };
1035:Src/app.c     ****   nema_matrix3x3_t t;
1036:Src/app.c     ****   int ret;
1037:Src/app.c     ****   int i;
1038:Src/app.c     **** 
1039:Src/app.c     ****   buffers.Buf0Address = (uint32_t) info->nn_in;
1040:Src/app.c     ****   ret = HAL_GFXMMU_ModifyBuffers(&hgfxmmu, &buffers);
1041:Src/app.c     ****   assert(ret == HAL_OK);
1042:Src/app.c     **** 
1043:Src/app.c     ****   /* bind destination texture */
1044:Src/app.c     ****   nema_bind_dst_tex(GFXMMU_VIRTUAL_BUFFER0_BASE, LD_WIDTH, LD_HEIGHT, NEMA_RGBA8888, -1);
1045:Src/app.c     ****   nema_set_clip(0, 0, LD_WIDTH, LD_HEIGHT);
1046:Src/app.c     ****   nema_clear(0);
1047:Src/app.c     ****   /* bind source texture */
1048:Src/app.c     ****   nema_bind_src_tex((uintptr_t) buffer, LCD_BG_WIDTH, LCD_BG_HEIGHT, NEMA_RGBA8888, -1, NEMA_FILTER
1049:Src/app.c     ****   nema_enable_tiling(1);
1050:Src/app.c     ****   nema_set_blend_blit(NEMA_BL_SRC);
1051:Src/app.c     **** 
1052:Src/app.c     ****   /* let's go */
1053:Src/app.c     ****   nema_mat3x3_load_identity(t);
1054:Src/app.c     ****   nema_mat3x3_translate(t, -roi->cx, -roi->cy);
1055:Src/app.c     ****   nema_mat3x3_rotate(t, nema_rad_to_deg(-roi->rotation));
1056:Src/app.c     ****   nema_mat3x3_scale(t, LD_WIDTH / roi->w, LD_HEIGHT / roi->h);
1057:Src/app.c     ****   nema_mat3x3_translate(t, LD_WIDTH / 2, LD_HEIGHT / 2);
1058:Src/app.c     ****   for (i = 0 ; i < 4; i++)
1059:Src/app.c     ****     app_transform(t, vertex[i]);
1060:Src/app.c     ****   nema_blit_quad_fit(vertex[0][0], vertex[0][1], vertex[1][0], vertex[1][1],
1061:Src/app.c     ****                      vertex[2][0], vertex[2][1], vertex[3][0], vertex[3][1]);
1062:Src/app.c     **** 
1063:Src/app.c     ****   nema_cl_submit(&cl);
1064:Src/app.c     ****   nema_cl_wait(&cl);
1065:Src/app.c     ****   HAL_ICACHE_Invalidate();
1066:Src/app.c     **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 22


1067:Src/app.c     ****   assert(!nema_get_error());
1068:Src/app.c     **** 
1069:Src/app.c     ****   return 0;
1070:Src/app.c     **** }
1071:Src/app.c     **** #endif
1072:Src/app.c     **** 
1073:Src/app.c     **** // static int hand_landmark_run(uint8_t *buffer, hl_model_info_t *info, roi_t *roi,
1074:Src/app.c     **** //                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
1075:Src/app.c     **** // {
1076:Src/app.c     **** //   int is_clamped;
1077:Src/app.c     **** //   int is_valid;
1078:Src/app.c     **** 
1079:Src/app.c     **** //   is_clamped = hand_landmark_prepare_input(buffer, roi, info);
1080:Src/app.c     **** //   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
1081:Src/app.c     **** //   if (is_clamped)
1082:Src/app.c     **** //     return 0;
1083:Src/app.c     **** 
1084:Src/app.c     **** //   LL_ATON_RT_Main(&NN_Instance_hand_landmark);
1085:Src/app.c     **** 
1086:Src/app.c     **** //   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
1087:Src/app.c     **** 
1088:Src/app.c     **** //   /* Discard nn_out region (used by pp_input and pp_outputs variables) to avoid Dcache evictions
1089:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1090:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
1091:Src/app.c     **** 
1092:Src/app.c     **** //   return is_valid;
1093:Src/app.c     **** // }
1094:Src/app.c     **** 
1095:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
1096:Src/app.c     **** static void app_rot_init(hl_model_info_t *info)
1097:Src/app.c     **** {
1098:Src/app.c     ****   GFXMMU_PackingTypeDef packing = { 0 };
1099:Src/app.c     ****   int ret;
1100:Src/app.c     **** 
1101:Src/app.c     ****   printf("init nema\n");
1102:Src/app.c     ****   nema_init();
1103:Src/app.c     ****   assert(!nema_get_error());
1104:Src/app.c     ****   nema_ext_hold_enable(2);
1105:Src/app.c     ****   nema_ext_hold_irq_enable(2);
1106:Src/app.c     ****   nema_ext_hold_enable(3);
1107:Src/app.c     ****   nema_ext_hold_irq_enable(3);
1108:Src/app.c     ****   printf("init nema DONE %s\n", nema_get_sw_device_name());
1109:Src/app.c     **** 
1110:Src/app.c     ****   hgfxmmu.Instance = GFXMMU;
1111:Src/app.c     ****   hgfxmmu.Init.BlockSize = GFXMMU_12BYTE_BLOCKS;
1112:Src/app.c     ****   hgfxmmu.Init.AddressTranslation = DISABLE;
1113:Src/app.c     ****   ret = HAL_GFXMMU_Init(&hgfxmmu);
1114:Src/app.c     ****   assert(ret == HAL_OK);
1115:Src/app.c     **** 
1116:Src/app.c     ****   packing.Buffer0Activation = ENABLE;
1117:Src/app.c     ****   packing.Buffer0Mode       = GFXMMU_PACKING_MSB_REMOVE;
1118:Src/app.c     ****   packing.DefaultAlpha      = 0xff;
1119:Src/app.c     ****   ret = HAL_GFXMMU_ConfigPacking(&hgfxmmu, &packing);
1120:Src/app.c     ****   assert(ret == HAL_OK);
1121:Src/app.c     **** 
1122:Src/app.c     ****   cl = nema_cl_create_sized(8192);
1123:Src/app.c     ****   nema_cl_bind_circular(&cl);
ARM GAS  /tmp/ccReAcTZ.s 			page 23


1124:Src/app.c     **** }
1125:Src/app.c     **** #endif
1126:Src/app.c     **** 
1127:Src/app.c     **** static float ld_compute_rotation(ld_point_t lm[LD_LANDMARK_NB])
1128:Src/app.c     **** {
1129:Src/app.c     ****   float x0, y0, x1, y1;
1130:Src/app.c     ****   float rotation;
1131:Src/app.c     **** 
1132:Src/app.c     ****   x0 = lm[0].x;
1133:Src/app.c     ****   y0 = lm[0].y;
1134:Src/app.c     ****   x1 = lm[9].x;
1135:Src/app.c     ****   y1 = lm[9].y;
1136:Src/app.c     **** 
1137:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
1138:Src/app.c     **** 
1139:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
1140:Src/app.c     **** }
1141:Src/app.c     **** 
1142:Src/app.c     **** static void ld_to_roi(ld_point_t lm[LD_LANDMARK_NB], roi_t *roi, pd_pp_box_t *next_pd)
1143:Src/app.c     **** {
1144:Src/app.c     ****   const int pd_to_ld_idx[AI_PD_MODEL_PP_NB_KEYPOINTS] = {0, 5, 9, 13, 17, 1, 2};
1145:Src/app.c     ****   const int indices[] = {0, 1, 2, 3, 5, 6, 9, 10, 13, 14, 17, 18};
1146:Src/app.c     ****   float max_x, max_y, min_x, min_y;
1147:Src/app.c     ****   int i;
1148:Src/app.c     **** 
1149:Src/app.c     ****   max_x = max_y = -10000;
1150:Src/app.c     ****   min_x = min_y =  10000;
1151:Src/app.c     **** 
1152:Src/app.c     ****   roi->rotation = ld_compute_rotation(lm);
1153:Src/app.c     **** 
1154:Src/app.c     ****   for (i = 0; i < ARRAY_NB(indices); i++) {
1155:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
1156:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
1157:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
1158:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
1159:Src/app.c     ****   }
1160:Src/app.c     **** 
1161:Src/app.c     ****   roi->cx = (max_x + min_x) / 2;
1162:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
1163:Src/app.c     ****   roi->w = (max_x - min_x);
1164:Src/app.c     ****   roi->h = (max_y - min_y);
1165:Src/app.c     **** 
1166:Src/app.c     ****   next_pd->x_center = roi->cx;
1167:Src/app.c     ****   next_pd->y_center = roi->cy;
1168:Src/app.c     ****   next_pd->width = roi->w;
1169:Src/app.c     ****   next_pd->height = roi->h;
1170:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
1171:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
1172:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
1173:Src/app.c     ****   }
1174:Src/app.c     **** }
1175:Src/app.c     **** 
1176:Src/app.c     **** static void compute_next_roi(roi_t *src, ld_point_t lm_in[LD_LANDMARK_NB], roi_t *next, pd_pp_box_t
1177:Src/app.c     **** {
1178:Src/app.c     ****   const float shift_x = 0;
1179:Src/app.c     ****   const float shift_y = -0.1;
1180:Src/app.c     ****   const float scale = 2.0;
ARM GAS  /tmp/ccReAcTZ.s 			page 24


1181:Src/app.c     ****   ld_point_t lm[LD_LANDMARK_NB];
1182:Src/app.c     ****   roi_t roi;
1183:Src/app.c     ****   int i;
1184:Src/app.c     **** 
1185:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++)
1186:Src/app.c     ****     decode_ld_landmark(src, &lm_in[i], &lm[i]);
1187:Src/app.c     **** 
1188:Src/app.c     ****   ld_to_roi(lm, &roi, next_pd);
1189:Src/app.c     ****   roi_shift_and_scale(&roi, shift_x, shift_y, scale, scale);
1190:Src/app.c     **** 
1191:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1192:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
1193:Src/app.c     ****   roi.rotation = 0;
1194:Src/app.c     **** #endif
1195:Src/app.c     **** 
1196:Src/app.c     ****   *next = roi;
1197:Src/app.c     **** }
1198:Src/app.c     **** static void nn_thread_fct(void *arg)
1199:Src/app.c     **** {
1200:Src/app.c     ****   float nn_period_filtered_ms = 0;
1201:Src/app.c     ****   // Filtered inference times, will be updated with 0
1202:Src/app.c     ****   float pd_filtered_ms = 0;
1203:Src/app.c     ****   float ld_filtered_ms = 0;
1204:Src/app.c     **** 
1205:Src/app.c     ****   uint32_t nn_period_ms;
1206:Src/app.c     ****   uint32_t nn_period[2];
1207:Src/app.c     ****   uint8_t *nn_pipe_dst;
1208:Src/app.c     ****   int is_tracking;
1209:Src/app.c     ****   uint32_t pd_ms;
1210:Src/app.c     ****   uint32_t hl_ms;
1211:Src/app.c     ****   int ret;
1212:Src/app.c     **** 
1213:Src/app.c     ****   /*
1214:Src/app.c     ****    * 2. Initialize the YOLO model
1215:Src/app.c     ****    * This calls the init function to set up buffers and parameters.
1216:Src/app.c     ****    * If the application runs past this point, the initialization is successful.
1217:Src/app.c     ****    */
1218:Src/app.c     ****   yolo_detector_info_t yolo_info;
1219:Src/app.c     ****   yolo_detector_init(&yolo_info);
1220:Src/app.c     ****   int detection_nb;
1221:Src/app.c     **** 
1222:Src/app.c     ****   /*** App Loop ***************************************************************/
1223:Src/app.c     ****   nn_period[1] = HAL_GetTick();
1224:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1225:Src/app.c     ****   assert(nn_pipe_dst);
1226:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1227:Src/app.c     ****   while (1)
1228:Src/app.c     ****   {
1229:Src/app.c     ****     uint8_t *capture_buffer;
1230:Src/app.c     **** 
1231:Src/app.c     ****     // Standard frame timing
1232:Src/app.c     ****     nn_period[0] = nn_period[1];
1233:Src/app.c     ****     nn_period[1] = HAL_GetTick();
1234:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
1235:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
1236:Src/app.c     **** 
1237:Src/app.c     ****     // Get camera buffer to keep the pipeline moving
ARM GAS  /tmp/ccReAcTZ.s 			page 25


1238:Src/app.c     ****     capture_buffer = bqueue_get_ready(&nn_input_queue);
1239:Src/app.c     ****     assert(capture_buffer);
1240:Src/app.c     **** 
1241:Src/app.c     **** 
1242:Src/app.c     ****     /**************************************************************************
1243:Src/app.c     ****      * MODEL EXECUTION 
1244:Src/app.c     ****      **************************************************************************/
1245:Src/app.c     ****     detection_nb = yolo_detector_run(capture_buffer, &yolo_info, &pd_ms);
1246:Src/app.c     ****     
1247:Src/app.c     ****     is_tracking = 0; // Force state to "not tracking"
1248:Src/app.c     ****     hl_ms = 0;       // Set inference time to 0
1249:Src/app.c     **** 
1250:Src/app.c     ****     // Update filtered times with our zero values
1251:Src/app.c     ****     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1252:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1253:Src/app.c     **** 
1254:Src/app.c     ****     // We are done with the buffer, release it
1255:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
1256:Src/app.c     **** 
1257:Src/app.c     **** 
1258:Src/app.c     ****     /*
1259:Src/app.c     ****      * Update display stats with the "no detection" info
1260:Src/app.c     ****      */
1261:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1262:Src/app.c     ****     assert(ret == pdTRUE);
1263:Src/app.c     **** 
1264:Src/app.c     ****     // Populate display structure with valid, non-model data
1265:Src/app.c     ****     disp.info.pd_ms = (int)pd_filtered_ms;
1266:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
1267:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
1268:Src/app.c     ****     disp.info.pd_hand_nb = 0;
1269:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
1270:Src/app.c     ****     disp.info.hands[0].is_valid = 0; // Set hand as invalid
1271:Src/app.c     **** 
1272:Src/app.c     ****     // NOTE: We no longer copy box or landmark data, as none exists.
1273:Src/app.c     ****     // The display thread should check the 'is_valid' flag before drawing.
1274:Src/app.c     **** 
1275:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1276:Src/app.c     ****     assert(ret == pdTRUE);
1277:Src/app.c     **** 
1278:Src/app.c     ****     // Signal the display thread to update
1279:Src/app.c     ****     xSemaphoreGive(disp.update);
1280:Src/app.c     ****   }
1281:Src/app.c     **** }
1282:Src/app.c     **** 
1283:Src/app.c     **** // static void backup(void *arg)
1284:Src/app.c     **** // {
1285:Src/app.c     **** //   float nn_period_filtered_ms = 0;
1286:Src/app.c     **** //   float pd_filtered_ms = 0;
1287:Src/app.c     **** //   float ld_filtered_ms = 0;
1288:Src/app.c     **** //   hl_model_info_t hl_info;
1289:Src/app.c     **** //   pd_model_info_t pd_info;
1290:Src/app.c     **** //   uint32_t nn_period_ms;
1291:Src/app.c     **** //   uint32_t nn_period[2];
1292:Src/app.c     **** //   uint8_t *nn_pipe_dst;
1293:Src/app.c     **** //   pd_pp_point_t box_next_keypoints[AI_PD_MODEL_PP_NB_KEYPOINTS];
1294:Src/app.c     **** //   pd_pp_box_t box_next;
ARM GAS  /tmp/ccReAcTZ.s 			page 26


1295:Src/app.c     **** //   int is_tracking = 0;
1296:Src/app.c     **** //   roi_t roi_next;
1297:Src/app.c     **** //   uint32_t pd_ms;
1298:Src/app.c     **** //   uint32_t hl_ms;
1299:Src/app.c     **** //   int ret;
1300:Src/app.c     **** //   int j;
1301:Src/app.c     **** 
1302:Src/app.c     **** //   /* Current tracking algo only support single hand */
1303:Src/app.c     **** //   assert(PD_MAX_HAND_NB == 1);
1304:Src/app.c     **** 
1305:Src/app.c     **** //   /* setup models buffer info */
1306:Src/app.c     **** //   palm_detector_init(&pd_info);
1307:Src/app.c     **** //   box_next.pKps = box_next_keypoints;
1308:Src/app.c     **** //   hand_landmark_init(&hl_info);
1309:Src/app.c     **** 
1310:Src/app.c     **** // #if HAS_ROTATION_SUPPORT == 1
1311:Src/app.c     **** //   app_rot_init(&hl_info);
1312:Src/app.c     **** // #endif
1313:Src/app.c     **** 
1314:Src/app.c     **** //   /*** App Loop ***************************************************************/
1315:Src/app.c     **** //   nn_period[1] = HAL_GetTick();
1316:Src/app.c     **** //   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1317:Src/app.c     **** //   assert(nn_pipe_dst);
1318:Src/app.c     **** //   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1319:Src/app.c     **** //   while (1)
1320:Src/app.c     **** //   {
1321:Src/app.c     **** //     uint8_t *capture_buffer;
1322:Src/app.c     **** //     int idx_for_resize;
1323:Src/app.c     **** 
1324:Src/app.c     **** //     nn_period[0] = nn_period[1];
1325:Src/app.c     **** //     nn_period[1] = HAL_GetTick();
1326:Src/app.c     **** //     nn_period_ms = nn_period[1] - nn_period[0];
1327:Src/app.c     **** //     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 :
1328:Src/app.c     **** 
1329:Src/app.c     **** //     capture_buffer = bqueue_get_ready(&nn_input_queue);
1330:Src/app.c     **** //     assert(capture_buffer);
1331:Src/app.c     **** //     idx_for_resize = frame_event_nb_for_resize % DISPLAY_BUFFER_NB;
1332:Src/app.c     **** 
1333:Src/app.c     **** //     /* Only start palm detector when not tracking hand */
1334:Src/app.c     **** //     if (!is_tracking) {
1335:Src/app.c     **** //       is_tracking = palm_detector_run(capture_buffer, &pd_info, &pd_ms);
1336:Src/app.c     **** //       box_next.prob = pd_info.pd_out.pOutData[0].prob;
1337:Src/app.c     **** //     } else {
1338:Src/app.c     **** //       rois[0] = roi_next;
1339:Src/app.c     **** //       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
1340:Src/app.c     **** //       pd_ms = 0;
1341:Src/app.c     **** //     }
1342:Src/app.c     **** //     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1343:Src/app.c     **** //     bqueue_put_free(&nn_input_queue);
1344:Src/app.c     **** 
1345:Src/app.c     **** //     /* then run hand landmark detector if needed */
1346:Src/app.c     **** //     if (is_tracking) {
1347:Src/app.c     **** //       hl_ms = HAL_GetTick();
1348:Src/app.c     **** //       is_tracking = hand_landmark_run(lcd_bg_buffer[idx_for_resize], &hl_info, &rois[0], ld_land
1349:Src/app.c     **** //       CACHE_OP(SCB_InvalidateDCache_by_Addr(lcd_bg_buffer[idx_for_resize], sizeof(lcd_bg_buffer[
1350:Src/app.c     **** //       if (is_tracking)
1351:Src/app.c     **** //         compute_next_roi(&rois[0], ld_landmarks[0], &roi_next, &box_next);
ARM GAS  /tmp/ccReAcTZ.s 			page 27


1352:Src/app.c     **** //       hl_ms = HAL_GetTick() - hl_ms;
1353:Src/app.c     **** //     } else {
1354:Src/app.c     **** //       hl_ms = 0;
1355:Src/app.c     **** //     }
1356:Src/app.c     **** //     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1357:Src/app.c     **** 
1358:Src/app.c     **** //     /* update display stats */
1359:Src/app.c     **** //     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1360:Src/app.c     **** //     assert(ret == pdTRUE);
1361:Src/app.c     **** //     disp.info.pd_ms = is_tracking ? 0 : (int)pd_filtered_ms;
1362:Src/app.c     **** //     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
1363:Src/app.c     **** //     disp.info.nn_period_ms = nn_period_filtered_ms;
1364:Src/app.c     **** //     disp.info.pd_hand_nb = is_tracking;
1365:Src/app.c     **** //     disp.info.pd_max_prob = pd_info.pd_out.pOutData[0].prob;
1366:Src/app.c     **** //     disp.info.hands[0].is_valid = is_tracking;
1367:Src/app.c     **** //     copy_pd_box(&disp.info.hands[0].pd_hands, &pd_info.pd_out.pOutData[0]);
1368:Src/app.c     **** //     disp.info.hands[0].roi = rois[0];
1369:Src/app.c     **** //     for (j = 0; j < LD_LANDMARK_NB; j++)
1370:Src/app.c     **** //       disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1371:Src/app.c     **** //     ret = xSemaphoreGive(disp.lock);
1372:Src/app.c     **** //     assert(ret == pdTRUE);
1373:Src/app.c     **** 
1374:Src/app.c     **** //     /* It's possible xqueue is empty if display is slow. So don't check error code that may by p
1375:Src/app.c     **** //     xSemaphoreGive(disp.update);
1376:Src/app.c     **** //   }
1377:Src/app.c     **** // }
1378:Src/app.c     **** 
1379:Src/app.c     **** static void dp_update_drawing_area()
1380:Src/app.c     **** {
1381:Src/app.c     ****   int ret;
1382:Src/app.c     **** 
1383:Src/app.c     ****   __disable_irq();
1384:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
1385:Src/app.c     ****   assert(ret == HAL_OK);
1386:Src/app.c     ****   __enable_irq();
1387:Src/app.c     **** }
1388:Src/app.c     **** 
1389:Src/app.c     **** static void dp_commit_drawing_area()
1390:Src/app.c     **** {
1391:Src/app.c     ****   int ret;
1392:Src/app.c     **** 
1393:Src/app.c     ****   __disable_irq();
1394:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
1395:Src/app.c     ****   assert(ret == HAL_OK);
1396:Src/app.c     ****   __enable_irq();
1397:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
1398:Src/app.c     **** }
1399:Src/app.c     **** 
1400:Src/app.c     **** static void on_ld_toggle_button_click(void *args)
1401:Src/app.c     **** {
1402:Src/app.c     ****   display_t *disp = (display_t *) args;
1403:Src/app.c     ****   int ret;
1404:Src/app.c     **** 
1405:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1406:Src/app.c     ****   assert(ret == pdTRUE);
1407:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
1408:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
ARM GAS  /tmp/ccReAcTZ.s 			page 28


1409:Src/app.c     ****   assert(ret == pdTRUE);
1410:Src/app.c     **** }
1411:Src/app.c     **** 
1412:Src/app.c     **** static void on_pd_toggle_button_click(void *args)
1413:Src/app.c     **** {
1414:Src/app.c     ****   display_t *disp = (display_t *) args;
1415:Src/app.c     ****   int ret;
1416:Src/app.c     **** 
1417:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1418:Src/app.c     ****   assert(ret == pdTRUE);
1419:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
1420:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1421:Src/app.c     ****   assert(ret == pdTRUE);
1422:Src/app.c     **** }
1423:Src/app.c     **** 
1424:Src/app.c     **** static void dp_thread_fct(void *arg)
1425:Src/app.c     **** {
1426:Src/app.c     ****   button_t ld_toggle_button;
1427:Src/app.c     ****   button_t hd_toggle_button;
1428:Src/app.c     ****   uint32_t disp_ms = 0;
1429:Src/app.c     ****   display_info_t info;
1430:Src/app.c     ****   uint32_t ts;
1431:Src/app.c     ****   int ret;
1432:Src/app.c     **** 
1433:Src/app.c     **** #ifdef STM32N6570_DK_REV
1434:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER1, on_ld_toggle_button_click, &disp);
1435:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
1436:Src/app.c     **** #else
1437:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER, on_ld_toggle_button_click, &disp);
1438:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_USER, on_pd_toggle_button_click, &disp);
1439:Src/app.c     **** #endif
1440:Src/app.c     ****   while (1)
1441:Src/app.c     ****   {
1442:Src/app.c     ****     ret = xSemaphoreTake(disp.update, portMAX_DELAY);
1443:Src/app.c     ****     assert(ret == pdTRUE);
1444:Src/app.c     **** 
1445:Src/app.c     ****     button_process(&ld_toggle_button);
1446:Src/app.c     ****     button_process(&hd_toggle_button);
1447:Src/app.c     **** 
1448:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1449:Src/app.c     ****     assert(ret == pdTRUE);
1450:Src/app.c     ****     info = disp.info;
1451:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1452:Src/app.c     ****     assert(ret == pdTRUE);
1453:Src/app.c     ****     info.disp_ms = disp_ms;
1454:Src/app.c     **** 
1455:Src/app.c     ****     ts = HAL_GetTick();
1456:Src/app.c     ****     dp_update_drawing_area();
1457:Src/app.c     ****     Display_NetworkOutput(&info);
1458:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
1459:Src/app.c     ****     dp_commit_drawing_area();
1460:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
1461:Src/app.c     ****   }
1462:Src/app.c     **** }
1463:Src/app.c     **** 
1464:Src/app.c     **** static void isp_thread_fct(void *arg)
1465:Src/app.c     **** {
ARM GAS  /tmp/ccReAcTZ.s 			page 29


 125              		.loc 1 1465 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		.loc 1 1465 1 is_stmt 0 view .LVU31
 130 0000 10B5     		push	{r4, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 4, -8
 133              		.cfi_offset 14, -4
1466:Src/app.c     ****   int ret;
1467:Src/app.c     **** 
1468:Src/app.c     ****   while (1) {
1469:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 134              		.loc 1 1469 11 view .LVU32
 135 0002 094C     		ldr	r4, .L11
 136              	.LVL5:
 137              	.L10:
1466:Src/app.c     ****   int ret;
 138              		.loc 1 1466 3 is_stmt 1 view .LVU33
1468:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 139              		.loc 1 1468 3 view .LVU34
 140              		.loc 1 1469 5 view .LVU35
 141              		.loc 1 1469 11 is_stmt 0 view .LVU36
 142 0004 4FF0FF31 		mov	r1, #-1
 143 0008 2068     		ldr	r0, [r4]
 144 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 145              	.LVL6:
1470:Src/app.c     ****     assert(ret == pdTRUE);
 146              		.loc 1 1470 5 is_stmt 1 view .LVU37
 147 000e 0128     		cmp	r0, #1
 148 0010 06D0     		beq	.L9
 149              		.loc 1 1470 5 is_stmt 0 discriminator 1 view .LVU38
 150 0012 40F2BE51 		movw	r1, #1470
 151 0016 054B     		ldr	r3, .L11+4
 152 0018 054A     		ldr	r2, .L11+8
 153 001a 0648     		ldr	r0, .L11+12
 154              	.LVL7:
 155              		.loc 1 1470 5 discriminator 1 view .LVU39
 156 001c FFF7FEFF 		bl	__assert_func
 157              	.LVL8:
 158              	.L9:
1471:Src/app.c     **** 
1472:Src/app.c     ****     CAM_IspUpdate();
 159              		.loc 1 1472 5 is_stmt 1 view .LVU40
 160 0020 FFF7FEFF 		bl	CAM_IspUpdate
 161              	.LVL9:
1468:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 162              		.loc 1 1468 9 view .LVU41
1469:Src/app.c     ****     assert(ret == pdTRUE);
 163              		.loc 1 1469 9 is_stmt 0 view .LVU42
 164 0024 EEE7     		b	.L10
 165              	.L12:
 166 0026 00BF     		.align	2
 167              	.L11:
 168 0028 00000000 		.word	isp_sem
 169 002c 00000000 		.word	.LC1
 170 0030 00000000 		.word	__func__.17
ARM GAS  /tmp/ccReAcTZ.s 			page 30


 171 0034 0E000000 		.word	.LC2
 172              		.cfi_endproc
 173              	.LFE7405:
 175              		.section	.text.on_pd_toggle_button_click,"ax",%progbits
 176              		.align	1
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 181              	on_pd_toggle_button_click:
 182              	.LVL10:
 183              	.LFB7403:
1413:Src/app.c     ****   display_t *disp = (display_t *) args;
 184              		.loc 1 1413 1 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
1414:Src/app.c     ****   int ret;
 188              		.loc 1 1414 3 view .LVU44
1415:Src/app.c     **** 
 189              		.loc 1 1415 3 view .LVU45
1417:Src/app.c     ****   assert(ret == pdTRUE);
 190              		.loc 1 1417 3 view .LVU46
1413:Src/app.c     ****   display_t *disp = (display_t *) args;
 191              		.loc 1 1413 1 is_stmt 0 view .LVU47
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
1417:Src/app.c     ****   assert(ret == pdTRUE);
 196              		.loc 1 1417 9 view .LVU48
 197 0002 4FF0FF31 		mov	r1, #-1
1413:Src/app.c     ****   display_t *disp = (display_t *) args;
 198              		.loc 1 1413 1 view .LVU49
 199 0006 0446     		mov	r4, r0
1417:Src/app.c     ****   assert(ret == pdTRUE);
 200              		.loc 1 1417 9 view .LVU50
 201 0008 406D     		ldr	r0, [r0, #84]
 202              	.LVL11:
1417:Src/app.c     ****   assert(ret == pdTRUE);
 203              		.loc 1 1417 9 view .LVU51
 204 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 205              	.LVL12:
1418:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 206              		.loc 1 1418 3 is_stmt 1 view .LVU52
 207 000e 0128     		cmp	r0, #1
 208 0010 06D0     		beq	.L14
1418:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 209              		.loc 1 1418 3 is_stmt 0 discriminator 1 view .LVU53
 210 0012 40F28A51 		movw	r1, #1418
 211 0016 0D4B     		ldr	r3, .L17
 212 0018 0D4A     		ldr	r2, .L17+4
 213              	.L16:
1421:Src/app.c     **** }
 214              		.loc 1 1421 3 discriminator 1 view .LVU54
 215 001a 0E48     		ldr	r0, .L17+8
 216              	.LVL13:
1421:Src/app.c     **** }
ARM GAS  /tmp/ccReAcTZ.s 			page 31


 217              		.loc 1 1421 3 discriminator 1 view .LVU55
 218 001c FFF7FEFF 		bl	__assert_func
 219              	.LVL14:
 220              	.L14:
1419:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 221              		.loc 1 1419 3 is_stmt 1 view .LVU56
1419:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 222              		.loc 1 1419 32 is_stmt 0 view .LVU57
 223 0020 D4F8C030 		ldr	r3, [r4, #192]
1420:Src/app.c     ****   assert(ret == pdTRUE);
 224              		.loc 1 1420 9 view .LVU58
 225 0024 606D     		ldr	r0, [r4, #84]
 226              	.LVL15:
1419:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 227              		.loc 1 1419 32 view .LVU59
 228 0026 B3FA83F3 		clz	r3, r3
 229 002a 5B09     		lsrs	r3, r3, #5
1419:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 230              		.loc 1 1419 30 view .LVU60
 231 002c C4F8C030 		str	r3, [r4, #192]
1420:Src/app.c     ****   assert(ret == pdTRUE);
 232              		.loc 1 1420 3 is_stmt 1 view .LVU61
1420:Src/app.c     ****   assert(ret == pdTRUE);
 233              		.loc 1 1420 9 is_stmt 0 view .LVU62
 234 0030 0023     		movs	r3, #0
 235 0032 1A46     		mov	r2, r3
 236 0034 1946     		mov	r1, r3
 237 0036 FFF7FEFF 		bl	xQueueGenericSend
 238              	.LVL16:
1421:Src/app.c     **** }
 239              		.loc 1 1421 3 is_stmt 1 view .LVU63
 240 003a 0128     		cmp	r0, #1
 241 003c 04D0     		beq	.L13
1421:Src/app.c     **** }
 242              		.loc 1 1421 3 is_stmt 0 discriminator 1 view .LVU64
 243 003e 40F28D51 		movw	r1, #1421
 244 0042 024B     		ldr	r3, .L17
 245 0044 024A     		ldr	r2, .L17+4
 246 0046 E8E7     		b	.L16
 247              	.L13:
1422:Src/app.c     **** 
 248              		.loc 1 1422 1 view .LVU65
 249 0048 10BD     		pop	{r4, pc}
 250              	.LVL17:
 251              	.L18:
1422:Src/app.c     **** 
 252              		.loc 1 1422 1 view .LVU66
 253 004a 00BF     		.align	2
 254              	.L17:
 255 004c 00000000 		.word	.LC1
 256 0050 00000000 		.word	__func__.15
 257 0054 0E000000 		.word	.LC2
 258              		.cfi_endproc
 259              	.LFE7403:
 261              		.section	.text.on_ld_toggle_button_click,"ax",%progbits
 262              		.align	1
 263              		.syntax unified
ARM GAS  /tmp/ccReAcTZ.s 			page 32


 264              		.thumb
 265              		.thumb_func
 267              	on_ld_toggle_button_click:
 268              	.LVL18:
 269              	.LFB7402:
1401:Src/app.c     ****   display_t *disp = (display_t *) args;
 270              		.loc 1 1401 1 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
1402:Src/app.c     ****   int ret;
 274              		.loc 1 1402 3 view .LVU68
1403:Src/app.c     **** 
 275              		.loc 1 1403 3 view .LVU69
1405:Src/app.c     ****   assert(ret == pdTRUE);
 276              		.loc 1 1405 3 view .LVU70
1401:Src/app.c     ****   display_t *disp = (display_t *) args;
 277              		.loc 1 1401 1 is_stmt 0 view .LVU71
 278 0000 10B5     		push	{r4, lr}
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 4, -8
 281              		.cfi_offset 14, -4
1405:Src/app.c     ****   assert(ret == pdTRUE);
 282              		.loc 1 1405 9 view .LVU72
 283 0002 4FF0FF31 		mov	r1, #-1
1401:Src/app.c     ****   display_t *disp = (display_t *) args;
 284              		.loc 1 1401 1 view .LVU73
 285 0006 0446     		mov	r4, r0
1405:Src/app.c     ****   assert(ret == pdTRUE);
 286              		.loc 1 1405 9 view .LVU74
 287 0008 406D     		ldr	r0, [r0, #84]
 288              	.LVL19:
1405:Src/app.c     ****   assert(ret == pdTRUE);
 289              		.loc 1 1405 9 view .LVU75
 290 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 291              	.LVL20:
1406:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 292              		.loc 1 1406 3 is_stmt 1 view .LVU76
 293 000e 0128     		cmp	r0, #1
 294 0010 06D0     		beq	.L20
1406:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 295              		.loc 1 1406 3 is_stmt 0 discriminator 1 view .LVU77
 296 0012 40F27E51 		movw	r1, #1406
 297 0016 0D4B     		ldr	r3, .L23
 298 0018 0D4A     		ldr	r2, .L23+4
 299              	.L22:
1409:Src/app.c     **** }
 300              		.loc 1 1409 3 discriminator 1 view .LVU78
 301 001a 0E48     		ldr	r0, .L23+8
 302              	.LVL21:
1409:Src/app.c     **** }
 303              		.loc 1 1409 3 discriminator 1 view .LVU79
 304 001c FFF7FEFF 		bl	__assert_func
 305              	.LVL22:
 306              	.L20:
1407:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 307              		.loc 1 1407 3 is_stmt 1 view .LVU80
ARM GAS  /tmp/ccReAcTZ.s 			page 33


1407:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 308              		.loc 1 1407 32 is_stmt 0 view .LVU81
 309 0020 D4F8BC30 		ldr	r3, [r4, #188]
1408:Src/app.c     ****   assert(ret == pdTRUE);
 310              		.loc 1 1408 9 view .LVU82
 311 0024 606D     		ldr	r0, [r4, #84]
 312              	.LVL23:
1407:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 313              		.loc 1 1407 32 view .LVU83
 314 0026 B3FA83F3 		clz	r3, r3
 315 002a 5B09     		lsrs	r3, r3, #5
1407:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 316              		.loc 1 1407 30 view .LVU84
 317 002c C4F8BC30 		str	r3, [r4, #188]
1408:Src/app.c     ****   assert(ret == pdTRUE);
 318              		.loc 1 1408 3 is_stmt 1 view .LVU85
1408:Src/app.c     ****   assert(ret == pdTRUE);
 319              		.loc 1 1408 9 is_stmt 0 view .LVU86
 320 0030 0023     		movs	r3, #0
 321 0032 1A46     		mov	r2, r3
 322 0034 1946     		mov	r1, r3
 323 0036 FFF7FEFF 		bl	xQueueGenericSend
 324              	.LVL24:
1409:Src/app.c     **** }
 325              		.loc 1 1409 3 is_stmt 1 view .LVU87
 326 003a 0128     		cmp	r0, #1
 327 003c 04D0     		beq	.L19
1409:Src/app.c     **** }
 328              		.loc 1 1409 3 is_stmt 0 discriminator 1 view .LVU88
 329 003e 40F28151 		movw	r1, #1409
 330 0042 024B     		ldr	r3, .L23
 331 0044 024A     		ldr	r2, .L23+4
 332 0046 E8E7     		b	.L22
 333              	.L19:
1410:Src/app.c     **** 
 334              		.loc 1 1410 1 view .LVU89
 335 0048 10BD     		pop	{r4, pc}
 336              	.LVL25:
 337              	.L24:
1410:Src/app.c     **** 
 338              		.loc 1 1410 1 view .LVU90
 339 004a 00BF     		.align	2
 340              	.L23:
 341 004c 00000000 		.word	.LC1
 342 0050 00000000 		.word	__func__.14
 343 0054 0E000000 		.word	.LC2
 344              		.cfi_endproc
 345              	.LFE7402:
 347              		.section	.text.button_process,"ax",%progbits
 348              		.align	1
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 353              	button_process:
 354              	.LVL26:
 355              	.LFB7367:
 398:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
ARM GAS  /tmp/ccReAcTZ.s 			page 34


 356              		.loc 1 398 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 399:Src/app.c     **** 
 360              		.loc 1 399 3 view .LVU92
 398:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 361              		.loc 1 398 1 is_stmt 0 view .LVU93
 362 0000 38B5     		push	{r3, r4, r5, lr}
 363              		.cfi_def_cfa_offset 16
 364              		.cfi_offset 3, -16
 365              		.cfi_offset 4, -12
 366              		.cfi_offset 5, -8
 367              		.cfi_offset 14, -4
 398:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 368              		.loc 1 398 1 view .LVU94
 369 0002 0446     		mov	r4, r0
 399:Src/app.c     **** 
 370              		.loc 1 399 15 view .LVU95
 371 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 372              	.LVL27:
 399:Src/app.c     **** 
 373              		.loc 1 399 15 view .LVU96
 374 0006 FFF7FEFF 		bl	BSP_PB_GetState
 375              	.LVL28:
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 376              		.loc 1 401 6 view .LVU97
 377 000a 6368     		ldr	r3, [r4, #4]
 399:Src/app.c     **** 
 378              		.loc 1 399 15 view .LVU98
 379 000c 0546     		mov	r5, r0
 380              	.LVL29:
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 381              		.loc 1 401 3 is_stmt 1 view .LVU99
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 382              		.loc 1 401 6 is_stmt 0 view .LVU100
 383 000e 8342     		cmp	r3, r0
 384 0010 04D0     		beq	.L26
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 385              		.loc 1 401 30 discriminator 1 view .LVU101
 386 0012 18B1     		cbz	r0, .L26
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 387              		.loc 1 401 43 discriminator 2 view .LVU102
 388 0014 A368     		ldr	r3, [r4, #8]
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 389              		.loc 1 401 39 discriminator 2 view .LVU103
 390 0016 0BB1     		cbz	r3, .L26
 402:Src/app.c     **** 
 391              		.loc 1 402 5 is_stmt 1 view .LVU104
 392 0018 E068     		ldr	r0, [r4, #12]
 393              	.LVL30:
 402:Src/app.c     **** 
 394              		.loc 1 402 5 is_stmt 0 view .LVU105
 395 001a 9847     		blx	r3
 396              	.LVL31:
 397              	.L26:
 404:Src/app.c     **** }
ARM GAS  /tmp/ccReAcTZ.s 			page 35


 398              		.loc 1 404 3 is_stmt 1 view .LVU106
 404:Src/app.c     **** }
 399              		.loc 1 404 17 is_stmt 0 view .LVU107
 400 001c 6560     		str	r5, [r4, #4]
 405:Src/app.c     **** 
 401              		.loc 1 405 1 view .LVU108
 402 001e 38BD     		pop	{r3, r4, r5, pc}
 405:Src/app.c     **** 
 403              		.loc 1 405 1 view .LVU109
 404              		.cfi_endproc
 405              	.LFE7367:
 407              		.section	.rodata.button_init.part.0.str1.1,"aMS",%progbits,1
 408              	.LC3:
 409 0000 72657420 		.ascii	"ret == BSP_ERROR_NONE\000"
 409      3D3D2042 
 409      53505F45 
 409      52524F52 
 409      5F4E4F4E 
 410              		.section	.text.button_init.part.0,"ax",%progbits
 411              		.align	1
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 416              	button_init.part.0:
 417              	.LFB7410:
 384:Src/app.c     **** {
 418              		.loc 1 384 13 is_stmt 1 view -0
 419              		.cfi_startproc
 420              		@ Volatile: function does not return.
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              	.LVL32:
 384:Src/app.c     **** {
 424              		.loc 1 384 13 is_stmt 0 view .LVU111
 425 0000 08B5     		push	{r3, lr}
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 3, -8
 428              		.cfi_offset 14, -4
 389:Src/app.c     **** 
 429              		.loc 1 389 3 discriminator 1 view .LVU112
 430 0002 40F28511 		movw	r1, #389
 431 0006 024B     		ldr	r3, .L34
 432 0008 024A     		ldr	r2, .L34+4
 433 000a 0348     		ldr	r0, .L34+8
 434 000c FFF7FEFF 		bl	__assert_func
 435              	.LVL33:
 436              	.L35:
 437              		.align	2
 438              	.L34:
 439 0010 00000000 		.word	.LC3
 440 0014 00000000 		.word	__func__.13
 441 0018 0E000000 		.word	.LC2
 442              		.cfi_endproc
 443              	.LFE7410:
 445              		.section	.text.display_ld_hand,"ax",%progbits
 446              		.align	1
 447              		.syntax unified
ARM GAS  /tmp/ccReAcTZ.s 			page 36


 448              		.thumb
 449              		.thumb_func
 451              	display_ld_hand:
 452              	.LVL34:
 453              	.LFB7388:
 724:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 454              		.loc 1 724 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 256
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 725:Src/app.c     ****   roi_t *roi = &hand->roi;
 458              		.loc 1 725 3 view .LVU114
 726:Src/app.c     ****   int x[LD_LANDMARK_NB];
 459              		.loc 1 726 3 view .LVU115
 727:Src/app.c     ****   int y[LD_LANDMARK_NB];
 460              		.loc 1 727 3 view .LVU116
 728:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 461              		.loc 1 728 3 view .LVU117
 729:Src/app.c     ****   ld_point_t decoded;
 462              		.loc 1 729 3 view .LVU118
 730:Src/app.c     ****   int i;
 463              		.loc 1 730 3 view .LVU119
 731:Src/app.c     **** 
 464              		.loc 1 731 3 view .LVU120
 733:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 465              		.loc 1 733 3 view .LVU121
 733:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 466              		.loc 1 733 17 discriminator 1 view .LVU122
 724:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 467              		.loc 1 724 1 is_stmt 0 view .LVU123
 468 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 469              		.cfi_def_cfa_offset 36
 470              		.cfi_offset 4, -36
 471              		.cfi_offset 5, -32
 472              		.cfi_offset 6, -28
 473              		.cfi_offset 7, -24
 474              		.cfi_offset 8, -20
 475              		.cfi_offset 9, -16
 476              		.cfi_offset 10, -12
 477              		.cfi_offset 11, -8
 478              		.cfi_offset 14, -4
 479 0004 2DED0A8B 		vpush.64	{d8, d9, d10, d11, d12}
 480              		.cfi_def_cfa_offset 76
 481              		.cfi_offset 80, -76
 482              		.cfi_offset 81, -72
 483              		.cfi_offset 82, -68
 484              		.cfi_offset 83, -64
 485              		.cfi_offset 84, -60
 486              		.cfi_offset 85, -56
 487              		.cfi_offset 86, -52
 488              		.cfi_offset 87, -48
 489              		.cfi_offset 88, -44
 490              		.cfi_offset 89, -40
 491              	.LBB108:
 492              	.LBB109:
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 493              		.loc 1 719 46 view .LVU124
ARM GAS  /tmp/ccReAcTZ.s 			page 37


 494 0008 90ED0BCA 		vldr.32	s24, [r0, #44]
 495 000c B7EECCCA 		vcvt.f64.f32	d12, s24
 496              	.LBE109:
 497              	.LBE108:
 724:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 498              		.loc 1 724 1 view .LVU125
 499 0010 C3B0     		sub	sp, sp, #268
 500              		.cfi_def_cfa_offset 344
 501              	.LBB114:
 502              	.LBB110:
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 503              		.loc 1 719 46 view .LVU126
 504 0012 B0EE4C0B 		vmov.f64	d0, d12
 505              	.LBE110:
 506              	.LBE114:
 724:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 507              		.loc 1 724 1 view .LVU127
 508 0016 0446     		mov	r4, r0
 509              	.LBB115:
 510              	.LBB111:
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 511              		.loc 1 719 19 view .LVU128
 512 0018 90ED07AA 		vldr.32	s20, [r0, #28]
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 513              		.loc 1 719 40 view .LVU129
 514 001c 90ED09BA 		vldr.32	s22, [r0, #36]
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 515              		.loc 1 719 46 view .LVU130
 516 0020 FFF7FEFF 		bl	cos
 517              	.LVL35:
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 518              		.loc 1 719 46 view .LVU131
 519 0024 B0EE408B 		vmov.f64	d8, d0
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 520              		.loc 1 719 82 discriminator 1 view .LVU132
 521 0028 B0EE4C0B 		vmov.f64	d0, d12
 522 002c FFF7FEFF 		bl	sin
 523              	.LVL36:
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 524              		.loc 1 719 76 discriminator 1 view .LVU133
 525 0030 94ED0A9A 		vldr.32	s18, [r4, #40]
 720:Src/app.c     **** }
 526              		.loc 1 720 19 view .LVU134
 527 0034 94ED086A 		vldr.32	s12, [r4, #32]
 528 0038 2DAD     		add	r5, sp, #180
 529 003a 18A8     		add	r0, sp, #96
 530 003c 0DF10C0C 		add	ip, sp, #12
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 531              		.loc 1 719 19 view .LVU135
 532 0040 B7EECAAA 		vcvt.f64.f32	d10, s20
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 533              		.loc 1 719 40 view .LVU136
 534 0044 B7EECBBA 		vcvt.f64.f32	d11, s22
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 535              		.loc 1 719 76 discriminator 1 view .LVU137
 536 0048 B7EEC99A 		vcvt.f64.f32	d9, s18
 720:Src/app.c     **** }
ARM GAS  /tmp/ccReAcTZ.s 			page 38


 537              		.loc 1 720 19 view .LVU138
 538 004c B7EEC66A 		vcvt.f64.f32	d6, s12
 539 0050 AE46     		mov	lr, r5
 540 0052 0646     		mov	r6, r0
 541 0054 6746     		mov	r7, ip
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 542              		.loc 1 719 33 view .LVU139
 543 0056 B6EE005B 		vmov.f64	d5, #5.0e-1
 544              	.LBE111:
 545              	.LBE115:
 546              	.LBB116:
 547              	.LBB117:
 607:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 548              		.loc 1 607 6 view .LVU140
 549 005a 40F21D39 		movw	r9, #797
 609:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 550              		.loc 1 609 6 view .LVU141
 551 005e 40F2DD18 		movw	r8, #477
 612:Src/app.c     **** }
 552              		.loc 1 612 21 discriminator 3 view .LVU142
 553 0062 1521     		movs	r1, #21
 554              	.LVL37:
 555              	.L38:
 612:Src/app.c     **** }
 556              		.loc 1 612 21 discriminator 3 view .LVU143
 557              	.LBE117:
 558              	.LBE116:
 734:Src/app.c     ****     x[i] = (int)decoded.x;
 559              		.loc 1 734 5 is_stmt 1 view .LVU144
 560              	.LBB122:
 561              	.LBI108:
 713:Src/app.c     **** {
 562              		.loc 1 713 13 view .LVU145
 563              	.LBB112:
 715:Src/app.c     ****   float w = roi->w;
 564              		.loc 1 715 3 view .LVU146
 716:Src/app.c     ****   float h = roi->h;
 565              		.loc 1 716 3 view .LVU147
 717:Src/app.c     **** 
 566              		.loc 1 717 3 view .LVU148
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 567              		.loc 1 719 3 view .LVU149
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 568              		.loc 1 719 29 is_stmt 0 view .LVU150
 569 0064 94ED0C3A 		vldr.32	s6, [r4, #48]
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 570              		.loc 1 719 65 discriminator 1 view .LVU151
 571 0068 94ED0D4A 		vldr.32	s8, [r4, #52]
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 572              		.loc 1 719 29 view .LVU152
 573 006c B7EEC33A 		vcvt.f64.f32	d3, s6
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 574              		.loc 1 719 65 discriminator 1 view .LVU153
 575 0070 B7EEC44A 		vcvt.f64.f32	d4, s8
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 576              		.loc 1 719 33 view .LVU154
 577 0074 33EE453B 		vsub.f64	d3, d3, d5
ARM GAS  /tmp/ccReAcTZ.s 			page 39


 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 578              		.loc 1 719 24 discriminator 1 view .LVU155
 579 0078 B0EE4A7B 		vmov.f64	d7, d10
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 580              		.loc 1 719 40 view .LVU156
 581 007c 23EE0B3B 		vmul.f64	d3, d3, d11
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 582              		.loc 1 719 69 discriminator 1 view .LVU157
 583 0080 34EE454B 		vsub.f64	d4, d4, d5
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 584              		.loc 1 719 24 discriminator 1 view .LVU158
 585 0084 A3EE087B 		vfma.f64	d7, d3, d8
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 586              		.loc 1 719 76 discriminator 1 view .LVU159
 587 0088 24EE094B 		vmul.f64	d4, d4, d9
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 588              		.loc 1 719 60 discriminator 2 view .LVU160
 589 008c A4EE407B 		vfms.f64	d7, d4, d0
 590 0090 F7EEC72B 		vcvt.f32.f64	s5, d7
 720:Src/app.c     **** }
 591              		.loc 1 720 3 is_stmt 1 view .LVU161
 720:Src/app.c     **** }
 592              		.loc 1 720 24 is_stmt 0 discriminator 1 view .LVU162
 593 0094 B0EE467B 		vmov.f64	d7, d6
 594 0098 A3EE007B 		vfma.f64	d7, d3, d0
 720:Src/app.c     **** }
 595              		.loc 1 720 60 discriminator 2 view .LVU163
 596 009c A8EE047B 		vfma.f64	d7, d8, d4
 597              	.LVL38:
 720:Src/app.c     **** }
 598              		.loc 1 720 60 discriminator 2 view .LVU164
 599              	.LBE112:
 600              	.LBE122:
 735:Src/app.c     ****     y[i] = (int)decoded.y;
 601              		.loc 1 735 5 is_stmt 1 view .LVU165
 735:Src/app.c     ****     y[i] = (int)decoded.y;
 602              		.loc 1 735 12 is_stmt 0 view .LVU166
 603 00a0 FDEEE24A 		vcvt.s32.f32	s9, s5
 604 00a4 14EE90AA 		vmov	r10, s9	@ int
 736:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 605              		.loc 1 736 5 is_stmt 1 view .LVU167
 606              	.LBB123:
 607              	.LBB113:
 720:Src/app.c     **** }
 608              		.loc 1 720 60 is_stmt 0 discriminator 2 view .LVU168
 609 00a8 B7EEC77B 		vcvt.f32.f64	s14, d7
 610              	.LBE113:
 611              	.LBE123:
 612              	.LBB124:
 613              	.LBB118:
 603:Src/app.c     ****     *x = margin;
 614              		.loc 1 603 6 view .LVU169
 615 00ac 5246     		mov	r2, r10
 616              	.LBE118:
 617              	.LBE124:
 736:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 618              		.loc 1 736 12 view .LVU170
ARM GAS  /tmp/ccReAcTZ.s 			page 40


 619 00ae FDEEC77A 		vcvt.s32.f32	s15, s14
 620              	.LBB125:
 621              	.LBB119:
 603:Src/app.c     ****     *x = margin;
 622              		.loc 1 603 6 view .LVU171
 623 00b2 022A     		cmp	r2, #2
 624 00b4 B8BF     		it	lt
 625 00b6 0222     		movlt	r2, #2
 626              	.LBE119:
 627              	.LBE125:
 736:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 628              		.loc 1 736 12 view .LVU172
 629 00b8 17EE903A 		vmov	r3, s15	@ int
 737:Src/app.c     ****   }
 630              		.loc 1 737 5 is_stmt 1 view .LVU173
 631              	.LVL39:
 632              	.LBB126:
 633              	.LBI116:
 598:Src/app.c     **** {
 634              		.loc 1 598 12 view .LVU174
 635              	.LBB120:
 600:Src/app.c     ****   int yi = *y;
 636              		.loc 1 600 3 view .LVU175
 601:Src/app.c     **** 
 637              		.loc 1 601 3 view .LVU176
 603:Src/app.c     ****     *x = margin;
 638              		.loc 1 603 3 view .LVU177
 605:Src/app.c     ****     *y = margin;
 639              		.loc 1 605 3 view .LVU178
 607:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 640              		.loc 1 607 3 view .LVU179
 607:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 641              		.loc 1 607 6 is_stmt 0 view .LVU180
 642 00bc 4A45     		cmp	r2, r9
 643 00be A8BF     		it	ge
 644 00c0 4A46     		movge	r2, r9
 605:Src/app.c     ****     *y = margin;
 645              		.loc 1 605 6 view .LVU181
 646 00c2 022B     		cmp	r3, #2
 647 00c4 9B46     		mov	fp, r3
 648 00c6 B8BF     		it	lt
 649 00c8 4FF0020B 		movlt	fp, #2
 609:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 650              		.loc 1 609 6 view .LVU182
 651 00cc C345     		cmp	fp, r8
 652 00ce A8BF     		it	ge
 653 00d0 C346     		movge	fp, r8
 612:Src/app.c     **** }
 654              		.loc 1 612 21 discriminator 2 view .LVU183
 655 00d2 B3EB0B03 		subs	r3, r3, fp
 656              	.LVL40:
 612:Src/app.c     **** }
 657              		.loc 1 612 21 discriminator 2 view .LVU184
 658 00d6 18BF     		it	ne
 659 00d8 0123     		movne	r3, #1
 660 00da 9245     		cmp	r10, r2
 661 00dc 18BF     		it	ne
ARM GAS  /tmp/ccReAcTZ.s 			page 41


 662 00de 0123     		movne	r3, #1
 663              	.LBE120:
 664              	.LBE126:
 733:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 665              		.loc 1 733 17 discriminator 1 view .LVU185
 666 00e0 0139     		subs	r1, r1, #1
 667 00e2 4CF8042B 		str	r2, [ip], #4
 668              	.LBB127:
 669              	.LBB121:
 609:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 670              		.loc 1 609 3 is_stmt 1 view .LVU186
 671 00e6 40F804BB 		str	fp, [r0], #4
 612:Src/app.c     **** }
 672              		.loc 1 612 3 view .LVU187
 673              	.LVL41:
 612:Src/app.c     **** }
 674              		.loc 1 612 3 is_stmt 0 view .LVU188
 675              	.LBE121:
 676              	.LBE127:
 737:Src/app.c     ****   }
 677              		.loc 1 737 19 discriminator 1 view .LVU189
 678 00ea 4EF8043B 		str	r3, [lr], #4
 733:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 679              		.loc 1 733 36 is_stmt 1 discriminator 3 view .LVU190
 733:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 680              		.loc 1 733 17 discriminator 1 view .LVU191
 681 00ee 04F10804 		add	r4, r4, #8
 682 00f2 B7D1     		bne	.L38
 740:Src/app.c     ****     if (is_clamped[i])
 683              		.loc 1 740 10 is_stmt 0 view .LVU192
 684 00f4 0024     		movs	r4, #0
 685              	.L40:
 686              	.LVL42:
 741:Src/app.c     ****       continue;
 687              		.loc 1 741 5 is_stmt 1 view .LVU193
 741:Src/app.c     ****       continue;
 688              		.loc 1 741 19 is_stmt 0 view .LVU194
 689 00f6 55F8043B 		ldr	r3, [r5], #4
 741:Src/app.c     ****       continue;
 690              		.loc 1 741 8 view .LVU195
 691 00fa 43B9     		cbnz	r3, .L39
 743:Src/app.c     ****   }
 692              		.loc 1 743 5 is_stmt 1 view .LVU196
 693 00fc 6FF0FF03 		mvn	r3, #255
 694 0100 0222     		movs	r2, #2
 695 0102 56F82410 		ldr	r1, [r6, r4, lsl #2]
 696 0106 57F82400 		ldr	r0, [r7, r4, lsl #2]
 697 010a FFF7FEFF 		bl	UTIL_LCD_FillCircle
 698              	.LVL43:
 699              	.L39:
 740:Src/app.c     ****     if (is_clamped[i])
 700              		.loc 1 740 36 discriminator 2 view .LVU197
 701 010e 0134     		adds	r4, r4, #1
 702              	.LVL44:
 740:Src/app.c     ****     if (is_clamped[i])
 703              		.loc 1 740 17 discriminator 1 view .LVU198
 704 0110 152C     		cmp	r4, #21
ARM GAS  /tmp/ccReAcTZ.s 			page 42


 705 0112 F0D1     		bne	.L40
 746:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 706              		.loc 1 746 10 is_stmt 0 view .LVU199
 707 0114 0025     		movs	r5, #0
 749:Src/app.c     ****                       x[ld_bindings_idx[i][1]], y[ld_bindings_idx[i][1]],
 708              		.loc 1 749 5 view .LVU200
 709 0116 4FF07F46 		mov	r6, #-16777216
 710 011a 124C     		ldr	r4, .L47
 711              	.LVL45:
 712              	.L42:
 747:Src/app.c     ****       continue;
 713              		.loc 1 747 5 is_stmt 1 view .LVU201
 747:Src/app.c     ****       continue;
 714              		.loc 1 747 38 is_stmt 0 view .LVU202
 715 011c 2068     		ldr	r0, [r4]
 747:Src/app.c     ****       continue;
 716              		.loc 1 747 19 view .LVU203
 717 011e 42AB     		add	r3, sp, #264
 718 0120 03EB8000 		add	r0, r3, r0, lsl #2
 747:Src/app.c     ****       continue;
 719              		.loc 1 747 8 view .LVU204
 720 0124 50F8543C 		ldr	r3, [r0, #-84]
 721 0128 8BB9     		cbnz	r3, .L41
 747:Src/app.c     ****       continue;
 722              		.loc 1 747 75 discriminator 2 view .LVU205
 723 012a 6268     		ldr	r2, [r4, #4]
 747:Src/app.c     ****       continue;
 724              		.loc 1 747 56 discriminator 2 view .LVU206
 725 012c 42AB     		add	r3, sp, #264
 726 012e 03EB8202 		add	r2, r3, r2, lsl #2
 747:Src/app.c     ****       continue;
 727              		.loc 1 747 43 discriminator 2 view .LVU207
 728 0132 52F8543C 		ldr	r3, [r2, #-84]
 729 0136 53B9     		cbnz	r3, .L41
 749:Src/app.c     ****                       x[ld_bindings_idx[i][1]], y[ld_bindings_idx[i][1]],
 730              		.loc 1 749 5 is_stmt 1 view .LVU208
 731 0138 0096     		str	r6, [sp]
 732 013a 52F8A83C 		ldr	r3, [r2, #-168]
 733 013e 50F8A81C 		ldr	r1, [r0, #-168]
 734 0142 52F8FC2C 		ldr	r2, [r2, #-252]
 735 0146 50F8FC0C 		ldr	r0, [r0, #-252]
 736 014a FFF7FEFF 		bl	UTIL_LCD_DrawLine
 737              	.LVL46:
 738              	.L41:
 746:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 739              		.loc 1 746 35 discriminator 2 view .LVU209
 740 014e 0135     		adds	r5, r5, #1
 741              	.LVL47:
 746:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 742              		.loc 1 746 17 discriminator 1 view .LVU210
 743 0150 152D     		cmp	r5, #21
 744 0152 04F10804 		add	r4, r4, #8
 745 0156 E1D1     		bne	.L42
 753:Src/app.c     **** 
 746              		.loc 1 753 1 is_stmt 0 view .LVU211
 747 0158 43B0     		add	sp, sp, #268
 748              		.cfi_def_cfa_offset 76
ARM GAS  /tmp/ccReAcTZ.s 			page 43


 749              		@ sp needed
 750 015a BDEC0A8B 		vldm	sp!, {d8-d12}
 751              		.cfi_restore 88
 752              		.cfi_restore 89
 753              		.cfi_restore 86
 754              		.cfi_restore 87
 755              		.cfi_restore 84
 756              		.cfi_restore 85
 757              		.cfi_restore 82
 758              		.cfi_restore 83
 759              		.cfi_restore 80
 760              		.cfi_restore 81
 761              		.cfi_def_cfa_offset 36
 762 015e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 763              	.LVL48:
 764              	.L48:
 753:Src/app.c     **** 
 765              		.loc 1 753 1 view .LVU212
 766 0162 00BF     		.align	2
 767              	.L47:
 768 0164 00000000 		.word	ld_bindings_idx
 769              		.cfi_endproc
 770              	.LFE7388:
 772              		.section	.rodata.nn_thread_fct.str1.1,"aMS",%progbits,1
 773              	.LC4:
 774 0000 72657420 		.ascii	"ret == 0\000"
 774      3D3D2030 
 774      00
 775              	.LC5:
 776 0009 6E6E5F70 		.ascii	"nn_pipe_dst\000"
 776      6970655F 
 776      64737400 
 777              	.LC6:
 778 0015 63617074 		.ascii	"capture_buffer\000"
 778      7572655F 
 778      62756666 
 778      657200
 779              	.LC7:
 780 0024 72657420 		.ascii	"ret == LL_ATON_User_IO_NOERROR\000"
 780      3D3D204C 
 780      4C5F4154 
 780      4F4E5F55 
 780      7365725F 
 781              		.section	.text.nn_thread_fct,"ax",%progbits
 782              		.align	1
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 787              	nn_thread_fct:
 788              	.LVL49:
 789              	.LFB7399:
1199:Src/app.c     ****   float nn_period_filtered_ms = 0;
 790              		.loc 1 1199 1 is_stmt 1 view -0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 64
 793              		@ frame_needed = 0, uses_anonymous_args = 0
1200:Src/app.c     ****   // Filtered inference times, will be updated with 0
ARM GAS  /tmp/ccReAcTZ.s 			page 44


 794              		.loc 1 1200 3 view .LVU214
1202:Src/app.c     ****   float ld_filtered_ms = 0;
 795              		.loc 1 1202 3 view .LVU215
1203:Src/app.c     **** 
 796              		.loc 1 1203 3 view .LVU216
1205:Src/app.c     ****   uint32_t nn_period[2];
 797              		.loc 1 1205 3 view .LVU217
1206:Src/app.c     ****   uint8_t *nn_pipe_dst;
 798              		.loc 1 1206 3 view .LVU218
1207:Src/app.c     ****   int is_tracking;
 799              		.loc 1 1207 3 view .LVU219
1208:Src/app.c     ****   uint32_t pd_ms;
 800              		.loc 1 1208 3 view .LVU220
1209:Src/app.c     ****   uint32_t hl_ms;
 801              		.loc 1 1209 3 view .LVU221
1210:Src/app.c     ****   int ret;
 802              		.loc 1 1210 3 view .LVU222
1211:Src/app.c     **** 
 803              		.loc 1 1211 3 view .LVU223
1218:Src/app.c     ****   yolo_detector_init(&yolo_info);
 804              		.loc 1 1218 3 view .LVU224
1219:Src/app.c     ****   int detection_nb;
 805              		.loc 1 1219 3 view .LVU225
1199:Src/app.c     ****   float nn_period_filtered_ms = 0;
 806              		.loc 1 1199 1 is_stmt 0 view .LVU226
 807 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 808              		.cfi_def_cfa_offset 36
 809              		.cfi_offset 4, -36
 810              		.cfi_offset 5, -32
 811              		.cfi_offset 6, -28
 812              		.cfi_offset 7, -24
 813              		.cfi_offset 8, -20
 814              		.cfi_offset 9, -16
 815              		.cfi_offset 10, -12
 816              		.cfi_offset 11, -8
 817              		.cfi_offset 14, -4
 818 0004 2DED048B 		vpush.64	{d8, d9}
 819              		.cfi_def_cfa_offset 52
 820              		.cfi_offset 80, -52
 821              		.cfi_offset 81, -48
 822              		.cfi_offset 82, -44
 823              		.cfi_offset 83, -40
 824 0008 91B0     		sub	sp, sp, #68
 825              		.cfi_def_cfa_offset 120
 826              	.LVL50:
 827              	.LBB166:
 828              	.LBI166:
 815:Src/app.c     **** {
 829              		.loc 1 815 13 is_stmt 1 view .LVU227
 830              	.LBB167:
 818:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 831              		.loc 1 818 3 view .LVU228
 818:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 832              		.loc 1 818 46 is_stmt 0 view .LVU229
 833 000a FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_yolo_detector
 834              	.LVL51:
 818:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
ARM GAS  /tmp/ccReAcTZ.s 			page 45


 835              		.loc 1 818 46 view .LVU230
 836 000e 0446     		mov	r4, r0
 837              	.LVL52:
 819:Src/app.c     ****   int ret;
 838              		.loc 1 819 3 is_stmt 1 view .LVU231
 819:Src/app.c     ****   int ret;
 839              		.loc 1 819 45 is_stmt 0 view .LVU232
 840 0010 FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_yolo_detector
 841              	.LVL53:
 820:Src/app.c     **** 
 842              		.loc 1 820 3 is_stmt 1 view .LVU233
 823:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 843              		.loc 1 823 3 view .LVU234
 844              	.LBB168:
 845              	.LBI168:
 846              		.file 2 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h"
   1:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
   2:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   3:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @file    ll_aton_NN_interface.h
   4:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @author  SRA Artificial Intelligence & Embedded Architectures
   5:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief   Interface that defines a NN generated by the AtoNN Compiler.
   6:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   7:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @attention
   8:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
   9:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * Copyright (c) 2024 STMicroelectronics.
  10:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * All rights reserved.
  11:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  12:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * in the root directory of this software component.
  14:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  16:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
  17:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
  18:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  19:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef __LL_ATON_NN_INTERFACE_H
  20:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define __LL_ATON_NN_INTERFACE_H
  21:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  22:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef __cplusplus
  23:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** extern "C"
  24:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** {
  25:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
  26:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  27:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <assert.h>
  28:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdbool.h>
  29:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stddef.h>
  30:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdint.h>
  31:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  32:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_config.h"
  33:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  34:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_attributes.h"
  35:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_util.h"
  36:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  37:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup User I/O Return Values & Callback Event Types
  38:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  39:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  40:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  41:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_User_IO_Result
ARM GAS  /tmp/ccReAcTZ.s 			page 46


  42:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_NOERROR,     /**< */
  44:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_ALIGN, /**< */
  45:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_SIZE,  /**< */
  46:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_INDEX, /**< */
  47:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_User_IO_Result_t;
  48:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  49:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_RT_Callbacktype
  50:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  51:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_START,  /**< Callback called before start_epoch_block */
  52:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_START, /**< Callback called after start_epoch_block */
  53:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_END,    /**< Callback called before end_epoch_block */
  54:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_END,   /**< Callback called after end_epoch_block */
  55:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_Init,    /**< Callback called after `LL_ATON_RT_Init_Network`,
  56:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  57:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_DeInit,  /**< Callback called after `LL_ATON_RT_DeInit_Network`,
  58:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  59:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Init,    /**< Callback called after `LL_ATON_RT_RuntimeInit` */
  60:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Deinit,  /**< Callback called before `LL_ATON_RT_RuntimeDeInit` */
  61:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_RT_Callbacktype_t;
  62:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  63:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
  64:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
  65:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  66:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  67:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Epoch Blocks
  68:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  69:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  70:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  71:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /* this is needed to avoid some compilers (e.g. KEIL) that observe a strict semantic about conver
  72:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * pointers to integers in cost initializers
  73:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  74:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef union
  75:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  76:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     unsigned char *p;
  77:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t i;
  78:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } __LL_address_t;
  79:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  80:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*EpochBlock_FuncPtr_t)(const void *epoch_block);
  81:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  82:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
  83:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_NONE = 0x0,                 /**< */
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_start = (0x1 << 0),   /**< First EpochBlock of an Epoch */
  86:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_end = (0x1 << 1),     /**< Last EpochBlock of an Epoch */
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob = (0x1 << 2),          /**< Item is an Epoch Blob */
  88:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_last_eb = (0x1 << 3),       /**< Last EpochBlock */
  89:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_hw = (0x1 << 4),       /**< Pure HW EpochBlock */
  90:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_sw = (0x1 << 5),       /**< Pure SW EpochBlock */
  91:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_hybrid = (0x1 << 6),        /**< Hybrid EpochBlock (i.e. mixed HW/SW) */
  92:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_internal = (0x1 << 7),      /**< ATON lib internal EpochBlock (used to impleme
  93:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob_encrypted = (0x1 << 8) /**< The blob is encrypted and must be decrypted o
  94:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_Flags_t;
  95:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  96:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
  97:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  98:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t start_epoch_block; /**< Method to execute the EpochBlock */
ARM GAS  /tmp/ccReAcTZ.s 			page 47


  99:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t end_epoch_block;   /**< Method to be executed when the EpochBlock ends */
 100:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t blob_address;                 /**< Blob address (in case this EpochBlock represents a
 101:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t wait_mask;                     /**< Mask needed to check when an EpochBlock ends
 102:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - if epoch blob: number (not bitmask) of epoch co
 103:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - otherwise: bitmask with all output streaming en
 104:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t flags;                         /**< EpochBlock flags */
 105:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef LL_ATON_EB_DBG_INFO
 106:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t epoch_num;             /**< Epoch number / First epoch number within blob */
 107:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t last_epoch_num;        /**< Epoch number / Last epoch number within blob */
 108:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t in_streng_mask;       /**< Debug information about input streaming engines used in epo
 109:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t out_streng_mask;      /**< Debug information about output streaming engines used in ep
 110:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_npu_cycles; /**< Debug information estimates for NPU cycles in epoch w/o mem
 111:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_tot_cycles; /**< Debug information estimates for NPU cycles in epoch w/ memo
 112:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                             // LL_ATON_EB_DBG_INFO
 113:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_ItemTypeDef;
 114:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef EpochBlock_ItemTypeDef LL_ATON_RT_EpochBlockItem_t;
 115:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 116:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 117:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 118:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 119:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 120:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for User Callbacks
 121:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 122:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 123:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 124:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 125:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last one of an array of `const EpochBlock_ItemType
 126:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 127:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 128:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb);
 129:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 130:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 131:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the first EpochBlock of an Epoch
 132:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 133:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 134:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb);
 135:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 136:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 137:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last EpochBlock of an Epoch
 138:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 139:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 140:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb);
 141:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 142:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 143:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the an Epoch Blob
 144:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 145:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 146:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb);
 147:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 148:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 149:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if - in case this epoch is a blob (see above) - the blob is encrypted
 150:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 151:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 152:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb);
 153:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 154:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 155:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is pure SW epoch
ARM GAS  /tmp/ccReAcTZ.s 			page 48


 156:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 157:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 158:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb);
 159:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 160:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 161:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a pure HW or mixed SW/HW epoch
 162:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 163:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 164:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb);
 165:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 166:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 167:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a hybrid epoch
 168:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 169:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 170:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb);
 171:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 172:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 173:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is an internal epoch
 174:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 175:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 176:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb);
 177:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 178:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 179:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the Epoch controller id to use
 180:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 181:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 182:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb);
 183:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 184:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 185:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the address of the configuration of the epoch controller (the blob address)
 186:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 187:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 188:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb);
 189:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 190:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 191:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer types definition
 192:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 193:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 194:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 195:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 196:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 197:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 198:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Input, Output, and Internal Buffers
 199:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 200:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 201:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 202:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 203:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 204:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UNDEFINED = 0,
 205:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT = 1,
 206:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT2 = 2,
 207:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT2 = 3,
 208:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT4 = 4,
 209:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT4 = 5,
 210:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT8 = 6,
 211:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT8 = 7,
 212:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT16 = 8,
ARM GAS  /tmp/ccReAcTZ.s 			page 49


 213:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT16 = 9,
 214:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT32 = 10,
 215:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT64 = 11,
 216:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_STRING = 12,
 217:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BOOL = 13,
 218:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT16 = 14,
 219:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_DOUBLE = 15,
 220:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT32 = 16,
 221:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT64 = 17,
 222:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX64 = 18,
 223:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX128 = 19,
 224:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BFLOAT16 = 20,
 225:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FXP = 100 // AtoNN specific
 226:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_DataType_TypeDef;
 227:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 228:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 229:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer Channel position
 230:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 231:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 232:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 233:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 234:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_UNDEFINED = 0, /**< No channel present */
 235:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_First = 1,     /**< Channel First         ( ...B C H W )*/
 236:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Last = 2,      /**< Channel Last          ( ...B H W C ) */
 237:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Mixed = 3,     /**< Channel with Batch(b) ( ...B C/b H W b ) */
 238:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_CHPos_TypeDef;
 239:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 240:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 241:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer definition
 242:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 243:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 244:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 245:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *name;             /**< Buffer name. NULL if end of list */
 246:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     __LL_address_t addr_base;     /**< Buffer base address */
 247:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_start;        /**< Offset of the buffer start address from the base address */
 248:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_end;          /**< Offset of the buffer end address from the base address
 249:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (first bytes address beyond buffer length) */
 250:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_limit;        /**< Offset of the limiter address from the base address,
 251:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (needed for configuring streaming engines) */
 252:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_user_allocated;    /**< */
 253:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_param;             /**< */
 254:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t epoch;               /**< */
 255:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t batch;               /**< */
 256:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *mem_shape;    /**< shape as seen by the user in memory (only valid for input/ou
 257:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t mem_ndims;           /**< Number of dimensions of mem_shape (Length of mem_shape) */
 258:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_CHPos_TypeDef chpos;   /**< Position  of channels dimension in mem shape */
 259:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_DataType_TypeDef type; /**< */
 260:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qm;                    /**< */
 261:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qn;                    /**< */
 262:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t Qunsigned;            /**< */
 263:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t ndims;                /**< */
 264:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t nbits;                /**< */
 265:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t per_channel;          /**< */
 266:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *shape;        /**< */
 267:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const float *scale;           /**< */
 268:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const int16_t *offset;        /**< This can become int8 or uint8 based on the Qunsigned field.
 269:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (This field Must have the same format of the quantized value
ARM GAS  /tmp/ccReAcTZ.s 			page 50


 270:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_Buffer_InfoTypeDef;
 271:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 272:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 273:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 274:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 275:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 276:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for Buffer Analysis
 277:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 278:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 279:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 280:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 281:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the base address of the mem pool the buffer is allocated in
 282:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 283:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 284:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf);
 285:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 286:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 287:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the start address of the buffer
 288:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 289:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 290:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf);
 291:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 292:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 293:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the end address of the buffer
 294:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 295:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 296:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf);
 297:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 298:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 299:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the limit address of the buffer
 300:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 301:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 302:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf);
 303:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 304:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 305:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the length of the buffer
 306:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 307:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 308:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf);
 309:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 310:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 311:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the buffer elements number of bits
 312:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 313:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 314:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_bits(const LL_Buffer_InfoTypeDef *buf);
 315:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 316:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 317:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 318:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 319:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 320:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types and Declaration Macros for ATON Runtime Execution & User AP
 321:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 322:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 323:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 324:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct; // forward declaration
 325:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct __nn_instance_struct NN_Instance_TypeDef;
 326:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 51


 327:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
 328:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief Declare the function prototypes for named NN interface functions generated by the AtoNN c
 329:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param network_name name of the network as provided by option `--network-name`
 330:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
 331:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)                                              
 332:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Network_Init_##network_name(void);                                        
 333:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Inference_Init_##network_name(void);                                      
 334:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_##network_name(uint32_t num, void *
 335:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                uint32_t size);     
 336:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Input_Buffer_##network_name(uint32_t num);                         
 337:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_##network_name(uint32_t num, void 
 338:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                 uint32_t size);    
 339:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Output_Buffer_##network_name(uint32_t num);                        
 340:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_##network_name(void);               
 341:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Output_Buffers_Info_##network_name(void);            
 342:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_##network_name(void);             
 343:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Internal_Buffers_Info_##network_name(void);
 344:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 345:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 346:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Type definitions for NN interface functions
 347:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 348:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef bool (*NN_EC_Hook_TypeDef)(void);
 349:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_InputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t s
 350:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_InputGetter_TypeDef)(uint32_t num);
 351:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_OutputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t 
 352:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_OutputGetter_TypeDef)(uint32_t num);
 353:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const EpochBlock_ItemTypeDef *(*NN_EpochBlockItems_TypeDef)(void);
 354:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const LL_Buffer_InfoTypeDef *(*NN_Buffers_Info_TypeDef)(void);
 355:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 356:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceRuntime_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype);
 357:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 358:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceEpochBlock_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype, const NN_Instance_Type
 359:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                             const EpochBlock_ItemTypeDef *epoch_block);
 360:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 361:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 362:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 363:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *network_name;
 364:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_network_init;
 365:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_inference_init;
 366:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputSetter_TypeDef input_setter;
 367:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputGetter_TypeDef input_getter;
 368:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputSetter_TypeDef output_setter;
 369:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputGetter_TypeDef output_getter;
 370:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EpochBlockItems_TypeDef epoch_block_items;
 371:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef output_buffers_info;
 372:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef input_buffers_info;
 373:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef internal_buffers_info;
 374:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Interface_TypeDef;
 375:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 376:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 377:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 378:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile current_epoch_block; // pointer to current epoch block
 379:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile first_epoch_block;   // pointer to first epoch block in 
 380:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile next_epoch_block;    // pointer to epoch block to be ins
 381:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 382:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile saved_current_epoch_block; // pointer to saved current e
 383:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef
ARM GAS  /tmp/ccReAcTZ.s 			page 52


 384:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         *volatile saved_first_epoch_block; // pointer to saved first epoch block in current epoch l
 385:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 386:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     bool inference_started; // inference has been started
 387:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 388:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 389:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t triggered_events;        // currently triggered events/IRQs in current epoch
 390:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile bool current_epoch_block_started; // has current epoch block already been started
 391:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                         // (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 392:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 393:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef NDEBUG
 394:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t
 395:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         nr_of_epoch_blocks; // number of epoch blocks in network (includes also terminating empty e
 396:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t saved_nr_of_epoch_blocks; // number of epoch blocks in saved network (include
 397:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                 // empty epoch block)
 398:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                          // NDEBUG
 399:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 400:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     TraceEpochBlock_FuncPtr_t epoch_callback_function; // epoch callback function
 401:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 402:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if defined(LL_ATON_RT_RELOC)
 403:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t inst_reloc;
 404:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
 405:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 406:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Execution_State_TypeDef;
 407:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 408:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct
 409:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 410:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const NN_Interface_TypeDef *network;
 411:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Execution_State_TypeDef exec_state;
 412:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   };
 413:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 414:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 415:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 416:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 417:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 418:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Inline Implementations
 419:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 420:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 421:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 422:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb)
 423:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 424:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_last_eb) != 0);
 425:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 426:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 427:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb)
 428:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 429:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_start) != 0);
 430:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 431:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 432:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb)
 433:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 434:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_end) != 0);
 435:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 436:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 437:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb)
 438:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 439:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob) != 0);
 440:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
ARM GAS  /tmp/ccReAcTZ.s 			page 53


 441:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 442:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb)
 443:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 444:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob_encrypted) != 0);
 445:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 446:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 447:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb)
 448:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 449:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_sw) != 0);
 450:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 451:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 452:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb)
 453:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 454:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_hw) != 0);
 455:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 456:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 457:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb)
 458:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 459:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_hybrid) != 0);
 460:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 461:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 462:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb)
 463:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 464:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_internal) != 0);
 465:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 466:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 467:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb)
 468:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 469:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 470:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->wait_mask;
 471:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 472:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 473:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb)
 474:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 475:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 476:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->blob_address;
 477:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 478:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf)
 480:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     if (buf->is_user_allocated)
 482:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       unsigned char **tmp = (unsigned char **)buf->addr_base.p;
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
 485:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 486:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->addr_base.p;
 487:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 488:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 489:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf)
 490:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_start;
 492:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 493:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 494:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf)
 495:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 496:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_end;
 497:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
ARM GAS  /tmp/ccReAcTZ.s 			page 54


 498:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 499:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf)
 500:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 501:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_limit;
 502:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 503:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf)
 847              		.loc 2 504 26 view .LVU235
 848              	.LBB169:
 505:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 506:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->offset_end - buf->offset_start;
 849              		.loc 2 506 5 view .LVU236
 850              		.loc 2 506 5 is_stmt 0 view .LVU237
 851              	.LBE169:
 852              	.LBE168:
 853              	.LBB171:
 854              	.LBB172:
 855              	.LBB173:
 856              	.LBB174:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 857              		.loc 2 481 8 view .LVU238
 858 0014 217D     		ldrb	r1, [r4, #20]	@ zero_extendqisi2
 859              	.LBE174:
 860              	.LBE173:
 861              	.LBE172:
 862              	.LBE171:
 863              	.LBB180:
 864              	.LBB170:
 865              		.loc 2 506 28 view .LVU239
 866 0016 D0E90223 		ldrd	r2, r3, [r0, #8]
 867 001a 9B1A     		subs	r3, r3, r2
 868 001c 6268     		ldr	r2, [r4, #4]
 869              	.LBE170:
 870              	.LBE180:
 823:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 871              		.loc 1 823 19 discriminator 1 view .LVU240
 872 001e 0293     		str	r3, [sp, #8]
 824:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 873              		.loc 1 824 3 is_stmt 1 view .LVU241
 874              	.LVL54:
 875              	.LBB181:
 876              	.LBI171:
 489:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 877              		.loc 2 489 32 view .LVU242
 878              	.LBB178:
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 879              		.loc 2 491 5 view .LVU243
 880              	.LBB177:
 881              	.LBI173:
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 882              		.loc 2 479 32 view .LVU244
 883              	.LBB176:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 884              		.loc 2 481 5 view .LVU245
 486:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 885              		.loc 2 486 26 is_stmt 0 view .LVU246
 886 0020 1346     		mov	r3, r2
ARM GAS  /tmp/ccReAcTZ.s 			page 55


 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 887              		.loc 2 481 8 view .LVU247
 888 0022 01B1     		cbz	r1, .L51
 889              	.LBB175:
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
 890              		.loc 2 483 7 is_stmt 1 view .LVU248
 891              	.LVL55:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 892              		.loc 2 484 7 view .LVU249
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 893              		.loc 2 484 14 is_stmt 0 view .LVU250
 894 0024 1368     		ldr	r3, [r2]
 895              	.LVL56:
 896              	.L51:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 897              		.loc 2 484 14 view .LVU251
 898              	.LBE175:
 899              	.LBE176:
 900              	.LBE177:
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 901              		.loc 2 491 42 discriminator 1 view .LVU252
 902 0026 A268     		ldr	r2, [r4, #8]
 903              	.LVL57:
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 904              		.loc 2 491 42 discriminator 1 view .LVU253
 905              	.LBE178:
 906              	.LBE181:
 839:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 907              		.loc 1 839 9 view .LVU254
 908 0028 8449     		ldr	r1, .L70
 909              	.LBB182:
 910              	.LBB179:
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 911              		.loc 2 491 37 discriminator 1 view .LVU255
 912 002a 1344     		add	r3, r3, r2
 913              	.LBE179:
 914              	.LBE182:
 824:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 915              		.loc 1 824 28 discriminator 1 view .LVU256
 916 002c 0393     		str	r3, [sp, #12]
 825:Src/app.c     **** 
 917              		.loc 1 825 3 is_stmt 1 view .LVU257
 918              	.LVL58:
 919              	.LBB183:
 920              	.LBI183:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 921              		.loc 2 504 26 view .LVU258
 922              	.LBB184:
 923              		.loc 2 506 5 view .LVU259
 924              		.loc 2 506 28 is_stmt 0 view .LVU260
 925 002e E368     		ldr	r3, [r4, #12]
 926              	.LBE184:
 927              	.LBE183:
 839:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 928              		.loc 1 839 9 view .LVU261
 929 0030 05A8     		add	r0, sp, #20
 930              	.LVL59:
ARM GAS  /tmp/ccReAcTZ.s 			page 56


 931              	.LBB186:
 932              	.LBB185:
 933              		.loc 2 506 28 view .LVU262
 934 0032 9B1A     		subs	r3, r3, r2
 935              	.LBE185:
 936              	.LBE186:
 825:Src/app.c     **** 
 937              		.loc 1 825 32 discriminator 1 view .LVU263
 938 0034 0493     		str	r3, [sp, #16]
 828:Src/app.c     ****   info->static_param.nb_total_boxes = 8400;  // Example: Standard for YOLOv8
 939              		.loc 1 828 3 is_stmt 1 view .LVU264
 829:Src/app.c     ****   info->static_param.max_boxes_limit = 100;  // Max boxes after NMS
 940              		.loc 1 829 37 is_stmt 0 view .LVU265
 941 0036 5022     		movs	r2, #80
 942 0038 42F2D003 		movw	r3, #8400
 943 003c CDE90523 		strd	r2, r3, [sp, #20]
 830:Src/app.c     ****   info->static_param.conf_threshold = 0.40f; // Confidence threshold
 944              		.loc 1 830 3 is_stmt 1 view .LVU266
 830:Src/app.c     ****   info->static_param.conf_threshold = 0.40f; // Confidence threshold
 945              		.loc 1 830 38 is_stmt 0 view .LVU267
 946 0040 6423     		movs	r3, #100
 947 0042 0793     		str	r3, [sp, #28]
 831:Src/app.c     ****   info->static_param.iou_threshold = 0.45f;  // IoU threshold for NMS
 948              		.loc 1 831 3 is_stmt 1 view .LVU268
 831:Src/app.c     ****   info->static_param.iou_threshold = 0.45f;  // IoU threshold for NMS
 949              		.loc 1 831 37 is_stmt 0 view .LVU269
 950 0044 7E4B     		ldr	r3, .L70+4
 951 0046 0893     		str	r3, [sp, #32]	@ float
 832:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 952              		.loc 1 832 3 is_stmt 1 view .LVU270
 832:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 953              		.loc 1 832 36 is_stmt 0 view .LVU271
 954 0048 7E4B     		ldr	r3, .L70+8
 955 004a 0993     		str	r3, [sp, #36]	@ float
 834:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 956              		.loc 1 834 3 is_stmt 1 view .LVU272
 834:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 957              		.loc 1 834 39 is_stmt 0 view .LVU273
 958 004c 4FF07E53 		mov	r3, #1065353216
 959 0050 0A93     		str	r3, [sp, #40]	@ float
 835:Src/app.c     **** 
 960              		.loc 1 835 3 is_stmt 1 view .LVU274
 835:Src/app.c     **** 
 961              		.loc 1 835 44 is_stmt 0 view .LVU275
 962 0052 0023     		movs	r3, #0
 963 0054 8DF82C30 		strb	r3, [sp, #44]
 839:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 964              		.loc 1 839 3 is_stmt 1 view .LVU276
 839:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 965              		.loc 1 839 9 is_stmt 0 view .LVU277
 966 0058 FFF7FEFF 		bl	app_postprocess_init
 967              	.LVL60:
 840:Src/app.c     **** }
 968              		.loc 1 840 3 is_stmt 1 view .LVU278
 969 005c 0646     		mov	r6, r0
 970 005e 30B1     		cbz	r0, .L52
 840:Src/app.c     **** }
ARM GAS  /tmp/ccReAcTZ.s 			page 57


 971              		.loc 1 840 3 is_stmt 0 discriminator 1 view .LVU279
 972 0060 4FF45271 		mov	r1, #840
 973 0064 784B     		ldr	r3, .L70+12
 974 0066 794A     		ldr	r2, .L70+16
 975              	.LVL61:
 976              	.L69:
 840:Src/app.c     **** }
 977              		.loc 1 840 3 discriminator 1 view .LVU280
 978              	.LBE167:
 979              	.LBE166:
1225:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 980              		.loc 1 1225 3 discriminator 1 view .LVU281
 981 0068 7948     		ldr	r0, .L70+20
 982 006a FFF7FEFF 		bl	__assert_func
 983              	.LVL62:
 984              	.L52:
1220:Src/app.c     **** 
 985              		.loc 1 1220 3 is_stmt 1 view .LVU282
1223:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 986              		.loc 1 1223 3 view .LVU283
1223:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 987              		.loc 1 1223 18 is_stmt 0 view .LVU284
 988 006e FFF7FEFF 		bl	HAL_GetTick
 989              	.LVL63:
 990              	.LBB187:
 991              	.LBB188:
 477:Src/app.c     ****   if (ret == pdFALSE)
 992              		.loc 1 477 9 view .LVU285
 993 0072 784C     		ldr	r4, .L70+24
 994              	.LBE188:
 995              	.LBE187:
1223:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 996              		.loc 1 1223 18 view .LVU286
 997 0074 0546     		mov	r5, r0
 998              	.LVL64:
1224:Src/app.c     ****   assert(nn_pipe_dst);
 999              		.loc 1 1224 3 is_stmt 1 view .LVU287
 1000              	.LBB191:
 1001              	.LBI187:
 472:Src/app.c     **** {
 1002              		.loc 1 472 17 view .LVU288
 1003              	.LBB189:
 474:Src/app.c     ****   int ret;
 1004              		.loc 1 474 3 view .LVU289
 475:Src/app.c     **** 
 1005              		.loc 1 475 3 view .LVU290
 477:Src/app.c     ****   if (ret == pdFALSE)
 1006              		.loc 1 477 3 view .LVU291
 477:Src/app.c     ****   if (ret == pdFALSE)
 1007              		.loc 1 477 9 is_stmt 0 discriminator 4 view .LVU292
 1008 0076 3146     		mov	r1, r6
 1009 0078 2068     		ldr	r0, [r4]
 1010              	.LVL65:
 477:Src/app.c     ****   if (ret == pdFALSE)
 1011              		.loc 1 477 9 discriminator 4 view .LVU293
 1012 007a FFF7FEFF 		bl	xQueueSemaphoreTake
 1013              	.LVL66:
ARM GAS  /tmp/ccReAcTZ.s 			page 58


 478:Src/app.c     ****     return NULL;
 1014              		.loc 1 478 3 is_stmt 1 view .LVU294
 478:Src/app.c     ****     return NULL;
 1015              		.loc 1 478 6 is_stmt 0 view .LVU295
 1016 007e 20B9     		cbnz	r0, .L53
 1017              	.LVL67:
 1018              	.L54:
 478:Src/app.c     ****     return NULL;
 1019              		.loc 1 478 6 view .LVU296
 1020              	.LBE189:
 1021              	.LBE191:
1225:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1022              		.loc 1 1225 3 discriminator 1 view .LVU297
 1023 0080 40F2C941 		movw	r1, #1225
 1024 0084 744B     		ldr	r3, .L70+28
 1025 0086 754A     		ldr	r2, .L70+32
 1026 0088 EEE7     		b	.L69
 1027              	.LVL68:
 1028              	.L53:
 1029              	.LBB192:
 1030              	.LBB190:
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1031              		.loc 1 481 3 is_stmt 1 view .LVU298
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1032              		.loc 1 481 23 is_stmt 0 view .LVU299
 1033 008a D4F8B430 		ldr	r3, [r4, #180]
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1034              		.loc 1 481 7 view .LVU300
 1035 008e 04EB8302 		add	r2, r4, r3, lsl #2
 1036 0092 D2F8AC00 		ldr	r0, [r2, #172]
 1037              	.LVL69:
 482:Src/app.c     **** 
 1038              		.loc 1 482 3 is_stmt 1 view .LVU301
 482:Src/app.c     **** 
 1039              		.loc 1 482 37 is_stmt 0 view .LVU302
 1040 0096 D4F8A820 		ldr	r2, [r4, #168]
 482:Src/app.c     **** 
 1041              		.loc 1 482 32 view .LVU303
 1042 009a 0133     		adds	r3, r3, #1
 482:Src/app.c     **** 
 1043              		.loc 1 482 37 view .LVU304
 1044 009c 93FBF2F1 		sdiv	r1, r3, r2
 1045 00a0 02FB1133 		mls	r3, r2, r1, r3
 482:Src/app.c     **** 
 1046              		.loc 1 482 16 view .LVU305
 1047 00a4 C4F8B430 		str	r3, [r4, #180]
 484:Src/app.c     **** }
 1048              		.loc 1 484 3 is_stmt 1 view .LVU306
 1049              	.LVL70:
 484:Src/app.c     **** }
 1050              		.loc 1 484 3 is_stmt 0 view .LVU307
 1051              	.LBE190:
 1052              	.LBE192:
1225:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1053              		.loc 1 1225 3 is_stmt 1 view .LVU308
 1054 00a8 0028     		cmp	r0, #0
 1055 00aa E9D0     		beq	.L54
ARM GAS  /tmp/ccReAcTZ.s 			page 59


1226:Src/app.c     ****   while (1)
 1056              		.loc 1 1226 3 view .LVU309
1202:Src/app.c     ****   float ld_filtered_ms = 0;
 1057              		.loc 1 1202 9 is_stmt 0 view .LVU310
 1058 00ac 9FED6C8A 		vldr.32	s16, .L70+36
1226:Src/app.c     ****   while (1)
 1059              		.loc 1 1226 3 view .LVU311
 1060 00b0 3146     		mov	r1, r6
 1061 00b2 FFF7FEFF 		bl	CAM_NNPipe_Start
 1062              	.LVL71:
1200:Src/app.c     ****   // Filtered inference times, will be updated with 0
 1063              		.loc 1 1200 9 view .LVU312
 1064 00b6 F0EE488A 		vmov.f32	s17, s16
 1065 00ba 18EE107A 		vmov	r7, s16
 1066              	.LBB193:
1235:Src/app.c     **** 
 1067              		.loc 1 1235 27 view .LVU313
 1068 00be 9FED699A 		vldr.32	s18, .L70+40
 1069              	.LBB194:
 1070              	.LBB195:
 855:Src/app.c     **** 
 1071              		.loc 1 855 3 view .LVU314
 1072 00c2 DFF87881 		ldr	r8, .L70
 1073              	.LBB196:
 1074              	.LBB197:
 1075              	.LBB198:
 1076              		.file 3 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /******************************************************************************
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @file     cachel1_armv7.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @brief    CMSIS Level 1 Cache API for Armv7-M and later
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @version  V1.0.3
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @date     17. March 2023
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Copyright (c) 2020-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #if   defined ( __ICCARM__ )
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #elif defined (__clang__)
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma clang system_header    /* treat file as system include file */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 60


  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef ARM_CACHEL1_ARMV7_H
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define ARM_CACHEL1_ARMV7_H
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \ingroup  CMSIS_Core_FunctionInterface
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief    Functions that configure Instruction and Data cache.
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   @{
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /* Cache Size ID Register Macros */
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_DCACHE_LINE_SIZE
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_ICACHE_LINE_SIZE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable I-Cache
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on I-Cache
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable I-Cache
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off I-Cache
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
ARM GAS  /tmp/ccReAcTZ.s 			page 61


  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate I-Cache
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   I-Cache Invalidate by address
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache for the given address.
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   isize   size of memory block (in number of bytes)
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (volatile void *addr, int32_t isize)
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( isize > 0 ) {
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable D-Cache
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on D-Cache
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
ARM GAS  /tmp/ccReAcTZ.s 			page 62


 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable D-Cache
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off D-Cache
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     struct {
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } locals
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if ((defined(__GNUC__) || defined(__clang__)) && !defined(__OPTIMIZE__))
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        __ALIGNED(__SCB_DCACHE_LINE_SIZE)
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ;
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if !defined(__OPTIMIZE__)
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /*
ARM GAS  /tmp/ccReAcTZ.s 			page 63


 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * For the endless loop issue with no optimization builds.
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * More details, see https://github.com/ARM-software/CMSIS_5/issues/620
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * The issue only happens when local variables are in stack. If
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables are saved in general purpose register, then the function
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * is OK.
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * When local variables are in stack, after disabling the cache, flush the
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables cache line for data consistency.
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        */
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /* Clean and invalidate the local variable cache. */
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if defined(__ICCARM__)
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     /* As we can't align the stack to the cache line size, invalidate each of the variables */
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.sets;
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ways;
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ccsidr;
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals;
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.ccsidr = SCB->CCSIDR;
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.sets = (uint32_t)(CCSIDR_SETS(locals.ccsidr));
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       locals.ways = (uint32_t)(CCSIDR_WAYS(locals.ccsidr));
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((locals.sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((locals.ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (locals.ways-- != 0U);
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(locals.sets-- != 0U);
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate D-Cache
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 64


 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean D-Cache
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean D-Cache */
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
ARM GAS  /tmp/ccReAcTZ.s 			page 65


 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean & Invalidate D-Cache
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and Invalidates D-Cache
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Invalidate by address
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache for the given address.
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1077              		.loc 3 368 22 view .LVU315
 1078 00c6 DFF8BC91 		ldr	r9, .L70+72
 1079              	.LVL72:
 1080              	.L63:
ARM GAS  /tmp/ccReAcTZ.s 			page 66


 1081              		.loc 3 368 22 view .LVU316
 1082              	.LBE198:
 1083              	.LBE197:
 1084              	.LBE196:
 1085              	.LBE195:
 1086              	.LBE194:
 1087              	.LBE193:
1227:Src/app.c     ****   {
 1088              		.loc 1 1227 3 is_stmt 1 view .LVU317
 1089              	.LBB222:
1229:Src/app.c     **** 
 1090              		.loc 1 1229 5 view .LVU318
1232:Src/app.c     ****     nn_period[1] = HAL_GetTick();
 1091              		.loc 1 1232 5 view .LVU319
1233:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1092              		.loc 1 1233 5 view .LVU320
1233:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1093              		.loc 1 1233 20 is_stmt 0 view .LVU321
 1094 00ca FFF7FEFF 		bl	HAL_GetTick
 1095              	.LVL73:
1234:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1096              		.loc 1 1234 18 view .LVU322
 1097 00ce 431B     		subs	r3, r0, r5
 1098 00d0 07EE903A 		vmov	s15, r3	@ int
1235:Src/app.c     **** 
 1099              		.loc 1 1235 75 view .LVU323
 1100 00d4 B2EE0E7A 		vmov.f32	s14, #1.5e+1
 1101 00d8 F8EE677A 		vcvt.f32.u32	s15, s15
 1102 00dc E8EE877A 		vfma.f32	s15, s17, s14
1233:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1103              		.loc 1 1233 20 view .LVU324
 1104 00e0 0646     		mov	r6, r0
 1105              	.LVL74:
1234:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1106              		.loc 1 1234 5 is_stmt 1 view .LVU325
1235:Src/app.c     **** 
 1107              		.loc 1 1235 5 view .LVU326
 1108              	.LBB210:
 1109              	.LBB211:
 500:Src/app.c     ****   assert(ret == pdTRUE);
 1110              		.loc 1 500 9 is_stmt 0 view .LVU327
 1111 00e2 4FF0FF31 		mov	r1, #-1
 1112 00e6 606D     		ldr	r0, [r4, #84]
 1113              	.LVL75:
 500:Src/app.c     ****   assert(ret == pdTRUE);
 1114              		.loc 1 500 9 view .LVU328
 1115              	.LBE211:
 1116              	.LBE210:
1235:Src/app.c     **** 
 1117              		.loc 1 1235 27 view .LVU329
 1118 00e8 67EE898A 		vmul.f32	s17, s15, s18
 1119              	.LVL76:
1238:Src/app.c     ****     assert(capture_buffer);
 1120              		.loc 1 1238 5 is_stmt 1 view .LVU330
 1121              	.LBB213:
 1122              	.LBI210:
 495:Src/app.c     **** {
ARM GAS  /tmp/ccReAcTZ.s 			page 67


 1123              		.loc 1 495 17 view .LVU331
 1124              	.LBB212:
 497:Src/app.c     ****   int ret;
 1125              		.loc 1 497 3 view .LVU332
 498:Src/app.c     **** 
 1126              		.loc 1 498 3 view .LVU333
 500:Src/app.c     ****   assert(ret == pdTRUE);
 1127              		.loc 1 500 3 view .LVU334
 500:Src/app.c     ****   assert(ret == pdTRUE);
 1128              		.loc 1 500 9 is_stmt 0 view .LVU335
 1129 00ec FFF7FEFF 		bl	xQueueSemaphoreTake
 1130              	.LVL77:
 501:Src/app.c     **** 
 1131              		.loc 1 501 3 view .LVU336
 1132 00f0 0128     		cmp	r0, #1
 500:Src/app.c     ****   assert(ret == pdTRUE);
 1133              		.loc 1 500 9 view .LVU337
 1134 00f2 0546     		mov	r5, r0
 1135              	.LVL78:
 501:Src/app.c     **** 
 1136              		.loc 1 501 3 is_stmt 1 view .LVU338
 1137 00f4 04D0     		beq	.L55
 501:Src/app.c     **** 
 1138              		.loc 1 501 3 is_stmt 0 discriminator 1 view .LVU339
 1139 00f6 40F2F511 		movw	r1, #501
 1140 00fa 5B4B     		ldr	r3, .L70+44
 1141 00fc 5B4A     		ldr	r2, .L70+48
 1142 00fe B3E7     		b	.L69
 1143              	.L55:
 503:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1144              		.loc 1 503 3 is_stmt 1 view .LVU340
 503:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1145              		.loc 1 503 23 is_stmt 0 view .LVU341
 1146 0100 D4F8B830 		ldr	r3, [r4, #184]
 503:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1147              		.loc 1 503 7 view .LVU342
 1148 0104 04EB8302 		add	r2, r4, r3, lsl #2
 1149 0108 D2F8ACB0 		ldr	fp, [r2, #172]
 1150              	.LVL79:
 504:Src/app.c     **** 
 1151              		.loc 1 504 3 is_stmt 1 view .LVU343
 504:Src/app.c     **** 
 1152              		.loc 1 504 39 is_stmt 0 view .LVU344
 1153 010c D4F8A820 		ldr	r2, [r4, #168]
 504:Src/app.c     **** 
 1154              		.loc 1 504 34 view .LVU345
 1155 0110 0133     		adds	r3, r3, #1
 504:Src/app.c     **** 
 1156              		.loc 1 504 39 view .LVU346
 1157 0112 93FBF2F1 		sdiv	r1, r3, r2
 1158 0116 02FB1133 		mls	r3, r2, r1, r3
 504:Src/app.c     **** 
 1159              		.loc 1 504 17 view .LVU347
 1160 011a C4F8B830 		str	r3, [r4, #184]
 506:Src/app.c     **** }
 1161              		.loc 1 506 3 is_stmt 1 view .LVU348
 1162              	.LVL80:
ARM GAS  /tmp/ccReAcTZ.s 			page 68


 506:Src/app.c     **** }
 1163              		.loc 1 506 3 is_stmt 0 view .LVU349
 1164              	.LBE212:
 1165              	.LBE213:
1239:Src/app.c     **** 
 1166              		.loc 1 1239 5 is_stmt 1 view .LVU350
 1167 011e BBF1000F 		cmp	fp, #0
 1168 0122 04D1     		bne	.L56
1239:Src/app.c     **** 
 1169              		.loc 1 1239 5 is_stmt 0 discriminator 1 view .LVU351
 1170 0124 40F2D741 		movw	r1, #1239
 1171 0128 514B     		ldr	r3, .L70+52
 1172 012a 4C4A     		ldr	r2, .L70+32
 1173 012c 9CE7     		b	.L69
 1174              	.L56:
1245:Src/app.c     ****     
 1175              		.loc 1 1245 5 is_stmt 1 view .LVU352
 1176              	.LVL81:
 1177              	.LBB214:
 1178              	.LBI194:
 843:Src/app.c     **** {
 1179              		.loc 1 843 12 view .LVU353
 1180              	.LBB208:
 845:Src/app.c     ****   int detection_nb;
 1181              		.loc 1 845 3 view .LVU354
 846:Src/app.c     ****   int ret;
 1182              		.loc 1 846 3 view .LVU355
 847:Src/app.c     ****   int i;
 1183              		.loc 1 847 3 view .LVU356
 848:Src/app.c     **** 
 1184              		.loc 1 848 3 view .LVU357
 850:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1185              		.loc 1 850 3 view .LVU358
 850:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1186              		.loc 1 850 14 is_stmt 0 view .LVU359
 1187 012e FFF7FEFF 		bl	HAL_GetTick
 1188              	.LVL82:
 852:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1189              		.loc 1 852 9 view .LVU360
 1190 0132 5946     		mov	r1, fp
 850:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1191              		.loc 1 850 14 view .LVU361
 1192 0134 8246     		mov	r10, r0
 1193              	.LVL83:
 852:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1194              		.loc 1 852 3 is_stmt 1 view .LVU362
 852:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1195              		.loc 1 852 9 is_stmt 0 view .LVU363
 1196 0136 029A     		ldr	r2, [sp, #8]
 1197 0138 0020     		movs	r0, #0
 1198              	.LVL84:
 852:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1199              		.loc 1 852 9 view .LVU364
 1200 013a FFF7FEFF 		bl	LL_ATON_Set_User_Input_Buffer_yolo_detector
 1201              	.LVL85:
 853:Src/app.c     **** 
 1202              		.loc 1 853 3 is_stmt 1 view .LVU365
ARM GAS  /tmp/ccReAcTZ.s 			page 69


 1203 013e 20B1     		cbz	r0, .L57
 853:Src/app.c     **** 
 1204              		.loc 1 853 3 is_stmt 0 discriminator 1 view .LVU366
 1205 0140 40F25531 		movw	r1, #853
 1206 0144 4B4B     		ldr	r3, .L70+56
 1207 0146 4C4A     		ldr	r2, .L70+60
 1208 0148 8EE7     		b	.L69
 1209              	.L57:
 855:Src/app.c     **** 
 1210              		.loc 1 855 3 is_stmt 1 view .LVU367
 1211 014a 4046     		mov	r0, r8
 1212              	.LVL86:
 855:Src/app.c     **** 
 1213              		.loc 1 855 3 is_stmt 0 view .LVU368
 1214 014c FFF7FEFF 		bl	LL_ATON_RT_Main
 1215              	.LVL87:
 858:Src/app.c     **** 
 1216              		.loc 1 858 3 is_stmt 1 view .LVU369
 858:Src/app.c     **** 
 1217              		.loc 1 858 40 is_stmt 0 view .LVU370
 1218 0150 039B     		ldr	r3, [sp, #12]
 858:Src/app.c     **** 
 1219              		.loc 1 858 9 view .LVU371
 1220 0152 0EAA     		add	r2, sp, #56
 858:Src/app.c     **** 
 1221              		.loc 1 858 40 view .LVU372
 1222 0154 0193     		str	r3, [sp, #4]
 858:Src/app.c     **** 
 1223              		.loc 1 858 9 view .LVU373
 1224 0156 2946     		mov	r1, r5
 1225 0158 05AB     		add	r3, sp, #20
 1226 015a 01A8     		add	r0, sp, #4
 1227 015c FFF7FEFF 		bl	app_postprocess_run
 1228              	.LVL88:
 861:Src/app.c     **** 
 1229              		.loc 1 861 3 is_stmt 1 view .LVU374
 864:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 1230              		.loc 1 864 3 view .LVU375
 864:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 1231              		.loc 1 864 17 discriminator 1 view .LVU376
 869:Src/app.c     **** 
 1232              		.loc 1 869 3 view .LVU377
 869:Src/app.c     **** 
 1233              		.loc 1 869 3 view .LVU378
 869:Src/app.c     **** 
 1234              		.loc 1 869 3 discriminator 1 view .LVU379
 1235 0160 049A     		ldr	r2, [sp, #16]
 1236              	.LVL89:
 1237              	.LBB207:
 1238              	.LBI196:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 1239              		.loc 3 358 27 view .LVU380
 1240              	.LBB206:
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1241              		.loc 3 361 5 view .LVU381
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1242              		.loc 3 361 8 is_stmt 0 view .LVU382
ARM GAS  /tmp/ccReAcTZ.s 			page 70


 1243 0162 002A     		cmp	r2, #0
 1244 0164 1ADD     		ble	.L58
 1245              	.LBB205:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1246              		.loc 3 362 8 is_stmt 1 view .LVU383
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1247              		.loc 3 362 36 is_stmt 0 view .LVU384
 1248 0166 039B     		ldr	r3, [sp, #12]
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1249              		.loc 3 362 52 view .LVU385
 1250 0168 03F01F01 		and	r1, r3, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1251              		.loc 3 362 32 view .LVU386
 1252 016c 1144     		add	r1, r1, r2
 1253              	.LVL90:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1254              		.loc 3 363 7 is_stmt 1 view .LVU387
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1255              		.loc 3 365 7 view .LVU388
 1256              	.LBB199:
 1257              	.LBI199:
 1258              		.file 4 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  /tmp/ccReAcTZ.s 			page 71


  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  /tmp/ccReAcTZ.s 			page 72


  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
ARM GAS  /tmp/ccReAcTZ.s 			page 73


 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
ARM GAS  /tmp/ccReAcTZ.s 			page 74


 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 75


 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1259              		.loc 4 269 27 view .LVU389
 1260              	.LBB200:
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1261              		.loc 4 271 3 view .LVU390
 1262              		.syntax unified
 1263              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1264 016e BFF34F8F 		dsb 0xF
 1265              	@ 0 "" 2
 1266              		.thumb
 1267              		.syntax unified
 1268              	.LBE200:
 1269              	.LBE199:
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1270              		.loc 3 371 25 is_stmt 0 discriminator 1 view .LVU391
 1271 0172 DA43     		mvns	r2, r3
 1272              	.LVL91:
 1273              		.loc 3 371 25 discriminator 1 view .LVU392
 1274 0174 5818     		adds	r0, r3, r1
 1275 0176 0244     		add	r2, r2, r0
 1276 0178 2039     		subs	r1, r1, #32
 1277              	.LVL92:
 1278              		.loc 3 371 25 discriminator 1 view .LVU393
 1279 017a 5209     		lsrs	r2, r2, #5
 1280 017c 2031     		adds	r1, r1, #32
 1281              	.LVL93:
 1282              		.loc 3 371 25 discriminator 1 view .LVU394
 1283 017e 02F1010E 		add	lr, r2, #1
 1284 0182 D8BF     		it	le
 1285 0184 AE46     		movle	lr, r5
 1286 0186 4EF001E0 		dls	lr, lr
 1287              	.LVL94:
 1288              	.L59:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1289              		.loc 3 367 7 is_stmt 1 view .LVU395
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1290              		.loc 3 368 9 view .LVU396
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1291              		.loc 3 368 22 is_stmt 0 view .LVU397
 1292 018a C9F85C32 		str	r3, [r9, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1293              		.loc 3 369 9 is_stmt 1 view .LVU398
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1294              		.loc 3 369 17 is_stmt 0 view .LVU399
 1295 018e 2033     		adds	r3, r3, #32
 1296              	.LVL95:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1297              		.loc 3 370 9 is_stmt 1 view .LVU400
 1298              		.loc 3 371 25 discriminator 1 view .LVU401
ARM GAS  /tmp/ccReAcTZ.s 			page 76


 1299 0190 0FF005C8 		le	lr, .L59
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 1300              		.loc 3 373 7 view .LVU402
 1301              	.LBB201:
 1302              	.LBI201:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1303              		.loc 4 269 27 view .LVU403
 1304              	.LBB202:
 1305              		.loc 4 271 3 view .LVU404
 1306              		.syntax unified
 1307              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1308 0194 BFF34F8F 		dsb 0xF
 1309              	@ 0 "" 2
 1310              		.thumb
 1311              		.syntax unified
 1312              	.LBE202:
 1313              	.LBE201:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 1314              		.loc 3 374 7 view .LVU405
 1315              	.LBB203:
 1316              	.LBI203:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1317              		.loc 4 258 27 view .LVU406
 1318              	.LBB204:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1319              		.loc 4 260 3 view .LVU407
 1320              		.syntax unified
 1321              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1322 0198 BFF36F8F 		isb 0xF
 1323              	@ 0 "" 2
 1324              	.LVL96:
 1325              		.thumb
 1326              		.syntax unified
 1327              	.L58:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1328              		.loc 4 260 3 is_stmt 0 view .LVU408
 1329              	.LBE204:
 1330              	.LBE203:
 1331              	.LBE205:
 1332              	.LBE206:
 1333              	.LBE207:
 869:Src/app.c     **** 
 1334              		.loc 1 869 3 is_stmt 1 discriminator 3 view .LVU409
 871:Src/app.c     **** 
 1335              		.loc 1 871 3 view .LVU410
 871:Src/app.c     **** 
 1336              		.loc 1 871 16 is_stmt 0 view .LVU411
 1337 019c FFF7FEFF 		bl	HAL_GetTick
 1338              	.LVL97:
 873:Src/app.c     **** }
 1339              		.loc 1 873 3 is_stmt 1 view .LVU412
 873:Src/app.c     **** }
 1340              		.loc 1 873 3 is_stmt 0 view .LVU413
 1341              	.LBE208:
 1342              	.LBE214:
1247:Src/app.c     ****     hl_ms = 0;       // Set inference time to 0
ARM GAS  /tmp/ccReAcTZ.s 			page 77


 1343              		.loc 1 1247 5 is_stmt 1 view .LVU414
1248:Src/app.c     **** 
 1344              		.loc 1 1248 5 view .LVU415
1251:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 1345              		.loc 1 1251 5 view .LVU416
 1346              	.LBB215:
 1347              	.LBB209:
 871:Src/app.c     **** 
 1348              		.loc 1 871 30 is_stmt 0 discriminator 1 view .LVU417
 1349 01a0 A0EB0A03 		sub	r3, r0, r10
 1350              	.LVL98:
 871:Src/app.c     **** 
 1351              		.loc 1 871 30 discriminator 1 view .LVU418
 1352 01a4 07EE903A 		vmov	s15, r3	@ int
 1353              	.LBE209:
 1354              	.LBE215:
1251:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 1355              		.loc 1 1251 60 view .LVU419
 1356 01a8 B1EE0C7A 		vmov.f32	s14, #7.0e+0
 1357 01ac F8EE677A 		vcvt.f32.u32	s15, s15
 1358              	.LBB216:
 1359              	.LBB217:
 491:Src/app.c     ****   assert(ret == pdTRUE);
 1360              		.loc 1 491 9 view .LVU420
 1361 01b0 0023     		movs	r3, #0
 1362              	.LVL99:
 491:Src/app.c     ****   assert(ret == pdTRUE);
 1363              		.loc 1 491 9 view .LVU421
 1364              	.LBE217:
 1365              	.LBE216:
1251:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 1366              		.loc 1 1251 60 view .LVU422
 1367 01b2 E8EE077A 		vfma.f32	s15, s16, s14
1251:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 1368              		.loc 1 1251 20 view .LVU423
 1369 01b6 B4EE008A 		vmov.f32	s16, #1.25e-1
 1370              	.LVL100:
 1371              	.LBB220:
 1372              	.LBB218:
 491:Src/app.c     ****   assert(ret == pdTRUE);
 1373              		.loc 1 491 9 view .LVU424
 1374 01ba 1A46     		mov	r2, r3
 1375 01bc 1946     		mov	r1, r3
 1376 01be 2068     		ldr	r0, [r4]
 1377              	.LVL101:
 491:Src/app.c     ****   assert(ret == pdTRUE);
 1378              		.loc 1 491 9 view .LVU425
 1379              	.LBE218:
 1380              	.LBE220:
1251:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 1381              		.loc 1 1251 20 view .LVU426
 1382 01c0 27EE888A 		vmul.f32	s16, s15, s16
 1383              	.LVL102:
1252:Src/app.c     **** 
 1384              		.loc 1 1252 5 is_stmt 1 view .LVU427
1255:Src/app.c     **** 
 1385              		.loc 1 1255 5 view .LVU428
ARM GAS  /tmp/ccReAcTZ.s 			page 78


 1386              	.LBB221:
 1387              	.LBI216:
 487:Src/app.c     **** {
 1388              		.loc 1 487 13 view .LVU429
 1389              	.LBB219:
 489:Src/app.c     **** 
 1390              		.loc 1 489 3 view .LVU430
 491:Src/app.c     ****   assert(ret == pdTRUE);
 1391              		.loc 1 491 3 view .LVU431
 491:Src/app.c     ****   assert(ret == pdTRUE);
 1392              		.loc 1 491 9 is_stmt 0 view .LVU432
 1393 01c4 FFF7FEFF 		bl	xQueueGenericSend
 1394              	.LVL103:
 492:Src/app.c     **** }
 1395              		.loc 1 492 3 is_stmt 1 view .LVU433
 1396 01c8 0128     		cmp	r0, #1
 1397 01ca 04D0     		beq	.L60
 492:Src/app.c     **** }
 1398              		.loc 1 492 3 is_stmt 0 discriminator 1 view .LVU434
 1399 01cc 4FF4F671 		mov	r1, #492
 1400 01d0 254B     		ldr	r3, .L70+44
 1401 01d2 2A4A     		ldr	r2, .L70+64
 1402 01d4 48E7     		b	.L69
 1403              	.L60:
 1404              	.LVL104:
 492:Src/app.c     **** }
 1405              		.loc 1 492 3 discriminator 1 view .LVU435
 1406              	.LBE219:
 1407              	.LBE221:
1261:Src/app.c     ****     assert(ret == pdTRUE);
 1408              		.loc 1 1261 5 is_stmt 1 view .LVU436
1261:Src/app.c     ****     assert(ret == pdTRUE);
 1409              		.loc 1 1261 11 is_stmt 0 view .LVU437
 1410 01d6 2A4D     		ldr	r5, .L70+68
 1411 01d8 4FF0FF31 		mov	r1, #-1
 1412 01dc 686D     		ldr	r0, [r5, #84]
 1413 01de FFF7FEFF 		bl	xQueueSemaphoreTake
 1414              	.LVL105:
1262:Src/app.c     **** 
 1415              		.loc 1 1262 5 is_stmt 1 view .LVU438
 1416 01e2 0128     		cmp	r0, #1
 1417 01e4 04D0     		beq	.L61
1262:Src/app.c     **** 
 1418              		.loc 1 1262 5 is_stmt 0 discriminator 1 view .LVU439
 1419 01e6 40F2EE41 		movw	r1, #1262
 1420 01ea 1F4B     		ldr	r3, .L70+44
 1421 01ec 1B4A     		ldr	r2, .L70+32
 1422 01ee 3BE7     		b	.L69
 1423              	.L61:
1265:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
 1424              		.loc 1 1265 5 is_stmt 1 view .LVU440
1266:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 1425              		.loc 1 1266 21 is_stmt 0 view .LVU441
 1426 01f0 4FF0000A 		mov	r10, #0
1265:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
 1427              		.loc 1 1265 23 view .LVU442
 1428 01f4 FDEEC87A 		vcvt.s32.f32	s15, s16
ARM GAS  /tmp/ccReAcTZ.s 			page 79


1275:Src/app.c     ****     assert(ret == pdTRUE);
 1429              		.loc 1 1275 11 view .LVU443
 1430 01f8 5346     		mov	r3, r10
 1431 01fa 5246     		mov	r2, r10
 1432 01fc 5146     		mov	r1, r10
 1433 01fe 686D     		ldr	r0, [r5, #84]
 1434              	.LVL106:
1265:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
 1435              		.loc 1 1265 23 view .LVU444
 1436 0200 C5ED2B7A 		vstr.32	s15, [r5, #172]	@ int
1266:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 1437              		.loc 1 1266 5 is_stmt 1 view .LVU445
1267:Src/app.c     ****     disp.info.pd_hand_nb = 0;
 1438              		.loc 1 1267 28 is_stmt 0 view .LVU446
 1439 0204 C5ED2A8A 		vstr.32	s17, [r5, #168]
1266:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 1440              		.loc 1 1266 21 view .LVU447
 1441 0208 C5F8B0A0 		str	r10, [r5, #176]
1267:Src/app.c     ****     disp.info.pd_hand_nb = 0;
 1442              		.loc 1 1267 5 is_stmt 1 view .LVU448
1268:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 1443              		.loc 1 1268 5 view .LVU449
1268:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 1444              		.loc 1 1268 26 is_stmt 0 view .LVU450
 1445 020c C5F8C4A0 		str	r10, [r5, #196]
1269:Src/app.c     ****     disp.info.hands[0].is_valid = 0; // Set hand as invalid
 1446              		.loc 1 1269 5 is_stmt 1 view .LVU451
1269:Src/app.c     ****     disp.info.hands[0].is_valid = 0; // Set hand as invalid
 1447              		.loc 1 1269 27 is_stmt 0 view .LVU452
 1448 0210 C5F8C870 		str	r7, [r5, #200]	@ float
1270:Src/app.c     **** 
 1449              		.loc 1 1270 5 is_stmt 1 view .LVU453
1270:Src/app.c     **** 
 1450              		.loc 1 1270 33 is_stmt 0 view .LVU454
 1451 0214 C5F8CCA0 		str	r10, [r5, #204]
1275:Src/app.c     ****     assert(ret == pdTRUE);
 1452              		.loc 1 1275 5 is_stmt 1 view .LVU455
1275:Src/app.c     ****     assert(ret == pdTRUE);
 1453              		.loc 1 1275 11 is_stmt 0 view .LVU456
 1454 0218 FFF7FEFF 		bl	xQueueGenericSend
 1455              	.LVL107:
1276:Src/app.c     **** 
 1456              		.loc 1 1276 5 is_stmt 1 view .LVU457
 1457 021c 0128     		cmp	r0, #1
 1458 021e 04D0     		beq	.L62
1276:Src/app.c     **** 
 1459              		.loc 1 1276 5 is_stmt 0 discriminator 1 view .LVU458
 1460 0220 40F2FC41 		movw	r1, #1276
 1461 0224 104B     		ldr	r3, .L70+44
 1462 0226 0D4A     		ldr	r2, .L70+32
 1463 0228 1EE7     		b	.L69
 1464              	.L62:
1279:Src/app.c     ****   }
 1465              		.loc 1 1279 5 is_stmt 1 view .LVU459
 1466 022a 2868     		ldr	r0, [r5]
 1467              	.LVL108:
1279:Src/app.c     ****   }
ARM GAS  /tmp/ccReAcTZ.s 			page 80


 1468              		.loc 1 1279 5 is_stmt 0 view .LVU460
 1469 022c 5346     		mov	r3, r10
 1470 022e 5246     		mov	r2, r10
 1471 0230 5146     		mov	r1, r10
 1472 0232 FFF7FEFF 		bl	xQueueGenericSend
 1473              	.LVL109:
 1474              	.LBE222:
1227:Src/app.c     ****   {
 1475              		.loc 1 1227 9 is_stmt 1 view .LVU461
 1476              	.LBB223:
1233:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1477              		.loc 1 1233 18 is_stmt 0 discriminator 1 view .LVU462
 1478 0236 3546     		mov	r5, r6
 1479              	.LBE223:
1228:Src/app.c     ****     uint8_t *capture_buffer;
 1480              		.loc 1 1228 3 view .LVU463
 1481 0238 47E7     		b	.L63
 1482              	.L71:
 1483 023a 00BF     		.align	2
 1484              	.L70:
 1485 023c 00000000 		.word	NN_Instance_yolo_detector
 1486 0240 CDCCCC3E 		.word	1053609165
 1487 0244 6666E63E 		.word	1055286886
 1488 0248 00000000 		.word	.LC4
 1489 024c 00000000 		.word	__func__.9
 1490 0250 0E000000 		.word	.LC2
 1491 0254 00000000 		.word	nn_input_queue
 1492 0258 09000000 		.word	.LC5
 1493 025c 00000000 		.word	__func__.10
 1494 0260 00000000 		.word	0
 1495 0264 0000803D 		.word	1031798784
 1496 0268 00000000 		.word	.LC1
 1497 026c 00000000 		.word	__func__.8
 1498 0270 15000000 		.word	.LC6
 1499 0274 24000000 		.word	.LC7
 1500 0278 00000000 		.word	__func__.7
 1501 027c 00000000 		.word	__func__.6
 1502 0280 00000000 		.word	disp
 1503 0284 00ED00E0 		.word	-536810240
 1504              		.cfi_endproc
 1505              	.LFE7399:
 1507              		.section	.text.display_hand,"ax",%progbits
 1508              		.align	1
 1509              		.global	display_hand
 1510              		.syntax unified
 1511              		.thumb
 1512              		.thumb_func
 1514              	display_hand:
 1515              	.LVL110:
 1516              	.LFB7389:
 756:Src/app.c     ****   if (info->is_pd_displayed) {
 1517              		.loc 1 756 1 is_stmt 1 view -0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 72
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 757:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 1521              		.loc 1 757 3 view .LVU465
ARM GAS  /tmp/ccReAcTZ.s 			page 81


 756:Src/app.c     ****   if (info->is_pd_displayed) {
 1522              		.loc 1 756 1 is_stmt 0 view .LVU466
 1523 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1524              		.cfi_def_cfa_offset 32
 1525              		.cfi_offset 4, -32
 1526              		.cfi_offset 5, -28
 1527              		.cfi_offset 6, -24
 1528              		.cfi_offset 7, -20
 1529              		.cfi_offset 8, -16
 1530              		.cfi_offset 9, -12
 1531              		.cfi_offset 10, -8
 1532              		.cfi_offset 14, -4
 1533 0004 2DED048B 		vpush.64	{d8, d9}
 1534              		.cfi_def_cfa_offset 48
 1535              		.cfi_offset 80, -48
 1536              		.cfi_offset 81, -44
 1537              		.cfi_offset 82, -40
 1538              		.cfi_offset 83, -36
 757:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 1539              		.loc 1 757 6 view .LVU467
 1540 0008 8369     		ldr	r3, [r0, #24]
 756:Src/app.c     ****   if (info->is_pd_displayed) {
 1541              		.loc 1 756 1 view .LVU468
 1542 000a 0546     		mov	r5, r0
 1543 000c 0C46     		mov	r4, r1
 1544 000e 94B0     		sub	sp, sp, #80
 1545              		.cfi_def_cfa_offset 128
 757:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 1546              		.loc 1 757 6 view .LVU469
 1547 0010 002B     		cmp	r3, #0
 1548 0012 00F0FD80 		beq	.L73
 758:Src/app.c     ****     display_roi(&hand->roi);
 1549              		.loc 1 758 5 is_stmt 1 view .LVU470
 1550              	.LVL111:
 1551              	.LBB235:
 1552              	.LBI235:
 615:Src/app.c     **** {
 1553              		.loc 1 615 13 view .LVU471
 1554              	.LBB236:
 617:Src/app.c     ****   int x0, y0;
 1555              		.loc 1 617 3 view .LVU472
 618:Src/app.c     ****   int x1, y1;
 1556              		.loc 1 618 3 view .LVU473
 619:Src/app.c     ****   int w, h;
 1557              		.loc 1 619 3 view .LVU474
 620:Src/app.c     ****   int i;
 1558              		.loc 1 620 3 view .LVU475
 621:Src/app.c     **** 
 1559              		.loc 1 621 3 view .LVU476
 624:Src/app.c     ****   yc = (int)hand->y_center;
 1560              		.loc 1 624 3 view .LVU477
 624:Src/app.c     ****   yc = (int)hand->y_center;
 1561              		.loc 1 624 6 is_stmt 0 view .LVU478
 1562 0016 D1ED027A 		vldr.32	s15, [r1, #8]
 1563 001a FDEEE77A 		vcvt.s32.f32	s15, s15
 1564 001e 17EE900A 		vmov	r0, s15	@ int
 1565              	.LVL112:
ARM GAS  /tmp/ccReAcTZ.s 			page 82


 625:Src/app.c     ****   w = (int)hand->width;
 1566              		.loc 1 625 3 is_stmt 1 view .LVU479
 625:Src/app.c     ****   w = (int)hand->width;
 1567              		.loc 1 625 6 is_stmt 0 view .LVU480
 1568 0022 D1ED037A 		vldr.32	s15, [r1, #12]
 1569 0026 FDEEE77A 		vcvt.s32.f32	s15, s15
 1570 002a 17EE901A 		vmov	r1, s15	@ int
 1571              	.LVL113:
 626:Src/app.c     ****   h = (int)hand->height;
 1572              		.loc 1 626 3 is_stmt 1 view .LVU481
 627:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 1573              		.loc 1 627 3 view .LVU482
 627:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 1574              		.loc 1 627 5 is_stmt 0 view .LVU483
 1575 002e D4ED057A 		vldr.32	s15, [r4, #20]
 1576 0032 FDEEE77A 		vcvt.s32.f32	s15, s15
 1577 0036 17EE903A 		vmov	r3, s15	@ int
 1578              	.LVL114:
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1579              		.loc 1 628 3 is_stmt 1 view .LVU484
 626:Src/app.c     ****   h = (int)hand->height;
 1580              		.loc 1 626 5 is_stmt 0 view .LVU485
 1581 003a D4ED047A 		vldr.32	s15, [r4, #16]
 1582 003e FDEEE77A 		vcvt.s32.f32	s15, s15
 1583 0042 17EE902A 		vmov	r2, s15	@ int
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1584              		.loc 1 628 16 view .LVU486
 1585 0046 0132     		adds	r2, r2, #1
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1586              		.loc 1 628 21 view .LVU487
 1587 0048 02EBD272 		add	r2, r2, r2, lsr #31
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1588              		.loc 1 629 16 view .LVU488
 1589 004c 0133     		adds	r3, r3, #1
 1590              	.LVL115:
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1591              		.loc 1 628 21 view .LVU489
 1592 004e 5210     		asrs	r2, r2, #1
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1593              		.loc 1 629 21 view .LVU490
 1594 0050 03EBD373 		add	r3, r3, r3, lsr #31
 1595              	.LVL116:
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1596              		.loc 1 628 21 view .LVU491
 1597 0054 5242     		rsbs	r2, r2, #0
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1598              		.loc 1 629 21 view .LVU492
 1599 0056 5B10     		asrs	r3, r3, #1
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1600              		.loc 1 628 11 view .LVU493
 1601 0058 8618     		adds	r6, r0, r2
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1602              		.loc 1 629 21 view .LVU494
 1603 005a 5B42     		rsbs	r3, r3, #0
 630:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 1604              		.loc 1 630 6 view .LVU495
 1605 005c 801A     		subs	r0, r0, r2
ARM GAS  /tmp/ccReAcTZ.s 			page 83


 1606              	.LVL117:
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1607              		.loc 1 628 6 view .LVU496
 1608 005e 0296     		str	r6, [sp, #8]
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1609              		.loc 1 629 3 is_stmt 1 view .LVU497
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1610              		.loc 1 629 11 is_stmt 0 view .LVU498
 1611 0060 CE18     		adds	r6, r1, r3
 631:Src/app.c     ****   clamp_point(&x0, &y0);
 1612              		.loc 1 631 6 view .LVU499
 1613 0062 C91A     		subs	r1, r1, r3
 1614              	.LVL118:
 630:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 1615              		.loc 1 630 6 view .LVU500
 1616 0064 0490     		str	r0, [sp, #16]
 631:Src/app.c     ****   clamp_point(&x0, &y0);
 1617              		.loc 1 631 6 view .LVU501
 1618 0066 0C91     		str	r1, [sp, #48]
 632:Src/app.c     ****   clamp_point(&x1, &y1);
 1619              		.loc 1 632 3 view .LVU502
 1620 0068 02A8     		add	r0, sp, #8
 1621 006a 03A9     		add	r1, sp, #12
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1622              		.loc 1 629 6 view .LVU503
 1623 006c 0396     		str	r6, [sp, #12]
 630:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 1624              		.loc 1 630 3 is_stmt 1 view .LVU504
 631:Src/app.c     ****   clamp_point(&x0, &y0);
 1625              		.loc 1 631 3 view .LVU505
 632:Src/app.c     ****   clamp_point(&x1, &y1);
 1626              		.loc 1 632 3 view .LVU506
 1627 006e FFF7FEFF 		bl	clamp_point
 1628              	.LVL119:
 633:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 1629              		.loc 1 633 3 view .LVU507
 1630 0072 0CA9     		add	r1, sp, #48
 1631 0074 04A8     		add	r0, sp, #16
 1632 0076 FFF7FEFF 		bl	clamp_point
 1633              	.LVL120:
 634:Src/app.c     **** 
 1634              		.loc 1 634 3 view .LVU508
 1635 007a DDE90201 		ldrd	r0, r1, [sp, #8]
 1636 007e 4FF0FF23 		mov	r3, #-16711936
 1637 0082 049A     		ldr	r2, [sp, #16]
 1638 0084 0093     		str	r3, [sp]
 1639 0086 0C9B     		ldr	r3, [sp, #48]
 1640 0088 121A     		subs	r2, r2, r0
 1641 008a 5B1A     		subs	r3, r3, r1
 1642 008c FFF7FEFF 		bl	UTIL_LCD_DrawRect
 1643              	.LVL121:
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1644              		.loc 1 637 3 view .LVU509
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1645              		.loc 1 637 17 discriminator 1 view .LVU510
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1646              		.loc 1 637 10 is_stmt 0 view .LVU511
ARM GAS  /tmp/ccReAcTZ.s 			page 84


 1647 0090 0026     		movs	r6, #0
 1648              	.LBB237:
 638:Src/app.c     **** 
 1649              		.loc 1 638 62 discriminator 3 view .LVU512
 1650 0092 DFF8A081 		ldr	r8, .L93+4
 1651 0096 664F     		ldr	r7, .L93
 1652              	.LVL122:
 1653              	.L75:
 638:Src/app.c     **** 
 1654              		.loc 1 638 5 is_stmt 1 view .LVU513
 640:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 1655              		.loc 1 640 25 is_stmt 0 view .LVU514
 1656 0098 A269     		ldr	r2, [r4, #24]
 638:Src/app.c     **** 
 1657              		.loc 1 638 62 discriminator 3 view .LVU515
 1658 009a 36F00203 		bics	r3, r6, #2
 640:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 1659              		.loc 1 640 25 view .LVU516
 1660 009e 02EBC602 		add	r2, r2, r6, lsl #3
 640:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 1661              		.loc 1 640 10 view .LVU517
 1662 00a2 D2ED007A 		vldr.32	s15, [r2]
 1663 00a6 FDEEE77A 		vcvt.s32.f32	s15, s15
 1664 00aa CDED027A 		vstr.32	s15, [sp, #8]	@ int
 641:Src/app.c     ****     clamp_point(&x0, &y0);
 1665              		.loc 1 641 10 view .LVU518
 1666 00ae D2ED017A 		vldr.32	s15, [r2, #4]
 638:Src/app.c     **** 
 1667              		.loc 1 638 62 discriminator 3 view .LVU519
 1668 00b2 0CBF     		ite	eq
 1669 00b4 C146     		moveq	r9, r8
 1670 00b6 B946     		movne	r9, r7
 1671              	.LVL123:
 640:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 1672              		.loc 1 640 5 is_stmt 1 view .LVU520
 641:Src/app.c     ****     clamp_point(&x0, &y0);
 1673              		.loc 1 641 5 view .LVU521
 641:Src/app.c     ****     clamp_point(&x0, &y0);
 1674              		.loc 1 641 10 is_stmt 0 view .LVU522
 1675 00b8 FDEEE77A 		vcvt.s32.f32	s15, s15
 642:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 1676              		.loc 1 642 5 view .LVU523
 1677 00bc 03A9     		add	r1, sp, #12
 1678 00be 02A8     		add	r0, sp, #8
 641:Src/app.c     ****     clamp_point(&x0, &y0);
 1679              		.loc 1 641 10 view .LVU524
 1680 00c0 CDED037A 		vstr.32	s15, [sp, #12]	@ int
 642:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 1681              		.loc 1 642 5 is_stmt 1 view .LVU525
 1682              	.LBE237:
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1683              		.loc 1 637 23 is_stmt 0 discriminator 2 view .LVU526
 1684 00c4 0136     		adds	r6, r6, #1
 1685              	.LVL124:
 1686              	.LBB238:
 642:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 1687              		.loc 1 642 5 view .LVU527
ARM GAS  /tmp/ccReAcTZ.s 			page 85


 1688 00c6 FFF7FEFF 		bl	clamp_point
 1689              	.LVL125:
 643:Src/app.c     ****   }
 1690              		.loc 1 643 5 is_stmt 1 view .LVU528
 1691 00ca DDE90201 		ldrd	r0, r1, [sp, #8]
 1692 00ce 4B46     		mov	r3, r9
 1693 00d0 0222     		movs	r2, #2
 1694 00d2 FFF7FEFF 		bl	UTIL_LCD_FillCircle
 1695              	.LVL126:
 1696              	.LBE238:
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1697              		.loc 1 637 23 discriminator 2 view .LVU529
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1698              		.loc 1 637 17 discriminator 1 view .LVU530
 1699 00d6 072E     		cmp	r6, #7
 1700 00d8 DED1     		bne	.L75
 1701              	.LVL127:
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1702              		.loc 1 637 17 is_stmt 0 discriminator 1 view .LVU531
 1703              	.LBE236:
 1704              	.LBE235:
 759:Src/app.c     ****   }
 1705              		.loc 1 759 5 is_stmt 1 view .LVU532
 1706              	.LBB239:
 1707              	.LBI239:
 692:Src/app.c     **** {
 1708              		.loc 1 692 13 view .LVU533
 1709              	.LBB240:
 694:Src/app.c     ****   int corners[4][2];
 1710              		.loc 1 694 3 view .LVU534
 695:Src/app.c     ****   int is_clamp;
 1711              		.loc 1 695 3 view .LVU535
 696:Src/app.c     ****   int i;
 1712              		.loc 1 696 3 view .LVU536
 697:Src/app.c     **** 
 1713              		.loc 1 697 3 view .LVU537
 700:Src/app.c     **** 
 1714              		.loc 1 700 3 view .LVU538
 1715              	.LBB241:
 1716              	.LBI241:
 656:Src/app.c     **** {
 1717              		.loc 1 656 13 view .LVU539
 1718              	.LBB242:
 658:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 1719              		.loc 1 658 3 view .LVU540
 659:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 1720              		.loc 1 659 14 is_stmt 0 view .LVU541
 1721 00da F6EE006A 		vmov.f32	s13, #5.0e-1
 659:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 1722              		.loc 1 659 6 view .LVU542
 1723 00de D4ED097A 		vldr.32	s15, [r4, #36]
 659:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 1724              		.loc 1 659 19 view .LVU543
 1725 00e2 94ED0A7A 		vldr.32	s14, [r4, #40]
 1726              	.LBB243:
 1727              	.LBB244:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
ARM GAS  /tmp/ccReAcTZ.s 			page 86


 1728              		.loc 1 652 11 view .LVU544
 1729 00e6 94ED0B9A 		vldr.32	s18, [r4, #44]
 1730              	.LBE244:
 1731              	.LBE243:
 659:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 1732              		.loc 1 659 14 view .LVU545
 1733 00ea 67EEE67A 		vnmul.f32	s15, s15, s13
 1734              	.LVL128:
 659:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 1735              		.loc 1 659 27 view .LVU546
 1736 00ee 27EE667A 		vnmul.f32	s14, s14, s13
 1737              	.LVL129:
 1738              	.LBB250:
 1739              	.LBB245:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1740              		.loc 1 652 11 view .LVU547
 1741 00f2 B7EEC99A 		vcvt.f64.f32	d9, s18
 1742 00f6 B1EE676A 		vneg.f32	s12, s15
 1743              	.LVL130:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1744              		.loc 1 652 11 view .LVU548
 1745 00fa F1EE476A 		vneg.f32	s13, s14
 1746              	.LVL131:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1747              		.loc 1 652 11 view .LVU549
 1748              	.LBE245:
 1749              	.LBE250:
 664:Src/app.c     **** 
 1750              		.loc 1 664 3 is_stmt 1 view .LVU550
 666:Src/app.c     ****   /* rotate */
 1751              		.loc 1 666 3 view .LVU551
 1752              	.LBB251:
 1753              	.LBB246:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1754              		.loc 1 652 11 is_stmt 0 view .LVU552
 1755 00fe B0EE490B 		vmov.f64	d0, d9
 1756              	.LBE246:
 1757              	.LBE251:
 666:Src/app.c     ****   /* rotate */
 1758              		.loc 1 666 3 view .LVU553
 1759 0102 CDED047A 		vstr.32	s15, [sp, #16]
 1760 0106 8DED057A 		vstr.32	s14, [sp, #20]
 1761 010a 8DED066A 		vstr.32	s12, [sp, #24]
 1762 010e 8DED077A 		vstr.32	s14, [sp, #28]
 1763 0112 8DED086A 		vstr.32	s12, [sp, #32]
 1764 0116 CDED096A 		vstr.32	s13, [sp, #36]
 1765 011a CDED0A7A 		vstr.32	s15, [sp, #40]
 1766 011e CDED0B6A 		vstr.32	s13, [sp, #44]
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1767              		.loc 1 668 3 is_stmt 1 view .LVU554
 1768              	.LVL132:
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1769              		.loc 1 668 17 discriminator 1 view .LVU555
 1770              	.LBB252:
 1771              	.LBB247:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1772              		.loc 1 652 11 is_stmt 0 view .LVU556
ARM GAS  /tmp/ccReAcTZ.s 			page 87


 1773 0122 FFF7FEFF 		bl	cos
 1774              	.LVL133:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1775              		.loc 1 652 11 view .LVU557
 1776 0126 B0EE408B 		vmov.f64	d8, d0
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1777              		.loc 1 652 31 discriminator 1 view .LVU558
 1778 012a B0EE490B 		vmov.f64	d0, d9
 1779 012e FFF7FEFF 		bl	sin
 1780              	.LVL134:
 1781              	.LBE247:
 1782              	.LBE252:
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1783              		.loc 1 668 10 view .LVU559
 1784 0132 4FF0040E 		mov	lr, #4
 1785 0136 0DF11009 		add	r9, sp, #16
 1786              	.LVL135:
 1787              	.LBB253:
 1788              	.LBB248:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1789              		.loc 1 652 31 discriminator 1 view .LVU560
 1790 013a 4B46     		mov	r3, r9
 1791              	.LBE248:
 1792              	.LBE253:
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1793              		.loc 1 668 10 view .LVU561
 1794 013c 4EF001E0 		dls	lr, lr
 1795              	.LVL136:
 1796              	.L76:
 669:Src/app.c     **** 
 1797              		.loc 1 669 5 is_stmt 1 view .LVU562
 1798              	.LBB254:
 1799              	.LBI243:
 647:Src/app.c     **** {
 1800              		.loc 1 647 13 view .LVU563
 1801              	.LBB249:
 649:Src/app.c     ****   float y = pt[1];
 1802              		.loc 1 649 3 view .LVU564
 650:Src/app.c     **** 
 1803              		.loc 1 650 3 view .LVU565
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1804              		.loc 1 652 3 view .LVU566
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1805              		.loc 1 652 45 is_stmt 0 discriminator 2 view .LVU567
 1806 0140 93ED017A 		vldr.32	s14, [r3, #4]
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1807              		.loc 1 652 25 discriminator 1 view .LVU568
 1808 0144 93ED005A 		vldr.32	s10, [r3]
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1809              		.loc 1 652 45 discriminator 2 view .LVU569
 1810 0148 B7EEC77A 		vcvt.f64.f32	d7, s14
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1811              		.loc 1 652 25 discriminator 1 view .LVU570
 1812 014c B7EEC55A 		vcvt.f64.f32	d5, s10
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1813              		.loc 1 652 29 discriminator 2 view .LVU571
 1814 0150 27EE406B 		vnmul.f64	d6, d7, d0
ARM GAS  /tmp/ccReAcTZ.s 			page 88


 653:Src/app.c     **** }
 1815              		.loc 1 653 45 discriminator 2 view .LVU572
 1816 0154 28EE077B 		vmul.f64	d7, d8, d7
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1817              		.loc 1 652 29 discriminator 2 view .LVU573
 1818 0158 A8EE056B 		vfma.f64	d6, d8, d5
 653:Src/app.c     **** }
 1819              		.loc 1 653 29 discriminator 2 view .LVU574
 1820 015c A5EE007B 		vfma.f64	d7, d5, d0
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1821              		.loc 1 652 29 discriminator 2 view .LVU575
 1822 0160 B7EEC66B 		vcvt.f32.f64	s12, d6
 653:Src/app.c     **** }
 1823              		.loc 1 653 29 discriminator 2 view .LVU576
 1824 0164 B7EEC77B 		vcvt.f32.f64	s14, d7
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1825              		.loc 1 652 29 discriminator 2 view .LVU577
 1826 0168 83ED006A 		vstr.32	s12, [r3]
 1827              	.LVL137:
 653:Src/app.c     **** }
 1828              		.loc 1 653 3 is_stmt 1 view .LVU578
 653:Src/app.c     **** }
 1829              		.loc 1 653 29 is_stmt 0 discriminator 2 view .LVU579
 1830 016c 83ED017A 		vstr.32	s14, [r3, #4]
 1831              	.LVL138:
 653:Src/app.c     **** }
 1832              		.loc 1 653 29 discriminator 2 view .LVU580
 1833              	.LBE249:
 1834              	.LBE254:
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1835              		.loc 1 668 23 is_stmt 1 discriminator 3 view .LVU581
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1836              		.loc 1 668 17 discriminator 1 view .LVU582
 1837 0170 0833     		adds	r3, r3, #8
 1838 0172 0FF01BC8 		le	lr, .L76
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1839              		.loc 1 672 10 is_stmt 0 view .LVU583
 1840 0176 4FF0040E 		mov	lr, #4
 673:Src/app.c     ****     corners[i][1] += roi->cy;
 1841              		.loc 1 673 25 view .LVU584
 1842 017a D4ED076A 		vldr.32	s13, [r4, #28]
 674:Src/app.c     ****   }
 1843              		.loc 1 674 25 view .LVU585
 1844 017e 94ED087A 		vldr.32	s14, [r4, #32]
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1845              		.loc 1 672 10 view .LVU586
 1846 0182 4EF001E0 		dls	lr, lr
 674:Src/app.c     ****   }
 1847              		.loc 1 674 25 view .LVU587
 1848 0186 04AB     		add	r3, sp, #16
 1849              	.L77:
 673:Src/app.c     ****     corners[i][1] += roi->cy;
 1850              		.loc 1 673 5 is_stmt 1 view .LVU588
 673:Src/app.c     ****     corners[i][1] += roi->cy;
 1851              		.loc 1 673 19 is_stmt 0 view .LVU589
 1852 0188 D3ED007A 		vldr.32	s15, [r3]
 1853 018c 77EEA67A 		vadd.f32	s15, s15, s13
ARM GAS  /tmp/ccReAcTZ.s 			page 89


 1854 0190 C3ED007A 		vstr.32	s15, [r3]
 674:Src/app.c     ****   }
 1855              		.loc 1 674 5 is_stmt 1 view .LVU590
 674:Src/app.c     ****   }
 1856              		.loc 1 674 19 is_stmt 0 view .LVU591
 1857 0194 D3ED017A 		vldr.32	s15, [r3, #4]
 1858 0198 77EE877A 		vadd.f32	s15, s15, s14
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1859              		.loc 1 672 17 discriminator 1 view .LVU592
 1860 019c 0833     		adds	r3, r3, #8
 674:Src/app.c     ****   }
 1861              		.loc 1 674 19 view .LVU593
 1862 019e 43ED017A 		vstr.32	s15, [r3, #-4]
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1863              		.loc 1 672 23 is_stmt 1 discriminator 3 view .LVU594
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1864              		.loc 1 672 17 discriminator 1 view .LVU595
 1865 01a2 0FF00FC8 		le	lr, .L77
 1866              	.LBE242:
 1867              	.LBE241:
 1868              	.LBB256:
 1869              	.LBB257:
 680:Src/app.c     ****   int i;
 1870              		.loc 1 680 7 is_stmt 0 view .LVU596
 1871 01a6 0026     		movs	r6, #0
 680:Src/app.c     ****   int i;
 1872              		.loc 1 680 7 view .LVU597
 1873 01a8 0CAF     		add	r7, sp, #48
 1874              	.LBE257:
 1875              	.LBE256:
 1876              	.LBB259:
 1877              	.LBB255:
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1878              		.loc 1 672 17 discriminator 1 view .LVU598
 1879 01aa B846     		mov	r8, r7
 1880              	.LBE255:
 1881              	.LBE259:
 1882              	.LBB260:
 1883              	.LBB258:
 683:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 1884              		.loc 1 683 10 view .LVU599
 1885 01ac B246     		mov	r10, r6
 1886              	.LVL139:
 1887              	.L78:
 684:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 1888              		.loc 1 684 5 is_stmt 1 view .LVU600
 684:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 1889              		.loc 1 684 25 is_stmt 0 view .LVU601
 1890 01ae D9ED007A 		vldr.32	s15, [r9]
 1891 01b2 FDEEE77A 		vcvt.s32.f32	s15, s15
 1892 01b6 C8ED007A 		vstr.32	s15, [r8]	@ int
 685:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 1893              		.loc 1 685 5 is_stmt 1 view .LVU602
 685:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 1894              		.loc 1 685 25 is_stmt 0 view .LVU603
 1895 01ba D9ED017A 		vldr.32	s15, [r9, #4]
 1896 01be FDEEE77A 		vcvt.s32.f32	s15, s15
ARM GAS  /tmp/ccReAcTZ.s 			page 90


 1897 01c2 4146     		mov	r1, r8
 1898 01c4 17EE903A 		vmov	r3, s15	@ int
 686:Src/app.c     ****   }
 1899              		.loc 1 686 17 view .LVU604
 1900 01c8 4046     		mov	r0, r8
 685:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 1901              		.loc 1 685 25 view .LVU605
 1902 01ca 41F8043F 		str	r3, [r1, #4]!
 686:Src/app.c     ****   }
 1903              		.loc 1 686 5 is_stmt 1 view .LVU606
 686:Src/app.c     ****   }
 1904              		.loc 1 686 17 is_stmt 0 view .LVU607
 1905 01ce FFF7FEFF 		bl	clamp_point
 1906              	.LVL140:
 683:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 1907              		.loc 1 683 23 discriminator 3 view .LVU608
 1908 01d2 0AF1010A 		add	r10, r10, #1
 1909              	.LVL141:
 683:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 1910              		.loc 1 683 17 discriminator 1 view .LVU609
 1911 01d6 BAF1040F 		cmp	r10, #4
 686:Src/app.c     ****   }
 1912              		.loc 1 686 14 discriminator 1 view .LVU610
 1913 01da 46EA0006 		orr	r6, r6, r0
 1914              	.LVL142:
 683:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 1915              		.loc 1 683 23 is_stmt 1 discriminator 3 view .LVU611
 683:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 1916              		.loc 1 683 17 discriminator 1 view .LVU612
 1917 01de 09F10809 		add	r9, r9, #8
 1918 01e2 08F10808 		add	r8, r8, #8
 1919 01e6 E2D1     		bne	.L78
 689:Src/app.c     **** }
 1920              		.loc 1 689 3 view .LVU613
 1921              	.LVL143:
 689:Src/app.c     **** }
 1922              		.loc 1 689 3 is_stmt 0 view .LVU614
 1923              	.LBE258:
 1924              	.LBE260:
 704:Src/app.c     ****     return ;
 1925              		.loc 1 704 3 is_stmt 1 view .LVU615
 704:Src/app.c     ****     return ;
 1926              		.loc 1 704 6 is_stmt 0 view .LVU616
 1927 01e8 96B9     		cbnz	r6, .L73
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1928              		.loc 1 709 5 view .LVU617
 1929 01ea DFF84480 		ldr	r8, .L93
 1930              	.LVL144:
 1931              	.L79:
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1932              		.loc 1 709 5 is_stmt 1 view .LVU618
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1933              		.loc 1 709 64 is_stmt 0 view .LVU619
 1934 01ee 0136     		adds	r6, r6, #1
 1935              	.LVL145:
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1936              		.loc 1 709 98 view .LVU620
ARM GAS  /tmp/ccReAcTZ.s 			page 91


 1937 01f0 14AB     		add	r3, sp, #80
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1938              		.loc 1 709 69 view .LVU621
 1939 01f2 06F00302 		and	r2, r6, #3
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1940              		.loc 1 709 5 view .LVU622
 1941 01f6 CDF80080 		str	r8, [sp]
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1942              		.loc 1 709 98 view .LVU623
 1943 01fa 03EBC202 		add	r2, r3, r2, lsl #3
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1944              		.loc 1 709 5 view .LVU624
 1945 01fe 7968     		ldr	r1, [r7, #4]
 1946 0200 52E90823 		ldrd	r2, r3, [r2, #-32]
 1947 0204 57F8080B 		ldr	r0, [r7], #8
 1948 0208 FFF7FEFF 		bl	UTIL_LCD_DrawLine
 1949              	.LVL146:
 708:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 1950              		.loc 1 708 23 is_stmt 1 discriminator 3 view .LVU625
 708:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 1951              		.loc 1 708 17 discriminator 1 view .LVU626
 1952 020c 042E     		cmp	r6, #4
 1953 020e EED1     		bne	.L79
 1954              	.LVL147:
 1955              	.L73:
 708:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 1956              		.loc 1 708 17 is_stmt 0 discriminator 1 view .LVU627
 1957              	.LBE240:
 1958              	.LBE239:
 761:Src/app.c     ****     display_ld_hand(hand);
 1959              		.loc 1 761 3 is_stmt 1 view .LVU628
 761:Src/app.c     ****     display_ld_hand(hand);
 1960              		.loc 1 761 6 is_stmt 0 view .LVU629
 1961 0210 6B69     		ldr	r3, [r5, #20]
 1962 0212 3BB1     		cbz	r3, .L72
 762:Src/app.c     **** }
 1963              		.loc 1 762 5 is_stmt 1 view .LVU630
 1964 0214 2046     		mov	r0, r4
 763:Src/app.c     **** 
 1965              		.loc 1 763 1 is_stmt 0 view .LVU631
 1966 0216 14B0     		add	sp, sp, #80
 1967              		.cfi_remember_state
 1968              		.cfi_def_cfa_offset 48
 1969              		@ sp needed
 1970 0218 BDEC048B 		vldm	sp!, {d8-d9}
 1971              		.cfi_restore 82
 1972              		.cfi_restore 83
 1973              		.cfi_restore 80
 1974              		.cfi_restore 81
 1975              		.cfi_def_cfa_offset 32
 1976 021c BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 1977              		.cfi_restore 14
 1978              		.cfi_restore 10
 1979              		.cfi_restore 9
 1980              		.cfi_restore 8
 1981              		.cfi_restore 7
 1982              		.cfi_restore 6
ARM GAS  /tmp/ccReAcTZ.s 			page 92


 1983              		.cfi_restore 5
 1984              		.cfi_restore 4
 1985              		.cfi_def_cfa_offset 0
 1986              	.LVL148:
 762:Src/app.c     **** }
 1987              		.loc 1 762 5 view .LVU632
 1988 0220 FFF7FEBF 		b	display_ld_hand
 1989              	.LVL149:
 1990              	.L72:
 1991              		.cfi_restore_state
 763:Src/app.c     **** 
 1992              		.loc 1 763 1 view .LVU633
 1993 0224 14B0     		add	sp, sp, #80
 1994              		.cfi_def_cfa_offset 48
 1995              		@ sp needed
 1996 0226 BDEC048B 		vldm	sp!, {d8-d9}
 1997              		.cfi_restore 82
 1998              		.cfi_restore 83
 1999              		.cfi_restore 80
 2000              		.cfi_restore 81
 2001              		.cfi_def_cfa_offset 32
 2002 022a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2003              	.LVL150:
 2004              	.L94:
 763:Src/app.c     **** 
 2005              		.loc 1 763 1 view .LVU634
 2006 022e 00BF     		.align	2
 2007              	.L93:
 2008 0230 0000FFFF 		.word	-65536
 2009 0234 FF0000FF 		.word	-16776961
 2010              		.cfi_endproc
 2011              	.LFE7389:
 2013              		.section	.rodata.dp_thread_fct.str1.1,"aMS",%progbits,1
 2014              	.LC8:
 2015 0000 72657420 		.ascii	"ret == HAL_OK\000"
 2015      3D3D2048 
 2015      414C5F4F 
 2015      4B00
 2016              		.global	__aeabi_ul2d
 2017              	.LC9:
 2018 000e 43707520 		.ascii	"Cpu load\000"
 2018      6C6F6164 
 2018      00
 2019              	.LC10:
 2020 0017 20202025 		.ascii	"   %.1f%%\000"
 2020      2E316625 
 2020      2500
 2021              	.LC11:
 2022 0021 496E6665 		.ascii	"Inferences\000"
 2022      72656E63 
 2022      657300
 2023              	.LC12:
 2024 002c 20706420 		.ascii	" pd %2ums\000"
 2024      2532756D 
 2024      7300
 2025              	.LC13:
 2026 0036 20686C20 		.ascii	" hl %2ums\000"
ARM GAS  /tmp/ccReAcTZ.s 			page 93


 2026      2532756D 
 2026      7300
 2027              	.LC14:
 2028 0040 2020252E 		.ascii	"  %.1f FPS\000"
 2028      31662046 
 2028      505300
 2029              		.section	.text.dp_thread_fct,"ax",%progbits
 2030              		.align	1
 2031              		.syntax unified
 2032              		.thumb
 2033              		.thumb_func
 2035              	dp_thread_fct:
 2036              	.LVL151:
 2037              	.LFB7404:
1425:Src/app.c     ****   button_t ld_toggle_button;
 2038              		.loc 1 1425 1 is_stmt 1 view -0
 2039              		.cfi_startproc
 2040              		@ args = 0, pretend = 0, frame = 288
 2041              		@ frame_needed = 0, uses_anonymous_args = 0
1426:Src/app.c     ****   button_t hd_toggle_button;
 2042              		.loc 1 1426 3 view .LVU636
1427:Src/app.c     ****   uint32_t disp_ms = 0;
 2043              		.loc 1 1427 3 view .LVU637
1428:Src/app.c     ****   display_info_t info;
 2044              		.loc 1 1428 3 view .LVU638
1429:Src/app.c     ****   uint32_t ts;
 2045              		.loc 1 1429 3 view .LVU639
1430:Src/app.c     ****   int ret;
 2046              		.loc 1 1430 3 view .LVU640
1431:Src/app.c     **** 
 2047              		.loc 1 1431 3 view .LVU641
1434:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
 2048              		.loc 1 1434 3 view .LVU642
1425:Src/app.c     ****   button_t ld_toggle_button;
 2049              		.loc 1 1425 1 is_stmt 0 view .LVU643
 2050 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2051              		.cfi_def_cfa_offset 36
 2052              		.cfi_offset 4, -36
 2053              		.cfi_offset 5, -32
 2054              		.cfi_offset 6, -28
 2055              		.cfi_offset 7, -24
 2056              		.cfi_offset 8, -20
 2057              		.cfi_offset 9, -16
 2058              		.cfi_offset 10, -12
 2059              		.cfi_offset 11, -8
 2060              		.cfi_offset 14, -4
 2061              	.LBB291:
 2062              	.LBB292:
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2063              		.loc 1 388 9 view .LVU644
 2064 0004 0021     		movs	r1, #0
 2065              	.LBE292:
 2066              	.LBE291:
1425:Src/app.c     ****   button_t ld_toggle_button;
 2067              		.loc 1 1425 1 view .LVU645
 2068 0006 2DED048B 		vpush.64	{d8, d9}
 2069              		.cfi_def_cfa_offset 52
ARM GAS  /tmp/ccReAcTZ.s 			page 94


 2070              		.cfi_offset 80, -52
 2071              		.cfi_offset 81, -48
 2072              		.cfi_offset 82, -44
 2073              		.cfi_offset 83, -40
 2074              	.LBB296:
 2075              	.LBB293:
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2076              		.loc 1 388 9 view .LVU646
 2077 000a 0846     		mov	r0, r1
 2078              	.LVL152:
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2079              		.loc 1 388 9 view .LVU647
 2080              	.LBE293:
 2081              	.LBE296:
1425:Src/app.c     ****   button_t ld_toggle_button;
 2082              		.loc 1 1425 1 view .LVU648
 2083 000c CBB0     		sub	sp, sp, #300
 2084              		.cfi_def_cfa_offset 352
 2085              	.LVL153:
 2086              	.LBB297:
 2087              	.LBI291:
 384:Src/app.c     **** {
 2088              		.loc 1 384 13 is_stmt 1 view .LVU649
 2089              	.LBB294:
 386:Src/app.c     **** 
 2090              		.loc 1 386 3 view .LVU650
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2091              		.loc 1 388 3 view .LVU651
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2092              		.loc 1 388 9 is_stmt 0 view .LVU652
 2093 000e FFF7FEFF 		bl	BSP_PB_Init
 2094              	.LVL154:
 389:Src/app.c     **** 
 2095              		.loc 1 389 3 is_stmt 1 view .LVU653
 2096 0012 0146     		mov	r1, r0
 2097 0014 08B1     		cbz	r0, .L96
 2098              	.LVL155:
 2099              	.L97:
 389:Src/app.c     **** 
 2100              		.loc 1 389 3 is_stmt 0 view .LVU654
 2101 0016 FFF7FEFF 		bl	button_init.part.0
 2102              	.LVL156:
 2103              	.L96:
 391:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2104              		.loc 1 391 3 is_stmt 1 view .LVU655
 392:Src/app.c     ****   b->prev_state = 0;
 2105              		.loc 1 392 23 is_stmt 0 view .LVU656
 2106 001a 974B     		ldr	r3, .L113+8
 394:Src/app.c     **** }
 2107              		.loc 1 394 14 view .LVU657
 2108 001c 974F     		ldr	r7, .L113+12
 393:Src/app.c     ****   b->cb_args = cb_args;
 2109              		.loc 1 393 17 view .LVU658
 2110 001e CDE90403 		strd	r0, r3, [sp, #16]
 391:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2111              		.loc 1 391 16 view .LVU659
 2112 0022 8DF80C00 		strb	r0, [sp, #12]
ARM GAS  /tmp/ccReAcTZ.s 			page 95


 392:Src/app.c     ****   b->prev_state = 0;
 2113              		.loc 1 392 3 is_stmt 1 view .LVU660
 394:Src/app.c     **** }
 2114              		.loc 1 394 3 view .LVU661
 2115              	.LBE294:
 2116              	.LBE297:
 2117              	.LBB298:
 2118              	.LBB299:
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2119              		.loc 1 388 9 is_stmt 0 view .LVU662
 2120 0026 0120     		movs	r0, #1
 2121              	.LVL157:
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2122              		.loc 1 388 9 view .LVU663
 2123              	.LBE299:
 2124              	.LBE298:
 2125              	.LBB303:
 2126              	.LBB295:
 394:Src/app.c     **** }
 2127              		.loc 1 394 14 view .LVU664
 2128 0028 0697     		str	r7, [sp, #24]
 2129              	.LVL158:
 394:Src/app.c     **** }
 2130              		.loc 1 394 14 view .LVU665
 2131              	.LBE295:
 2132              	.LBE303:
1435:Src/app.c     **** #else
 2133              		.loc 1 1435 3 is_stmt 1 view .LVU666
 2134              	.LBB304:
 2135              	.LBI298:
 384:Src/app.c     **** {
 2136              		.loc 1 384 13 view .LVU667
 2137              	.LBB300:
 386:Src/app.c     **** 
 2138              		.loc 1 386 3 view .LVU668
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2139              		.loc 1 388 3 view .LVU669
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2140              		.loc 1 388 9 is_stmt 0 view .LVU670
 2141 002a FFF7FEFF 		bl	BSP_PB_Init
 2142              	.LVL159:
 389:Src/app.c     **** 
 2143              		.loc 1 389 3 is_stmt 1 view .LVU671
 2144 002e 0028     		cmp	r0, #0
 2145 0030 F1D1     		bne	.L97
 391:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2146              		.loc 1 391 3 view .LVU672
 391:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2147              		.loc 1 391 16 is_stmt 0 view .LVU673
 2148 0032 0123     		movs	r3, #1
 2149              	.LBE300:
 2150              	.LBE304:
1428:Src/app.c     ****   display_info_t info;
 2151              		.loc 1 1428 12 view .LVU674
 2152 0034 0446     		mov	r4, r0
 2153              	.LBB305:
 2154              	.LBB306:
ARM GAS  /tmp/ccReAcTZ.s 			page 96


 2155              	.LBB307:
 2156              	.LBB308:
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2157              		.loc 1 435 35 view .LVU675
 2158 0036 9FED8E9B 		vldr.64	d9, .L113
 2159              	.LBE308:
 2160              	.LBE307:
 2161              	.LBE306:
 2162              	.LBE305:
 2163              	.LBB318:
 2164              	.LBB301:
 391:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2165              		.loc 1 391 16 view .LVU676
 2166 003a 8DF81C30 		strb	r3, [sp, #28]
 392:Src/app.c     ****   b->prev_state = 0;
 2167              		.loc 1 392 3 is_stmt 1 view .LVU677
 392:Src/app.c     ****   b->prev_state = 0;
 2168              		.loc 1 392 23 is_stmt 0 view .LVU678
 2169 003e 904B     		ldr	r3, .L113+16
 2170              	.LBE301:
 2171              	.LBE318:
 2172              	.LBB319:
 2173              	.LBB320:
1384:Src/app.c     ****   assert(ret == HAL_OK);
 2174              		.loc 1 1384 47 view .LVU679
 2175 0040 DFF88492 		ldr	r9, .L113+88
 2176              	.LBE320:
 2177              	.LBE319:
 2178              	.LBB326:
 2179              	.LBB302:
 393:Src/app.c     ****   b->cb_args = cb_args;
 2180              		.loc 1 393 17 view .LVU680
 2181 0044 CDE90803 		strd	r0, r3, [sp, #32]
 394:Src/app.c     **** }
 2182              		.loc 1 394 3 is_stmt 1 view .LVU681
 394:Src/app.c     **** }
 2183              		.loc 1 394 14 is_stmt 0 view .LVU682
 2184 0048 0A97     		str	r7, [sp, #40]
 2185              	.LVL160:
 2186              	.L107:
 394:Src/app.c     **** }
 2187              		.loc 1 394 14 view .LVU683
 2188              	.LBE302:
 2189              	.LBE326:
1440:Src/app.c     ****   {
 2190              		.loc 1 1440 3 is_stmt 1 view .LVU684
1442:Src/app.c     ****     assert(ret == pdTRUE);
 2191              		.loc 1 1442 5 view .LVU685
1442:Src/app.c     ****     assert(ret == pdTRUE);
 2192              		.loc 1 1442 11 is_stmt 0 view .LVU686
 2193 004a 4FF0FF31 		mov	r1, #-1
 2194 004e 3868     		ldr	r0, [r7]
 2195 0050 FFF7FEFF 		bl	xQueueSemaphoreTake
 2196              	.LVL161:
1443:Src/app.c     **** 
 2197              		.loc 1 1443 5 is_stmt 1 view .LVU687
 2198 0054 0128     		cmp	r0, #1
ARM GAS  /tmp/ccReAcTZ.s 			page 97


 2199 0056 06D0     		beq	.L98
1443:Src/app.c     **** 
 2200              		.loc 1 1443 5 is_stmt 0 discriminator 1 view .LVU688
 2201 0058 40F2A351 		movw	r1, #1443
 2202 005c 894B     		ldr	r3, .L113+20
 2203 005e 8A4A     		ldr	r2, .L113+24
 2204              	.LVL162:
 2205              	.L112:
1449:Src/app.c     ****     info = disp.info;
 2206              		.loc 1 1449 5 discriminator 1 view .LVU689
 2207 0060 8A48     		ldr	r0, .L113+28
 2208 0062 FFF7FEFF 		bl	__assert_func
 2209              	.LVL163:
 2210              	.L98:
1445:Src/app.c     ****     button_process(&hd_toggle_button);
 2211              		.loc 1 1445 5 is_stmt 1 view .LVU690
 2212 0066 03A8     		add	r0, sp, #12
 2213              	.LVL164:
1445:Src/app.c     ****     button_process(&hd_toggle_button);
 2214              		.loc 1 1445 5 is_stmt 0 view .LVU691
 2215 0068 FFF7FEFF 		bl	button_process
 2216              	.LVL165:
1446:Src/app.c     **** 
 2217              		.loc 1 1446 5 is_stmt 1 view .LVU692
 2218 006c 07A8     		add	r0, sp, #28
 2219 006e FFF7FEFF 		bl	button_process
 2220              	.LVL166:
1448:Src/app.c     ****     assert(ret == pdTRUE);
 2221              		.loc 1 1448 5 view .LVU693
1448:Src/app.c     ****     assert(ret == pdTRUE);
 2222              		.loc 1 1448 11 is_stmt 0 view .LVU694
 2223 0072 4FF0FF31 		mov	r1, #-1
 2224 0076 786D     		ldr	r0, [r7, #84]
 2225 0078 FFF7FEFF 		bl	xQueueSemaphoreTake
 2226              	.LVL167:
1449:Src/app.c     ****     info = disp.info;
 2227              		.loc 1 1449 5 is_stmt 1 view .LVU695
 2228 007c 0128     		cmp	r0, #1
 2229 007e 04D0     		beq	.L99
1449:Src/app.c     ****     info = disp.info;
 2230              		.loc 1 1449 5 is_stmt 0 discriminator 1 view .LVU696
 2231 0080 40F2A951 		movw	r1, #1449
 2232 0084 7F4B     		ldr	r3, .L113+20
 2233 0086 804A     		ldr	r2, .L113+24
 2234 0088 EAE7     		b	.L112
 2235              	.L99:
1450:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 2236              		.loc 1 1450 5 is_stmt 1 view .LVU697
1450:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 2237              		.loc 1 1450 10 is_stmt 0 view .LVU698
 2238 008a FC22     		movs	r2, #252
 2239 008c 8049     		ldr	r1, .L113+32
 2240 008e 0BA8     		add	r0, sp, #44
 2241              	.LVL168:
1450:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 2242              		.loc 1 1450 10 view .LVU699
 2243 0090 FFF7FEFF 		bl	memcpy
ARM GAS  /tmp/ccReAcTZ.s 			page 98


 2244              	.LVL169:
1451:Src/app.c     ****     assert(ret == pdTRUE);
 2245              		.loc 1 1451 5 is_stmt 1 view .LVU700
1451:Src/app.c     ****     assert(ret == pdTRUE);
 2246              		.loc 1 1451 11 is_stmt 0 view .LVU701
 2247 0094 0023     		movs	r3, #0
 2248 0096 786D     		ldr	r0, [r7, #84]
 2249 0098 1A46     		mov	r2, r3
 2250 009a 1946     		mov	r1, r3
 2251 009c FFF7FEFF 		bl	xQueueGenericSend
 2252              	.LVL170:
1452:Src/app.c     ****     info.disp_ms = disp_ms;
 2253              		.loc 1 1452 5 view .LVU702
 2254 00a0 0128     		cmp	r0, #1
1451:Src/app.c     ****     assert(ret == pdTRUE);
 2255              		.loc 1 1451 11 view .LVU703
 2256 00a2 0546     		mov	r5, r0
 2257              	.LVL171:
1452:Src/app.c     ****     info.disp_ms = disp_ms;
 2258              		.loc 1 1452 5 is_stmt 1 view .LVU704
 2259 00a4 04D0     		beq	.L100
1452:Src/app.c     ****     info.disp_ms = disp_ms;
 2260              		.loc 1 1452 5 is_stmt 0 discriminator 1 view .LVU705
 2261 00a6 40F2AC51 		movw	r1, #1452
 2262 00aa 764B     		ldr	r3, .L113+20
 2263 00ac 764A     		ldr	r2, .L113+24
 2264 00ae D7E7     		b	.L112
 2265              	.L100:
1453:Src/app.c     **** 
 2266              		.loc 1 1453 5 is_stmt 1 view .LVU706
1453:Src/app.c     **** 
 2267              		.loc 1 1453 18 is_stmt 0 view .LVU707
 2268 00b0 0F94     		str	r4, [sp, #60]
1455:Src/app.c     ****     dp_update_drawing_area();
 2269              		.loc 1 1455 5 is_stmt 1 view .LVU708
1455:Src/app.c     ****     dp_update_drawing_area();
 2270              		.loc 1 1455 10 is_stmt 0 view .LVU709
 2271 00b2 FFF7FEFF 		bl	HAL_GetTick
 2272              	.LVL172:
1455:Src/app.c     ****     dp_update_drawing_area();
 2273              		.loc 1 1455 10 view .LVU710
 2274 00b6 8246     		mov	r10, r0
 2275              	.LVL173:
1456:Src/app.c     ****     Display_NetworkOutput(&info);
 2276              		.loc 1 1456 5 is_stmt 1 view .LVU711
 2277              	.LBB327:
 2278              	.LBI319:
1379:Src/app.c     **** {
 2279              		.loc 1 1379 13 view .LVU712
 2280              	.LBB325:
1381:Src/app.c     **** 
 2281              		.loc 1 1381 3 view .LVU713
1383:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
 2282              		.loc 1 1383 3 view .LVU714
 2283              	.LBB321:
 2284              	.LBI321:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccReAcTZ.s 			page 99


 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
ARM GAS  /tmp/ccReAcTZ.s 			page 100


 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/ccReAcTZ.s 			page 101


 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccReAcTZ.s 			page 102


 444:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 103


 501:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
ARM GAS  /tmp/ccReAcTZ.s 			page 104


 558:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccReAcTZ.s 			page 105


 615:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 106


 672:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
ARM GAS  /tmp/ccReAcTZ.s 			page 107


 729:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 108


 786:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccReAcTZ.s 			page 109


 843:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccReAcTZ.s 			page 110


 900:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  /tmp/ccReAcTZ.s 			page 111


 957:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2285              		.loc 4 960 27 view .LVU715
 2286              	.LBB322:
 961:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2287              		.loc 4 962 3 view .LVU716
 2288              		.syntax unified
 2289              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2290 00b8 72B6     		cpsid i
 2291              	@ 0 "" 2
 2292              		.thumb
 2293              		.syntax unified
 2294              	.LBE322:
 2295              	.LBE321:
1384:Src/app.c     ****   assert(ret == HAL_OK);
 2296              		.loc 1 1384 3 view .LVU717
1384:Src/app.c     ****   assert(ret == HAL_OK);
 2297              		.loc 1 1384 47 is_stmt 0 view .LVU718
 2298 00ba DFF81082 		ldr	r8, .L113+92
 2299 00be D9F80030 		ldr	r3, [r9]
1384:Src/app.c     ****   assert(ret == HAL_OK);
 2300              		.loc 1 1384 9 view .LVU719
 2301 00c2 7448     		ldr	r0, .L113+36
 2302              	.LVL174:
1384:Src/app.c     ****   assert(ret == HAL_OK);
 2303              		.loc 1 1384 9 view .LVU720
 2304 00c4 2946     		mov	r1, r5
 2305 00c6 00FB0380 		mla	r0, r0, r3, r8
 2306 00ca FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 2307              	.LVL175:
1385:Src/app.c     ****   __enable_irq();
 2308              		.loc 1 1385 3 is_stmt 1 view .LVU721
 2309 00ce 8346     		mov	fp, r0
 2310 00d0 20B1     		cbz	r0, .L101
1385:Src/app.c     ****   __enable_irq();
 2311              		.loc 1 1385 3 is_stmt 0 discriminator 1 view .LVU722
 2312 00d2 40F26951 		movw	r1, #1385
 2313 00d6 704B     		ldr	r3, .L113+40
 2314 00d8 704A     		ldr	r2, .L113+44
 2315 00da C1E7     		b	.L112
 2316              	.L101:
1386:Src/app.c     **** }
 2317              		.loc 1 1386 3 is_stmt 1 view .LVU723
 2318              	.LBB323:
 2319              	.LBI323:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2320              		.loc 4 949 27 view .LVU724
 2321              	.LBB324:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2322              		.loc 4 951 3 view .LVU725
 2323              		.syntax unified
 2324              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2325 00dc 62B6     		cpsie i
 2326              	@ 0 "" 2
ARM GAS  /tmp/ccReAcTZ.s 			page 112


 2327              	.LVL176:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2328              		.loc 4 951 3 is_stmt 0 view .LVU726
 2329              		.thumb
 2330              		.syntax unified
 2331              	.LBE324:
 2332              	.LBE323:
 2333              	.LBE325:
 2334              	.LBE327:
1457:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
 2335              		.loc 1 1457 5 is_stmt 1 view .LVU727
 2336              	.LBB328:
 2337              	.LBI305:
 765:Src/app.c     **** {
 2338              		.loc 1 765 13 view .LVU728
 2339              	.LBB317:
 767:Src/app.c     ****   int line_nb = 0;
 2340              		.loc 1 767 3 view .LVU729
 768:Src/app.c     ****   float nn_fps;
 2341              		.loc 1 768 3 view .LVU730
 769:Src/app.c     ****   int i;
 2342              		.loc 1 769 3 view .LVU731
 770:Src/app.c     **** 
 2343              		.loc 1 770 3 view .LVU732
 773:Src/app.c     **** 
 2344              		.loc 1 773 3 view .LVU733
 2345              	.LBB310:
 2346              	.LBB311:
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2347              		.loc 1 416 24 is_stmt 0 view .LVU734
 2348 00de 704C     		ldr	r4, .L113+48
 2349              	.LVL177:
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2350              		.loc 1 416 24 view .LVU735
 2351              	.LBE311:
 2352              	.LBE310:
 773:Src/app.c     **** 
 2353              		.loc 1 773 3 view .LVU736
 2354 00e0 4FF4F073 		mov	r3, #480
 2355 00e4 4FF44872 		mov	r2, #800
 2356 00e8 0146     		mov	r1, r0
 2357 00ea 0090     		str	r0, [sp]
 2358              	.LBB314:
 2359              	.LBB312:
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2360              		.loc 1 416 24 view .LVU737
 2361 00ec 04F13805 		add	r5, r4, #56
 2362              	.LVL178:
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2363              		.loc 1 416 24 view .LVU738
 2364 00f0 04F12006 		add	r6, r4, #32
 2365              	.LBE312:
 2366              	.LBE314:
 773:Src/app.c     **** 
 2367              		.loc 1 773 3 view .LVU739
 2368 00f4 FFF7FEFF 		bl	UTIL_LCD_FillRect
 2369              	.LVL179:
ARM GAS  /tmp/ccReAcTZ.s 			page 113


 776:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 2370              		.loc 1 776 3 is_stmt 1 view .LVU740
 2371              	.LBB315:
 2372              	.LBI310:
 412:Src/app.c     **** {
 2373              		.loc 1 412 13 view .LVU741
 2374              	.LBB313:
 414:Src/app.c     **** 
 2375              		.loc 1 414 3 view .LVU742
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2376              		.loc 1 416 3 view .LVU743
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2377              		.loc 1 416 24 is_stmt 0 view .LVU744
 2378 00f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 2379 00fa 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2380 00fc 96E80300 		ldm	r6, {r0, r1}
 2381 0100 85E80300 		stm	r5, {r0, r1}
 417:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 2382              		.loc 1 417 3 is_stmt 1 view .LVU745
 417:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 2383              		.loc 1 417 32 is_stmt 0 view .LVU746
 2384 0104 FFF7FEFF 		bl	TIM4_Get_Value
 2385              	.LVL180:
 2386 0108 0546     		mov	r5, r0
 417:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 2387              		.loc 1 417 30 discriminator 1 view .LVU747
 2388 010a C4E9080B 		strd	r0, fp, [r4, #32]
 418:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 2389              		.loc 1 418 3 is_stmt 1 view .LVU748
 418:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 2390              		.loc 1 418 62 is_stmt 0 view .LVU749
 2391 010e FFF7FEFF 		bl	ulTaskGetIdleRunTimeCounter
 2392              	.LVL181:
 418:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 2393              		.loc 1 418 60 discriminator 1 view .LVU750
 2394 0112 2D1A     		subs	r5, r5, r0
 2395 0114 63EB0303 		sbc	r3, r3, r3
 418:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 2396              		.loc 1 418 31 discriminator 1 view .LVU751
 2397 0118 C4E90A53 		strd	r5, r3, [r4, #40]
 419:Src/app.c     **** 
 2398              		.loc 1 419 3 is_stmt 1 view .LVU752
 419:Src/app.c     **** 
 2399              		.loc 1 419 31 is_stmt 0 view .LVU753
 2400 011c FFF7FEFF 		bl	HAL_GetTick
 2401              	.LVL182:
 421:Src/app.c     ****     return ;
 2402              		.loc 1 421 33 view .LVU754
 2403 0120 A36C     		ldr	r3, [r4, #72]
 2404 0122 226E     		ldr	r2, [r4, #96]
 419:Src/app.c     **** 
 2405              		.loc 1 419 29 discriminator 1 view .LVU755
 2406 0124 2063     		str	r0, [r4, #48]
 421:Src/app.c     ****     return ;
 2407              		.loc 1 421 3 is_stmt 1 view .LVU756
 421:Src/app.c     ****     return ;
 2408              		.loc 1 421 33 is_stmt 0 view .LVU757
ARM GAS  /tmp/ccReAcTZ.s 			page 114


 2409 0126 9B1A     		subs	r3, r3, r2
 421:Src/app.c     ****     return ;
 2410              		.loc 1 421 6 view .LVU758
 2411 0128 B3F57A7F 		cmp	r3, #1000
 2412 012c 06D3     		bcc	.L102
 425:Src/app.c     **** }
 2413              		.loc 1 425 55 view .LVU759
 2414 012e 9022     		movs	r2, #144
 2415 0130 04F13801 		add	r1, r4, #56
 2416 0134 04F15000 		add	r0, r4, #80
 2417 0138 FFF7FEFF 		bl	memmove
 2418              	.LVL183:
 2419              	.L102:
 425:Src/app.c     **** }
 2420              		.loc 1 425 55 view .LVU760
 2421              	.LBE313:
 2422              	.LBE315:
 777:Src/app.c     **** 
 2423              		.loc 1 777 3 is_stmt 1 view .LVU761
 2424              	.LBB316:
 2425              	.LBI307:
 428:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 2426              		.loc 1 428 13 view .LVU762
 2427              	.LBB309:
 431:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 2428              		.loc 1 431 3 view .LVU763
 434:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 2429              		.loc 1 434 3 view .LVU764
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2430              		.loc 1 435 5 view .LVU765
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2431              		.loc 1 435 66 is_stmt 0 view .LVU766
 2432 013c D4E91C23 		ldrd	r2, r3, [r4, #112]
 2433 0140 D4E91601 		ldrd	r0, r1, [r4, #88]
 2434 0144 801A     		subs	r0, r0, r2
 2435 0146 61EB0301 		sbc	r1, r1, r3
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2436              		.loc 1 435 35 view .LVU767
 2437 014a FFF7FEFF 		bl	__aeabi_ul2d
 2438              	.LVL184:
 436:Src/app.c     ****   if (cpu_load_last_five_seconds)
 2439              		.loc 1 436 50 view .LVU768
 2440 014e D4E91A32 		ldrd	r3, r2, [r4, #104]
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2441              		.loc 1 435 35 view .LVU769
 2442 0152 41EC180B 		vmov	d8, r0, r1
 436:Src/app.c     ****   if (cpu_load_last_five_seconds)
 2443              		.loc 1 436 50 view .LVU770
 2444 0156 D4E91401 		ldrd	r0, r1, [r4, #80]
 2445 015a C01A     		subs	r0, r0, r3
 2446 015c 61EB0201 		sbc	r1, r1, r2
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2447              		.loc 1 435 97 view .LVU771
 2448 0160 FFF7FEFF 		bl	__aeabi_ul2d
 2449              	.LVL185:
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2450              		.loc 1 435 35 view .LVU772
ARM GAS  /tmp/ccReAcTZ.s 			page 115


 2451 0164 28EE098B 		vmul.f64	d8, d8, d9
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2452              		.loc 1 435 97 view .LVU773
 2453 0168 41EC160B 		vmov	d6, r0, r1
 2454 016c 88EE067B 		vdiv.f64	d7, d8, d6
 2455 0170 B7EEC78B 		vcvt.f32.f64	s16, d7
 2456              	.LVL186:
 437:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 2457              		.loc 1 437 3 is_stmt 1 view .LVU774
 437:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 2458              		.loc 1 437 3 is_stmt 0 view .LVU775
 2459              	.LBE309:
 2460              	.LBE316:
 780:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 2461              		.loc 1 780 3 is_stmt 1 view .LVU776
 780:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 2462              		.loc 1 780 10 is_stmt 0 view .LVU777
 2463 0174 9FED4B7A 		vldr.32	s14, .L113+52
 2464 0178 DDED0B7A 		vldr.32	s15, [sp, #44]
 2465 017c C7EE278A 		vdiv.f32	s17, s14, s15
 2466              	.LVL187:
 781:Src/app.c     ****   line_nb += 1;
 2467              		.loc 1 781 3 is_stmt 1 view .LVU778
 781:Src/app.c     ****   line_nb += 1;
 2468              		.loc 1 781 26 is_stmt 0 view .LVU779
 2469 0180 FFF7FEFF 		bl	UTIL_LCD_GetFont
 2470              	.LVL188:
 781:Src/app.c     ****   line_nb += 1;
 2471              		.loc 1 781 3 discriminator 1 view .LVU780
 2472 0184 0021     		movs	r1, #0
 2473 0186 0222     		movs	r2, #2
 2474 0188 0846     		mov	r0, r1
 2475 018a 474B     		ldr	r3, .L113+56
 2476 018c FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2477              	.LVL189:
 782:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 2478              		.loc 1 782 3 is_stmt 1 view .LVU781
 783:Src/app.c     ****   line_nb += 2;
 2479              		.loc 1 783 3 view .LVU782
 783:Src/app.c     ****   line_nb += 2;
 2480              		.loc 1 783 26 is_stmt 0 view .LVU783
 2481 0190 FFF7FEFF 		bl	UTIL_LCD_GetFont
 2482              	.LVL190:
 783:Src/app.c     ****   line_nb += 2;
 2483              		.loc 1 783 3 discriminator 1 view .LVU784
 2484 0194 B7EEC87A 		vcvt.f64.f32	d7, s16
 2485 0198 C188     		ldrh	r1, [r0, #6]
 2486 019a 0222     		movs	r2, #2
 2487 019c 8DED007B 		vstr.64	d7, [sp]
 2488 01a0 424B     		ldr	r3, .L113+60
 2489 01a2 0020     		movs	r0, #0
 2490 01a4 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2491              	.LVL191:
 784:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 2492              		.loc 1 784 3 is_stmt 1 view .LVU785
 785:Src/app.c     ****   line_nb += 1;
 2493              		.loc 1 785 3 view .LVU786
ARM GAS  /tmp/ccReAcTZ.s 			page 116


 785:Src/app.c     ****   line_nb += 1;
 2494              		.loc 1 785 26 is_stmt 0 view .LVU787
 2495 01a8 FFF7FEFF 		bl	UTIL_LCD_GetFont
 2496              	.LVL192:
 785:Src/app.c     ****   line_nb += 1;
 2497              		.loc 1 785 26 discriminator 1 view .LVU788
 2498 01ac C188     		ldrh	r1, [r0, #6]
 785:Src/app.c     ****   line_nb += 1;
 2499              		.loc 1 785 3 discriminator 1 view .LVU789
 2500 01ae 0222     		movs	r2, #2
 2501 01b0 3F4B     		ldr	r3, .L113+64
 2502 01b2 01EB4101 		add	r1, r1, r1, lsl #1
 2503 01b6 0020     		movs	r0, #0
 2504 01b8 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2505              	.LVL193:
 786:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " pd %2ums", info->pd_ms);
 2506              		.loc 1 786 3 is_stmt 1 view .LVU790
 787:Src/app.c     ****   line_nb += 1;
 2507              		.loc 1 787 3 view .LVU791
 787:Src/app.c     ****   line_nb += 1;
 2508              		.loc 1 787 26 is_stmt 0 view .LVU792
 2509 01bc FFF7FEFF 		bl	UTIL_LCD_GetFont
 2510              	.LVL194:
 787:Src/app.c     ****   line_nb += 1;
 2511              		.loc 1 787 3 discriminator 1 view .LVU793
 2512 01c0 0222     		movs	r2, #2
 787:Src/app.c     ****   line_nb += 1;
 2513              		.loc 1 787 26 discriminator 1 view .LVU794
 2514 01c2 C188     		ldrh	r1, [r0, #6]
 787:Src/app.c     ****   line_nb += 1;
 2515              		.loc 1 787 3 discriminator 1 view .LVU795
 2516 01c4 0C9B     		ldr	r3, [sp, #48]
 2517 01c6 9140     		lsls	r1, r1, r2
 2518 01c8 0020     		movs	r0, #0
 2519 01ca 0093     		str	r3, [sp]
 2520 01cc 394B     		ldr	r3, .L113+68
 2521 01ce FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2522              	.LVL195:
 788:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " hl %2ums", info->hl_ms);
 2523              		.loc 1 788 3 is_stmt 1 view .LVU796
 789:Src/app.c     ****   line_nb += 2;
 2524              		.loc 1 789 3 view .LVU797
 789:Src/app.c     ****   line_nb += 2;
 2525              		.loc 1 789 26 is_stmt 0 view .LVU798
 2526 01d2 FFF7FEFF 		bl	UTIL_LCD_GetFont
 2527              	.LVL196:
 789:Src/app.c     ****   line_nb += 2;
 2528              		.loc 1 789 3 discriminator 1 view .LVU799
 2529 01d6 0D9B     		ldr	r3, [sp, #52]
 789:Src/app.c     ****   line_nb += 2;
 2530              		.loc 1 789 26 discriminator 1 view .LVU800
 2531 01d8 C188     		ldrh	r1, [r0, #6]
 789:Src/app.c     ****   line_nb += 2;
 2532              		.loc 1 789 3 discriminator 1 view .LVU801
 2533 01da 0222     		movs	r2, #2
 2534 01dc 01EB8101 		add	r1, r1, r1, lsl #2
 2535 01e0 0020     		movs	r0, #0
ARM GAS  /tmp/ccReAcTZ.s 			page 117


 2536 01e2 0093     		str	r3, [sp]
 2537 01e4 344B     		ldr	r3, .L113+72
 2538 01e6 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2539              	.LVL197:
 790:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 2540              		.loc 1 790 3 is_stmt 1 view .LVU802
 791:Src/app.c     ****   line_nb += 2;
 2541              		.loc 1 791 3 view .LVU803
 791:Src/app.c     ****   line_nb += 2;
 2542              		.loc 1 791 26 is_stmt 0 view .LVU804
 2543 01ea FFF7FEFF 		bl	UTIL_LCD_GetFont
 2544              	.LVL198:
 791:Src/app.c     ****   line_nb += 2;
 2545              		.loc 1 791 3 discriminator 1 view .LVU805
 2546 01ee B7EEE87A 		vcvt.f64.f32	d7, s17
 791:Src/app.c     ****   line_nb += 2;
 2547              		.loc 1 791 26 discriminator 1 view .LVU806
 2548 01f2 C188     		ldrh	r1, [r0, #6]
 791:Src/app.c     ****   line_nb += 2;
 2549              		.loc 1 791 3 discriminator 1 view .LVU807
 2550 01f4 314B     		ldr	r3, .L113+76
 2551 01f6 8DED007B 		vstr.64	d7, [sp]
 2552 01fa 0222     		movs	r2, #2
 2553 01fc 0020     		movs	r0, #0
 2554 01fe C1EBC101 		rsb	r1, r1, r1, lsl #3
 2555 0202 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2556              	.LVL199:
 792:Src/app.c     ****   if (DBG_INFO) {
 2557              		.loc 1 792 3 is_stmt 1 view .LVU808
 793:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 2558              		.loc 1 793 3 view .LVU809
 801:Src/app.c     ****     if (info->hands[i].is_valid)
 2559              		.loc 1 801 3 view .LVU810
 801:Src/app.c     ****     if (info->hands[i].is_valid)
 2560              		.loc 1 801 17 discriminator 1 view .LVU811
 2561 0206 129B     		ldr	r3, [sp, #72]
 2562 0208 002B     		cmp	r3, #0
 2563 020a 05DD     		ble	.L103
 802:Src/app.c     ****       display_hand(info, &info->hands[i]);
 2564              		.loc 1 802 5 view .LVU812
 802:Src/app.c     ****       display_hand(info, &info->hands[i]);
 2565              		.loc 1 802 8 is_stmt 0 view .LVU813
 2566 020c 149B     		ldr	r3, [sp, #80]
 2567 020e 1BB1     		cbz	r3, .L103
 803:Src/app.c     ****   }
 2568              		.loc 1 803 7 is_stmt 1 view .LVU814
 2569 0210 14A9     		add	r1, sp, #80
 2570 0212 0BA8     		add	r0, sp, #44
 2571              	.LVL200:
 803:Src/app.c     ****   }
 2572              		.loc 1 803 7 is_stmt 0 view .LVU815
 2573 0214 FFF7FEFF 		bl	display_hand
 2574              	.LVL201:
 801:Src/app.c     ****     if (info->hands[i].is_valid)
 2575              		.loc 1 801 38 is_stmt 1 discriminator 2 view .LVU816
 801:Src/app.c     ****     if (info->hands[i].is_valid)
 2576              		.loc 1 801 17 discriminator 1 view .LVU817
ARM GAS  /tmp/ccReAcTZ.s 			page 118


 2577              	.L103:
 806:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 2578              		.loc 1 806 3 view .LVU818
 806:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 2579              		.loc 1 806 3 is_stmt 0 view .LVU819
 2580              	.LBE317:
 2581              	.LBE328:
1458:Src/app.c     ****     dp_commit_drawing_area();
 2582              		.loc 1 1458 5 is_stmt 1 view .LVU820
 2583              	.LBB329:
 2584              	.LBI329:
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean by address
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache for the given address
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned starting from a 32 byte aligned address in 32 byte granularity.
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned.
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (volatile void *addr, int32_t dsize)
 2585              		.loc 3 388 27 view .LVU821
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 2586              		.loc 3 391 5 view .LVU822
 2587              	.LBB330:
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2588              		.loc 3 392 8 view .LVU823
 2589              	.LBE330:
 2590              	.LBE329:
1458:Src/app.c     ****     dp_commit_drawing_area();
 2591              		.loc 1 1458 42 is_stmt 0 view .LVU824
 2592 0218 D9F80030 		ldr	r3, [r9]
 2593 021c 1D4A     		ldr	r2, .L113+36
 2594 021e 02FB0383 		mla	r3, r2, r3, r8
 2595              	.LVL202:
 2596              	.LBB338:
 2597              	.LBB337:
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2598              		.loc 3 393 7 is_stmt 1 view .LVU825
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2599              		.loc 3 395 7 view .LVU826
 2600              	.LBB331:
 2601              	.LBI331:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2602              		.loc 4 269 27 view .LVU827
 2603              	.LBB332:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2604              		.loc 4 271 3 view .LVU828
 2605              		.syntax unified
 2606              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccReAcTZ.s 			page 119


 2607 0222 BFF34F8F 		dsb 0xF
 2608              	@ 0 "" 2
 2609              		.thumb
 2610              		.syntax unified
 2611              	.LBE332:
 2612              	.LBE331:
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2613              		.loc 3 398 22 is_stmt 0 view .LVU829
 2614 0226 45F6C05E 		movw	lr, #24000
 2615 022a 4EF001E0 		dls	lr, lr
 2616 022e 244A     		ldr	r2, .L113+80
 2617              	.LVL203:
 2618              	.L105:
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2619              		.loc 3 397 7 is_stmt 1 view .LVU830
 2620              		.loc 3 398 9 view .LVU831
 2621              		.loc 3 398 22 is_stmt 0 view .LVU832
 2622 0230 C2F86832 		str	r3, [r2, #616]
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2623              		.loc 3 399 9 is_stmt 1 view .LVU833
 2624              		.loc 3 399 17 is_stmt 0 view .LVU834
 2625 0234 2033     		adds	r3, r3, #32
 2626              	.LVL204:
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2627              		.loc 3 400 9 is_stmt 1 view .LVU835
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2628              		.loc 3 401 25 discriminator 1 view .LVU836
 2629 0236 0FF005C8 		le	lr, .L105
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2630              		.loc 3 403 7 view .LVU837
 2631              	.LBB333:
 2632              	.LBI333:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2633              		.loc 4 269 27 view .LVU838
 2634              	.LBB334:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2635              		.loc 4 271 3 view .LVU839
 2636              		.syntax unified
 2637              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2638 023a BFF34F8F 		dsb 0xF
 2639              	@ 0 "" 2
 2640              		.thumb
 2641              		.syntax unified
 2642              	.LBE334:
 2643              	.LBE333:
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2644              		.loc 3 404 7 view .LVU840
 2645              	.LBB335:
 2646              	.LBI335:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2647              		.loc 4 258 27 view .LVU841
 2648              	.LBB336:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2649              		.loc 4 260 3 view .LVU842
ARM GAS  /tmp/ccReAcTZ.s 			page 120


 2650              		.syntax unified
 2651              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2652 023e BFF36F8F 		isb 0xF
 2653              	@ 0 "" 2
 2654              	.LVL205:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2655              		.loc 4 260 3 is_stmt 0 view .LVU843
 2656              		.thumb
 2657              		.syntax unified
 2658              	.LBE336:
 2659              	.LBE335:
 2660              	.LBE337:
 2661              	.LBE338:
1459:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
 2662              		.loc 1 1459 5 is_stmt 1 view .LVU844
 2663              	.LBB339:
 2664              	.LBI339:
1389:Src/app.c     **** {
 2665              		.loc 1 1389 13 view .LVU845
 2666              	.LBB340:
1391:Src/app.c     **** 
 2667              		.loc 1 1391 3 view .LVU846
1393:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
 2668              		.loc 1 1393 3 view .LVU847
 2669              	.LBB341:
 2670              	.LBI341:
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2671              		.loc 4 960 27 view .LVU848
 2672              	.LBB342:
 2673              		.loc 4 962 3 view .LVU849
 2674              		.syntax unified
 2675              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2676 0242 72B6     		cpsid i
 2677              	@ 0 "" 2
 2678              		.thumb
 2679              		.syntax unified
 2680              	.LBE342:
 2681              	.LBE341:
1394:Src/app.c     ****   assert(ret == HAL_OK);
 2682              		.loc 1 1394 3 view .LVU850
1394:Src/app.c     ****   assert(ret == HAL_OK);
 2683              		.loc 1 1394 9 is_stmt 0 view .LVU851
 2684 0244 0120     		movs	r0, #1
 2685 0246 FFF7FEFF 		bl	SCRL_ReloadLayer
 2686              	.LVL206:
1395:Src/app.c     ****   __enable_irq();
 2687              		.loc 1 1395 3 is_stmt 1 view .LVU852
 2688 024a 20B1     		cbz	r0, .L106
1395:Src/app.c     ****   __enable_irq();
 2689              		.loc 1 1395 3 is_stmt 0 discriminator 1 view .LVU853
 2690 024c 40F27351 		movw	r1, #1395
 2691 0250 114B     		ldr	r3, .L113+40
 2692 0252 1C4A     		ldr	r2, .L113+84
 2693 0254 04E7     		b	.L112
 2694              	.L106:
1396:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
 2695              		.loc 1 1396 3 is_stmt 1 view .LVU854
ARM GAS  /tmp/ccReAcTZ.s 			page 121


 2696              	.LBB343:
 2697              	.LBI343:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2698              		.loc 4 949 27 view .LVU855
 2699              	.LBB344:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2700              		.loc 4 951 3 view .LVU856
 2701              		.syntax unified
 2702              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2703 0256 62B6     		cpsie i
 2704              	@ 0 "" 2
 2705              		.thumb
 2706              		.syntax unified
 2707              	.LBE344:
 2708              	.LBE343:
1397:Src/app.c     **** }
 2709              		.loc 1 1397 3 view .LVU857
1397:Src/app.c     **** }
 2710              		.loc 1 1397 28 is_stmt 0 view .LVU858
 2711 0258 D9F80030 		ldr	r3, [r9]
 2712 025c C3F10103 		rsb	r3, r3, #1
1397:Src/app.c     **** }
 2713              		.loc 1 1397 24 view .LVU859
 2714 0260 C9F80030 		str	r3, [r9]
 2715              	.LVL207:
1397:Src/app.c     **** }
 2716              		.loc 1 1397 24 view .LVU860
 2717              	.LBE340:
 2718              	.LBE339:
1460:Src/app.c     ****   }
 2719              		.loc 1 1460 5 is_stmt 1 view .LVU861
1460:Src/app.c     ****   }
 2720              		.loc 1 1460 15 is_stmt 0 view .LVU862
 2721 0264 FFF7FEFF 		bl	HAL_GetTick
 2722              	.LVL208:
1460:Src/app.c     ****   }
 2723              		.loc 1 1460 13 discriminator 1 view .LVU863
 2724 0268 A0EB0A04 		sub	r4, r0, r10
 2725              	.LVL209:
1440:Src/app.c     ****   {
 2726              		.loc 1 1440 9 is_stmt 1 view .LVU864
1442:Src/app.c     ****     assert(ret == pdTRUE);
 2727              		.loc 1 1442 9 is_stmt 0 view .LVU865
 2728 026c EDE6     		b	.L107
 2729              	.L114:
 2730 026e 00BF     		.align	3
 2731              	.L113:
 2732 0270 00000000 		.word	0
 2733 0274 00005940 		.word	1079574528
 2734 0278 00000000 		.word	on_ld_toggle_button_click
 2735 027c 00000000 		.word	disp
 2736 0280 00000000 		.word	on_pd_toggle_button_click
 2737 0284 00000000 		.word	.LC1
 2738 0288 00000000 		.word	__func__.16
 2739 028c 0E000000 		.word	.LC2
 2740 0290 A8000000 		.word	disp+168
 2741 0294 00B80B00 		.word	768000
ARM GAS  /tmp/ccReAcTZ.s 			page 122


 2742 0298 00000000 		.word	.LC8
 2743 029c 00000000 		.word	__func__.12
 2744 02a0 00000000 		.word	cpu_load
 2745 02a4 00007A44 		.word	1148846080
 2746 02a8 0E000000 		.word	.LC9
 2747 02ac 17000000 		.word	.LC10
 2748 02b0 21000000 		.word	.LC11
 2749 02b4 2C000000 		.word	.LC12
 2750 02b8 36000000 		.word	.LC13
 2751 02bc 40000000 		.word	.LC14
 2752 02c0 00ED00E0 		.word	-536810240
 2753 02c4 00000000 		.word	__func__.11
 2754 02c8 00000000 		.word	lcd_fg_buffer_rd_idx
 2755 02cc 00180F00 		.word	lcd_fg_buffer
 2756              		.cfi_endproc
 2757              	.LFE7404:
 2759              		.section	.rodata.app_run.str1.1,"aMS",%progbits,1
 2760              	.LC15:
 2761 0000 496E6974 		.ascii	"Init application\000"
 2761      20617070 
 2761      6C696361 
 2761      74696F6E 
 2761      00
 2762              	.LC16:
 2763 0011 6973705F 		.ascii	"isp_sem\000"
 2763      73656D00 
 2764              	.LC17:
 2765 0019 64697370 		.ascii	"disp.update\000"
 2765      2E757064 
 2765      61746500 
 2766              	.LC18:
 2767 0025 64697370 		.ascii	"disp.lock\000"
 2767      2E6C6F63 
 2767      6B00
 2768              	.LC19:
 2769 002f 6E6E00   		.ascii	"nn\000"
 2770              	.LC20:
 2771 0032 68646C20 		.ascii	"hdl != NULL\000"
 2771      213D204E 
 2771      554C4C00 
 2772              	.LC21:
 2773 003e 647000   		.ascii	"dp\000"
 2774              	.LC22:
 2775 0041 69737000 		.ascii	"isp\000"
 2776              		.section	.text.app_run,"ax",%progbits
 2777              		.align	1
 2778              		.global	app_run
 2779              		.syntax unified
 2780              		.thumb
 2781              		.thumb_func
 2783              	app_run:
 2784              	.LFB7407:
1473:Src/app.c     ****   }
1474:Src/app.c     **** }
1475:Src/app.c     **** 
1476:Src/app.c     **** static void Display_init()
1477:Src/app.c     **** {
ARM GAS  /tmp/ccReAcTZ.s 			page 123


1478:Src/app.c     ****   SCRL_LayerConfig layers_config[2] = {
1479:Src/app.c     ****     {
1480:Src/app.c     ****       .origin = {lcd_bg_area.X0, lcd_bg_area.Y0},
1481:Src/app.c     ****       .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1482:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1483:Src/app.c     ****       .format = SCRL_RGB888,
1484:Src/app.c     **** #else
1485:Src/app.c     ****       .format = SCRL_ARGB8888,
1486:Src/app.c     **** #endif
1487:Src/app.c     ****       .address = lcd_bg_buffer[lcd_bg_buffer_disp_idx],
1488:Src/app.c     ****     },
1489:Src/app.c     ****     {
1490:Src/app.c     ****       .origin = {lcd_fg_area.X0, lcd_fg_area.Y0},
1491:Src/app.c     ****       .size = {lcd_fg_area.XSize, lcd_fg_area.YSize},
1492:Src/app.c     ****       .format = SCRL_ARGB4444,
1493:Src/app.c     ****       .address = lcd_fg_buffer[1],
1494:Src/app.c     ****     },
1495:Src/app.c     ****   };
1496:Src/app.c     ****   SCRL_ScreenConfig screen_config = {
1497:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1498:Src/app.c     **** #ifdef SCR_LIB_USE_SPI
1499:Src/app.c     ****     .format = SCRL_RGB565,
1500:Src/app.c     **** #else
1501:Src/app.c     ****      .format = SCRL_YUV422, /* Use SCRL_RGB565 if host support this format to reduce cpu load */
1502:Src/app.c     **** #endif
1503:Src/app.c     ****     .address = screen_buffer,
1504:Src/app.c     ****     .fps = CAMERA_FPS,
1505:Src/app.c     ****   };
1506:Src/app.c     ****   int ret;
1507:Src/app.c     **** 
1508:Src/app.c     ****   ret = SCRL_Init((SCRL_LayerConfig *[2]){&layers_config[0], &layers_config[1]}, &screen_config);
1509:Src/app.c     ****   assert(ret == 0);
1510:Src/app.c     **** 
1511:Src/app.c     ****   UTIL_LCD_SetLayer(SCRL_LAYER_1);
1512:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
1513:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
1514:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
1515:Src/app.c     **** }
1516:Src/app.c     **** 
1517:Src/app.c     **** void app_run()
1518:Src/app.c     **** {
 2785              		.loc 1 1518 1 is_stmt 1 view -0
 2786              		.cfi_startproc
 2787              		@ args = 0, pretend = 0, frame = 56
 2788              		@ frame_needed = 0, uses_anonymous_args = 0
1519:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 2789              		.loc 1 1519 3 view .LVU867
 2790              	.LVL210:
1520:Src/app.c     ****   UBaseType_t dp_priority = FREERTOS_PRIORITY(-2);
 2791              		.loc 1 1520 3 view .LVU868
1521:Src/app.c     ****   UBaseType_t nn_priority = FREERTOS_PRIORITY(1);
 2792              		.loc 1 1521 3 view .LVU869
1522:Src/app.c     ****   TaskHandle_t hdl;
 2793              		.loc 1 1522 3 view .LVU870
1523:Src/app.c     ****   int ret;
 2794              		.loc 1 1523 3 view .LVU871
1524:Src/app.c     **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 124


1525:Src/app.c     ****   printf("Init application\n");
 2795              		.loc 1 1525 3 view .LVU872
1518:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 2796              		.loc 1 1518 1 is_stmt 0 view .LVU873
 2797 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2798              		.cfi_def_cfa_offset 28
 2799              		.cfi_offset 4, -28
 2800              		.cfi_offset 5, -24
 2801              		.cfi_offset 6, -20
 2802              		.cfi_offset 7, -16
 2803              		.cfi_offset 8, -12
 2804              		.cfi_offset 9, -8
 2805              		.cfi_offset 14, -4
1526:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
1527:Src/app.c     ****   CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 2806              		.loc 1 1527 12 view .LVU874
 2807 0004 854D     		ldr	r5, .L135
1518:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 2808              		.loc 1 1518 1 view .LVU875
 2809 0006 93B0     		sub	sp, sp, #76
 2810              		.cfi_def_cfa_offset 104
1525:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
 2811              		.loc 1 1525 3 view .LVU876
 2812 0008 8548     		ldr	r0, .L135+4
 2813 000a FFF7FEFF 		bl	puts
 2814              	.LVL211:
 2815              		.loc 1 1527 3 is_stmt 1 view .LVU877
 2816              		.loc 1 1527 12 is_stmt 0 view .LVU878
 2817 000e D5F8FC30 		ldr	r3, [r5, #252]
1528:Src/app.c     **** 
1529:Src/app.c     ****   /* screen init */
1530:Src/app.c     ****   memset(lcd_bg_buffer, 0, sizeof(lcd_bg_buffer));
 2818              		.loc 1 1530 3 view .LVU879
 2819 0012 844C     		ldr	r4, .L135+8
1527:Src/app.c     **** 
 2820              		.loc 1 1527 20 view .LVU880
 2821 0014 43F08073 		orr	r3, r3, #16777216
 2822              		.loc 1 1530 3 view .LVU881
 2823 0018 0021     		movs	r1, #0
 2824 001a 2046     		mov	r0, r4
 2825 001c 824A     		ldr	r2, .L135+12
1527:Src/app.c     **** 
 2826              		.loc 1 1527 20 view .LVU882
 2827 001e C5F8FC30 		str	r3, [r5, #252]
 2828              		.loc 1 1530 3 is_stmt 1 view .LVU883
 2829 0022 FFF7FEFF 		bl	memset
 2830              	.LVL212:
1531:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_bg_buffer, sizeof(lcd_bg_buffer)));
 2831              		.loc 1 1531 3 view .LVU884
 2832              		.loc 1 1531 3 view .LVU885
 2833              		.loc 1 1531 3 discriminator 1 view .LVU886
 2834              	.LBB367:
 2835              	.LBI367:
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 125


 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean and Invalidate by address
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and invalidates D_Cache for the given address
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned and invalidated starting from a 32 byte aligned address in 32 byte gr
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned and inval
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 2836              		.loc 3 418 27 view .LVU887
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 2837              		.loc 3 421 5 view .LVU888
 2838              	.LBB368:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2839              		.loc 3 422 8 view .LVU889
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2840              		.loc 3 423 7 view .LVU890
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2841              		.loc 3 425 7 view .LVU891
 2842              	.LBB369:
 2843              	.LBI369:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2844              		.loc 4 269 27 view .LVU892
 2845              	.LBB370:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2846              		.loc 4 271 3 view .LVU893
 2847              		.syntax unified
 2848              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2849 0026 BFF34F8F 		dsb 0xF
 2850              	@ 0 "" 2
 2851              		.thumb
 2852              		.syntax unified
 2853              	.LBE370:
 2854              	.LBE369:
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2855              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU894
 2856 002a DFF880E2 		ldr	lr, .L135+144
 2857              	.LBB372:
 2858              	.LBB371:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2859              		.loc 4 272 1 view .LVU895
 2860 002e 0023     		movs	r3, #0
 2861              	.LBE371:
 2862              	.LBE372:
 2863              		.loc 3 431 25 discriminator 1 view .LVU896
 2864 0030 4EF001E0 		dls	lr, lr
 2865              	.LVL213:
 2866              	.L116:
ARM GAS  /tmp/ccReAcTZ.s 			page 126


 2867              		.loc 3 431 25 discriminator 1 view .LVU897
 2868 0034 E218     		adds	r2, r4, r3
 2869              	.LVL214:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 2870              		.loc 3 427 7 is_stmt 1 view .LVU898
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2871              		.loc 3 428 9 view .LVU899
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2872              		.loc 3 428 23 is_stmt 0 view .LVU900
 2873 0036 C5F87022 		str	r2, [r5, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2874              		.loc 3 429 9 is_stmt 1 view .LVU901
 2875              	.LVL215:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2876              		.loc 3 430 9 view .LVU902
 2877              		.loc 3 431 25 discriminator 1 view .LVU903
 2878 003a 2033     		adds	r3, r3, #32
 2879              	.LVL216:
 2880              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU904
 2881 003c 0FF007C0 		le	lr, .L116
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2882              		.loc 3 433 7 is_stmt 1 view .LVU905
 2883              	.LBB373:
 2884              	.LBI373:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2885              		.loc 4 269 27 view .LVU906
 2886              	.LBB374:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2887              		.loc 4 271 3 view .LVU907
 2888              		.syntax unified
 2889              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2890 0040 BFF34F8F 		dsb 0xF
 2891              	@ 0 "" 2
 2892              		.thumb
 2893              		.syntax unified
 2894              	.LBE374:
 2895              	.LBE373:
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2896              		.loc 3 434 7 view .LVU908
 2897              	.LBB375:
 2898              	.LBI375:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2899              		.loc 4 258 27 view .LVU909
 2900              	.LBB376:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2901              		.loc 4 260 3 view .LVU910
 2902              		.syntax unified
 2903              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2904 0044 BFF36F8F 		isb 0xF
 2905              	@ 0 "" 2
 2906              	.LVL217:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2907              		.loc 4 260 3 is_stmt 0 view .LVU911
 2908              		.thumb
 2909              		.syntax unified
 2910              	.LBE376:
ARM GAS  /tmp/ccReAcTZ.s 			page 127


 2911              	.LBE375:
 2912              	.LBE368:
 2913              	.LBE367:
 2914              		.loc 1 1531 3 is_stmt 1 discriminator 3 view .LVU912
1532:Src/app.c     ****   memset(lcd_fg_buffer, 0, sizeof(lcd_fg_buffer));
 2915              		.loc 1 1532 3 view .LVU913
 2916 0048 784D     		ldr	r5, .L135+16
 2917 004a 0021     		movs	r1, #0
 2918 004c 2846     		mov	r0, r5
 2919 004e 784A     		ldr	r2, .L135+20
 2920 0050 FFF7FEFF 		bl	memset
 2921              	.LVL218:
1533:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_fg_buffer, sizeof(lcd_fg_buffer)));
 2922              		.loc 1 1533 3 view .LVU914
 2923              		.loc 1 1533 3 view .LVU915
 2924              		.loc 1 1533 3 discriminator 1 view .LVU916
 2925              	.LBB377:
 2926              	.LBI377:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2927              		.loc 3 418 27 view .LVU917
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2928              		.loc 3 421 5 view .LVU918
 2929              	.LBB378:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2930              		.loc 3 422 8 view .LVU919
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2931              		.loc 3 423 7 view .LVU920
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2932              		.loc 3 425 7 view .LVU921
 2933              	.LBB379:
 2934              	.LBI379:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2935              		.loc 4 269 27 view .LVU922
 2936              	.LBB380:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2937              		.loc 4 271 3 view .LVU923
 2938              		.syntax unified
 2939              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2940 0054 BFF34F8F 		dsb 0xF
 2941              	@ 0 "" 2
 2942              		.thumb
 2943              		.syntax unified
 2944              	.LBE380:
 2945              	.LBE379:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2946              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU924
 2947 0058 4BF6803E 		movw	lr, #48000
 2948              	.LBB382:
 2949              	.LBB381:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2950              		.loc 4 272 1 view .LVU925
 2951 005c 0023     		movs	r3, #0
 2952              	.LBE381:
 2953              	.LBE382:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2954              		.loc 3 431 25 discriminator 1 view .LVU926
 2955 005e 4EF001E0 		dls	lr, lr
ARM GAS  /tmp/ccReAcTZ.s 			page 128


 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2956              		.loc 3 428 23 view .LVU927
 2957 0062 6E4A     		ldr	r2, .L135
 2958              	.LVL219:
 2959              	.L117:
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2960              		.loc 3 428 23 view .LVU928
 2961 0064 E918     		adds	r1, r5, r3
 2962              	.LVL220:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 2963              		.loc 3 427 7 is_stmt 1 view .LVU929
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2964              		.loc 3 428 9 view .LVU930
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2965              		.loc 3 428 23 is_stmt 0 view .LVU931
 2966 0066 C2F87012 		str	r1, [r2, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2967              		.loc 3 429 9 is_stmt 1 view .LVU932
 2968              	.LVL221:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2969              		.loc 3 430 9 view .LVU933
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2970              		.loc 3 431 25 discriminator 1 view .LVU934
 2971 006a 2033     		adds	r3, r3, #32
 2972              	.LVL222:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2973              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU935
 2974 006c 0FF007C0 		le	lr, .L117
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2975              		.loc 3 433 7 is_stmt 1 view .LVU936
 2976              	.LBB383:
 2977              	.LBI383:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2978              		.loc 4 269 27 view .LVU937
 2979              	.LBB384:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2980              		.loc 4 271 3 view .LVU938
 2981              		.syntax unified
 2982              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2983 0070 BFF34F8F 		dsb 0xF
 2984              	@ 0 "" 2
 2985              		.thumb
 2986              		.syntax unified
 2987              	.LBE384:
 2988              	.LBE383:
 2989              		.loc 3 434 7 view .LVU939
 2990              	.LBB385:
 2991              	.LBI385:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2992              		.loc 4 258 27 view .LVU940
 2993              	.LBB386:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2994              		.loc 4 260 3 view .LVU941
 2995              		.syntax unified
 2996              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2997 0074 BFF36F8F 		isb 0xF
 2998              	@ 0 "" 2
ARM GAS  /tmp/ccReAcTZ.s 			page 129


 2999              	.LVL223:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3000              		.loc 4 260 3 is_stmt 0 view .LVU942
 3001              		.thumb
 3002              		.syntax unified
 3003              	.LBE386:
 3004              	.LBE385:
 3005              	.LBE378:
 3006              	.LBE377:
 3007              		.loc 1 1533 3 is_stmt 1 discriminator 3 view .LVU943
1534:Src/app.c     ****   Display_init();
 3008              		.loc 1 1534 3 view .LVU944
 3009              	.LBB387:
 3010              	.LBI387:
1476:Src/app.c     **** {
 3011              		.loc 1 1476 13 view .LVU945
 3012              	.LBB388:
1478:Src/app.c     ****     {
 3013              		.loc 1 1478 3 view .LVU946
1478:Src/app.c     ****     {
 3014              		.loc 1 1478 20 is_stmt 0 view .LVU947
 3015 0078 0320     		movs	r0, #3
 3016 007a 0021     		movs	r1, #0
 3017 007c 0126     		movs	r6, #1
1496:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3018              		.loc 1 1496 21 view .LVU948
 3019 007e 0227     		movs	r7, #2
 3020 0080 4FF01E09 		mov	r9, #30
1478:Src/app.c     ****     {
 3021              		.loc 1 1478 20 view .LVU949
 3022 0084 8DF83000 		strb	r0, [sp, #48]
1487:Src/app.c     ****     },
 3023              		.loc 1 1487 31 view .LVU950
 3024 0088 6A48     		ldr	r0, .L135+24
1478:Src/app.c     ****     {
 3025              		.loc 1 1478 20 view .LVU951
 3026 008a 6B4A     		ldr	r2, .L135+28
1487:Src/app.c     ****     },
 3027              		.loc 1 1487 18 view .LVU952
 3028 008c 0068     		ldr	r0, [r0]
1478:Src/app.c     ****     {
 3029              		.loc 1 1478 20 view .LVU953
 3030 008e CDE90A12 		strd	r1, r2, [sp, #40]
1487:Src/app.c     ****     },
 3031              		.loc 1 1487 18 view .LVU954
 3032 0092 03FB0044 		mla	r4, r3, r0, r4
1478:Src/app.c     ****     {
 3033              		.loc 1 1478 20 view .LVU955
 3034 0096 694B     		ldr	r3, .L135+32
 3035 0098 CDE90D41 		strd	r4, r1, [sp, #52]
 3036 009c 1193     		str	r3, [sp, #68]
1496:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3037              		.loc 1 1496 3 is_stmt 1 view .LVU956
1496:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3038              		.loc 1 1496 21 is_stmt 0 view .LVU957
 3039 009e 684B     		ldr	r3, .L135+36
1508:Src/app.c     ****   assert(ret == 0);
ARM GAS  /tmp/ccReAcTZ.s 			page 130


 3040              		.loc 1 1508 9 view .LVU958
 3041 00a0 06A9     		add	r1, sp, #24
1496:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3042              		.loc 1 1496 21 view .LVU959
 3043 00a2 0893     		str	r3, [sp, #32]
1508:Src/app.c     ****   assert(ret == 0);
 3044              		.loc 1 1508 42 view .LVU960
 3045 00a4 0AAB     		add	r3, sp, #40
 3046 00a6 0493     		str	r3, [sp, #16]
1508:Src/app.c     ****   assert(ret == 0);
 3047              		.loc 1 1508 9 view .LVU961
 3048 00a8 04A8     		add	r0, sp, #16
1508:Src/app.c     ****   assert(ret == 0);
 3049              		.loc 1 1508 42 view .LVU962
 3050 00aa 0EAB     		add	r3, sp, #56
1478:Src/app.c     ****     {
 3051              		.loc 1 1478 20 view .LVU963
 3052 00ac 0F92     		str	r2, [sp, #60]
 3053 00ae 8DF84060 		strb	r6, [sp, #64]
1496:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3054              		.loc 1 1496 21 view .LVU964
 3055 00b2 0692     		str	r2, [sp, #24]
 3056 00b4 8DF81C70 		strb	r7, [sp, #28]
 3057 00b8 ADF82490 		strh	r9, [sp, #36]	@ movhi
1506:Src/app.c     **** 
 3058              		.loc 1 1506 3 is_stmt 1 view .LVU965
1508:Src/app.c     ****   assert(ret == 0);
 3059              		.loc 1 1508 3 view .LVU966
1508:Src/app.c     ****   assert(ret == 0);
 3060              		.loc 1 1508 42 is_stmt 0 view .LVU967
 3061 00bc 0593     		str	r3, [sp, #20]
1508:Src/app.c     ****   assert(ret == 0);
 3062              		.loc 1 1508 9 view .LVU968
 3063 00be FFF7FEFF 		bl	SCRL_Init
 3064              	.LVL224:
1509:Src/app.c     **** 
 3065              		.loc 1 1509 3 is_stmt 1 view .LVU969
 3066 00c2 0446     		mov	r4, r0
 3067 00c4 30B1     		cbz	r0, .L118
1509:Src/app.c     **** 
 3068              		.loc 1 1509 3 is_stmt 0 discriminator 1 view .LVU970
 3069 00c6 40F2E551 		movw	r1, #1509
 3070 00ca 5E4B     		ldr	r3, .L135+40
 3071 00cc 5E4A     		ldr	r2, .L135+44
 3072              	.LVL225:
 3073              	.L134:
1509:Src/app.c     **** 
 3074              		.loc 1 1509 3 discriminator 1 view .LVU971
 3075              	.LBE388:
 3076              	.LBE387:
1535:Src/app.c     **** 
1536:Src/app.c     ****   /* create buffer queues */
1537:Src/app.c     ****   ret = bqueue_init(&nn_input_queue, 2, (uint8_t *[2]){nn_input_buffers[0], nn_input_buffers[1]});
1538:Src/app.c     ****   assert(ret == 0);
 3077              		.loc 1 1538 3 discriminator 1 view .LVU972
 3078 00ce 5F48     		ldr	r0, .L135+48
 3079 00d0 FFF7FEFF 		bl	__assert_func
ARM GAS  /tmp/ccReAcTZ.s 			page 131


 3080              	.LVL226:
 3081              	.L118:
 3082              	.LBB391:
 3083              	.LBB389:
1511:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 3084              		.loc 1 1511 3 is_stmt 1 view .LVU973
 3085 00d4 3046     		mov	r0, r6
 3086              	.LVL227:
1511:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 3087              		.loc 1 1511 3 is_stmt 0 view .LVU974
 3088 00d6 FFF7FEFF 		bl	UTIL_LCD_SetLayer
 3089              	.LVL228:
1512:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
 3090              		.loc 1 1512 3 is_stmt 1 view .LVU975
 3091 00da 2046     		mov	r0, r4
 3092 00dc FFF7FEFF 		bl	UTIL_LCD_Clear
 3093              	.LVL229:
1513:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 3094              		.loc 1 1513 3 view .LVU976
 3095              	.LBE389:
 3096              	.LBE391:
 3097              	.LBB392:
 3098              	.LBB393:
 449:Src/app.c     ****   if (!bq->free)
 3099              		.loc 1 449 14 is_stmt 0 view .LVU977
 3100 00e0 DFF8CC81 		ldr	r8, .L135+148
 3101              	.LBE393:
 3102              	.LBE392:
 3103              	.LBB398:
 3104              	.LBB390:
1513:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 3105              		.loc 1 1513 3 view .LVU978
 3106 00e4 5A48     		ldr	r0, .L135+52
 3107 00e6 FFF7FEFF 		bl	UTIL_LCD_SetFont
 3108              	.LVL230:
1514:Src/app.c     **** }
 3109              		.loc 1 1514 3 is_stmt 1 view .LVU979
 3110 00ea 4FF0FF30 		mov	r0, #-1
 3111 00ee FFF7FEFF 		bl	UTIL_LCD_SetTextColor
 3112              	.LVL231:
1514:Src/app.c     **** }
 3113              		.loc 1 1514 3 is_stmt 0 view .LVU980
 3114              	.LBE390:
 3115              	.LBE398:
1537:Src/app.c     ****   assert(ret == 0);
 3116              		.loc 1 1537 3 is_stmt 1 view .LVU981
 3117              	.LBB399:
 3118              	.LBI392:
 442:Src/app.c     **** {
 3119              		.loc 1 442 12 view .LVU982
 3120              	.LBB394:
 444:Src/app.c     **** 
 3121              		.loc 1 444 3 view .LVU983
 446:Src/app.c     ****     return -1;
 3122              		.loc 1 446 3 view .LVU984
 449:Src/app.c     ****   if (!bq->free)
 3123              		.loc 1 449 3 view .LVU985
ARM GAS  /tmp/ccReAcTZ.s 			page 132


 449:Src/app.c     ****   if (!bq->free)
 3124              		.loc 1 449 14 is_stmt 0 view .LVU986
 3125 00f2 4246     		mov	r2, r8
 3126 00f4 3946     		mov	r1, r7
 3127 00f6 3846     		mov	r0, r7
 3128 00f8 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 3129              	.LVL232:
 449:Src/app.c     ****   if (!bq->free)
 3130              		.loc 1 449 12 discriminator 1 view .LVU987
 3131 00fc A8F10405 		sub	r5, r8, #4
 3132 0100 48F8040C 		str	r0, [r8, #-4]
 450:Src/app.c     ****     goto free_sem_error;
 3133              		.loc 1 450 3 is_stmt 1 view .LVU988
 450:Src/app.c     ****     goto free_sem_error;
 3134              		.loc 1 450 6 is_stmt 0 view .LVU989
 3135 0104 58B1     		cbz	r0, .L119
 452:Src/app.c     ****   if (!bq->ready)
 3136              		.loc 1 452 3 is_stmt 1 view .LVU990
 452:Src/app.c     ****   if (!bq->ready)
 3137              		.loc 1 452 15 is_stmt 0 view .LVU991
 3138 0106 2146     		mov	r1, r4
 3139 0108 3846     		mov	r0, r7
 3140 010a 08F15402 		add	r2, r8, #84
 3141 010e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 3142              	.LVL233:
 452:Src/app.c     ****   if (!bq->ready)
 3143              		.loc 1 452 13 discriminator 1 view .LVU992
 3144 0112 6865     		str	r0, [r5, #84]
 453:Src/app.c     ****     goto ready_sem_error;
 3145              		.loc 1 453 3 is_stmt 1 view .LVU993
 453:Src/app.c     ****     goto ready_sem_error;
 3146              		.loc 1 453 6 is_stmt 0 view .LVU994
 3147 0114 40B9     		cbnz	r0, .L120
 454:Src/app.c     **** 
 3148              		.loc 1 454 5 is_stmt 1 view .LVU995
 3149              	.LDL1:
 467:Src/app.c     **** free_sem_error:
 3150              		.loc 1 467 3 view .LVU996
 3151 0116 58F8040C 		ldr	r0, [r8, #-4]
 3152 011a FFF7FEFF 		bl	vQueueDelete
 3153              	.LVL234:
 467:Src/app.c     **** free_sem_error:
 3154              		.loc 1 467 3 is_stmt 0 view .LVU997
 3155              	.LBE394:
 3156              	.LBE399:
 3157              		.loc 1 1538 3 is_stmt 1 view .LVU998
 3158              	.L119:
 3159              		.loc 1 1538 3 is_stmt 0 discriminator 1 view .LVU999
 3160 011e 40F20261 		movw	r1, #1538
 3161 0122 484B     		ldr	r3, .L135+40
 3162 0124 4B4A     		ldr	r2, .L135+56
 3163 0126 D2E7     		b	.L134
 3164              	.LVL235:
 3165              	.L120:
 3166              	.LBB400:
 3167              	.LBB395:
 456:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
ARM GAS  /tmp/ccReAcTZ.s 			page 133


 3168              		.loc 1 456 3 is_stmt 1 view .LVU1000
 459:Src/app.c     ****   }
 3169              		.loc 1 459 20 is_stmt 0 view .LVU1001
 3170 0128 4B4B     		ldr	r3, .L135+60
 3171              	.LBE395:
 3172              	.LBE400:
 3173              	.LBB401:
 3174              	.LBB402:
 409:Src/app.c     **** }
 3175              		.loc 1 409 3 view .LVU1002
 3176 012a E022     		movs	r2, #224
 3177 012c 2146     		mov	r1, r4
 3178              	.LBE402:
 3179              	.LBE401:
 3180              	.LBB405:
 3181              	.LBB396:
 459:Src/app.c     ****   }
 3182              		.loc 1 459 20 view .LVU1003
 3183 012e C5F8AC30 		str	r3, [r5, #172]
 3184              	.LBE396:
 3185              	.LBE405:
 3186              	.LBB406:
 3187              	.LBB403:
 409:Src/app.c     **** }
 3188              		.loc 1 409 3 view .LVU1004
 3189 0132 4A48     		ldr	r0, .L135+64
 3190              	.LBE403:
 3191              	.LBE406:
 3192              	.LBB407:
 3193              	.LBB397:
 459:Src/app.c     ****   }
 3194              		.loc 1 459 20 view .LVU1005
 3195 0134 03F5D833 		add	r3, r3, #110592
 461:Src/app.c     ****   bq->ready_idx = 0;
 3196              		.loc 1 461 16 view .LVU1006
 3197 0138 C5E92C34 		strd	r3, r4, [r5, #176]
 456:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 3198              		.loc 1 456 17 view .LVU1007
 3199 013c C5F8A870 		str	r7, [r5, #168]
 457:Src/app.c     ****     assert(buffers[i]);
 3200              		.loc 1 457 3 is_stmt 1 view .LVU1008
 3201              	.LVL236:
 457:Src/app.c     ****     assert(buffers[i]);
 3202              		.loc 1 457 17 discriminator 1 view .LVU1009
 458:Src/app.c     ****     bq->buffers[i] = buffers[i];
 3203              		.loc 1 458 5 view .LVU1010
 459:Src/app.c     ****   }
 3204              		.loc 1 459 5 view .LVU1011
 457:Src/app.c     ****     assert(buffers[i]);
 3205              		.loc 1 457 31 discriminator 2 view .LVU1012
 457:Src/app.c     ****     assert(buffers[i]);
 3206              		.loc 1 457 17 discriminator 1 view .LVU1013
 458:Src/app.c     ****     bq->buffers[i] = buffers[i];
 3207              		.loc 1 458 5 view .LVU1014
 459:Src/app.c     ****   }
 3208              		.loc 1 459 5 view .LVU1015
 462:Src/app.c     **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 134


 3209              		.loc 1 462 3 view .LVU1016
 462:Src/app.c     **** 
 3210              		.loc 1 462 17 is_stmt 0 view .LVU1017
 3211 0140 C5F8B840 		str	r4, [r5, #184]
 464:Src/app.c     **** 
 3212              		.loc 1 464 3 is_stmt 1 view .LVU1018
 3213              	.LVL237:
 464:Src/app.c     **** 
 3214              		.loc 1 464 3 is_stmt 0 view .LVU1019
 3215              	.LBE397:
 3216              	.LBE407:
 3217              		.loc 1 1538 3 is_stmt 1 view .LVU1020
1539:Src/app.c     **** 
1540:Src/app.c     ****   cpuload_init(&cpu_load);
 3218              		.loc 1 1540 3 view .LVU1021
 3219              	.LBB408:
 3220              	.LBI401:
 407:Src/app.c     **** {
 3221              		.loc 1 407 13 view .LVU1022
 3222              	.LBB404:
 409:Src/app.c     **** }
 3223              		.loc 1 409 3 view .LVU1023
 3224 0144 FFF7FEFF 		bl	memset
 3225              	.LVL238:
 409:Src/app.c     **** }
 3226              		.loc 1 409 3 is_stmt 0 view .LVU1024
 3227              	.LBE404:
 3228              	.LBE408:
1541:Src/app.c     **** 
1542:Src/app.c     ****   /*** Camera Init ************************************************************/  
1543:Src/app.c     ****   CAM_Init();
 3229              		.loc 1 1543 3 is_stmt 1 view .LVU1025
 3230 0148 FFF7FEFF 		bl	CAM_Init
 3231              	.LVL239:
1544:Src/app.c     **** 
1545:Src/app.c     ****   /* sems + mutex init */
1546:Src/app.c     ****   isp_sem = xSemaphoreCreateCountingStatic(1, 0, &isp_sem_buffer);
 3232              		.loc 1 1546 3 view .LVU1026
 3233              		.loc 1 1546 13 is_stmt 0 view .LVU1027
 3234 014c 2146     		mov	r1, r4
 3235 014e 3046     		mov	r0, r6
 3236 0150 434A     		ldr	r2, .L135+68
 3237 0152 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 3238              	.LVL240:
 3239              		.loc 1 1546 11 discriminator 1 view .LVU1028
 3240 0156 434B     		ldr	r3, .L135+72
 3241 0158 1860     		str	r0, [r3]
1547:Src/app.c     ****   assert(isp_sem);
 3242              		.loc 1 1547 3 is_stmt 1 view .LVU1029
 3243 015a 20B9     		cbnz	r0, .L133
 3244              		.loc 1 1547 3 is_stmt 0 discriminator 1 view .LVU1030
 3245 015c 40F20B61 		movw	r1, #1547
 3246 0160 414B     		ldr	r3, .L135+76
 3247 0162 3C4A     		ldr	r2, .L135+56
 3248 0164 B3E7     		b	.L134
 3249              	.L133:
1548:Src/app.c     ****   disp.update = xSemaphoreCreateCountingStatic(1, 0, &disp.update_buffer);
ARM GAS  /tmp/ccReAcTZ.s 			page 135


 3250              		.loc 1 1548 3 is_stmt 1 view .LVU1031
 3251              		.loc 1 1548 17 is_stmt 0 view .LVU1032
 3252 0166 414D     		ldr	r5, .L135+80
 3253 0168 2146     		mov	r1, r4
 3254 016a 2A46     		mov	r2, r5
 3255 016c 3046     		mov	r0, r6
 3256 016e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 3257              	.LVL241:
 3258              		.loc 1 1548 15 discriminator 1 view .LVU1033
 3259 0172 2F1F     		subs	r7, r5, #4
 3260 0174 45F8040C 		str	r0, [r5, #-4]
1549:Src/app.c     ****   assert(disp.update);
 3261              		.loc 1 1549 3 is_stmt 1 view .LVU1034
 3262 0178 20B9     		cbnz	r0, .L123
 3263              		.loc 1 1549 3 is_stmt 0 discriminator 1 view .LVU1035
 3264 017a 40F20D61 		movw	r1, #1549
 3265 017e 3C4B     		ldr	r3, .L135+84
 3266 0180 344A     		ldr	r2, .L135+56
 3267 0182 A4E7     		b	.L134
 3268              	.L123:
1550:Src/app.c     ****   disp.lock = xSemaphoreCreateMutexStatic(&disp.lock_buffer);
 3269              		.loc 1 1550 3 is_stmt 1 view .LVU1036
 3270              		.loc 1 1550 15 is_stmt 0 view .LVU1037
 3271 0184 3046     		mov	r0, r6
 3272 0186 05F15401 		add	r1, r5, #84
 3273 018a FFF7FEFF 		bl	xQueueCreateMutexStatic
 3274              	.LVL242:
 3275              		.loc 1 1550 13 discriminator 1 view .LVU1038
 3276 018e 7865     		str	r0, [r7, #84]
1551:Src/app.c     ****   assert(disp.lock);
 3277              		.loc 1 1551 3 is_stmt 1 view .LVU1039
 3278 0190 20B9     		cbnz	r0, .L124
 3279              		.loc 1 1551 3 is_stmt 0 discriminator 1 view .LVU1040
 3280 0192 40F20F61 		movw	r1, #1551
 3281 0196 374B     		ldr	r3, .L135+88
 3282 0198 2E4A     		ldr	r2, .L135+56
 3283 019a 98E7     		b	.L134
 3284              	.L124:
1552:Src/app.c     **** 
1553:Src/app.c     ****   /* Start LCD Display camera pipe stream */
1554:Src/app.c     ****   CAM_DisplayPipe_Start(lcd_bg_buffer[0], CMW_MODE_CONTINUOUS);
 3285              		.loc 1 1554 3 is_stmt 1 view .LVU1041
 3286 019c 2146     		mov	r1, r4
 3287 019e 2148     		ldr	r0, .L135+8
 3288 01a0 FFF7FEFF 		bl	CAM_DisplayPipe_Start
 3289              	.LVL243:
1555:Src/app.c     **** 
1556:Src/app.c     ****   /* threads init */
1557:Src/app.c     ****   hdl = xTaskCreateStatic(nn_thread_fct, "nn", configMINIMAL_STACK_SIZE * 2, NULL, nn_priority, nn_
 3290              		.loc 1 1557 3 view .LVU1042
 3291              		.loc 1 1557 9 is_stmt 0 view .LVU1043
 3292 01a4 344B     		ldr	r3, .L135+92
 3293 01a6 4FF40062 		mov	r2, #2048
 3294 01aa 0293     		str	r3, [sp, #8]
 3295 01ac 334B     		ldr	r3, .L135+96
 3296 01ae 3449     		ldr	r1, .L135+100
 3297 01b0 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccReAcTZ.s 			page 136


 3298 01b2 1D23     		movs	r3, #29
 3299 01b4 3348     		ldr	r0, .L135+104
 3300 01b6 0093     		str	r3, [sp]
 3301 01b8 2346     		mov	r3, r4
 3302 01ba FFF7FEFF 		bl	xTaskCreateStatic
 3303              	.LVL244:
1558:Src/app.c     ****                           &nn_thread);
1559:Src/app.c     ****   assert(hdl != NULL);
 3304              		.loc 1 1559 3 is_stmt 1 view .LVU1044
 3305 01be 20B9     		cbnz	r0, .L125
 3306              		.loc 1 1559 3 is_stmt 0 discriminator 1 view .LVU1045
 3307 01c0 40F21761 		movw	r1, #1559
 3308 01c4 304B     		ldr	r3, .L135+108
 3309 01c6 234A     		ldr	r2, .L135+56
 3310 01c8 81E7     		b	.L134
 3311              	.L125:
1560:Src/app.c     ****   hdl = xTaskCreateStatic(dp_thread_fct, "dp", configMINIMAL_STACK_SIZE * 2, NULL, dp_priority, dp_
 3312              		.loc 1 1560 3 is_stmt 1 view .LVU1046
 3313              		.loc 1 1560 9 is_stmt 0 view .LVU1047
 3314 01ca 304B     		ldr	r3, .L135+112
 3315 01cc 4FF40062 		mov	r2, #2048
 3316 01d0 0293     		str	r3, [sp, #8]
 3317 01d2 2F4B     		ldr	r3, .L135+116
 3318 01d4 2F49     		ldr	r1, .L135+120
 3319 01d6 0193     		str	r3, [sp, #4]
 3320 01d8 1A23     		movs	r3, #26
 3321 01da 2F48     		ldr	r0, .L135+124
 3322              	.LVL245:
 3323              		.loc 1 1560 9 view .LVU1048
 3324 01dc 0093     		str	r3, [sp]
 3325 01de 2346     		mov	r3, r4
 3326 01e0 FFF7FEFF 		bl	xTaskCreateStatic
 3327              	.LVL246:
1561:Src/app.c     ****                           &dp_thread);
1562:Src/app.c     ****   assert(hdl != NULL);
 3328              		.loc 1 1562 3 is_stmt 1 view .LVU1049
 3329 01e4 20B9     		cbnz	r0, .L126
 3330              		.loc 1 1562 3 is_stmt 0 discriminator 1 view .LVU1050
 3331 01e6 40F21A61 		movw	r1, #1562
 3332 01ea 274B     		ldr	r3, .L135+108
 3333 01ec 194A     		ldr	r2, .L135+56
 3334 01ee 6EE7     		b	.L134
 3335              	.L126:
1563:Src/app.c     ****   hdl = xTaskCreateStatic(isp_thread_fct, "isp", configMINIMAL_STACK_SIZE * 2, NULL, isp_priority, 
 3336              		.loc 1 1563 3 is_stmt 1 view .LVU1051
 3337              		.loc 1 1563 9 is_stmt 0 view .LVU1052
 3338 01f0 2A4B     		ldr	r3, .L135+128
 3339 01f2 4FF40062 		mov	r2, #2048
 3340 01f6 0293     		str	r3, [sp, #8]
 3341 01f8 294B     		ldr	r3, .L135+132
 3342 01fa 2A49     		ldr	r1, .L135+136
 3343 01fc CDE90093 		strd	r9, r3, [sp]
 3344 0200 2948     		ldr	r0, .L135+140
 3345              	.LVL247:
 3346              		.loc 1 1563 9 view .LVU1053
 3347 0202 2346     		mov	r3, r4
 3348 0204 FFF7FEFF 		bl	xTaskCreateStatic
ARM GAS  /tmp/ccReAcTZ.s 			page 137


 3349              	.LVL248:
1564:Src/app.c     ****                           &isp_thread);
1565:Src/app.c     ****   assert(hdl != NULL);
 3350              		.loc 1 1565 3 is_stmt 1 view .LVU1054
 3351 0208 20B9     		cbnz	r0, .L115
 3352              		.loc 1 1565 3 is_stmt 0 discriminator 1 view .LVU1055
 3353 020a 40F21D61 		movw	r1, #1565
 3354 020e 1E4B     		ldr	r3, .L135+108
 3355 0210 104A     		ldr	r2, .L135+56
 3356 0212 5CE7     		b	.L134
 3357              	.L115:
1566:Src/app.c     **** }
 3358              		.loc 1 1566 1 view .LVU1056
 3359 0214 13B0     		add	sp, sp, #76
 3360              		.cfi_def_cfa_offset 28
 3361              		@ sp needed
 3362 0216 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3363              	.L136:
 3364 021a 00BF     		.align	2
 3365              	.L135:
 3366 021c 00ED00E0 		.word	-536810240
 3367 0220 00000000 		.word	.LC15
 3368 0224 00882600 		.word	lcd_bg_buffer
 3369 0228 00C05D00 		.word	6144000
 3370 022c 00180F00 		.word	lcd_fg_buffer
 3371 0230 00701700 		.word	1536000
 3372 0234 00000000 		.word	lcd_bg_buffer_disp_idx
 3373 0238 2003E001 		.word	31458080
 3374 023c 00D01A00 		.word	lcd_fg_buffer+768000
 3375 0240 00600300 		.word	screen_buffer
 3376 0244 00000000 		.word	.LC4
 3377 0248 00000000 		.word	__func__.5
 3378 024c 0E000000 		.word	.LC2
 3379 0250 00000000 		.word	Font20
 3380 0254 00000000 		.word	__func__.18
 3381 0258 00000000 		.word	nn_input_buffers
 3382 025c 00000000 		.word	cpu_load
 3383 0260 00000000 		.word	isp_sem_buffer
 3384 0264 00000000 		.word	isp_sem
 3385 0268 11000000 		.word	.LC16
 3386 026c 04000000 		.word	disp+4
 3387 0270 19000000 		.word	.LC17
 3388 0274 25000000 		.word	.LC18
 3389 0278 00000000 		.word	nn_thread
 3390 027c 00000000 		.word	nn_thread_stack
 3391 0280 2F000000 		.word	.LC19
 3392 0284 00000000 		.word	nn_thread_fct
 3393 0288 32000000 		.word	.LC20
 3394 028c 00000000 		.word	dp_thread
 3395 0290 00000000 		.word	dp_thread_stack
 3396 0294 3E000000 		.word	.LC21
 3397 0298 00000000 		.word	dp_thread_fct
 3398 029c 00000000 		.word	isp_thread
 3399 02a0 00000000 		.word	isp_thread_stack
 3400 02a4 41000000 		.word	.LC22
 3401 02a8 00000000 		.word	isp_thread_fct
 3402 02ac 00EE0200 		.word	192000
ARM GAS  /tmp/ccReAcTZ.s 			page 138


 3403 02b0 04000000 		.word	nn_input_queue+4
 3404              		.cfi_endproc
 3405              	.LFE7407:
 3407              		.section	.text.CMW_CAMERA_PIPE_FrameEventCallback,"ax",%progbits
 3408              		.align	1
 3409              		.global	CMW_CAMERA_PIPE_FrameEventCallback
 3410              		.syntax unified
 3411              		.thumb
 3412              		.thumb_func
 3414              	CMW_CAMERA_PIPE_FrameEventCallback:
 3415              	.LVL249:
 3416              	.LFB7408:
1567:Src/app.c     **** 
1568:Src/app.c     **** int CMW_CAMERA_PIPE_FrameEventCallback(uint32_t pipe)
1569:Src/app.c     **** {
 3417              		.loc 1 1569 1 is_stmt 1 view -0
 3418              		.cfi_startproc
 3419              		@ args = 0, pretend = 0, frame = 8
 3420              		@ frame_needed = 0, uses_anonymous_args = 0
1570:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 3421              		.loc 1 1570 3 view .LVU1058
 3422              		.loc 1 1570 6 is_stmt 0 view .LVU1059
 3423 0000 0128     		cmp	r0, #1
1569:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 3424              		.loc 1 1569 1 view .LVU1060
 3425 0002 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 3426              		.cfi_def_cfa_offset 40
 3427              		.cfi_offset 4, -32
 3428              		.cfi_offset 5, -28
 3429              		.cfi_offset 6, -24
 3430              		.cfi_offset 7, -20
 3431              		.cfi_offset 8, -16
 3432              		.cfi_offset 9, -12
 3433              		.cfi_offset 10, -8
 3434              		.cfi_offset 14, -4
1569:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 3435              		.loc 1 1569 1 view .LVU1061
 3436 0006 0646     		mov	r6, r0
 3437              		.loc 1 1570 6 view .LVU1062
 3438 0008 50D1     		bne	.L138
1571:Src/app.c     ****     app_main_pipe_frame_event();
 3439              		.loc 1 1571 5 is_stmt 1 view .LVU1063
 3440              	.LBB419:
 3441              	.LBI419:
 537:Src/app.c     **** {
 3442              		.loc 1 537 13 view .LVU1064
 3443              	.LBB420:
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3444              		.loc 1 539 3 view .LVU1065
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3445              		.loc 1 539 47 is_stmt 0 view .LVU1066
 3446 000a 514F     		ldr	r7, .L164
 540:Src/app.c     ****   int ret;
 3447              		.loc 1 540 47 view .LVU1067
 3448 000c DFF87081 		ldr	r8, .L164+48
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3449              		.loc 1 539 47 view .LVU1068
ARM GAS  /tmp/ccReAcTZ.s 			page 139


 3450 0010 3D68     		ldr	r5, [r7]
 540:Src/app.c     ****   int ret;
 3451              		.loc 1 540 47 view .LVU1069
 3452 0012 D8F80040 		ldr	r4, [r8]
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3453              		.loc 1 539 47 view .LVU1070
 3454 0016 0135     		adds	r5, r5, #1
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3455              		.loc 1 539 7 view .LVU1071
 3456 0018 6B42     		rsbs	r3, r5, #0
 3457 001a 03F00303 		and	r3, r3, #3
 540:Src/app.c     ****   int ret;
 3458              		.loc 1 540 47 view .LVU1072
 3459 001e 04F10104 		add	r4, r4, #1
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3460              		.loc 1 539 7 view .LVU1073
 3461 0022 05F00305 		and	r5, r5, #3
 3462 0026 55EA43B5 		csneg	r5, r5, r3, mi
 3463              	.LVL250:
 540:Src/app.c     ****   int ret;
 3464              		.loc 1 540 3 is_stmt 1 view .LVU1074
 540:Src/app.c     ****   int ret;
 3465              		.loc 1 540 7 is_stmt 0 view .LVU1075
 3466 002a 6342     		rsbs	r3, r4, #0
 3467 002c 03F00303 		and	r3, r3, #3
 544:Src/app.c     ****   assert(ret == HAL_OK);
 3468              		.loc 1 544 78 view .LVU1076
 3469 0030 DFF850A1 		ldr	r10, .L164+52
 3470 0034 DFF85091 		ldr	r9, .L164+56
 540:Src/app.c     ****   int ret;
 3471              		.loc 1 540 7 view .LVU1077
 3472 0038 04F00304 		and	r4, r4, #3
 3473 003c 54EA43B4 		csneg	r4, r4, r3, mi
 3474              	.LVL251:
 541:Src/app.c     **** 
 3475              		.loc 1 541 3 is_stmt 1 view .LVU1078
 543:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 3476              		.loc 1 543 3 view .LVU1079
 543:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 3477              		.loc 1 543 9 is_stmt 0 view .LVU1080
 3478 0040 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 3479              	.LVL252:
 543:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 3480              		.loc 1 543 9 view .LVU1081
 3481 0044 3146     		mov	r1, r6
 3482 0046 0022     		movs	r2, #0
 3483 0048 0AFB0493 		mla	r3, r10, r4, r9
 3484 004c FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 3485              	.LVL253:
 545:Src/app.c     **** 
 3486              		.loc 1 545 3 is_stmt 1 view .LVU1082
 3487 0050 0146     		mov	r1, r0
 3488 0052 30B1     		cbz	r0, .L139
 545:Src/app.c     **** 
 3489              		.loc 1 545 3 is_stmt 0 discriminator 1 view .LVU1083
 3490 0054 40F22121 		movw	r1, #545
 3491 0058 3E4B     		ldr	r3, .L164+4
ARM GAS  /tmp/ccReAcTZ.s 			page 140


 3492 005a 3F4A     		ldr	r2, .L164+8
 3493              	.LVL254:
 3494              	.L163:
 3495              	.LBB421:
 3496              	.LBB422:
 529:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 3497              		.loc 1 529 3 discriminator 1 view .LVU1084
 3498 005c 3F48     		ldr	r0, .L164+12
 3499 005e FFF7FEFF 		bl	__assert_func
 3500              	.LVL255:
 3501              	.L139:
 529:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 3502              		.loc 1 529 3 discriminator 1 view .LVU1085
 3503              	.LBE422:
 3504              	.LBE421:
 547:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 3505              		.loc 1 547 3 is_stmt 1 view .LVU1086
 3506              	.LBB424:
 3507              	.LBI421:
 524:Src/app.c     **** {
 3508              		.loc 1 524 13 view .LVU1087
 3509              	.LBB423:
 526:Src/app.c     **** 
 3510              		.loc 1 526 3 view .LVU1088
 528:Src/app.c     ****   assert(ret == 0);
 3511              		.loc 1 528 3 view .LVU1089
 528:Src/app.c     ****   assert(ret == 0);
 3512              		.loc 1 528 9 is_stmt 0 view .LVU1090
 3513 0062 0AFB0590 		mla	r0, r10, r5, r9
 3514              	.LVL256:
 528:Src/app.c     ****   assert(ret == 0);
 3515              		.loc 1 528 9 view .LVU1091
 3516 0066 FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 3517              	.LVL257:
 529:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 3518              		.loc 1 529 3 is_stmt 1 view .LVU1092
 3519 006a 20B1     		cbz	r0, .L140
 529:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 3520              		.loc 1 529 3 is_stmt 0 discriminator 1 view .LVU1093
 3521 006c 40F21121 		movw	r1, #529
 3522 0070 3B4B     		ldr	r3, .L164+16
 3523 0072 3C4A     		ldr	r2, .L164+20
 3524 0074 F2E7     		b	.L163
 3525              	.L140:
 530:Src/app.c     ****   assert(ret == 0);
 3526              		.loc 1 530 3 is_stmt 1 view .LVU1094
 530:Src/app.c     ****   assert(ret == 0);
 3527              		.loc 1 530 9 is_stmt 0 view .LVU1095
 3528 0076 FFF7FEFF 		bl	SCRL_ReloadLayer
 3529              	.LVL258:
 531:Src/app.c     **** 
 3530              		.loc 1 531 3 is_stmt 1 view .LVU1096
 3531 007a 20B1     		cbz	r0, .L141
 531:Src/app.c     **** 
 3532              		.loc 1 531 3 is_stmt 0 discriminator 1 view .LVU1097
 3533 007c 40F21321 		movw	r1, #531
 3534 0080 374B     		ldr	r3, .L164+16
ARM GAS  /tmp/ccReAcTZ.s 			page 141


 3535 0082 384A     		ldr	r2, .L164+20
 3536 0084 EAE7     		b	.L163
 3537              	.L141:
 533:Src/app.c     ****   assert(ret == 0);
 3538              		.loc 1 533 3 is_stmt 1 view .LVU1098
 533:Src/app.c     ****   assert(ret == 0);
 3539              		.loc 1 533 9 is_stmt 0 view .LVU1099
 3540 0086 FFF7FEFF 		bl	SRCL_Update
 3541              	.LVL259:
 534:Src/app.c     **** }
 3542              		.loc 1 534 3 is_stmt 1 view .LVU1100
 3543 008a 20B1     		cbz	r0, .L142
 534:Src/app.c     **** }
 3544              		.loc 1 534 3 is_stmt 0 discriminator 1 view .LVU1101
 3545 008c 40F21621 		movw	r1, #534
 3546 0090 334B     		ldr	r3, .L164+16
 3547 0092 344A     		ldr	r2, .L164+20
 3548 0094 E2E7     		b	.L163
 3549              	.L142:
 3550              	.LVL260:
 534:Src/app.c     **** }
 3551              		.loc 1 534 3 discriminator 1 view .LVU1102
 3552              	.LBE423:
 3553              	.LBE424:
 548:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 3554              		.loc 1 548 3 is_stmt 1 view .LVU1103
 551:Src/app.c     **** }
 3555              		.loc 1 551 17 is_stmt 0 view .LVU1104
 3556 0096 344A     		ldr	r2, .L164+24
 548:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 3557              		.loc 1 548 26 view .LVU1105
 3558 0098 3D60     		str	r5, [r7]
 549:Src/app.c     **** 
 3559              		.loc 1 549 3 is_stmt 1 view .LVU1106
 551:Src/app.c     **** }
 3560              		.loc 1 551 17 is_stmt 0 view .LVU1107
 3561 009a 1368     		ldr	r3, [r2]
 549:Src/app.c     **** 
 3562              		.loc 1 549 26 view .LVU1108
 3563 009c C8F80040 		str	r4, [r8]
 551:Src/app.c     **** }
 3564              		.loc 1 551 3 is_stmt 1 view .LVU1109
 551:Src/app.c     **** }
 3565              		.loc 1 551 17 is_stmt 0 view .LVU1110
 3566 00a0 0133     		adds	r3, r3, #1
 3567 00a2 1360     		str	r3, [r2]
 3568              	.LVL261:
 3569              	.L143:
 551:Src/app.c     **** }
 3570              		.loc 1 551 17 view .LVU1111
 3571              	.LBE420:
 3572              	.LBE419:
1572:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
1573:Src/app.c     ****     app_ancillary_pipe_frame_event();
1574:Src/app.c     **** 
1575:Src/app.c     ****   return HAL_OK;
 3573              		.loc 1 1575 3 is_stmt 1 view .LVU1112
ARM GAS  /tmp/ccReAcTZ.s 			page 142


1576:Src/app.c     **** }
 3574              		.loc 1 1576 1 is_stmt 0 view .LVU1113
 3575 00a4 0020     		movs	r0, #0
 3576 00a6 02B0     		add	sp, sp, #8
 3577              		.cfi_remember_state
 3578              		.cfi_def_cfa_offset 32
 3579              		@ sp needed
 3580 00a8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3581              	.LVL262:
 3582              	.L138:
 3583              		.cfi_restore_state
1572:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 3584              		.loc 1 1572 8 is_stmt 1 view .LVU1114
1572:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 3585              		.loc 1 1572 11 is_stmt 0 view .LVU1115
 3586 00ac 0228     		cmp	r0, #2
 3587 00ae F9D1     		bne	.L143
1573:Src/app.c     **** 
 3588              		.loc 1 1573 5 is_stmt 1 view .LVU1116
 3589              	.LBB425:
 3590              	.LBI425:
 555:Src/app.c     **** {
 3591              		.loc 1 555 13 view .LVU1117
 3592              	.LBB426:
 557:Src/app.c     ****   int ret;
 3593              		.loc 1 557 3 view .LVU1118
 558:Src/app.c     **** 
 3594              		.loc 1 558 3 view .LVU1119
 560:Src/app.c     ****   if (next_buffer) {
 3595              		.loc 1 560 3 view .LVU1120
 3596              	.LBB427:
 3597              	.LBI427:
 472:Src/app.c     **** {
 3598              		.loc 1 472 17 view .LVU1121
 3599              	.LVL263:
 3600              	.LBB428:
 474:Src/app.c     ****   int ret;
 3601              		.loc 1 474 3 view .LVU1122
 475:Src/app.c     **** 
 3602              		.loc 1 475 3 view .LVU1123
 477:Src/app.c     ****   if (ret == pdFALSE)
 3603              		.loc 1 477 3 view .LVU1124
 477:Src/app.c     ****   if (ret == pdFALSE)
 3604              		.loc 1 477 9 is_stmt 0 view .LVU1125
 3605 00b0 2E4C     		ldr	r4, .L164+28
 477:Src/app.c     ****   if (ret == pdFALSE)
 3606              		.loc 1 477 9 discriminator 4 view .LVU1126
 3607 00b2 0021     		movs	r1, #0
 3608 00b4 2068     		ldr	r0, [r4]
 3609              	.LVL264:
 477:Src/app.c     ****   if (ret == pdFALSE)
 3610              		.loc 1 477 9 discriminator 4 view .LVU1127
 3611 00b6 FFF7FEFF 		bl	xQueueSemaphoreTake
 3612              	.LVL265:
 478:Src/app.c     ****     return NULL;
 3613              		.loc 1 478 3 is_stmt 1 view .LVU1128
 478:Src/app.c     ****     return NULL;
ARM GAS  /tmp/ccReAcTZ.s 			page 143


 3614              		.loc 1 478 6 is_stmt 0 view .LVU1129
 3615 00ba 0028     		cmp	r0, #0
 3616 00bc F2D0     		beq	.L143
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 3617              		.loc 1 481 3 is_stmt 1 view .LVU1130
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 3618              		.loc 1 481 23 is_stmt 0 view .LVU1131
 3619 00be D4F8B420 		ldr	r2, [r4, #180]
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 3620              		.loc 1 481 7 view .LVU1132
 3621 00c2 04EB8203 		add	r3, r4, r2, lsl #2
 3622 00c6 D3F8AC50 		ldr	r5, [r3, #172]
 3623              	.LVL266:
 482:Src/app.c     **** 
 3624              		.loc 1 482 3 is_stmt 1 view .LVU1133
 482:Src/app.c     **** 
 3625              		.loc 1 482 37 is_stmt 0 view .LVU1134
 3626 00ca D4F8A830 		ldr	r3, [r4, #168]
 482:Src/app.c     **** 
 3627              		.loc 1 482 32 view .LVU1135
 3628 00ce 0132     		adds	r2, r2, #1
 482:Src/app.c     **** 
 3629              		.loc 1 482 37 view .LVU1136
 3630 00d0 92FBF3F1 		sdiv	r1, r2, r3
 3631 00d4 03FB1122 		mls	r2, r3, r1, r2
 482:Src/app.c     **** 
 3632              		.loc 1 482 16 view .LVU1137
 3633 00d8 C4F8B420 		str	r2, [r4, #180]
 484:Src/app.c     **** }
 3634              		.loc 1 484 3 is_stmt 1 view .LVU1138
 3635              	.LVL267:
 484:Src/app.c     **** }
 3636              		.loc 1 484 3 is_stmt 0 view .LVU1139
 3637              	.LBE428:
 3638              	.LBE427:
 561:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 3639              		.loc 1 561 3 is_stmt 1 view .LVU1140
 561:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 3640              		.loc 1 561 6 is_stmt 0 view .LVU1141
 3641 00dc 002D     		cmp	r5, #0
 3642 00de E1D0     		beq	.L143
 562:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 3643              		.loc 1 562 5 is_stmt 1 view .LVU1142
 562:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 3644              		.loc 1 562 11 is_stmt 0 view .LVU1143
 3645 00e0 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 3646              	.LVL268:
 562:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 3647              		.loc 1 562 11 discriminator 1 view .LVU1144
 3648 00e4 2B46     		mov	r3, r5
 3649 00e6 0022     		movs	r2, #0
 3650 00e8 3146     		mov	r1, r6
 3651 00ea FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 3652              	.LVL269:
 564:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 3653              		.loc 1 564 5 is_stmt 1 view .LVU1145
 3654 00ee 20B1     		cbz	r0, .L146
ARM GAS  /tmp/ccReAcTZ.s 			page 144


 564:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 3655              		.loc 1 564 5 is_stmt 0 discriminator 1 view .LVU1146
 3656 00f0 4FF40D71 		mov	r1, #564
 3657 00f4 174B     		ldr	r3, .L164+4
 3658 00f6 1E4A     		ldr	r2, .L164+32
 3659 00f8 B0E7     		b	.L163
 3660              	.L146:
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3661              		.loc 1 566 5 is_stmt 1 view .LVU1147
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3662              		.loc 1 566 48 is_stmt 0 view .LVU1148
 3663 00fa 1B4B     		ldr	r3, .L164+24
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3664              		.loc 1 566 31 view .LVU1149
 3665 00fc 1D4A     		ldr	r2, .L164+36
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3666              		.loc 1 566 48 view .LVU1150
 3667 00fe 1B68     		ldr	r3, [r3]
 3668              	.LBB429:
 3669              	.LBB430:
 511:Src/app.c     ****   int ret;
 3670              		.loc 1 511 14 view .LVU1151
 3671 0100 0190     		str	r0, [sp, #4]
 3672              	.LBE430:
 3673              	.LBE429:
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3674              		.loc 1 566 48 view .LVU1152
 3675 0102 013B     		subs	r3, r3, #1
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3676              		.loc 1 566 31 view .LVU1153
 3677 0104 1360     		str	r3, [r2]
 567:Src/app.c     ****   }
 3678              		.loc 1 567 5 is_stmt 1 view .LVU1154
 3679              	.LBB432:
 3680              	.LBI429:
 509:Src/app.c     **** {
 3681              		.loc 1 509 13 view .LVU1155
 3682              	.LVL270:
 3683              	.LBB431:
 511:Src/app.c     ****   int ret;
 3684              		.loc 1 511 3 view .LVU1156
 512:Src/app.c     **** 
 3685              		.loc 1 512 3 view .LVU1157
 514:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 3686              		.loc 1 514 3 view .LVU1158
 514:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 3687              		.loc 1 514 7 is_stmt 0 view .LVU1159
 3688 0106 FFF7FEFF 		bl	xPortIsInsideInterrupt
 3689              	.LVL271:
 514:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 3690              		.loc 1 514 6 discriminator 1 view .LVU1160
 3691 010a 0346     		mov	r3, r0
 3692 010c A0B1     		cbz	r0, .L147
 515:Src/app.c     ****     assert(ret == pdTRUE);
 3693              		.loc 1 515 5 is_stmt 1 view .LVU1161
 515:Src/app.c     ****     assert(ret == pdTRUE);
 3694              		.loc 1 515 11 is_stmt 0 view .LVU1162
ARM GAS  /tmp/ccReAcTZ.s 			page 145


 3695 010e 606D     		ldr	r0, [r4, #84]
 3696 0110 01A9     		add	r1, sp, #4
 3697 0112 FFF7FEFF 		bl	xQueueGiveFromISR
 3698              	.LVL272:
 516:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 3699              		.loc 1 516 5 is_stmt 1 view .LVU1163
 3700 0116 0128     		cmp	r0, #1
 3701 0118 04D0     		beq	.L148
 516:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 3702              		.loc 1 516 5 is_stmt 0 discriminator 1 view .LVU1164
 3703 011a 4FF40171 		mov	r1, #516
 3704 011e 164B     		ldr	r3, .L164+40
 3705 0120 164A     		ldr	r2, .L164+44
 3706 0122 9BE7     		b	.L163
 3707              	.L148:
 517:Src/app.c     ****   } else {
 3708              		.loc 1 517 5 is_stmt 1 view .LVU1165
 517:Src/app.c     ****   } else {
 3709              		.loc 1 517 5 view .LVU1166
 3710 0124 019B     		ldr	r3, [sp, #4]
 3711 0126 002B     		cmp	r3, #0
 3712 0128 BCD0     		beq	.L143
 517:Src/app.c     ****   } else {
 3713              		.loc 1 517 5 discriminator 1 view .LVU1167
 3714 012a 4FF0E023 		mov	r3, #-536813568
 3715 012e 4FF08052 		mov	r2, #268435456
 3716 0132 C3F8042D 		str	r2, [r3, #3332]
 3717 0136 B5E7     		b	.L143
 3718              	.LVL273:
 3719              	.L147:
 519:Src/app.c     ****     assert(ret == pdTRUE);
 3720              		.loc 1 519 5 view .LVU1168
 519:Src/app.c     ****     assert(ret == pdTRUE);
 3721              		.loc 1 519 11 is_stmt 0 view .LVU1169
 3722 0138 0246     		mov	r2, r0
 3723 013a 0146     		mov	r1, r0
 3724 013c 606D     		ldr	r0, [r4, #84]
 3725 013e FFF7FEFF 		bl	xQueueGenericSend
 3726              	.LVL274:
 520:Src/app.c     ****   }
 3727              		.loc 1 520 5 is_stmt 1 view .LVU1170
 3728 0142 0128     		cmp	r0, #1
 3729 0144 AED0     		beq	.L143
 520:Src/app.c     ****   }
 3730              		.loc 1 520 5 is_stmt 0 discriminator 1 view .LVU1171
 3731 0146 4FF40271 		mov	r1, #520
 3732 014a 0B4B     		ldr	r3, .L164+40
 3733 014c 0B4A     		ldr	r2, .L164+44
 3734 014e 85E7     		b	.L163
 3735              	.L165:
 3736              		.align	2
 3737              	.L164:
 3738 0150 00000000 		.word	lcd_bg_buffer_disp_idx
 3739 0154 00000000 		.word	.LC8
 3740 0158 00000000 		.word	__func__.3
 3741 015c 0E000000 		.word	.LC2
 3742 0160 00000000 		.word	.LC4
ARM GAS  /tmp/ccReAcTZ.s 			page 146


 3743 0164 00000000 		.word	__func__.2
 3744 0168 00000000 		.word	frame_event_nb
 3745 016c 00000000 		.word	nn_input_queue
 3746 0170 00000000 		.word	__func__.1
 3747 0174 00000000 		.word	frame_event_nb_for_resize
 3748 0178 00000000 		.word	.LC1
 3749 017c 00000000 		.word	__func__.0
 3750 0180 00000000 		.word	lcd_bg_buffer_capt_idx
 3751 0184 00701700 		.word	1536000
 3752 0188 00882600 		.word	lcd_bg_buffer
 3753              	.LBE431:
 3754              	.LBE432:
 3755              	.LBE426:
 3756              	.LBE425:
 3757              		.cfi_endproc
 3758              	.LFE7408:
 3760              		.section	.text.CMW_CAMERA_PIPE_VsyncEventCallback,"ax",%progbits
 3761              		.align	1
 3762              		.global	CMW_CAMERA_PIPE_VsyncEventCallback
 3763              		.syntax unified
 3764              		.thumb
 3765              		.thumb_func
 3767              	CMW_CAMERA_PIPE_VsyncEventCallback:
 3768              	.LVL275:
 3769              	.LFB7409:
1577:Src/app.c     **** 
1578:Src/app.c     **** int CMW_CAMERA_PIPE_VsyncEventCallback(uint32_t pipe)
1579:Src/app.c     **** {
 3770              		.loc 1 1579 1 is_stmt 1 view -0
 3771              		.cfi_startproc
 3772              		@ args = 0, pretend = 0, frame = 8
 3773              		@ frame_needed = 0, uses_anonymous_args = 0
1580:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 3774              		.loc 1 1580 3 view .LVU1173
 3775              		.loc 1 1580 6 is_stmt 0 view .LVU1174
 3776 0000 0128     		cmp	r0, #1
1579:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 3777              		.loc 1 1579 1 view .LVU1175
 3778 0002 07B5     		push	{r0, r1, r2, lr}
 3779              		.cfi_def_cfa_offset 16
 3780              		.cfi_offset 14, -4
 3781              		.loc 1 1580 6 view .LVU1176
 3782 0004 10D1     		bne	.L167
1581:Src/app.c     ****     app_main_pipe_vsync_event();
 3783              		.loc 1 1581 5 is_stmt 1 view .LVU1177
 3784              	.LBB435:
 3785              	.LBI435:
 571:Src/app.c     **** {
 3786              		.loc 1 571 13 view .LVU1178
 3787              	.LBB436:
 573:Src/app.c     ****   int ret;
 3788              		.loc 1 573 3 view .LVU1179
 573:Src/app.c     ****   int ret;
 3789              		.loc 1 573 14 is_stmt 0 view .LVU1180
 3790 0006 0023     		movs	r3, #0
 3791 0008 0193     		str	r3, [sp, #4]
 574:Src/app.c     **** 
ARM GAS  /tmp/ccReAcTZ.s 			page 147


 3792              		.loc 1 574 3 is_stmt 1 view .LVU1181
 576:Src/app.c     ****   if (ret == pdTRUE)
 3793              		.loc 1 576 3 view .LVU1182
 576:Src/app.c     ****   if (ret == pdTRUE)
 3794              		.loc 1 576 9 is_stmt 0 view .LVU1183
 3795 000a 094B     		ldr	r3, .L172
 3796 000c 01A9     		add	r1, sp, #4
 3797 000e 1868     		ldr	r0, [r3]
 3798              	.LVL276:
 576:Src/app.c     ****   if (ret == pdTRUE)
 3799              		.loc 1 576 9 view .LVU1184
 3800 0010 FFF7FEFF 		bl	xQueueGiveFromISR
 3801              	.LVL277:
 577:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 3802              		.loc 1 577 3 is_stmt 1 view .LVU1185
 577:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 3803              		.loc 1 577 6 is_stmt 0 view .LVU1186
 3804 0014 0128     		cmp	r0, #1
 3805 0016 07D1     		bne	.L167
 578:Src/app.c     **** }
 3806              		.loc 1 578 5 is_stmt 1 view .LVU1187
 578:Src/app.c     **** }
 3807              		.loc 1 578 5 view .LVU1188
 3808 0018 019B     		ldr	r3, [sp, #4]
 3809 001a 2BB1     		cbz	r3, .L167
 578:Src/app.c     **** }
 3810              		.loc 1 578 5 discriminator 1 view .LVU1189
 3811 001c 4FF0E023 		mov	r3, #-536813568
 3812 0020 4FF08052 		mov	r2, #268435456
 3813 0024 C3F8042D 		str	r2, [r3, #3332]
 578:Src/app.c     **** }
 3814              		.loc 1 578 5 discriminator 3 view .LVU1190
 3815              	.LVL278:
 3816              	.L167:
 578:Src/app.c     **** }
 3817              		.loc 1 578 5 is_stmt 0 discriminator 3 view .LVU1191
 3818              	.LBE436:
 3819              	.LBE435:
1582:Src/app.c     **** 
1583:Src/app.c     ****   return HAL_OK;
 3820              		.loc 1 1583 3 is_stmt 1 view .LVU1192
1584:Src/app.c     **** }
 3821              		.loc 1 1584 1 is_stmt 0 view .LVU1193
 3822 0028 0020     		movs	r0, #0
 3823 002a 03B0     		add	sp, sp, #12
 3824              		.cfi_def_cfa_offset 4
 3825              		@ sp needed
 3826 002c 5DF804FB 		ldr	pc, [sp], #4
 3827              	.L173:
 3828              		.align	2
 3829              	.L172:
 3830 0030 00000000 		.word	isp_sem
 3831              		.cfi_endproc
 3832              	.LFE7409:
 3834              		.section	.rodata.__func__.0,"a"
 3837              	__func__.0:
 3838 0000 62717565 		.ascii	"bqueue_put_ready\000"
ARM GAS  /tmp/ccReAcTZ.s 			page 148


 3838      75655F70 
 3838      75745F72 
 3838      65616479 
 3838      00
 3839              		.section	.rodata.__func__.1,"a"
 3842              	__func__.1:
 3843 0000 6170705F 		.ascii	"app_ancillary_pipe_frame_event\000"
 3843      616E6369 
 3843      6C6C6172 
 3843      795F7069 
 3843      70655F66 
 3844              		.section	.rodata.__func__.2,"a"
 3847              	__func__.2:
 3848 0000 72656C6F 		.ascii	"reload_bg_layer\000"
 3848      61645F62 
 3848      675F6C61 
 3848      79657200 
 3849              		.section	.rodata.__func__.3,"a"
 3852              	__func__.3:
 3853 0000 6170705F 		.ascii	"app_main_pipe_frame_event\000"
 3853      6D61696E 
 3853      5F706970 
 3853      655F6672 
 3853      616D655F 
 3854              		.section	.rodata.__func__.5,"a"
 3857              	__func__.5:
 3858 0000 44697370 		.ascii	"Display_init\000"
 3858      6C61795F 
 3858      696E6974 
 3858      00
 3859              		.section	.rodata.__func__.6,"a"
 3862              	__func__.6:
 3863 0000 62717565 		.ascii	"bqueue_put_free\000"
 3863      75655F70 
 3863      75745F66 
 3863      72656500 
 3864              		.section	.rodata.__func__.7,"a"
 3867              	__func__.7:
 3868 0000 796F6C6F 		.ascii	"yolo_detector_run\000"
 3868      5F646574 
 3868      6563746F 
 3868      725F7275 
 3868      6E00
 3869              		.section	.rodata.__func__.8,"a"
 3872              	__func__.8:
 3873 0000 62717565 		.ascii	"bqueue_get_ready\000"
 3873      75655F67 
 3873      65745F72 
 3873      65616479 
 3873      00
 3874              		.section	.rodata.__func__.9,"a"
 3877              	__func__.9:
 3878 0000 796F6C6F 		.ascii	"yolo_detector_init\000"
 3878      5F646574 
 3878      6563746F 
 3878      725F696E 
 3878      697400
ARM GAS  /tmp/ccReAcTZ.s 			page 149


 3879              		.section	.rodata.__func__.10,"a"
 3882              	__func__.10:
 3883 0000 6E6E5F74 		.ascii	"nn_thread_fct\000"
 3883      68726561 
 3883      645F6663 
 3883      7400
 3884              		.section	.rodata.__func__.11,"a"
 3887              	__func__.11:
 3888 0000 64705F63 		.ascii	"dp_commit_drawing_area\000"
 3888      6F6D6D69 
 3888      745F6472 
 3888      6177696E 
 3888      675F6172 
 3889              		.section	.rodata.__func__.12,"a"
 3892              	__func__.12:
 3893 0000 64705F75 		.ascii	"dp_update_drawing_area\000"
 3893      70646174 
 3893      655F6472 
 3893      6177696E 
 3893      675F6172 
 3894              		.section	.rodata.__func__.13,"a"
 3897              	__func__.13:
 3898 0000 62757474 		.ascii	"button_init\000"
 3898      6F6E5F69 
 3898      6E697400 
 3899              		.section	.rodata.__func__.14,"a"
 3902              	__func__.14:
 3903 0000 6F6E5F6C 		.ascii	"on_ld_toggle_button_click\000"
 3903      645F746F 
 3903      67676C65 
 3903      5F627574 
 3903      746F6E5F 
 3904              		.section	.rodata.__func__.15,"a"
 3907              	__func__.15:
 3908 0000 6F6E5F70 		.ascii	"on_pd_toggle_button_click\000"
 3908      645F746F 
 3908      67676C65 
 3908      5F627574 
 3908      746F6E5F 
 3909              		.section	.rodata.__func__.16,"a"
 3912              	__func__.16:
 3913 0000 64705F74 		.ascii	"dp_thread_fct\000"
 3913      68726561 
 3913      645F6663 
 3913      7400
 3914              		.section	.rodata.__func__.17,"a"
 3917              	__func__.17:
 3918 0000 6973705F 		.ascii	"isp_thread_fct\000"
 3918      74687265 
 3918      61645F66 
 3918      637400
 3919              		.section	.rodata.__func__.18,"a"
 3922              	__func__.18:
 3923 0000 6170705F 		.ascii	"app_run\000"
 3923      72756E00 
 3924              		.section	.bss.isp_sem_buffer,"aw",%nobits
 3925              		.align	2
ARM GAS  /tmp/ccReAcTZ.s 			page 150


 3928              	isp_sem_buffer:
 3929 0000 00000000 		.space	80
 3929      00000000 
 3929      00000000 
 3929      00000000 
 3929      00000000 
 3930              		.section	.bss.isp_sem,"aw",%nobits
 3931              		.align	2
 3934              	isp_sem:
 3935 0000 00000000 		.space	4
 3936              		.section	.bss.isp_thread_stack,"aw",%nobits
 3937              		.align	2
 3940              	isp_thread_stack:
 3941 0000 00000000 		.space	8192
 3941      00000000 
 3941      00000000 
 3941      00000000 
 3941      00000000 
 3942              		.section	.bss.isp_thread,"aw",%nobits
 3943              		.align	2
 3946              	isp_thread:
 3947 0000 00000000 		.space	96
 3947      00000000 
 3947      00000000 
 3947      00000000 
 3947      00000000 
 3948              		.section	.bss.dp_thread_stack,"aw",%nobits
 3949              		.align	2
 3952              	dp_thread_stack:
 3953 0000 00000000 		.space	8192
 3953      00000000 
 3953      00000000 
 3953      00000000 
 3953      00000000 
 3954              		.section	.bss.dp_thread,"aw",%nobits
 3955              		.align	2
 3958              	dp_thread:
 3959 0000 00000000 		.space	96
 3959      00000000 
 3959      00000000 
 3959      00000000 
 3959      00000000 
 3960              		.section	.bss.nn_thread_stack,"aw",%nobits
 3961              		.align	2
 3964              	nn_thread_stack:
 3965 0000 00000000 		.space	8192
 3965      00000000 
 3965      00000000 
 3965      00000000 
 3965      00000000 
 3966              		.section	.bss.nn_thread,"aw",%nobits
 3967              		.align	2
 3970              	nn_thread:
 3971 0000 00000000 		.space	96
 3971      00000000 
 3971      00000000 
 3971      00000000 
ARM GAS  /tmp/ccReAcTZ.s 			page 151


 3971      00000000 
 3972              		.section	.bss.nn_input_queue,"aw",%nobits
 3973              		.align	2
 3976              	nn_input_queue:
 3977 0000 00000000 		.space	188
 3977      00000000 
 3977      00000000 
 3977      00000000 
 3977      00000000 
 3978              		.section	.psram_bss,"aw"
 3979              		.align	5
 3982              	nn_input_buffers:
 3983 0000 00000000 		.space	221184
 3983      00000000 
 3983      00000000 
 3983      00000000 
 3983      00000000 
 3984              		.section	.bss.frame_event_nb_for_resize,"aw",%nobits
 3985              		.align	2
 3988              	frame_event_nb_for_resize:
 3989 0000 00000000 		.space	4
 3990              		.section	.bss.frame_event_nb,"aw",%nobits
 3991              		.align	2
 3994              	frame_event_nb:
 3995 0000 00000000 		.space	4
 3996              		.section	.data.NN_Instance_yolo_detector,"aw"
 3997              		.align	2
 4000              	NN_Instance_yolo_detector:
 4001 0000 00000000 		.word	NN_Interface_yolo_detector
 4002 0004 00000000 		.word	0
 4003 0008 00000000 		.space	40
 4003      00000000 
 4003      00000000 
 4003      00000000 
 4003      00000000 
 4004              		.section	.rodata.str1.1,"aMS",%progbits,1
 4005              	.LC23:
 4006 0000 796F6C6F 		.ascii	"yolo_detector\000"
 4006      5F646574 
 4006      6563746F 
 4006      7200
 4007              		.section	.rodata.NN_Interface_yolo_detector,"a"
 4008              		.align	2
 4011              	NN_Interface_yolo_detector:
 4012 0000 00000000 		.word	.LC23
 4013 0004 00000000 		.word	LL_ATON_EC_Network_Init_yolo_detector
 4014 0008 00000000 		.word	LL_ATON_EC_Inference_Init_yolo_detector
 4015 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_yolo_detector
 4016 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_yolo_detector
 4017 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_yolo_detector
 4018 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_yolo_detector
 4019 001c 00000000 		.word	LL_ATON_EpochBlockItems_yolo_detector
 4020 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_yolo_detector
 4021 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_yolo_detector
 4022 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_yolo_detector
 4023              		.section	.psram_bss
 4024              		.align	5
ARM GAS  /tmp/ccReAcTZ.s 			page 152


 4027              	screen_buffer:
 4028 36000 00000000 		.space	768000
 4028      00000000 
 4028      00000000 
 4028      00000000 
 4028      00000000 
 4029              		.section	.bss.cpu_load,"aw",%nobits
 4030              		.align	3
 4033              	cpu_load:
 4034 0000 00000000 		.space	224
 4034      00000000 
 4034      00000000 
 4034      00000000 
 4034      00000000 
 4035              		.section	.data.disp,"aw"
 4036              		.align	2
 4039              	disp:
 4040 0000 00000000 		.space	168
 4040      00000000 
 4040      00000000 
 4040      00000000 
 4040      00000000 
 4041 00a8 00000000 		.space	20
 4041      00000000 
 4041      00000000 
 4041      00000000 
 4041      00000000 
 4042 00bc 01000000 		.word	1
 4043 00c0 00000000 		.word	0
 4044 00c4 00000000 		.space	224
 4044      00000000 
 4044      00000000 
 4044      00000000 
 4044      00000000 
 4045              		.section	.bss.lcd_fg_buffer_rd_idx,"aw",%nobits
 4046              		.align	2
 4049              	lcd_fg_buffer_rd_idx:
 4050 0000 00000000 		.space	4
 4051              		.section	.psram_bss
 4052              		.align	5
 4055              	lcd_fg_buffer:
 4056 f1800 00000000 		.space	1536000
 4056      00000000 
 4056      00000000 
 4056      00000000 
 4056      00000000 
 4057              		.section	.bss.lcd_bg_buffer_capt_idx,"aw",%nobits
 4058              		.align	2
 4061              	lcd_bg_buffer_capt_idx:
 4062 0000 00000000 		.space	4
 4063              		.section	.data.lcd_bg_buffer_disp_idx,"aw"
 4064              		.align	2
 4067              	lcd_bg_buffer_disp_idx:
 4068 0000 01000000 		.word	1
 4069              		.section	.psram_bss
 4070              		.align	5
 4073              	lcd_bg_buffer:
ARM GAS  /tmp/ccReAcTZ.s 			page 153


 4074 268800 00000000 		.space	6144000
 4074      00000000 
 4074      00000000 
 4074      00000000 
 4074      00000000 
 4075              		.text
 4076              	.Letext0:
 4077              		.file 5 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4078              		.file 6 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4079              		.file 7 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4080              		.file 8 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4081              		.file 9 "Lib/FreeRTOS/Source/include/projdefs.h"
 4082              		.file 10 "Lib/FreeRTOS/Source/portable/GCC/ARM_CM55_NTZ/non_secure/portmacrocommon.h"
 4083              		.file 11 "Lib/FreeRTOS/Source/include/FreeRTOS.h"
 4084              		.file 12 "Lib/FreeRTOS/Source/include/task.h"
 4085              		.file 13 "Lib/FreeRTOS/Source/include/queue.h"
 4086              		.file 14 "Lib/FreeRTOS/Source/include/semphr.h"
 4087              		.file 15 "STM32Cube_FW_N6/Drivers/CMSIS/Include/core_cm55.h"
 4088              		.file 16 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n657xx.h"
 4089              		.file 17 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n6xx.h"
 4090              		.file 18 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_def.h"
 4091              		.file 19 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gpio.h"
 4092              		.file 20 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_dcmipp.h"
 4093              		.file 21 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gfxmmu.h"
 4094              		.file 22 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_pp_output_if.h"
 4095              		.file 23 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_yolov8_pp_if.h"
 4096              		.file 24 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/pd_pp_output_if.h"
 4097              		.file 25 "Inc/ld.h"
 4098              		.file 26 "Lib/screenl/Inc/scrl.h"
 4099              		.file 27 "STM32Cube_FW_N6/Drivers/BSP/STM32N6570-DK/stm32n6570_discovery.h"
 4100              		.file 28 "STM32Cube_FW_N6/Utilities/lcd/../Fonts/fonts.h"
 4101              		.file 29 "STM32Cube_FW_N6/Utilities/lcd/stm32_lcd.h"
 4102              		.file 30 "Lib/NemaGFX/include/nema_hal.h"
 4103              		.file 31 "Lib/NemaGFX/include/nema_cmdlist.h"
 4104              		.file 32 "Lib/Camera_Middleware/cmw_camera.h"
 4105              		.file 33 "Lib/ai-postprocessing-wrapper/app_postprocess.h"
 4106              		.file 34 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_runtime.h"
 4107              		.file 35 "Inc/app_cam.h"
 4108              		.file 36 "Inc/FreeRTOSConfig.h"
 4109              		.file 37 "Inc/stm32_lcd_ex.h"
 4110              		.file 38 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal.h"
 4111              		.file 39 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 4112              		.file 40 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 4113              		.file 41 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 4114              		.file 42 "<built-in>"
ARM GAS  /tmp/ccReAcTZ.s 			page 154


DEFINED SYMBOLS
                            *ABS*:00000000 app.c
     /tmp/ccReAcTZ.s:26     .text.clamp_point:00000000 $t
     /tmp/ccReAcTZ.s:31     .text.clamp_point:00000000 clamp_point
     /tmp/ccReAcTZ.s:117    .text.isp_thread_fct:00000000 $t
     /tmp/ccReAcTZ.s:122    .text.isp_thread_fct:00000000 isp_thread_fct
     /tmp/ccReAcTZ.s:168    .text.isp_thread_fct:00000028 $d
     /tmp/ccReAcTZ.s:3934   .bss.isp_sem:00000000 isp_sem
     /tmp/ccReAcTZ.s:3917   .rodata.__func__.17:00000000 __func__.17
     /tmp/ccReAcTZ.s:176    .text.on_pd_toggle_button_click:00000000 $t
     /tmp/ccReAcTZ.s:181    .text.on_pd_toggle_button_click:00000000 on_pd_toggle_button_click
     /tmp/ccReAcTZ.s:255    .text.on_pd_toggle_button_click:0000004c $d
     /tmp/ccReAcTZ.s:3907   .rodata.__func__.15:00000000 __func__.15
     /tmp/ccReAcTZ.s:262    .text.on_ld_toggle_button_click:00000000 $t
     /tmp/ccReAcTZ.s:267    .text.on_ld_toggle_button_click:00000000 on_ld_toggle_button_click
     /tmp/ccReAcTZ.s:341    .text.on_ld_toggle_button_click:0000004c $d
     /tmp/ccReAcTZ.s:3902   .rodata.__func__.14:00000000 __func__.14
     /tmp/ccReAcTZ.s:348    .text.button_process:00000000 $t
     /tmp/ccReAcTZ.s:353    .text.button_process:00000000 button_process
     /tmp/ccReAcTZ.s:411    .text.button_init.part.0:00000000 $t
     /tmp/ccReAcTZ.s:416    .text.button_init.part.0:00000000 button_init.part.0
     /tmp/ccReAcTZ.s:439    .text.button_init.part.0:00000010 $d
     /tmp/ccReAcTZ.s:3897   .rodata.__func__.13:00000000 __func__.13
     /tmp/ccReAcTZ.s:446    .text.display_ld_hand:00000000 $t
     /tmp/ccReAcTZ.s:451    .text.display_ld_hand:00000000 display_ld_hand
     /tmp/ccReAcTZ.s:768    .text.display_ld_hand:00000164 $d
     /tmp/ccReAcTZ.s:782    .text.nn_thread_fct:00000000 $t
     /tmp/ccReAcTZ.s:787    .text.nn_thread_fct:00000000 nn_thread_fct
     /tmp/ccReAcTZ.s:1485   .text.nn_thread_fct:0000023c $d
     /tmp/ccReAcTZ.s:4000   .data.NN_Instance_yolo_detector:00000000 NN_Instance_yolo_detector
     /tmp/ccReAcTZ.s:3877   .rodata.__func__.9:00000000 __func__.9
     /tmp/ccReAcTZ.s:3976   .bss.nn_input_queue:00000000 nn_input_queue
     /tmp/ccReAcTZ.s:3882   .rodata.__func__.10:00000000 __func__.10
     /tmp/ccReAcTZ.s:3872   .rodata.__func__.8:00000000 __func__.8
     /tmp/ccReAcTZ.s:3867   .rodata.__func__.7:00000000 __func__.7
     /tmp/ccReAcTZ.s:3862   .rodata.__func__.6:00000000 __func__.6
     /tmp/ccReAcTZ.s:4039   .data.disp:00000000 disp
     /tmp/ccReAcTZ.s:1508   .text.display_hand:00000000 $t
     /tmp/ccReAcTZ.s:1514   .text.display_hand:00000000 display_hand
     /tmp/ccReAcTZ.s:2008   .text.display_hand:00000230 $d
     /tmp/ccReAcTZ.s:2030   .text.dp_thread_fct:00000000 $t
     /tmp/ccReAcTZ.s:2035   .text.dp_thread_fct:00000000 dp_thread_fct
     /tmp/ccReAcTZ.s:2732   .text.dp_thread_fct:00000270 $d
     /tmp/ccReAcTZ.s:3912   .rodata.__func__.16:00000000 __func__.16
     /tmp/ccReAcTZ.s:3892   .rodata.__func__.12:00000000 __func__.12
     /tmp/ccReAcTZ.s:4033   .bss.cpu_load:00000000 cpu_load
     /tmp/ccReAcTZ.s:3887   .rodata.__func__.11:00000000 __func__.11
     /tmp/ccReAcTZ.s:4049   .bss.lcd_fg_buffer_rd_idx:00000000 lcd_fg_buffer_rd_idx
     /tmp/ccReAcTZ.s:4055   .psram_bss:000f1800 lcd_fg_buffer
     /tmp/ccReAcTZ.s:2777   .text.app_run:00000000 $t
     /tmp/ccReAcTZ.s:2783   .text.app_run:00000000 app_run
     /tmp/ccReAcTZ.s:3366   .text.app_run:0000021c $d
     /tmp/ccReAcTZ.s:4073   .psram_bss:00268800 lcd_bg_buffer
     /tmp/ccReAcTZ.s:4067   .data.lcd_bg_buffer_disp_idx:00000000 lcd_bg_buffer_disp_idx
     /tmp/ccReAcTZ.s:4027   .psram_bss:00036000 screen_buffer
     /tmp/ccReAcTZ.s:3857   .rodata.__func__.5:00000000 __func__.5
     /tmp/ccReAcTZ.s:3922   .rodata.__func__.18:00000000 __func__.18
ARM GAS  /tmp/ccReAcTZ.s 			page 155


     /tmp/ccReAcTZ.s:3982   .psram_bss:00000000 nn_input_buffers
     /tmp/ccReAcTZ.s:3928   .bss.isp_sem_buffer:00000000 isp_sem_buffer
     /tmp/ccReAcTZ.s:3970   .bss.nn_thread:00000000 nn_thread
     /tmp/ccReAcTZ.s:3964   .bss.nn_thread_stack:00000000 nn_thread_stack
     /tmp/ccReAcTZ.s:3958   .bss.dp_thread:00000000 dp_thread
     /tmp/ccReAcTZ.s:3952   .bss.dp_thread_stack:00000000 dp_thread_stack
     /tmp/ccReAcTZ.s:3946   .bss.isp_thread:00000000 isp_thread
     /tmp/ccReAcTZ.s:3940   .bss.isp_thread_stack:00000000 isp_thread_stack
     /tmp/ccReAcTZ.s:3408   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 $t
     /tmp/ccReAcTZ.s:3414   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 CMW_CAMERA_PIPE_FrameEventCallback
     /tmp/ccReAcTZ.s:3738   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000150 $d
     /tmp/ccReAcTZ.s:3852   .rodata.__func__.3:00000000 __func__.3
     /tmp/ccReAcTZ.s:3847   .rodata.__func__.2:00000000 __func__.2
     /tmp/ccReAcTZ.s:3994   .bss.frame_event_nb:00000000 frame_event_nb
     /tmp/ccReAcTZ.s:3842   .rodata.__func__.1:00000000 __func__.1
     /tmp/ccReAcTZ.s:3988   .bss.frame_event_nb_for_resize:00000000 frame_event_nb_for_resize
     /tmp/ccReAcTZ.s:3837   .rodata.__func__.0:00000000 __func__.0
     /tmp/ccReAcTZ.s:4061   .bss.lcd_bg_buffer_capt_idx:00000000 lcd_bg_buffer_capt_idx
     /tmp/ccReAcTZ.s:3761   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 $t
     /tmp/ccReAcTZ.s:3767   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 CMW_CAMERA_PIPE_VsyncEventCallback
     /tmp/ccReAcTZ.s:3830   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000030 $d
     /tmp/ccReAcTZ.s:3925   .bss.isp_sem_buffer:00000000 $d
     /tmp/ccReAcTZ.s:3931   .bss.isp_sem:00000000 $d
     /tmp/ccReAcTZ.s:3937   .bss.isp_thread_stack:00000000 $d
     /tmp/ccReAcTZ.s:3943   .bss.isp_thread:00000000 $d
     /tmp/ccReAcTZ.s:3949   .bss.dp_thread_stack:00000000 $d
     /tmp/ccReAcTZ.s:3955   .bss.dp_thread:00000000 $d
     /tmp/ccReAcTZ.s:3961   .bss.nn_thread_stack:00000000 $d
     /tmp/ccReAcTZ.s:3967   .bss.nn_thread:00000000 $d
     /tmp/ccReAcTZ.s:3973   .bss.nn_input_queue:00000000 $d
     /tmp/ccReAcTZ.s:3979   .psram_bss:00000000 $d
     /tmp/ccReAcTZ.s:3985   .bss.frame_event_nb_for_resize:00000000 $d
     /tmp/ccReAcTZ.s:3991   .bss.frame_event_nb:00000000 $d
     /tmp/ccReAcTZ.s:3997   .data.NN_Instance_yolo_detector:00000000 $d
     /tmp/ccReAcTZ.s:4011   .rodata.NN_Interface_yolo_detector:00000000 NN_Interface_yolo_detector
     /tmp/ccReAcTZ.s:4008   .rodata.NN_Interface_yolo_detector:00000000 $d
     /tmp/ccReAcTZ.s:4030   .bss.cpu_load:00000000 $d
     /tmp/ccReAcTZ.s:4036   .data.disp:00000000 $d
     /tmp/ccReAcTZ.s:4046   .bss.lcd_fg_buffer_rd_idx:00000000 $d
     /tmp/ccReAcTZ.s:4058   .bss.lcd_bg_buffer_capt_idx:00000000 $d
     /tmp/ccReAcTZ.s:4064   .data.lcd_bg_buffer_disp_idx:00000000 $d
                           .group:00000000 wm4.0.c552ae9005b0f2cca11872fae5d4b7f2
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.e0c9f337c65cb9f22ed5f23d082bc78b
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_gcc.h.26.7a5fd1a99dbedde687044a4433ab3e15
                           .group:00000000 wm4.newlib.h.7.591ac1bd65c1f5b34864757667a05252
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
ARM GAS  /tmp/ccReAcTZ.s 			page 156


                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.math.h.13.47cfc34cae8a1153323939c4d32cf7c2
                           .group:00000000 wm4.float.h.29.0e9d9baf95ec39f9555dc80c6e28186b
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.arm_math_types.h.94.a6c8422e2657ad4cd95bd8be69ba02aa
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4.arm_mve.h.38.47b22bbd301ce82bc6dafd1a387f65a3
                           .group:00000000 wm4.arm_math_types.h.559.cab78f278b684a3ea2271947c7aea680
                           .group:00000000 wm4.arm_math_memory.h.28.fe8a81c6a9ac13061a5f748732089249
                           .group:00000000 wm4.none.h.185.db055cca83e83f96d8d0bb450fbdf4bb
                           .group:00000000 wm4.utils.h.27.57524573fe37b04009eecf3582a4c591
                           .group:00000000 wm4.fast_math_functions.h.28.8eb7477260c1d6b62047c49a01c4cbaa
                           .group:00000000 wm4.controller_functions.h.28.7bed7d7a726df2f65b8a3d89cff01247
                           .group:00000000 wm4.filtering_functions.h.46.6cf1424fb1f86d5f9958d208b83340a1
                           .group:00000000 wm4.postprocess_conf.h.22.acd6394ad2add93420e5bdf488e642e7
                           .group:00000000 wm4.app.h.24.1e91b432981a608d23d4a667d6d768a5
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.47.dc31ec4674d7bcb103c9f08809549f45
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4.app_cam.h.19.2495a46447d71a1025370e29864418f5
                           .group:00000000 wm4.app_config.h.19.88dee04c97f3e42d3acfeeca22b174e5
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.ll_aton_config.h.20.79eb8be0291ee9086e6be08969d61846
                           .group:00000000 wm4.ll_aton_attributes.h.20.26d469460cb32db5740effdc8cc403f3
                           .group:00000000 wm4.assert.h.11.d99a111e320bc5106fc4046225782672
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.ae5ea2b0ff9ea6e39e585807e35200d3
                           .group:00000000 wm4.ll_aton_util.h.34.9098eaa90d3d72b819973556e3e5fe44
                           .group:00000000 wm4.FreeRTOS.h.59.647b1b0da38e4e98108aae13c8abe9ee
                           .group:00000000 wm4.FreeRTOSConfig.h.59.2629c72cff9e6dbe880a2dc225eae516
                           .group:00000000 wm4.FreeRTOS.h.80.7742fabaf5accf3762dc12f7f259a8a0
                           .group:00000000 wm4.projdefs.h.30.55a824156f299c075c33148a9fdadb99
                           .group:00000000 wm4.portmacro.h.30.cbb4b2da41f551c2a9904f0d03a1ce3e
                           .group:00000000 wm4.portmacrocommon.h.30.d5cb67896ab50a95311be7e023da5c4f
                           .group:00000000 wm4.portmacro.h.68.4051ecf710d074fb55b16d91dfebeeaa
                           .group:00000000 wm4.portable.h.61.d557c57974d490f056246a26cdcddd6c
                           .group:00000000 wm4.mpu_wrappers.h.30.ccc5f1a6903f941a88c268f5f62af3fe
                           .group:00000000 wm4.portable.h.189.522b8bd52a171d3fd1432ef06d0caa63
                           .group:00000000 wm4.FreeRTOS.h.102.fb871f3e464d99c5a57b3115545a02ad
                           .group:00000000 wm4.list.h.59.bce6419520cd4f5f98779a1530bf2118
                           .group:00000000 wm4.task.h.56.84290139c73b47f5b9aac361361a2a31
                           .group:00000000 wm4.queue.h.68.219f47fba8b59640449b84d04c5bd6d8
                           .group:00000000 wm4.semphr.h.40.c1a9c6f5bf0feb4da0b6a45d234a79d0
                           .group:00000000 wm4.ll_aton_platform.h.20.06ded592ee586a6abb6019a90ebd54df
                           .group:00000000 wm4.stm32n6xx_hal_conf.h.21.004a06df6e15ac197e03f723792da58a
                           .group:00000000 wm4.arm_cmse.h.103.a0d15a79c4c9a67da8d5831704d7248e
                           .group:00000000 wm4.stm32n6xx.h.34.80585dd08aa426c932f6311fdb7386da
                           .group:00000000 wm4.stm32n657xx.h.26.acd272cb67318cc1a4791ce2f0720ca6
ARM GAS  /tmp/ccReAcTZ.s 			page 157


                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm55.h.68.832d5cf835639cc0d28219c3d2867330
                           .group:00000000 wm4.core_cm55.h.196.52e437a270752da561676e507b35baeb
                           .group:00000000 wm4.mpu_armv8.h.32.9d72426c8e2b47753456dcb84802c5b3
                           .group:00000000 wm4.pmu_armv8.h.32.eaa95f88a71b29390b135fd81c071b6b
                           .group:00000000 wm4.core_cm55.h.4411.860dad8650880893dd57b815844f7186
                           .group:00000000 wm4.cachel1_armv7.h.32.abd77761a989e008b0c60891114a33c7
                           .group:00000000 wm4.stm32n657xx.h.575.1c2a5e6bedffc6f9083dcc857bc6d09d
                           .group:00000000 wm4.stm32n6xx.h.114.5cf793d8af485e14f110e3e24bde1aa5
                           .group:00000000 wm4.stm32_hal_legacy.h.22.87fb12bf5a1a1e00fc134f22bc9aa8c4
                           .group:00000000 wm4.stm32n6xx_hal_def.h.63.2cbbf1954826c09c874c4e06e42e8b71
                           .group:00000000 wm4.stm32n6xx_ll_bus.h.38.2366a295ee4cdb04833997d3787fcd2d
                           .group:00000000 wm4.stm32n6xx_ll_rcc.h.21.002e22a16fd7f67dde6dce41e8ba9620
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.194.1cb1283e40f9bebcd3fba2a9a961838e
                           .group:00000000 wm4.stm32n6xx_hal_rcc_ex.h.21.79aa32178dfef625fbd20d362449acfa
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.4359.3f0b7ad33826d95438602c9aebc08af9
                           .group:00000000 wm4.stm32n6xx_hal_gpio.h.21.89d54af663b98eb8fc098192053f7eeb
                           .group:00000000 wm4.stm32n6xx_hal_gpio_ex.h.22.4acb2e3511a98bb48b81cfc8e09fd59e
                           .group:00000000 wm4.stm32n6xx_hal_rif.h.21.424d0bafb874a777dee3742a22e13037
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.21.61e48c5c2e8d25d22177834b232fe45c
                           .group:00000000 wm4.stm32n6xx_hal_dma_ex.h.21.66e597beb090a165329d6ccf665e41bc
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.1020.87e2180c009560b617c1f8208140c950
                           .group:00000000 wm4.stm32n6xx_hal_cortex.h.21.f493623cc58f9454ab4eae41e395c5cc
                           .group:00000000 wm4.stm32n6xx_hal_bsec.h.21.61b309e67dd810e28897a01b1b21a97f
                           .group:00000000 wm4.stm32n6xx_hal_dcmipp.h.21.f538bfd785c6469670251ac9bc7af55d
                           .group:00000000 wm4.stm32n6xx_hal_dma2d.h.21.75c8d46cdbb72970123b3f34ae2043d7
                           .group:00000000 wm4.stm32n6xx_hal_exti.h.21.fda87e715ea6b98239ec30171d1df594
                           .group:00000000 wm4.stm32n6xx_hal_gfxmmu.h.21.9784a9103143d48bd3c37389d0e0b8e6
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.21.3f483626ff64c5bf027265bb2e1d1331
                           .group:00000000 wm4.stm32n6xx_hal_i2c_ex.h.21.79e9196c22282cdaf6b4047893638c45
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.741.1084702632703acc669e4282b3043372
                           .group:00000000 wm4.stm32n6xx_hal_icache.h.21.194b4ec6e76f32b14f65c85616854850
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.21.ae1eb09930e7e550e48e418ac5849e4d
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.1002.b13ede7fc94ed5ad1c6768a157d2149a
                           .group:00000000 wm4.stm32n6xx_ll_usb.h.21.d518a5d97876c2ff49040c20a2c4a120
                           .group:00000000 wm4.stm32n6xx_hal_pcd.h.155.27040aac6844effe2af8c180caf1dd2e
                           .group:00000000 wm4.stm32n6xx_hal_pwr.h.21.cdb73e4869c3fed3fc84f901ec0e5f0a
                           .group:00000000 wm4.stm32n6xx_hal_pwr_ex.h.21.1a673224a58b0c1e5fad8eeda6514208
                           .group:00000000 wm4.stm32n6xx_hal_ramcfg.h.21.a62dfbb4d2c14e9a8c634a215e37bd3d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.21.9f810303326e2d91749800e9911f8e4d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.906.93ec0695066db4253cdbcb7d84358a0b
                           .group:00000000 wm4.stm32n6xx_hal_tim.h.21.839dd2b2a70382fb2c44f8f293a84d5f
                           .group:00000000 wm4.stm32n6xx_hal_tim_ex.h.21.e372d5ac63c13441211ea4ecbd353150
                           .group:00000000 wm4.stm32n6xx_hal_uart.h.21.230f549bfa0d5ebfd77bfb311b2aca15
                           .group:00000000 wm4.stm32n6xx_hal_uart_ex.h.21.a0d5511e1d0703b7b5278c8f5472b96d
                           .group:00000000 wm4.stm32n6xx_hal_xspi.h.21.e17898be2073b6b6b19faf30b4e304e9
                           .group:00000000 wm4.stm32n6xx_hal_cacheaxi.h.21.7c3375b7903ec42376e4883320997f74
                           .group:00000000 wm4.stm32n6xx_hal_gpu2d.h.21.48d0249122abad294a630c39cc4ebaed
                           .group:00000000 wm4.stm32n6xx_hal.h.81.5e59143eba07faca3e9aeaa5470826c8
                           .group:00000000 wm4.ll_aton_platform.h.288.664a74b8c5792a861b3d52bd39f4a693
                           .group:00000000 wm4.ATON.h.19.cf7dff4c0f1bfe90e42066f604751dc7
                           .group:00000000 wm4.ll_aton_rcompat.h.22.b2bd0d777466a5ac720f3b2429c5fea7
                           .group:00000000 wm4.ll_aton_platform.h.383.f09ccd502bb682b863f991d963ee7462
                           .group:00000000 wm4.ll_aton_osal_freertos.h.62.85a065f77def7f6fef26149f92fe1378
                           .group:00000000 wm4.ll_aton_osal.h.116.bc018513feb9b28713cf2afc78ec679b
                           .group:00000000 wm4.ll_aton_rt_user_api.h.71.e6b7f8d03b2c998f838260ad3cb6cd40
                           .group:00000000 wm4.od_pp_output_if.h.11.62a3da738caf687aa42d96759c237b2c
ARM GAS  /tmp/ccReAcTZ.s 			page 158


                           .group:00000000 wm4.mpe_pp_output_if.h.11.db0dd5ceb87072354c56b51e8f9b2a0d
                           .group:00000000 wm4.pd_pp_output_if.h.19.b7de9bd1876930668a82409743b6dbf4
                           .group:00000000 wm4.spe_pp_output_if.h.11.cb67d0d15a71c95e0e8b7fee8a9755fe
                           .group:00000000 wm4.iseg_pp_output_if.h.11.df7e791a4e783022a9fba78cdb1c05d4
                           .group:00000000 wm4.sseg_pp_output_if.h.11.caf00fb1ae24f8dc9c80bee7827b96f2
                           .group:00000000 wm4.app_postprocess.h.49.6186ff44b2c06089fe0297042919e83a
                           .group:00000000 wm4.isp_conf.h.21.bfb1d020517608810095aa56acf25d1e
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.isp_core.h.109.be5387f515355b6edcb70af2607f9a68
                           .group:00000000 wm4.ld.h.19.4ce791deb5cad1787551e620ef002c56
                           .group:00000000 wm4.cmw_errno.h.21.91021ac9b2627a1ce6b8517d105715d1
                           .group:00000000 wm4.stm32n6570_discovery_conf.h.21.f52c8202689527a3dc0d9c6cba9c0416
                           .group:00000000 wm4.stm32n6570_discovery_errno.h.22.80e523b09444a11ebe4b6e24ae914f0e
                           .group:00000000 wm4.stm32n6570_discovery_bus.h.62.3b5b2c6837f7adeb489604fa214cd371
                           .group:00000000 wm4.cmw_camera.h.33.b34cbb506ffb5bbc0bae0cee9fc48966
                           .group:00000000 wm4.stm32n6570_discovery.h.25.5fc3699797f7c334a2e25a2a6a563b07
                           .group:00000000 wm4.lcd.h.21.98701c105e66fef2e089854e5bc0fe32
                           .group:00000000 wm4.stm32_lcd.h.55.1a04e503950bf34ef3721d2ebb9542fc
                           .group:00000000 wm4.stm32_lcd_ex.h.21.eaf9c9c1000e162e58259e027110f2f5
                           .group:00000000 wm4.utils.h.19.2f7e4a8a839d9215c56961f5a9914d6d
                           .group:00000000 wm4.nema_sys_defs.h.24.0b35b5138cb9b4a3130f5d424bc2bcc0
                           .group:00000000 wm4.nema_hal.h.193.74a3b292db2bcbda0132dae40ae0f4e5
                           .group:00000000 wm4.nema_cmdlist.h.30.a652eb980f08f0ed22ad00119d504926
                           .group:00000000 wm4.nema_graphics.h.61.b3907f86eccb4e55a4b69e8aebdd3657
                           .group:00000000 wm4.nema_blender.h.30.fb13cc9231bd108bca212984b3a891e0
                           .group:00000000 wm4.nema_math.h.30.ef7265c89982f7dae18e3ec2d7f3d003
                           .group:00000000 wm4.nema_version.h.35.6aae27202c190348dff84b89d4c12df7
                           .group:00000000 wm4.nema_error.h.29.50848ed81d21ff4ae4b870fae3681118

UNDEFINED SYMBOLS
xQueueSemaphoreTake
__assert_func
CAM_IspUpdate
xQueueGenericSend
BSP_PB_GetState
cos
sin
UTIL_LCD_FillCircle
UTIL_LCD_DrawLine
ld_bindings_idx
LL_ATON_Output_Buffers_Info_yolo_detector
LL_ATON_Input_Buffers_Info_yolo_detector
app_postprocess_init
HAL_GetTick
CAM_NNPipe_Start
LL_ATON_Set_User_Input_Buffer_yolo_detector
LL_ATON_RT_Main
app_postprocess_run
UTIL_LCD_DrawRect
__aeabi_ul2d
BSP_PB_Init
memcpy
SCRL_SetAddress_NoReload
UTIL_LCD_FillRect
TIM4_Get_Value
ARM GAS  /tmp/ccReAcTZ.s 			page 159


ulTaskGetIdleRunTimeCounter
memmove
UTIL_LCD_GetFont
UTIL_LCDEx_PrintfAt
SCRL_ReloadLayer
puts
memset
SCRL_Init
UTIL_LCD_SetLayer
UTIL_LCD_Clear
UTIL_LCD_SetFont
UTIL_LCD_SetTextColor
xQueueCreateCountingSemaphoreStatic
vQueueDelete
CAM_Init
xQueueCreateMutexStatic
CAM_DisplayPipe_Start
xTaskCreateStatic
Font20
CMW_CAMERA_GetDCMIPPHandle
HAL_DCMIPP_PIPE_SetMemoryAddress
SRCL_Update
xPortIsInsideInterrupt
xQueueGiveFromISR
LL_ATON_EC_Network_Init_yolo_detector
LL_ATON_EC_Inference_Init_yolo_detector
LL_ATON_Get_User_Input_Buffer_yolo_detector
LL_ATON_Set_User_Output_Buffer_yolo_detector
LL_ATON_Get_User_Output_Buffer_yolo_detector
LL_ATON_EpochBlockItems_yolo_detector
LL_ATON_Internal_Buffers_Info_yolo_detector
