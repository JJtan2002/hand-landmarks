ARM GAS  /tmp/ccyFtwdm.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 4
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"app.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "Src/app.c"
  25              		.section	.text.clamp_point,"ax",%progbits
  26              		.align	1
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	clamp_point:
  32              	.LVL0:
  33              	.LFB7380:
   1:Src/app.c     **** /**
   2:Src/app.c     ****   ******************************************************************************
   3:Src/app.c     ****   * @file    app.c
   4:Src/app.c     ****   * @author  MDG Application Team
   5:Src/app.c     ****   ******************************************************************************
   6:Src/app.c     ****   * @attention
   7:Src/app.c     ****   *
   8:Src/app.c     ****   * Copyright (c) 2024 STMicroelectronics.
   9:Src/app.c     ****   * All rights reserved.
  10:Src/app.c     ****   *
  11:Src/app.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  12:Src/app.c     ****   * in the root directory of this software component.
  13:Src/app.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  14:Src/app.c     ****   *
  15:Src/app.c     ****   ******************************************************************************
  16:Src/app.c     ****   */
  17:Src/app.c     **** 
  18:Src/app.c     **** #include "app.h"
  19:Src/app.c     **** 
  20:Src/app.c     **** #include <stdint.h>
  21:Src/app.c     **** #include <stdio.h>
  22:Src/app.c     **** 
  23:Src/app.c     **** #include "app_cam.h"
  24:Src/app.c     **** #include "app_config.h"
  25:Src/app.c     **** #include "IPL_resize.h"
ARM GAS  /tmp/ccyFtwdm.s 			page 2


  26:Src/app.c     **** #include "app_postprocess.h"
  27:Src/app.c     **** #include "isp_api.h"
  28:Src/app.c     **** #include "ld.h"
  29:Src/app.c     **** #include "ll_aton_runtime.h"
  30:Src/app.c     **** #include "cmw_camera.h"
  31:Src/app.c     **** #include "scrl.h"
  32:Src/app.c     **** #ifdef STM32N6570_DK_REV
  33:Src/app.c     **** #include "stm32n6570_discovery.h"
  34:Src/app.c     **** #else
  35:Src/app.c     **** #include "stm32n6xx_nucleo.h"
  36:Src/app.c     **** #endif
  37:Src/app.c     **** #include "stm32_lcd.h"
  38:Src/app.c     **** #include "stm32_lcd_ex.h"
  39:Src/app.c     **** #include "stm32n6xx_hal.h"
  40:Src/app.c     **** #include "FreeRTOS.h"
  41:Src/app.c     **** #include "task.h"
  42:Src/app.c     **** #include "semphr.h"
  43:Src/app.c     **** #include "utils.h"
  44:Src/app.c     **** 
  45:Src/app.c     **** #define FREERTOS_PRIORITY(p) ((UBaseType_t)((int)tskIDLE_PRIORITY + configMAX_PRIORITIES / 2 + (p))
  46:Src/app.c     **** 
  47:Src/app.c     **** #ifndef M_PI
  48:Src/app.c     **** #define M_PI 3.14159265358979323846
  49:Src/app.c     **** #endif
  50:Src/app.c     **** 
  51:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  52:Src/app.c     **** #include "nema_core.h"
  53:Src/app.c     **** #include "nema_error.h"
  54:Src/app.c     **** void nema_enable_tiling(int);
  55:Src/app.c     **** #endif
  56:Src/app.c     **** 
  57:Src/app.c     **** #define LCD_FG_WIDTH LCD_BG_WIDTH
  58:Src/app.c     **** #define LCD_FG_HEIGHT LCD_BG_HEIGHT
  59:Src/app.c     **** 
  60:Src/app.c     **** #define CACHE_OP(__op__) do { \
  61:Src/app.c     ****   if (is_cache_enable()) { \
  62:Src/app.c     ****     __op__; \
  63:Src/app.c     ****   } \
  64:Src/app.c     **** } while (0)
  65:Src/app.c     **** 
  66:Src/app.c     **** #define DBG_INFO 0
  67:Src/app.c     **** #define USE_FILTERED_TS 1
  68:Src/app.c     **** 
  69:Src/app.c     **** #define BQUEUE_MAX_BUFFERS 2
  70:Src/app.c     **** #define CPU_LOAD_HISTORY_DEPTH 8
  71:Src/app.c     **** 
  72:Src/app.c     **** #define DISPLAY_BUFFER_NB (DISPLAY_DELAY + 2)
  73:Src/app.c     **** 
  74:Src/app.c     **** /* palm detector */
  75:Src/app.c     **** #define PD_MAX_HAND_NB 1
  76:Src/app.c     **** 
  77:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  78:Src/app.c     **** typedef float app_v3_t[3];
  79:Src/app.c     **** #endif
  80:Src/app.c     **** 
  81:Src/app.c     **** typedef struct {
  82:Src/app.c     ****   float cx;
ARM GAS  /tmp/ccyFtwdm.s 			page 3


  83:Src/app.c     ****   float cy;
  84:Src/app.c     ****   float w;
  85:Src/app.c     ****   float h;
  86:Src/app.c     ****   float rotation;
  87:Src/app.c     **** } roi_t;
  88:Src/app.c     **** 
  89:Src/app.c     **** #define UTIL_LCD_COLOR_TRANSPARENT 0
  90:Src/app.c     **** 
  91:Src/app.c     **** #ifdef STM32N6570_DK_REV
  92:Src/app.c     **** #define LCD_FONT Font20
  93:Src/app.c     **** #define DISK_RADIUS 2
  94:Src/app.c     **** #else
  95:Src/app.c     **** #define LCD_FONT Font12
  96:Src/app.c     **** #define DISK_RADIUS 1
  97:Src/app.c     **** #endif
  98:Src/app.c     **** 
  99:Src/app.c     **** typedef struct
 100:Src/app.c     **** {
 101:Src/app.c     ****   uint32_t X0;
 102:Src/app.c     ****   uint32_t Y0;
 103:Src/app.c     ****   uint32_t XSize;
 104:Src/app.c     ****   uint32_t YSize;
 105:Src/app.c     **** } Rectangle_TypeDef;
 106:Src/app.c     **** 
 107:Src/app.c     **** typedef struct {
 108:Src/app.c     ****   SemaphoreHandle_t free;
 109:Src/app.c     ****   StaticSemaphore_t free_buffer;
 110:Src/app.c     ****   SemaphoreHandle_t ready;
 111:Src/app.c     ****   StaticSemaphore_t ready_buffer;
 112:Src/app.c     ****   int buffer_nb;
 113:Src/app.c     ****   uint8_t *buffers[BQUEUE_MAX_BUFFERS];
 114:Src/app.c     ****   int free_idx;
 115:Src/app.c     ****   int ready_idx;
 116:Src/app.c     **** } bqueue_t;
 117:Src/app.c     **** 
 118:Src/app.c     **** typedef struct {
 119:Src/app.c     ****   uint64_t current_total;
 120:Src/app.c     ****   uint64_t current_thread_total;
 121:Src/app.c     ****   uint64_t prev_total;
 122:Src/app.c     ****   uint64_t prev_thread_total;
 123:Src/app.c     ****   struct {
 124:Src/app.c     ****     uint64_t total;
 125:Src/app.c     ****     uint64_t thread;
 126:Src/app.c     ****     uint32_t tick;
 127:Src/app.c     ****   } history[CPU_LOAD_HISTORY_DEPTH];
 128:Src/app.c     **** } cpuload_info_t;
 129:Src/app.c     **** 
 130:Src/app.c     **** typedef struct {
 131:Src/app.c     ****   int is_valid;
 132:Src/app.c     ****   pd_pp_box_t pd_hands;
 133:Src/app.c     ****   roi_t roi;
 134:Src/app.c     ****   ld_point_t ld_landmarks[LD_LANDMARK_NB];
 135:Src/app.c     **** } hand_info_t;
 136:Src/app.c     **** 
 137:Src/app.c     **** typedef struct {
 138:Src/app.c     ****   float nn_period_ms;
 139:Src/app.c     ****   uint32_t pd_ms;
ARM GAS  /tmp/ccyFtwdm.s 			page 4


 140:Src/app.c     ****   uint32_t hl_ms;
 141:Src/app.c     ****   uint32_t pp_ms;
 142:Src/app.c     ****   uint32_t disp_ms;
 143:Src/app.c     ****   int is_ld_displayed;
 144:Src/app.c     ****   int is_pd_displayed;
 145:Src/app.c     ****   int pd_hand_nb;
 146:Src/app.c     ****   float pd_max_prob;
 147:Src/app.c     ****   hand_info_t hands[PD_MAX_HAND_NB];
 148:Src/app.c     **** } display_info_t;
 149:Src/app.c     **** 
 150:Src/app.c     **** typedef struct {
 151:Src/app.c     ****   SemaphoreHandle_t update;
 152:Src/app.c     ****   StaticSemaphore_t update_buffer;
 153:Src/app.c     ****   SemaphoreHandle_t lock;
 154:Src/app.c     ****   StaticSemaphore_t lock_buffer;
 155:Src/app.c     ****   display_info_t info;
 156:Src/app.c     **** } display_t;
 157:Src/app.c     **** 
 158:Src/app.c     **** typedef struct {
 159:Src/app.c     ****   uint32_t nn_in_len;
 160:Src/app.c     ****   float *prob_out;
 161:Src/app.c     ****   uint32_t prob_out_len;
 162:Src/app.c     ****   float *boxes_out;
 163:Src/app.c     ****   uint32_t boxes_out_len;
 164:Src/app.c     ****   pd_model_pp_static_param_t static_param;
 165:Src/app.c     ****   pd_pp_out_t pd_out;
 166:Src/app.c     **** } pd_model_info_t;
 167:Src/app.c     **** 
 168:Src/app.c     **** /**
 169:Src/app.c     ****  * @brief  YOLO detector model context struct
 170:Src/app.c     ****  */
 171:Src/app.c     **** typedef struct {
 172:Src/app.c     ****   // Input buffer info
 173:Src/app.c     ****   uint32_t nn_in_len;
 174:Src/app.c     **** 
 175:Src/app.c     ****   // Raw output buffer info from the model
 176:Src/app.c     ****   float *raw_detections_out;
 177:Src/app.c     ****   uint32_t raw_detections_out_len;
 178:Src/app.c     **** 
 179:Src/app.c     ****   // Post-processing parameters and final output
 180:Src/app.c     ****   od_yolov8_pp_static_param_t static_param;
 181:Src/app.c     ****   od_pp_out_t yolo_out; // CORRECTED: Using the provided output type
 182:Src/app.c     **** 
 183:Src/app.c     **** } yolo_detector_info_t;
 184:Src/app.c     **** 
 185:Src/app.c     **** typedef struct {
 186:Src/app.c     ****   uint8_t *nn_in;
 187:Src/app.c     ****   uint32_t nn_in_len;
 188:Src/app.c     ****   float *prob_out;
 189:Src/app.c     ****   uint32_t prob_out_len;
 190:Src/app.c     ****   float *landmarks_out;
 191:Src/app.c     ****   uint32_t landmarks_out_len;
 192:Src/app.c     **** } hl_model_info_t;
 193:Src/app.c     **** 
 194:Src/app.c     **** typedef struct {
 195:Src/app.c     ****   Button_TypeDef button_id;
 196:Src/app.c     ****   int prev_state;
ARM GAS  /tmp/ccyFtwdm.s 			page 5


 197:Src/app.c     ****   void (*on_click_handler)(void *cb_args);
 198:Src/app.c     ****   void *cb_args;
 199:Src/app.c     **** } button_t;
 200:Src/app.c     **** 
 201:Src/app.c     **** /* Globals */
 202:Src/app.c     **** /* Lcd Background area */
 203:Src/app.c     **** static Rectangle_TypeDef lcd_bg_area = {
 204:Src/app.c     ****   .X0 = 0,
 205:Src/app.c     ****   .Y0 = 0,
 206:Src/app.c     ****   .XSize = LCD_BG_WIDTH,
 207:Src/app.c     ****   .YSize = LCD_BG_HEIGHT,
 208:Src/app.c     **** };
 209:Src/app.c     **** /* Lcd Foreground area */
 210:Src/app.c     **** static Rectangle_TypeDef lcd_fg_area = {
 211:Src/app.c     ****   .X0 = 0,
 212:Src/app.c     ****   .Y0 = 0,
 213:Src/app.c     ****   .XSize = LCD_FG_WIDTH,
 214:Src/app.c     ****   .YSize = LCD_FG_HEIGHT,
 215:Src/app.c     **** };
 216:Src/app.c     **** /* Lcd Background Buffer */
 217:Src/app.c     **** static uint8_t lcd_bg_buffer[DISPLAY_BUFFER_NB][LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP] ALIGN_3
 218:Src/app.c     **** static int lcd_bg_buffer_disp_idx = 1;
 219:Src/app.c     **** static int lcd_bg_buffer_capt_idx = 0;
 220:Src/app.c     **** /* Lcd Foreground Buffer */
 221:Src/app.c     **** static uint8_t lcd_fg_buffer[2][LCD_FG_WIDTH * LCD_FG_HEIGHT* 2] ALIGN_32 IN_PSRAM;
 222:Src/app.c     **** static int lcd_fg_buffer_rd_idx;
 223:Src/app.c     **** static display_t disp = {
 224:Src/app.c     ****   .info.is_ld_displayed = 1,
 225:Src/app.c     ****   .info.is_pd_displayed = 0,
 226:Src/app.c     **** };
 227:Src/app.c     **** static cpuload_info_t cpu_load;
 228:Src/app.c     **** /* screen buffer */
 229:Src/app.c     **** static uint8_t screen_buffer[LCD_BG_WIDTH * LCD_BG_HEIGHT * 2] ALIGN_32 IN_PSRAM;
 230:Src/app.c     **** 
 231:Src/app.c     **** /* model */
 232:Src/app.c     ****  /* palm detector */
 233:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(palm_detector);
 234:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(yolo_detector);
 235:Src/app.c     **** static roi_t rois[PD_MAX_HAND_NB];
 236:Src/app.c     ****  /* hand landmark */
 237:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(hand_landmark);
 238:Src/app.c     **** static ld_point_t ld_landmarks[PD_MAX_HAND_NB][LD_LANDMARK_NB];
 239:Src/app.c     **** static uint32_t frame_event_nb;
 240:Src/app.c     **** static volatile uint32_t frame_event_nb_for_resize;
 241:Src/app.c     **** 
 242:Src/app.c     ****  /* nn input buffers */
 243:Src/app.c     **** static uint8_t nn_input_buffers[2][NN_WIDTH * NN_HEIGHT * NN_BPP] ALIGN_32 IN_PSRAM;
 244:Src/app.c     **** static bqueue_t nn_input_queue;
 245:Src/app.c     **** 
 246:Src/app.c     ****  /* rtos */
 247:Src/app.c     **** static StaticTask_t nn_thread;
 248:Src/app.c     **** static StackType_t nn_thread_stack[2 * configMINIMAL_STACK_SIZE];
 249:Src/app.c     **** static StaticTask_t dp_thread;
 250:Src/app.c     **** static StackType_t dp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 251:Src/app.c     **** static StaticTask_t isp_thread;
 252:Src/app.c     **** static StackType_t isp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 253:Src/app.c     **** static SemaphoreHandle_t isp_sem;
ARM GAS  /tmp/ccyFtwdm.s 			page 6


 254:Src/app.c     **** static StaticSemaphore_t isp_sem_buffer;
 255:Src/app.c     **** 
 256:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
 257:Src/app.c     **** static GFXMMU_HandleTypeDef hgfxmmu;
 258:Src/app.c     **** static nema_cmdlist_t cl;
 259:Src/app.c     **** #endif
 260:Src/app.c     **** 
 261:Src/app.c     **** static int is_cache_enable()
 262:Src/app.c     **** {
 263:Src/app.c     **** #if defined(USE_DCACHE)
 264:Src/app.c     ****   return 1;
 265:Src/app.c     **** #else
 266:Src/app.c     ****   return 0;
 267:Src/app.c     **** #endif
 268:Src/app.c     **** }
 269:Src/app.c     **** 
 270:Src/app.c     **** static float pd_normalize_angle(float angle)
 271:Src/app.c     **** {
 272:Src/app.c     ****   return angle - 2 * M_PI * floorf((angle - (-M_PI)) / (2 * M_PI));
 273:Src/app.c     **** }
 274:Src/app.c     **** 
 275:Src/app.c     **** /* Without rotation support allow limited amount of angles */
 276:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 277:Src/app.c     **** static float pd_cook_rotation(float angle)
 278:Src/app.c     **** {
 279:Src/app.c     ****   if (angle >= (3 * M_PI) / 4)
 280:Src/app.c     ****     angle = M_PI;
 281:Src/app.c     ****   else if (angle >= (1 * M_PI) / 4)
 282:Src/app.c     ****     angle = M_PI / 2;
 283:Src/app.c     ****   else if (angle >= -(1 * M_PI) / 4)
 284:Src/app.c     ****     angle = 0;
 285:Src/app.c     ****   else if (angle >= -(3 * M_PI) / 4)
 286:Src/app.c     ****     angle = -M_PI / 2;
 287:Src/app.c     ****   else
 288:Src/app.c     ****     angle = -M_PI;
 289:Src/app.c     **** 
 290:Src/app.c     ****   return angle;
 291:Src/app.c     **** }
 292:Src/app.c     **** #else
 293:Src/app.c     **** static float pd_cook_rotation(float angle)
 294:Src/app.c     **** {
 295:Src/app.c     ****   return angle;
 296:Src/app.c     **** }
 297:Src/app.c     **** #endif
 298:Src/app.c     **** 
 299:Src/app.c     **** static float pd_compute_rotation(pd_pp_box_t *box)
 300:Src/app.c     **** {
 301:Src/app.c     ****   float x0, y0, x1, y1;
 302:Src/app.c     ****   float rotation;
 303:Src/app.c     **** 
 304:Src/app.c     ****   x0 = box->pKps[0].x;
 305:Src/app.c     ****   y0 = box->pKps[0].y;
 306:Src/app.c     ****   x1 = box->pKps[2].x;
 307:Src/app.c     ****   y1 = box->pKps[2].y;
 308:Src/app.c     **** 
 309:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
 310:Src/app.c     **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 7


 311:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
 312:Src/app.c     **** }
 313:Src/app.c     **** 
 314:Src/app.c     **** static void cvt_pd_coord_to_screen_coord(pd_pp_box_t *box)
 315:Src/app.c     **** {
 316:Src/app.c     ****   int i;
 317:Src/app.c     **** 
 318:Src/app.c     ****   /* This is not a typo. Since screen aspect ratio was conserved. We really want to use LCD_BG_WIDT
 319:Src/app.c     ****    * y positions.
 320:Src/app.c     ****    */
 321:Src/app.c     **** 
 322:Src/app.c     ****   box->x_center *= LCD_BG_WIDTH;
 323:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 324:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
 325:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 326:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 327:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 328:Src/app.c     ****     box->pKps[i].y *= LCD_BG_WIDTH;
 329:Src/app.c     ****   }
 330:Src/app.c     **** }
 331:Src/app.c     **** 
 332:Src/app.c     **** static void roi_shift_and_scale(roi_t *roi, float shift_x, float shift_y, float scale_x, float scal
 333:Src/app.c     **** {
 334:Src/app.c     ****   float long_side;
 335:Src/app.c     ****   float sx, sy;
 336:Src/app.c     **** 
 337:Src/app.c     ****   sx = (roi->w * shift_x * cos(roi->rotation) - roi->h * shift_y * sin(roi->rotation));
 338:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 339:Src/app.c     **** 
 340:Src/app.c     ****   roi->cx += sx;
 341:Src/app.c     ****   roi->cy += sy;
 342:Src/app.c     **** 
 343:Src/app.c     ****   long_side = MAX(roi->w, roi->h);
 344:Src/app.c     ****   roi->w = long_side;
 345:Src/app.c     ****   roi->h = long_side;
 346:Src/app.c     **** 
 347:Src/app.c     ****   roi->w *= scale_x;
 348:Src/app.c     ****   roi->h *= scale_y;
 349:Src/app.c     **** }
 350:Src/app.c     **** 
 351:Src/app.c     **** static void pd_box_to_roi(pd_pp_box_t *box,  roi_t *roi)
 352:Src/app.c     **** {
 353:Src/app.c     ****   const float shift_x = 0;
 354:Src/app.c     ****   const float shift_y = -0.5;
 355:Src/app.c     ****   const float scale = 2.6;
 356:Src/app.c     **** 
 357:Src/app.c     ****   roi->cx = box->x_center;
 358:Src/app.c     ****   roi->cy = box->y_center;
 359:Src/app.c     ****   roi->w = box->width;
 360:Src/app.c     ****   roi->h = box->height;
 361:Src/app.c     ****   roi->rotation = pd_compute_rotation(box);
 362:Src/app.c     **** 
 363:Src/app.c     ****   roi_shift_and_scale(roi, shift_x, shift_y, scale, scale);
 364:Src/app.c     **** 
 365:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 366:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
 367:Src/app.c     ****   roi->rotation = 0;
ARM GAS  /tmp/ccyFtwdm.s 			page 8


 368:Src/app.c     **** #endif
 369:Src/app.c     **** }
 370:Src/app.c     **** 
 371:Src/app.c     **** static void copy_pd_box(pd_pp_box_t *dst, pd_pp_box_t *src)
 372:Src/app.c     **** {
 373:Src/app.c     ****   int i;
 374:Src/app.c     **** 
 375:Src/app.c     ****   dst->prob = src->prob;
 376:Src/app.c     ****   dst->x_center = src->x_center;
 377:Src/app.c     ****   dst->y_center = src->y_center;
 378:Src/app.c     ****   dst->width = src->width;
 379:Src/app.c     ****   dst->height = src->height;
 380:Src/app.c     ****   for (i = 0 ; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++)
 381:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 382:Src/app.c     **** }
 383:Src/app.c     **** 
 384:Src/app.c     **** static void button_init(button_t *b, Button_TypeDef id, void (*on_click_handler)(void *), void *cb_
 385:Src/app.c     **** {
 386:Src/app.c     ****   int ret;
 387:Src/app.c     **** 
 388:Src/app.c     ****   ret = BSP_PB_Init(id, BUTTON_MODE_GPIO);
 389:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 390:Src/app.c     **** 
 391:Src/app.c     ****   b->button_id = id;
 392:Src/app.c     ****   b->on_click_handler = on_click_handler;
 393:Src/app.c     ****   b->prev_state = 0;
 394:Src/app.c     ****   b->cb_args = cb_args;
 395:Src/app.c     **** }
 396:Src/app.c     **** 
 397:Src/app.c     **** static void button_process(button_t *b)
 398:Src/app.c     **** {
 399:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 400:Src/app.c     **** 
 401:Src/app.c     ****   if (state != b->prev_state && state && b->on_click_handler)
 402:Src/app.c     ****     b->on_click_handler(b->cb_args);
 403:Src/app.c     **** 
 404:Src/app.c     ****   b->prev_state = state;
 405:Src/app.c     **** }
 406:Src/app.c     **** 
 407:Src/app.c     **** static void cpuload_init(cpuload_info_t *cpu_load)
 408:Src/app.c     **** {
 409:Src/app.c     ****   memset(cpu_load, 0, sizeof(cpuload_info_t));
 410:Src/app.c     **** }
 411:Src/app.c     **** 
 412:Src/app.c     **** static void cpuload_update(cpuload_info_t *cpu_load)
 413:Src/app.c     **** {
 414:Src/app.c     ****   int i;
 415:Src/app.c     **** 
 416:Src/app.c     ****   cpu_load->history[1] = cpu_load->history[0];
 417:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 418:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 419:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 420:Src/app.c     **** 
 421:Src/app.c     ****   if (cpu_load->history[1].tick - cpu_load->history[2].tick < 1000)
 422:Src/app.c     ****     return ;
 423:Src/app.c     **** 
 424:Src/app.c     ****   for (i = 0; i < CPU_LOAD_HISTORY_DEPTH - 2; i++)
ARM GAS  /tmp/ccyFtwdm.s 			page 9


 425:Src/app.c     ****     cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 1 - i] = cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 
 426:Src/app.c     **** }
 427:Src/app.c     **** 
 428:Src/app.c     **** static void cpuload_get_info(cpuload_info_t *cpu_load, float *cpu_load_last, float *cpu_load_last_s
 429:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 430:Src/app.c     **** {
 431:Src/app.c     ****   if (cpu_load_last)
 432:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 433:Src/app.c     ****                      (cpu_load->history[0].total - cpu_load->history[1].total);
 434:Src/app.c     ****   if (cpu_load_last_second)
 435:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 436:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 437:Src/app.c     ****   if (cpu_load_last_five_seconds)
 438:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 439:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[7].total);
 440:Src/app.c     **** }
 441:Src/app.c     **** 
 442:Src/app.c     **** static int bqueue_init(bqueue_t *bq, int buffer_nb, uint8_t **buffers)
 443:Src/app.c     **** {
 444:Src/app.c     ****   int i;
 445:Src/app.c     **** 
 446:Src/app.c     ****   if (buffer_nb > BQUEUE_MAX_BUFFERS)
 447:Src/app.c     ****     return -1;
 448:Src/app.c     **** 
 449:Src/app.c     ****   bq->free = xSemaphoreCreateCountingStatic(buffer_nb, buffer_nb, &bq->free_buffer);
 450:Src/app.c     ****   if (!bq->free)
 451:Src/app.c     ****     goto free_sem_error;
 452:Src/app.c     ****   bq->ready = xSemaphoreCreateCountingStatic(buffer_nb, 0, &bq->ready_buffer);
 453:Src/app.c     ****   if (!bq->ready)
 454:Src/app.c     ****     goto ready_sem_error;
 455:Src/app.c     **** 
 456:Src/app.c     ****   bq->buffer_nb = buffer_nb;
 457:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 458:Src/app.c     ****     assert(buffers[i]);
 459:Src/app.c     ****     bq->buffers[i] = buffers[i];
 460:Src/app.c     ****   }
 461:Src/app.c     ****   bq->free_idx = 0;
 462:Src/app.c     ****   bq->ready_idx = 0;
 463:Src/app.c     **** 
 464:Src/app.c     ****   return 0;
 465:Src/app.c     **** 
 466:Src/app.c     **** ready_sem_error:
 467:Src/app.c     ****   vSemaphoreDelete(bq->free);
 468:Src/app.c     **** free_sem_error:
 469:Src/app.c     ****   return -1;
 470:Src/app.c     **** }
 471:Src/app.c     **** 
 472:Src/app.c     **** static uint8_t *bqueue_get_free(bqueue_t *bq, int is_blocking)
 473:Src/app.c     **** {
 474:Src/app.c     ****   uint8_t *res;
 475:Src/app.c     ****   int ret;
 476:Src/app.c     **** 
 477:Src/app.c     ****   ret = xSemaphoreTake(bq->free, is_blocking ? portMAX_DELAY : 0);
 478:Src/app.c     ****   if (ret == pdFALSE)
 479:Src/app.c     ****     return NULL;
 480:Src/app.c     **** 
 481:Src/app.c     ****   res = bq->buffers[bq->free_idx];
ARM GAS  /tmp/ccyFtwdm.s 			page 10


 482:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 483:Src/app.c     **** 
 484:Src/app.c     ****   return res;
 485:Src/app.c     **** }
 486:Src/app.c     **** 
 487:Src/app.c     **** static void bqueue_put_free(bqueue_t *bq)
 488:Src/app.c     **** {
 489:Src/app.c     ****   int ret;
 490:Src/app.c     **** 
 491:Src/app.c     ****   ret = xSemaphoreGive(bq->free);
 492:Src/app.c     ****   assert(ret == pdTRUE);
 493:Src/app.c     **** }
 494:Src/app.c     **** 
 495:Src/app.c     **** static uint8_t *bqueue_get_ready(bqueue_t *bq)
 496:Src/app.c     **** {
 497:Src/app.c     ****   uint8_t *res;
 498:Src/app.c     ****   int ret;
 499:Src/app.c     **** 
 500:Src/app.c     ****   ret = xSemaphoreTake(bq->ready, portMAX_DELAY);
 501:Src/app.c     ****   assert(ret == pdTRUE);
 502:Src/app.c     **** 
 503:Src/app.c     ****   res = bq->buffers[bq->ready_idx];
 504:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 505:Src/app.c     **** 
 506:Src/app.c     ****   return res;
 507:Src/app.c     **** }
 508:Src/app.c     **** 
 509:Src/app.c     **** static void bqueue_put_ready(bqueue_t *bq)
 510:Src/app.c     **** {
 511:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 512:Src/app.c     ****   int ret;
 513:Src/app.c     **** 
 514:Src/app.c     ****   if (xPortIsInsideInterrupt()) {
 515:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 516:Src/app.c     ****     assert(ret == pdTRUE);
 517:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 518:Src/app.c     ****   } else {
 519:Src/app.c     ****     ret = xSemaphoreGive(bq->ready);
 520:Src/app.c     ****     assert(ret == pdTRUE);
 521:Src/app.c     ****   }
 522:Src/app.c     **** }
 523:Src/app.c     **** 
 524:Src/app.c     **** static void reload_bg_layer(int next_disp_idx)
 525:Src/app.c     **** {
 526:Src/app.c     ****   int ret;
 527:Src/app.c     **** 
 528:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_bg_buffer[next_disp_idx], SCRL_LAYER_0);
 529:Src/app.c     ****   assert(ret == 0);
 530:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 531:Src/app.c     ****   assert(ret == 0);
 532:Src/app.c     **** 
 533:Src/app.c     ****   ret = SRCL_Update();
 534:Src/app.c     ****   assert(ret == 0);
 535:Src/app.c     **** }
 536:Src/app.c     **** 
 537:Src/app.c     **** static void app_main_pipe_frame_event()
 538:Src/app.c     **** {
ARM GAS  /tmp/ccyFtwdm.s 			page 11


 539:Src/app.c     ****   int next_disp_idx = (lcd_bg_buffer_disp_idx + 1) % DISPLAY_BUFFER_NB;
 540:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 541:Src/app.c     ****   int ret;
 542:Src/app.c     **** 
 543:Src/app.c     ****   ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE1,
 544:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 545:Src/app.c     ****   assert(ret == HAL_OK);
 546:Src/app.c     **** 
 547:Src/app.c     ****   reload_bg_layer(next_disp_idx);
 548:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 549:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 550:Src/app.c     **** 
 551:Src/app.c     ****   frame_event_nb++;
 552:Src/app.c     **** }
 553:Src/app.c     **** 
 554:Src/app.c     **** 
 555:Src/app.c     **** static void app_ancillary_pipe_frame_event()
 556:Src/app.c     **** {
 557:Src/app.c     ****   uint8_t *next_buffer;
 558:Src/app.c     ****   int ret;
 559:Src/app.c     **** 
 560:Src/app.c     ****   next_buffer = bqueue_get_free(&nn_input_queue, 0);
 561:Src/app.c     ****   if (next_buffer) {
 562:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 563:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 564:Src/app.c     ****     assert(ret == HAL_OK);
 565:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 566:Src/app.c     ****     frame_event_nb_for_resize = frame_event_nb - 1;
 567:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 568:Src/app.c     ****   }
 569:Src/app.c     **** }
 570:Src/app.c     **** 
 571:Src/app.c     **** static void app_main_pipe_vsync_event()
 572:Src/app.c     **** {
 573:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 574:Src/app.c     ****   int ret;
 575:Src/app.c     **** 
 576:Src/app.c     ****   ret = xSemaphoreGiveFromISR(isp_sem, &xHigherPriorityTaskWoken);
 577:Src/app.c     ****   if (ret == pdTRUE)
 578:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 579:Src/app.c     **** }
 580:Src/app.c     **** 
 581:Src/app.c     **** static int clamp_point(int *x, int *y)
 582:Src/app.c     **** {
  34              		.loc 1 582 1 view -0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
 583:Src/app.c     ****   int xi = *x;
  38              		.loc 1 583 3 view .LVU1
  39              		.loc 1 583 7 is_stmt 0 view .LVU2
  40 0000 0368     		ldr	r3, [r0]
  41              	.LVL1:
 584:Src/app.c     ****   int yi = *y;
  42              		.loc 1 584 3 is_stmt 1 view .LVU3
 582:Src/app.c     ****   int xi = *x;
  43              		.loc 1 582 1 is_stmt 0 view .LVU4
ARM GAS  /tmp/ccyFtwdm.s 			page 12


  44 0002 10B5     		push	{r4, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 4, -8
  47              		.cfi_offset 14, -4
 585:Src/app.c     **** 
 586:Src/app.c     ****   if (*x < 0)
  48              		.loc 1 586 6 view .LVU5
  49 0004 002B     		cmp	r3, #0
 587:Src/app.c     ****     *x = 0;
  50              		.loc 1 587 8 view .LVU6
  51 0006 B8BF     		it	lt
  52 0008 0024     		movlt	r4, #0
 584:Src/app.c     **** 
  53              		.loc 1 584 7 view .LVU7
  54 000a 0A68     		ldr	r2, [r1]
  55              	.LVL2:
 586:Src/app.c     ****     *x = 0;
  56              		.loc 1 586 3 is_stmt 1 view .LVU8
  57              		.loc 1 587 5 view .LVU9
  58              		.loc 1 587 8 is_stmt 0 view .LVU10
  59 000c B8BF     		it	lt
  60 000e 0460     		strlt	r4, [r0]
 588:Src/app.c     ****   if (*y < 0)
  61              		.loc 1 588 3 is_stmt 1 view .LVU11
  62              		.loc 1 588 6 is_stmt 0 view .LVU12
  63 0010 0C68     		ldr	r4, [r1]
  64 0012 002C     		cmp	r4, #0
 589:Src/app.c     ****     *y = 0;
  65              		.loc 1 589 5 is_stmt 1 view .LVU13
  66              		.loc 1 589 8 is_stmt 0 view .LVU14
  67 0014 BCBF     		itt	lt
  68 0016 0024     		movlt	r4, #0
  69 0018 0C60     		strlt	r4, [r1]
 590:Src/app.c     ****   if (*x >= lcd_bg_area.XSize)
  70              		.loc 1 590 3 is_stmt 1 view .LVU15
  71              		.loc 1 590 6 is_stmt 0 view .LVU16
  72 001a 0468     		ldr	r4, [r0]
  73 001c B4F5487F 		cmp	r4, #800
 591:Src/app.c     ****     *x = lcd_bg_area.XSize - 1;
  74              		.loc 1 591 5 is_stmt 1 view .LVU17
  75              		.loc 1 591 8 is_stmt 0 view .LVU18
  76 0020 24BF     		itt	cs
  77 0022 40F21F34 		movwcs	r4, #799
  78 0026 0460     		strcs	r4, [r0]
 592:Src/app.c     ****   if (*y >= lcd_bg_area.YSize)
  79              		.loc 1 592 3 is_stmt 1 view .LVU19
  80              		.loc 1 592 6 is_stmt 0 view .LVU20
  81 0028 0C68     		ldr	r4, [r1]
  82 002a B4F5F07F 		cmp	r4, #480
 593:Src/app.c     ****     *y = lcd_bg_area.YSize - 1;
  83              		.loc 1 593 5 is_stmt 1 view .LVU21
  84              		.loc 1 593 8 is_stmt 0 view .LVU22
  85 002e 24BF     		itt	cs
  86 0030 40F2DF14 		movwcs	r4, #479
  87 0034 0C60     		strcs	r4, [r1]
 594:Src/app.c     **** 
 595:Src/app.c     ****   return (xi != *x) || (yi != *y);
ARM GAS  /tmp/ccyFtwdm.s 			page 13


  88              		.loc 1 595 3 is_stmt 1 view .LVU23
  89              		.loc 1 595 21 is_stmt 0 view .LVU24
  90 0036 0068     		ldr	r0, [r0]
  91              	.LVL3:
  92              		.loc 1 595 21 view .LVU25
  93 0038 9842     		cmp	r0, r3
  94 003a 04D1     		bne	.L7
  95              		.loc 1 595 21 discriminator 2 view .LVU26
  96 003c 0868     		ldr	r0, [r1]
  97 003e 801A     		subs	r0, r0, r2
  98 0040 18BF     		it	ne
  99 0042 0120     		movne	r0, #1
 100              	.L1:
 596:Src/app.c     **** }
 101              		.loc 1 596 1 view .LVU27
 102 0044 10BD     		pop	{r4, pc}
 103              	.L7:
 595:Src/app.c     **** }
 104              		.loc 1 595 21 discriminator 3 view .LVU28
 105 0046 0120     		movs	r0, #1
 595:Src/app.c     **** }
 106              		.loc 1 595 21 view .LVU29
 107 0048 FCE7     		b	.L1
 108              		.cfi_endproc
 109              	.LFE7380:
 111              		.section	.rodata.isp_thread_fct.str1.1,"aMS",%progbits,1
 112              	.LC1:
 113 0000 72657420 		.ascii	"ret == pdTRUE\000"
 113      3D3D2070 
 113      64545255 
 113      4500
 114              	.LC2:
 115 000e 5372632F 		.ascii	"Src/app.c\000"
 115      6170702E 
 115      6300
 116              		.section	.text.isp_thread_fct,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	isp_thread_fct:
 123              	.LVL4:
 124              	.LFB7410:
 597:Src/app.c     **** 
 598:Src/app.c     **** static int clamp_point_with_margin(int *x, int *y, int margin)
 599:Src/app.c     **** {
 600:Src/app.c     ****   int xi = *x;
 601:Src/app.c     ****   int yi = *y;
 602:Src/app.c     **** 
 603:Src/app.c     ****   if (*x < margin)
 604:Src/app.c     ****     *x = margin;
 605:Src/app.c     ****   if (*y < margin)
 606:Src/app.c     ****     *y = margin;
 607:Src/app.c     ****   if (*x >= lcd_bg_area.XSize - margin)
 608:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 609:Src/app.c     ****   if (*y >= lcd_bg_area.YSize - margin)
 610:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
ARM GAS  /tmp/ccyFtwdm.s 			page 14


 611:Src/app.c     **** 
 612:Src/app.c     ****   return (xi != *x) || (yi != *y);
 613:Src/app.c     **** }
 614:Src/app.c     **** 
 615:Src/app.c     **** static void display_pd_hand(pd_pp_box_t *hand)
 616:Src/app.c     **** {
 617:Src/app.c     ****   int xc, yc;
 618:Src/app.c     ****   int x0, y0;
 619:Src/app.c     ****   int x1, y1;
 620:Src/app.c     ****   int w, h;
 621:Src/app.c     ****   int i;
 622:Src/app.c     **** 
 623:Src/app.c     ****   /* display box around palm */
 624:Src/app.c     ****   xc = (int)hand->x_center;
 625:Src/app.c     ****   yc = (int)hand->y_center;
 626:Src/app.c     ****   w = (int)hand->width;
 627:Src/app.c     ****   h = (int)hand->height;
 628:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 629:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 630:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 631:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 632:Src/app.c     ****   clamp_point(&x0, &y0);
 633:Src/app.c     ****   clamp_point(&x1, &y1);
 634:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 635:Src/app.c     **** 
 636:Src/app.c     ****   /* display palm key points */
 637:Src/app.c     ****   for (i = 0; i < 7; i++) {
 638:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 639:Src/app.c     **** 
 640:Src/app.c     ****     x0 = (int)hand->pKps[i].x;
 641:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 642:Src/app.c     ****     clamp_point(&x0, &y0);
 643:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 644:Src/app.c     ****   }
 645:Src/app.c     **** }
 646:Src/app.c     **** 
 647:Src/app.c     **** static void rotate_point(float pt[2], float rotation)
 648:Src/app.c     **** {
 649:Src/app.c     ****   float x = pt[0];
 650:Src/app.c     ****   float y = pt[1];
 651:Src/app.c     **** 
 652:Src/app.c     ****   pt[0] = cos(rotation) * x - sin(rotation) * y;
 653:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 654:Src/app.c     **** }
 655:Src/app.c     **** 
 656:Src/app.c     **** static void roi_to_corners(roi_t *roi, float corners[4][2])
 657:Src/app.c     **** {
 658:Src/app.c     ****   const float corners_init[4][2] = {
 659:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 660:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 661:Src/app.c     ****     { roi->w / 2,  roi->h / 2},
 662:Src/app.c     ****     {-roi->w / 2,  roi->h / 2},
 663:Src/app.c     ****   };
 664:Src/app.c     ****   int i;
 665:Src/app.c     **** 
 666:Src/app.c     ****   memcpy(corners, corners_init, sizeof(corners_init));
 667:Src/app.c     ****   /* rotate */
ARM GAS  /tmp/ccyFtwdm.s 			page 15


 668:Src/app.c     ****   for (i = 0; i < 4; i++)
 669:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 670:Src/app.c     **** 
 671:Src/app.c     ****   /* shift */
 672:Src/app.c     ****   for (i = 0; i < 4; i++) {
 673:Src/app.c     ****     corners[i][0] += roi->cx;
 674:Src/app.c     ****     corners[i][1] += roi->cy;
 675:Src/app.c     ****   }
 676:Src/app.c     **** }
 677:Src/app.c     **** 
 678:Src/app.c     **** static int clamp_corners(float corners_in[4][2], int corners_out[4][2])
 679:Src/app.c     **** {
 680:Src/app.c     ****   int is_clamp = 0;
 681:Src/app.c     ****   int i;
 682:Src/app.c     **** 
 683:Src/app.c     ****   for (i = 0; i < 4; i++) {
 684:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 685:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 686:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 687:Src/app.c     ****   }
 688:Src/app.c     **** 
 689:Src/app.c     ****   return is_clamp;
 690:Src/app.c     **** }
 691:Src/app.c     **** 
 692:Src/app.c     **** static void display_roi(roi_t *roi)
 693:Src/app.c     **** {
 694:Src/app.c     ****   float corners_f[4][2];
 695:Src/app.c     ****   int corners[4][2];
 696:Src/app.c     ****   int is_clamp;
 697:Src/app.c     ****   int i;
 698:Src/app.c     **** 
 699:Src/app.c     ****   /* compute box corners */
 700:Src/app.c     ****   roi_to_corners(roi, corners_f);
 701:Src/app.c     **** 
 702:Src/app.c     ****   /* clamp */
 703:Src/app.c     ****   is_clamp = clamp_corners(corners_f, corners);
 704:Src/app.c     ****   if (is_clamp)
 705:Src/app.c     ****     return ;
 706:Src/app.c     **** 
 707:Src/app.c     ****   /* display */
 708:Src/app.c     ****   for (i = 0; i < 4; i++)
 709:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 710:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 711:Src/app.c     **** }
 712:Src/app.c     **** 
 713:Src/app.c     **** static void decode_ld_landmark(roi_t *roi, ld_point_t *lm, ld_point_t *decoded)
 714:Src/app.c     **** {
 715:Src/app.c     ****   float rotation = roi->rotation;
 716:Src/app.c     ****   float w = roi->w;
 717:Src/app.c     ****   float h = roi->h;
 718:Src/app.c     **** 
 719:Src/app.c     ****   decoded->x = roi->cx + (lm->x - 0.5) * w * cos(rotation) - (lm->y - 0.5) * h * sin(rotation);
 720:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 721:Src/app.c     **** }
 722:Src/app.c     **** 
 723:Src/app.c     **** static void display_ld_hand(hand_info_t *hand)
 724:Src/app.c     **** {
ARM GAS  /tmp/ccyFtwdm.s 			page 16


 725:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 726:Src/app.c     ****   roi_t *roi = &hand->roi;
 727:Src/app.c     ****   int x[LD_LANDMARK_NB];
 728:Src/app.c     ****   int y[LD_LANDMARK_NB];
 729:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 730:Src/app.c     ****   ld_point_t decoded;
 731:Src/app.c     ****   int i;
 732:Src/app.c     **** 
 733:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 734:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 735:Src/app.c     ****     x[i] = (int)decoded.x;
 736:Src/app.c     ****     y[i] = (int)decoded.y;
 737:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 738:Src/app.c     ****   }
 739:Src/app.c     **** 
 740:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 741:Src/app.c     ****     if (is_clamped[i])
 742:Src/app.c     ****       continue;
 743:Src/app.c     ****     UTIL_LCD_FillCircle(x[i], y[i], disk_radius, UTIL_LCD_COLOR_YELLOW);
 744:Src/app.c     ****   }
 745:Src/app.c     **** 
 746:Src/app.c     ****   for (i = 0; i < LD_BINDING_NB; i++) {
 747:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 748:Src/app.c     ****       continue;
 749:Src/app.c     ****     UTIL_LCD_DrawLine(x[ld_bindings_idx[i][0]], y[ld_bindings_idx[i][0]],
 750:Src/app.c     ****                       x[ld_bindings_idx[i][1]], y[ld_bindings_idx[i][1]],
 751:Src/app.c     ****                       UTIL_LCD_COLOR_BLACK);
 752:Src/app.c     ****   }
 753:Src/app.c     **** }
 754:Src/app.c     **** 
 755:Src/app.c     **** void display_hand(display_info_t *info, hand_info_t *hand)
 756:Src/app.c     **** {
 757:Src/app.c     ****   if (info->is_pd_displayed) {
 758:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 759:Src/app.c     ****     display_roi(&hand->roi);
 760:Src/app.c     ****   }
 761:Src/app.c     ****   if (info->is_ld_displayed)
 762:Src/app.c     ****     display_ld_hand(hand);
 763:Src/app.c     **** }
 764:Src/app.c     **** 
 765:Src/app.c     **** static void Display_NetworkOutput(display_info_t *info)
 766:Src/app.c     **** {
 767:Src/app.c     ****   float cpu_load_one_second;
 768:Src/app.c     ****   int line_nb = 0;
 769:Src/app.c     ****   float nn_fps;
 770:Src/app.c     ****   int i;
 771:Src/app.c     **** 
 772:Src/app.c     ****   /* clear previous ui */
 773:Src/app.c     ****   UTIL_LCD_FillRect(lcd_fg_area.X0, lcd_fg_area.Y0, lcd_fg_area.XSize, lcd_fg_area.YSize, 0x0000000
 774:Src/app.c     **** 
 775:Src/app.c     ****   /* cpu load */
 776:Src/app.c     ****   cpuload_update(&cpu_load);
 777:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 778:Src/app.c     **** 
 779:Src/app.c     ****   /* draw metrics */
 780:Src/app.c     ****   nn_fps = 1000.0 / info->nn_period_ms;
 781:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
ARM GAS  /tmp/ccyFtwdm.s 			page 17


 782:Src/app.c     ****   line_nb += 1;
 783:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 784:Src/app.c     ****   line_nb += 2;
 785:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 786:Src/app.c     ****   line_nb += 1;
 787:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " pd %2ums", info->pd_ms);
 788:Src/app.c     ****   line_nb += 1;
 789:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " hl %2ums", info->hl_ms);
 790:Src/app.c     ****   line_nb += 2;
 791:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 792:Src/app.c     ****   line_nb += 2;
 793:Src/app.c     ****   if (DBG_INFO) {
 794:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 795:Src/app.c     ****     line_nb += 1;
 796:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "   %ums", info->disp_ms);
 797:Src/app.c     ****     line_nb += 1;
 798:Src/app.c     ****   }
 799:Src/app.c     **** 
 800:Src/app.c     ****   /* display palm detector output */
 801:Src/app.c     ****   for (i = 0; i < info->pd_hand_nb; i++) {
 802:Src/app.c     ****     if (info->hands[i].is_valid)
 803:Src/app.c     ****       display_hand(info, &info->hands[i]);
 804:Src/app.c     ****   }
 805:Src/app.c     **** 
 806:Src/app.c     ****   if (DBG_INFO)
 807:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 808:Src/app.c     **** }
 809:Src/app.c     **** 
 810:Src/app.c     **** /**
 811:Src/app.c     ****  * @brief  Initializes the YOLO detector model info and post-processing
 812:Src/app.c     ****  * @param  info  Pointer to the yolo_detector_info_t context struct
 813:Src/app.c     ****  * @retval None
 814:Src/app.c     ****  */
 815:Src/app.c     **** static void yolo_detector_init(yolo_detector_info_t *info)
 816:Src/app.c     **** {
 817:Src/app.c     ****   // Assumes your YOLO model is named 'yolo_detector' in the Cube.AI tool
 818:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_yolo_detector();
 819:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 820:Src/app.c     ****   int ret;
 821:Src/app.c     **** 
 822:Src/app.c     ****   /* Link model I/O buffers to the info struct */
 823:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 824:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 825:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 826:Src/app.c     **** 
 827:Src/app.c     ****   /* Initialize YOLO post-processing static parameters */
 828:Src/app.c     ****   info->static_param.nb_classes = 80;        // Example: 80 for COCO dataset
 829:Src/app.c     ****   info->static_param.nb_total_boxes = 8400;  // Example: Standard for YOLOv8
 830:Src/app.c     ****   info->static_param.max_boxes_limit = 100;  // Max boxes after NMS
 831:Src/app.c     ****   info->static_param.conf_threshold = 0.40f; // Confidence threshold
 832:Src/app.c     ****   info->static_param.iou_threshold = 0.45f;  // IoU threshold for NMS
 833:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 834:Src/app.c     ****   info->static_param.raw_output_scale = 1.0f;
 835:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 836:Src/app.c     **** 
 837:Src/app.c     ****   /* Initialize the post-processing module */
 838:Src/app.c     ****   // Assumes a generic post-processing init function exists
ARM GAS  /tmp/ccyFtwdm.s 			page 18


 839:Src/app.c     ****   ret = app_postprocess_init(&info->static_param, &NN_Instance_yolo_detector);
 840:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 841:Src/app.c     **** }
 842:Src/app.c     **** 
 843:Src/app.c     **** static int yolo_detector_run(uint8_t *buffer, yolo_detector_info_t *info, uint32_t *exec_time)
 844:Src/app.c     **** {
 845:Src/app.c     ****   uint32_t start_ts;
 846:Src/app.c     ****   int detection_nb;
 847:Src/app.c     ****   int ret;
 848:Src/app.c     ****   int i;
 849:Src/app.c     **** 
 850:Src/app.c     ****   start_ts = HAL_GetTick();
 851:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 852:Src/app.c     ****   ret = LL_ATON_Set_User_Input_Buffer_yolo_detector(0, buffer, info->nn_in_len);
 853:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 854:Src/app.c     **** 
 855:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_yolo_detector);
 856:Src/app.c     **** 
 857:Src/app.c     ****   /* Run post-processing on the model's raw output */
 858:Src/app.c     ****   ret = app_postprocess_run((void * []){info->raw_detections_out}, 1, &info->yolo_out, &info->stati
 859:Src/app.c     **** 
 860:Src/app.c     ****   // Get the number of final detections after NMS
 861:Src/app.c     ****   detection_nb = info->yolo_out.nb_detect;
 862:Src/app.c     **** 
 863:Src/app.c     ****   /* Optional: Post-process final bounding boxes (e.g., coordinate scaling) */
 864:Src/app.c     ****   for (i = 0; i < detection_nb; i++) {
 865:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 866:Src/app.c     ****   }
 867:Src/app.c     **** 
 868:Src/app.c     ****   /* Invalidate D-Cache for the output region to ensure CPU sees updated data */
 869:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->raw_detections_out, info->raw_detections_out_len));
 870:Src/app.c     **** 
 871:Src/app.c     ****   *exec_time = HAL_GetTick() - start_ts;
 872:Src/app.c     **** 
 873:Src/app.c     ****   return detection_nb;
 874:Src/app.c     **** }
 875:Src/app.c     **** 
 876:Src/app.c     **** static void palm_detector_init(pd_model_info_t *info)
 877:Src/app.c     **** {
 878:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_palm_detector();
 879:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_palm_detector();
 880:Src/app.c     ****   int ret;
 881:Src/app.c     **** 
 882:Src/app.c     ****   /* model info */
 883:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 884:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 885:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 886:Src/app.c     ****   assert(info->prob_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float));
 887:Src/app.c     ****   info->boxes_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 888:Src/app.c     ****   info->boxes_out_len = LL_Buffer_len(&nn_out_info[1]);
 889:Src/app.c     ****   assert(info->boxes_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float) * 18);
 890:Src/app.c     **** 
 891:Src/app.c     ****   /* post processor info */
 892:Src/app.c     ****   ret = app_postprocess_init(&info->static_param, &NN_Instance_palm_detector);
 893:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 894:Src/app.c     **** }
 895:Src/app.c     **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 19


 896:Src/app.c     **** static int palm_detector_run(uint8_t *buffer, pd_model_info_t *info, uint32_t *pd_exec_time)
 897:Src/app.c     **** {
 898:Src/app.c     ****   uint32_t start_ts;
 899:Src/app.c     ****   int hand_nb;
 900:Src/app.c     ****   int ret;
 901:Src/app.c     ****   int i;
 902:Src/app.c     **** 
 903:Src/app.c     ****   start_ts = HAL_GetTick();
 904:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 905:Src/app.c     ****   ret = LL_ATON_Set_User_Input_Buffer_palm_detector(0, buffer, info->nn_in_len);
 906:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 907:Src/app.c     **** 
 908:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_palm_detector);
 909:Src/app.c     **** 
 910:Src/app.c     ****   ret = app_postprocess_run((void * []){info->prob_out, info->boxes_out}, 2, &info->pd_out, &info->
 911:Src/app.c     ****   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
 912:Src/app.c     ****   hand_nb = MIN(info->pd_out.box_nb, PD_MAX_HAND_NB);
 913:Src/app.c     **** 
 914:Src/app.c     ****   for (i = 0; i < hand_nb; i++) {
 915:Src/app.c     ****     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
 916:Src/app.c     ****     pd_box_to_roi(&info->pd_out.pOutData[i], &rois[i]);
 917:Src/app.c     ****   }
 918:Src/app.c     **** 
 919:Src/app.c     ****   /* Discard nn_out region (used by pp_outputs variables) to avoid Dcache evictions during nn infer
 920:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
 921:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
 922:Src/app.c     **** 
 923:Src/app.c     ****   *pd_exec_time = HAL_GetTick() - start_ts;
 924:Src/app.c     **** 
 925:Src/app.c     ****   return hand_nb;
 926:Src/app.c     **** }
 927:Src/app.c     **** 
 928:Src/app.c     **** static void hand_landmark_init(hl_model_info_t *info)
 929:Src/app.c     **** {
 930:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_hand_landmark();
 931:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_hand_landmark();
 932:Src/app.c     **** 
 933:Src/app.c     ****   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
 934:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 935:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[2]);
 936:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
 937:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
 938:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
 939:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
 940:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 63);
 941:Src/app.c     **** }
 942:Src/app.c     **** 
 943:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 944:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
 945:Src/app.c     **** {
 946:Src/app.c     ****   float corners_f[4][2];
 947:Src/app.c     ****   int corners[4][2];
 948:Src/app.c     ****   uint8_t* out_data;
 949:Src/app.c     ****   size_t height_out;
 950:Src/app.c     ****   uint8_t *in_data;
 951:Src/app.c     ****   size_t height_in;
 952:Src/app.c     ****   size_t width_out;
ARM GAS  /tmp/ccyFtwdm.s 			page 20


 953:Src/app.c     ****   size_t width_in;
 954:Src/app.c     ****   int is_clamped;
 955:Src/app.c     **** 
 956:Src/app.c     ****   /* defaults when no clamping occurs */
 957:Src/app.c     ****   out_data = info->nn_in;
 958:Src/app.c     ****   width_out = LD_WIDTH;
 959:Src/app.c     ****   height_out = LD_HEIGHT;
 960:Src/app.c     **** 
 961:Src/app.c     ****   roi_to_corners(roi, corners_f);
 962:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 963:Src/app.c     **** 
 964:Src/app.c     ****   /* If clamp perform a partial resize */
 965:Src/app.c     ****   if (is_clamped) {
 966:Src/app.c     ****     int offset_x;
 967:Src/app.c     ****     int offset_y;
 968:Src/app.c     **** 
 969:Src/app.c     ****     /* clear target memory since resize will partially write it */
 970:Src/app.c     ****     memset(info->nn_in, 0, info->nn_in_len);
 971:Src/app.c     **** 
 972:Src/app.c     ****     /* compute start address of output buffer */
 973:Src/app.c     ****     offset_x = (int)(((corners[0][0] - corners_f[0][0]) * LD_WIDTH) / (corners_f[2][0] - corners_f[
 974:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 975:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 976:Src/app.c     **** 
 977:Src/app.c     ****     /* compute output width and height */
 978:Src/app.c     ****     width_out = (int)((corners[2][0] - corners[0][0]) / (corners_f[2][0] - corners_f[0][0]) * LD_WI
 979:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 980:Src/app.c     **** 
 981:Src/app.c     ****     assert(width_out > 0);
 982:Src/app.c     ****     assert(height_out > 0);
 983:Src/app.c     ****     {
 984:Src/app.c     ****       uint8_t* out_data_end;
 985:Src/app.c     **** 
 986:Src/app.c     ****       out_data_end = out_data + (int)LD_WIDTH * DISPLAY_BPP * (height_out - 1) + DISPLAY_BPP * widt
 987:Src/app.c     **** 
 988:Src/app.c     ****       assert(out_data_end >= info->nn_in);
 989:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 990:Src/app.c     ****     }
 991:Src/app.c     ****   }
 992:Src/app.c     **** 
 993:Src/app.c     ****   in_data = buffer + corners[0][1] * LCD_BG_WIDTH * DISPLAY_BPP + corners[0][0]* DISPLAY_BPP;
 994:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 995:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
 996:Src/app.c     **** 
 997:Src/app.c     ****   assert(width_in > 0);
 998:Src/app.c     ****   assert(height_in > 0);
 999:Src/app.c     ****   {
1000:Src/app.c     ****     uint8_t* in_data_end;
1001:Src/app.c     **** 
1002:Src/app.c     ****     in_data_end = in_data + LCD_BG_WIDTH * DISPLAY_BPP * (height_in - 1) + DISPLAY_BPP * width_in -
1003:Src/app.c     **** 
1004:Src/app.c     ****     assert(in_data_end >= buffer);
1005:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
1006:Src/app.c     ****   }
1007:Src/app.c     **** 
1008:Src/app.c     ****   IPL_resize_bilinear_iu8ou8_with_strides_RGB(in_data, out_data, LCD_BG_WIDTH * DISPLAY_BPP, LD_WID
1009:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
ARM GAS  /tmp/ccyFtwdm.s 			page 21


1010:Src/app.c     **** 
1011:Src/app.c     ****   return 0;
1012:Src/app.c     **** }
1013:Src/app.c     **** #else
1014:Src/app.c     **** static void app_transform(nema_matrix3x3_t t, app_v3_t v)
1015:Src/app.c     **** {
1016:Src/app.c     ****   app_v3_t r;
1017:Src/app.c     ****   int i;
1018:Src/app.c     **** 
1019:Src/app.c     ****   for (i = 0; i < 3; i++)
1020:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
1021:Src/app.c     **** 
1022:Src/app.c     ****   for (i = 0; i < 3; i++)
1023:Src/app.c     ****     v[i] = r[i];
1024:Src/app.c     **** }
1025:Src/app.c     **** 
1026:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1027:Src/app.c     **** {
1028:Src/app.c     ****   app_v3_t vertex[] = {
1029:Src/app.c     ****     {           0,             0, 1},
1030:Src/app.c     ****     {LCD_BG_WIDTH,             0, 1},
1031:Src/app.c     ****     {LCD_BG_WIDTH, LCD_BG_HEIGHT, 1},
1032:Src/app.c     ****     {           0, LCD_BG_HEIGHT, 1},
1033:Src/app.c     ****   };
1034:Src/app.c     ****   GFXMMU_BuffersTypeDef buffers = { 0 };
1035:Src/app.c     ****   nema_matrix3x3_t t;
1036:Src/app.c     ****   int ret;
1037:Src/app.c     ****   int i;
1038:Src/app.c     **** 
1039:Src/app.c     ****   buffers.Buf0Address = (uint32_t) info->nn_in;
1040:Src/app.c     ****   ret = HAL_GFXMMU_ModifyBuffers(&hgfxmmu, &buffers);
1041:Src/app.c     ****   assert(ret == HAL_OK);
1042:Src/app.c     **** 
1043:Src/app.c     ****   /* bind destination texture */
1044:Src/app.c     ****   nema_bind_dst_tex(GFXMMU_VIRTUAL_BUFFER0_BASE, LD_WIDTH, LD_HEIGHT, NEMA_RGBA8888, -1);
1045:Src/app.c     ****   nema_set_clip(0, 0, LD_WIDTH, LD_HEIGHT);
1046:Src/app.c     ****   nema_clear(0);
1047:Src/app.c     ****   /* bind source texture */
1048:Src/app.c     ****   nema_bind_src_tex((uintptr_t) buffer, LCD_BG_WIDTH, LCD_BG_HEIGHT, NEMA_RGBA8888, -1, NEMA_FILTER
1049:Src/app.c     ****   nema_enable_tiling(1);
1050:Src/app.c     ****   nema_set_blend_blit(NEMA_BL_SRC);
1051:Src/app.c     **** 
1052:Src/app.c     ****   /* let's go */
1053:Src/app.c     ****   nema_mat3x3_load_identity(t);
1054:Src/app.c     ****   nema_mat3x3_translate(t, -roi->cx, -roi->cy);
1055:Src/app.c     ****   nema_mat3x3_rotate(t, nema_rad_to_deg(-roi->rotation));
1056:Src/app.c     ****   nema_mat3x3_scale(t, LD_WIDTH / roi->w, LD_HEIGHT / roi->h);
1057:Src/app.c     ****   nema_mat3x3_translate(t, LD_WIDTH / 2, LD_HEIGHT / 2);
1058:Src/app.c     ****   for (i = 0 ; i < 4; i++)
1059:Src/app.c     ****     app_transform(t, vertex[i]);
1060:Src/app.c     ****   nema_blit_quad_fit(vertex[0][0], vertex[0][1], vertex[1][0], vertex[1][1],
1061:Src/app.c     ****                      vertex[2][0], vertex[2][1], vertex[3][0], vertex[3][1]);
1062:Src/app.c     **** 
1063:Src/app.c     ****   nema_cl_submit(&cl);
1064:Src/app.c     ****   nema_cl_wait(&cl);
1065:Src/app.c     ****   HAL_ICACHE_Invalidate();
1066:Src/app.c     **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 22


1067:Src/app.c     ****   assert(!nema_get_error());
1068:Src/app.c     **** 
1069:Src/app.c     ****   return 0;
1070:Src/app.c     **** }
1071:Src/app.c     **** #endif
1072:Src/app.c     **** 
1073:Src/app.c     **** static int hand_landmark_run(uint8_t *buffer, hl_model_info_t *info, roi_t *roi,
1074:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
1075:Src/app.c     **** {
1076:Src/app.c     ****   int is_clamped;
1077:Src/app.c     ****   int is_valid;
1078:Src/app.c     **** 
1079:Src/app.c     ****   is_clamped = hand_landmark_prepare_input(buffer, roi, info);
1080:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
1081:Src/app.c     ****   if (is_clamped)
1082:Src/app.c     ****     return 0;
1083:Src/app.c     **** 
1084:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_hand_landmark);
1085:Src/app.c     **** 
1086:Src/app.c     ****   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
1087:Src/app.c     **** 
1088:Src/app.c     ****   /* Discard nn_out region (used by pp_input and pp_outputs variables) to avoid Dcache evictions du
1089:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1090:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
1091:Src/app.c     **** 
1092:Src/app.c     ****   return is_valid;
1093:Src/app.c     **** }
1094:Src/app.c     **** 
1095:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
1096:Src/app.c     **** static void app_rot_init(hl_model_info_t *info)
1097:Src/app.c     **** {
1098:Src/app.c     ****   GFXMMU_PackingTypeDef packing = { 0 };
1099:Src/app.c     ****   int ret;
1100:Src/app.c     **** 
1101:Src/app.c     ****   printf("init nema\n");
1102:Src/app.c     ****   nema_init();
1103:Src/app.c     ****   assert(!nema_get_error());
1104:Src/app.c     ****   nema_ext_hold_enable(2);
1105:Src/app.c     ****   nema_ext_hold_irq_enable(2);
1106:Src/app.c     ****   nema_ext_hold_enable(3);
1107:Src/app.c     ****   nema_ext_hold_irq_enable(3);
1108:Src/app.c     ****   printf("init nema DONE %s\n", nema_get_sw_device_name());
1109:Src/app.c     **** 
1110:Src/app.c     ****   hgfxmmu.Instance = GFXMMU;
1111:Src/app.c     ****   hgfxmmu.Init.BlockSize = GFXMMU_12BYTE_BLOCKS;
1112:Src/app.c     ****   hgfxmmu.Init.AddressTranslation = DISABLE;
1113:Src/app.c     ****   ret = HAL_GFXMMU_Init(&hgfxmmu);
1114:Src/app.c     ****   assert(ret == HAL_OK);
1115:Src/app.c     **** 
1116:Src/app.c     ****   packing.Buffer0Activation = ENABLE;
1117:Src/app.c     ****   packing.Buffer0Mode       = GFXMMU_PACKING_MSB_REMOVE;
1118:Src/app.c     ****   packing.DefaultAlpha      = 0xff;
1119:Src/app.c     ****   ret = HAL_GFXMMU_ConfigPacking(&hgfxmmu, &packing);
1120:Src/app.c     ****   assert(ret == HAL_OK);
1121:Src/app.c     **** 
1122:Src/app.c     ****   cl = nema_cl_create_sized(8192);
1123:Src/app.c     ****   nema_cl_bind_circular(&cl);
ARM GAS  /tmp/ccyFtwdm.s 			page 23


1124:Src/app.c     **** }
1125:Src/app.c     **** #endif
1126:Src/app.c     **** 
1127:Src/app.c     **** static float ld_compute_rotation(ld_point_t lm[LD_LANDMARK_NB])
1128:Src/app.c     **** {
1129:Src/app.c     ****   float x0, y0, x1, y1;
1130:Src/app.c     ****   float rotation;
1131:Src/app.c     **** 
1132:Src/app.c     ****   x0 = lm[0].x;
1133:Src/app.c     ****   y0 = lm[0].y;
1134:Src/app.c     ****   x1 = lm[9].x;
1135:Src/app.c     ****   y1 = lm[9].y;
1136:Src/app.c     **** 
1137:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
1138:Src/app.c     **** 
1139:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
1140:Src/app.c     **** }
1141:Src/app.c     **** 
1142:Src/app.c     **** static void ld_to_roi(ld_point_t lm[LD_LANDMARK_NB], roi_t *roi, pd_pp_box_t *next_pd)
1143:Src/app.c     **** {
1144:Src/app.c     ****   const int pd_to_ld_idx[AI_PD_MODEL_PP_NB_KEYPOINTS] = {0, 5, 9, 13, 17, 1, 2};
1145:Src/app.c     ****   const int indices[] = {0, 1, 2, 3, 5, 6, 9, 10, 13, 14, 17, 18};
1146:Src/app.c     ****   float max_x, max_y, min_x, min_y;
1147:Src/app.c     ****   int i;
1148:Src/app.c     **** 
1149:Src/app.c     ****   max_x = max_y = -10000;
1150:Src/app.c     ****   min_x = min_y =  10000;
1151:Src/app.c     **** 
1152:Src/app.c     ****   roi->rotation = ld_compute_rotation(lm);
1153:Src/app.c     **** 
1154:Src/app.c     ****   for (i = 0; i < ARRAY_NB(indices); i++) {
1155:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
1156:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
1157:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
1158:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
1159:Src/app.c     ****   }
1160:Src/app.c     **** 
1161:Src/app.c     ****   roi->cx = (max_x + min_x) / 2;
1162:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
1163:Src/app.c     ****   roi->w = (max_x - min_x);
1164:Src/app.c     ****   roi->h = (max_y - min_y);
1165:Src/app.c     **** 
1166:Src/app.c     ****   next_pd->x_center = roi->cx;
1167:Src/app.c     ****   next_pd->y_center = roi->cy;
1168:Src/app.c     ****   next_pd->width = roi->w;
1169:Src/app.c     ****   next_pd->height = roi->h;
1170:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
1171:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
1172:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
1173:Src/app.c     ****   }
1174:Src/app.c     **** }
1175:Src/app.c     **** 
1176:Src/app.c     **** static void compute_next_roi(roi_t *src, ld_point_t lm_in[LD_LANDMARK_NB], roi_t *next, pd_pp_box_t
1177:Src/app.c     **** {
1178:Src/app.c     ****   const float shift_x = 0;
1179:Src/app.c     ****   const float shift_y = -0.1;
1180:Src/app.c     ****   const float scale = 2.0;
ARM GAS  /tmp/ccyFtwdm.s 			page 24


1181:Src/app.c     ****   ld_point_t lm[LD_LANDMARK_NB];
1182:Src/app.c     ****   roi_t roi;
1183:Src/app.c     ****   int i;
1184:Src/app.c     **** 
1185:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++)
1186:Src/app.c     ****     decode_ld_landmark(src, &lm_in[i], &lm[i]);
1187:Src/app.c     **** 
1188:Src/app.c     ****   ld_to_roi(lm, &roi, next_pd);
1189:Src/app.c     ****   roi_shift_and_scale(&roi, shift_x, shift_y, scale, scale);
1190:Src/app.c     **** 
1191:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1192:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
1193:Src/app.c     ****   roi.rotation = 0;
1194:Src/app.c     **** #endif
1195:Src/app.c     **** 
1196:Src/app.c     ****   *next = roi;
1197:Src/app.c     **** }
1198:Src/app.c     **** static void nn_thread_fct(void *arg)
1199:Src/app.c     **** {
1200:Src/app.c     ****   float nn_period_filtered_ms = 0;
1201:Src/app.c     ****   // Filtered inference times, will be updated with 0
1202:Src/app.c     ****   float pd_filtered_ms = 0;
1203:Src/app.c     ****   float ld_filtered_ms = 0;
1204:Src/app.c     **** 
1205:Src/app.c     ****   uint32_t nn_period_ms;
1206:Src/app.c     ****   uint32_t nn_period[2];
1207:Src/app.c     ****   uint8_t *nn_pipe_dst;
1208:Src/app.c     ****   int is_tracking;
1209:Src/app.c     ****   uint32_t pd_ms;
1210:Src/app.c     ****   uint32_t hl_ms;
1211:Src/app.c     ****   int ret;
1212:Src/app.c     **** 
1213:Src/app.c     ****   /*
1214:Src/app.c     ****    * 2. Initialize the YOLO model
1215:Src/app.c     ****    * This calls the init function to set up buffers and parameters.
1216:Src/app.c     ****    * If the application runs past this point, the initialization is successful.
1217:Src/app.c     ****    */
1218:Src/app.c     ****   yolo_detector_info_t yolo_info;
1219:Src/app.c     ****   yolo_detector_init(&yolo_info);
1220:Src/app.c     ****   int detection_nb;
1221:Src/app.c     **** 
1222:Src/app.c     ****   /*** App Loop ***************************************************************/
1223:Src/app.c     ****   nn_period[1] = HAL_GetTick();
1224:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1225:Src/app.c     ****   assert(nn_pipe_dst);
1226:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1227:Src/app.c     ****   while (1)
1228:Src/app.c     ****   {
1229:Src/app.c     ****     uint8_t *capture_buffer;
1230:Src/app.c     **** 
1231:Src/app.c     ****     // Standard frame timing
1232:Src/app.c     ****     nn_period[0] = nn_period[1];
1233:Src/app.c     ****     nn_period[1] = HAL_GetTick();
1234:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
1235:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
1236:Src/app.c     **** 
1237:Src/app.c     ****     // Get camera buffer to keep the pipeline moving
ARM GAS  /tmp/ccyFtwdm.s 			page 25


1238:Src/app.c     ****     capture_buffer = bqueue_get_ready(&nn_input_queue);
1239:Src/app.c     ****     assert(capture_buffer);
1240:Src/app.c     **** 
1241:Src/app.c     **** 
1242:Src/app.c     ****     /**************************************************************************
1243:Src/app.c     ****      * MODEL EXECUTION 
1244:Src/app.c     ****      **************************************************************************/
1245:Src/app.c     ****     detection_nb = yolo_detector_run(capture_buffer, &yolo_info, &pd_ms);
1246:Src/app.c     ****     
1247:Src/app.c     ****     is_tracking = 0; // Force state to "not tracking"
1248:Src/app.c     ****     pd_ms = 0;       // Set inference time to 0
1249:Src/app.c     ****     hl_ms = 0;       // Set inference time to 0
1250:Src/app.c     **** 
1251:Src/app.c     ****     // Update filtered times with our zero values
1252:Src/app.c     ****     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1253:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1254:Src/app.c     **** 
1255:Src/app.c     ****     // We are done with the buffer, release it
1256:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
1257:Src/app.c     **** 
1258:Src/app.c     **** 
1259:Src/app.c     ****     /*
1260:Src/app.c     ****      * Update display stats with the "no detection" info
1261:Src/app.c     ****      */
1262:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1263:Src/app.c     ****     assert(ret == pdTRUE);
1264:Src/app.c     **** 
1265:Src/app.c     ****     // Populate display structure with valid, non-model data
1266:Src/app.c     ****     disp.info.pd_ms = (int)pd_filtered_ms;
1267:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
1268:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
1269:Src/app.c     ****     disp.info.pd_hand_nb = 0;
1270:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
1271:Src/app.c     ****     disp.info.hands[0].is_valid = 0; // Set hand as invalid
1272:Src/app.c     **** 
1273:Src/app.c     ****     // NOTE: We no longer copy box or landmark data, as none exists.
1274:Src/app.c     ****     // The display thread should check the 'is_valid' flag before drawing.
1275:Src/app.c     **** 
1276:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1277:Src/app.c     ****     assert(ret == pdTRUE);
1278:Src/app.c     **** 
1279:Src/app.c     ****     // Signal the display thread to update
1280:Src/app.c     ****     xSemaphoreGive(disp.update);
1281:Src/app.c     ****   }
1282:Src/app.c     **** }
1283:Src/app.c     **** 
1284:Src/app.c     **** static void backup(void *arg)
1285:Src/app.c     **** {
1286:Src/app.c     ****   float nn_period_filtered_ms = 0;
1287:Src/app.c     ****   float pd_filtered_ms = 0;
1288:Src/app.c     ****   float ld_filtered_ms = 0;
1289:Src/app.c     ****   hl_model_info_t hl_info;
1290:Src/app.c     ****   pd_model_info_t pd_info;
1291:Src/app.c     ****   uint32_t nn_period_ms;
1292:Src/app.c     ****   uint32_t nn_period[2];
1293:Src/app.c     ****   uint8_t *nn_pipe_dst;
1294:Src/app.c     ****   pd_pp_point_t box_next_keypoints[AI_PD_MODEL_PP_NB_KEYPOINTS];
ARM GAS  /tmp/ccyFtwdm.s 			page 26


1295:Src/app.c     ****   pd_pp_box_t box_next;
1296:Src/app.c     ****   int is_tracking = 0;
1297:Src/app.c     ****   roi_t roi_next;
1298:Src/app.c     ****   uint32_t pd_ms;
1299:Src/app.c     ****   uint32_t hl_ms;
1300:Src/app.c     ****   int ret;
1301:Src/app.c     ****   int j;
1302:Src/app.c     **** 
1303:Src/app.c     ****   /* Current tracking algo only support single hand */
1304:Src/app.c     ****   assert(PD_MAX_HAND_NB == 1);
1305:Src/app.c     **** 
1306:Src/app.c     ****   /* setup models buffer info */
1307:Src/app.c     ****   palm_detector_init(&pd_info);
1308:Src/app.c     ****   box_next.pKps = box_next_keypoints;
1309:Src/app.c     ****   hand_landmark_init(&hl_info);
1310:Src/app.c     **** 
1311:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
1312:Src/app.c     ****   app_rot_init(&hl_info);
1313:Src/app.c     **** #endif
1314:Src/app.c     **** 
1315:Src/app.c     ****   /*** App Loop ***************************************************************/
1316:Src/app.c     ****   nn_period[1] = HAL_GetTick();
1317:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1318:Src/app.c     ****   assert(nn_pipe_dst);
1319:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1320:Src/app.c     ****   while (1)
1321:Src/app.c     ****   {
1322:Src/app.c     ****     uint8_t *capture_buffer;
1323:Src/app.c     ****     int idx_for_resize;
1324:Src/app.c     **** 
1325:Src/app.c     ****     nn_period[0] = nn_period[1];
1326:Src/app.c     ****     nn_period[1] = HAL_GetTick();
1327:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
1328:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
1329:Src/app.c     **** 
1330:Src/app.c     ****     capture_buffer = bqueue_get_ready(&nn_input_queue);
1331:Src/app.c     ****     assert(capture_buffer);
1332:Src/app.c     ****     idx_for_resize = frame_event_nb_for_resize % DISPLAY_BUFFER_NB;
1333:Src/app.c     **** 
1334:Src/app.c     ****     /* Only start palm detector when not tracking hand */
1335:Src/app.c     ****     if (!is_tracking) {
1336:Src/app.c     ****       is_tracking = palm_detector_run(capture_buffer, &pd_info, &pd_ms);
1337:Src/app.c     ****       box_next.prob = pd_info.pd_out.pOutData[0].prob;
1338:Src/app.c     ****     } else {
1339:Src/app.c     ****       rois[0] = roi_next;
1340:Src/app.c     ****       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
1341:Src/app.c     ****       pd_ms = 0;
1342:Src/app.c     ****     }
1343:Src/app.c     ****     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1344:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
1345:Src/app.c     **** 
1346:Src/app.c     ****     /* then run hand landmark detector if needed */
1347:Src/app.c     ****     if (is_tracking) {
1348:Src/app.c     ****       hl_ms = HAL_GetTick();
1349:Src/app.c     ****       is_tracking = hand_landmark_run(lcd_bg_buffer[idx_for_resize], &hl_info, &rois[0], ld_landmar
1350:Src/app.c     ****       CACHE_OP(SCB_InvalidateDCache_by_Addr(lcd_bg_buffer[idx_for_resize], sizeof(lcd_bg_buffer[idx
1351:Src/app.c     ****       if (is_tracking)
ARM GAS  /tmp/ccyFtwdm.s 			page 27


1352:Src/app.c     ****         compute_next_roi(&rois[0], ld_landmarks[0], &roi_next, &box_next);
1353:Src/app.c     ****       hl_ms = HAL_GetTick() - hl_ms;
1354:Src/app.c     ****     } else {
1355:Src/app.c     ****       hl_ms = 0;
1356:Src/app.c     ****     }
1357:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1358:Src/app.c     **** 
1359:Src/app.c     ****     /* update display stats */
1360:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1361:Src/app.c     ****     assert(ret == pdTRUE);
1362:Src/app.c     ****     disp.info.pd_ms = is_tracking ? 0 : (int)pd_filtered_ms;
1363:Src/app.c     ****     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
1364:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
1365:Src/app.c     ****     disp.info.pd_hand_nb = is_tracking;
1366:Src/app.c     ****     disp.info.pd_max_prob = pd_info.pd_out.pOutData[0].prob;
1367:Src/app.c     ****     disp.info.hands[0].is_valid = is_tracking;
1368:Src/app.c     ****     copy_pd_box(&disp.info.hands[0].pd_hands, &pd_info.pd_out.pOutData[0]);
1369:Src/app.c     ****     disp.info.hands[0].roi = rois[0];
1370:Src/app.c     ****     for (j = 0; j < LD_LANDMARK_NB; j++)
1371:Src/app.c     ****       disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1372:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1373:Src/app.c     ****     assert(ret == pdTRUE);
1374:Src/app.c     **** 
1375:Src/app.c     ****     /* It's possible xqueue is empty if display is slow. So don't check error code that may by pdFA
1376:Src/app.c     ****     xSemaphoreGive(disp.update);
1377:Src/app.c     ****   }
1378:Src/app.c     **** }
1379:Src/app.c     **** 
1380:Src/app.c     **** static void dp_update_drawing_area()
1381:Src/app.c     **** {
1382:Src/app.c     ****   int ret;
1383:Src/app.c     **** 
1384:Src/app.c     ****   __disable_irq();
1385:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
1386:Src/app.c     ****   assert(ret == HAL_OK);
1387:Src/app.c     ****   __enable_irq();
1388:Src/app.c     **** }
1389:Src/app.c     **** 
1390:Src/app.c     **** static void dp_commit_drawing_area()
1391:Src/app.c     **** {
1392:Src/app.c     ****   int ret;
1393:Src/app.c     **** 
1394:Src/app.c     ****   __disable_irq();
1395:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
1396:Src/app.c     ****   assert(ret == HAL_OK);
1397:Src/app.c     ****   __enable_irq();
1398:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
1399:Src/app.c     **** }
1400:Src/app.c     **** 
1401:Src/app.c     **** static void on_ld_toggle_button_click(void *args)
1402:Src/app.c     **** {
1403:Src/app.c     ****   display_t *disp = (display_t *) args;
1404:Src/app.c     ****   int ret;
1405:Src/app.c     **** 
1406:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1407:Src/app.c     ****   assert(ret == pdTRUE);
1408:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
ARM GAS  /tmp/ccyFtwdm.s 			page 28


1409:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1410:Src/app.c     ****   assert(ret == pdTRUE);
1411:Src/app.c     **** }
1412:Src/app.c     **** 
1413:Src/app.c     **** static void on_pd_toggle_button_click(void *args)
1414:Src/app.c     **** {
1415:Src/app.c     ****   display_t *disp = (display_t *) args;
1416:Src/app.c     ****   int ret;
1417:Src/app.c     **** 
1418:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1419:Src/app.c     ****   assert(ret == pdTRUE);
1420:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
1421:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1422:Src/app.c     ****   assert(ret == pdTRUE);
1423:Src/app.c     **** }
1424:Src/app.c     **** 
1425:Src/app.c     **** static void dp_thread_fct(void *arg)
1426:Src/app.c     **** {
1427:Src/app.c     ****   button_t ld_toggle_button;
1428:Src/app.c     ****   button_t hd_toggle_button;
1429:Src/app.c     ****   uint32_t disp_ms = 0;
1430:Src/app.c     ****   display_info_t info;
1431:Src/app.c     ****   uint32_t ts;
1432:Src/app.c     ****   int ret;
1433:Src/app.c     **** 
1434:Src/app.c     **** #ifdef STM32N6570_DK_REV
1435:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER1, on_ld_toggle_button_click, &disp);
1436:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
1437:Src/app.c     **** #else
1438:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER, on_ld_toggle_button_click, &disp);
1439:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_USER, on_pd_toggle_button_click, &disp);
1440:Src/app.c     **** #endif
1441:Src/app.c     ****   while (1)
1442:Src/app.c     ****   {
1443:Src/app.c     ****     ret = xSemaphoreTake(disp.update, portMAX_DELAY);
1444:Src/app.c     ****     assert(ret == pdTRUE);
1445:Src/app.c     **** 
1446:Src/app.c     ****     button_process(&ld_toggle_button);
1447:Src/app.c     ****     button_process(&hd_toggle_button);
1448:Src/app.c     **** 
1449:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1450:Src/app.c     ****     assert(ret == pdTRUE);
1451:Src/app.c     ****     info = disp.info;
1452:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1453:Src/app.c     ****     assert(ret == pdTRUE);
1454:Src/app.c     ****     info.disp_ms = disp_ms;
1455:Src/app.c     **** 
1456:Src/app.c     ****     ts = HAL_GetTick();
1457:Src/app.c     ****     dp_update_drawing_area();
1458:Src/app.c     ****     Display_NetworkOutput(&info);
1459:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
1460:Src/app.c     ****     dp_commit_drawing_area();
1461:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
1462:Src/app.c     ****   }
1463:Src/app.c     **** }
1464:Src/app.c     **** 
1465:Src/app.c     **** static void isp_thread_fct(void *arg)
ARM GAS  /tmp/ccyFtwdm.s 			page 29


1466:Src/app.c     **** {
 125              		.loc 1 1466 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		.loc 1 1466 1 is_stmt 0 view .LVU31
 130 0000 10B5     		push	{r4, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 4, -8
 133              		.cfi_offset 14, -4
1467:Src/app.c     ****   int ret;
1468:Src/app.c     **** 
1469:Src/app.c     ****   while (1) {
1470:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 134              		.loc 1 1470 11 view .LVU32
 135 0002 094C     		ldr	r4, .L11
 136              	.LVL5:
 137              	.L10:
1467:Src/app.c     ****   int ret;
 138              		.loc 1 1467 3 is_stmt 1 view .LVU33
1469:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 139              		.loc 1 1469 3 view .LVU34
 140              		.loc 1 1470 5 view .LVU35
 141              		.loc 1 1470 11 is_stmt 0 view .LVU36
 142 0004 4FF0FF31 		mov	r1, #-1
 143 0008 2068     		ldr	r0, [r4]
 144 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 145              	.LVL6:
1471:Src/app.c     ****     assert(ret == pdTRUE);
 146              		.loc 1 1471 5 is_stmt 1 view .LVU37
 147 000e 0128     		cmp	r0, #1
 148 0010 06D0     		beq	.L9
 149              		.loc 1 1471 5 is_stmt 0 discriminator 1 view .LVU38
 150 0012 40F2BF51 		movw	r1, #1471
 151 0016 054B     		ldr	r3, .L11+4
 152 0018 054A     		ldr	r2, .L11+8
 153 001a 0648     		ldr	r0, .L11+12
 154              	.LVL7:
 155              		.loc 1 1471 5 discriminator 1 view .LVU39
 156 001c FFF7FEFF 		bl	__assert_func
 157              	.LVL8:
 158              	.L9:
1472:Src/app.c     **** 
1473:Src/app.c     ****     CAM_IspUpdate();
 159              		.loc 1 1473 5 is_stmt 1 view .LVU40
 160 0020 FFF7FEFF 		bl	CAM_IspUpdate
 161              	.LVL9:
1469:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 162              		.loc 1 1469 9 view .LVU41
1470:Src/app.c     ****     assert(ret == pdTRUE);
 163              		.loc 1 1470 9 is_stmt 0 view .LVU42
 164 0024 EEE7     		b	.L10
 165              	.L12:
 166 0026 00BF     		.align	2
 167              	.L11:
 168 0028 00000000 		.word	isp_sem
 169 002c 00000000 		.word	.LC1
ARM GAS  /tmp/ccyFtwdm.s 			page 30


 170 0030 00000000 		.word	__func__.17
 171 0034 0E000000 		.word	.LC2
 172              		.cfi_endproc
 173              	.LFE7410:
 175              		.section	.text.on_pd_toggle_button_click,"ax",%progbits
 176              		.align	1
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 181              	on_pd_toggle_button_click:
 182              	.LVL10:
 183              	.LFB7408:
1414:Src/app.c     ****   display_t *disp = (display_t *) args;
 184              		.loc 1 1414 1 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
1415:Src/app.c     ****   int ret;
 188              		.loc 1 1415 3 view .LVU44
1416:Src/app.c     **** 
 189              		.loc 1 1416 3 view .LVU45
1418:Src/app.c     ****   assert(ret == pdTRUE);
 190              		.loc 1 1418 3 view .LVU46
1414:Src/app.c     ****   display_t *disp = (display_t *) args;
 191              		.loc 1 1414 1 is_stmt 0 view .LVU47
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
1418:Src/app.c     ****   assert(ret == pdTRUE);
 196              		.loc 1 1418 9 view .LVU48
 197 0002 4FF0FF31 		mov	r1, #-1
1414:Src/app.c     ****   display_t *disp = (display_t *) args;
 198              		.loc 1 1414 1 view .LVU49
 199 0006 0446     		mov	r4, r0
1418:Src/app.c     ****   assert(ret == pdTRUE);
 200              		.loc 1 1418 9 view .LVU50
 201 0008 406D     		ldr	r0, [r0, #84]
 202              	.LVL11:
1418:Src/app.c     ****   assert(ret == pdTRUE);
 203              		.loc 1 1418 9 view .LVU51
 204 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 205              	.LVL12:
1419:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 206              		.loc 1 1419 3 is_stmt 1 view .LVU52
 207 000e 0128     		cmp	r0, #1
 208 0010 06D0     		beq	.L14
1419:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 209              		.loc 1 1419 3 is_stmt 0 discriminator 1 view .LVU53
 210 0012 40F28B51 		movw	r1, #1419
 211 0016 0D4B     		ldr	r3, .L17
 212 0018 0D4A     		ldr	r2, .L17+4
 213              	.L16:
1422:Src/app.c     **** }
 214              		.loc 1 1422 3 discriminator 1 view .LVU54
 215 001a 0E48     		ldr	r0, .L17+8
 216              	.LVL13:
ARM GAS  /tmp/ccyFtwdm.s 			page 31


1422:Src/app.c     **** }
 217              		.loc 1 1422 3 discriminator 1 view .LVU55
 218 001c FFF7FEFF 		bl	__assert_func
 219              	.LVL14:
 220              	.L14:
1420:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 221              		.loc 1 1420 3 is_stmt 1 view .LVU56
1420:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 222              		.loc 1 1420 32 is_stmt 0 view .LVU57
 223 0020 D4F8C030 		ldr	r3, [r4, #192]
1421:Src/app.c     ****   assert(ret == pdTRUE);
 224              		.loc 1 1421 9 view .LVU58
 225 0024 606D     		ldr	r0, [r4, #84]
 226              	.LVL15:
1420:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 227              		.loc 1 1420 32 view .LVU59
 228 0026 B3FA83F3 		clz	r3, r3
 229 002a 5B09     		lsrs	r3, r3, #5
1420:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 230              		.loc 1 1420 30 view .LVU60
 231 002c C4F8C030 		str	r3, [r4, #192]
1421:Src/app.c     ****   assert(ret == pdTRUE);
 232              		.loc 1 1421 3 is_stmt 1 view .LVU61
1421:Src/app.c     ****   assert(ret == pdTRUE);
 233              		.loc 1 1421 9 is_stmt 0 view .LVU62
 234 0030 0023     		movs	r3, #0
 235 0032 1A46     		mov	r2, r3
 236 0034 1946     		mov	r1, r3
 237 0036 FFF7FEFF 		bl	xQueueGenericSend
 238              	.LVL16:
1422:Src/app.c     **** }
 239              		.loc 1 1422 3 is_stmt 1 view .LVU63
 240 003a 0128     		cmp	r0, #1
 241 003c 04D0     		beq	.L13
1422:Src/app.c     **** }
 242              		.loc 1 1422 3 is_stmt 0 discriminator 1 view .LVU64
 243 003e 40F28E51 		movw	r1, #1422
 244 0042 024B     		ldr	r3, .L17
 245 0044 024A     		ldr	r2, .L17+4
 246 0046 E8E7     		b	.L16
 247              	.L13:
1423:Src/app.c     **** 
 248              		.loc 1 1423 1 view .LVU65
 249 0048 10BD     		pop	{r4, pc}
 250              	.LVL17:
 251              	.L18:
1423:Src/app.c     **** 
 252              		.loc 1 1423 1 view .LVU66
 253 004a 00BF     		.align	2
 254              	.L17:
 255 004c 00000000 		.word	.LC1
 256 0050 00000000 		.word	__func__.15
 257 0054 0E000000 		.word	.LC2
 258              		.cfi_endproc
 259              	.LFE7408:
 261              		.section	.text.on_ld_toggle_button_click,"ax",%progbits
 262              		.align	1
ARM GAS  /tmp/ccyFtwdm.s 			page 32


 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 267              	on_ld_toggle_button_click:
 268              	.LVL18:
 269              	.LFB7407:
1402:Src/app.c     ****   display_t *disp = (display_t *) args;
 270              		.loc 1 1402 1 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
1403:Src/app.c     ****   int ret;
 274              		.loc 1 1403 3 view .LVU68
1404:Src/app.c     **** 
 275              		.loc 1 1404 3 view .LVU69
1406:Src/app.c     ****   assert(ret == pdTRUE);
 276              		.loc 1 1406 3 view .LVU70
1402:Src/app.c     ****   display_t *disp = (display_t *) args;
 277              		.loc 1 1402 1 is_stmt 0 view .LVU71
 278 0000 10B5     		push	{r4, lr}
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 4, -8
 281              		.cfi_offset 14, -4
1406:Src/app.c     ****   assert(ret == pdTRUE);
 282              		.loc 1 1406 9 view .LVU72
 283 0002 4FF0FF31 		mov	r1, #-1
1402:Src/app.c     ****   display_t *disp = (display_t *) args;
 284              		.loc 1 1402 1 view .LVU73
 285 0006 0446     		mov	r4, r0
1406:Src/app.c     ****   assert(ret == pdTRUE);
 286              		.loc 1 1406 9 view .LVU74
 287 0008 406D     		ldr	r0, [r0, #84]
 288              	.LVL19:
1406:Src/app.c     ****   assert(ret == pdTRUE);
 289              		.loc 1 1406 9 view .LVU75
 290 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 291              	.LVL20:
1407:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 292              		.loc 1 1407 3 is_stmt 1 view .LVU76
 293 000e 0128     		cmp	r0, #1
 294 0010 06D0     		beq	.L20
1407:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 295              		.loc 1 1407 3 is_stmt 0 discriminator 1 view .LVU77
 296 0012 40F27F51 		movw	r1, #1407
 297 0016 0D4B     		ldr	r3, .L23
 298 0018 0D4A     		ldr	r2, .L23+4
 299              	.L22:
1410:Src/app.c     **** }
 300              		.loc 1 1410 3 discriminator 1 view .LVU78
 301 001a 0E48     		ldr	r0, .L23+8
 302              	.LVL21:
1410:Src/app.c     **** }
 303              		.loc 1 1410 3 discriminator 1 view .LVU79
 304 001c FFF7FEFF 		bl	__assert_func
 305              	.LVL22:
 306              	.L20:
1408:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
ARM GAS  /tmp/ccyFtwdm.s 			page 33


 307              		.loc 1 1408 3 is_stmt 1 view .LVU80
1408:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 308              		.loc 1 1408 32 is_stmt 0 view .LVU81
 309 0020 D4F8BC30 		ldr	r3, [r4, #188]
1409:Src/app.c     ****   assert(ret == pdTRUE);
 310              		.loc 1 1409 9 view .LVU82
 311 0024 606D     		ldr	r0, [r4, #84]
 312              	.LVL23:
1408:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 313              		.loc 1 1408 32 view .LVU83
 314 0026 B3FA83F3 		clz	r3, r3
 315 002a 5B09     		lsrs	r3, r3, #5
1408:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 316              		.loc 1 1408 30 view .LVU84
 317 002c C4F8BC30 		str	r3, [r4, #188]
1409:Src/app.c     ****   assert(ret == pdTRUE);
 318              		.loc 1 1409 3 is_stmt 1 view .LVU85
1409:Src/app.c     ****   assert(ret == pdTRUE);
 319              		.loc 1 1409 9 is_stmt 0 view .LVU86
 320 0030 0023     		movs	r3, #0
 321 0032 1A46     		mov	r2, r3
 322 0034 1946     		mov	r1, r3
 323 0036 FFF7FEFF 		bl	xQueueGenericSend
 324              	.LVL24:
1410:Src/app.c     **** }
 325              		.loc 1 1410 3 is_stmt 1 view .LVU87
 326 003a 0128     		cmp	r0, #1
 327 003c 04D0     		beq	.L19
1410:Src/app.c     **** }
 328              		.loc 1 1410 3 is_stmt 0 discriminator 1 view .LVU88
 329 003e 40F28251 		movw	r1, #1410
 330 0042 024B     		ldr	r3, .L23
 331 0044 024A     		ldr	r2, .L23+4
 332 0046 E8E7     		b	.L22
 333              	.L19:
1411:Src/app.c     **** 
 334              		.loc 1 1411 1 view .LVU89
 335 0048 10BD     		pop	{r4, pc}
 336              	.LVL25:
 337              	.L24:
1411:Src/app.c     **** 
 338              		.loc 1 1411 1 view .LVU90
 339 004a 00BF     		.align	2
 340              	.L23:
 341 004c 00000000 		.word	.LC1
 342 0050 00000000 		.word	__func__.14
 343 0054 0E000000 		.word	.LC2
 344              		.cfi_endproc
 345              	.LFE7407:
 347              		.section	.text.button_process,"ax",%progbits
 348              		.align	1
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 353              	button_process:
 354              	.LVL26:
 355              	.LFB7367:
ARM GAS  /tmp/ccyFtwdm.s 			page 34


 398:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 356              		.loc 1 398 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 399:Src/app.c     **** 
 360              		.loc 1 399 3 view .LVU92
 398:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 361              		.loc 1 398 1 is_stmt 0 view .LVU93
 362 0000 38B5     		push	{r3, r4, r5, lr}
 363              		.cfi_def_cfa_offset 16
 364              		.cfi_offset 3, -16
 365              		.cfi_offset 4, -12
 366              		.cfi_offset 5, -8
 367              		.cfi_offset 14, -4
 398:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 368              		.loc 1 398 1 view .LVU94
 369 0002 0446     		mov	r4, r0
 399:Src/app.c     **** 
 370              		.loc 1 399 15 view .LVU95
 371 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 372              	.LVL27:
 399:Src/app.c     **** 
 373              		.loc 1 399 15 view .LVU96
 374 0006 FFF7FEFF 		bl	BSP_PB_GetState
 375              	.LVL28:
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 376              		.loc 1 401 6 view .LVU97
 377 000a 6368     		ldr	r3, [r4, #4]
 399:Src/app.c     **** 
 378              		.loc 1 399 15 view .LVU98
 379 000c 0546     		mov	r5, r0
 380              	.LVL29:
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 381              		.loc 1 401 3 is_stmt 1 view .LVU99
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 382              		.loc 1 401 6 is_stmt 0 view .LVU100
 383 000e 8342     		cmp	r3, r0
 384 0010 04D0     		beq	.L26
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 385              		.loc 1 401 30 discriminator 1 view .LVU101
 386 0012 18B1     		cbz	r0, .L26
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 387              		.loc 1 401 43 discriminator 2 view .LVU102
 388 0014 A368     		ldr	r3, [r4, #8]
 401:Src/app.c     ****     b->on_click_handler(b->cb_args);
 389              		.loc 1 401 39 discriminator 2 view .LVU103
 390 0016 0BB1     		cbz	r3, .L26
 402:Src/app.c     **** 
 391              		.loc 1 402 5 is_stmt 1 view .LVU104
 392 0018 E068     		ldr	r0, [r4, #12]
 393              	.LVL30:
 402:Src/app.c     **** 
 394              		.loc 1 402 5 is_stmt 0 view .LVU105
 395 001a 9847     		blx	r3
 396              	.LVL31:
 397              	.L26:
ARM GAS  /tmp/ccyFtwdm.s 			page 35


 404:Src/app.c     **** }
 398              		.loc 1 404 3 is_stmt 1 view .LVU106
 404:Src/app.c     **** }
 399              		.loc 1 404 17 is_stmt 0 view .LVU107
 400 001c 6560     		str	r5, [r4, #4]
 405:Src/app.c     **** 
 401              		.loc 1 405 1 view .LVU108
 402 001e 38BD     		pop	{r3, r4, r5, pc}
 405:Src/app.c     **** 
 403              		.loc 1 405 1 view .LVU109
 404              		.cfi_endproc
 405              	.LFE7367:
 407              		.section	.rodata.button_init.part.0.str1.1,"aMS",%progbits,1
 408              	.LC3:
 409 0000 72657420 		.ascii	"ret == BSP_ERROR_NONE\000"
 409      3D3D2042 
 409      53505F45 
 409      52524F52 
 409      5F4E4F4E 
 410              		.section	.text.button_init.part.0,"ax",%progbits
 411              		.align	1
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 416              	button_init.part.0:
 417              	.LFB7415:
 384:Src/app.c     **** {
 418              		.loc 1 384 13 is_stmt 1 view -0
 419              		.cfi_startproc
 420              		@ Volatile: function does not return.
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              	.LVL32:
 384:Src/app.c     **** {
 424              		.loc 1 384 13 is_stmt 0 view .LVU111
 425 0000 08B5     		push	{r3, lr}
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 3, -8
 428              		.cfi_offset 14, -4
 389:Src/app.c     **** 
 429              		.loc 1 389 3 discriminator 1 view .LVU112
 430 0002 40F28511 		movw	r1, #389
 431 0006 024B     		ldr	r3, .L34
 432 0008 024A     		ldr	r2, .L34+4
 433 000a 0348     		ldr	r0, .L34+8
 434 000c FFF7FEFF 		bl	__assert_func
 435              	.LVL33:
 436              	.L35:
 437              		.align	2
 438              	.L34:
 439 0010 00000000 		.word	.LC3
 440 0014 00000000 		.word	__func__.13
 441 0018 0E000000 		.word	.LC2
 442              		.cfi_endproc
 443              	.LFE7415:
 445              		.section	.text.display_ld_hand,"ax",%progbits
 446              		.align	1
ARM GAS  /tmp/ccyFtwdm.s 			page 36


 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 451              	display_ld_hand:
 452              	.LVL34:
 453              	.LFB7388:
 724:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 454              		.loc 1 724 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 256
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 725:Src/app.c     ****   roi_t *roi = &hand->roi;
 458              		.loc 1 725 3 view .LVU114
 726:Src/app.c     ****   int x[LD_LANDMARK_NB];
 459              		.loc 1 726 3 view .LVU115
 727:Src/app.c     ****   int y[LD_LANDMARK_NB];
 460              		.loc 1 727 3 view .LVU116
 728:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 461              		.loc 1 728 3 view .LVU117
 729:Src/app.c     ****   ld_point_t decoded;
 462              		.loc 1 729 3 view .LVU118
 730:Src/app.c     ****   int i;
 463              		.loc 1 730 3 view .LVU119
 731:Src/app.c     **** 
 464              		.loc 1 731 3 view .LVU120
 733:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 465              		.loc 1 733 3 view .LVU121
 733:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 466              		.loc 1 733 17 discriminator 1 view .LVU122
 724:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 467              		.loc 1 724 1 is_stmt 0 view .LVU123
 468 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 469              		.cfi_def_cfa_offset 36
 470              		.cfi_offset 4, -36
 471              		.cfi_offset 5, -32
 472              		.cfi_offset 6, -28
 473              		.cfi_offset 7, -24
 474              		.cfi_offset 8, -20
 475              		.cfi_offset 9, -16
 476              		.cfi_offset 10, -12
 477              		.cfi_offset 11, -8
 478              		.cfi_offset 14, -4
 479 0004 2DED0A8B 		vpush.64	{d8, d9, d10, d11, d12}
 480              		.cfi_def_cfa_offset 76
 481              		.cfi_offset 80, -76
 482              		.cfi_offset 81, -72
 483              		.cfi_offset 82, -68
 484              		.cfi_offset 83, -64
 485              		.cfi_offset 84, -60
 486              		.cfi_offset 85, -56
 487              		.cfi_offset 86, -52
 488              		.cfi_offset 87, -48
 489              		.cfi_offset 88, -44
 490              		.cfi_offset 89, -40
 491              	.LBB108:
 492              	.LBB109:
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
ARM GAS  /tmp/ccyFtwdm.s 			page 37


 493              		.loc 1 719 46 view .LVU124
 494 0008 90ED0BCA 		vldr.32	s24, [r0, #44]
 495 000c B7EECCCA 		vcvt.f64.f32	d12, s24
 496              	.LBE109:
 497              	.LBE108:
 724:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 498              		.loc 1 724 1 view .LVU125
 499 0010 C3B0     		sub	sp, sp, #268
 500              		.cfi_def_cfa_offset 344
 501              	.LBB114:
 502              	.LBB110:
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 503              		.loc 1 719 46 view .LVU126
 504 0012 B0EE4C0B 		vmov.f64	d0, d12
 505              	.LBE110:
 506              	.LBE114:
 724:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 507              		.loc 1 724 1 view .LVU127
 508 0016 0446     		mov	r4, r0
 509              	.LBB115:
 510              	.LBB111:
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 511              		.loc 1 719 19 view .LVU128
 512 0018 90ED07AA 		vldr.32	s20, [r0, #28]
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 513              		.loc 1 719 40 view .LVU129
 514 001c 90ED09BA 		vldr.32	s22, [r0, #36]
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 515              		.loc 1 719 46 view .LVU130
 516 0020 FFF7FEFF 		bl	cos
 517              	.LVL35:
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 518              		.loc 1 719 46 view .LVU131
 519 0024 B0EE408B 		vmov.f64	d8, d0
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 520              		.loc 1 719 82 discriminator 1 view .LVU132
 521 0028 B0EE4C0B 		vmov.f64	d0, d12
 522 002c FFF7FEFF 		bl	sin
 523              	.LVL36:
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 524              		.loc 1 719 76 discriminator 1 view .LVU133
 525 0030 94ED0A9A 		vldr.32	s18, [r4, #40]
 720:Src/app.c     **** }
 526              		.loc 1 720 19 view .LVU134
 527 0034 94ED086A 		vldr.32	s12, [r4, #32]
 528 0038 2DAD     		add	r5, sp, #180
 529 003a 18A8     		add	r0, sp, #96
 530 003c 0DF10C0C 		add	ip, sp, #12
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 531              		.loc 1 719 19 view .LVU135
 532 0040 B7EECAAA 		vcvt.f64.f32	d10, s20
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 533              		.loc 1 719 40 view .LVU136
 534 0044 B7EECBBA 		vcvt.f64.f32	d11, s22
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 535              		.loc 1 719 76 discriminator 1 view .LVU137
 536 0048 B7EEC99A 		vcvt.f64.f32	d9, s18
ARM GAS  /tmp/ccyFtwdm.s 			page 38


 720:Src/app.c     **** }
 537              		.loc 1 720 19 view .LVU138
 538 004c B7EEC66A 		vcvt.f64.f32	d6, s12
 539 0050 AE46     		mov	lr, r5
 540 0052 0646     		mov	r6, r0
 541 0054 6746     		mov	r7, ip
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 542              		.loc 1 719 33 view .LVU139
 543 0056 B6EE005B 		vmov.f64	d5, #5.0e-1
 544              	.LBE111:
 545              	.LBE115:
 546              	.LBB116:
 547              	.LBB117:
 607:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 548              		.loc 1 607 6 view .LVU140
 549 005a 40F21D39 		movw	r9, #797
 609:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 550              		.loc 1 609 6 view .LVU141
 551 005e 40F2DD18 		movw	r8, #477
 612:Src/app.c     **** }
 552              		.loc 1 612 21 discriminator 3 view .LVU142
 553 0062 1521     		movs	r1, #21
 554              	.LVL37:
 555              	.L38:
 612:Src/app.c     **** }
 556              		.loc 1 612 21 discriminator 3 view .LVU143
 557              	.LBE117:
 558              	.LBE116:
 734:Src/app.c     ****     x[i] = (int)decoded.x;
 559              		.loc 1 734 5 is_stmt 1 view .LVU144
 560              	.LBB122:
 561              	.LBI108:
 713:Src/app.c     **** {
 562              		.loc 1 713 13 view .LVU145
 563              	.LBB112:
 715:Src/app.c     ****   float w = roi->w;
 564              		.loc 1 715 3 view .LVU146
 716:Src/app.c     ****   float h = roi->h;
 565              		.loc 1 716 3 view .LVU147
 717:Src/app.c     **** 
 566              		.loc 1 717 3 view .LVU148
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 567              		.loc 1 719 3 view .LVU149
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 568              		.loc 1 719 29 is_stmt 0 view .LVU150
 569 0064 94ED0C3A 		vldr.32	s6, [r4, #48]
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 570              		.loc 1 719 65 discriminator 1 view .LVU151
 571 0068 94ED0D4A 		vldr.32	s8, [r4, #52]
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 572              		.loc 1 719 29 view .LVU152
 573 006c B7EEC33A 		vcvt.f64.f32	d3, s6
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 574              		.loc 1 719 65 discriminator 1 view .LVU153
 575 0070 B7EEC44A 		vcvt.f64.f32	d4, s8
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 576              		.loc 1 719 33 view .LVU154
ARM GAS  /tmp/ccyFtwdm.s 			page 39


 577 0074 33EE453B 		vsub.f64	d3, d3, d5
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 578              		.loc 1 719 24 discriminator 1 view .LVU155
 579 0078 B0EE4A7B 		vmov.f64	d7, d10
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 580              		.loc 1 719 40 view .LVU156
 581 007c 23EE0B3B 		vmul.f64	d3, d3, d11
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 582              		.loc 1 719 69 discriminator 1 view .LVU157
 583 0080 34EE454B 		vsub.f64	d4, d4, d5
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 584              		.loc 1 719 24 discriminator 1 view .LVU158
 585 0084 A3EE087B 		vfma.f64	d7, d3, d8
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 586              		.loc 1 719 76 discriminator 1 view .LVU159
 587 0088 24EE094B 		vmul.f64	d4, d4, d9
 719:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 588              		.loc 1 719 60 discriminator 2 view .LVU160
 589 008c A4EE407B 		vfms.f64	d7, d4, d0
 590 0090 F7EEC72B 		vcvt.f32.f64	s5, d7
 720:Src/app.c     **** }
 591              		.loc 1 720 3 is_stmt 1 view .LVU161
 720:Src/app.c     **** }
 592              		.loc 1 720 24 is_stmt 0 discriminator 1 view .LVU162
 593 0094 B0EE467B 		vmov.f64	d7, d6
 594 0098 A3EE007B 		vfma.f64	d7, d3, d0
 720:Src/app.c     **** }
 595              		.loc 1 720 60 discriminator 2 view .LVU163
 596 009c A8EE047B 		vfma.f64	d7, d8, d4
 597              	.LVL38:
 720:Src/app.c     **** }
 598              		.loc 1 720 60 discriminator 2 view .LVU164
 599              	.LBE112:
 600              	.LBE122:
 735:Src/app.c     ****     y[i] = (int)decoded.y;
 601              		.loc 1 735 5 is_stmt 1 view .LVU165
 735:Src/app.c     ****     y[i] = (int)decoded.y;
 602              		.loc 1 735 12 is_stmt 0 view .LVU166
 603 00a0 FDEEE24A 		vcvt.s32.f32	s9, s5
 604 00a4 14EE90AA 		vmov	r10, s9	@ int
 736:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 605              		.loc 1 736 5 is_stmt 1 view .LVU167
 606              	.LBB123:
 607              	.LBB113:
 720:Src/app.c     **** }
 608              		.loc 1 720 60 is_stmt 0 discriminator 2 view .LVU168
 609 00a8 B7EEC77B 		vcvt.f32.f64	s14, d7
 610              	.LBE113:
 611              	.LBE123:
 612              	.LBB124:
 613              	.LBB118:
 603:Src/app.c     ****     *x = margin;
 614              		.loc 1 603 6 view .LVU169
 615 00ac 5246     		mov	r2, r10
 616              	.LBE118:
 617              	.LBE124:
 736:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
ARM GAS  /tmp/ccyFtwdm.s 			page 40


 618              		.loc 1 736 12 view .LVU170
 619 00ae FDEEC77A 		vcvt.s32.f32	s15, s14
 620              	.LBB125:
 621              	.LBB119:
 603:Src/app.c     ****     *x = margin;
 622              		.loc 1 603 6 view .LVU171
 623 00b2 022A     		cmp	r2, #2
 624 00b4 B8BF     		it	lt
 625 00b6 0222     		movlt	r2, #2
 626              	.LBE119:
 627              	.LBE125:
 736:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 628              		.loc 1 736 12 view .LVU172
 629 00b8 17EE903A 		vmov	r3, s15	@ int
 737:Src/app.c     ****   }
 630              		.loc 1 737 5 is_stmt 1 view .LVU173
 631              	.LVL39:
 632              	.LBB126:
 633              	.LBI116:
 598:Src/app.c     **** {
 634              		.loc 1 598 12 view .LVU174
 635              	.LBB120:
 600:Src/app.c     ****   int yi = *y;
 636              		.loc 1 600 3 view .LVU175
 601:Src/app.c     **** 
 637              		.loc 1 601 3 view .LVU176
 603:Src/app.c     ****     *x = margin;
 638              		.loc 1 603 3 view .LVU177
 605:Src/app.c     ****     *y = margin;
 639              		.loc 1 605 3 view .LVU178
 607:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 640              		.loc 1 607 3 view .LVU179
 607:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 641              		.loc 1 607 6 is_stmt 0 view .LVU180
 642 00bc 4A45     		cmp	r2, r9
 643 00be A8BF     		it	ge
 644 00c0 4A46     		movge	r2, r9
 605:Src/app.c     ****     *y = margin;
 645              		.loc 1 605 6 view .LVU181
 646 00c2 022B     		cmp	r3, #2
 647 00c4 9B46     		mov	fp, r3
 648 00c6 B8BF     		it	lt
 649 00c8 4FF0020B 		movlt	fp, #2
 609:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 650              		.loc 1 609 6 view .LVU182
 651 00cc C345     		cmp	fp, r8
 652 00ce A8BF     		it	ge
 653 00d0 C346     		movge	fp, r8
 612:Src/app.c     **** }
 654              		.loc 1 612 21 discriminator 2 view .LVU183
 655 00d2 B3EB0B03 		subs	r3, r3, fp
 656              	.LVL40:
 612:Src/app.c     **** }
 657              		.loc 1 612 21 discriminator 2 view .LVU184
 658 00d6 18BF     		it	ne
 659 00d8 0123     		movne	r3, #1
 660 00da 9245     		cmp	r10, r2
ARM GAS  /tmp/ccyFtwdm.s 			page 41


 661 00dc 18BF     		it	ne
 662 00de 0123     		movne	r3, #1
 663              	.LBE120:
 664              	.LBE126:
 733:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 665              		.loc 1 733 17 discriminator 1 view .LVU185
 666 00e0 0139     		subs	r1, r1, #1
 667 00e2 4CF8042B 		str	r2, [ip], #4
 668              	.LBB127:
 669              	.LBB121:
 609:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 670              		.loc 1 609 3 is_stmt 1 view .LVU186
 671 00e6 40F804BB 		str	fp, [r0], #4
 612:Src/app.c     **** }
 672              		.loc 1 612 3 view .LVU187
 673              	.LVL41:
 612:Src/app.c     **** }
 674              		.loc 1 612 3 is_stmt 0 view .LVU188
 675              	.LBE121:
 676              	.LBE127:
 737:Src/app.c     ****   }
 677              		.loc 1 737 19 discriminator 1 view .LVU189
 678 00ea 4EF8043B 		str	r3, [lr], #4
 733:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 679              		.loc 1 733 36 is_stmt 1 discriminator 3 view .LVU190
 733:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 680              		.loc 1 733 17 discriminator 1 view .LVU191
 681 00ee 04F10804 		add	r4, r4, #8
 682 00f2 B7D1     		bne	.L38
 740:Src/app.c     ****     if (is_clamped[i])
 683              		.loc 1 740 10 is_stmt 0 view .LVU192
 684 00f4 0024     		movs	r4, #0
 685              	.L40:
 686              	.LVL42:
 741:Src/app.c     ****       continue;
 687              		.loc 1 741 5 is_stmt 1 view .LVU193
 741:Src/app.c     ****       continue;
 688              		.loc 1 741 19 is_stmt 0 view .LVU194
 689 00f6 55F8043B 		ldr	r3, [r5], #4
 741:Src/app.c     ****       continue;
 690              		.loc 1 741 8 view .LVU195
 691 00fa 43B9     		cbnz	r3, .L39
 743:Src/app.c     ****   }
 692              		.loc 1 743 5 is_stmt 1 view .LVU196
 693 00fc 6FF0FF03 		mvn	r3, #255
 694 0100 0222     		movs	r2, #2
 695 0102 56F82410 		ldr	r1, [r6, r4, lsl #2]
 696 0106 57F82400 		ldr	r0, [r7, r4, lsl #2]
 697 010a FFF7FEFF 		bl	UTIL_LCD_FillCircle
 698              	.LVL43:
 699              	.L39:
 740:Src/app.c     ****     if (is_clamped[i])
 700              		.loc 1 740 36 discriminator 2 view .LVU197
 701 010e 0134     		adds	r4, r4, #1
 702              	.LVL44:
 740:Src/app.c     ****     if (is_clamped[i])
 703              		.loc 1 740 17 discriminator 1 view .LVU198
ARM GAS  /tmp/ccyFtwdm.s 			page 42


 704 0110 152C     		cmp	r4, #21
 705 0112 F0D1     		bne	.L40
 746:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 706              		.loc 1 746 10 is_stmt 0 view .LVU199
 707 0114 0025     		movs	r5, #0
 749:Src/app.c     ****                       x[ld_bindings_idx[i][1]], y[ld_bindings_idx[i][1]],
 708              		.loc 1 749 5 view .LVU200
 709 0116 4FF07F46 		mov	r6, #-16777216
 710 011a 124C     		ldr	r4, .L47
 711              	.LVL45:
 712              	.L42:
 747:Src/app.c     ****       continue;
 713              		.loc 1 747 5 is_stmt 1 view .LVU201
 747:Src/app.c     ****       continue;
 714              		.loc 1 747 38 is_stmt 0 view .LVU202
 715 011c 2068     		ldr	r0, [r4]
 747:Src/app.c     ****       continue;
 716              		.loc 1 747 19 view .LVU203
 717 011e 42AB     		add	r3, sp, #264
 718 0120 03EB8000 		add	r0, r3, r0, lsl #2
 747:Src/app.c     ****       continue;
 719              		.loc 1 747 8 view .LVU204
 720 0124 50F8543C 		ldr	r3, [r0, #-84]
 721 0128 8BB9     		cbnz	r3, .L41
 747:Src/app.c     ****       continue;
 722              		.loc 1 747 75 discriminator 2 view .LVU205
 723 012a 6268     		ldr	r2, [r4, #4]
 747:Src/app.c     ****       continue;
 724              		.loc 1 747 56 discriminator 2 view .LVU206
 725 012c 42AB     		add	r3, sp, #264
 726 012e 03EB8202 		add	r2, r3, r2, lsl #2
 747:Src/app.c     ****       continue;
 727              		.loc 1 747 43 discriminator 2 view .LVU207
 728 0132 52F8543C 		ldr	r3, [r2, #-84]
 729 0136 53B9     		cbnz	r3, .L41
 749:Src/app.c     ****                       x[ld_bindings_idx[i][1]], y[ld_bindings_idx[i][1]],
 730              		.loc 1 749 5 is_stmt 1 view .LVU208
 731 0138 0096     		str	r6, [sp]
 732 013a 52F8A83C 		ldr	r3, [r2, #-168]
 733 013e 50F8A81C 		ldr	r1, [r0, #-168]
 734 0142 52F8FC2C 		ldr	r2, [r2, #-252]
 735 0146 50F8FC0C 		ldr	r0, [r0, #-252]
 736 014a FFF7FEFF 		bl	UTIL_LCD_DrawLine
 737              	.LVL46:
 738              	.L41:
 746:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 739              		.loc 1 746 35 discriminator 2 view .LVU209
 740 014e 0135     		adds	r5, r5, #1
 741              	.LVL47:
 746:Src/app.c     ****     if (is_clamped[ld_bindings_idx[i][0]] || is_clamped[ld_bindings_idx[i][1]])
 742              		.loc 1 746 17 discriminator 1 view .LVU210
 743 0150 152D     		cmp	r5, #21
 744 0152 04F10804 		add	r4, r4, #8
 745 0156 E1D1     		bne	.L42
 753:Src/app.c     **** 
 746              		.loc 1 753 1 is_stmt 0 view .LVU211
 747 0158 43B0     		add	sp, sp, #268
ARM GAS  /tmp/ccyFtwdm.s 			page 43


 748              		.cfi_def_cfa_offset 76
 749              		@ sp needed
 750 015a BDEC0A8B 		vldm	sp!, {d8-d12}
 751              		.cfi_restore 88
 752              		.cfi_restore 89
 753              		.cfi_restore 86
 754              		.cfi_restore 87
 755              		.cfi_restore 84
 756              		.cfi_restore 85
 757              		.cfi_restore 82
 758              		.cfi_restore 83
 759              		.cfi_restore 80
 760              		.cfi_restore 81
 761              		.cfi_def_cfa_offset 36
 762 015e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 763              	.LVL48:
 764              	.L48:
 753:Src/app.c     **** 
 765              		.loc 1 753 1 view .LVU212
 766 0162 00BF     		.align	2
 767              	.L47:
 768 0164 00000000 		.word	ld_bindings_idx
 769              		.cfi_endproc
 770              	.LFE7388:
 772              		.section	.rodata.nn_thread_fct.str1.1,"aMS",%progbits,1
 773              	.LC4:
 774 0000 72657420 		.ascii	"ret == 0\000"
 774      3D3D2030 
 774      00
 775              	.LC5:
 776 0009 6E6E5F70 		.ascii	"nn_pipe_dst\000"
 776      6970655F 
 776      64737400 
 777              	.LC6:
 778 0015 63617074 		.ascii	"capture_buffer\000"
 778      7572655F 
 778      62756666 
 778      657200
 779              	.LC7:
 780 0024 72657420 		.ascii	"ret == LL_ATON_User_IO_NOERROR\000"
 780      3D3D204C 
 780      4C5F4154 
 780      4F4E5F55 
 780      7365725F 
 781              		.section	.text.nn_thread_fct,"ax",%progbits
 782              		.align	1
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 787              	nn_thread_fct:
 788              	.LVL49:
 789              	.LFB7403:
1199:Src/app.c     ****   float nn_period_filtered_ms = 0;
 790              		.loc 1 1199 1 is_stmt 1 view -0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 64
 793              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccyFtwdm.s 			page 44


1200:Src/app.c     ****   // Filtered inference times, will be updated with 0
 794              		.loc 1 1200 3 view .LVU214
1202:Src/app.c     ****   float ld_filtered_ms = 0;
 795              		.loc 1 1202 3 view .LVU215
1203:Src/app.c     **** 
 796              		.loc 1 1203 3 view .LVU216
1205:Src/app.c     ****   uint32_t nn_period[2];
 797              		.loc 1 1205 3 view .LVU217
1206:Src/app.c     ****   uint8_t *nn_pipe_dst;
 798              		.loc 1 1206 3 view .LVU218
1207:Src/app.c     ****   int is_tracking;
 799              		.loc 1 1207 3 view .LVU219
1208:Src/app.c     ****   uint32_t pd_ms;
 800              		.loc 1 1208 3 view .LVU220
1209:Src/app.c     ****   uint32_t hl_ms;
 801              		.loc 1 1209 3 view .LVU221
1210:Src/app.c     ****   int ret;
 802              		.loc 1 1210 3 view .LVU222
1211:Src/app.c     **** 
 803              		.loc 1 1211 3 view .LVU223
1218:Src/app.c     ****   yolo_detector_init(&yolo_info);
 804              		.loc 1 1218 3 view .LVU224
1219:Src/app.c     ****   int detection_nb;
 805              		.loc 1 1219 3 view .LVU225
1199:Src/app.c     ****   float nn_period_filtered_ms = 0;
 806              		.loc 1 1199 1 is_stmt 0 view .LVU226
 807 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 808              		.cfi_def_cfa_offset 32
 809              		.cfi_offset 4, -32
 810              		.cfi_offset 5, -28
 811              		.cfi_offset 6, -24
 812              		.cfi_offset 7, -20
 813              		.cfi_offset 8, -16
 814              		.cfi_offset 9, -12
 815              		.cfi_offset 10, -8
 816              		.cfi_offset 14, -4
 817 0004 2DED028B 		vpush.64	{d8}
 818              		.cfi_def_cfa_offset 40
 819              		.cfi_offset 80, -40
 820              		.cfi_offset 81, -36
 821 0008 90B0     		sub	sp, sp, #64
 822              		.cfi_def_cfa_offset 104
 823              	.LVL50:
 824              	.LBB166:
 825              	.LBI166:
 815:Src/app.c     **** {
 826              		.loc 1 815 13 is_stmt 1 view .LVU227
 827              	.LBB167:
 818:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 828              		.loc 1 818 3 view .LVU228
 818:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 829              		.loc 1 818 46 is_stmt 0 view .LVU229
 830 000a FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_yolo_detector
 831              	.LVL51:
 818:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 832              		.loc 1 818 46 view .LVU230
 833 000e 0446     		mov	r4, r0
ARM GAS  /tmp/ccyFtwdm.s 			page 45


 834              	.LVL52:
 819:Src/app.c     ****   int ret;
 835              		.loc 1 819 3 is_stmt 1 view .LVU231
 819:Src/app.c     ****   int ret;
 836              		.loc 1 819 45 is_stmt 0 view .LVU232
 837 0010 FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_yolo_detector
 838              	.LVL53:
 820:Src/app.c     **** 
 839              		.loc 1 820 3 is_stmt 1 view .LVU233
 823:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 840              		.loc 1 823 3 view .LVU234
 841              	.LBB168:
 842              	.LBI168:
 843              		.file 2 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h"
   1:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
   2:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   3:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @file    ll_aton_NN_interface.h
   4:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @author  SRA Artificial Intelligence & Embedded Architectures
   5:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief   Interface that defines a NN generated by the AtoNN Compiler.
   6:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   7:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @attention
   8:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
   9:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * Copyright (c) 2024 STMicroelectronics.
  10:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * All rights reserved.
  11:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  12:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * in the root directory of this software component.
  14:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  16:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
  17:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
  18:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  19:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef __LL_ATON_NN_INTERFACE_H
  20:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define __LL_ATON_NN_INTERFACE_H
  21:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  22:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef __cplusplus
  23:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** extern "C"
  24:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** {
  25:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
  26:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  27:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <assert.h>
  28:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdbool.h>
  29:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stddef.h>
  30:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdint.h>
  31:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  32:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_config.h"
  33:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  34:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_attributes.h"
  35:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_util.h"
  36:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  37:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup User I/O Return Values & Callback Event Types
  38:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  39:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  40:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  41:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_User_IO_Result
  42:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_NOERROR,     /**< */
ARM GAS  /tmp/ccyFtwdm.s 			page 46


  44:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_ALIGN, /**< */
  45:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_SIZE,  /**< */
  46:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_INDEX, /**< */
  47:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_User_IO_Result_t;
  48:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  49:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_RT_Callbacktype
  50:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  51:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_START,  /**< Callback called before start_epoch_block */
  52:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_START, /**< Callback called after start_epoch_block */
  53:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_END,    /**< Callback called before end_epoch_block */
  54:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_END,   /**< Callback called after end_epoch_block */
  55:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_Init,    /**< Callback called after `LL_ATON_RT_Init_Network`,
  56:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  57:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_DeInit,  /**< Callback called after `LL_ATON_RT_DeInit_Network`,
  58:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  59:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Init,    /**< Callback called after `LL_ATON_RT_RuntimeInit` */
  60:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Deinit,  /**< Callback called before `LL_ATON_RT_RuntimeDeInit` */
  61:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_RT_Callbacktype_t;
  62:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  63:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
  64:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
  65:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  66:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  67:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Epoch Blocks
  68:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  69:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  70:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  71:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /* this is needed to avoid some compilers (e.g. KEIL) that observe a strict semantic about conver
  72:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * pointers to integers in cost initializers
  73:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  74:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef union
  75:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  76:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     unsigned char *p;
  77:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t i;
  78:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } __LL_address_t;
  79:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  80:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*EpochBlock_FuncPtr_t)(const void *epoch_block);
  81:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  82:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
  83:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_NONE = 0x0,                 /**< */
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_start = (0x1 << 0),   /**< First EpochBlock of an Epoch */
  86:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_end = (0x1 << 1),     /**< Last EpochBlock of an Epoch */
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob = (0x1 << 2),          /**< Item is an Epoch Blob */
  88:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_last_eb = (0x1 << 3),       /**< Last EpochBlock */
  89:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_hw = (0x1 << 4),       /**< Pure HW EpochBlock */
  90:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_sw = (0x1 << 5),       /**< Pure SW EpochBlock */
  91:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_hybrid = (0x1 << 6),        /**< Hybrid EpochBlock (i.e. mixed HW/SW) */
  92:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_internal = (0x1 << 7),      /**< ATON lib internal EpochBlock (used to impleme
  93:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob_encrypted = (0x1 << 8) /**< The blob is encrypted and must be decrypted o
  94:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_Flags_t;
  95:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  96:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
  97:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  98:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t start_epoch_block; /**< Method to execute the EpochBlock */
  99:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t end_epoch_block;   /**< Method to be executed when the EpochBlock ends */
 100:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t blob_address;                 /**< Blob address (in case this EpochBlock represents a
ARM GAS  /tmp/ccyFtwdm.s 			page 47


 101:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t wait_mask;                     /**< Mask needed to check when an EpochBlock ends
 102:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - if epoch blob: number (not bitmask) of epoch co
 103:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - otherwise: bitmask with all output streaming en
 104:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t flags;                         /**< EpochBlock flags */
 105:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef LL_ATON_EB_DBG_INFO
 106:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t epoch_num;             /**< Epoch number / First epoch number within blob */
 107:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t last_epoch_num;        /**< Epoch number / Last epoch number within blob */
 108:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t in_streng_mask;       /**< Debug information about input streaming engines used in epo
 109:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t out_streng_mask;      /**< Debug information about output streaming engines used in ep
 110:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_npu_cycles; /**< Debug information estimates for NPU cycles in epoch w/o mem
 111:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_tot_cycles; /**< Debug information estimates for NPU cycles in epoch w/ memo
 112:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                             // LL_ATON_EB_DBG_INFO
 113:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_ItemTypeDef;
 114:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef EpochBlock_ItemTypeDef LL_ATON_RT_EpochBlockItem_t;
 115:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 116:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 117:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 118:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 119:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 120:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for User Callbacks
 121:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 122:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 123:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 124:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 125:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last one of an array of `const EpochBlock_ItemType
 126:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 127:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 128:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb);
 129:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 130:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 131:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the first EpochBlock of an Epoch
 132:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 133:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 134:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb);
 135:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 136:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 137:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last EpochBlock of an Epoch
 138:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 139:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 140:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb);
 141:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 142:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 143:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the an Epoch Blob
 144:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 145:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 146:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb);
 147:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 148:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 149:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if - in case this epoch is a blob (see above) - the blob is encrypted
 150:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 151:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 152:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb);
 153:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 154:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 155:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is pure SW epoch
 156:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 157:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
ARM GAS  /tmp/ccyFtwdm.s 			page 48


 158:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb);
 159:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 160:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 161:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a pure HW or mixed SW/HW epoch
 162:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 163:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 164:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb);
 165:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 166:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 167:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a hybrid epoch
 168:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 169:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 170:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb);
 171:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 172:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 173:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is an internal epoch
 174:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 175:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 176:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb);
 177:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 178:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 179:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the Epoch controller id to use
 180:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 181:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 182:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb);
 183:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 184:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 185:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the address of the configuration of the epoch controller (the blob address)
 186:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 187:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 188:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb);
 189:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 190:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 191:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer types definition
 192:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 193:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 194:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 195:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 196:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 197:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 198:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Input, Output, and Internal Buffers
 199:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 200:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 201:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 202:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 203:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 204:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UNDEFINED = 0,
 205:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT = 1,
 206:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT2 = 2,
 207:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT2 = 3,
 208:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT4 = 4,
 209:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT4 = 5,
 210:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT8 = 6,
 211:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT8 = 7,
 212:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT16 = 8,
 213:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT16 = 9,
 214:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT32 = 10,
ARM GAS  /tmp/ccyFtwdm.s 			page 49


 215:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT64 = 11,
 216:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_STRING = 12,
 217:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BOOL = 13,
 218:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT16 = 14,
 219:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_DOUBLE = 15,
 220:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT32 = 16,
 221:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT64 = 17,
 222:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX64 = 18,
 223:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX128 = 19,
 224:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BFLOAT16 = 20,
 225:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FXP = 100 // AtoNN specific
 226:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_DataType_TypeDef;
 227:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 228:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 229:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer Channel position
 230:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 231:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 232:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 233:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 234:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_UNDEFINED = 0, /**< No channel present */
 235:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_First = 1,     /**< Channel First         ( ...B C H W )*/
 236:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Last = 2,      /**< Channel Last          ( ...B H W C ) */
 237:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Mixed = 3,     /**< Channel with Batch(b) ( ...B C/b H W b ) */
 238:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_CHPos_TypeDef;
 239:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 240:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 241:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer definition
 242:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 243:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 244:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 245:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *name;             /**< Buffer name. NULL if end of list */
 246:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     __LL_address_t addr_base;     /**< Buffer base address */
 247:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_start;        /**< Offset of the buffer start address from the base address */
 248:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_end;          /**< Offset of the buffer end address from the base address
 249:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (first bytes address beyond buffer length) */
 250:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_limit;        /**< Offset of the limiter address from the base address,
 251:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (needed for configuring streaming engines) */
 252:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_user_allocated;    /**< */
 253:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_param;             /**< */
 254:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t epoch;               /**< */
 255:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t batch;               /**< */
 256:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *mem_shape;    /**< shape as seen by the user in memory (only valid for input/ou
 257:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t mem_ndims;           /**< Number of dimensions of mem_shape (Length of mem_shape) */
 258:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_CHPos_TypeDef chpos;   /**< Position  of channels dimension in mem shape */
 259:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_DataType_TypeDef type; /**< */
 260:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qm;                    /**< */
 261:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qn;                    /**< */
 262:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t Qunsigned;            /**< */
 263:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t ndims;                /**< */
 264:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t nbits;                /**< */
 265:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t per_channel;          /**< */
 266:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *shape;        /**< */
 267:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const float *scale;           /**< */
 268:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const int16_t *offset;        /**< This can become int8 or uint8 based on the Qunsigned field.
 269:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (This field Must have the same format of the quantized value
 270:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_Buffer_InfoTypeDef;
 271:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 50


 272:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 273:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 274:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 275:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 276:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for Buffer Analysis
 277:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 278:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 279:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 280:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 281:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the base address of the mem pool the buffer is allocated in
 282:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 283:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 284:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf);
 285:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 286:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 287:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the start address of the buffer
 288:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 289:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 290:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf);
 291:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 292:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 293:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the end address of the buffer
 294:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 295:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 296:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf);
 297:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 298:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 299:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the limit address of the buffer
 300:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 301:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 302:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf);
 303:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 304:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 305:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the length of the buffer
 306:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 307:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 308:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf);
 309:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 310:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 311:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the buffer elements number of bits
 312:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 313:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 314:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_bits(const LL_Buffer_InfoTypeDef *buf);
 315:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 316:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 317:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 318:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 319:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 320:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types and Declaration Macros for ATON Runtime Execution & User AP
 321:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 322:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 323:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 324:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct; // forward declaration
 325:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct __nn_instance_struct NN_Instance_TypeDef;
 326:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 327:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
 328:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief Declare the function prototypes for named NN interface functions generated by the AtoNN c
ARM GAS  /tmp/ccyFtwdm.s 			page 51


 329:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param network_name name of the network as provided by option `--network-name`
 330:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
 331:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)                                              
 332:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Network_Init_##network_name(void);                                        
 333:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Inference_Init_##network_name(void);                                      
 334:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_##network_name(uint32_t num, void *
 335:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                uint32_t size);     
 336:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Input_Buffer_##network_name(uint32_t num);                         
 337:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_##network_name(uint32_t num, void 
 338:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                 uint32_t size);    
 339:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Output_Buffer_##network_name(uint32_t num);                        
 340:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_##network_name(void);               
 341:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Output_Buffers_Info_##network_name(void);            
 342:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_##network_name(void);             
 343:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Internal_Buffers_Info_##network_name(void);
 344:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 345:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 346:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Type definitions for NN interface functions
 347:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 348:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef bool (*NN_EC_Hook_TypeDef)(void);
 349:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_InputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t s
 350:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_InputGetter_TypeDef)(uint32_t num);
 351:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_OutputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t 
 352:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_OutputGetter_TypeDef)(uint32_t num);
 353:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const EpochBlock_ItemTypeDef *(*NN_EpochBlockItems_TypeDef)(void);
 354:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const LL_Buffer_InfoTypeDef *(*NN_Buffers_Info_TypeDef)(void);
 355:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 356:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceRuntime_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype);
 357:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 358:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceEpochBlock_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype, const NN_Instance_Type
 359:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                             const EpochBlock_ItemTypeDef *epoch_block);
 360:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 361:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 362:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 363:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *network_name;
 364:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_network_init;
 365:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_inference_init;
 366:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputSetter_TypeDef input_setter;
 367:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputGetter_TypeDef input_getter;
 368:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputSetter_TypeDef output_setter;
 369:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputGetter_TypeDef output_getter;
 370:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EpochBlockItems_TypeDef epoch_block_items;
 371:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef output_buffers_info;
 372:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef input_buffers_info;
 373:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef internal_buffers_info;
 374:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Interface_TypeDef;
 375:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 376:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 377:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 378:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile current_epoch_block; // pointer to current epoch block
 379:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile first_epoch_block;   // pointer to first epoch block in 
 380:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile next_epoch_block;    // pointer to epoch block to be ins
 381:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 382:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile saved_current_epoch_block; // pointer to saved current e
 383:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef
 384:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         *volatile saved_first_epoch_block; // pointer to saved first epoch block in current epoch l
 385:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 52


 386:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     bool inference_started; // inference has been started
 387:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 388:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 389:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t triggered_events;        // currently triggered events/IRQs in current epoch
 390:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile bool current_epoch_block_started; // has current epoch block already been started
 391:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                         // (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 392:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 393:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef NDEBUG
 394:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t
 395:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         nr_of_epoch_blocks; // number of epoch blocks in network (includes also terminating empty e
 396:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t saved_nr_of_epoch_blocks; // number of epoch blocks in saved network (include
 397:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                 // empty epoch block)
 398:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                          // NDEBUG
 399:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 400:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     TraceEpochBlock_FuncPtr_t epoch_callback_function; // epoch callback function
 401:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 402:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if defined(LL_ATON_RT_RELOC)
 403:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t inst_reloc;
 404:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
 405:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 406:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Execution_State_TypeDef;
 407:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 408:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct
 409:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 410:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const NN_Interface_TypeDef *network;
 411:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Execution_State_TypeDef exec_state;
 412:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   };
 413:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 414:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 415:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 416:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 417:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 418:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Inline Implementations
 419:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 420:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 421:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 422:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb)
 423:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 424:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_last_eb) != 0);
 425:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 426:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 427:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb)
 428:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 429:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_start) != 0);
 430:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 431:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 432:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb)
 433:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 434:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_end) != 0);
 435:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 436:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 437:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb)
 438:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 439:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob) != 0);
 440:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 441:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 442:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb)
ARM GAS  /tmp/ccyFtwdm.s 			page 53


 443:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 444:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob_encrypted) != 0);
 445:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 446:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 447:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb)
 448:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 449:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_sw) != 0);
 450:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 451:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 452:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb)
 453:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 454:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_hw) != 0);
 455:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 456:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 457:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb)
 458:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 459:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_hybrid) != 0);
 460:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 461:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 462:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb)
 463:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 464:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_internal) != 0);
 465:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 466:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 467:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb)
 468:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 469:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 470:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->wait_mask;
 471:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 472:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 473:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb)
 474:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 475:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 476:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->blob_address;
 477:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 478:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf)
 480:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     if (buf->is_user_allocated)
 482:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       unsigned char **tmp = (unsigned char **)buf->addr_base.p;
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
 485:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 486:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->addr_base.p;
 487:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 488:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 489:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf)
 490:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_start;
 492:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 493:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 494:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf)
 495:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 496:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_end;
 497:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 498:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 499:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf)
ARM GAS  /tmp/ccyFtwdm.s 			page 54


 500:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 501:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_limit;
 502:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 503:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf)
 844              		.loc 2 504 26 view .LVU235
 845              	.LBB169:
 505:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 506:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->offset_end - buf->offset_start;
 846              		.loc 2 506 5 view .LVU236
 847              		.loc 2 506 5 is_stmt 0 view .LVU237
 848              	.LBE169:
 849              	.LBE168:
 850              	.LBB171:
 851              	.LBB172:
 852              	.LBB173:
 853              	.LBB174:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 854              		.loc 2 481 8 view .LVU238
 855 0014 217D     		ldrb	r1, [r4, #20]	@ zero_extendqisi2
 856              	.LBE174:
 857              	.LBE173:
 858              	.LBE172:
 859              	.LBE171:
 860              	.LBB180:
 861              	.LBB170:
 862              		.loc 2 506 28 view .LVU239
 863 0016 D0E90223 		ldrd	r2, r3, [r0, #8]
 864 001a 9B1A     		subs	r3, r3, r2
 865 001c 6268     		ldr	r2, [r4, #4]
 866              	.LBE170:
 867              	.LBE180:
 823:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 868              		.loc 1 823 19 discriminator 1 view .LVU240
 869 001e 0293     		str	r3, [sp, #8]
 824:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 870              		.loc 1 824 3 is_stmt 1 view .LVU241
 871              	.LVL54:
 872              	.LBB181:
 873              	.LBI171:
 489:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 874              		.loc 2 489 32 view .LVU242
 875              	.LBB178:
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 876              		.loc 2 491 5 view .LVU243
 877              	.LBB177:
 878              	.LBI173:
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 879              		.loc 2 479 32 view .LVU244
 880              	.LBB176:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 881              		.loc 2 481 5 view .LVU245
 486:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 882              		.loc 2 486 26 is_stmt 0 view .LVU246
 883 0020 1346     		mov	r3, r2
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 884              		.loc 2 481 8 view .LVU247
ARM GAS  /tmp/ccyFtwdm.s 			page 55


 885 0022 01B1     		cbz	r1, .L51
 886              	.LBB175:
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
 887              		.loc 2 483 7 is_stmt 1 view .LVU248
 888              	.LVL55:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 889              		.loc 2 484 7 view .LVU249
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 890              		.loc 2 484 14 is_stmt 0 view .LVU250
 891 0024 1368     		ldr	r3, [r2]
 892              	.LVL56:
 893              	.L51:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 894              		.loc 2 484 14 view .LVU251
 895              	.LBE175:
 896              	.LBE176:
 897              	.LBE177:
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 898              		.loc 2 491 42 discriminator 1 view .LVU252
 899 0026 A268     		ldr	r2, [r4, #8]
 900              	.LVL57:
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 901              		.loc 2 491 42 discriminator 1 view .LVU253
 902              	.LBE178:
 903              	.LBE181:
 839:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 904              		.loc 1 839 9 view .LVU254
 905 0028 7849     		ldr	r1, .L70
 906              	.LBB182:
 907              	.LBB179:
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 908              		.loc 2 491 37 discriminator 1 view .LVU255
 909 002a 1344     		add	r3, r3, r2
 910              	.LBE179:
 911              	.LBE182:
 824:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 912              		.loc 1 824 28 discriminator 1 view .LVU256
 913 002c 0393     		str	r3, [sp, #12]
 825:Src/app.c     **** 
 914              		.loc 1 825 3 is_stmt 1 view .LVU257
 915              	.LVL58:
 916              	.LBB183:
 917              	.LBI183:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 918              		.loc 2 504 26 view .LVU258
 919              	.LBB184:
 920              		.loc 2 506 5 view .LVU259
 921              		.loc 2 506 28 is_stmt 0 view .LVU260
 922 002e E368     		ldr	r3, [r4, #12]
 923              	.LBE184:
 924              	.LBE183:
 839:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 925              		.loc 1 839 9 view .LVU261
 926 0030 05A8     		add	r0, sp, #20
 927              	.LVL59:
 928              	.LBB186:
 929              	.LBB185:
ARM GAS  /tmp/ccyFtwdm.s 			page 56


 930              		.loc 2 506 28 view .LVU262
 931 0032 9B1A     		subs	r3, r3, r2
 932              	.LBE185:
 933              	.LBE186:
 825:Src/app.c     **** 
 934              		.loc 1 825 32 discriminator 1 view .LVU263
 935 0034 0493     		str	r3, [sp, #16]
 828:Src/app.c     ****   info->static_param.nb_total_boxes = 8400;  // Example: Standard for YOLOv8
 936              		.loc 1 828 3 is_stmt 1 view .LVU264
 829:Src/app.c     ****   info->static_param.max_boxes_limit = 100;  // Max boxes after NMS
 937              		.loc 1 829 37 is_stmt 0 view .LVU265
 938 0036 5022     		movs	r2, #80
 939 0038 42F2D003 		movw	r3, #8400
 940 003c CDE90523 		strd	r2, r3, [sp, #20]
 830:Src/app.c     ****   info->static_param.conf_threshold = 0.40f; // Confidence threshold
 941              		.loc 1 830 3 is_stmt 1 view .LVU266
 830:Src/app.c     ****   info->static_param.conf_threshold = 0.40f; // Confidence threshold
 942              		.loc 1 830 38 is_stmt 0 view .LVU267
 943 0040 6423     		movs	r3, #100
 944 0042 0793     		str	r3, [sp, #28]
 831:Src/app.c     ****   info->static_param.iou_threshold = 0.45f;  // IoU threshold for NMS
 945              		.loc 1 831 3 is_stmt 1 view .LVU268
 831:Src/app.c     ****   info->static_param.iou_threshold = 0.45f;  // IoU threshold for NMS
 946              		.loc 1 831 37 is_stmt 0 view .LVU269
 947 0044 724B     		ldr	r3, .L70+4
 948 0046 0893     		str	r3, [sp, #32]	@ float
 832:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 949              		.loc 1 832 3 is_stmt 1 view .LVU270
 832:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 950              		.loc 1 832 36 is_stmt 0 view .LVU271
 951 0048 724B     		ldr	r3, .L70+8
 952 004a 0993     		str	r3, [sp, #36]	@ float
 834:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 953              		.loc 1 834 3 is_stmt 1 view .LVU272
 834:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 954              		.loc 1 834 39 is_stmt 0 view .LVU273
 955 004c 4FF07E53 		mov	r3, #1065353216
 956 0050 0A93     		str	r3, [sp, #40]	@ float
 835:Src/app.c     **** 
 957              		.loc 1 835 3 is_stmt 1 view .LVU274
 835:Src/app.c     **** 
 958              		.loc 1 835 44 is_stmt 0 view .LVU275
 959 0052 0023     		movs	r3, #0
 960 0054 8DF82C30 		strb	r3, [sp, #44]
 839:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 961              		.loc 1 839 3 is_stmt 1 view .LVU276
 839:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 962              		.loc 1 839 9 is_stmt 0 view .LVU277
 963 0058 FFF7FEFF 		bl	app_postprocess_init
 964              	.LVL60:
 840:Src/app.c     **** }
 965              		.loc 1 840 3 is_stmt 1 view .LVU278
 966 005c 0646     		mov	r6, r0
 967 005e 30B1     		cbz	r0, .L52
 840:Src/app.c     **** }
 968              		.loc 1 840 3 is_stmt 0 discriminator 1 view .LVU279
 969 0060 4FF45271 		mov	r1, #840
ARM GAS  /tmp/ccyFtwdm.s 			page 57


 970 0064 6C4B     		ldr	r3, .L70+12
 971 0066 6D4A     		ldr	r2, .L70+16
 972              	.LVL61:
 973              	.L69:
 840:Src/app.c     **** }
 974              		.loc 1 840 3 discriminator 1 view .LVU280
 975              	.LBE167:
 976              	.LBE166:
1225:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 977              		.loc 1 1225 3 discriminator 1 view .LVU281
 978 0068 6D48     		ldr	r0, .L70+20
 979 006a FFF7FEFF 		bl	__assert_func
 980              	.LVL62:
 981              	.L52:
1220:Src/app.c     **** 
 982              		.loc 1 1220 3 is_stmt 1 view .LVU282
1223:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 983              		.loc 1 1223 3 view .LVU283
1223:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 984              		.loc 1 1223 18 is_stmt 0 view .LVU284
 985 006e FFF7FEFF 		bl	HAL_GetTick
 986              	.LVL63:
 987              	.LBB187:
 988              	.LBB188:
 477:Src/app.c     ****   if (ret == pdFALSE)
 989              		.loc 1 477 9 view .LVU285
 990 0072 6C4C     		ldr	r4, .L70+24
 991              	.LBE188:
 992              	.LBE187:
1223:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 993              		.loc 1 1223 18 view .LVU286
 994 0074 0546     		mov	r5, r0
 995              	.LVL64:
1224:Src/app.c     ****   assert(nn_pipe_dst);
 996              		.loc 1 1224 3 is_stmt 1 view .LVU287
 997              	.LBB191:
 998              	.LBI187:
 472:Src/app.c     **** {
 999              		.loc 1 472 17 view .LVU288
 1000              	.LBB189:
 474:Src/app.c     ****   int ret;
 1001              		.loc 1 474 3 view .LVU289
 475:Src/app.c     **** 
 1002              		.loc 1 475 3 view .LVU290
 477:Src/app.c     ****   if (ret == pdFALSE)
 1003              		.loc 1 477 3 view .LVU291
 477:Src/app.c     ****   if (ret == pdFALSE)
 1004              		.loc 1 477 9 is_stmt 0 discriminator 4 view .LVU292
 1005 0076 3146     		mov	r1, r6
 1006 0078 2068     		ldr	r0, [r4]
 1007              	.LVL65:
 477:Src/app.c     ****   if (ret == pdFALSE)
 1008              		.loc 1 477 9 discriminator 4 view .LVU293
 1009 007a FFF7FEFF 		bl	xQueueSemaphoreTake
 1010              	.LVL66:
 478:Src/app.c     ****     return NULL;
 1011              		.loc 1 478 3 is_stmt 1 view .LVU294
ARM GAS  /tmp/ccyFtwdm.s 			page 58


 478:Src/app.c     ****     return NULL;
 1012              		.loc 1 478 6 is_stmt 0 view .LVU295
 1013 007e 20B9     		cbnz	r0, .L53
 1014              	.LVL67:
 1015              	.L54:
 478:Src/app.c     ****     return NULL;
 1016              		.loc 1 478 6 view .LVU296
 1017              	.LBE189:
 1018              	.LBE191:
1225:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1019              		.loc 1 1225 3 discriminator 1 view .LVU297
 1020 0080 40F2C941 		movw	r1, #1225
 1021 0084 684B     		ldr	r3, .L70+28
 1022 0086 694A     		ldr	r2, .L70+32
 1023 0088 EEE7     		b	.L69
 1024              	.LVL68:
 1025              	.L53:
 1026              	.LBB192:
 1027              	.LBB190:
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1028              		.loc 1 481 3 is_stmt 1 view .LVU298
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1029              		.loc 1 481 23 is_stmt 0 view .LVU299
 1030 008a D4F8B430 		ldr	r3, [r4, #180]
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1031              		.loc 1 481 7 view .LVU300
 1032 008e 04EB8302 		add	r2, r4, r3, lsl #2
 1033 0092 D2F8AC00 		ldr	r0, [r2, #172]
 1034              	.LVL69:
 482:Src/app.c     **** 
 1035              		.loc 1 482 3 is_stmt 1 view .LVU301
 482:Src/app.c     **** 
 1036              		.loc 1 482 37 is_stmt 0 view .LVU302
 1037 0096 D4F8A820 		ldr	r2, [r4, #168]
 482:Src/app.c     **** 
 1038              		.loc 1 482 32 view .LVU303
 1039 009a 0133     		adds	r3, r3, #1
 482:Src/app.c     **** 
 1040              		.loc 1 482 37 view .LVU304
 1041 009c 93FBF2F1 		sdiv	r1, r3, r2
 1042 00a0 02FB1133 		mls	r3, r2, r1, r3
 482:Src/app.c     **** 
 1043              		.loc 1 482 16 view .LVU305
 1044 00a4 C4F8B430 		str	r3, [r4, #180]
 484:Src/app.c     **** }
 1045              		.loc 1 484 3 is_stmt 1 view .LVU306
 1046              	.LVL70:
 484:Src/app.c     **** }
 1047              		.loc 1 484 3 is_stmt 0 view .LVU307
 1048              	.LBE190:
 1049              	.LBE192:
1225:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1050              		.loc 1 1225 3 is_stmt 1 view .LVU308
 1051 00a8 0028     		cmp	r0, #0
 1052 00aa E9D0     		beq	.L54
1226:Src/app.c     ****   while (1)
 1053              		.loc 1 1226 3 view .LVU309
ARM GAS  /tmp/ccyFtwdm.s 			page 59


1200:Src/app.c     ****   // Filtered inference times, will be updated with 0
 1054              		.loc 1 1200 9 is_stmt 0 view .LVU310
 1055 00ac 9FED608A 		vldr.32	s16, .L70+36
1226:Src/app.c     ****   while (1)
 1056              		.loc 1 1226 3 view .LVU311
 1057 00b0 3146     		mov	r1, r6
 1058 00b2 FFF7FEFF 		bl	CAM_NNPipe_Start
 1059              	.LVL71:
1226:Src/app.c     ****   while (1)
 1060              		.loc 1 1226 3 view .LVU312
 1061 00b6 18EE108A 		vmov	r8, s16
 1062              	.LBB193:
1235:Src/app.c     **** 
 1063              		.loc 1 1235 27 view .LVU313
 1064 00ba DFED5E8A 		vldr.32	s17, .L70+40
 1065              	.LBB194:
 1066              	.LBB195:
 855:Src/app.c     **** 
 1067              		.loc 1 855 3 view .LVU314
 1068 00be DFF84C91 		ldr	r9, .L70
 1069              	.LBB196:
 1070              	.LBB197:
 1071              	.LBB198:
 1072              		.file 3 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /******************************************************************************
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @file     cachel1_armv7.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @brief    CMSIS Level 1 Cache API for Armv7-M and later
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @version  V1.0.3
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @date     17. March 2023
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Copyright (c) 2020-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #if   defined ( __ICCARM__ )
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #elif defined (__clang__)
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma clang system_header    /* treat file as system include file */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef ARM_CACHEL1_ARMV7_H
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define ARM_CACHEL1_ARMV7_H
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 60


  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \ingroup  CMSIS_Core_FunctionInterface
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief    Functions that configure Instruction and Data cache.
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   @{
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /* Cache Size ID Register Macros */
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_DCACHE_LINE_SIZE
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_ICACHE_LINE_SIZE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable I-Cache
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on I-Cache
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable I-Cache
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off I-Cache
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 61


  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate I-Cache
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   I-Cache Invalidate by address
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache for the given address.
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   isize   size of memory block (in number of bytes)
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (volatile void *addr, int32_t isize)
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( isize > 0 ) {
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable D-Cache
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on D-Cache
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 62


 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable D-Cache
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off D-Cache
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     struct {
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } locals
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if ((defined(__GNUC__) || defined(__clang__)) && !defined(__OPTIMIZE__))
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        __ALIGNED(__SCB_DCACHE_LINE_SIZE)
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ;
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if !defined(__OPTIMIZE__)
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /*
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * For the endless loop issue with no optimization builds.
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * More details, see https://github.com/ARM-software/CMSIS_5/issues/620
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
ARM GAS  /tmp/ccyFtwdm.s 			page 63


 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * The issue only happens when local variables are in stack. If
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables are saved in general purpose register, then the function
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * is OK.
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * When local variables are in stack, after disabling the cache, flush the
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables cache line for data consistency.
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        */
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /* Clean and invalidate the local variable cache. */
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if defined(__ICCARM__)
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     /* As we can't align the stack to the cache line size, invalidate each of the variables */
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.sets;
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ways;
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ccsidr;
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals;
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.ccsidr = SCB->CCSIDR;
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.sets = (uint32_t)(CCSIDR_SETS(locals.ccsidr));
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       locals.ways = (uint32_t)(CCSIDR_WAYS(locals.ccsidr));
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((locals.sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((locals.ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (locals.ways-- != 0U);
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(locals.sets-- != 0U);
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate D-Cache
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
ARM GAS  /tmp/ccyFtwdm.s 			page 64


 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean D-Cache
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean D-Cache */
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean & Invalidate D-Cache
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and Invalidates D-Cache
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
ARM GAS  /tmp/ccyFtwdm.s 			page 65


 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Invalidate by address
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache for the given address.
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1073              		.loc 3 368 22 view .LVU315
 1074 00c2 DFF890A1 		ldr	r10, .L70+72
 1075              	.LVL72:
 1076              	.L63:
 1077              		.loc 3 368 22 view .LVU316
 1078              	.LBE198:
 1079              	.LBE197:
ARM GAS  /tmp/ccyFtwdm.s 			page 66


 1080              	.LBE196:
 1081              	.LBE195:
 1082              	.LBE194:
 1083              	.LBE193:
1227:Src/app.c     ****   {
 1084              		.loc 1 1227 3 is_stmt 1 view .LVU317
 1085              	.LBB216:
1229:Src/app.c     **** 
 1086              		.loc 1 1229 5 view .LVU318
1232:Src/app.c     ****     nn_period[1] = HAL_GetTick();
 1087              		.loc 1 1232 5 view .LVU319
1233:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1088              		.loc 1 1233 5 view .LVU320
1233:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1089              		.loc 1 1233 20 is_stmt 0 view .LVU321
 1090 00c6 FFF7FEFF 		bl	HAL_GetTick
 1091              	.LVL73:
1234:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1092              		.loc 1 1234 18 view .LVU322
 1093 00ca 431B     		subs	r3, r0, r5
 1094 00cc 07EE903A 		vmov	s15, r3	@ int
1235:Src/app.c     **** 
 1095              		.loc 1 1235 75 view .LVU323
 1096 00d0 B2EE0E7A 		vmov.f32	s14, #1.5e+1
 1097 00d4 F8EE677A 		vcvt.f32.u32	s15, s15
 1098 00d8 E8EE077A 		vfma.f32	s15, s16, s14
1233:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1099              		.loc 1 1233 20 view .LVU324
 1100 00dc 0746     		mov	r7, r0
 1101              	.LVL74:
1234:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1102              		.loc 1 1234 5 is_stmt 1 view .LVU325
1235:Src/app.c     **** 
 1103              		.loc 1 1235 5 view .LVU326
 1104              	.LBB209:
 1105              	.LBB210:
 500:Src/app.c     ****   assert(ret == pdTRUE);
 1106              		.loc 1 500 9 is_stmt 0 view .LVU327
 1107 00de 4FF0FF31 		mov	r1, #-1
 1108 00e2 606D     		ldr	r0, [r4, #84]
 1109              	.LVL75:
 500:Src/app.c     ****   assert(ret == pdTRUE);
 1110              		.loc 1 500 9 view .LVU328
 1111              	.LBE210:
 1112              	.LBE209:
1235:Src/app.c     **** 
 1113              		.loc 1 1235 27 view .LVU329
 1114 00e4 27EEA88A 		vmul.f32	s16, s15, s17
 1115              	.LVL76:
1238:Src/app.c     ****     assert(capture_buffer);
 1116              		.loc 1 1238 5 is_stmt 1 view .LVU330
 1117              	.LBB212:
 1118              	.LBI209:
 495:Src/app.c     **** {
 1119              		.loc 1 495 17 view .LVU331
 1120              	.LBB211:
 497:Src/app.c     ****   int ret;
ARM GAS  /tmp/ccyFtwdm.s 			page 67


 1121              		.loc 1 497 3 view .LVU332
 498:Src/app.c     **** 
 1122              		.loc 1 498 3 view .LVU333
 500:Src/app.c     ****   assert(ret == pdTRUE);
 1123              		.loc 1 500 3 view .LVU334
 500:Src/app.c     ****   assert(ret == pdTRUE);
 1124              		.loc 1 500 9 is_stmt 0 view .LVU335
 1125 00e8 FFF7FEFF 		bl	xQueueSemaphoreTake
 1126              	.LVL77:
 501:Src/app.c     **** 
 1127              		.loc 1 501 3 view .LVU336
 1128 00ec 0128     		cmp	r0, #1
 500:Src/app.c     ****   assert(ret == pdTRUE);
 1129              		.loc 1 500 9 view .LVU337
 1130 00ee 0546     		mov	r5, r0
 1131              	.LVL78:
 501:Src/app.c     **** 
 1132              		.loc 1 501 3 is_stmt 1 view .LVU338
 1133 00f0 04D0     		beq	.L55
 501:Src/app.c     **** 
 1134              		.loc 1 501 3 is_stmt 0 discriminator 1 view .LVU339
 1135 00f2 40F2F511 		movw	r1, #501
 1136 00f6 504B     		ldr	r3, .L70+44
 1137 00f8 504A     		ldr	r2, .L70+48
 1138 00fa B5E7     		b	.L69
 1139              	.L55:
 503:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1140              		.loc 1 503 3 is_stmt 1 view .LVU340
 503:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1141              		.loc 1 503 23 is_stmt 0 view .LVU341
 1142 00fc D4F8B830 		ldr	r3, [r4, #184]
 503:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1143              		.loc 1 503 7 view .LVU342
 1144 0100 04EB8302 		add	r2, r4, r3, lsl #2
 1145 0104 D2F8AC60 		ldr	r6, [r2, #172]
 1146              	.LVL79:
 504:Src/app.c     **** 
 1147              		.loc 1 504 3 is_stmt 1 view .LVU343
 504:Src/app.c     **** 
 1148              		.loc 1 504 39 is_stmt 0 view .LVU344
 1149 0108 D4F8A820 		ldr	r2, [r4, #168]
 504:Src/app.c     **** 
 1150              		.loc 1 504 34 view .LVU345
 1151 010c 0133     		adds	r3, r3, #1
 504:Src/app.c     **** 
 1152              		.loc 1 504 39 view .LVU346
 1153 010e 93FBF2F1 		sdiv	r1, r3, r2
 1154 0112 02FB1133 		mls	r3, r2, r1, r3
 504:Src/app.c     **** 
 1155              		.loc 1 504 17 view .LVU347
 1156 0116 C4F8B830 		str	r3, [r4, #184]
 506:Src/app.c     **** }
 1157              		.loc 1 506 3 is_stmt 1 view .LVU348
 1158              	.LVL80:
 506:Src/app.c     **** }
 1159              		.loc 1 506 3 is_stmt 0 view .LVU349
 1160              	.LBE211:
ARM GAS  /tmp/ccyFtwdm.s 			page 68


 1161              	.LBE212:
1239:Src/app.c     **** 
 1162              		.loc 1 1239 5 is_stmt 1 view .LVU350
 1163 011a 26B9     		cbnz	r6, .L56
1239:Src/app.c     **** 
 1164              		.loc 1 1239 5 is_stmt 0 discriminator 1 view .LVU351
 1165 011c 40F2D741 		movw	r1, #1239
 1166 0120 474B     		ldr	r3, .L70+52
 1167 0122 424A     		ldr	r2, .L70+32
 1168 0124 A0E7     		b	.L69
 1169              	.L56:
1245:Src/app.c     ****     
 1170              		.loc 1 1245 5 is_stmt 1 view .LVU352
 1171              	.LVL81:
 1172              	.LBB213:
 1173              	.LBI194:
 843:Src/app.c     **** {
 1174              		.loc 1 843 12 view .LVU353
 1175              	.LBB208:
 845:Src/app.c     ****   int detection_nb;
 1176              		.loc 1 845 3 view .LVU354
 846:Src/app.c     ****   int ret;
 1177              		.loc 1 846 3 view .LVU355
 847:Src/app.c     ****   int i;
 1178              		.loc 1 847 3 view .LVU356
 848:Src/app.c     **** 
 1179              		.loc 1 848 3 view .LVU357
 850:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1180              		.loc 1 850 3 view .LVU358
 850:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1181              		.loc 1 850 14 is_stmt 0 view .LVU359
 1182 0126 FFF7FEFF 		bl	HAL_GetTick
 1183              	.LVL82:
 852:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1184              		.loc 1 852 3 is_stmt 1 view .LVU360
 852:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1185              		.loc 1 852 9 is_stmt 0 view .LVU361
 1186 012a 3146     		mov	r1, r6
 1187 012c 0020     		movs	r0, #0
 1188 012e 029A     		ldr	r2, [sp, #8]
 1189 0130 FFF7FEFF 		bl	LL_ATON_Set_User_Input_Buffer_yolo_detector
 1190              	.LVL83:
 853:Src/app.c     **** 
 1191              		.loc 1 853 3 is_stmt 1 view .LVU362
 1192 0134 20B1     		cbz	r0, .L57
 853:Src/app.c     **** 
 1193              		.loc 1 853 3 is_stmt 0 discriminator 1 view .LVU363
 1194 0136 40F25531 		movw	r1, #853
 1195 013a 424B     		ldr	r3, .L70+56
 1196 013c 424A     		ldr	r2, .L70+60
 1197 013e 93E7     		b	.L69
 1198              	.L57:
 855:Src/app.c     **** 
 1199              		.loc 1 855 3 is_stmt 1 view .LVU364
 1200 0140 4846     		mov	r0, r9
 1201              	.LVL84:
 855:Src/app.c     **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 69


 1202              		.loc 1 855 3 is_stmt 0 view .LVU365
 1203 0142 FFF7FEFF 		bl	LL_ATON_RT_Main
 1204              	.LVL85:
 858:Src/app.c     **** 
 1205              		.loc 1 858 3 is_stmt 1 view .LVU366
 858:Src/app.c     **** 
 1206              		.loc 1 858 40 is_stmt 0 view .LVU367
 1207 0146 039B     		ldr	r3, [sp, #12]
 858:Src/app.c     **** 
 1208              		.loc 1 858 9 view .LVU368
 1209 0148 0EAA     		add	r2, sp, #56
 858:Src/app.c     **** 
 1210              		.loc 1 858 40 view .LVU369
 1211 014a 0193     		str	r3, [sp, #4]
 858:Src/app.c     **** 
 1212              		.loc 1 858 9 view .LVU370
 1213 014c 2946     		mov	r1, r5
 1214 014e 05AB     		add	r3, sp, #20
 1215 0150 01A8     		add	r0, sp, #4
 1216 0152 FFF7FEFF 		bl	app_postprocess_run
 1217              	.LVL86:
 861:Src/app.c     **** 
 1218              		.loc 1 861 3 is_stmt 1 view .LVU371
 864:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 1219              		.loc 1 864 3 view .LVU372
 864:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 1220              		.loc 1 864 17 discriminator 1 view .LVU373
 869:Src/app.c     **** 
 1221              		.loc 1 869 3 view .LVU374
 869:Src/app.c     **** 
 1222              		.loc 1 869 3 view .LVU375
 869:Src/app.c     **** 
 1223              		.loc 1 869 3 discriminator 1 view .LVU376
 1224 0156 049A     		ldr	r2, [sp, #16]
 1225              	.LVL87:
 1226              	.LBB207:
 1227              	.LBI196:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 1228              		.loc 3 358 27 view .LVU377
 1229              	.LBB206:
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1230              		.loc 3 361 5 view .LVU378
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1231              		.loc 3 361 8 is_stmt 0 view .LVU379
 1232 0158 002A     		cmp	r2, #0
 1233 015a 1ADD     		ble	.L58
 1234              	.LBB205:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1235              		.loc 3 362 8 is_stmt 1 view .LVU380
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1236              		.loc 3 362 36 is_stmt 0 view .LVU381
 1237 015c 039B     		ldr	r3, [sp, #12]
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1238              		.loc 3 362 52 view .LVU382
 1239 015e 03F01F01 		and	r1, r3, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1240              		.loc 3 362 32 view .LVU383
ARM GAS  /tmp/ccyFtwdm.s 			page 70


 1241 0162 1144     		add	r1, r1, r2
 1242              	.LVL88:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1243              		.loc 3 363 7 is_stmt 1 view .LVU384
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1244              		.loc 3 365 7 view .LVU385
 1245              	.LBB199:
 1246              	.LBI199:
 1247              		.file 4 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccyFtwdm.s 			page 71


  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccyFtwdm.s 			page 72


 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 73


 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
ARM GAS  /tmp/ccyFtwdm.s 			page 74


 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1248              		.loc 4 269 27 view .LVU386
 1249              	.LBB200:
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1250              		.loc 4 271 3 view .LVU387
 1251              		.syntax unified
 1252              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccyFtwdm.s 			page 75


 1253 0164 BFF34F8F 		dsb 0xF
 1254              	@ 0 "" 2
 1255              		.thumb
 1256              		.syntax unified
 1257              	.LBE200:
 1258              	.LBE199:
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1259              		.loc 3 371 25 is_stmt 0 discriminator 1 view .LVU388
 1260 0168 DA43     		mvns	r2, r3
 1261              	.LVL89:
 1262              		.loc 3 371 25 discriminator 1 view .LVU389
 1263 016a 5818     		adds	r0, r3, r1
 1264 016c 0244     		add	r2, r2, r0
 1265 016e 2039     		subs	r1, r1, #32
 1266              	.LVL90:
 1267              		.loc 3 371 25 discriminator 1 view .LVU390
 1268 0170 5209     		lsrs	r2, r2, #5
 1269 0172 2031     		adds	r1, r1, #32
 1270              	.LVL91:
 1271              		.loc 3 371 25 discriminator 1 view .LVU391
 1272 0174 02F1010E 		add	lr, r2, #1
 1273 0178 D8BF     		it	le
 1274 017a AE46     		movle	lr, r5
 1275 017c 4EF001E0 		dls	lr, lr
 1276              	.LVL92:
 1277              	.L59:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1278              		.loc 3 367 7 is_stmt 1 view .LVU392
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1279              		.loc 3 368 9 view .LVU393
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1280              		.loc 3 368 22 is_stmt 0 view .LVU394
 1281 0180 CAF85C32 		str	r3, [r10, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1282              		.loc 3 369 9 is_stmt 1 view .LVU395
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1283              		.loc 3 369 17 is_stmt 0 view .LVU396
 1284 0184 2033     		adds	r3, r3, #32
 1285              	.LVL93:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1286              		.loc 3 370 9 is_stmt 1 view .LVU397
 1287              		.loc 3 371 25 discriminator 1 view .LVU398
 1288 0186 0FF005C8 		le	lr, .L59
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 1289              		.loc 3 373 7 view .LVU399
 1290              	.LBB201:
 1291              	.LBI201:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1292              		.loc 4 269 27 view .LVU400
 1293              	.LBB202:
 1294              		.loc 4 271 3 view .LVU401
 1295              		.syntax unified
 1296              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1297 018a BFF34F8F 		dsb 0xF
ARM GAS  /tmp/ccyFtwdm.s 			page 76


 1298              	@ 0 "" 2
 1299              		.thumb
 1300              		.syntax unified
 1301              	.LBE202:
 1302              	.LBE201:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 1303              		.loc 3 374 7 view .LVU402
 1304              	.LBB203:
 1305              	.LBI203:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1306              		.loc 4 258 27 view .LVU403
 1307              	.LBB204:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1308              		.loc 4 260 3 view .LVU404
 1309              		.syntax unified
 1310              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1311 018e BFF36F8F 		isb 0xF
 1312              	@ 0 "" 2
 1313              	.LVL94:
 1314              		.thumb
 1315              		.syntax unified
 1316              	.L58:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1317              		.loc 4 260 3 is_stmt 0 view .LVU405
 1318              	.LBE204:
 1319              	.LBE203:
 1320              	.LBE205:
 1321              	.LBE206:
 1322              	.LBE207:
 869:Src/app.c     **** 
 1323              		.loc 1 869 3 is_stmt 1 discriminator 3 view .LVU406
 871:Src/app.c     **** 
 1324              		.loc 1 871 3 view .LVU407
 871:Src/app.c     **** 
 1325              		.loc 1 871 16 is_stmt 0 view .LVU408
 1326 0192 FFF7FEFF 		bl	HAL_GetTick
 1327              	.LVL95:
 873:Src/app.c     **** }
 1328              		.loc 1 873 3 is_stmt 1 view .LVU409
 873:Src/app.c     **** }
 1329              		.loc 1 873 3 is_stmt 0 view .LVU410
 1330              	.LBE208:
 1331              	.LBE213:
1247:Src/app.c     ****     pd_ms = 0;       // Set inference time to 0
 1332              		.loc 1 1247 5 is_stmt 1 view .LVU411
1248:Src/app.c     ****     hl_ms = 0;       // Set inference time to 0
 1333              		.loc 1 1248 5 view .LVU412
1249:Src/app.c     **** 
 1334              		.loc 1 1249 5 view .LVU413
1252:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 1335              		.loc 1 1252 5 view .LVU414
1253:Src/app.c     **** 
 1336              		.loc 1 1253 5 view .LVU415
1256:Src/app.c     **** 
 1337              		.loc 1 1256 5 view .LVU416
 1338              	.LBB214:
 1339              	.LBI214:
ARM GAS  /tmp/ccyFtwdm.s 			page 77


 487:Src/app.c     **** {
 1340              		.loc 1 487 13 view .LVU417
 1341              	.LBB215:
 489:Src/app.c     **** 
 1342              		.loc 1 489 3 view .LVU418
 491:Src/app.c     ****   assert(ret == pdTRUE);
 1343              		.loc 1 491 3 view .LVU419
 491:Src/app.c     ****   assert(ret == pdTRUE);
 1344              		.loc 1 491 9 is_stmt 0 view .LVU420
 1345 0196 0023     		movs	r3, #0
 1346 0198 2068     		ldr	r0, [r4]
 1347 019a 1A46     		mov	r2, r3
 1348 019c 1946     		mov	r1, r3
 1349 019e FFF7FEFF 		bl	xQueueGenericSend
 1350              	.LVL96:
 492:Src/app.c     **** }
 1351              		.loc 1 492 3 is_stmt 1 view .LVU421
 1352 01a2 0128     		cmp	r0, #1
 1353 01a4 04D0     		beq	.L60
 492:Src/app.c     **** }
 1354              		.loc 1 492 3 is_stmt 0 discriminator 1 view .LVU422
 1355 01a6 4FF4F671 		mov	r1, #492
 1356 01aa 234B     		ldr	r3, .L70+44
 1357 01ac 274A     		ldr	r2, .L70+64
 1358 01ae 5BE7     		b	.L69
 1359              	.L60:
 1360              	.LVL97:
 492:Src/app.c     **** }
 1361              		.loc 1 492 3 discriminator 1 view .LVU423
 1362              	.LBE215:
 1363              	.LBE214:
1262:Src/app.c     ****     assert(ret == pdTRUE);
 1364              		.loc 1 1262 5 is_stmt 1 view .LVU424
1262:Src/app.c     ****     assert(ret == pdTRUE);
 1365              		.loc 1 1262 11 is_stmt 0 view .LVU425
 1366 01b0 274D     		ldr	r5, .L70+68
 1367 01b2 4FF0FF31 		mov	r1, #-1
 1368 01b6 686D     		ldr	r0, [r5, #84]
 1369 01b8 FFF7FEFF 		bl	xQueueSemaphoreTake
 1370              	.LVL98:
1263:Src/app.c     **** 
 1371              		.loc 1 1263 5 is_stmt 1 view .LVU426
 1372 01bc 0128     		cmp	r0, #1
 1373 01be 04D0     		beq	.L61
1263:Src/app.c     **** 
 1374              		.loc 1 1263 5 is_stmt 0 discriminator 1 view .LVU427
 1375 01c0 40F2EF41 		movw	r1, #1263
 1376 01c4 1C4B     		ldr	r3, .L70+44
 1377 01c6 194A     		ldr	r2, .L70+32
 1378 01c8 4EE7     		b	.L69
 1379              	.L61:
1266:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
 1380              		.loc 1 1266 5 is_stmt 1 view .LVU428
1266:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
 1381              		.loc 1 1266 21 is_stmt 0 view .LVU429
 1382 01ca 0026     		movs	r6, #0
 1383              	.LVL99:
ARM GAS  /tmp/ccyFtwdm.s 			page 78


1276:Src/app.c     ****     assert(ret == pdTRUE);
 1384              		.loc 1 1276 11 view .LVU430
 1385 01cc 686D     		ldr	r0, [r5, #84]
 1386              	.LVL100:
1276:Src/app.c     ****     assert(ret == pdTRUE);
 1387              		.loc 1 1276 11 view .LVU431
 1388 01ce 3346     		mov	r3, r6
 1389 01d0 3246     		mov	r2, r6
 1390 01d2 3146     		mov	r1, r6
1268:Src/app.c     ****     disp.info.pd_hand_nb = 0;
 1391              		.loc 1 1268 28 view .LVU432
 1392 01d4 85ED2A8A 		vstr.32	s16, [r5, #168]
1267:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 1393              		.loc 1 1267 21 view .LVU433
 1394 01d8 C5E92B66 		strd	r6, r6, [r5, #172]
1268:Src/app.c     ****     disp.info.pd_hand_nb = 0;
 1395              		.loc 1 1268 5 is_stmt 1 view .LVU434
1269:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 1396              		.loc 1 1269 5 view .LVU435
1269:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 1397              		.loc 1 1269 26 is_stmt 0 view .LVU436
 1398 01dc C5F8C460 		str	r6, [r5, #196]
1270:Src/app.c     ****     disp.info.hands[0].is_valid = 0; // Set hand as invalid
 1399              		.loc 1 1270 5 is_stmt 1 view .LVU437
1270:Src/app.c     ****     disp.info.hands[0].is_valid = 0; // Set hand as invalid
 1400              		.loc 1 1270 27 is_stmt 0 view .LVU438
 1401 01e0 C5F8C880 		str	r8, [r5, #200]	@ float
1271:Src/app.c     **** 
 1402              		.loc 1 1271 5 is_stmt 1 view .LVU439
1271:Src/app.c     **** 
 1403              		.loc 1 1271 33 is_stmt 0 view .LVU440
 1404 01e4 C5F8CC60 		str	r6, [r5, #204]
1276:Src/app.c     ****     assert(ret == pdTRUE);
 1405              		.loc 1 1276 5 is_stmt 1 view .LVU441
1276:Src/app.c     ****     assert(ret == pdTRUE);
 1406              		.loc 1 1276 11 is_stmt 0 view .LVU442
 1407 01e8 FFF7FEFF 		bl	xQueueGenericSend
 1408              	.LVL101:
1277:Src/app.c     **** 
 1409              		.loc 1 1277 5 is_stmt 1 view .LVU443
 1410 01ec 0128     		cmp	r0, #1
 1411 01ee 04D0     		beq	.L62
1277:Src/app.c     **** 
 1412              		.loc 1 1277 5 is_stmt 0 discriminator 1 view .LVU444
 1413 01f0 40F2FD41 		movw	r1, #1277
 1414 01f4 104B     		ldr	r3, .L70+44
 1415 01f6 0D4A     		ldr	r2, .L70+32
 1416 01f8 36E7     		b	.L69
 1417              	.L62:
1280:Src/app.c     ****   }
 1418              		.loc 1 1280 5 is_stmt 1 view .LVU445
 1419 01fa 2868     		ldr	r0, [r5]
 1420              	.LVL102:
1280:Src/app.c     ****   }
 1421              		.loc 1 1280 5 is_stmt 0 view .LVU446
 1422 01fc 3346     		mov	r3, r6
 1423 01fe 3246     		mov	r2, r6
ARM GAS  /tmp/ccyFtwdm.s 			page 79


 1424 0200 3146     		mov	r1, r6
 1425 0202 FFF7FEFF 		bl	xQueueGenericSend
 1426              	.LVL103:
 1427              	.LBE216:
1227:Src/app.c     ****   {
 1428              		.loc 1 1227 9 is_stmt 1 view .LVU447
 1429              	.LBB217:
1233:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1430              		.loc 1 1233 18 is_stmt 0 discriminator 1 view .LVU448
 1431 0206 3D46     		mov	r5, r7
 1432              	.LBE217:
1228:Src/app.c     ****     uint8_t *capture_buffer;
 1433              		.loc 1 1228 3 view .LVU449
 1434 0208 5DE7     		b	.L63
 1435              	.L71:
 1436 020a 00BF     		.align	2
 1437              	.L70:
 1438 020c 00000000 		.word	NN_Instance_yolo_detector
 1439 0210 CDCCCC3E 		.word	1053609165
 1440 0214 6666E63E 		.word	1055286886
 1441 0218 00000000 		.word	.LC4
 1442 021c 00000000 		.word	__func__.9
 1443 0220 0E000000 		.word	.LC2
 1444 0224 00000000 		.word	nn_input_queue
 1445 0228 09000000 		.word	.LC5
 1446 022c 00000000 		.word	__func__.10
 1447 0230 00000000 		.word	0
 1448 0234 0000803D 		.word	1031798784
 1449 0238 00000000 		.word	.LC1
 1450 023c 00000000 		.word	__func__.8
 1451 0240 15000000 		.word	.LC6
 1452 0244 24000000 		.word	.LC7
 1453 0248 00000000 		.word	__func__.7
 1454 024c 00000000 		.word	__func__.6
 1455 0250 00000000 		.word	disp
 1456 0254 00ED00E0 		.word	-536810240
 1457              		.cfi_endproc
 1458              	.LFE7403:
 1460              		.section	.text.display_hand,"ax",%progbits
 1461              		.align	1
 1462              		.global	display_hand
 1463              		.syntax unified
 1464              		.thumb
 1465              		.thumb_func
 1467              	display_hand:
 1468              	.LVL104:
 1469              	.LFB7389:
 756:Src/app.c     ****   if (info->is_pd_displayed) {
 1470              		.loc 1 756 1 is_stmt 1 view -0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 72
 1473              		@ frame_needed = 0, uses_anonymous_args = 0
 757:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 1474              		.loc 1 757 3 view .LVU451
 756:Src/app.c     ****   if (info->is_pd_displayed) {
 1475              		.loc 1 756 1 is_stmt 0 view .LVU452
 1476 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
ARM GAS  /tmp/ccyFtwdm.s 			page 80


 1477              		.cfi_def_cfa_offset 32
 1478              		.cfi_offset 4, -32
 1479              		.cfi_offset 5, -28
 1480              		.cfi_offset 6, -24
 1481              		.cfi_offset 7, -20
 1482              		.cfi_offset 8, -16
 1483              		.cfi_offset 9, -12
 1484              		.cfi_offset 10, -8
 1485              		.cfi_offset 14, -4
 1486 0004 2DED048B 		vpush.64	{d8, d9}
 1487              		.cfi_def_cfa_offset 48
 1488              		.cfi_offset 80, -48
 1489              		.cfi_offset 81, -44
 1490              		.cfi_offset 82, -40
 1491              		.cfi_offset 83, -36
 757:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 1492              		.loc 1 757 6 view .LVU453
 1493 0008 8369     		ldr	r3, [r0, #24]
 756:Src/app.c     ****   if (info->is_pd_displayed) {
 1494              		.loc 1 756 1 view .LVU454
 1495 000a 0546     		mov	r5, r0
 1496 000c 0C46     		mov	r4, r1
 1497 000e 94B0     		sub	sp, sp, #80
 1498              		.cfi_def_cfa_offset 128
 757:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 1499              		.loc 1 757 6 view .LVU455
 1500 0010 002B     		cmp	r3, #0
 1501 0012 00F0FD80 		beq	.L73
 758:Src/app.c     ****     display_roi(&hand->roi);
 1502              		.loc 1 758 5 is_stmt 1 view .LVU456
 1503              	.LVL105:
 1504              	.LBB229:
 1505              	.LBI229:
 615:Src/app.c     **** {
 1506              		.loc 1 615 13 view .LVU457
 1507              	.LBB230:
 617:Src/app.c     ****   int x0, y0;
 1508              		.loc 1 617 3 view .LVU458
 618:Src/app.c     ****   int x1, y1;
 1509              		.loc 1 618 3 view .LVU459
 619:Src/app.c     ****   int w, h;
 1510              		.loc 1 619 3 view .LVU460
 620:Src/app.c     ****   int i;
 1511              		.loc 1 620 3 view .LVU461
 621:Src/app.c     **** 
 1512              		.loc 1 621 3 view .LVU462
 624:Src/app.c     ****   yc = (int)hand->y_center;
 1513              		.loc 1 624 3 view .LVU463
 624:Src/app.c     ****   yc = (int)hand->y_center;
 1514              		.loc 1 624 6 is_stmt 0 view .LVU464
 1515 0016 D1ED027A 		vldr.32	s15, [r1, #8]
 1516 001a FDEEE77A 		vcvt.s32.f32	s15, s15
 1517 001e 17EE900A 		vmov	r0, s15	@ int
 1518              	.LVL106:
 625:Src/app.c     ****   w = (int)hand->width;
 1519              		.loc 1 625 3 is_stmt 1 view .LVU465
 625:Src/app.c     ****   w = (int)hand->width;
ARM GAS  /tmp/ccyFtwdm.s 			page 81


 1520              		.loc 1 625 6 is_stmt 0 view .LVU466
 1521 0022 D1ED037A 		vldr.32	s15, [r1, #12]
 1522 0026 FDEEE77A 		vcvt.s32.f32	s15, s15
 1523 002a 17EE901A 		vmov	r1, s15	@ int
 1524              	.LVL107:
 626:Src/app.c     ****   h = (int)hand->height;
 1525              		.loc 1 626 3 is_stmt 1 view .LVU467
 627:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 1526              		.loc 1 627 3 view .LVU468
 627:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 1527              		.loc 1 627 5 is_stmt 0 view .LVU469
 1528 002e D4ED057A 		vldr.32	s15, [r4, #20]
 1529 0032 FDEEE77A 		vcvt.s32.f32	s15, s15
 1530 0036 17EE903A 		vmov	r3, s15	@ int
 1531              	.LVL108:
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1532              		.loc 1 628 3 is_stmt 1 view .LVU470
 626:Src/app.c     ****   h = (int)hand->height;
 1533              		.loc 1 626 5 is_stmt 0 view .LVU471
 1534 003a D4ED047A 		vldr.32	s15, [r4, #16]
 1535 003e FDEEE77A 		vcvt.s32.f32	s15, s15
 1536 0042 17EE902A 		vmov	r2, s15	@ int
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1537              		.loc 1 628 16 view .LVU472
 1538 0046 0132     		adds	r2, r2, #1
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1539              		.loc 1 628 21 view .LVU473
 1540 0048 02EBD272 		add	r2, r2, r2, lsr #31
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1541              		.loc 1 629 16 view .LVU474
 1542 004c 0133     		adds	r3, r3, #1
 1543              	.LVL109:
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1544              		.loc 1 628 21 view .LVU475
 1545 004e 5210     		asrs	r2, r2, #1
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1546              		.loc 1 629 21 view .LVU476
 1547 0050 03EBD373 		add	r3, r3, r3, lsr #31
 1548              	.LVL110:
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1549              		.loc 1 628 21 view .LVU477
 1550 0054 5242     		rsbs	r2, r2, #0
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1551              		.loc 1 629 21 view .LVU478
 1552 0056 5B10     		asrs	r3, r3, #1
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1553              		.loc 1 628 11 view .LVU479
 1554 0058 8618     		adds	r6, r0, r2
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1555              		.loc 1 629 21 view .LVU480
 1556 005a 5B42     		rsbs	r3, r3, #0
 630:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 1557              		.loc 1 630 6 view .LVU481
 1558 005c 801A     		subs	r0, r0, r2
 1559              	.LVL111:
 628:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 1560              		.loc 1 628 6 view .LVU482
ARM GAS  /tmp/ccyFtwdm.s 			page 82


 1561 005e 0296     		str	r6, [sp, #8]
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1562              		.loc 1 629 3 is_stmt 1 view .LVU483
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1563              		.loc 1 629 11 is_stmt 0 view .LVU484
 1564 0060 CE18     		adds	r6, r1, r3
 631:Src/app.c     ****   clamp_point(&x0, &y0);
 1565              		.loc 1 631 6 view .LVU485
 1566 0062 C91A     		subs	r1, r1, r3
 1567              	.LVL112:
 630:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 1568              		.loc 1 630 6 view .LVU486
 1569 0064 0490     		str	r0, [sp, #16]
 631:Src/app.c     ****   clamp_point(&x0, &y0);
 1570              		.loc 1 631 6 view .LVU487
 1571 0066 0C91     		str	r1, [sp, #48]
 632:Src/app.c     ****   clamp_point(&x1, &y1);
 1572              		.loc 1 632 3 view .LVU488
 1573 0068 02A8     		add	r0, sp, #8
 1574 006a 03A9     		add	r1, sp, #12
 629:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 1575              		.loc 1 629 6 view .LVU489
 1576 006c 0396     		str	r6, [sp, #12]
 630:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 1577              		.loc 1 630 3 is_stmt 1 view .LVU490
 631:Src/app.c     ****   clamp_point(&x0, &y0);
 1578              		.loc 1 631 3 view .LVU491
 632:Src/app.c     ****   clamp_point(&x1, &y1);
 1579              		.loc 1 632 3 view .LVU492
 1580 006e FFF7FEFF 		bl	clamp_point
 1581              	.LVL113:
 633:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 1582              		.loc 1 633 3 view .LVU493
 1583 0072 0CA9     		add	r1, sp, #48
 1584 0074 04A8     		add	r0, sp, #16
 1585 0076 FFF7FEFF 		bl	clamp_point
 1586              	.LVL114:
 634:Src/app.c     **** 
 1587              		.loc 1 634 3 view .LVU494
 1588 007a DDE90201 		ldrd	r0, r1, [sp, #8]
 1589 007e 4FF0FF23 		mov	r3, #-16711936
 1590 0082 049A     		ldr	r2, [sp, #16]
 1591 0084 0093     		str	r3, [sp]
 1592 0086 0C9B     		ldr	r3, [sp, #48]
 1593 0088 121A     		subs	r2, r2, r0
 1594 008a 5B1A     		subs	r3, r3, r1
 1595 008c FFF7FEFF 		bl	UTIL_LCD_DrawRect
 1596              	.LVL115:
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1597              		.loc 1 637 3 view .LVU495
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1598              		.loc 1 637 17 discriminator 1 view .LVU496
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1599              		.loc 1 637 10 is_stmt 0 view .LVU497
 1600 0090 0026     		movs	r6, #0
 1601              	.LBB231:
 638:Src/app.c     **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 83


 1602              		.loc 1 638 62 discriminator 3 view .LVU498
 1603 0092 DFF8A081 		ldr	r8, .L93+4
 1604 0096 664F     		ldr	r7, .L93
 1605              	.LVL116:
 1606              	.L75:
 638:Src/app.c     **** 
 1607              		.loc 1 638 5 is_stmt 1 view .LVU499
 640:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 1608              		.loc 1 640 25 is_stmt 0 view .LVU500
 1609 0098 A269     		ldr	r2, [r4, #24]
 638:Src/app.c     **** 
 1610              		.loc 1 638 62 discriminator 3 view .LVU501
 1611 009a 36F00203 		bics	r3, r6, #2
 640:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 1612              		.loc 1 640 25 view .LVU502
 1613 009e 02EBC602 		add	r2, r2, r6, lsl #3
 640:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 1614              		.loc 1 640 10 view .LVU503
 1615 00a2 D2ED007A 		vldr.32	s15, [r2]
 1616 00a6 FDEEE77A 		vcvt.s32.f32	s15, s15
 1617 00aa CDED027A 		vstr.32	s15, [sp, #8]	@ int
 641:Src/app.c     ****     clamp_point(&x0, &y0);
 1618              		.loc 1 641 10 view .LVU504
 1619 00ae D2ED017A 		vldr.32	s15, [r2, #4]
 638:Src/app.c     **** 
 1620              		.loc 1 638 62 discriminator 3 view .LVU505
 1621 00b2 0CBF     		ite	eq
 1622 00b4 C146     		moveq	r9, r8
 1623 00b6 B946     		movne	r9, r7
 1624              	.LVL117:
 640:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 1625              		.loc 1 640 5 is_stmt 1 view .LVU506
 641:Src/app.c     ****     clamp_point(&x0, &y0);
 1626              		.loc 1 641 5 view .LVU507
 641:Src/app.c     ****     clamp_point(&x0, &y0);
 1627              		.loc 1 641 10 is_stmt 0 view .LVU508
 1628 00b8 FDEEE77A 		vcvt.s32.f32	s15, s15
 642:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 1629              		.loc 1 642 5 view .LVU509
 1630 00bc 03A9     		add	r1, sp, #12
 1631 00be 02A8     		add	r0, sp, #8
 641:Src/app.c     ****     clamp_point(&x0, &y0);
 1632              		.loc 1 641 10 view .LVU510
 1633 00c0 CDED037A 		vstr.32	s15, [sp, #12]	@ int
 642:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 1634              		.loc 1 642 5 is_stmt 1 view .LVU511
 1635              	.LBE231:
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1636              		.loc 1 637 23 is_stmt 0 discriminator 2 view .LVU512
 1637 00c4 0136     		adds	r6, r6, #1
 1638              	.LVL118:
 1639              	.LBB232:
 642:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 1640              		.loc 1 642 5 view .LVU513
 1641 00c6 FFF7FEFF 		bl	clamp_point
 1642              	.LVL119:
 643:Src/app.c     ****   }
ARM GAS  /tmp/ccyFtwdm.s 			page 84


 1643              		.loc 1 643 5 is_stmt 1 view .LVU514
 1644 00ca DDE90201 		ldrd	r0, r1, [sp, #8]
 1645 00ce 4B46     		mov	r3, r9
 1646 00d0 0222     		movs	r2, #2
 1647 00d2 FFF7FEFF 		bl	UTIL_LCD_FillCircle
 1648              	.LVL120:
 1649              	.LBE232:
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1650              		.loc 1 637 23 discriminator 2 view .LVU515
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1651              		.loc 1 637 17 discriminator 1 view .LVU516
 1652 00d6 072E     		cmp	r6, #7
 1653 00d8 DED1     		bne	.L75
 1654              	.LVL121:
 637:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 1655              		.loc 1 637 17 is_stmt 0 discriminator 1 view .LVU517
 1656              	.LBE230:
 1657              	.LBE229:
 759:Src/app.c     ****   }
 1658              		.loc 1 759 5 is_stmt 1 view .LVU518
 1659              	.LBB233:
 1660              	.LBI233:
 692:Src/app.c     **** {
 1661              		.loc 1 692 13 view .LVU519
 1662              	.LBB234:
 694:Src/app.c     ****   int corners[4][2];
 1663              		.loc 1 694 3 view .LVU520
 695:Src/app.c     ****   int is_clamp;
 1664              		.loc 1 695 3 view .LVU521
 696:Src/app.c     ****   int i;
 1665              		.loc 1 696 3 view .LVU522
 697:Src/app.c     **** 
 1666              		.loc 1 697 3 view .LVU523
 700:Src/app.c     **** 
 1667              		.loc 1 700 3 view .LVU524
 1668              	.LBB235:
 1669              	.LBI235:
 656:Src/app.c     **** {
 1670              		.loc 1 656 13 view .LVU525
 1671              	.LBB236:
 658:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 1672              		.loc 1 658 3 view .LVU526
 659:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 1673              		.loc 1 659 14 is_stmt 0 view .LVU527
 1674 00da F6EE006A 		vmov.f32	s13, #5.0e-1
 659:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 1675              		.loc 1 659 6 view .LVU528
 1676 00de D4ED097A 		vldr.32	s15, [r4, #36]
 659:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 1677              		.loc 1 659 19 view .LVU529
 1678 00e2 94ED0A7A 		vldr.32	s14, [r4, #40]
 1679              	.LBB237:
 1680              	.LBB238:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1681              		.loc 1 652 11 view .LVU530
 1682 00e6 94ED0B9A 		vldr.32	s18, [r4, #44]
 1683              	.LBE238:
ARM GAS  /tmp/ccyFtwdm.s 			page 85


 1684              	.LBE237:
 659:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 1685              		.loc 1 659 14 view .LVU531
 1686 00ea 67EEE67A 		vnmul.f32	s15, s15, s13
 1687              	.LVL122:
 659:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 1688              		.loc 1 659 27 view .LVU532
 1689 00ee 27EE667A 		vnmul.f32	s14, s14, s13
 1690              	.LVL123:
 1691              	.LBB244:
 1692              	.LBB239:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1693              		.loc 1 652 11 view .LVU533
 1694 00f2 B7EEC99A 		vcvt.f64.f32	d9, s18
 1695 00f6 B1EE676A 		vneg.f32	s12, s15
 1696              	.LVL124:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1697              		.loc 1 652 11 view .LVU534
 1698 00fa F1EE476A 		vneg.f32	s13, s14
 1699              	.LVL125:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1700              		.loc 1 652 11 view .LVU535
 1701              	.LBE239:
 1702              	.LBE244:
 664:Src/app.c     **** 
 1703              		.loc 1 664 3 is_stmt 1 view .LVU536
 666:Src/app.c     ****   /* rotate */
 1704              		.loc 1 666 3 view .LVU537
 1705              	.LBB245:
 1706              	.LBB240:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1707              		.loc 1 652 11 is_stmt 0 view .LVU538
 1708 00fe B0EE490B 		vmov.f64	d0, d9
 1709              	.LBE240:
 1710              	.LBE245:
 666:Src/app.c     ****   /* rotate */
 1711              		.loc 1 666 3 view .LVU539
 1712 0102 CDED047A 		vstr.32	s15, [sp, #16]
 1713 0106 8DED057A 		vstr.32	s14, [sp, #20]
 1714 010a 8DED066A 		vstr.32	s12, [sp, #24]
 1715 010e 8DED077A 		vstr.32	s14, [sp, #28]
 1716 0112 8DED086A 		vstr.32	s12, [sp, #32]
 1717 0116 CDED096A 		vstr.32	s13, [sp, #36]
 1718 011a CDED0A7A 		vstr.32	s15, [sp, #40]
 1719 011e CDED0B6A 		vstr.32	s13, [sp, #44]
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1720              		.loc 1 668 3 is_stmt 1 view .LVU540
 1721              	.LVL126:
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1722              		.loc 1 668 17 discriminator 1 view .LVU541
 1723              	.LBB246:
 1724              	.LBB241:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1725              		.loc 1 652 11 is_stmt 0 view .LVU542
 1726 0122 FFF7FEFF 		bl	cos
 1727              	.LVL127:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
ARM GAS  /tmp/ccyFtwdm.s 			page 86


 1728              		.loc 1 652 11 view .LVU543
 1729 0126 B0EE408B 		vmov.f64	d8, d0
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1730              		.loc 1 652 31 discriminator 1 view .LVU544
 1731 012a B0EE490B 		vmov.f64	d0, d9
 1732 012e FFF7FEFF 		bl	sin
 1733              	.LVL128:
 1734              	.LBE241:
 1735              	.LBE246:
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1736              		.loc 1 668 10 view .LVU545
 1737 0132 4FF0040E 		mov	lr, #4
 1738 0136 0DF11009 		add	r9, sp, #16
 1739              	.LVL129:
 1740              	.LBB247:
 1741              	.LBB242:
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1742              		.loc 1 652 31 discriminator 1 view .LVU546
 1743 013a 4B46     		mov	r3, r9
 1744              	.LBE242:
 1745              	.LBE247:
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1746              		.loc 1 668 10 view .LVU547
 1747 013c 4EF001E0 		dls	lr, lr
 1748              	.LVL130:
 1749              	.L76:
 669:Src/app.c     **** 
 1750              		.loc 1 669 5 is_stmt 1 view .LVU548
 1751              	.LBB248:
 1752              	.LBI237:
 647:Src/app.c     **** {
 1753              		.loc 1 647 13 view .LVU549
 1754              	.LBB243:
 649:Src/app.c     ****   float y = pt[1];
 1755              		.loc 1 649 3 view .LVU550
 650:Src/app.c     **** 
 1756              		.loc 1 650 3 view .LVU551
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1757              		.loc 1 652 3 view .LVU552
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1758              		.loc 1 652 45 is_stmt 0 discriminator 2 view .LVU553
 1759 0140 93ED017A 		vldr.32	s14, [r3, #4]
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1760              		.loc 1 652 25 discriminator 1 view .LVU554
 1761 0144 93ED005A 		vldr.32	s10, [r3]
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1762              		.loc 1 652 45 discriminator 2 view .LVU555
 1763 0148 B7EEC77A 		vcvt.f64.f32	d7, s14
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1764              		.loc 1 652 25 discriminator 1 view .LVU556
 1765 014c B7EEC55A 		vcvt.f64.f32	d5, s10
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1766              		.loc 1 652 29 discriminator 2 view .LVU557
 1767 0150 27EE406B 		vnmul.f64	d6, d7, d0
 653:Src/app.c     **** }
 1768              		.loc 1 653 45 discriminator 2 view .LVU558
 1769 0154 28EE077B 		vmul.f64	d7, d8, d7
ARM GAS  /tmp/ccyFtwdm.s 			page 87


 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1770              		.loc 1 652 29 discriminator 2 view .LVU559
 1771 0158 A8EE056B 		vfma.f64	d6, d8, d5
 653:Src/app.c     **** }
 1772              		.loc 1 653 29 discriminator 2 view .LVU560
 1773 015c A5EE007B 		vfma.f64	d7, d5, d0
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1774              		.loc 1 652 29 discriminator 2 view .LVU561
 1775 0160 B7EEC66B 		vcvt.f32.f64	s12, d6
 653:Src/app.c     **** }
 1776              		.loc 1 653 29 discriminator 2 view .LVU562
 1777 0164 B7EEC77B 		vcvt.f32.f64	s14, d7
 652:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 1778              		.loc 1 652 29 discriminator 2 view .LVU563
 1779 0168 83ED006A 		vstr.32	s12, [r3]
 1780              	.LVL131:
 653:Src/app.c     **** }
 1781              		.loc 1 653 3 is_stmt 1 view .LVU564
 653:Src/app.c     **** }
 1782              		.loc 1 653 29 is_stmt 0 discriminator 2 view .LVU565
 1783 016c 83ED017A 		vstr.32	s14, [r3, #4]
 1784              	.LVL132:
 653:Src/app.c     **** }
 1785              		.loc 1 653 29 discriminator 2 view .LVU566
 1786              	.LBE243:
 1787              	.LBE248:
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1788              		.loc 1 668 23 is_stmt 1 discriminator 3 view .LVU567
 668:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 1789              		.loc 1 668 17 discriminator 1 view .LVU568
 1790 0170 0833     		adds	r3, r3, #8
 1791 0172 0FF01BC8 		le	lr, .L76
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1792              		.loc 1 672 10 is_stmt 0 view .LVU569
 1793 0176 4FF0040E 		mov	lr, #4
 673:Src/app.c     ****     corners[i][1] += roi->cy;
 1794              		.loc 1 673 25 view .LVU570
 1795 017a D4ED076A 		vldr.32	s13, [r4, #28]
 674:Src/app.c     ****   }
 1796              		.loc 1 674 25 view .LVU571
 1797 017e 94ED087A 		vldr.32	s14, [r4, #32]
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1798              		.loc 1 672 10 view .LVU572
 1799 0182 4EF001E0 		dls	lr, lr
 674:Src/app.c     ****   }
 1800              		.loc 1 674 25 view .LVU573
 1801 0186 04AB     		add	r3, sp, #16
 1802              	.L77:
 673:Src/app.c     ****     corners[i][1] += roi->cy;
 1803              		.loc 1 673 5 is_stmt 1 view .LVU574
 673:Src/app.c     ****     corners[i][1] += roi->cy;
 1804              		.loc 1 673 19 is_stmt 0 view .LVU575
 1805 0188 D3ED007A 		vldr.32	s15, [r3]
 1806 018c 77EEA67A 		vadd.f32	s15, s15, s13
 1807 0190 C3ED007A 		vstr.32	s15, [r3]
 674:Src/app.c     ****   }
 1808              		.loc 1 674 5 is_stmt 1 view .LVU576
ARM GAS  /tmp/ccyFtwdm.s 			page 88


 674:Src/app.c     ****   }
 1809              		.loc 1 674 19 is_stmt 0 view .LVU577
 1810 0194 D3ED017A 		vldr.32	s15, [r3, #4]
 1811 0198 77EE877A 		vadd.f32	s15, s15, s14
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1812              		.loc 1 672 17 discriminator 1 view .LVU578
 1813 019c 0833     		adds	r3, r3, #8
 674:Src/app.c     ****   }
 1814              		.loc 1 674 19 view .LVU579
 1815 019e 43ED017A 		vstr.32	s15, [r3, #-4]
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1816              		.loc 1 672 23 is_stmt 1 discriminator 3 view .LVU580
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1817              		.loc 1 672 17 discriminator 1 view .LVU581
 1818 01a2 0FF00FC8 		le	lr, .L77
 1819              	.LBE236:
 1820              	.LBE235:
 1821              	.LBB250:
 1822              	.LBB251:
 680:Src/app.c     ****   int i;
 1823              		.loc 1 680 7 is_stmt 0 view .LVU582
 1824 01a6 0026     		movs	r6, #0
 680:Src/app.c     ****   int i;
 1825              		.loc 1 680 7 view .LVU583
 1826 01a8 0CAF     		add	r7, sp, #48
 1827              	.LBE251:
 1828              	.LBE250:
 1829              	.LBB253:
 1830              	.LBB249:
 672:Src/app.c     ****     corners[i][0] += roi->cx;
 1831              		.loc 1 672 17 discriminator 1 view .LVU584
 1832 01aa B846     		mov	r8, r7
 1833              	.LBE249:
 1834              	.LBE253:
 1835              	.LBB254:
 1836              	.LBB252:
 683:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 1837              		.loc 1 683 10 view .LVU585
 1838 01ac B246     		mov	r10, r6
 1839              	.LVL133:
 1840              	.L78:
 684:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 1841              		.loc 1 684 5 is_stmt 1 view .LVU586
 684:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 1842              		.loc 1 684 25 is_stmt 0 view .LVU587
 1843 01ae D9ED007A 		vldr.32	s15, [r9]
 1844 01b2 FDEEE77A 		vcvt.s32.f32	s15, s15
 1845 01b6 C8ED007A 		vstr.32	s15, [r8]	@ int
 685:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 1846              		.loc 1 685 5 is_stmt 1 view .LVU588
 685:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 1847              		.loc 1 685 25 is_stmt 0 view .LVU589
 1848 01ba D9ED017A 		vldr.32	s15, [r9, #4]
 1849 01be FDEEE77A 		vcvt.s32.f32	s15, s15
 1850 01c2 4146     		mov	r1, r8
 1851 01c4 17EE903A 		vmov	r3, s15	@ int
 686:Src/app.c     ****   }
ARM GAS  /tmp/ccyFtwdm.s 			page 89


 1852              		.loc 1 686 17 view .LVU590
 1853 01c8 4046     		mov	r0, r8
 685:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 1854              		.loc 1 685 25 view .LVU591
 1855 01ca 41F8043F 		str	r3, [r1, #4]!
 686:Src/app.c     ****   }
 1856              		.loc 1 686 5 is_stmt 1 view .LVU592
 686:Src/app.c     ****   }
 1857              		.loc 1 686 17 is_stmt 0 view .LVU593
 1858 01ce FFF7FEFF 		bl	clamp_point
 1859              	.LVL134:
 683:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 1860              		.loc 1 683 23 discriminator 3 view .LVU594
 1861 01d2 0AF1010A 		add	r10, r10, #1
 1862              	.LVL135:
 683:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 1863              		.loc 1 683 17 discriminator 1 view .LVU595
 1864 01d6 BAF1040F 		cmp	r10, #4
 686:Src/app.c     ****   }
 1865              		.loc 1 686 14 discriminator 1 view .LVU596
 1866 01da 46EA0006 		orr	r6, r6, r0
 1867              	.LVL136:
 683:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 1868              		.loc 1 683 23 is_stmt 1 discriminator 3 view .LVU597
 683:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 1869              		.loc 1 683 17 discriminator 1 view .LVU598
 1870 01de 09F10809 		add	r9, r9, #8
 1871 01e2 08F10808 		add	r8, r8, #8
 1872 01e6 E2D1     		bne	.L78
 689:Src/app.c     **** }
 1873              		.loc 1 689 3 view .LVU599
 1874              	.LVL137:
 689:Src/app.c     **** }
 1875              		.loc 1 689 3 is_stmt 0 view .LVU600
 1876              	.LBE252:
 1877              	.LBE254:
 704:Src/app.c     ****     return ;
 1878              		.loc 1 704 3 is_stmt 1 view .LVU601
 704:Src/app.c     ****     return ;
 1879              		.loc 1 704 6 is_stmt 0 view .LVU602
 1880 01e8 96B9     		cbnz	r6, .L73
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1881              		.loc 1 709 5 view .LVU603
 1882 01ea DFF84480 		ldr	r8, .L93
 1883              	.LVL138:
 1884              	.L79:
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1885              		.loc 1 709 5 is_stmt 1 view .LVU604
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1886              		.loc 1 709 64 is_stmt 0 view .LVU605
 1887 01ee 0136     		adds	r6, r6, #1
 1888              	.LVL139:
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1889              		.loc 1 709 98 view .LVU606
 1890 01f0 14AB     		add	r3, sp, #80
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1891              		.loc 1 709 69 view .LVU607
ARM GAS  /tmp/ccyFtwdm.s 			page 90


 1892 01f2 06F00302 		and	r2, r6, #3
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1893              		.loc 1 709 5 view .LVU608
 1894 01f6 CDF80080 		str	r8, [sp]
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1895              		.loc 1 709 98 view .LVU609
 1896 01fa 03EBC202 		add	r2, r3, r2, lsl #3
 709:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 1897              		.loc 1 709 5 view .LVU610
 1898 01fe 7968     		ldr	r1, [r7, #4]
 1899 0200 52E90823 		ldrd	r2, r3, [r2, #-32]
 1900 0204 57F8080B 		ldr	r0, [r7], #8
 1901 0208 FFF7FEFF 		bl	UTIL_LCD_DrawLine
 1902              	.LVL140:
 708:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 1903              		.loc 1 708 23 is_stmt 1 discriminator 3 view .LVU611
 708:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 1904              		.loc 1 708 17 discriminator 1 view .LVU612
 1905 020c 042E     		cmp	r6, #4
 1906 020e EED1     		bne	.L79
 1907              	.LVL141:
 1908              	.L73:
 708:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 1909              		.loc 1 708 17 is_stmt 0 discriminator 1 view .LVU613
 1910              	.LBE234:
 1911              	.LBE233:
 761:Src/app.c     ****     display_ld_hand(hand);
 1912              		.loc 1 761 3 is_stmt 1 view .LVU614
 761:Src/app.c     ****     display_ld_hand(hand);
 1913              		.loc 1 761 6 is_stmt 0 view .LVU615
 1914 0210 6B69     		ldr	r3, [r5, #20]
 1915 0212 3BB1     		cbz	r3, .L72
 762:Src/app.c     **** }
 1916              		.loc 1 762 5 is_stmt 1 view .LVU616
 1917 0214 2046     		mov	r0, r4
 763:Src/app.c     **** 
 1918              		.loc 1 763 1 is_stmt 0 view .LVU617
 1919 0216 14B0     		add	sp, sp, #80
 1920              		.cfi_remember_state
 1921              		.cfi_def_cfa_offset 48
 1922              		@ sp needed
 1923 0218 BDEC048B 		vldm	sp!, {d8-d9}
 1924              		.cfi_restore 82
 1925              		.cfi_restore 83
 1926              		.cfi_restore 80
 1927              		.cfi_restore 81
 1928              		.cfi_def_cfa_offset 32
 1929 021c BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 1930              		.cfi_restore 14
 1931              		.cfi_restore 10
 1932              		.cfi_restore 9
 1933              		.cfi_restore 8
 1934              		.cfi_restore 7
 1935              		.cfi_restore 6
 1936              		.cfi_restore 5
 1937              		.cfi_restore 4
 1938              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccyFtwdm.s 			page 91


 1939              	.LVL142:
 762:Src/app.c     **** }
 1940              		.loc 1 762 5 view .LVU618
 1941 0220 FFF7FEBF 		b	display_ld_hand
 1942              	.LVL143:
 1943              	.L72:
 1944              		.cfi_restore_state
 763:Src/app.c     **** 
 1945              		.loc 1 763 1 view .LVU619
 1946 0224 14B0     		add	sp, sp, #80
 1947              		.cfi_def_cfa_offset 48
 1948              		@ sp needed
 1949 0226 BDEC048B 		vldm	sp!, {d8-d9}
 1950              		.cfi_restore 82
 1951              		.cfi_restore 83
 1952              		.cfi_restore 80
 1953              		.cfi_restore 81
 1954              		.cfi_def_cfa_offset 32
 1955 022a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1956              	.LVL144:
 1957              	.L94:
 763:Src/app.c     **** 
 1958              		.loc 1 763 1 view .LVU620
 1959 022e 00BF     		.align	2
 1960              	.L93:
 1961 0230 0000FFFF 		.word	-65536
 1962 0234 FF0000FF 		.word	-16776961
 1963              		.cfi_endproc
 1964              	.LFE7389:
 1966              		.section	.rodata.dp_thread_fct.str1.1,"aMS",%progbits,1
 1967              	.LC8:
 1968 0000 72657420 		.ascii	"ret == HAL_OK\000"
 1968      3D3D2048 
 1968      414C5F4F 
 1968      4B00
 1969              		.global	__aeabi_ul2d
 1970              	.LC9:
 1971 000e 43707520 		.ascii	"Cpu load\000"
 1971      6C6F6164 
 1971      00
 1972              	.LC10:
 1973 0017 20202025 		.ascii	"   %.1f%%\000"
 1973      2E316625 
 1973      2500
 1974              	.LC11:
 1975 0021 496E6665 		.ascii	"Inferences\000"
 1975      72656E63 
 1975      657300
 1976              	.LC12:
 1977 002c 20706420 		.ascii	" pd %2ums\000"
 1977      2532756D 
 1977      7300
 1978              	.LC13:
 1979 0036 20686C20 		.ascii	" hl %2ums\000"
 1979      2532756D 
 1979      7300
 1980              	.LC14:
ARM GAS  /tmp/ccyFtwdm.s 			page 92


 1981 0040 2020252E 		.ascii	"  %.1f FPS\000"
 1981      31662046 
 1981      505300
 1982              		.section	.text.dp_thread_fct,"ax",%progbits
 1983              		.align	1
 1984              		.syntax unified
 1985              		.thumb
 1986              		.thumb_func
 1988              	dp_thread_fct:
 1989              	.LVL145:
 1990              	.LFB7409:
1426:Src/app.c     ****   button_t ld_toggle_button;
 1991              		.loc 1 1426 1 is_stmt 1 view -0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 288
 1994              		@ frame_needed = 0, uses_anonymous_args = 0
1427:Src/app.c     ****   button_t hd_toggle_button;
 1995              		.loc 1 1427 3 view .LVU622
1428:Src/app.c     ****   uint32_t disp_ms = 0;
 1996              		.loc 1 1428 3 view .LVU623
1429:Src/app.c     ****   display_info_t info;
 1997              		.loc 1 1429 3 view .LVU624
1430:Src/app.c     ****   uint32_t ts;
 1998              		.loc 1 1430 3 view .LVU625
1431:Src/app.c     ****   int ret;
 1999              		.loc 1 1431 3 view .LVU626
1432:Src/app.c     **** 
 2000              		.loc 1 1432 3 view .LVU627
1435:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
 2001              		.loc 1 1435 3 view .LVU628
1426:Src/app.c     ****   button_t ld_toggle_button;
 2002              		.loc 1 1426 1 is_stmt 0 view .LVU629
 2003 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2004              		.cfi_def_cfa_offset 36
 2005              		.cfi_offset 4, -36
 2006              		.cfi_offset 5, -32
 2007              		.cfi_offset 6, -28
 2008              		.cfi_offset 7, -24
 2009              		.cfi_offset 8, -20
 2010              		.cfi_offset 9, -16
 2011              		.cfi_offset 10, -12
 2012              		.cfi_offset 11, -8
 2013              		.cfi_offset 14, -4
 2014              	.LBB285:
 2015              	.LBB286:
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2016              		.loc 1 388 9 view .LVU630
 2017 0004 0021     		movs	r1, #0
 2018              	.LBE286:
 2019              	.LBE285:
1426:Src/app.c     ****   button_t ld_toggle_button;
 2020              		.loc 1 1426 1 view .LVU631
 2021 0006 2DED048B 		vpush.64	{d8, d9}
 2022              		.cfi_def_cfa_offset 52
 2023              		.cfi_offset 80, -52
 2024              		.cfi_offset 81, -48
 2025              		.cfi_offset 82, -44
ARM GAS  /tmp/ccyFtwdm.s 			page 93


 2026              		.cfi_offset 83, -40
 2027              	.LBB290:
 2028              	.LBB287:
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2029              		.loc 1 388 9 view .LVU632
 2030 000a 0846     		mov	r0, r1
 2031              	.LVL146:
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2032              		.loc 1 388 9 view .LVU633
 2033              	.LBE287:
 2034              	.LBE290:
1426:Src/app.c     ****   button_t ld_toggle_button;
 2035              		.loc 1 1426 1 view .LVU634
 2036 000c CBB0     		sub	sp, sp, #300
 2037              		.cfi_def_cfa_offset 352
 2038              	.LVL147:
 2039              	.LBB291:
 2040              	.LBI285:
 384:Src/app.c     **** {
 2041              		.loc 1 384 13 is_stmt 1 view .LVU635
 2042              	.LBB288:
 386:Src/app.c     **** 
 2043              		.loc 1 386 3 view .LVU636
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2044              		.loc 1 388 3 view .LVU637
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2045              		.loc 1 388 9 is_stmt 0 view .LVU638
 2046 000e FFF7FEFF 		bl	BSP_PB_Init
 2047              	.LVL148:
 389:Src/app.c     **** 
 2048              		.loc 1 389 3 is_stmt 1 view .LVU639
 2049 0012 0146     		mov	r1, r0
 2050 0014 08B1     		cbz	r0, .L96
 2051              	.LVL149:
 2052              	.L97:
 389:Src/app.c     **** 
 2053              		.loc 1 389 3 is_stmt 0 view .LVU640
 2054 0016 FFF7FEFF 		bl	button_init.part.0
 2055              	.LVL150:
 2056              	.L96:
 391:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2057              		.loc 1 391 3 is_stmt 1 view .LVU641
 392:Src/app.c     ****   b->prev_state = 0;
 2058              		.loc 1 392 23 is_stmt 0 view .LVU642
 2059 001a 974B     		ldr	r3, .L113+8
 394:Src/app.c     **** }
 2060              		.loc 1 394 14 view .LVU643
 2061 001c 974F     		ldr	r7, .L113+12
 393:Src/app.c     ****   b->cb_args = cb_args;
 2062              		.loc 1 393 17 view .LVU644
 2063 001e CDE90403 		strd	r0, r3, [sp, #16]
 391:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2064              		.loc 1 391 16 view .LVU645
 2065 0022 8DF80C00 		strb	r0, [sp, #12]
 392:Src/app.c     ****   b->prev_state = 0;
 2066              		.loc 1 392 3 is_stmt 1 view .LVU646
 394:Src/app.c     **** }
ARM GAS  /tmp/ccyFtwdm.s 			page 94


 2067              		.loc 1 394 3 view .LVU647
 2068              	.LBE288:
 2069              	.LBE291:
 2070              	.LBB292:
 2071              	.LBB293:
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2072              		.loc 1 388 9 is_stmt 0 view .LVU648
 2073 0026 0120     		movs	r0, #1
 2074              	.LVL151:
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2075              		.loc 1 388 9 view .LVU649
 2076              	.LBE293:
 2077              	.LBE292:
 2078              	.LBB297:
 2079              	.LBB289:
 394:Src/app.c     **** }
 2080              		.loc 1 394 14 view .LVU650
 2081 0028 0697     		str	r7, [sp, #24]
 2082              	.LVL152:
 394:Src/app.c     **** }
 2083              		.loc 1 394 14 view .LVU651
 2084              	.LBE289:
 2085              	.LBE297:
1436:Src/app.c     **** #else
 2086              		.loc 1 1436 3 is_stmt 1 view .LVU652
 2087              	.LBB298:
 2088              	.LBI292:
 384:Src/app.c     **** {
 2089              		.loc 1 384 13 view .LVU653
 2090              	.LBB294:
 386:Src/app.c     **** 
 2091              		.loc 1 386 3 view .LVU654
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2092              		.loc 1 388 3 view .LVU655
 388:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2093              		.loc 1 388 9 is_stmt 0 view .LVU656
 2094 002a FFF7FEFF 		bl	BSP_PB_Init
 2095              	.LVL153:
 389:Src/app.c     **** 
 2096              		.loc 1 389 3 is_stmt 1 view .LVU657
 2097 002e 0028     		cmp	r0, #0
 2098 0030 F1D1     		bne	.L97
 391:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2099              		.loc 1 391 3 view .LVU658
 391:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2100              		.loc 1 391 16 is_stmt 0 view .LVU659
 2101 0032 0123     		movs	r3, #1
 2102              	.LBE294:
 2103              	.LBE298:
1429:Src/app.c     ****   display_info_t info;
 2104              		.loc 1 1429 12 view .LVU660
 2105 0034 0446     		mov	r4, r0
 2106              	.LBB299:
 2107              	.LBB300:
 2108              	.LBB301:
 2109              	.LBB302:
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
ARM GAS  /tmp/ccyFtwdm.s 			page 95


 2110              		.loc 1 435 35 view .LVU661
 2111 0036 9FED8E9B 		vldr.64	d9, .L113
 2112              	.LBE302:
 2113              	.LBE301:
 2114              	.LBE300:
 2115              	.LBE299:
 2116              	.LBB312:
 2117              	.LBB295:
 391:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2118              		.loc 1 391 16 view .LVU662
 2119 003a 8DF81C30 		strb	r3, [sp, #28]
 392:Src/app.c     ****   b->prev_state = 0;
 2120              		.loc 1 392 3 is_stmt 1 view .LVU663
 392:Src/app.c     ****   b->prev_state = 0;
 2121              		.loc 1 392 23 is_stmt 0 view .LVU664
 2122 003e 904B     		ldr	r3, .L113+16
 2123              	.LBE295:
 2124              	.LBE312:
 2125              	.LBB313:
 2126              	.LBB314:
1385:Src/app.c     ****   assert(ret == HAL_OK);
 2127              		.loc 1 1385 47 view .LVU665
 2128 0040 DFF88492 		ldr	r9, .L113+88
 2129              	.LBE314:
 2130              	.LBE313:
 2131              	.LBB320:
 2132              	.LBB296:
 393:Src/app.c     ****   b->cb_args = cb_args;
 2133              		.loc 1 393 17 view .LVU666
 2134 0044 CDE90803 		strd	r0, r3, [sp, #32]
 394:Src/app.c     **** }
 2135              		.loc 1 394 3 is_stmt 1 view .LVU667
 394:Src/app.c     **** }
 2136              		.loc 1 394 14 is_stmt 0 view .LVU668
 2137 0048 0A97     		str	r7, [sp, #40]
 2138              	.LVL154:
 2139              	.L107:
 394:Src/app.c     **** }
 2140              		.loc 1 394 14 view .LVU669
 2141              	.LBE296:
 2142              	.LBE320:
1441:Src/app.c     ****   {
 2143              		.loc 1 1441 3 is_stmt 1 view .LVU670
1443:Src/app.c     ****     assert(ret == pdTRUE);
 2144              		.loc 1 1443 5 view .LVU671
1443:Src/app.c     ****     assert(ret == pdTRUE);
 2145              		.loc 1 1443 11 is_stmt 0 view .LVU672
 2146 004a 4FF0FF31 		mov	r1, #-1
 2147 004e 3868     		ldr	r0, [r7]
 2148 0050 FFF7FEFF 		bl	xQueueSemaphoreTake
 2149              	.LVL155:
1444:Src/app.c     **** 
 2150              		.loc 1 1444 5 is_stmt 1 view .LVU673
 2151 0054 0128     		cmp	r0, #1
 2152 0056 06D0     		beq	.L98
1444:Src/app.c     **** 
 2153              		.loc 1 1444 5 is_stmt 0 discriminator 1 view .LVU674
ARM GAS  /tmp/ccyFtwdm.s 			page 96


 2154 0058 40F2A451 		movw	r1, #1444
 2155 005c 894B     		ldr	r3, .L113+20
 2156 005e 8A4A     		ldr	r2, .L113+24
 2157              	.LVL156:
 2158              	.L112:
1450:Src/app.c     ****     info = disp.info;
 2159              		.loc 1 1450 5 discriminator 1 view .LVU675
 2160 0060 8A48     		ldr	r0, .L113+28
 2161 0062 FFF7FEFF 		bl	__assert_func
 2162              	.LVL157:
 2163              	.L98:
1446:Src/app.c     ****     button_process(&hd_toggle_button);
 2164              		.loc 1 1446 5 is_stmt 1 view .LVU676
 2165 0066 03A8     		add	r0, sp, #12
 2166              	.LVL158:
1446:Src/app.c     ****     button_process(&hd_toggle_button);
 2167              		.loc 1 1446 5 is_stmt 0 view .LVU677
 2168 0068 FFF7FEFF 		bl	button_process
 2169              	.LVL159:
1447:Src/app.c     **** 
 2170              		.loc 1 1447 5 is_stmt 1 view .LVU678
 2171 006c 07A8     		add	r0, sp, #28
 2172 006e FFF7FEFF 		bl	button_process
 2173              	.LVL160:
1449:Src/app.c     ****     assert(ret == pdTRUE);
 2174              		.loc 1 1449 5 view .LVU679
1449:Src/app.c     ****     assert(ret == pdTRUE);
 2175              		.loc 1 1449 11 is_stmt 0 view .LVU680
 2176 0072 4FF0FF31 		mov	r1, #-1
 2177 0076 786D     		ldr	r0, [r7, #84]
 2178 0078 FFF7FEFF 		bl	xQueueSemaphoreTake
 2179              	.LVL161:
1450:Src/app.c     ****     info = disp.info;
 2180              		.loc 1 1450 5 is_stmt 1 view .LVU681
 2181 007c 0128     		cmp	r0, #1
 2182 007e 04D0     		beq	.L99
1450:Src/app.c     ****     info = disp.info;
 2183              		.loc 1 1450 5 is_stmt 0 discriminator 1 view .LVU682
 2184 0080 40F2AA51 		movw	r1, #1450
 2185 0084 7F4B     		ldr	r3, .L113+20
 2186 0086 804A     		ldr	r2, .L113+24
 2187 0088 EAE7     		b	.L112
 2188              	.L99:
1451:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 2189              		.loc 1 1451 5 is_stmt 1 view .LVU683
1451:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 2190              		.loc 1 1451 10 is_stmt 0 view .LVU684
 2191 008a FC22     		movs	r2, #252
 2192 008c 8049     		ldr	r1, .L113+32
 2193 008e 0BA8     		add	r0, sp, #44
 2194              	.LVL162:
1451:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 2195              		.loc 1 1451 10 view .LVU685
 2196 0090 FFF7FEFF 		bl	memcpy
 2197              	.LVL163:
1452:Src/app.c     ****     assert(ret == pdTRUE);
 2198              		.loc 1 1452 5 is_stmt 1 view .LVU686
ARM GAS  /tmp/ccyFtwdm.s 			page 97


1452:Src/app.c     ****     assert(ret == pdTRUE);
 2199              		.loc 1 1452 11 is_stmt 0 view .LVU687
 2200 0094 0023     		movs	r3, #0
 2201 0096 786D     		ldr	r0, [r7, #84]
 2202 0098 1A46     		mov	r2, r3
 2203 009a 1946     		mov	r1, r3
 2204 009c FFF7FEFF 		bl	xQueueGenericSend
 2205              	.LVL164:
1453:Src/app.c     ****     info.disp_ms = disp_ms;
 2206              		.loc 1 1453 5 view .LVU688
 2207 00a0 0128     		cmp	r0, #1
1452:Src/app.c     ****     assert(ret == pdTRUE);
 2208              		.loc 1 1452 11 view .LVU689
 2209 00a2 0546     		mov	r5, r0
 2210              	.LVL165:
1453:Src/app.c     ****     info.disp_ms = disp_ms;
 2211              		.loc 1 1453 5 is_stmt 1 view .LVU690
 2212 00a4 04D0     		beq	.L100
1453:Src/app.c     ****     info.disp_ms = disp_ms;
 2213              		.loc 1 1453 5 is_stmt 0 discriminator 1 view .LVU691
 2214 00a6 40F2AD51 		movw	r1, #1453
 2215 00aa 764B     		ldr	r3, .L113+20
 2216 00ac 764A     		ldr	r2, .L113+24
 2217 00ae D7E7     		b	.L112
 2218              	.L100:
1454:Src/app.c     **** 
 2219              		.loc 1 1454 5 is_stmt 1 view .LVU692
1454:Src/app.c     **** 
 2220              		.loc 1 1454 18 is_stmt 0 view .LVU693
 2221 00b0 0F94     		str	r4, [sp, #60]
1456:Src/app.c     ****     dp_update_drawing_area();
 2222              		.loc 1 1456 5 is_stmt 1 view .LVU694
1456:Src/app.c     ****     dp_update_drawing_area();
 2223              		.loc 1 1456 10 is_stmt 0 view .LVU695
 2224 00b2 FFF7FEFF 		bl	HAL_GetTick
 2225              	.LVL166:
1456:Src/app.c     ****     dp_update_drawing_area();
 2226              		.loc 1 1456 10 view .LVU696
 2227 00b6 8246     		mov	r10, r0
 2228              	.LVL167:
1457:Src/app.c     ****     Display_NetworkOutput(&info);
 2229              		.loc 1 1457 5 is_stmt 1 view .LVU697
 2230              	.LBB321:
 2231              	.LBI313:
1380:Src/app.c     **** {
 2232              		.loc 1 1380 13 view .LVU698
 2233              	.LBB319:
1382:Src/app.c     **** 
 2234              		.loc 1 1382 3 view .LVU699
1384:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
 2235              		.loc 1 1384 3 view .LVU700
 2236              	.LBB315:
 2237              	.LBI315:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccyFtwdm.s 			page 98


 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 99


 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
ARM GAS  /tmp/ccyFtwdm.s 			page 100


 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccyFtwdm.s 			page 101


 447:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
ARM GAS  /tmp/ccyFtwdm.s 			page 102


 504:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccyFtwdm.s 			page 103


 561:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
ARM GAS  /tmp/ccyFtwdm.s 			page 104


 618:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
ARM GAS  /tmp/ccyFtwdm.s 			page 105


 675:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccyFtwdm.s 			page 106


 732:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
ARM GAS  /tmp/ccyFtwdm.s 			page 107


 789:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  /tmp/ccyFtwdm.s 			page 108


 846:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /tmp/ccyFtwdm.s 			page 109


 903:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccyFtwdm.s 			page 110


 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2238              		.loc 4 960 27 view .LVU701
 2239              	.LBB316:
 961:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2240              		.loc 4 962 3 view .LVU702
 2241              		.syntax unified
 2242              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2243 00b8 72B6     		cpsid i
 2244              	@ 0 "" 2
 2245              		.thumb
 2246              		.syntax unified
 2247              	.LBE316:
 2248              	.LBE315:
1385:Src/app.c     ****   assert(ret == HAL_OK);
 2249              		.loc 1 1385 3 view .LVU703
1385:Src/app.c     ****   assert(ret == HAL_OK);
 2250              		.loc 1 1385 47 is_stmt 0 view .LVU704
 2251 00ba DFF81082 		ldr	r8, .L113+92
 2252 00be D9F80030 		ldr	r3, [r9]
1385:Src/app.c     ****   assert(ret == HAL_OK);
 2253              		.loc 1 1385 9 view .LVU705
 2254 00c2 7448     		ldr	r0, .L113+36
 2255              	.LVL168:
1385:Src/app.c     ****   assert(ret == HAL_OK);
 2256              		.loc 1 1385 9 view .LVU706
 2257 00c4 2946     		mov	r1, r5
 2258 00c6 00FB0380 		mla	r0, r0, r3, r8
 2259 00ca FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 2260              	.LVL169:
1386:Src/app.c     ****   __enable_irq();
 2261              		.loc 1 1386 3 is_stmt 1 view .LVU707
 2262 00ce 8346     		mov	fp, r0
 2263 00d0 20B1     		cbz	r0, .L101
1386:Src/app.c     ****   __enable_irq();
 2264              		.loc 1 1386 3 is_stmt 0 discriminator 1 view .LVU708
 2265 00d2 40F26A51 		movw	r1, #1386
 2266 00d6 704B     		ldr	r3, .L113+40
 2267 00d8 704A     		ldr	r2, .L113+44
 2268 00da C1E7     		b	.L112
 2269              	.L101:
1387:Src/app.c     **** }
 2270              		.loc 1 1387 3 is_stmt 1 view .LVU709
 2271              	.LBB317:
 2272              	.LBI317:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2273              		.loc 4 949 27 view .LVU710
 2274              	.LBB318:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2275              		.loc 4 951 3 view .LVU711
 2276              		.syntax unified
 2277              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2278 00dc 62B6     		cpsie i
 2279              	@ 0 "" 2
 2280              	.LVL170:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2281              		.loc 4 951 3 is_stmt 0 view .LVU712
ARM GAS  /tmp/ccyFtwdm.s 			page 111


 2282              		.thumb
 2283              		.syntax unified
 2284              	.LBE318:
 2285              	.LBE317:
 2286              	.LBE319:
 2287              	.LBE321:
1458:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
 2288              		.loc 1 1458 5 is_stmt 1 view .LVU713
 2289              	.LBB322:
 2290              	.LBI299:
 765:Src/app.c     **** {
 2291              		.loc 1 765 13 view .LVU714
 2292              	.LBB311:
 767:Src/app.c     ****   int line_nb = 0;
 2293              		.loc 1 767 3 view .LVU715
 768:Src/app.c     ****   float nn_fps;
 2294              		.loc 1 768 3 view .LVU716
 769:Src/app.c     ****   int i;
 2295              		.loc 1 769 3 view .LVU717
 770:Src/app.c     **** 
 2296              		.loc 1 770 3 view .LVU718
 773:Src/app.c     **** 
 2297              		.loc 1 773 3 view .LVU719
 2298              	.LBB304:
 2299              	.LBB305:
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2300              		.loc 1 416 24 is_stmt 0 view .LVU720
 2301 00de 704C     		ldr	r4, .L113+48
 2302              	.LVL171:
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2303              		.loc 1 416 24 view .LVU721
 2304              	.LBE305:
 2305              	.LBE304:
 773:Src/app.c     **** 
 2306              		.loc 1 773 3 view .LVU722
 2307 00e0 4FF4F073 		mov	r3, #480
 2308 00e4 4FF44872 		mov	r2, #800
 2309 00e8 0146     		mov	r1, r0
 2310 00ea 0090     		str	r0, [sp]
 2311              	.LBB308:
 2312              	.LBB306:
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2313              		.loc 1 416 24 view .LVU723
 2314 00ec 04F13805 		add	r5, r4, #56
 2315              	.LVL172:
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2316              		.loc 1 416 24 view .LVU724
 2317 00f0 04F12006 		add	r6, r4, #32
 2318              	.LBE306:
 2319              	.LBE308:
 773:Src/app.c     **** 
 2320              		.loc 1 773 3 view .LVU725
 2321 00f4 FFF7FEFF 		bl	UTIL_LCD_FillRect
 2322              	.LVL173:
 776:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 2323              		.loc 1 776 3 is_stmt 1 view .LVU726
 2324              	.LBB309:
ARM GAS  /tmp/ccyFtwdm.s 			page 112


 2325              	.LBI304:
 412:Src/app.c     **** {
 2326              		.loc 1 412 13 view .LVU727
 2327              	.LBB307:
 414:Src/app.c     **** 
 2328              		.loc 1 414 3 view .LVU728
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2329              		.loc 1 416 3 view .LVU729
 416:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 2330              		.loc 1 416 24 is_stmt 0 view .LVU730
 2331 00f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 2332 00fa 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2333 00fc 96E80300 		ldm	r6, {r0, r1}
 2334 0100 85E80300 		stm	r5, {r0, r1}
 417:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 2335              		.loc 1 417 3 is_stmt 1 view .LVU731
 417:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 2336              		.loc 1 417 32 is_stmt 0 view .LVU732
 2337 0104 FFF7FEFF 		bl	TIM4_Get_Value
 2338              	.LVL174:
 2339 0108 0546     		mov	r5, r0
 417:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 2340              		.loc 1 417 30 discriminator 1 view .LVU733
 2341 010a C4E9080B 		strd	r0, fp, [r4, #32]
 418:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 2342              		.loc 1 418 3 is_stmt 1 view .LVU734
 418:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 2343              		.loc 1 418 62 is_stmt 0 view .LVU735
 2344 010e FFF7FEFF 		bl	ulTaskGetIdleRunTimeCounter
 2345              	.LVL175:
 418:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 2346              		.loc 1 418 60 discriminator 1 view .LVU736
 2347 0112 2D1A     		subs	r5, r5, r0
 2348 0114 63EB0303 		sbc	r3, r3, r3
 418:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 2349              		.loc 1 418 31 discriminator 1 view .LVU737
 2350 0118 C4E90A53 		strd	r5, r3, [r4, #40]
 419:Src/app.c     **** 
 2351              		.loc 1 419 3 is_stmt 1 view .LVU738
 419:Src/app.c     **** 
 2352              		.loc 1 419 31 is_stmt 0 view .LVU739
 2353 011c FFF7FEFF 		bl	HAL_GetTick
 2354              	.LVL176:
 421:Src/app.c     ****     return ;
 2355              		.loc 1 421 33 view .LVU740
 2356 0120 A36C     		ldr	r3, [r4, #72]
 2357 0122 226E     		ldr	r2, [r4, #96]
 419:Src/app.c     **** 
 2358              		.loc 1 419 29 discriminator 1 view .LVU741
 2359 0124 2063     		str	r0, [r4, #48]
 421:Src/app.c     ****     return ;
 2360              		.loc 1 421 3 is_stmt 1 view .LVU742
 421:Src/app.c     ****     return ;
 2361              		.loc 1 421 33 is_stmt 0 view .LVU743
 2362 0126 9B1A     		subs	r3, r3, r2
 421:Src/app.c     ****     return ;
 2363              		.loc 1 421 6 view .LVU744
ARM GAS  /tmp/ccyFtwdm.s 			page 113


 2364 0128 B3F57A7F 		cmp	r3, #1000
 2365 012c 06D3     		bcc	.L102
 425:Src/app.c     **** }
 2366              		.loc 1 425 55 view .LVU745
 2367 012e 9022     		movs	r2, #144
 2368 0130 04F13801 		add	r1, r4, #56
 2369 0134 04F15000 		add	r0, r4, #80
 2370 0138 FFF7FEFF 		bl	memmove
 2371              	.LVL177:
 2372              	.L102:
 425:Src/app.c     **** }
 2373              		.loc 1 425 55 view .LVU746
 2374              	.LBE307:
 2375              	.LBE309:
 777:Src/app.c     **** 
 2376              		.loc 1 777 3 is_stmt 1 view .LVU747
 2377              	.LBB310:
 2378              	.LBI301:
 428:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 2379              		.loc 1 428 13 view .LVU748
 2380              	.LBB303:
 431:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 2381              		.loc 1 431 3 view .LVU749
 434:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 2382              		.loc 1 434 3 view .LVU750
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2383              		.loc 1 435 5 view .LVU751
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2384              		.loc 1 435 66 is_stmt 0 view .LVU752
 2385 013c D4E91C23 		ldrd	r2, r3, [r4, #112]
 2386 0140 D4E91601 		ldrd	r0, r1, [r4, #88]
 2387 0144 801A     		subs	r0, r0, r2
 2388 0146 61EB0301 		sbc	r1, r1, r3
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2389              		.loc 1 435 35 view .LVU753
 2390 014a FFF7FEFF 		bl	__aeabi_ul2d
 2391              	.LVL178:
 436:Src/app.c     ****   if (cpu_load_last_five_seconds)
 2392              		.loc 1 436 50 view .LVU754
 2393 014e D4E91A32 		ldrd	r3, r2, [r4, #104]
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2394              		.loc 1 435 35 view .LVU755
 2395 0152 41EC180B 		vmov	d8, r0, r1
 436:Src/app.c     ****   if (cpu_load_last_five_seconds)
 2396              		.loc 1 436 50 view .LVU756
 2397 0156 D4E91401 		ldrd	r0, r1, [r4, #80]
 2398 015a C01A     		subs	r0, r0, r3
 2399 015c 61EB0201 		sbc	r1, r1, r2
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2400              		.loc 1 435 97 view .LVU757
 2401 0160 FFF7FEFF 		bl	__aeabi_ul2d
 2402              	.LVL179:
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2403              		.loc 1 435 35 view .LVU758
 2404 0164 28EE098B 		vmul.f64	d8, d8, d9
 435:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 2405              		.loc 1 435 97 view .LVU759
ARM GAS  /tmp/ccyFtwdm.s 			page 114


 2406 0168 41EC160B 		vmov	d6, r0, r1
 2407 016c 88EE067B 		vdiv.f64	d7, d8, d6
 2408 0170 B7EEC78B 		vcvt.f32.f64	s16, d7
 2409              	.LVL180:
 437:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 2410              		.loc 1 437 3 is_stmt 1 view .LVU760
 437:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 2411              		.loc 1 437 3 is_stmt 0 view .LVU761
 2412              	.LBE303:
 2413              	.LBE310:
 780:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 2414              		.loc 1 780 3 is_stmt 1 view .LVU762
 780:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 2415              		.loc 1 780 10 is_stmt 0 view .LVU763
 2416 0174 9FED4B7A 		vldr.32	s14, .L113+52
 2417 0178 DDED0B7A 		vldr.32	s15, [sp, #44]
 2418 017c C7EE278A 		vdiv.f32	s17, s14, s15
 2419              	.LVL181:
 781:Src/app.c     ****   line_nb += 1;
 2420              		.loc 1 781 3 is_stmt 1 view .LVU764
 781:Src/app.c     ****   line_nb += 1;
 2421              		.loc 1 781 26 is_stmt 0 view .LVU765
 2422 0180 FFF7FEFF 		bl	UTIL_LCD_GetFont
 2423              	.LVL182:
 781:Src/app.c     ****   line_nb += 1;
 2424              		.loc 1 781 3 discriminator 1 view .LVU766
 2425 0184 0021     		movs	r1, #0
 2426 0186 0222     		movs	r2, #2
 2427 0188 0846     		mov	r0, r1
 2428 018a 474B     		ldr	r3, .L113+56
 2429 018c FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2430              	.LVL183:
 782:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 2431              		.loc 1 782 3 is_stmt 1 view .LVU767
 783:Src/app.c     ****   line_nb += 2;
 2432              		.loc 1 783 3 view .LVU768
 783:Src/app.c     ****   line_nb += 2;
 2433              		.loc 1 783 26 is_stmt 0 view .LVU769
 2434 0190 FFF7FEFF 		bl	UTIL_LCD_GetFont
 2435              	.LVL184:
 783:Src/app.c     ****   line_nb += 2;
 2436              		.loc 1 783 3 discriminator 1 view .LVU770
 2437 0194 B7EEC87A 		vcvt.f64.f32	d7, s16
 2438 0198 C188     		ldrh	r1, [r0, #6]
 2439 019a 0222     		movs	r2, #2
 2440 019c 8DED007B 		vstr.64	d7, [sp]
 2441 01a0 424B     		ldr	r3, .L113+60
 2442 01a2 0020     		movs	r0, #0
 2443 01a4 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2444              	.LVL185:
 784:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 2445              		.loc 1 784 3 is_stmt 1 view .LVU771
 785:Src/app.c     ****   line_nb += 1;
 2446              		.loc 1 785 3 view .LVU772
 785:Src/app.c     ****   line_nb += 1;
 2447              		.loc 1 785 26 is_stmt 0 view .LVU773
 2448 01a8 FFF7FEFF 		bl	UTIL_LCD_GetFont
ARM GAS  /tmp/ccyFtwdm.s 			page 115


 2449              	.LVL186:
 785:Src/app.c     ****   line_nb += 1;
 2450              		.loc 1 785 26 discriminator 1 view .LVU774
 2451 01ac C188     		ldrh	r1, [r0, #6]
 785:Src/app.c     ****   line_nb += 1;
 2452              		.loc 1 785 3 discriminator 1 view .LVU775
 2453 01ae 0222     		movs	r2, #2
 2454 01b0 3F4B     		ldr	r3, .L113+64
 2455 01b2 01EB4101 		add	r1, r1, r1, lsl #1
 2456 01b6 0020     		movs	r0, #0
 2457 01b8 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2458              	.LVL187:
 786:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " pd %2ums", info->pd_ms);
 2459              		.loc 1 786 3 is_stmt 1 view .LVU776
 787:Src/app.c     ****   line_nb += 1;
 2460              		.loc 1 787 3 view .LVU777
 787:Src/app.c     ****   line_nb += 1;
 2461              		.loc 1 787 26 is_stmt 0 view .LVU778
 2462 01bc FFF7FEFF 		bl	UTIL_LCD_GetFont
 2463              	.LVL188:
 787:Src/app.c     ****   line_nb += 1;
 2464              		.loc 1 787 3 discriminator 1 view .LVU779
 2465 01c0 0222     		movs	r2, #2
 787:Src/app.c     ****   line_nb += 1;
 2466              		.loc 1 787 26 discriminator 1 view .LVU780
 2467 01c2 C188     		ldrh	r1, [r0, #6]
 787:Src/app.c     ****   line_nb += 1;
 2468              		.loc 1 787 3 discriminator 1 view .LVU781
 2469 01c4 0C9B     		ldr	r3, [sp, #48]
 2470 01c6 9140     		lsls	r1, r1, r2
 2471 01c8 0020     		movs	r0, #0
 2472 01ca 0093     		str	r3, [sp]
 2473 01cc 394B     		ldr	r3, .L113+68
 2474 01ce FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2475              	.LVL189:
 788:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " hl %2ums", info->hl_ms);
 2476              		.loc 1 788 3 is_stmt 1 view .LVU782
 789:Src/app.c     ****   line_nb += 2;
 2477              		.loc 1 789 3 view .LVU783
 789:Src/app.c     ****   line_nb += 2;
 2478              		.loc 1 789 26 is_stmt 0 view .LVU784
 2479 01d2 FFF7FEFF 		bl	UTIL_LCD_GetFont
 2480              	.LVL190:
 789:Src/app.c     ****   line_nb += 2;
 2481              		.loc 1 789 3 discriminator 1 view .LVU785
 2482 01d6 0D9B     		ldr	r3, [sp, #52]
 789:Src/app.c     ****   line_nb += 2;
 2483              		.loc 1 789 26 discriminator 1 view .LVU786
 2484 01d8 C188     		ldrh	r1, [r0, #6]
 789:Src/app.c     ****   line_nb += 2;
 2485              		.loc 1 789 3 discriminator 1 view .LVU787
 2486 01da 0222     		movs	r2, #2
 2487 01dc 01EB8101 		add	r1, r1, r1, lsl #2
 2488 01e0 0020     		movs	r0, #0
 2489 01e2 0093     		str	r3, [sp]
 2490 01e4 344B     		ldr	r3, .L113+72
 2491 01e6 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
ARM GAS  /tmp/ccyFtwdm.s 			page 116


 2492              	.LVL191:
 790:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 2493              		.loc 1 790 3 is_stmt 1 view .LVU788
 791:Src/app.c     ****   line_nb += 2;
 2494              		.loc 1 791 3 view .LVU789
 791:Src/app.c     ****   line_nb += 2;
 2495              		.loc 1 791 26 is_stmt 0 view .LVU790
 2496 01ea FFF7FEFF 		bl	UTIL_LCD_GetFont
 2497              	.LVL192:
 791:Src/app.c     ****   line_nb += 2;
 2498              		.loc 1 791 3 discriminator 1 view .LVU791
 2499 01ee B7EEE87A 		vcvt.f64.f32	d7, s17
 791:Src/app.c     ****   line_nb += 2;
 2500              		.loc 1 791 26 discriminator 1 view .LVU792
 2501 01f2 C188     		ldrh	r1, [r0, #6]
 791:Src/app.c     ****   line_nb += 2;
 2502              		.loc 1 791 3 discriminator 1 view .LVU793
 2503 01f4 314B     		ldr	r3, .L113+76
 2504 01f6 8DED007B 		vstr.64	d7, [sp]
 2505 01fa 0222     		movs	r2, #2
 2506 01fc 0020     		movs	r0, #0
 2507 01fe C1EBC101 		rsb	r1, r1, r1, lsl #3
 2508 0202 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 2509              	.LVL193:
 792:Src/app.c     ****   if (DBG_INFO) {
 2510              		.loc 1 792 3 is_stmt 1 view .LVU794
 793:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 2511              		.loc 1 793 3 view .LVU795
 801:Src/app.c     ****     if (info->hands[i].is_valid)
 2512              		.loc 1 801 3 view .LVU796
 801:Src/app.c     ****     if (info->hands[i].is_valid)
 2513              		.loc 1 801 17 discriminator 1 view .LVU797
 2514 0206 129B     		ldr	r3, [sp, #72]
 2515 0208 002B     		cmp	r3, #0
 2516 020a 05DD     		ble	.L103
 802:Src/app.c     ****       display_hand(info, &info->hands[i]);
 2517              		.loc 1 802 5 view .LVU798
 802:Src/app.c     ****       display_hand(info, &info->hands[i]);
 2518              		.loc 1 802 8 is_stmt 0 view .LVU799
 2519 020c 149B     		ldr	r3, [sp, #80]
 2520 020e 1BB1     		cbz	r3, .L103
 803:Src/app.c     ****   }
 2521              		.loc 1 803 7 is_stmt 1 view .LVU800
 2522 0210 14A9     		add	r1, sp, #80
 2523 0212 0BA8     		add	r0, sp, #44
 2524              	.LVL194:
 803:Src/app.c     ****   }
 2525              		.loc 1 803 7 is_stmt 0 view .LVU801
 2526 0214 FFF7FEFF 		bl	display_hand
 2527              	.LVL195:
 801:Src/app.c     ****     if (info->hands[i].is_valid)
 2528              		.loc 1 801 38 is_stmt 1 discriminator 2 view .LVU802
 801:Src/app.c     ****     if (info->hands[i].is_valid)
 2529              		.loc 1 801 17 discriminator 1 view .LVU803
 2530              	.L103:
 806:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 2531              		.loc 1 806 3 view .LVU804
ARM GAS  /tmp/ccyFtwdm.s 			page 117


 806:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 2532              		.loc 1 806 3 is_stmt 0 view .LVU805
 2533              	.LBE311:
 2534              	.LBE322:
1459:Src/app.c     ****     dp_commit_drawing_area();
 2535              		.loc 1 1459 5 is_stmt 1 view .LVU806
 2536              	.LBB323:
 2537              	.LBI323:
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean by address
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache for the given address
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned starting from a 32 byte aligned address in 32 byte granularity.
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned.
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (volatile void *addr, int32_t dsize)
 2538              		.loc 3 388 27 view .LVU807
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 2539              		.loc 3 391 5 view .LVU808
 2540              	.LBB324:
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2541              		.loc 3 392 8 view .LVU809
 2542              	.LBE324:
 2543              	.LBE323:
1459:Src/app.c     ****     dp_commit_drawing_area();
 2544              		.loc 1 1459 42 is_stmt 0 view .LVU810
 2545 0218 D9F80030 		ldr	r3, [r9]
 2546 021c 1D4A     		ldr	r2, .L113+36
 2547 021e 02FB0383 		mla	r3, r2, r3, r8
 2548              	.LVL196:
 2549              	.LBB332:
 2550              	.LBB331:
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2551              		.loc 3 393 7 is_stmt 1 view .LVU811
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2552              		.loc 3 395 7 view .LVU812
 2553              	.LBB325:
 2554              	.LBI325:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2555              		.loc 4 269 27 view .LVU813
 2556              	.LBB326:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2557              		.loc 4 271 3 view .LVU814
 2558              		.syntax unified
 2559              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2560 0222 BFF34F8F 		dsb 0xF
 2561              	@ 0 "" 2
 2562              		.thumb
ARM GAS  /tmp/ccyFtwdm.s 			page 118


 2563              		.syntax unified
 2564              	.LBE326:
 2565              	.LBE325:
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2566              		.loc 3 398 22 is_stmt 0 view .LVU815
 2567 0226 45F6C05E 		movw	lr, #24000
 2568 022a 4EF001E0 		dls	lr, lr
 2569 022e 244A     		ldr	r2, .L113+80
 2570              	.LVL197:
 2571              	.L105:
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2572              		.loc 3 397 7 is_stmt 1 view .LVU816
 2573              		.loc 3 398 9 view .LVU817
 2574              		.loc 3 398 22 is_stmt 0 view .LVU818
 2575 0230 C2F86832 		str	r3, [r2, #616]
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2576              		.loc 3 399 9 is_stmt 1 view .LVU819
 2577              		.loc 3 399 17 is_stmt 0 view .LVU820
 2578 0234 2033     		adds	r3, r3, #32
 2579              	.LVL198:
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2580              		.loc 3 400 9 is_stmt 1 view .LVU821
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2581              		.loc 3 401 25 discriminator 1 view .LVU822
 2582 0236 0FF005C8 		le	lr, .L105
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2583              		.loc 3 403 7 view .LVU823
 2584              	.LBB327:
 2585              	.LBI327:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2586              		.loc 4 269 27 view .LVU824
 2587              	.LBB328:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2588              		.loc 4 271 3 view .LVU825
 2589              		.syntax unified
 2590              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2591 023a BFF34F8F 		dsb 0xF
 2592              	@ 0 "" 2
 2593              		.thumb
 2594              		.syntax unified
 2595              	.LBE328:
 2596              	.LBE327:
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2597              		.loc 3 404 7 view .LVU826
 2598              	.LBB329:
 2599              	.LBI329:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2600              		.loc 4 258 27 view .LVU827
 2601              	.LBB330:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2602              		.loc 4 260 3 view .LVU828
 2603              		.syntax unified
 2604              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2605 023e BFF36F8F 		isb 0xF
ARM GAS  /tmp/ccyFtwdm.s 			page 119


 2606              	@ 0 "" 2
 2607              	.LVL199:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2608              		.loc 4 260 3 is_stmt 0 view .LVU829
 2609              		.thumb
 2610              		.syntax unified
 2611              	.LBE330:
 2612              	.LBE329:
 2613              	.LBE331:
 2614              	.LBE332:
1460:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
 2615              		.loc 1 1460 5 is_stmt 1 view .LVU830
 2616              	.LBB333:
 2617              	.LBI333:
1390:Src/app.c     **** {
 2618              		.loc 1 1390 13 view .LVU831
 2619              	.LBB334:
1392:Src/app.c     **** 
 2620              		.loc 1 1392 3 view .LVU832
1394:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
 2621              		.loc 1 1394 3 view .LVU833
 2622              	.LBB335:
 2623              	.LBI335:
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2624              		.loc 4 960 27 view .LVU834
 2625              	.LBB336:
 2626              		.loc 4 962 3 view .LVU835
 2627              		.syntax unified
 2628              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2629 0242 72B6     		cpsid i
 2630              	@ 0 "" 2
 2631              		.thumb
 2632              		.syntax unified
 2633              	.LBE336:
 2634              	.LBE335:
1395:Src/app.c     ****   assert(ret == HAL_OK);
 2635              		.loc 1 1395 3 view .LVU836
1395:Src/app.c     ****   assert(ret == HAL_OK);
 2636              		.loc 1 1395 9 is_stmt 0 view .LVU837
 2637 0244 0120     		movs	r0, #1
 2638 0246 FFF7FEFF 		bl	SCRL_ReloadLayer
 2639              	.LVL200:
1396:Src/app.c     ****   __enable_irq();
 2640              		.loc 1 1396 3 is_stmt 1 view .LVU838
 2641 024a 20B1     		cbz	r0, .L106
1396:Src/app.c     ****   __enable_irq();
 2642              		.loc 1 1396 3 is_stmt 0 discriminator 1 view .LVU839
 2643 024c 40F27451 		movw	r1, #1396
 2644 0250 114B     		ldr	r3, .L113+40
 2645 0252 1C4A     		ldr	r2, .L113+84
 2646 0254 04E7     		b	.L112
 2647              	.L106:
1397:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
 2648              		.loc 1 1397 3 is_stmt 1 view .LVU840
 2649              	.LBB337:
 2650              	.LBI337:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccyFtwdm.s 			page 120


 2651              		.loc 4 949 27 view .LVU841
 2652              	.LBB338:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2653              		.loc 4 951 3 view .LVU842
 2654              		.syntax unified
 2655              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2656 0256 62B6     		cpsie i
 2657              	@ 0 "" 2
 2658              		.thumb
 2659              		.syntax unified
 2660              	.LBE338:
 2661              	.LBE337:
1398:Src/app.c     **** }
 2662              		.loc 1 1398 3 view .LVU843
1398:Src/app.c     **** }
 2663              		.loc 1 1398 28 is_stmt 0 view .LVU844
 2664 0258 D9F80030 		ldr	r3, [r9]
 2665 025c C3F10103 		rsb	r3, r3, #1
1398:Src/app.c     **** }
 2666              		.loc 1 1398 24 view .LVU845
 2667 0260 C9F80030 		str	r3, [r9]
 2668              	.LVL201:
1398:Src/app.c     **** }
 2669              		.loc 1 1398 24 view .LVU846
 2670              	.LBE334:
 2671              	.LBE333:
1461:Src/app.c     ****   }
 2672              		.loc 1 1461 5 is_stmt 1 view .LVU847
1461:Src/app.c     ****   }
 2673              		.loc 1 1461 15 is_stmt 0 view .LVU848
 2674 0264 FFF7FEFF 		bl	HAL_GetTick
 2675              	.LVL202:
1461:Src/app.c     ****   }
 2676              		.loc 1 1461 13 discriminator 1 view .LVU849
 2677 0268 A0EB0A04 		sub	r4, r0, r10
 2678              	.LVL203:
1441:Src/app.c     ****   {
 2679              		.loc 1 1441 9 is_stmt 1 view .LVU850
1443:Src/app.c     ****     assert(ret == pdTRUE);
 2680              		.loc 1 1443 9 is_stmt 0 view .LVU851
 2681 026c EDE6     		b	.L107
 2682              	.L114:
 2683 026e 00BF     		.align	3
 2684              	.L113:
 2685 0270 00000000 		.word	0
 2686 0274 00005940 		.word	1079574528
 2687 0278 00000000 		.word	on_ld_toggle_button_click
 2688 027c 00000000 		.word	disp
 2689 0280 00000000 		.word	on_pd_toggle_button_click
 2690 0284 00000000 		.word	.LC1
 2691 0288 00000000 		.word	__func__.16
 2692 028c 0E000000 		.word	.LC2
 2693 0290 A8000000 		.word	disp+168
 2694 0294 00B80B00 		.word	768000
 2695 0298 00000000 		.word	.LC8
 2696 029c 00000000 		.word	__func__.12
 2697 02a0 00000000 		.word	cpu_load
ARM GAS  /tmp/ccyFtwdm.s 			page 121


 2698 02a4 00007A44 		.word	1148846080
 2699 02a8 0E000000 		.word	.LC9
 2700 02ac 17000000 		.word	.LC10
 2701 02b0 21000000 		.word	.LC11
 2702 02b4 2C000000 		.word	.LC12
 2703 02b8 36000000 		.word	.LC13
 2704 02bc 40000000 		.word	.LC14
 2705 02c0 00ED00E0 		.word	-536810240
 2706 02c4 00000000 		.word	__func__.11
 2707 02c8 00000000 		.word	lcd_fg_buffer_rd_idx
 2708 02cc 00180F00 		.word	lcd_fg_buffer
 2709              		.cfi_endproc
 2710              	.LFE7409:
 2712              		.section	.rodata.app_run.str1.1,"aMS",%progbits,1
 2713              	.LC15:
 2714 0000 496E6974 		.ascii	"Init application\000"
 2714      20617070 
 2714      6C696361 
 2714      74696F6E 
 2714      00
 2715              	.LC16:
 2716 0011 6973705F 		.ascii	"isp_sem\000"
 2716      73656D00 
 2717              	.LC17:
 2718 0019 64697370 		.ascii	"disp.update\000"
 2718      2E757064 
 2718      61746500 
 2719              	.LC18:
 2720 0025 64697370 		.ascii	"disp.lock\000"
 2720      2E6C6F63 
 2720      6B00
 2721              	.LC19:
 2722 002f 6E6E00   		.ascii	"nn\000"
 2723              	.LC20:
 2724 0032 68646C20 		.ascii	"hdl != NULL\000"
 2724      213D204E 
 2724      554C4C00 
 2725              	.LC21:
 2726 003e 647000   		.ascii	"dp\000"
 2727              	.LC22:
 2728 0041 69737000 		.ascii	"isp\000"
 2729              		.section	.text.app_run,"ax",%progbits
 2730              		.align	1
 2731              		.global	app_run
 2732              		.syntax unified
 2733              		.thumb
 2734              		.thumb_func
 2736              	app_run:
 2737              	.LFB7412:
1474:Src/app.c     ****   }
1475:Src/app.c     **** }
1476:Src/app.c     **** 
1477:Src/app.c     **** static void Display_init()
1478:Src/app.c     **** {
1479:Src/app.c     ****   SCRL_LayerConfig layers_config[2] = {
1480:Src/app.c     ****     {
1481:Src/app.c     ****       .origin = {lcd_bg_area.X0, lcd_bg_area.Y0},
ARM GAS  /tmp/ccyFtwdm.s 			page 122


1482:Src/app.c     ****       .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1483:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1484:Src/app.c     ****       .format = SCRL_RGB888,
1485:Src/app.c     **** #else
1486:Src/app.c     ****       .format = SCRL_ARGB8888,
1487:Src/app.c     **** #endif
1488:Src/app.c     ****       .address = lcd_bg_buffer[lcd_bg_buffer_disp_idx],
1489:Src/app.c     ****     },
1490:Src/app.c     ****     {
1491:Src/app.c     ****       .origin = {lcd_fg_area.X0, lcd_fg_area.Y0},
1492:Src/app.c     ****       .size = {lcd_fg_area.XSize, lcd_fg_area.YSize},
1493:Src/app.c     ****       .format = SCRL_ARGB4444,
1494:Src/app.c     ****       .address = lcd_fg_buffer[1],
1495:Src/app.c     ****     },
1496:Src/app.c     ****   };
1497:Src/app.c     ****   SCRL_ScreenConfig screen_config = {
1498:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1499:Src/app.c     **** #ifdef SCR_LIB_USE_SPI
1500:Src/app.c     ****     .format = SCRL_RGB565,
1501:Src/app.c     **** #else
1502:Src/app.c     ****      .format = SCRL_YUV422, /* Use SCRL_RGB565 if host support this format to reduce cpu load */
1503:Src/app.c     **** #endif
1504:Src/app.c     ****     .address = screen_buffer,
1505:Src/app.c     ****     .fps = CAMERA_FPS,
1506:Src/app.c     ****   };
1507:Src/app.c     ****   int ret;
1508:Src/app.c     **** 
1509:Src/app.c     ****   ret = SCRL_Init((SCRL_LayerConfig *[2]){&layers_config[0], &layers_config[1]}, &screen_config);
1510:Src/app.c     ****   assert(ret == 0);
1511:Src/app.c     **** 
1512:Src/app.c     ****   UTIL_LCD_SetLayer(SCRL_LAYER_1);
1513:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
1514:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
1515:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
1516:Src/app.c     **** }
1517:Src/app.c     **** 
1518:Src/app.c     **** void app_run()
1519:Src/app.c     **** {
 2738              		.loc 1 1519 1 is_stmt 1 view -0
 2739              		.cfi_startproc
 2740              		@ args = 0, pretend = 0, frame = 56
 2741              		@ frame_needed = 0, uses_anonymous_args = 0
1520:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 2742              		.loc 1 1520 3 view .LVU853
 2743              	.LVL204:
1521:Src/app.c     ****   UBaseType_t dp_priority = FREERTOS_PRIORITY(-2);
 2744              		.loc 1 1521 3 view .LVU854
1522:Src/app.c     ****   UBaseType_t nn_priority = FREERTOS_PRIORITY(1);
 2745              		.loc 1 1522 3 view .LVU855
1523:Src/app.c     ****   TaskHandle_t hdl;
 2746              		.loc 1 1523 3 view .LVU856
1524:Src/app.c     ****   int ret;
 2747              		.loc 1 1524 3 view .LVU857
1525:Src/app.c     **** 
1526:Src/app.c     ****   printf("Init application\n");
 2748              		.loc 1 1526 3 view .LVU858
1519:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
ARM GAS  /tmp/ccyFtwdm.s 			page 123


 2749              		.loc 1 1519 1 is_stmt 0 view .LVU859
 2750 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2751              		.cfi_def_cfa_offset 28
 2752              		.cfi_offset 4, -28
 2753              		.cfi_offset 5, -24
 2754              		.cfi_offset 6, -20
 2755              		.cfi_offset 7, -16
 2756              		.cfi_offset 8, -12
 2757              		.cfi_offset 9, -8
 2758              		.cfi_offset 14, -4
1527:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
1528:Src/app.c     ****   CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 2759              		.loc 1 1528 12 view .LVU860
 2760 0004 854D     		ldr	r5, .L135
1519:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 2761              		.loc 1 1519 1 view .LVU861
 2762 0006 93B0     		sub	sp, sp, #76
 2763              		.cfi_def_cfa_offset 104
1526:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
 2764              		.loc 1 1526 3 view .LVU862
 2765 0008 8548     		ldr	r0, .L135+4
 2766 000a FFF7FEFF 		bl	puts
 2767              	.LVL205:
 2768              		.loc 1 1528 3 is_stmt 1 view .LVU863
 2769              		.loc 1 1528 12 is_stmt 0 view .LVU864
 2770 000e D5F8FC30 		ldr	r3, [r5, #252]
1529:Src/app.c     **** 
1530:Src/app.c     ****   /* screen init */
1531:Src/app.c     ****   memset(lcd_bg_buffer, 0, sizeof(lcd_bg_buffer));
 2771              		.loc 1 1531 3 view .LVU865
 2772 0012 844C     		ldr	r4, .L135+8
1528:Src/app.c     **** 
 2773              		.loc 1 1528 20 view .LVU866
 2774 0014 43F08073 		orr	r3, r3, #16777216
 2775              		.loc 1 1531 3 view .LVU867
 2776 0018 0021     		movs	r1, #0
 2777 001a 2046     		mov	r0, r4
 2778 001c 824A     		ldr	r2, .L135+12
1528:Src/app.c     **** 
 2779              		.loc 1 1528 20 view .LVU868
 2780 001e C5F8FC30 		str	r3, [r5, #252]
 2781              		.loc 1 1531 3 is_stmt 1 view .LVU869
 2782 0022 FFF7FEFF 		bl	memset
 2783              	.LVL206:
1532:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_bg_buffer, sizeof(lcd_bg_buffer)));
 2784              		.loc 1 1532 3 view .LVU870
 2785              		.loc 1 1532 3 view .LVU871
 2786              		.loc 1 1532 3 discriminator 1 view .LVU872
 2787              	.LBB361:
 2788              	.LBI361:
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean and Invalidate by address
ARM GAS  /tmp/ccyFtwdm.s 			page 124


 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and invalidates D_Cache for the given address
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned and invalidated starting from a 32 byte aligned address in 32 byte gr
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned and inval
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 2789              		.loc 3 418 27 view .LVU873
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 2790              		.loc 3 421 5 view .LVU874
 2791              	.LBB362:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2792              		.loc 3 422 8 view .LVU875
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2793              		.loc 3 423 7 view .LVU876
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2794              		.loc 3 425 7 view .LVU877
 2795              	.LBB363:
 2796              	.LBI363:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2797              		.loc 4 269 27 view .LVU878
 2798              	.LBB364:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2799              		.loc 4 271 3 view .LVU879
 2800              		.syntax unified
 2801              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2802 0026 BFF34F8F 		dsb 0xF
 2803              	@ 0 "" 2
 2804              		.thumb
 2805              		.syntax unified
 2806              	.LBE364:
 2807              	.LBE363:
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2808              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU880
 2809 002a DFF880E2 		ldr	lr, .L135+144
 2810              	.LBB366:
 2811              	.LBB365:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2812              		.loc 4 272 1 view .LVU881
 2813 002e 0023     		movs	r3, #0
 2814              	.LBE365:
 2815              	.LBE366:
 2816              		.loc 3 431 25 discriminator 1 view .LVU882
 2817 0030 4EF001E0 		dls	lr, lr
 2818              	.LVL207:
 2819              	.L116:
 2820              		.loc 3 431 25 discriminator 1 view .LVU883
 2821 0034 E218     		adds	r2, r4, r3
 2822              	.LVL208:
ARM GAS  /tmp/ccyFtwdm.s 			page 125


 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 2823              		.loc 3 427 7 is_stmt 1 view .LVU884
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2824              		.loc 3 428 9 view .LVU885
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2825              		.loc 3 428 23 is_stmt 0 view .LVU886
 2826 0036 C5F87022 		str	r2, [r5, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2827              		.loc 3 429 9 is_stmt 1 view .LVU887
 2828              	.LVL209:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2829              		.loc 3 430 9 view .LVU888
 2830              		.loc 3 431 25 discriminator 1 view .LVU889
 2831 003a 2033     		adds	r3, r3, #32
 2832              	.LVL210:
 2833              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU890
 2834 003c 0FF007C0 		le	lr, .L116
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2835              		.loc 3 433 7 is_stmt 1 view .LVU891
 2836              	.LBB367:
 2837              	.LBI367:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2838              		.loc 4 269 27 view .LVU892
 2839              	.LBB368:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2840              		.loc 4 271 3 view .LVU893
 2841              		.syntax unified
 2842              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2843 0040 BFF34F8F 		dsb 0xF
 2844              	@ 0 "" 2
 2845              		.thumb
 2846              		.syntax unified
 2847              	.LBE368:
 2848              	.LBE367:
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2849              		.loc 3 434 7 view .LVU894
 2850              	.LBB369:
 2851              	.LBI369:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2852              		.loc 4 258 27 view .LVU895
 2853              	.LBB370:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2854              		.loc 4 260 3 view .LVU896
 2855              		.syntax unified
 2856              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2857 0044 BFF36F8F 		isb 0xF
 2858              	@ 0 "" 2
 2859              	.LVL211:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2860              		.loc 4 260 3 is_stmt 0 view .LVU897
 2861              		.thumb
 2862              		.syntax unified
 2863              	.LBE370:
 2864              	.LBE369:
 2865              	.LBE362:
 2866              	.LBE361:
ARM GAS  /tmp/ccyFtwdm.s 			page 126


 2867              		.loc 1 1532 3 is_stmt 1 discriminator 3 view .LVU898
1533:Src/app.c     ****   memset(lcd_fg_buffer, 0, sizeof(lcd_fg_buffer));
 2868              		.loc 1 1533 3 view .LVU899
 2869 0048 784D     		ldr	r5, .L135+16
 2870 004a 0021     		movs	r1, #0
 2871 004c 2846     		mov	r0, r5
 2872 004e 784A     		ldr	r2, .L135+20
 2873 0050 FFF7FEFF 		bl	memset
 2874              	.LVL212:
1534:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_fg_buffer, sizeof(lcd_fg_buffer)));
 2875              		.loc 1 1534 3 view .LVU900
 2876              		.loc 1 1534 3 view .LVU901
 2877              		.loc 1 1534 3 discriminator 1 view .LVU902
 2878              	.LBB371:
 2879              	.LBI371:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2880              		.loc 3 418 27 view .LVU903
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2881              		.loc 3 421 5 view .LVU904
 2882              	.LBB372:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2883              		.loc 3 422 8 view .LVU905
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2884              		.loc 3 423 7 view .LVU906
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2885              		.loc 3 425 7 view .LVU907
 2886              	.LBB373:
 2887              	.LBI373:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2888              		.loc 4 269 27 view .LVU908
 2889              	.LBB374:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2890              		.loc 4 271 3 view .LVU909
 2891              		.syntax unified
 2892              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2893 0054 BFF34F8F 		dsb 0xF
 2894              	@ 0 "" 2
 2895              		.thumb
 2896              		.syntax unified
 2897              	.LBE374:
 2898              	.LBE373:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2899              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU910
 2900 0058 4BF6803E 		movw	lr, #48000
 2901              	.LBB376:
 2902              	.LBB375:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2903              		.loc 4 272 1 view .LVU911
 2904 005c 0023     		movs	r3, #0
 2905              	.LBE375:
 2906              	.LBE376:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2907              		.loc 3 431 25 discriminator 1 view .LVU912
 2908 005e 4EF001E0 		dls	lr, lr
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2909              		.loc 3 428 23 view .LVU913
 2910 0062 6E4A     		ldr	r2, .L135
ARM GAS  /tmp/ccyFtwdm.s 			page 127


 2911              	.LVL213:
 2912              	.L117:
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2913              		.loc 3 428 23 view .LVU914
 2914 0064 E918     		adds	r1, r5, r3
 2915              	.LVL214:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 2916              		.loc 3 427 7 is_stmt 1 view .LVU915
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2917              		.loc 3 428 9 view .LVU916
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2918              		.loc 3 428 23 is_stmt 0 view .LVU917
 2919 0066 C2F87012 		str	r1, [r2, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2920              		.loc 3 429 9 is_stmt 1 view .LVU918
 2921              	.LVL215:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2922              		.loc 3 430 9 view .LVU919
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2923              		.loc 3 431 25 discriminator 1 view .LVU920
 2924 006a 2033     		adds	r3, r3, #32
 2925              	.LVL216:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2926              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU921
 2927 006c 0FF007C0 		le	lr, .L117
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2928              		.loc 3 433 7 is_stmt 1 view .LVU922
 2929              	.LBB377:
 2930              	.LBI377:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2931              		.loc 4 269 27 view .LVU923
 2932              	.LBB378:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2933              		.loc 4 271 3 view .LVU924
 2934              		.syntax unified
 2935              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2936 0070 BFF34F8F 		dsb 0xF
 2937              	@ 0 "" 2
 2938              		.thumb
 2939              		.syntax unified
 2940              	.LBE378:
 2941              	.LBE377:
 2942              		.loc 3 434 7 view .LVU925
 2943              	.LBB379:
 2944              	.LBI379:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2945              		.loc 4 258 27 view .LVU926
 2946              	.LBB380:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2947              		.loc 4 260 3 view .LVU927
 2948              		.syntax unified
 2949              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2950 0074 BFF36F8F 		isb 0xF
 2951              	@ 0 "" 2
 2952              	.LVL217:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2953              		.loc 4 260 3 is_stmt 0 view .LVU928
ARM GAS  /tmp/ccyFtwdm.s 			page 128


 2954              		.thumb
 2955              		.syntax unified
 2956              	.LBE380:
 2957              	.LBE379:
 2958              	.LBE372:
 2959              	.LBE371:
 2960              		.loc 1 1534 3 is_stmt 1 discriminator 3 view .LVU929
1535:Src/app.c     ****   Display_init();
 2961              		.loc 1 1535 3 view .LVU930
 2962              	.LBB381:
 2963              	.LBI381:
1477:Src/app.c     **** {
 2964              		.loc 1 1477 13 view .LVU931
 2965              	.LBB382:
1479:Src/app.c     ****     {
 2966              		.loc 1 1479 3 view .LVU932
1479:Src/app.c     ****     {
 2967              		.loc 1 1479 20 is_stmt 0 view .LVU933
 2968 0078 0320     		movs	r0, #3
 2969 007a 0021     		movs	r1, #0
 2970 007c 0126     		movs	r6, #1
1497:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 2971              		.loc 1 1497 21 view .LVU934
 2972 007e 0227     		movs	r7, #2
 2973 0080 4FF01E09 		mov	r9, #30
1479:Src/app.c     ****     {
 2974              		.loc 1 1479 20 view .LVU935
 2975 0084 8DF83000 		strb	r0, [sp, #48]
1488:Src/app.c     ****     },
 2976              		.loc 1 1488 31 view .LVU936
 2977 0088 6A48     		ldr	r0, .L135+24
1479:Src/app.c     ****     {
 2978              		.loc 1 1479 20 view .LVU937
 2979 008a 6B4A     		ldr	r2, .L135+28
1488:Src/app.c     ****     },
 2980              		.loc 1 1488 18 view .LVU938
 2981 008c 0068     		ldr	r0, [r0]
1479:Src/app.c     ****     {
 2982              		.loc 1 1479 20 view .LVU939
 2983 008e CDE90A12 		strd	r1, r2, [sp, #40]
1488:Src/app.c     ****     },
 2984              		.loc 1 1488 18 view .LVU940
 2985 0092 03FB0044 		mla	r4, r3, r0, r4
1479:Src/app.c     ****     {
 2986              		.loc 1 1479 20 view .LVU941
 2987 0096 694B     		ldr	r3, .L135+32
 2988 0098 CDE90D41 		strd	r4, r1, [sp, #52]
 2989 009c 1193     		str	r3, [sp, #68]
1497:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 2990              		.loc 1 1497 3 is_stmt 1 view .LVU942
1497:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 2991              		.loc 1 1497 21 is_stmt 0 view .LVU943
 2992 009e 684B     		ldr	r3, .L135+36
1509:Src/app.c     ****   assert(ret == 0);
 2993              		.loc 1 1509 9 view .LVU944
 2994 00a0 06A9     		add	r1, sp, #24
1497:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
ARM GAS  /tmp/ccyFtwdm.s 			page 129


 2995              		.loc 1 1497 21 view .LVU945
 2996 00a2 0893     		str	r3, [sp, #32]
1509:Src/app.c     ****   assert(ret == 0);
 2997              		.loc 1 1509 42 view .LVU946
 2998 00a4 0AAB     		add	r3, sp, #40
 2999 00a6 0493     		str	r3, [sp, #16]
1509:Src/app.c     ****   assert(ret == 0);
 3000              		.loc 1 1509 9 view .LVU947
 3001 00a8 04A8     		add	r0, sp, #16
1509:Src/app.c     ****   assert(ret == 0);
 3002              		.loc 1 1509 42 view .LVU948
 3003 00aa 0EAB     		add	r3, sp, #56
1479:Src/app.c     ****     {
 3004              		.loc 1 1479 20 view .LVU949
 3005 00ac 0F92     		str	r2, [sp, #60]
 3006 00ae 8DF84060 		strb	r6, [sp, #64]
1497:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3007              		.loc 1 1497 21 view .LVU950
 3008 00b2 0692     		str	r2, [sp, #24]
 3009 00b4 8DF81C70 		strb	r7, [sp, #28]
 3010 00b8 ADF82490 		strh	r9, [sp, #36]	@ movhi
1507:Src/app.c     **** 
 3011              		.loc 1 1507 3 is_stmt 1 view .LVU951
1509:Src/app.c     ****   assert(ret == 0);
 3012              		.loc 1 1509 3 view .LVU952
1509:Src/app.c     ****   assert(ret == 0);
 3013              		.loc 1 1509 42 is_stmt 0 view .LVU953
 3014 00bc 0593     		str	r3, [sp, #20]
1509:Src/app.c     ****   assert(ret == 0);
 3015              		.loc 1 1509 9 view .LVU954
 3016 00be FFF7FEFF 		bl	SCRL_Init
 3017              	.LVL218:
1510:Src/app.c     **** 
 3018              		.loc 1 1510 3 is_stmt 1 view .LVU955
 3019 00c2 0446     		mov	r4, r0
 3020 00c4 30B1     		cbz	r0, .L118
1510:Src/app.c     **** 
 3021              		.loc 1 1510 3 is_stmt 0 discriminator 1 view .LVU956
 3022 00c6 40F2E651 		movw	r1, #1510
 3023 00ca 5E4B     		ldr	r3, .L135+40
 3024 00cc 5E4A     		ldr	r2, .L135+44
 3025              	.LVL219:
 3026              	.L134:
1510:Src/app.c     **** 
 3027              		.loc 1 1510 3 discriminator 1 view .LVU957
 3028              	.LBE382:
 3029              	.LBE381:
1536:Src/app.c     **** 
1537:Src/app.c     ****   /* create buffer queues */
1538:Src/app.c     ****   ret = bqueue_init(&nn_input_queue, 2, (uint8_t *[2]){nn_input_buffers[0], nn_input_buffers[1]});
1539:Src/app.c     ****   assert(ret == 0);
 3030              		.loc 1 1539 3 discriminator 1 view .LVU958
 3031 00ce 5F48     		ldr	r0, .L135+48
 3032 00d0 FFF7FEFF 		bl	__assert_func
 3033              	.LVL220:
 3034              	.L118:
 3035              	.LBB385:
ARM GAS  /tmp/ccyFtwdm.s 			page 130


 3036              	.LBB383:
1512:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 3037              		.loc 1 1512 3 is_stmt 1 view .LVU959
 3038 00d4 3046     		mov	r0, r6
 3039              	.LVL221:
1512:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 3040              		.loc 1 1512 3 is_stmt 0 view .LVU960
 3041 00d6 FFF7FEFF 		bl	UTIL_LCD_SetLayer
 3042              	.LVL222:
1513:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
 3043              		.loc 1 1513 3 is_stmt 1 view .LVU961
 3044 00da 2046     		mov	r0, r4
 3045 00dc FFF7FEFF 		bl	UTIL_LCD_Clear
 3046              	.LVL223:
1514:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 3047              		.loc 1 1514 3 view .LVU962
 3048              	.LBE383:
 3049              	.LBE385:
 3050              	.LBB386:
 3051              	.LBB387:
 449:Src/app.c     ****   if (!bq->free)
 3052              		.loc 1 449 14 is_stmt 0 view .LVU963
 3053 00e0 DFF8CC81 		ldr	r8, .L135+148
 3054              	.LBE387:
 3055              	.LBE386:
 3056              	.LBB392:
 3057              	.LBB384:
1514:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 3058              		.loc 1 1514 3 view .LVU964
 3059 00e4 5A48     		ldr	r0, .L135+52
 3060 00e6 FFF7FEFF 		bl	UTIL_LCD_SetFont
 3061              	.LVL224:
1515:Src/app.c     **** }
 3062              		.loc 1 1515 3 is_stmt 1 view .LVU965
 3063 00ea 4FF0FF30 		mov	r0, #-1
 3064 00ee FFF7FEFF 		bl	UTIL_LCD_SetTextColor
 3065              	.LVL225:
1515:Src/app.c     **** }
 3066              		.loc 1 1515 3 is_stmt 0 view .LVU966
 3067              	.LBE384:
 3068              	.LBE392:
1538:Src/app.c     ****   assert(ret == 0);
 3069              		.loc 1 1538 3 is_stmt 1 view .LVU967
 3070              	.LBB393:
 3071              	.LBI386:
 442:Src/app.c     **** {
 3072              		.loc 1 442 12 view .LVU968
 3073              	.LBB388:
 444:Src/app.c     **** 
 3074              		.loc 1 444 3 view .LVU969
 446:Src/app.c     ****     return -1;
 3075              		.loc 1 446 3 view .LVU970
 449:Src/app.c     ****   if (!bq->free)
 3076              		.loc 1 449 3 view .LVU971
 449:Src/app.c     ****   if (!bq->free)
 3077              		.loc 1 449 14 is_stmt 0 view .LVU972
 3078 00f2 4246     		mov	r2, r8
ARM GAS  /tmp/ccyFtwdm.s 			page 131


 3079 00f4 3946     		mov	r1, r7
 3080 00f6 3846     		mov	r0, r7
 3081 00f8 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 3082              	.LVL226:
 449:Src/app.c     ****   if (!bq->free)
 3083              		.loc 1 449 12 discriminator 1 view .LVU973
 3084 00fc A8F10405 		sub	r5, r8, #4
 3085 0100 48F8040C 		str	r0, [r8, #-4]
 450:Src/app.c     ****     goto free_sem_error;
 3086              		.loc 1 450 3 is_stmt 1 view .LVU974
 450:Src/app.c     ****     goto free_sem_error;
 3087              		.loc 1 450 6 is_stmt 0 view .LVU975
 3088 0104 58B1     		cbz	r0, .L119
 452:Src/app.c     ****   if (!bq->ready)
 3089              		.loc 1 452 3 is_stmt 1 view .LVU976
 452:Src/app.c     ****   if (!bq->ready)
 3090              		.loc 1 452 15 is_stmt 0 view .LVU977
 3091 0106 2146     		mov	r1, r4
 3092 0108 3846     		mov	r0, r7
 3093 010a 08F15402 		add	r2, r8, #84
 3094 010e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 3095              	.LVL227:
 452:Src/app.c     ****   if (!bq->ready)
 3096              		.loc 1 452 13 discriminator 1 view .LVU978
 3097 0112 6865     		str	r0, [r5, #84]
 453:Src/app.c     ****     goto ready_sem_error;
 3098              		.loc 1 453 3 is_stmt 1 view .LVU979
 453:Src/app.c     ****     goto ready_sem_error;
 3099              		.loc 1 453 6 is_stmt 0 view .LVU980
 3100 0114 40B9     		cbnz	r0, .L120
 454:Src/app.c     **** 
 3101              		.loc 1 454 5 is_stmt 1 view .LVU981
 3102              	.LDL1:
 467:Src/app.c     **** free_sem_error:
 3103              		.loc 1 467 3 view .LVU982
 3104 0116 58F8040C 		ldr	r0, [r8, #-4]
 3105 011a FFF7FEFF 		bl	vQueueDelete
 3106              	.LVL228:
 467:Src/app.c     **** free_sem_error:
 3107              		.loc 1 467 3 is_stmt 0 view .LVU983
 3108              	.LBE388:
 3109              	.LBE393:
 3110              		.loc 1 1539 3 is_stmt 1 view .LVU984
 3111              	.L119:
 3112              		.loc 1 1539 3 is_stmt 0 discriminator 1 view .LVU985
 3113 011e 40F20361 		movw	r1, #1539
 3114 0122 484B     		ldr	r3, .L135+40
 3115 0124 4B4A     		ldr	r2, .L135+56
 3116 0126 D2E7     		b	.L134
 3117              	.LVL229:
 3118              	.L120:
 3119              	.LBB394:
 3120              	.LBB389:
 456:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 3121              		.loc 1 456 3 is_stmt 1 view .LVU986
 459:Src/app.c     ****   }
 3122              		.loc 1 459 20 is_stmt 0 view .LVU987
ARM GAS  /tmp/ccyFtwdm.s 			page 132


 3123 0128 4B4B     		ldr	r3, .L135+60
 3124              	.LBE389:
 3125              	.LBE394:
 3126              	.LBB395:
 3127              	.LBB396:
 409:Src/app.c     **** }
 3128              		.loc 1 409 3 view .LVU988
 3129 012a E022     		movs	r2, #224
 3130 012c 2146     		mov	r1, r4
 3131              	.LBE396:
 3132              	.LBE395:
 3133              	.LBB399:
 3134              	.LBB390:
 459:Src/app.c     ****   }
 3135              		.loc 1 459 20 view .LVU989
 3136 012e C5F8AC30 		str	r3, [r5, #172]
 3137              	.LBE390:
 3138              	.LBE399:
 3139              	.LBB400:
 3140              	.LBB397:
 409:Src/app.c     **** }
 3141              		.loc 1 409 3 view .LVU990
 3142 0132 4A48     		ldr	r0, .L135+64
 3143              	.LBE397:
 3144              	.LBE400:
 3145              	.LBB401:
 3146              	.LBB391:
 459:Src/app.c     ****   }
 3147              		.loc 1 459 20 view .LVU991
 3148 0134 03F5D833 		add	r3, r3, #110592
 461:Src/app.c     ****   bq->ready_idx = 0;
 3149              		.loc 1 461 16 view .LVU992
 3150 0138 C5E92C34 		strd	r3, r4, [r5, #176]
 456:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 3151              		.loc 1 456 17 view .LVU993
 3152 013c C5F8A870 		str	r7, [r5, #168]
 457:Src/app.c     ****     assert(buffers[i]);
 3153              		.loc 1 457 3 is_stmt 1 view .LVU994
 3154              	.LVL230:
 457:Src/app.c     ****     assert(buffers[i]);
 3155              		.loc 1 457 17 discriminator 1 view .LVU995
 458:Src/app.c     ****     bq->buffers[i] = buffers[i];
 3156              		.loc 1 458 5 view .LVU996
 459:Src/app.c     ****   }
 3157              		.loc 1 459 5 view .LVU997
 457:Src/app.c     ****     assert(buffers[i]);
 3158              		.loc 1 457 31 discriminator 2 view .LVU998
 457:Src/app.c     ****     assert(buffers[i]);
 3159              		.loc 1 457 17 discriminator 1 view .LVU999
 458:Src/app.c     ****     bq->buffers[i] = buffers[i];
 3160              		.loc 1 458 5 view .LVU1000
 459:Src/app.c     ****   }
 3161              		.loc 1 459 5 view .LVU1001
 462:Src/app.c     **** 
 3162              		.loc 1 462 3 view .LVU1002
 462:Src/app.c     **** 
 3163              		.loc 1 462 17 is_stmt 0 view .LVU1003
ARM GAS  /tmp/ccyFtwdm.s 			page 133


 3164 0140 C5F8B840 		str	r4, [r5, #184]
 464:Src/app.c     **** 
 3165              		.loc 1 464 3 is_stmt 1 view .LVU1004
 3166              	.LVL231:
 464:Src/app.c     **** 
 3167              		.loc 1 464 3 is_stmt 0 view .LVU1005
 3168              	.LBE391:
 3169              	.LBE401:
 3170              		.loc 1 1539 3 is_stmt 1 view .LVU1006
1540:Src/app.c     **** 
1541:Src/app.c     ****   cpuload_init(&cpu_load);
 3171              		.loc 1 1541 3 view .LVU1007
 3172              	.LBB402:
 3173              	.LBI395:
 407:Src/app.c     **** {
 3174              		.loc 1 407 13 view .LVU1008
 3175              	.LBB398:
 409:Src/app.c     **** }
 3176              		.loc 1 409 3 view .LVU1009
 3177 0144 FFF7FEFF 		bl	memset
 3178              	.LVL232:
 409:Src/app.c     **** }
 3179              		.loc 1 409 3 is_stmt 0 view .LVU1010
 3180              	.LBE398:
 3181              	.LBE402:
1542:Src/app.c     **** 
1543:Src/app.c     ****   /*** Camera Init ************************************************************/  
1544:Src/app.c     ****   CAM_Init();
 3182              		.loc 1 1544 3 is_stmt 1 view .LVU1011
 3183 0148 FFF7FEFF 		bl	CAM_Init
 3184              	.LVL233:
1545:Src/app.c     **** 
1546:Src/app.c     ****   /* sems + mutex init */
1547:Src/app.c     ****   isp_sem = xSemaphoreCreateCountingStatic(1, 0, &isp_sem_buffer);
 3185              		.loc 1 1547 3 view .LVU1012
 3186              		.loc 1 1547 13 is_stmt 0 view .LVU1013
 3187 014c 2146     		mov	r1, r4
 3188 014e 3046     		mov	r0, r6
 3189 0150 434A     		ldr	r2, .L135+68
 3190 0152 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 3191              	.LVL234:
 3192              		.loc 1 1547 11 discriminator 1 view .LVU1014
 3193 0156 434B     		ldr	r3, .L135+72
 3194 0158 1860     		str	r0, [r3]
1548:Src/app.c     ****   assert(isp_sem);
 3195              		.loc 1 1548 3 is_stmt 1 view .LVU1015
 3196 015a 20B9     		cbnz	r0, .L133
 3197              		.loc 1 1548 3 is_stmt 0 discriminator 1 view .LVU1016
 3198 015c 40F20C61 		movw	r1, #1548
 3199 0160 414B     		ldr	r3, .L135+76
 3200 0162 3C4A     		ldr	r2, .L135+56
 3201 0164 B3E7     		b	.L134
 3202              	.L133:
1549:Src/app.c     ****   disp.update = xSemaphoreCreateCountingStatic(1, 0, &disp.update_buffer);
 3203              		.loc 1 1549 3 is_stmt 1 view .LVU1017
 3204              		.loc 1 1549 17 is_stmt 0 view .LVU1018
 3205 0166 414D     		ldr	r5, .L135+80
ARM GAS  /tmp/ccyFtwdm.s 			page 134


 3206 0168 2146     		mov	r1, r4
 3207 016a 2A46     		mov	r2, r5
 3208 016c 3046     		mov	r0, r6
 3209 016e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 3210              	.LVL235:
 3211              		.loc 1 1549 15 discriminator 1 view .LVU1019
 3212 0172 2F1F     		subs	r7, r5, #4
 3213 0174 45F8040C 		str	r0, [r5, #-4]
1550:Src/app.c     ****   assert(disp.update);
 3214              		.loc 1 1550 3 is_stmt 1 view .LVU1020
 3215 0178 20B9     		cbnz	r0, .L123
 3216              		.loc 1 1550 3 is_stmt 0 discriminator 1 view .LVU1021
 3217 017a 40F20E61 		movw	r1, #1550
 3218 017e 3C4B     		ldr	r3, .L135+84
 3219 0180 344A     		ldr	r2, .L135+56
 3220 0182 A4E7     		b	.L134
 3221              	.L123:
1551:Src/app.c     ****   disp.lock = xSemaphoreCreateMutexStatic(&disp.lock_buffer);
 3222              		.loc 1 1551 3 is_stmt 1 view .LVU1022
 3223              		.loc 1 1551 15 is_stmt 0 view .LVU1023
 3224 0184 3046     		mov	r0, r6
 3225 0186 05F15401 		add	r1, r5, #84
 3226 018a FFF7FEFF 		bl	xQueueCreateMutexStatic
 3227              	.LVL236:
 3228              		.loc 1 1551 13 discriminator 1 view .LVU1024
 3229 018e 7865     		str	r0, [r7, #84]
1552:Src/app.c     ****   assert(disp.lock);
 3230              		.loc 1 1552 3 is_stmt 1 view .LVU1025
 3231 0190 20B9     		cbnz	r0, .L124
 3232              		.loc 1 1552 3 is_stmt 0 discriminator 1 view .LVU1026
 3233 0192 4FF4C261 		mov	r1, #1552
 3234 0196 374B     		ldr	r3, .L135+88
 3235 0198 2E4A     		ldr	r2, .L135+56
 3236 019a 98E7     		b	.L134
 3237              	.L124:
1553:Src/app.c     **** 
1554:Src/app.c     ****   /* Start LCD Display camera pipe stream */
1555:Src/app.c     ****   CAM_DisplayPipe_Start(lcd_bg_buffer[0], CMW_MODE_CONTINUOUS);
 3238              		.loc 1 1555 3 is_stmt 1 view .LVU1027
 3239 019c 2146     		mov	r1, r4
 3240 019e 2148     		ldr	r0, .L135+8
 3241 01a0 FFF7FEFF 		bl	CAM_DisplayPipe_Start
 3242              	.LVL237:
1556:Src/app.c     **** 
1557:Src/app.c     ****   /* threads init */
1558:Src/app.c     ****   hdl = xTaskCreateStatic(nn_thread_fct, "nn", configMINIMAL_STACK_SIZE * 2, NULL, nn_priority, nn_
 3243              		.loc 1 1558 3 view .LVU1028
 3244              		.loc 1 1558 9 is_stmt 0 view .LVU1029
 3245 01a4 344B     		ldr	r3, .L135+92
 3246 01a6 4FF40062 		mov	r2, #2048
 3247 01aa 0293     		str	r3, [sp, #8]
 3248 01ac 334B     		ldr	r3, .L135+96
 3249 01ae 3449     		ldr	r1, .L135+100
 3250 01b0 0193     		str	r3, [sp, #4]
 3251 01b2 1D23     		movs	r3, #29
 3252 01b4 3348     		ldr	r0, .L135+104
 3253 01b6 0093     		str	r3, [sp]
ARM GAS  /tmp/ccyFtwdm.s 			page 135


 3254 01b8 2346     		mov	r3, r4
 3255 01ba FFF7FEFF 		bl	xTaskCreateStatic
 3256              	.LVL238:
1559:Src/app.c     ****                           &nn_thread);
1560:Src/app.c     ****   assert(hdl != NULL);
 3257              		.loc 1 1560 3 is_stmt 1 view .LVU1030
 3258 01be 20B9     		cbnz	r0, .L125
 3259              		.loc 1 1560 3 is_stmt 0 discriminator 1 view .LVU1031
 3260 01c0 4FF4C361 		mov	r1, #1560
 3261 01c4 304B     		ldr	r3, .L135+108
 3262 01c6 234A     		ldr	r2, .L135+56
 3263 01c8 81E7     		b	.L134
 3264              	.L125:
1561:Src/app.c     ****   hdl = xTaskCreateStatic(dp_thread_fct, "dp", configMINIMAL_STACK_SIZE * 2, NULL, dp_priority, dp_
 3265              		.loc 1 1561 3 is_stmt 1 view .LVU1032
 3266              		.loc 1 1561 9 is_stmt 0 view .LVU1033
 3267 01ca 304B     		ldr	r3, .L135+112
 3268 01cc 4FF40062 		mov	r2, #2048
 3269 01d0 0293     		str	r3, [sp, #8]
 3270 01d2 2F4B     		ldr	r3, .L135+116
 3271 01d4 2F49     		ldr	r1, .L135+120
 3272 01d6 0193     		str	r3, [sp, #4]
 3273 01d8 1A23     		movs	r3, #26
 3274 01da 2F48     		ldr	r0, .L135+124
 3275              	.LVL239:
 3276              		.loc 1 1561 9 view .LVU1034
 3277 01dc 0093     		str	r3, [sp]
 3278 01de 2346     		mov	r3, r4
 3279 01e0 FFF7FEFF 		bl	xTaskCreateStatic
 3280              	.LVL240:
1562:Src/app.c     ****                           &dp_thread);
1563:Src/app.c     ****   assert(hdl != NULL);
 3281              		.loc 1 1563 3 is_stmt 1 view .LVU1035
 3282 01e4 20B9     		cbnz	r0, .L126
 3283              		.loc 1 1563 3 is_stmt 0 discriminator 1 view .LVU1036
 3284 01e6 40F21B61 		movw	r1, #1563
 3285 01ea 274B     		ldr	r3, .L135+108
 3286 01ec 194A     		ldr	r2, .L135+56
 3287 01ee 6EE7     		b	.L134
 3288              	.L126:
1564:Src/app.c     ****   hdl = xTaskCreateStatic(isp_thread_fct, "isp", configMINIMAL_STACK_SIZE * 2, NULL, isp_priority, 
 3289              		.loc 1 1564 3 is_stmt 1 view .LVU1037
 3290              		.loc 1 1564 9 is_stmt 0 view .LVU1038
 3291 01f0 2A4B     		ldr	r3, .L135+128
 3292 01f2 4FF40062 		mov	r2, #2048
 3293 01f6 0293     		str	r3, [sp, #8]
 3294 01f8 294B     		ldr	r3, .L135+132
 3295 01fa 2A49     		ldr	r1, .L135+136
 3296 01fc CDE90093 		strd	r9, r3, [sp]
 3297 0200 2948     		ldr	r0, .L135+140
 3298              	.LVL241:
 3299              		.loc 1 1564 9 view .LVU1039
 3300 0202 2346     		mov	r3, r4
 3301 0204 FFF7FEFF 		bl	xTaskCreateStatic
 3302              	.LVL242:
1565:Src/app.c     ****                           &isp_thread);
1566:Src/app.c     ****   assert(hdl != NULL);
ARM GAS  /tmp/ccyFtwdm.s 			page 136


 3303              		.loc 1 1566 3 is_stmt 1 view .LVU1040
 3304 0208 20B9     		cbnz	r0, .L115
 3305              		.loc 1 1566 3 is_stmt 0 discriminator 1 view .LVU1041
 3306 020a 40F21E61 		movw	r1, #1566
 3307 020e 1E4B     		ldr	r3, .L135+108
 3308 0210 104A     		ldr	r2, .L135+56
 3309 0212 5CE7     		b	.L134
 3310              	.L115:
1567:Src/app.c     **** }
 3311              		.loc 1 1567 1 view .LVU1042
 3312 0214 13B0     		add	sp, sp, #76
 3313              		.cfi_def_cfa_offset 28
 3314              		@ sp needed
 3315 0216 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3316              	.L136:
 3317 021a 00BF     		.align	2
 3318              	.L135:
 3319 021c 00ED00E0 		.word	-536810240
 3320 0220 00000000 		.word	.LC15
 3321 0224 00882600 		.word	lcd_bg_buffer
 3322 0228 00C05D00 		.word	6144000
 3323 022c 00180F00 		.word	lcd_fg_buffer
 3324 0230 00701700 		.word	1536000
 3325 0234 00000000 		.word	lcd_bg_buffer_disp_idx
 3326 0238 2003E001 		.word	31458080
 3327 023c 00D01A00 		.word	lcd_fg_buffer+768000
 3328 0240 00600300 		.word	screen_buffer
 3329 0244 00000000 		.word	.LC4
 3330 0248 00000000 		.word	__func__.5
 3331 024c 0E000000 		.word	.LC2
 3332 0250 00000000 		.word	Font20
 3333 0254 00000000 		.word	__func__.18
 3334 0258 00000000 		.word	nn_input_buffers
 3335 025c 00000000 		.word	cpu_load
 3336 0260 00000000 		.word	isp_sem_buffer
 3337 0264 00000000 		.word	isp_sem
 3338 0268 11000000 		.word	.LC16
 3339 026c 04000000 		.word	disp+4
 3340 0270 19000000 		.word	.LC17
 3341 0274 25000000 		.word	.LC18
 3342 0278 00000000 		.word	nn_thread
 3343 027c 00000000 		.word	nn_thread_stack
 3344 0280 2F000000 		.word	.LC19
 3345 0284 00000000 		.word	nn_thread_fct
 3346 0288 32000000 		.word	.LC20
 3347 028c 00000000 		.word	dp_thread
 3348 0290 00000000 		.word	dp_thread_stack
 3349 0294 3E000000 		.word	.LC21
 3350 0298 00000000 		.word	dp_thread_fct
 3351 029c 00000000 		.word	isp_thread
 3352 02a0 00000000 		.word	isp_thread_stack
 3353 02a4 41000000 		.word	.LC22
 3354 02a8 00000000 		.word	isp_thread_fct
 3355 02ac 00EE0200 		.word	192000
 3356 02b0 04000000 		.word	nn_input_queue+4
 3357              		.cfi_endproc
 3358              	.LFE7412:
ARM GAS  /tmp/ccyFtwdm.s 			page 137


 3360              		.section	.text.CMW_CAMERA_PIPE_FrameEventCallback,"ax",%progbits
 3361              		.align	1
 3362              		.global	CMW_CAMERA_PIPE_FrameEventCallback
 3363              		.syntax unified
 3364              		.thumb
 3365              		.thumb_func
 3367              	CMW_CAMERA_PIPE_FrameEventCallback:
 3368              	.LVL243:
 3369              	.LFB7413:
1568:Src/app.c     **** 
1569:Src/app.c     **** int CMW_CAMERA_PIPE_FrameEventCallback(uint32_t pipe)
1570:Src/app.c     **** {
 3370              		.loc 1 1570 1 is_stmt 1 view -0
 3371              		.cfi_startproc
 3372              		@ args = 0, pretend = 0, frame = 8
 3373              		@ frame_needed = 0, uses_anonymous_args = 0
1571:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 3374              		.loc 1 1571 3 view .LVU1044
 3375              		.loc 1 1571 6 is_stmt 0 view .LVU1045
 3376 0000 0128     		cmp	r0, #1
1570:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 3377              		.loc 1 1570 1 view .LVU1046
 3378 0002 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 3379              		.cfi_def_cfa_offset 40
 3380              		.cfi_offset 4, -32
 3381              		.cfi_offset 5, -28
 3382              		.cfi_offset 6, -24
 3383              		.cfi_offset 7, -20
 3384              		.cfi_offset 8, -16
 3385              		.cfi_offset 9, -12
 3386              		.cfi_offset 10, -8
 3387              		.cfi_offset 14, -4
1570:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 3388              		.loc 1 1570 1 view .LVU1047
 3389 0006 0646     		mov	r6, r0
 3390              		.loc 1 1571 6 view .LVU1048
 3391 0008 50D1     		bne	.L138
1572:Src/app.c     ****     app_main_pipe_frame_event();
 3392              		.loc 1 1572 5 is_stmt 1 view .LVU1049
 3393              	.LBB413:
 3394              	.LBI413:
 537:Src/app.c     **** {
 3395              		.loc 1 537 13 view .LVU1050
 3396              	.LBB414:
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3397              		.loc 1 539 3 view .LVU1051
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3398              		.loc 1 539 47 is_stmt 0 view .LVU1052
 3399 000a 514F     		ldr	r7, .L164
 540:Src/app.c     ****   int ret;
 3400              		.loc 1 540 47 view .LVU1053
 3401 000c DFF87081 		ldr	r8, .L164+48
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3402              		.loc 1 539 47 view .LVU1054
 3403 0010 3D68     		ldr	r5, [r7]
 540:Src/app.c     ****   int ret;
 3404              		.loc 1 540 47 view .LVU1055
ARM GAS  /tmp/ccyFtwdm.s 			page 138


 3405 0012 D8F80040 		ldr	r4, [r8]
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3406              		.loc 1 539 47 view .LVU1056
 3407 0016 0135     		adds	r5, r5, #1
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3408              		.loc 1 539 7 view .LVU1057
 3409 0018 6B42     		rsbs	r3, r5, #0
 3410 001a 03F00303 		and	r3, r3, #3
 540:Src/app.c     ****   int ret;
 3411              		.loc 1 540 47 view .LVU1058
 3412 001e 04F10104 		add	r4, r4, #1
 539:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 3413              		.loc 1 539 7 view .LVU1059
 3414 0022 05F00305 		and	r5, r5, #3
 3415 0026 55EA43B5 		csneg	r5, r5, r3, mi
 3416              	.LVL244:
 540:Src/app.c     ****   int ret;
 3417              		.loc 1 540 3 is_stmt 1 view .LVU1060
 540:Src/app.c     ****   int ret;
 3418              		.loc 1 540 7 is_stmt 0 view .LVU1061
 3419 002a 6342     		rsbs	r3, r4, #0
 3420 002c 03F00303 		and	r3, r3, #3
 544:Src/app.c     ****   assert(ret == HAL_OK);
 3421              		.loc 1 544 78 view .LVU1062
 3422 0030 DFF850A1 		ldr	r10, .L164+52
 3423 0034 DFF85091 		ldr	r9, .L164+56
 540:Src/app.c     ****   int ret;
 3424              		.loc 1 540 7 view .LVU1063
 3425 0038 04F00304 		and	r4, r4, #3
 3426 003c 54EA43B4 		csneg	r4, r4, r3, mi
 3427              	.LVL245:
 541:Src/app.c     **** 
 3428              		.loc 1 541 3 is_stmt 1 view .LVU1064
 543:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 3429              		.loc 1 543 3 view .LVU1065
 543:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 3430              		.loc 1 543 9 is_stmt 0 view .LVU1066
 3431 0040 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 3432              	.LVL246:
 543:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 3433              		.loc 1 543 9 view .LVU1067
 3434 0044 3146     		mov	r1, r6
 3435 0046 0022     		movs	r2, #0
 3436 0048 0AFB0493 		mla	r3, r10, r4, r9
 3437 004c FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 3438              	.LVL247:
 545:Src/app.c     **** 
 3439              		.loc 1 545 3 is_stmt 1 view .LVU1068
 3440 0050 0146     		mov	r1, r0
 3441 0052 30B1     		cbz	r0, .L139
 545:Src/app.c     **** 
 3442              		.loc 1 545 3 is_stmt 0 discriminator 1 view .LVU1069
 3443 0054 40F22121 		movw	r1, #545
 3444 0058 3E4B     		ldr	r3, .L164+4
 3445 005a 3F4A     		ldr	r2, .L164+8
 3446              	.LVL248:
 3447              	.L163:
ARM GAS  /tmp/ccyFtwdm.s 			page 139


 3448              	.LBB415:
 3449              	.LBB416:
 529:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 3450              		.loc 1 529 3 discriminator 1 view .LVU1070
 3451 005c 3F48     		ldr	r0, .L164+12
 3452 005e FFF7FEFF 		bl	__assert_func
 3453              	.LVL249:
 3454              	.L139:
 529:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 3455              		.loc 1 529 3 discriminator 1 view .LVU1071
 3456              	.LBE416:
 3457              	.LBE415:
 547:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 3458              		.loc 1 547 3 is_stmt 1 view .LVU1072
 3459              	.LBB418:
 3460              	.LBI415:
 524:Src/app.c     **** {
 3461              		.loc 1 524 13 view .LVU1073
 3462              	.LBB417:
 526:Src/app.c     **** 
 3463              		.loc 1 526 3 view .LVU1074
 528:Src/app.c     ****   assert(ret == 0);
 3464              		.loc 1 528 3 view .LVU1075
 528:Src/app.c     ****   assert(ret == 0);
 3465              		.loc 1 528 9 is_stmt 0 view .LVU1076
 3466 0062 0AFB0590 		mla	r0, r10, r5, r9
 3467              	.LVL250:
 528:Src/app.c     ****   assert(ret == 0);
 3468              		.loc 1 528 9 view .LVU1077
 3469 0066 FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 3470              	.LVL251:
 529:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 3471              		.loc 1 529 3 is_stmt 1 view .LVU1078
 3472 006a 20B1     		cbz	r0, .L140
 529:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 3473              		.loc 1 529 3 is_stmt 0 discriminator 1 view .LVU1079
 3474 006c 40F21121 		movw	r1, #529
 3475 0070 3B4B     		ldr	r3, .L164+16
 3476 0072 3C4A     		ldr	r2, .L164+20
 3477 0074 F2E7     		b	.L163
 3478              	.L140:
 530:Src/app.c     ****   assert(ret == 0);
 3479              		.loc 1 530 3 is_stmt 1 view .LVU1080
 530:Src/app.c     ****   assert(ret == 0);
 3480              		.loc 1 530 9 is_stmt 0 view .LVU1081
 3481 0076 FFF7FEFF 		bl	SCRL_ReloadLayer
 3482              	.LVL252:
 531:Src/app.c     **** 
 3483              		.loc 1 531 3 is_stmt 1 view .LVU1082
 3484 007a 20B1     		cbz	r0, .L141
 531:Src/app.c     **** 
 3485              		.loc 1 531 3 is_stmt 0 discriminator 1 view .LVU1083
 3486 007c 40F21321 		movw	r1, #531
 3487 0080 374B     		ldr	r3, .L164+16
 3488 0082 384A     		ldr	r2, .L164+20
 3489 0084 EAE7     		b	.L163
 3490              	.L141:
ARM GAS  /tmp/ccyFtwdm.s 			page 140


 533:Src/app.c     ****   assert(ret == 0);
 3491              		.loc 1 533 3 is_stmt 1 view .LVU1084
 533:Src/app.c     ****   assert(ret == 0);
 3492              		.loc 1 533 9 is_stmt 0 view .LVU1085
 3493 0086 FFF7FEFF 		bl	SRCL_Update
 3494              	.LVL253:
 534:Src/app.c     **** }
 3495              		.loc 1 534 3 is_stmt 1 view .LVU1086
 3496 008a 20B1     		cbz	r0, .L142
 534:Src/app.c     **** }
 3497              		.loc 1 534 3 is_stmt 0 discriminator 1 view .LVU1087
 3498 008c 40F21621 		movw	r1, #534
 3499 0090 334B     		ldr	r3, .L164+16
 3500 0092 344A     		ldr	r2, .L164+20
 3501 0094 E2E7     		b	.L163
 3502              	.L142:
 3503              	.LVL254:
 534:Src/app.c     **** }
 3504              		.loc 1 534 3 discriminator 1 view .LVU1088
 3505              	.LBE417:
 3506              	.LBE418:
 548:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 3507              		.loc 1 548 3 is_stmt 1 view .LVU1089
 551:Src/app.c     **** }
 3508              		.loc 1 551 17 is_stmt 0 view .LVU1090
 3509 0096 344A     		ldr	r2, .L164+24
 548:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 3510              		.loc 1 548 26 view .LVU1091
 3511 0098 3D60     		str	r5, [r7]
 549:Src/app.c     **** 
 3512              		.loc 1 549 3 is_stmt 1 view .LVU1092
 551:Src/app.c     **** }
 3513              		.loc 1 551 17 is_stmt 0 view .LVU1093
 3514 009a 1368     		ldr	r3, [r2]
 549:Src/app.c     **** 
 3515              		.loc 1 549 26 view .LVU1094
 3516 009c C8F80040 		str	r4, [r8]
 551:Src/app.c     **** }
 3517              		.loc 1 551 3 is_stmt 1 view .LVU1095
 551:Src/app.c     **** }
 3518              		.loc 1 551 17 is_stmt 0 view .LVU1096
 3519 00a0 0133     		adds	r3, r3, #1
 3520 00a2 1360     		str	r3, [r2]
 3521              	.LVL255:
 3522              	.L143:
 551:Src/app.c     **** }
 3523              		.loc 1 551 17 view .LVU1097
 3524              	.LBE414:
 3525              	.LBE413:
1573:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
1574:Src/app.c     ****     app_ancillary_pipe_frame_event();
1575:Src/app.c     **** 
1576:Src/app.c     ****   return HAL_OK;
 3526              		.loc 1 1576 3 is_stmt 1 view .LVU1098
1577:Src/app.c     **** }
 3527              		.loc 1 1577 1 is_stmt 0 view .LVU1099
 3528 00a4 0020     		movs	r0, #0
ARM GAS  /tmp/ccyFtwdm.s 			page 141


 3529 00a6 02B0     		add	sp, sp, #8
 3530              		.cfi_remember_state
 3531              		.cfi_def_cfa_offset 32
 3532              		@ sp needed
 3533 00a8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3534              	.LVL256:
 3535              	.L138:
 3536              		.cfi_restore_state
1573:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 3537              		.loc 1 1573 8 is_stmt 1 view .LVU1100
1573:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 3538              		.loc 1 1573 11 is_stmt 0 view .LVU1101
 3539 00ac 0228     		cmp	r0, #2
 3540 00ae F9D1     		bne	.L143
1574:Src/app.c     **** 
 3541              		.loc 1 1574 5 is_stmt 1 view .LVU1102
 3542              	.LBB419:
 3543              	.LBI419:
 555:Src/app.c     **** {
 3544              		.loc 1 555 13 view .LVU1103
 3545              	.LBB420:
 557:Src/app.c     ****   int ret;
 3546              		.loc 1 557 3 view .LVU1104
 558:Src/app.c     **** 
 3547              		.loc 1 558 3 view .LVU1105
 560:Src/app.c     ****   if (next_buffer) {
 3548              		.loc 1 560 3 view .LVU1106
 3549              	.LBB421:
 3550              	.LBI421:
 472:Src/app.c     **** {
 3551              		.loc 1 472 17 view .LVU1107
 3552              	.LVL257:
 3553              	.LBB422:
 474:Src/app.c     ****   int ret;
 3554              		.loc 1 474 3 view .LVU1108
 475:Src/app.c     **** 
 3555              		.loc 1 475 3 view .LVU1109
 477:Src/app.c     ****   if (ret == pdFALSE)
 3556              		.loc 1 477 3 view .LVU1110
 477:Src/app.c     ****   if (ret == pdFALSE)
 3557              		.loc 1 477 9 is_stmt 0 view .LVU1111
 3558 00b0 2E4C     		ldr	r4, .L164+28
 477:Src/app.c     ****   if (ret == pdFALSE)
 3559              		.loc 1 477 9 discriminator 4 view .LVU1112
 3560 00b2 0021     		movs	r1, #0
 3561 00b4 2068     		ldr	r0, [r4]
 3562              	.LVL258:
 477:Src/app.c     ****   if (ret == pdFALSE)
 3563              		.loc 1 477 9 discriminator 4 view .LVU1113
 3564 00b6 FFF7FEFF 		bl	xQueueSemaphoreTake
 3565              	.LVL259:
 478:Src/app.c     ****     return NULL;
 3566              		.loc 1 478 3 is_stmt 1 view .LVU1114
 478:Src/app.c     ****     return NULL;
 3567              		.loc 1 478 6 is_stmt 0 view .LVU1115
 3568 00ba 0028     		cmp	r0, #0
 3569 00bc F2D0     		beq	.L143
ARM GAS  /tmp/ccyFtwdm.s 			page 142


 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 3570              		.loc 1 481 3 is_stmt 1 view .LVU1116
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 3571              		.loc 1 481 23 is_stmt 0 view .LVU1117
 3572 00be D4F8B420 		ldr	r2, [r4, #180]
 481:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 3573              		.loc 1 481 7 view .LVU1118
 3574 00c2 04EB8203 		add	r3, r4, r2, lsl #2
 3575 00c6 D3F8AC50 		ldr	r5, [r3, #172]
 3576              	.LVL260:
 482:Src/app.c     **** 
 3577              		.loc 1 482 3 is_stmt 1 view .LVU1119
 482:Src/app.c     **** 
 3578              		.loc 1 482 37 is_stmt 0 view .LVU1120
 3579 00ca D4F8A830 		ldr	r3, [r4, #168]
 482:Src/app.c     **** 
 3580              		.loc 1 482 32 view .LVU1121
 3581 00ce 0132     		adds	r2, r2, #1
 482:Src/app.c     **** 
 3582              		.loc 1 482 37 view .LVU1122
 3583 00d0 92FBF3F1 		sdiv	r1, r2, r3
 3584 00d4 03FB1122 		mls	r2, r3, r1, r2
 482:Src/app.c     **** 
 3585              		.loc 1 482 16 view .LVU1123
 3586 00d8 C4F8B420 		str	r2, [r4, #180]
 484:Src/app.c     **** }
 3587              		.loc 1 484 3 is_stmt 1 view .LVU1124
 3588              	.LVL261:
 484:Src/app.c     **** }
 3589              		.loc 1 484 3 is_stmt 0 view .LVU1125
 3590              	.LBE422:
 3591              	.LBE421:
 561:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 3592              		.loc 1 561 3 is_stmt 1 view .LVU1126
 561:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 3593              		.loc 1 561 6 is_stmt 0 view .LVU1127
 3594 00dc 002D     		cmp	r5, #0
 3595 00de E1D0     		beq	.L143
 562:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 3596              		.loc 1 562 5 is_stmt 1 view .LVU1128
 562:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 3597              		.loc 1 562 11 is_stmt 0 view .LVU1129
 3598 00e0 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 3599              	.LVL262:
 562:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 3600              		.loc 1 562 11 discriminator 1 view .LVU1130
 3601 00e4 2B46     		mov	r3, r5
 3602 00e6 0022     		movs	r2, #0
 3603 00e8 3146     		mov	r1, r6
 3604 00ea FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 3605              	.LVL263:
 564:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 3606              		.loc 1 564 5 is_stmt 1 view .LVU1131
 3607 00ee 20B1     		cbz	r0, .L146
 564:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 3608              		.loc 1 564 5 is_stmt 0 discriminator 1 view .LVU1132
 3609 00f0 4FF40D71 		mov	r1, #564
ARM GAS  /tmp/ccyFtwdm.s 			page 143


 3610 00f4 174B     		ldr	r3, .L164+4
 3611 00f6 1E4A     		ldr	r2, .L164+32
 3612 00f8 B0E7     		b	.L163
 3613              	.L146:
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3614              		.loc 1 566 5 is_stmt 1 view .LVU1133
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3615              		.loc 1 566 48 is_stmt 0 view .LVU1134
 3616 00fa 1B4B     		ldr	r3, .L164+24
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3617              		.loc 1 566 31 view .LVU1135
 3618 00fc 1D4A     		ldr	r2, .L164+36
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3619              		.loc 1 566 48 view .LVU1136
 3620 00fe 1B68     		ldr	r3, [r3]
 3621              	.LBB423:
 3622              	.LBB424:
 511:Src/app.c     ****   int ret;
 3623              		.loc 1 511 14 view .LVU1137
 3624 0100 0190     		str	r0, [sp, #4]
 3625              	.LBE424:
 3626              	.LBE423:
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3627              		.loc 1 566 48 view .LVU1138
 3628 0102 013B     		subs	r3, r3, #1
 566:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 3629              		.loc 1 566 31 view .LVU1139
 3630 0104 1360     		str	r3, [r2]
 567:Src/app.c     ****   }
 3631              		.loc 1 567 5 is_stmt 1 view .LVU1140
 3632              	.LBB426:
 3633              	.LBI423:
 509:Src/app.c     **** {
 3634              		.loc 1 509 13 view .LVU1141
 3635              	.LVL264:
 3636              	.LBB425:
 511:Src/app.c     ****   int ret;
 3637              		.loc 1 511 3 view .LVU1142
 512:Src/app.c     **** 
 3638              		.loc 1 512 3 view .LVU1143
 514:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 3639              		.loc 1 514 3 view .LVU1144
 514:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 3640              		.loc 1 514 7 is_stmt 0 view .LVU1145
 3641 0106 FFF7FEFF 		bl	xPortIsInsideInterrupt
 3642              	.LVL265:
 514:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 3643              		.loc 1 514 6 discriminator 1 view .LVU1146
 3644 010a 0346     		mov	r3, r0
 3645 010c A0B1     		cbz	r0, .L147
 515:Src/app.c     ****     assert(ret == pdTRUE);
 3646              		.loc 1 515 5 is_stmt 1 view .LVU1147
 515:Src/app.c     ****     assert(ret == pdTRUE);
 3647              		.loc 1 515 11 is_stmt 0 view .LVU1148
 3648 010e 606D     		ldr	r0, [r4, #84]
 3649 0110 01A9     		add	r1, sp, #4
 3650 0112 FFF7FEFF 		bl	xQueueGiveFromISR
ARM GAS  /tmp/ccyFtwdm.s 			page 144


 3651              	.LVL266:
 516:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 3652              		.loc 1 516 5 is_stmt 1 view .LVU1149
 3653 0116 0128     		cmp	r0, #1
 3654 0118 04D0     		beq	.L148
 516:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 3655              		.loc 1 516 5 is_stmt 0 discriminator 1 view .LVU1150
 3656 011a 4FF40171 		mov	r1, #516
 3657 011e 164B     		ldr	r3, .L164+40
 3658 0120 164A     		ldr	r2, .L164+44
 3659 0122 9BE7     		b	.L163
 3660              	.L148:
 517:Src/app.c     ****   } else {
 3661              		.loc 1 517 5 is_stmt 1 view .LVU1151
 517:Src/app.c     ****   } else {
 3662              		.loc 1 517 5 view .LVU1152
 3663 0124 019B     		ldr	r3, [sp, #4]
 3664 0126 002B     		cmp	r3, #0
 3665 0128 BCD0     		beq	.L143
 517:Src/app.c     ****   } else {
 3666              		.loc 1 517 5 discriminator 1 view .LVU1153
 3667 012a 4FF0E023 		mov	r3, #-536813568
 3668 012e 4FF08052 		mov	r2, #268435456
 3669 0132 C3F8042D 		str	r2, [r3, #3332]
 3670 0136 B5E7     		b	.L143
 3671              	.LVL267:
 3672              	.L147:
 519:Src/app.c     ****     assert(ret == pdTRUE);
 3673              		.loc 1 519 5 view .LVU1154
 519:Src/app.c     ****     assert(ret == pdTRUE);
 3674              		.loc 1 519 11 is_stmt 0 view .LVU1155
 3675 0138 0246     		mov	r2, r0
 3676 013a 0146     		mov	r1, r0
 3677 013c 606D     		ldr	r0, [r4, #84]
 3678 013e FFF7FEFF 		bl	xQueueGenericSend
 3679              	.LVL268:
 520:Src/app.c     ****   }
 3680              		.loc 1 520 5 is_stmt 1 view .LVU1156
 3681 0142 0128     		cmp	r0, #1
 3682 0144 AED0     		beq	.L143
 520:Src/app.c     ****   }
 3683              		.loc 1 520 5 is_stmt 0 discriminator 1 view .LVU1157
 3684 0146 4FF40271 		mov	r1, #520
 3685 014a 0B4B     		ldr	r3, .L164+40
 3686 014c 0B4A     		ldr	r2, .L164+44
 3687 014e 85E7     		b	.L163
 3688              	.L165:
 3689              		.align	2
 3690              	.L164:
 3691 0150 00000000 		.word	lcd_bg_buffer_disp_idx
 3692 0154 00000000 		.word	.LC8
 3693 0158 00000000 		.word	__func__.3
 3694 015c 0E000000 		.word	.LC2
 3695 0160 00000000 		.word	.LC4
 3696 0164 00000000 		.word	__func__.2
 3697 0168 00000000 		.word	frame_event_nb
 3698 016c 00000000 		.word	nn_input_queue
ARM GAS  /tmp/ccyFtwdm.s 			page 145


 3699 0170 00000000 		.word	__func__.1
 3700 0174 00000000 		.word	frame_event_nb_for_resize
 3701 0178 00000000 		.word	.LC1
 3702 017c 00000000 		.word	__func__.0
 3703 0180 00000000 		.word	lcd_bg_buffer_capt_idx
 3704 0184 00701700 		.word	1536000
 3705 0188 00882600 		.word	lcd_bg_buffer
 3706              	.LBE425:
 3707              	.LBE426:
 3708              	.LBE420:
 3709              	.LBE419:
 3710              		.cfi_endproc
 3711              	.LFE7413:
 3713              		.section	.text.CMW_CAMERA_PIPE_VsyncEventCallback,"ax",%progbits
 3714              		.align	1
 3715              		.global	CMW_CAMERA_PIPE_VsyncEventCallback
 3716              		.syntax unified
 3717              		.thumb
 3718              		.thumb_func
 3720              	CMW_CAMERA_PIPE_VsyncEventCallback:
 3721              	.LVL269:
 3722              	.LFB7414:
1578:Src/app.c     **** 
1579:Src/app.c     **** int CMW_CAMERA_PIPE_VsyncEventCallback(uint32_t pipe)
1580:Src/app.c     **** {
 3723              		.loc 1 1580 1 is_stmt 1 view -0
 3724              		.cfi_startproc
 3725              		@ args = 0, pretend = 0, frame = 8
 3726              		@ frame_needed = 0, uses_anonymous_args = 0
1581:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 3727              		.loc 1 1581 3 view .LVU1159
 3728              		.loc 1 1581 6 is_stmt 0 view .LVU1160
 3729 0000 0128     		cmp	r0, #1
1580:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 3730              		.loc 1 1580 1 view .LVU1161
 3731 0002 07B5     		push	{r0, r1, r2, lr}
 3732              		.cfi_def_cfa_offset 16
 3733              		.cfi_offset 14, -4
 3734              		.loc 1 1581 6 view .LVU1162
 3735 0004 10D1     		bne	.L167
1582:Src/app.c     ****     app_main_pipe_vsync_event();
 3736              		.loc 1 1582 5 is_stmt 1 view .LVU1163
 3737              	.LBB429:
 3738              	.LBI429:
 571:Src/app.c     **** {
 3739              		.loc 1 571 13 view .LVU1164
 3740              	.LBB430:
 573:Src/app.c     ****   int ret;
 3741              		.loc 1 573 3 view .LVU1165
 573:Src/app.c     ****   int ret;
 3742              		.loc 1 573 14 is_stmt 0 view .LVU1166
 3743 0006 0023     		movs	r3, #0
 3744 0008 0193     		str	r3, [sp, #4]
 574:Src/app.c     **** 
 3745              		.loc 1 574 3 is_stmt 1 view .LVU1167
 576:Src/app.c     ****   if (ret == pdTRUE)
 3746              		.loc 1 576 3 view .LVU1168
ARM GAS  /tmp/ccyFtwdm.s 			page 146


 576:Src/app.c     ****   if (ret == pdTRUE)
 3747              		.loc 1 576 9 is_stmt 0 view .LVU1169
 3748 000a 094B     		ldr	r3, .L172
 3749 000c 01A9     		add	r1, sp, #4
 3750 000e 1868     		ldr	r0, [r3]
 3751              	.LVL270:
 576:Src/app.c     ****   if (ret == pdTRUE)
 3752              		.loc 1 576 9 view .LVU1170
 3753 0010 FFF7FEFF 		bl	xQueueGiveFromISR
 3754              	.LVL271:
 577:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 3755              		.loc 1 577 3 is_stmt 1 view .LVU1171
 577:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 3756              		.loc 1 577 6 is_stmt 0 view .LVU1172
 3757 0014 0128     		cmp	r0, #1
 3758 0016 07D1     		bne	.L167
 578:Src/app.c     **** }
 3759              		.loc 1 578 5 is_stmt 1 view .LVU1173
 578:Src/app.c     **** }
 3760              		.loc 1 578 5 view .LVU1174
 3761 0018 019B     		ldr	r3, [sp, #4]
 3762 001a 2BB1     		cbz	r3, .L167
 578:Src/app.c     **** }
 3763              		.loc 1 578 5 discriminator 1 view .LVU1175
 3764 001c 4FF0E023 		mov	r3, #-536813568
 3765 0020 4FF08052 		mov	r2, #268435456
 3766 0024 C3F8042D 		str	r2, [r3, #3332]
 578:Src/app.c     **** }
 3767              		.loc 1 578 5 discriminator 3 view .LVU1176
 3768              	.LVL272:
 3769              	.L167:
 578:Src/app.c     **** }
 3770              		.loc 1 578 5 is_stmt 0 discriminator 3 view .LVU1177
 3771              	.LBE430:
 3772              	.LBE429:
1583:Src/app.c     **** 
1584:Src/app.c     ****   return HAL_OK;
 3773              		.loc 1 1584 3 is_stmt 1 view .LVU1178
1585:Src/app.c     **** }
 3774              		.loc 1 1585 1 is_stmt 0 view .LVU1179
 3775 0028 0020     		movs	r0, #0
 3776 002a 03B0     		add	sp, sp, #12
 3777              		.cfi_def_cfa_offset 4
 3778              		@ sp needed
 3779 002c 5DF804FB 		ldr	pc, [sp], #4
 3780              	.L173:
 3781              		.align	2
 3782              	.L172:
 3783 0030 00000000 		.word	isp_sem
 3784              		.cfi_endproc
 3785              	.LFE7414:
 3787              		.section	.rodata.__func__.0,"a"
 3790              	__func__.0:
 3791 0000 62717565 		.ascii	"bqueue_put_ready\000"
 3791      75655F70 
 3791      75745F72 
 3791      65616479 
ARM GAS  /tmp/ccyFtwdm.s 			page 147


 3791      00
 3792              		.section	.rodata.__func__.1,"a"
 3795              	__func__.1:
 3796 0000 6170705F 		.ascii	"app_ancillary_pipe_frame_event\000"
 3796      616E6369 
 3796      6C6C6172 
 3796      795F7069 
 3796      70655F66 
 3797              		.section	.rodata.__func__.2,"a"
 3800              	__func__.2:
 3801 0000 72656C6F 		.ascii	"reload_bg_layer\000"
 3801      61645F62 
 3801      675F6C61 
 3801      79657200 
 3802              		.section	.rodata.__func__.3,"a"
 3805              	__func__.3:
 3806 0000 6170705F 		.ascii	"app_main_pipe_frame_event\000"
 3806      6D61696E 
 3806      5F706970 
 3806      655F6672 
 3806      616D655F 
 3807              		.section	.rodata.__func__.5,"a"
 3810              	__func__.5:
 3811 0000 44697370 		.ascii	"Display_init\000"
 3811      6C61795F 
 3811      696E6974 
 3811      00
 3812              		.section	.rodata.__func__.6,"a"
 3815              	__func__.6:
 3816 0000 62717565 		.ascii	"bqueue_put_free\000"
 3816      75655F70 
 3816      75745F66 
 3816      72656500 
 3817              		.section	.rodata.__func__.7,"a"
 3820              	__func__.7:
 3821 0000 796F6C6F 		.ascii	"yolo_detector_run\000"
 3821      5F646574 
 3821      6563746F 
 3821      725F7275 
 3821      6E00
 3822              		.section	.rodata.__func__.8,"a"
 3825              	__func__.8:
 3826 0000 62717565 		.ascii	"bqueue_get_ready\000"
 3826      75655F67 
 3826      65745F72 
 3826      65616479 
 3826      00
 3827              		.section	.rodata.__func__.9,"a"
 3830              	__func__.9:
 3831 0000 796F6C6F 		.ascii	"yolo_detector_init\000"
 3831      5F646574 
 3831      6563746F 
 3831      725F696E 
 3831      697400
 3832              		.section	.rodata.__func__.10,"a"
 3835              	__func__.10:
 3836 0000 6E6E5F74 		.ascii	"nn_thread_fct\000"
ARM GAS  /tmp/ccyFtwdm.s 			page 148


 3836      68726561 
 3836      645F6663 
 3836      7400
 3837              		.section	.rodata.__func__.11,"a"
 3840              	__func__.11:
 3841 0000 64705F63 		.ascii	"dp_commit_drawing_area\000"
 3841      6F6D6D69 
 3841      745F6472 
 3841      6177696E 
 3841      675F6172 
 3842              		.section	.rodata.__func__.12,"a"
 3845              	__func__.12:
 3846 0000 64705F75 		.ascii	"dp_update_drawing_area\000"
 3846      70646174 
 3846      655F6472 
 3846      6177696E 
 3846      675F6172 
 3847              		.section	.rodata.__func__.13,"a"
 3850              	__func__.13:
 3851 0000 62757474 		.ascii	"button_init\000"
 3851      6F6E5F69 
 3851      6E697400 
 3852              		.section	.rodata.__func__.14,"a"
 3855              	__func__.14:
 3856 0000 6F6E5F6C 		.ascii	"on_ld_toggle_button_click\000"
 3856      645F746F 
 3856      67676C65 
 3856      5F627574 
 3856      746F6E5F 
 3857              		.section	.rodata.__func__.15,"a"
 3860              	__func__.15:
 3861 0000 6F6E5F70 		.ascii	"on_pd_toggle_button_click\000"
 3861      645F746F 
 3861      67676C65 
 3861      5F627574 
 3861      746F6E5F 
 3862              		.section	.rodata.__func__.16,"a"
 3865              	__func__.16:
 3866 0000 64705F74 		.ascii	"dp_thread_fct\000"
 3866      68726561 
 3866      645F6663 
 3866      7400
 3867              		.section	.rodata.__func__.17,"a"
 3870              	__func__.17:
 3871 0000 6973705F 		.ascii	"isp_thread_fct\000"
 3871      74687265 
 3871      61645F66 
 3871      637400
 3872              		.section	.rodata.__func__.18,"a"
 3875              	__func__.18:
 3876 0000 6170705F 		.ascii	"app_run\000"
 3876      72756E00 
 3877              		.section	.bss.isp_sem_buffer,"aw",%nobits
 3878              		.align	2
 3881              	isp_sem_buffer:
 3882 0000 00000000 		.space	80
 3882      00000000 
ARM GAS  /tmp/ccyFtwdm.s 			page 149


 3882      00000000 
 3882      00000000 
 3882      00000000 
 3883              		.section	.bss.isp_sem,"aw",%nobits
 3884              		.align	2
 3887              	isp_sem:
 3888 0000 00000000 		.space	4
 3889              		.section	.bss.isp_thread_stack,"aw",%nobits
 3890              		.align	2
 3893              	isp_thread_stack:
 3894 0000 00000000 		.space	8192
 3894      00000000 
 3894      00000000 
 3894      00000000 
 3894      00000000 
 3895              		.section	.bss.isp_thread,"aw",%nobits
 3896              		.align	2
 3899              	isp_thread:
 3900 0000 00000000 		.space	96
 3900      00000000 
 3900      00000000 
 3900      00000000 
 3900      00000000 
 3901              		.section	.bss.dp_thread_stack,"aw",%nobits
 3902              		.align	2
 3905              	dp_thread_stack:
 3906 0000 00000000 		.space	8192
 3906      00000000 
 3906      00000000 
 3906      00000000 
 3906      00000000 
 3907              		.section	.bss.dp_thread,"aw",%nobits
 3908              		.align	2
 3911              	dp_thread:
 3912 0000 00000000 		.space	96
 3912      00000000 
 3912      00000000 
 3912      00000000 
 3912      00000000 
 3913              		.section	.bss.nn_thread_stack,"aw",%nobits
 3914              		.align	2
 3917              	nn_thread_stack:
 3918 0000 00000000 		.space	8192
 3918      00000000 
 3918      00000000 
 3918      00000000 
 3918      00000000 
 3919              		.section	.bss.nn_thread,"aw",%nobits
 3920              		.align	2
 3923              	nn_thread:
 3924 0000 00000000 		.space	96
 3924      00000000 
 3924      00000000 
 3924      00000000 
 3924      00000000 
 3925              		.section	.bss.nn_input_queue,"aw",%nobits
 3926              		.align	2
ARM GAS  /tmp/ccyFtwdm.s 			page 150


 3929              	nn_input_queue:
 3930 0000 00000000 		.space	188
 3930      00000000 
 3930      00000000 
 3930      00000000 
 3930      00000000 
 3931              		.section	.psram_bss,"aw"
 3932              		.align	5
 3935              	nn_input_buffers:
 3936 0000 00000000 		.space	221184
 3936      00000000 
 3936      00000000 
 3936      00000000 
 3936      00000000 
 3937              		.section	.bss.frame_event_nb_for_resize,"aw",%nobits
 3938              		.align	2
 3941              	frame_event_nb_for_resize:
 3942 0000 00000000 		.space	4
 3943              		.section	.bss.frame_event_nb,"aw",%nobits
 3944              		.align	2
 3947              	frame_event_nb:
 3948 0000 00000000 		.space	4
 3949              		.section	.data.NN_Instance_yolo_detector,"aw"
 3950              		.align	2
 3953              	NN_Instance_yolo_detector:
 3954 0000 00000000 		.word	NN_Interface_yolo_detector
 3955 0004 00000000 		.word	0
 3956 0008 00000000 		.space	40
 3956      00000000 
 3956      00000000 
 3956      00000000 
 3956      00000000 
 3957              		.section	.rodata.str1.1,"aMS",%progbits,1
 3958              	.LC23:
 3959 0000 796F6C6F 		.ascii	"yolo_detector\000"
 3959      5F646574 
 3959      6563746F 
 3959      7200
 3960              		.section	.rodata.NN_Interface_yolo_detector,"a"
 3961              		.align	2
 3964              	NN_Interface_yolo_detector:
 3965 0000 00000000 		.word	.LC23
 3966 0004 00000000 		.word	LL_ATON_EC_Network_Init_yolo_detector
 3967 0008 00000000 		.word	LL_ATON_EC_Inference_Init_yolo_detector
 3968 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_yolo_detector
 3969 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_yolo_detector
 3970 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_yolo_detector
 3971 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_yolo_detector
 3972 001c 00000000 		.word	LL_ATON_EpochBlockItems_yolo_detector
 3973 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_yolo_detector
 3974 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_yolo_detector
 3975 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_yolo_detector
 3976              		.section	.psram_bss
 3977              		.align	5
 3980              	screen_buffer:
 3981 36000 00000000 		.space	768000
 3981      00000000 
ARM GAS  /tmp/ccyFtwdm.s 			page 151


 3981      00000000 
 3981      00000000 
 3981      00000000 
 3982              		.section	.bss.cpu_load,"aw",%nobits
 3983              		.align	3
 3986              	cpu_load:
 3987 0000 00000000 		.space	224
 3987      00000000 
 3987      00000000 
 3987      00000000 
 3987      00000000 
 3988              		.section	.data.disp,"aw"
 3989              		.align	2
 3992              	disp:
 3993 0000 00000000 		.space	168
 3993      00000000 
 3993      00000000 
 3993      00000000 
 3993      00000000 
 3994 00a8 00000000 		.space	20
 3994      00000000 
 3994      00000000 
 3994      00000000 
 3994      00000000 
 3995 00bc 01000000 		.word	1
 3996 00c0 00000000 		.word	0
 3997 00c4 00000000 		.space	224
 3997      00000000 
 3997      00000000 
 3997      00000000 
 3997      00000000 
 3998              		.section	.bss.lcd_fg_buffer_rd_idx,"aw",%nobits
 3999              		.align	2
 4002              	lcd_fg_buffer_rd_idx:
 4003 0000 00000000 		.space	4
 4004              		.section	.psram_bss
 4005              		.align	5
 4008              	lcd_fg_buffer:
 4009 f1800 00000000 		.space	1536000
 4009      00000000 
 4009      00000000 
 4009      00000000 
 4009      00000000 
 4010              		.section	.bss.lcd_bg_buffer_capt_idx,"aw",%nobits
 4011              		.align	2
 4014              	lcd_bg_buffer_capt_idx:
 4015 0000 00000000 		.space	4
 4016              		.section	.data.lcd_bg_buffer_disp_idx,"aw"
 4017              		.align	2
 4020              	lcd_bg_buffer_disp_idx:
 4021 0000 01000000 		.word	1
 4022              		.section	.psram_bss
 4023              		.align	5
 4026              	lcd_bg_buffer:
 4027 268800 00000000 		.space	6144000
 4027      00000000 
 4027      00000000 
ARM GAS  /tmp/ccyFtwdm.s 			page 152


 4027      00000000 
 4027      00000000 
 4028              		.text
 4029              	.Letext0:
 4030              		.file 5 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4031              		.file 6 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4032              		.file 7 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4033              		.file 8 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4034              		.file 9 "Lib/FreeRTOS/Source/include/projdefs.h"
 4035              		.file 10 "Lib/FreeRTOS/Source/portable/GCC/ARM_CM55_NTZ/non_secure/portmacrocommon.h"
 4036              		.file 11 "Lib/FreeRTOS/Source/include/FreeRTOS.h"
 4037              		.file 12 "Lib/FreeRTOS/Source/include/task.h"
 4038              		.file 13 "Lib/FreeRTOS/Source/include/queue.h"
 4039              		.file 14 "Lib/FreeRTOS/Source/include/semphr.h"
 4040              		.file 15 "STM32Cube_FW_N6/Drivers/CMSIS/Include/core_cm55.h"
 4041              		.file 16 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n657xx.h"
 4042              		.file 17 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n6xx.h"
 4043              		.file 18 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_def.h"
 4044              		.file 19 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gpio.h"
 4045              		.file 20 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_dcmipp.h"
 4046              		.file 21 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gfxmmu.h"
 4047              		.file 22 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_pp_output_if.h"
 4048              		.file 23 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_yolov8_pp_if.h"
 4049              		.file 24 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/pd_pp_output_if.h"
 4050              		.file 25 "Inc/ld.h"
 4051              		.file 26 "Lib/screenl/Inc/scrl.h"
 4052              		.file 27 "STM32Cube_FW_N6/Drivers/BSP/STM32N6570-DK/stm32n6570_discovery.h"
 4053              		.file 28 "STM32Cube_FW_N6/Utilities/lcd/../Fonts/fonts.h"
 4054              		.file 29 "STM32Cube_FW_N6/Utilities/lcd/stm32_lcd.h"
 4055              		.file 30 "Lib/NemaGFX/include/nema_hal.h"
 4056              		.file 31 "Lib/NemaGFX/include/nema_cmdlist.h"
 4057              		.file 32 "Lib/Camera_Middleware/cmw_camera.h"
 4058              		.file 33 "Lib/ai-postprocessing-wrapper/app_postprocess.h"
 4059              		.file 34 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_runtime.h"
 4060              		.file 35 "Inc/app_cam.h"
 4061              		.file 36 "Inc/FreeRTOSConfig.h"
 4062              		.file 37 "Inc/stm32_lcd_ex.h"
 4063              		.file 38 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal.h"
 4064              		.file 39 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 4065              		.file 40 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 4066              		.file 41 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 4067              		.file 42 "<built-in>"
ARM GAS  /tmp/ccyFtwdm.s 			page 153


DEFINED SYMBOLS
                            *ABS*:00000000 app.c
     /tmp/ccyFtwdm.s:26     .text.clamp_point:00000000 $t
     /tmp/ccyFtwdm.s:31     .text.clamp_point:00000000 clamp_point
     /tmp/ccyFtwdm.s:117    .text.isp_thread_fct:00000000 $t
     /tmp/ccyFtwdm.s:122    .text.isp_thread_fct:00000000 isp_thread_fct
     /tmp/ccyFtwdm.s:168    .text.isp_thread_fct:00000028 $d
     /tmp/ccyFtwdm.s:3887   .bss.isp_sem:00000000 isp_sem
     /tmp/ccyFtwdm.s:3870   .rodata.__func__.17:00000000 __func__.17
     /tmp/ccyFtwdm.s:176    .text.on_pd_toggle_button_click:00000000 $t
     /tmp/ccyFtwdm.s:181    .text.on_pd_toggle_button_click:00000000 on_pd_toggle_button_click
     /tmp/ccyFtwdm.s:255    .text.on_pd_toggle_button_click:0000004c $d
     /tmp/ccyFtwdm.s:3860   .rodata.__func__.15:00000000 __func__.15
     /tmp/ccyFtwdm.s:262    .text.on_ld_toggle_button_click:00000000 $t
     /tmp/ccyFtwdm.s:267    .text.on_ld_toggle_button_click:00000000 on_ld_toggle_button_click
     /tmp/ccyFtwdm.s:341    .text.on_ld_toggle_button_click:0000004c $d
     /tmp/ccyFtwdm.s:3855   .rodata.__func__.14:00000000 __func__.14
     /tmp/ccyFtwdm.s:348    .text.button_process:00000000 $t
     /tmp/ccyFtwdm.s:353    .text.button_process:00000000 button_process
     /tmp/ccyFtwdm.s:411    .text.button_init.part.0:00000000 $t
     /tmp/ccyFtwdm.s:416    .text.button_init.part.0:00000000 button_init.part.0
     /tmp/ccyFtwdm.s:439    .text.button_init.part.0:00000010 $d
     /tmp/ccyFtwdm.s:3850   .rodata.__func__.13:00000000 __func__.13
     /tmp/ccyFtwdm.s:446    .text.display_ld_hand:00000000 $t
     /tmp/ccyFtwdm.s:451    .text.display_ld_hand:00000000 display_ld_hand
     /tmp/ccyFtwdm.s:768    .text.display_ld_hand:00000164 $d
     /tmp/ccyFtwdm.s:782    .text.nn_thread_fct:00000000 $t
     /tmp/ccyFtwdm.s:787    .text.nn_thread_fct:00000000 nn_thread_fct
     /tmp/ccyFtwdm.s:1438   .text.nn_thread_fct:0000020c $d
     /tmp/ccyFtwdm.s:3953   .data.NN_Instance_yolo_detector:00000000 NN_Instance_yolo_detector
     /tmp/ccyFtwdm.s:3830   .rodata.__func__.9:00000000 __func__.9
     /tmp/ccyFtwdm.s:3929   .bss.nn_input_queue:00000000 nn_input_queue
     /tmp/ccyFtwdm.s:3835   .rodata.__func__.10:00000000 __func__.10
     /tmp/ccyFtwdm.s:3825   .rodata.__func__.8:00000000 __func__.8
     /tmp/ccyFtwdm.s:3820   .rodata.__func__.7:00000000 __func__.7
     /tmp/ccyFtwdm.s:3815   .rodata.__func__.6:00000000 __func__.6
     /tmp/ccyFtwdm.s:3992   .data.disp:00000000 disp
     /tmp/ccyFtwdm.s:1461   .text.display_hand:00000000 $t
     /tmp/ccyFtwdm.s:1467   .text.display_hand:00000000 display_hand
     /tmp/ccyFtwdm.s:1961   .text.display_hand:00000230 $d
     /tmp/ccyFtwdm.s:1983   .text.dp_thread_fct:00000000 $t
     /tmp/ccyFtwdm.s:1988   .text.dp_thread_fct:00000000 dp_thread_fct
     /tmp/ccyFtwdm.s:2685   .text.dp_thread_fct:00000270 $d
     /tmp/ccyFtwdm.s:3865   .rodata.__func__.16:00000000 __func__.16
     /tmp/ccyFtwdm.s:3845   .rodata.__func__.12:00000000 __func__.12
     /tmp/ccyFtwdm.s:3986   .bss.cpu_load:00000000 cpu_load
     /tmp/ccyFtwdm.s:3840   .rodata.__func__.11:00000000 __func__.11
     /tmp/ccyFtwdm.s:4002   .bss.lcd_fg_buffer_rd_idx:00000000 lcd_fg_buffer_rd_idx
     /tmp/ccyFtwdm.s:4008   .psram_bss:000f1800 lcd_fg_buffer
     /tmp/ccyFtwdm.s:2730   .text.app_run:00000000 $t
     /tmp/ccyFtwdm.s:2736   .text.app_run:00000000 app_run
     /tmp/ccyFtwdm.s:3319   .text.app_run:0000021c $d
     /tmp/ccyFtwdm.s:4026   .psram_bss:00268800 lcd_bg_buffer
     /tmp/ccyFtwdm.s:4020   .data.lcd_bg_buffer_disp_idx:00000000 lcd_bg_buffer_disp_idx
     /tmp/ccyFtwdm.s:3980   .psram_bss:00036000 screen_buffer
     /tmp/ccyFtwdm.s:3810   .rodata.__func__.5:00000000 __func__.5
     /tmp/ccyFtwdm.s:3875   .rodata.__func__.18:00000000 __func__.18
ARM GAS  /tmp/ccyFtwdm.s 			page 154


     /tmp/ccyFtwdm.s:3935   .psram_bss:00000000 nn_input_buffers
     /tmp/ccyFtwdm.s:3881   .bss.isp_sem_buffer:00000000 isp_sem_buffer
     /tmp/ccyFtwdm.s:3923   .bss.nn_thread:00000000 nn_thread
     /tmp/ccyFtwdm.s:3917   .bss.nn_thread_stack:00000000 nn_thread_stack
     /tmp/ccyFtwdm.s:3911   .bss.dp_thread:00000000 dp_thread
     /tmp/ccyFtwdm.s:3905   .bss.dp_thread_stack:00000000 dp_thread_stack
     /tmp/ccyFtwdm.s:3899   .bss.isp_thread:00000000 isp_thread
     /tmp/ccyFtwdm.s:3893   .bss.isp_thread_stack:00000000 isp_thread_stack
     /tmp/ccyFtwdm.s:3361   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 $t
     /tmp/ccyFtwdm.s:3367   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 CMW_CAMERA_PIPE_FrameEventCallback
     /tmp/ccyFtwdm.s:3691   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000150 $d
     /tmp/ccyFtwdm.s:3805   .rodata.__func__.3:00000000 __func__.3
     /tmp/ccyFtwdm.s:3800   .rodata.__func__.2:00000000 __func__.2
     /tmp/ccyFtwdm.s:3947   .bss.frame_event_nb:00000000 frame_event_nb
     /tmp/ccyFtwdm.s:3795   .rodata.__func__.1:00000000 __func__.1
     /tmp/ccyFtwdm.s:3941   .bss.frame_event_nb_for_resize:00000000 frame_event_nb_for_resize
     /tmp/ccyFtwdm.s:3790   .rodata.__func__.0:00000000 __func__.0
     /tmp/ccyFtwdm.s:4014   .bss.lcd_bg_buffer_capt_idx:00000000 lcd_bg_buffer_capt_idx
     /tmp/ccyFtwdm.s:3714   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 $t
     /tmp/ccyFtwdm.s:3720   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 CMW_CAMERA_PIPE_VsyncEventCallback
     /tmp/ccyFtwdm.s:3783   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000030 $d
     /tmp/ccyFtwdm.s:3878   .bss.isp_sem_buffer:00000000 $d
     /tmp/ccyFtwdm.s:3884   .bss.isp_sem:00000000 $d
     /tmp/ccyFtwdm.s:3890   .bss.isp_thread_stack:00000000 $d
     /tmp/ccyFtwdm.s:3896   .bss.isp_thread:00000000 $d
     /tmp/ccyFtwdm.s:3902   .bss.dp_thread_stack:00000000 $d
     /tmp/ccyFtwdm.s:3908   .bss.dp_thread:00000000 $d
     /tmp/ccyFtwdm.s:3914   .bss.nn_thread_stack:00000000 $d
     /tmp/ccyFtwdm.s:3920   .bss.nn_thread:00000000 $d
     /tmp/ccyFtwdm.s:3926   .bss.nn_input_queue:00000000 $d
     /tmp/ccyFtwdm.s:3932   .psram_bss:00000000 $d
     /tmp/ccyFtwdm.s:3938   .bss.frame_event_nb_for_resize:00000000 $d
     /tmp/ccyFtwdm.s:3944   .bss.frame_event_nb:00000000 $d
     /tmp/ccyFtwdm.s:3950   .data.NN_Instance_yolo_detector:00000000 $d
     /tmp/ccyFtwdm.s:3964   .rodata.NN_Interface_yolo_detector:00000000 NN_Interface_yolo_detector
     /tmp/ccyFtwdm.s:3961   .rodata.NN_Interface_yolo_detector:00000000 $d
     /tmp/ccyFtwdm.s:3983   .bss.cpu_load:00000000 $d
     /tmp/ccyFtwdm.s:3989   .data.disp:00000000 $d
     /tmp/ccyFtwdm.s:3999   .bss.lcd_fg_buffer_rd_idx:00000000 $d
     /tmp/ccyFtwdm.s:4011   .bss.lcd_bg_buffer_capt_idx:00000000 $d
     /tmp/ccyFtwdm.s:4017   .data.lcd_bg_buffer_disp_idx:00000000 $d
                           .group:00000000 wm4.0.c552ae9005b0f2cca11872fae5d4b7f2
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.e0c9f337c65cb9f22ed5f23d082bc78b
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_gcc.h.26.7a5fd1a99dbedde687044a4433ab3e15
                           .group:00000000 wm4.newlib.h.7.591ac1bd65c1f5b34864757667a05252
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
ARM GAS  /tmp/ccyFtwdm.s 			page 155


                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.math.h.13.47cfc34cae8a1153323939c4d32cf7c2
                           .group:00000000 wm4.float.h.29.0e9d9baf95ec39f9555dc80c6e28186b
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.arm_math_types.h.94.a6c8422e2657ad4cd95bd8be69ba02aa
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4.arm_mve.h.38.47b22bbd301ce82bc6dafd1a387f65a3
                           .group:00000000 wm4.arm_math_types.h.559.cab78f278b684a3ea2271947c7aea680
                           .group:00000000 wm4.arm_math_memory.h.28.fe8a81c6a9ac13061a5f748732089249
                           .group:00000000 wm4.none.h.185.db055cca83e83f96d8d0bb450fbdf4bb
                           .group:00000000 wm4.utils.h.27.57524573fe37b04009eecf3582a4c591
                           .group:00000000 wm4.fast_math_functions.h.28.8eb7477260c1d6b62047c49a01c4cbaa
                           .group:00000000 wm4.controller_functions.h.28.7bed7d7a726df2f65b8a3d89cff01247
                           .group:00000000 wm4.filtering_functions.h.46.6cf1424fb1f86d5f9958d208b83340a1
                           .group:00000000 wm4.postprocess_conf.h.22.acd6394ad2add93420e5bdf488e642e7
                           .group:00000000 wm4.app.h.24.1e91b432981a608d23d4a667d6d768a5
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.47.dc31ec4674d7bcb103c9f08809549f45
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4.app_cam.h.19.2495a46447d71a1025370e29864418f5
                           .group:00000000 wm4.app_config.h.19.88dee04c97f3e42d3acfeeca22b174e5
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.ll_aton_config.h.20.79eb8be0291ee9086e6be08969d61846
                           .group:00000000 wm4.ll_aton_attributes.h.20.26d469460cb32db5740effdc8cc403f3
                           .group:00000000 wm4.assert.h.11.d99a111e320bc5106fc4046225782672
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.ae5ea2b0ff9ea6e39e585807e35200d3
                           .group:00000000 wm4.ll_aton_util.h.34.9098eaa90d3d72b819973556e3e5fe44
                           .group:00000000 wm4.FreeRTOS.h.59.647b1b0da38e4e98108aae13c8abe9ee
                           .group:00000000 wm4.FreeRTOSConfig.h.59.2629c72cff9e6dbe880a2dc225eae516
                           .group:00000000 wm4.FreeRTOS.h.80.7742fabaf5accf3762dc12f7f259a8a0
                           .group:00000000 wm4.projdefs.h.30.55a824156f299c075c33148a9fdadb99
                           .group:00000000 wm4.portmacro.h.30.cbb4b2da41f551c2a9904f0d03a1ce3e
                           .group:00000000 wm4.portmacrocommon.h.30.d5cb67896ab50a95311be7e023da5c4f
                           .group:00000000 wm4.portmacro.h.68.4051ecf710d074fb55b16d91dfebeeaa
                           .group:00000000 wm4.portable.h.61.d557c57974d490f056246a26cdcddd6c
                           .group:00000000 wm4.mpu_wrappers.h.30.ccc5f1a6903f941a88c268f5f62af3fe
                           .group:00000000 wm4.portable.h.189.522b8bd52a171d3fd1432ef06d0caa63
                           .group:00000000 wm4.FreeRTOS.h.102.fb871f3e464d99c5a57b3115545a02ad
                           .group:00000000 wm4.list.h.59.bce6419520cd4f5f98779a1530bf2118
                           .group:00000000 wm4.task.h.56.84290139c73b47f5b9aac361361a2a31
                           .group:00000000 wm4.queue.h.68.219f47fba8b59640449b84d04c5bd6d8
                           .group:00000000 wm4.semphr.h.40.c1a9c6f5bf0feb4da0b6a45d234a79d0
                           .group:00000000 wm4.ll_aton_platform.h.20.06ded592ee586a6abb6019a90ebd54df
                           .group:00000000 wm4.stm32n6xx_hal_conf.h.21.004a06df6e15ac197e03f723792da58a
                           .group:00000000 wm4.arm_cmse.h.103.a0d15a79c4c9a67da8d5831704d7248e
                           .group:00000000 wm4.stm32n6xx.h.34.80585dd08aa426c932f6311fdb7386da
                           .group:00000000 wm4.stm32n657xx.h.26.acd272cb67318cc1a4791ce2f0720ca6
ARM GAS  /tmp/ccyFtwdm.s 			page 156


                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm55.h.68.832d5cf835639cc0d28219c3d2867330
                           .group:00000000 wm4.core_cm55.h.196.52e437a270752da561676e507b35baeb
                           .group:00000000 wm4.mpu_armv8.h.32.9d72426c8e2b47753456dcb84802c5b3
                           .group:00000000 wm4.pmu_armv8.h.32.eaa95f88a71b29390b135fd81c071b6b
                           .group:00000000 wm4.core_cm55.h.4411.860dad8650880893dd57b815844f7186
                           .group:00000000 wm4.cachel1_armv7.h.32.abd77761a989e008b0c60891114a33c7
                           .group:00000000 wm4.stm32n657xx.h.575.1c2a5e6bedffc6f9083dcc857bc6d09d
                           .group:00000000 wm4.stm32n6xx.h.114.5cf793d8af485e14f110e3e24bde1aa5
                           .group:00000000 wm4.stm32_hal_legacy.h.22.87fb12bf5a1a1e00fc134f22bc9aa8c4
                           .group:00000000 wm4.stm32n6xx_hal_def.h.63.2cbbf1954826c09c874c4e06e42e8b71
                           .group:00000000 wm4.stm32n6xx_ll_bus.h.38.2366a295ee4cdb04833997d3787fcd2d
                           .group:00000000 wm4.stm32n6xx_ll_rcc.h.21.002e22a16fd7f67dde6dce41e8ba9620
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.194.1cb1283e40f9bebcd3fba2a9a961838e
                           .group:00000000 wm4.stm32n6xx_hal_rcc_ex.h.21.79aa32178dfef625fbd20d362449acfa
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.4359.3f0b7ad33826d95438602c9aebc08af9
                           .group:00000000 wm4.stm32n6xx_hal_gpio.h.21.89d54af663b98eb8fc098192053f7eeb
                           .group:00000000 wm4.stm32n6xx_hal_gpio_ex.h.22.4acb2e3511a98bb48b81cfc8e09fd59e
                           .group:00000000 wm4.stm32n6xx_hal_rif.h.21.424d0bafb874a777dee3742a22e13037
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.21.61e48c5c2e8d25d22177834b232fe45c
                           .group:00000000 wm4.stm32n6xx_hal_dma_ex.h.21.66e597beb090a165329d6ccf665e41bc
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.1020.87e2180c009560b617c1f8208140c950
                           .group:00000000 wm4.stm32n6xx_hal_cortex.h.21.f493623cc58f9454ab4eae41e395c5cc
                           .group:00000000 wm4.stm32n6xx_hal_bsec.h.21.61b309e67dd810e28897a01b1b21a97f
                           .group:00000000 wm4.stm32n6xx_hal_dcmipp.h.21.f538bfd785c6469670251ac9bc7af55d
                           .group:00000000 wm4.stm32n6xx_hal_dma2d.h.21.75c8d46cdbb72970123b3f34ae2043d7
                           .group:00000000 wm4.stm32n6xx_hal_exti.h.21.fda87e715ea6b98239ec30171d1df594
                           .group:00000000 wm4.stm32n6xx_hal_gfxmmu.h.21.9784a9103143d48bd3c37389d0e0b8e6
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.21.3f483626ff64c5bf027265bb2e1d1331
                           .group:00000000 wm4.stm32n6xx_hal_i2c_ex.h.21.79e9196c22282cdaf6b4047893638c45
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.741.1084702632703acc669e4282b3043372
                           .group:00000000 wm4.stm32n6xx_hal_icache.h.21.194b4ec6e76f32b14f65c85616854850
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.21.ae1eb09930e7e550e48e418ac5849e4d
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.1002.b13ede7fc94ed5ad1c6768a157d2149a
                           .group:00000000 wm4.stm32n6xx_ll_usb.h.21.d518a5d97876c2ff49040c20a2c4a120
                           .group:00000000 wm4.stm32n6xx_hal_pcd.h.155.27040aac6844effe2af8c180caf1dd2e
                           .group:00000000 wm4.stm32n6xx_hal_pwr.h.21.cdb73e4869c3fed3fc84f901ec0e5f0a
                           .group:00000000 wm4.stm32n6xx_hal_pwr_ex.h.21.1a673224a58b0c1e5fad8eeda6514208
                           .group:00000000 wm4.stm32n6xx_hal_ramcfg.h.21.a62dfbb4d2c14e9a8c634a215e37bd3d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.21.9f810303326e2d91749800e9911f8e4d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.906.93ec0695066db4253cdbcb7d84358a0b
                           .group:00000000 wm4.stm32n6xx_hal_tim.h.21.839dd2b2a70382fb2c44f8f293a84d5f
                           .group:00000000 wm4.stm32n6xx_hal_tim_ex.h.21.e372d5ac63c13441211ea4ecbd353150
                           .group:00000000 wm4.stm32n6xx_hal_uart.h.21.230f549bfa0d5ebfd77bfb311b2aca15
                           .group:00000000 wm4.stm32n6xx_hal_uart_ex.h.21.a0d5511e1d0703b7b5278c8f5472b96d
                           .group:00000000 wm4.stm32n6xx_hal_xspi.h.21.e17898be2073b6b6b19faf30b4e304e9
                           .group:00000000 wm4.stm32n6xx_hal_cacheaxi.h.21.7c3375b7903ec42376e4883320997f74
                           .group:00000000 wm4.stm32n6xx_hal_gpu2d.h.21.48d0249122abad294a630c39cc4ebaed
                           .group:00000000 wm4.stm32n6xx_hal.h.81.5e59143eba07faca3e9aeaa5470826c8
                           .group:00000000 wm4.ll_aton_platform.h.288.664a74b8c5792a861b3d52bd39f4a693
                           .group:00000000 wm4.ATON.h.19.cf7dff4c0f1bfe90e42066f604751dc7
                           .group:00000000 wm4.ll_aton_rcompat.h.22.b2bd0d777466a5ac720f3b2429c5fea7
                           .group:00000000 wm4.ll_aton_platform.h.383.f09ccd502bb682b863f991d963ee7462
                           .group:00000000 wm4.ll_aton_osal_freertos.h.62.85a065f77def7f6fef26149f92fe1378
                           .group:00000000 wm4.ll_aton_osal.h.116.bc018513feb9b28713cf2afc78ec679b
                           .group:00000000 wm4.ll_aton_rt_user_api.h.71.e6b7f8d03b2c998f838260ad3cb6cd40
                           .group:00000000 wm4.od_pp_output_if.h.11.62a3da738caf687aa42d96759c237b2c
ARM GAS  /tmp/ccyFtwdm.s 			page 157


                           .group:00000000 wm4.mpe_pp_output_if.h.11.db0dd5ceb87072354c56b51e8f9b2a0d
                           .group:00000000 wm4.pd_pp_output_if.h.19.b7de9bd1876930668a82409743b6dbf4
                           .group:00000000 wm4.spe_pp_output_if.h.11.cb67d0d15a71c95e0e8b7fee8a9755fe
                           .group:00000000 wm4.iseg_pp_output_if.h.11.df7e791a4e783022a9fba78cdb1c05d4
                           .group:00000000 wm4.sseg_pp_output_if.h.11.caf00fb1ae24f8dc9c80bee7827b96f2
                           .group:00000000 wm4.app_postprocess.h.49.6186ff44b2c06089fe0297042919e83a
                           .group:00000000 wm4.isp_conf.h.21.bfb1d020517608810095aa56acf25d1e
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.isp_core.h.109.be5387f515355b6edcb70af2607f9a68
                           .group:00000000 wm4.ld.h.19.4ce791deb5cad1787551e620ef002c56
                           .group:00000000 wm4.cmw_errno.h.21.91021ac9b2627a1ce6b8517d105715d1
                           .group:00000000 wm4.stm32n6570_discovery_conf.h.21.f52c8202689527a3dc0d9c6cba9c0416
                           .group:00000000 wm4.stm32n6570_discovery_errno.h.22.80e523b09444a11ebe4b6e24ae914f0e
                           .group:00000000 wm4.stm32n6570_discovery_bus.h.62.3b5b2c6837f7adeb489604fa214cd371
                           .group:00000000 wm4.cmw_camera.h.33.b34cbb506ffb5bbc0bae0cee9fc48966
                           .group:00000000 wm4.stm32n6570_discovery.h.25.5fc3699797f7c334a2e25a2a6a563b07
                           .group:00000000 wm4.lcd.h.21.98701c105e66fef2e089854e5bc0fe32
                           .group:00000000 wm4.stm32_lcd.h.55.1a04e503950bf34ef3721d2ebb9542fc
                           .group:00000000 wm4.stm32_lcd_ex.h.21.eaf9c9c1000e162e58259e027110f2f5
                           .group:00000000 wm4.utils.h.19.2f7e4a8a839d9215c56961f5a9914d6d
                           .group:00000000 wm4.nema_sys_defs.h.24.0b35b5138cb9b4a3130f5d424bc2bcc0
                           .group:00000000 wm4.nema_hal.h.193.74a3b292db2bcbda0132dae40ae0f4e5
                           .group:00000000 wm4.nema_cmdlist.h.30.a652eb980f08f0ed22ad00119d504926
                           .group:00000000 wm4.nema_graphics.h.61.b3907f86eccb4e55a4b69e8aebdd3657
                           .group:00000000 wm4.nema_blender.h.30.fb13cc9231bd108bca212984b3a891e0
                           .group:00000000 wm4.nema_math.h.30.ef7265c89982f7dae18e3ec2d7f3d003
                           .group:00000000 wm4.nema_version.h.35.6aae27202c190348dff84b89d4c12df7
                           .group:00000000 wm4.nema_error.h.29.50848ed81d21ff4ae4b870fae3681118

UNDEFINED SYMBOLS
xQueueSemaphoreTake
__assert_func
CAM_IspUpdate
xQueueGenericSend
BSP_PB_GetState
cos
sin
UTIL_LCD_FillCircle
UTIL_LCD_DrawLine
ld_bindings_idx
LL_ATON_Output_Buffers_Info_yolo_detector
LL_ATON_Input_Buffers_Info_yolo_detector
app_postprocess_init
HAL_GetTick
CAM_NNPipe_Start
LL_ATON_Set_User_Input_Buffer_yolo_detector
LL_ATON_RT_Main
app_postprocess_run
UTIL_LCD_DrawRect
__aeabi_ul2d
BSP_PB_Init
memcpy
SCRL_SetAddress_NoReload
UTIL_LCD_FillRect
TIM4_Get_Value
ARM GAS  /tmp/ccyFtwdm.s 			page 158


ulTaskGetIdleRunTimeCounter
memmove
UTIL_LCD_GetFont
UTIL_LCDEx_PrintfAt
SCRL_ReloadLayer
puts
memset
SCRL_Init
UTIL_LCD_SetLayer
UTIL_LCD_Clear
UTIL_LCD_SetFont
UTIL_LCD_SetTextColor
xQueueCreateCountingSemaphoreStatic
vQueueDelete
CAM_Init
xQueueCreateMutexStatic
CAM_DisplayPipe_Start
xTaskCreateStatic
Font20
CMW_CAMERA_GetDCMIPPHandle
HAL_DCMIPP_PIPE_SetMemoryAddress
SRCL_Update
xPortIsInsideInterrupt
xQueueGiveFromISR
LL_ATON_EC_Network_Init_yolo_detector
LL_ATON_EC_Inference_Init_yolo_detector
LL_ATON_Get_User_Input_Buffer_yolo_detector
LL_ATON_Set_User_Output_Buffer_yolo_detector
LL_ATON_Get_User_Output_Buffer_yolo_detector
LL_ATON_EpochBlockItems_yolo_detector
LL_ATON_Internal_Buffers_Info_yolo_detector
