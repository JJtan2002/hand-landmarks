ARM GAS  /tmp/ccddOyyT.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 4
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"app.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "Src/app.c"
  25              		.section	.text.LL_Buffer_addr_start,"ax",%progbits
  26              		.align	1
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	LL_Buffer_addr_start:
  32              	.LVL0:
  33              	.LFB2660:
  34              		.file 2 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h"
   1:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
   2:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   3:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @file    ll_aton_NN_interface.h
   4:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @author  SRA Artificial Intelligence & Embedded Architectures
   5:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief   Interface that defines a NN generated by the AtoNN Compiler.
   6:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   7:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @attention
   8:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
   9:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * Copyright (c) 2024 STMicroelectronics.
  10:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * All rights reserved.
  11:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  12:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * in the root directory of this software component.
  14:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  16:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
  17:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
  18:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  19:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef __LL_ATON_NN_INTERFACE_H
  20:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define __LL_ATON_NN_INTERFACE_H
  21:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  22:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef __cplusplus
  23:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** extern "C"
  24:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** {
ARM GAS  /tmp/ccddOyyT.s 			page 2


  25:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
  26:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  27:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <assert.h>
  28:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdbool.h>
  29:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stddef.h>
  30:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdint.h>
  31:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  32:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_config.h"
  33:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  34:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_attributes.h"
  35:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_util.h"
  36:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  37:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup User I/O Return Values & Callback Event Types
  38:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  39:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  40:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  41:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_User_IO_Result
  42:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_NOERROR,     /**< */
  44:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_ALIGN, /**< */
  45:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_SIZE,  /**< */
  46:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_INDEX, /**< */
  47:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_User_IO_Result_t;
  48:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  49:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_RT_Callbacktype
  50:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  51:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_START,  /**< Callback called before start_epoch_block */
  52:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_START, /**< Callback called after start_epoch_block */
  53:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_END,    /**< Callback called before end_epoch_block */
  54:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_END,   /**< Callback called after end_epoch_block */
  55:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_Init,    /**< Callback called after `LL_ATON_RT_Init_Network`,
  56:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  57:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_DeInit,  /**< Callback called after `LL_ATON_RT_DeInit_Network`,
  58:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  59:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Init,    /**< Callback called after `LL_ATON_RT_RuntimeInit` */
  60:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Deinit,  /**< Callback called before `LL_ATON_RT_RuntimeDeInit` */
  61:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_RT_Callbacktype_t;
  62:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  63:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
  64:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
  65:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  66:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  67:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Epoch Blocks
  68:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  69:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  70:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  71:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /* this is needed to avoid some compilers (e.g. KEIL) that observe a strict semantic about conver
  72:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * pointers to integers in cost initializers
  73:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  74:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef union
  75:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  76:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     unsigned char *p;
  77:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t i;
  78:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } __LL_address_t;
  79:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  80:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*EpochBlock_FuncPtr_t)(const void *epoch_block);
  81:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/ccddOyyT.s 			page 3


  82:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
  83:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_NONE = 0x0,                 /**< */
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_start = (0x1 << 0),   /**< First EpochBlock of an Epoch */
  86:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_end = (0x1 << 1),     /**< Last EpochBlock of an Epoch */
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob = (0x1 << 2),          /**< Item is an Epoch Blob */
  88:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_last_eb = (0x1 << 3),       /**< Last EpochBlock */
  89:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_hw = (0x1 << 4),       /**< Pure HW EpochBlock */
  90:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_sw = (0x1 << 5),       /**< Pure SW EpochBlock */
  91:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_hybrid = (0x1 << 6),        /**< Hybrid EpochBlock (i.e. mixed HW/SW) */
  92:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_internal = (0x1 << 7),      /**< ATON lib internal EpochBlock (used to impleme
  93:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob_encrypted = (0x1 << 8) /**< The blob is encrypted and must be decrypted o
  94:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_Flags_t;
  95:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  96:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
  97:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  98:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t start_epoch_block; /**< Method to execute the EpochBlock */
  99:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t end_epoch_block;   /**< Method to be executed when the EpochBlock ends */
 100:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t blob_address;                 /**< Blob address (in case this EpochBlock represents a
 101:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t wait_mask;                     /**< Mask needed to check when an EpochBlock ends
 102:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - if epoch blob: number (not bitmask) of epoch co
 103:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - otherwise: bitmask with all output streaming en
 104:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t flags;                         /**< EpochBlock flags */
 105:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef LL_ATON_EB_DBG_INFO
 106:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t epoch_num;             /**< Epoch number / First epoch number within blob */
 107:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t last_epoch_num;        /**< Epoch number / Last epoch number within blob */
 108:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t in_streng_mask;       /**< Debug information about input streaming engines used in epo
 109:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t out_streng_mask;      /**< Debug information about output streaming engines used in ep
 110:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_npu_cycles; /**< Debug information estimates for NPU cycles in epoch w/o mem
 111:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_tot_cycles; /**< Debug information estimates for NPU cycles in epoch w/ memo
 112:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                             // LL_ATON_EB_DBG_INFO
 113:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_ItemTypeDef;
 114:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef EpochBlock_ItemTypeDef LL_ATON_RT_EpochBlockItem_t;
 115:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 116:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 117:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 118:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 119:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 120:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for User Callbacks
 121:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 122:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 123:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 124:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 125:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last one of an array of `const EpochBlock_ItemType
 126:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 127:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 128:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb);
 129:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 130:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 131:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the first EpochBlock of an Epoch
 132:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 133:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 134:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb);
 135:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 136:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 137:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last EpochBlock of an Epoch
 138:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
ARM GAS  /tmp/ccddOyyT.s 			page 4


 139:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 140:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb);
 141:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 142:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 143:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the an Epoch Blob
 144:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 145:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 146:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb);
 147:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 148:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 149:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if - in case this epoch is a blob (see above) - the blob is encrypted
 150:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 151:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 152:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb);
 153:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 154:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 155:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is pure SW epoch
 156:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 157:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 158:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb);
 159:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 160:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 161:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a pure HW or mixed SW/HW epoch
 162:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 163:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 164:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb);
 165:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 166:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 167:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a hybrid epoch
 168:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 169:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 170:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb);
 171:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 172:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 173:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is an internal epoch
 174:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 175:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 176:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb);
 177:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 178:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 179:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the Epoch controller id to use
 180:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 181:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 182:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb);
 183:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 184:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 185:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the address of the configuration of the epoch controller (the blob address)
 186:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 187:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 188:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb);
 189:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 190:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 191:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer types definition
 192:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 193:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 194:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 195:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
ARM GAS  /tmp/ccddOyyT.s 			page 5


 196:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 197:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 198:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Input, Output, and Internal Buffers
 199:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 200:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 201:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 202:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 203:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 204:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UNDEFINED = 0,
 205:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT = 1,
 206:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT2 = 2,
 207:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT2 = 3,
 208:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT4 = 4,
 209:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT4 = 5,
 210:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT8 = 6,
 211:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT8 = 7,
 212:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT16 = 8,
 213:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT16 = 9,
 214:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT32 = 10,
 215:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT64 = 11,
 216:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_STRING = 12,
 217:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BOOL = 13,
 218:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT16 = 14,
 219:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_DOUBLE = 15,
 220:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT32 = 16,
 221:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT64 = 17,
 222:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX64 = 18,
 223:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX128 = 19,
 224:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BFLOAT16 = 20,
 225:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FXP = 100 // AtoNN specific
 226:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_DataType_TypeDef;
 227:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 228:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 229:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer Channel position
 230:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 231:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 232:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 233:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 234:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_UNDEFINED = 0, /**< No channel present */
 235:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_First = 1,     /**< Channel First         ( ...B C H W )*/
 236:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Last = 2,      /**< Channel Last          ( ...B H W C ) */
 237:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Mixed = 3,     /**< Channel with Batch(b) ( ...B C/b H W b ) */
 238:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_CHPos_TypeDef;
 239:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 240:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 241:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer definition
 242:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 243:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 244:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 245:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *name;             /**< Buffer name. NULL if end of list */
 246:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     __LL_address_t addr_base;     /**< Buffer base address */
 247:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_start;        /**< Offset of the buffer start address from the base address */
 248:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_end;          /**< Offset of the buffer end address from the base address
 249:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (first bytes address beyond buffer length) */
 250:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_limit;        /**< Offset of the limiter address from the base address,
 251:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (needed for configuring streaming engines) */
 252:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_user_allocated;    /**< */
ARM GAS  /tmp/ccddOyyT.s 			page 6


 253:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_param;             /**< */
 254:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t epoch;               /**< */
 255:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t batch;               /**< */
 256:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *mem_shape;    /**< shape as seen by the user in memory (only valid for input/ou
 257:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t mem_ndims;           /**< Number of dimensions of mem_shape (Length of mem_shape) */
 258:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_CHPos_TypeDef chpos;   /**< Position  of channels dimension in mem shape */
 259:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_DataType_TypeDef type; /**< */
 260:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qm;                    /**< */
 261:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qn;                    /**< */
 262:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t Qunsigned;            /**< */
 263:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t ndims;                /**< */
 264:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t nbits;                /**< */
 265:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t per_channel;          /**< */
 266:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *shape;        /**< */
 267:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const float *scale;           /**< */
 268:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const int16_t *offset;        /**< This can become int8 or uint8 based on the Qunsigned field.
 269:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (This field Must have the same format of the quantized value
 270:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_Buffer_InfoTypeDef;
 271:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 272:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 273:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 274:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 275:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 276:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for Buffer Analysis
 277:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 278:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 279:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 280:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 281:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the base address of the mem pool the buffer is allocated in
 282:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 283:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 284:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf);
 285:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 286:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 287:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the start address of the buffer
 288:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 289:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 290:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf);
 291:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 292:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 293:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the end address of the buffer
 294:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 295:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 296:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf);
 297:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 298:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 299:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the limit address of the buffer
 300:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 301:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 302:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf);
 303:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 304:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 305:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the length of the buffer
 306:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 307:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 308:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf);
 309:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/ccddOyyT.s 			page 7


 310:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 311:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the buffer elements number of bits
 312:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 313:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 314:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_bits(const LL_Buffer_InfoTypeDef *buf);
 315:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 316:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 317:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 318:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 319:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 320:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types and Declaration Macros for ATON Runtime Execution & User AP
 321:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 322:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 323:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 324:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct; // forward declaration
 325:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct __nn_instance_struct NN_Instance_TypeDef;
 326:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 327:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
 328:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief Declare the function prototypes for named NN interface functions generated by the AtoNN c
 329:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param network_name name of the network as provided by option `--network-name`
 330:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
 331:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)                                              
 332:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Network_Init_##network_name(void);                                        
 333:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Inference_Init_##network_name(void);                                      
 334:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_##network_name(uint32_t num, void *
 335:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                uint32_t size);     
 336:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Input_Buffer_##network_name(uint32_t num);                         
 337:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_##network_name(uint32_t num, void 
 338:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                 uint32_t size);    
 339:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Output_Buffer_##network_name(uint32_t num);                        
 340:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_##network_name(void);               
 341:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Output_Buffers_Info_##network_name(void);            
 342:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_##network_name(void);             
 343:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Internal_Buffers_Info_##network_name(void);
 344:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 345:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 346:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Type definitions for NN interface functions
 347:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 348:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef bool (*NN_EC_Hook_TypeDef)(void);
 349:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_InputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t s
 350:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_InputGetter_TypeDef)(uint32_t num);
 351:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_OutputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t 
 352:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_OutputGetter_TypeDef)(uint32_t num);
 353:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const EpochBlock_ItemTypeDef *(*NN_EpochBlockItems_TypeDef)(void);
 354:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const LL_Buffer_InfoTypeDef *(*NN_Buffers_Info_TypeDef)(void);
 355:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 356:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceRuntime_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype);
 357:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 358:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceEpochBlock_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype, const NN_Instance_Type
 359:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                             const EpochBlock_ItemTypeDef *epoch_block);
 360:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 361:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 362:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 363:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *network_name;
 364:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_network_init;
 365:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_inference_init;
 366:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputSetter_TypeDef input_setter;
ARM GAS  /tmp/ccddOyyT.s 			page 8


 367:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputGetter_TypeDef input_getter;
 368:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputSetter_TypeDef output_setter;
 369:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputGetter_TypeDef output_getter;
 370:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EpochBlockItems_TypeDef epoch_block_items;
 371:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef output_buffers_info;
 372:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef input_buffers_info;
 373:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef internal_buffers_info;
 374:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Interface_TypeDef;
 375:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 376:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 377:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 378:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile current_epoch_block; // pointer to current epoch block
 379:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile first_epoch_block;   // pointer to first epoch block in 
 380:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile next_epoch_block;    // pointer to epoch block to be ins
 381:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 382:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile saved_current_epoch_block; // pointer to saved current e
 383:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef
 384:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         *volatile saved_first_epoch_block; // pointer to saved first epoch block in current epoch l
 385:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 386:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     bool inference_started; // inference has been started
 387:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 388:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 389:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t triggered_events;        // currently triggered events/IRQs in current epoch
 390:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile bool current_epoch_block_started; // has current epoch block already been started
 391:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                         // (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 392:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 393:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef NDEBUG
 394:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t
 395:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         nr_of_epoch_blocks; // number of epoch blocks in network (includes also terminating empty e
 396:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t saved_nr_of_epoch_blocks; // number of epoch blocks in saved network (include
 397:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                 // empty epoch block)
 398:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                          // NDEBUG
 399:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 400:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     TraceEpochBlock_FuncPtr_t epoch_callback_function; // epoch callback function
 401:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 402:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if defined(LL_ATON_RT_RELOC)
 403:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t inst_reloc;
 404:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
 405:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 406:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Execution_State_TypeDef;
 407:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 408:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct
 409:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 410:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const NN_Interface_TypeDef *network;
 411:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Execution_State_TypeDef exec_state;
 412:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   };
 413:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 414:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 415:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 416:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 417:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 418:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Inline Implementations
 419:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 420:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 421:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 422:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb)
 423:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/ccddOyyT.s 			page 9


 424:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_last_eb) != 0);
 425:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 426:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 427:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb)
 428:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 429:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_start) != 0);
 430:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 431:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 432:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb)
 433:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 434:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_end) != 0);
 435:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 436:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 437:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb)
 438:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 439:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob) != 0);
 440:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 441:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 442:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb)
 443:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 444:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob_encrypted) != 0);
 445:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 446:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 447:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb)
 448:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 449:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_sw) != 0);
 450:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 451:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 452:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb)
 453:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 454:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_hw) != 0);
 455:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 456:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 457:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb)
 458:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 459:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_hybrid) != 0);
 460:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 461:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 462:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb)
 463:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 464:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_internal) != 0);
 465:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 466:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 467:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb)
 468:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 469:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 470:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->wait_mask;
 471:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 472:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 473:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb)
 474:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 475:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 476:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->blob_address;
 477:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 478:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf)
 480:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/ccddOyyT.s 			page 10


 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     if (buf->is_user_allocated)
 482:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       unsigned char **tmp = (unsigned char **)buf->addr_base.p;
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
 485:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 486:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->addr_base.p;
 487:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 488:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 489:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf)
 490:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  35              		.loc 2 490 3 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_start;
  40              		.loc 2 491 5 view .LVU1
  41              	.LBB185:
  42              	.LBI185:
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43              		.loc 2 479 32 view .LVU2
  44              	.LBB186:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  45              		.loc 2 481 5 view .LVU3
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  46              		.loc 2 481 8 is_stmt 0 view .LVU4
  47 0000 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
  48              	.LBB187:
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
  49              		.loc 2 483 23 view .LVU5
  50 0002 4368     		ldr	r3, [r0, #4]
  51              	.LBE187:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  52              		.loc 2 481 8 view .LVU6
  53 0004 02B1     		cbz	r2, .L2
  54              	.LBB188:
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
  55              		.loc 2 483 7 is_stmt 1 view .LVU7
  56              	.LVL1:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  57              		.loc 2 484 7 view .LVU8
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  58              		.loc 2 484 14 is_stmt 0 view .LVU9
  59 0006 1B68     		ldr	r3, [r3]
  60              	.LVL2:
  61              	.L2:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  62              		.loc 2 484 14 view .LVU10
  63              	.LBE188:
  64              	.LBE186:
  65              	.LBE185:
  66              		.loc 2 491 37 discriminator 1 view .LVU11
  67 0008 8068     		ldr	r0, [r0, #8]
  68              	.LVL3:
 492:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
  69              		.loc 2 492 3 view .LVU12
  70 000a 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccddOyyT.s 			page 11


  71 000c 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE2660:
  75              		.section	.text.clamp_point,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	clamp_point:
  82              	.LVL4:
  83              	.LFB7382:
   1:Src/app.c     **** /**
   2:Src/app.c     ****   ******************************************************************************
   3:Src/app.c     ****   * @file    app.c
   4:Src/app.c     ****   * @author  MDG Application Team
   5:Src/app.c     ****   ******************************************************************************
   6:Src/app.c     ****   * @attention
   7:Src/app.c     ****   *
   8:Src/app.c     ****   * Copyright (c) 2024 STMicroelectronics.
   9:Src/app.c     ****   * All rights reserved.
  10:Src/app.c     ****   *
  11:Src/app.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  12:Src/app.c     ****   * in the root directory of this software component.
  13:Src/app.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  14:Src/app.c     ****   *
  15:Src/app.c     ****   ******************************************************************************
  16:Src/app.c     ****   */
  17:Src/app.c     **** 
  18:Src/app.c     **** #include "app.h"
  19:Src/app.c     **** 
  20:Src/app.c     **** #include <stdint.h>
  21:Src/app.c     **** #include <stdio.h>
  22:Src/app.c     **** 
  23:Src/app.c     **** #include "app_cam.h"
  24:Src/app.c     **** #include "app_config.h"
  25:Src/app.c     **** #include "IPL_resize.h"
  26:Src/app.c     **** #include "app_postprocess.h"
  27:Src/app.c     **** #include "isp_api.h"
  28:Src/app.c     **** #include "ld.h"
  29:Src/app.c     **** #include "ll_aton_runtime.h"
  30:Src/app.c     **** #include "cmw_camera.h"
  31:Src/app.c     **** #include "scrl.h"
  32:Src/app.c     **** #ifdef STM32N6570_DK_REV
  33:Src/app.c     **** #include "stm32n6570_discovery.h"
  34:Src/app.c     **** #else
  35:Src/app.c     **** #include "stm32n6xx_nucleo.h"
  36:Src/app.c     **** #endif
  37:Src/app.c     **** #include "stm32_lcd.h"
  38:Src/app.c     **** #include "stm32_lcd_ex.h"
  39:Src/app.c     **** #include "stm32n6xx_hal.h"
  40:Src/app.c     **** #include "FreeRTOS.h"
  41:Src/app.c     **** #include "task.h"
  42:Src/app.c     **** #include "semphr.h"
  43:Src/app.c     **** #include "utils.h"
  44:Src/app.c     **** 
  45:Src/app.c     **** #define FREERTOS_PRIORITY(p) ((UBaseType_t)((int)tskIDLE_PRIORITY + configMAX_PRIORITIES / 2 + (p))
  46:Src/app.c     **** 
ARM GAS  /tmp/ccddOyyT.s 			page 12


  47:Src/app.c     **** #ifndef M_PI
  48:Src/app.c     **** #define M_PI 3.14159265358979323846
  49:Src/app.c     **** #endif
  50:Src/app.c     **** 
  51:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  52:Src/app.c     **** #include "nema_core.h"
  53:Src/app.c     **** #include "nema_error.h"
  54:Src/app.c     **** void nema_enable_tiling(int);
  55:Src/app.c     **** #endif
  56:Src/app.c     **** 
  57:Src/app.c     **** #define LCD_FG_WIDTH LCD_BG_WIDTH
  58:Src/app.c     **** #define LCD_FG_HEIGHT LCD_BG_HEIGHT
  59:Src/app.c     **** 
  60:Src/app.c     **** #define CACHE_OP(__op__) do { \
  61:Src/app.c     ****   if (is_cache_enable()) { \
  62:Src/app.c     ****     __op__; \
  63:Src/app.c     ****   } \
  64:Src/app.c     **** } while (0)
  65:Src/app.c     **** 
  66:Src/app.c     **** #define DBG_INFO 0
  67:Src/app.c     **** #define USE_FILTERED_TS 1
  68:Src/app.c     **** 
  69:Src/app.c     **** #define BQUEUE_MAX_BUFFERS 2
  70:Src/app.c     **** #define CPU_LOAD_HISTORY_DEPTH 8
  71:Src/app.c     **** 
  72:Src/app.c     **** #define DISPLAY_BUFFER_NB (DISPLAY_DELAY + 2)
  73:Src/app.c     **** 
  74:Src/app.c     **** /* palm detector */
  75:Src/app.c     **** #define PD_MAX_HAND_NB 1
  76:Src/app.c     **** 
  77:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  78:Src/app.c     **** typedef float app_v3_t[3];
  79:Src/app.c     **** #endif
  80:Src/app.c     **** 
  81:Src/app.c     **** typedef struct {
  82:Src/app.c     ****   float cx;
  83:Src/app.c     ****   float cy;
  84:Src/app.c     ****   float w;
  85:Src/app.c     ****   float h;
  86:Src/app.c     ****   float rotation;
  87:Src/app.c     **** } roi_t;
  88:Src/app.c     **** 
  89:Src/app.c     **** #define UTIL_LCD_COLOR_TRANSPARENT 0
  90:Src/app.c     **** 
  91:Src/app.c     **** #ifdef STM32N6570_DK_REV
  92:Src/app.c     **** #define LCD_FONT Font20
  93:Src/app.c     **** #define DISK_RADIUS 2
  94:Src/app.c     **** #else
  95:Src/app.c     **** #define LCD_FONT Font12
  96:Src/app.c     **** #define DISK_RADIUS 1
  97:Src/app.c     **** #endif
  98:Src/app.c     **** 
  99:Src/app.c     **** typedef struct
 100:Src/app.c     **** {
 101:Src/app.c     ****   uint32_t X0;
 102:Src/app.c     ****   uint32_t Y0;
 103:Src/app.c     ****   uint32_t XSize;
ARM GAS  /tmp/ccddOyyT.s 			page 13


 104:Src/app.c     ****   uint32_t YSize;
 105:Src/app.c     **** } Rectangle_TypeDef;
 106:Src/app.c     **** 
 107:Src/app.c     **** typedef struct {
 108:Src/app.c     ****   SemaphoreHandle_t free;
 109:Src/app.c     ****   StaticSemaphore_t free_buffer;
 110:Src/app.c     ****   SemaphoreHandle_t ready;
 111:Src/app.c     ****   StaticSemaphore_t ready_buffer;
 112:Src/app.c     ****   int buffer_nb;
 113:Src/app.c     ****   uint8_t *buffers[BQUEUE_MAX_BUFFERS];
 114:Src/app.c     ****   int free_idx;
 115:Src/app.c     ****   int ready_idx;
 116:Src/app.c     **** } bqueue_t;
 117:Src/app.c     **** 
 118:Src/app.c     **** typedef struct {
 119:Src/app.c     ****   uint64_t current_total;
 120:Src/app.c     ****   uint64_t current_thread_total;
 121:Src/app.c     ****   uint64_t prev_total;
 122:Src/app.c     ****   uint64_t prev_thread_total;
 123:Src/app.c     ****   struct {
 124:Src/app.c     ****     uint64_t total;
 125:Src/app.c     ****     uint64_t thread;
 126:Src/app.c     ****     uint32_t tick;
 127:Src/app.c     ****   } history[CPU_LOAD_HISTORY_DEPTH];
 128:Src/app.c     **** } cpuload_info_t;
 129:Src/app.c     **** 
 130:Src/app.c     **** typedef struct {
 131:Src/app.c     ****   int is_valid;
 132:Src/app.c     ****   pd_pp_box_t pd_hands;
 133:Src/app.c     ****   roi_t roi;
 134:Src/app.c     ****   ld_point_t ld_landmarks[LD_LANDMARK_NB];
 135:Src/app.c     **** } hand_info_t;
 136:Src/app.c     **** 
 137:Src/app.c     **** typedef struct {
 138:Src/app.c     ****   float nn_period_ms;
 139:Src/app.c     ****   uint32_t pd_ms;
 140:Src/app.c     ****   uint32_t hl_ms;
 141:Src/app.c     ****   uint32_t pp_ms;
 142:Src/app.c     ****   uint32_t disp_ms;
 143:Src/app.c     ****   int is_ld_displayed;
 144:Src/app.c     ****   int is_pd_displayed;
 145:Src/app.c     ****   int pd_hand_nb;
 146:Src/app.c     ****   float pd_max_prob;
 147:Src/app.c     ****   hand_info_t hands[PD_MAX_HAND_NB];
 148:Src/app.c     **** } display_info_t;
 149:Src/app.c     **** 
 150:Src/app.c     **** typedef struct {
 151:Src/app.c     ****   SemaphoreHandle_t update;
 152:Src/app.c     ****   StaticSemaphore_t update_buffer;
 153:Src/app.c     ****   SemaphoreHandle_t lock;
 154:Src/app.c     ****   StaticSemaphore_t lock_buffer;
 155:Src/app.c     ****   display_info_t info;
 156:Src/app.c     **** } display_t;
 157:Src/app.c     **** 
 158:Src/app.c     **** typedef struct {
 159:Src/app.c     ****   uint32_t nn_in_len;
 160:Src/app.c     ****   float *prob_out;
ARM GAS  /tmp/ccddOyyT.s 			page 14


 161:Src/app.c     ****   uint32_t prob_out_len;
 162:Src/app.c     ****   float *boxes_out;
 163:Src/app.c     ****   uint32_t boxes_out_len;
 164:Src/app.c     ****   pd_model_pp_static_param_t static_param;
 165:Src/app.c     ****   pd_pp_out_t pd_out;
 166:Src/app.c     **** } pd_model_info_t;
 167:Src/app.c     **** 
 168:Src/app.c     **** /**
 169:Src/app.c     ****  * @brief  YOLO detector model context struct
 170:Src/app.c     ****  */
 171:Src/app.c     **** typedef struct {
 172:Src/app.c     ****   // Input buffer info
 173:Src/app.c     ****   uint32_t nn_in_len;
 174:Src/app.c     **** 
 175:Src/app.c     ****   // Raw output buffer info from the model
 176:Src/app.c     ****   float *raw_detections_out;
 177:Src/app.c     ****   uint32_t raw_detections_out_len;
 178:Src/app.c     **** 
 179:Src/app.c     ****   // Post-processing parameters and final output
 180:Src/app.c     ****   od_yolov8_pp_static_param_t static_param;
 181:Src/app.c     ****   od_pp_out_t yolo_out; 
 182:Src/app.c     **** } yolo_detector_info_t;
 183:Src/app.c     **** 
 184:Src/app.c     **** typedef struct {
 185:Src/app.c     ****   uint8_t *nn_in;
 186:Src/app.c     ****   uint32_t nn_in_len;
 187:Src/app.c     ****   float *prob_out;
 188:Src/app.c     ****   uint32_t prob_out_len;
 189:Src/app.c     ****   float *landmarks_out;
 190:Src/app.c     ****   uint32_t landmarks_out_len;
 191:Src/app.c     **** } hl_model_info_t;
 192:Src/app.c     **** 
 193:Src/app.c     **** typedef struct {
 194:Src/app.c     ****   uint8_t *nn_in;
 195:Src/app.c     ****   uint32_t nn_in_len;
 196:Src/app.c     ****   float *prob_out;
 197:Src/app.c     ****   uint32_t prob_out_len;
 198:Src/app.c     ****   float *landmarks_out;
 199:Src/app.c     ****   uint32_t landmarks_out_len;
 200:Src/app.c     **** } fl_model_info_t;
 201:Src/app.c     **** 
 202:Src/app.c     **** typedef struct {
 203:Src/app.c     ****   Button_TypeDef button_id;
 204:Src/app.c     ****   int prev_state;
 205:Src/app.c     ****   void (*on_click_handler)(void *cb_args);
 206:Src/app.c     ****   void *cb_args;
 207:Src/app.c     **** } button_t;
 208:Src/app.c     **** 
 209:Src/app.c     **** /* Globals */
 210:Src/app.c     **** /* Lcd Background area */
 211:Src/app.c     **** static Rectangle_TypeDef lcd_bg_area = {
 212:Src/app.c     ****   .X0 = 0,
 213:Src/app.c     ****   .Y0 = 0,
 214:Src/app.c     ****   .XSize = LCD_BG_WIDTH,
 215:Src/app.c     ****   .YSize = LCD_BG_HEIGHT,
 216:Src/app.c     **** };
 217:Src/app.c     **** /* Lcd Foreground area */
ARM GAS  /tmp/ccddOyyT.s 			page 15


 218:Src/app.c     **** static Rectangle_TypeDef lcd_fg_area = {
 219:Src/app.c     ****   .X0 = 0,
 220:Src/app.c     ****   .Y0 = 0,
 221:Src/app.c     ****   .XSize = LCD_FG_WIDTH,
 222:Src/app.c     ****   .YSize = LCD_FG_HEIGHT,
 223:Src/app.c     **** };
 224:Src/app.c     **** /* Lcd Background Buffer */
 225:Src/app.c     **** static uint8_t lcd_bg_buffer[DISPLAY_BUFFER_NB][LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP] ALIGN_3
 226:Src/app.c     **** static int lcd_bg_buffer_disp_idx = 1;
 227:Src/app.c     **** static int lcd_bg_buffer_capt_idx = 0;
 228:Src/app.c     **** /* Lcd Foreground Buffer */
 229:Src/app.c     **** static uint8_t lcd_fg_buffer[2][LCD_FG_WIDTH * LCD_FG_HEIGHT* 2] ALIGN_32 IN_PSRAM;
 230:Src/app.c     **** static int lcd_fg_buffer_rd_idx;
 231:Src/app.c     **** static display_t disp = {
 232:Src/app.c     ****   .info.is_ld_displayed = 1,
 233:Src/app.c     ****   .info.is_pd_displayed = 0,
 234:Src/app.c     **** };
 235:Src/app.c     **** static cpuload_info_t cpu_load;
 236:Src/app.c     **** /* screen buffer */
 237:Src/app.c     **** static uint8_t screen_buffer[LCD_BG_WIDTH * LCD_BG_HEIGHT * 2] ALIGN_32 IN_PSRAM;
 238:Src/app.c     **** 
 239:Src/app.c     **** /* model */
 240:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(yolo_detector);
 241:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(face_landmark);
 242:Src/app.c     **** static roi_t rois[PD_MAX_HAND_NB];
 243:Src/app.c     ****  /* hand landmark */
 244:Src/app.c     **** //LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(hand_landmark);
 245:Src/app.c     **** static ld_point_t ld_landmarks[PD_MAX_HAND_NB][LD_LANDMARK_NB];
 246:Src/app.c     **** static uint32_t frame_event_nb;
 247:Src/app.c     **** static volatile uint32_t frame_event_nb_for_resize;
 248:Src/app.c     **** 
 249:Src/app.c     ****  /* nn input buffers */
 250:Src/app.c     **** static uint8_t nn_input_buffers[2][NN_WIDTH * NN_HEIGHT * NN_BPP] ALIGN_32 IN_PSRAM;
 251:Src/app.c     **** static bqueue_t nn_input_queue;
 252:Src/app.c     **** 
 253:Src/app.c     ****  /* rtos */
 254:Src/app.c     **** static StaticTask_t nn_thread;
 255:Src/app.c     **** static StackType_t nn_thread_stack[4 * configMINIMAL_STACK_SIZE];
 256:Src/app.c     **** static StaticTask_t dp_thread;
 257:Src/app.c     **** static StackType_t dp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 258:Src/app.c     **** static StaticTask_t isp_thread;
 259:Src/app.c     **** static StackType_t isp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 260:Src/app.c     **** static SemaphoreHandle_t isp_sem;
 261:Src/app.c     **** static StaticSemaphore_t isp_sem_buffer;
 262:Src/app.c     **** 
 263:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
 264:Src/app.c     **** static GFXMMU_HandleTypeDef hgfxmmu;
 265:Src/app.c     **** static nema_cmdlist_t cl;
 266:Src/app.c     **** #endif
 267:Src/app.c     **** 
 268:Src/app.c     **** static int is_cache_enable()
 269:Src/app.c     **** {
 270:Src/app.c     **** #if defined(USE_DCACHE)
 271:Src/app.c     ****   return 1;
 272:Src/app.c     **** #else
 273:Src/app.c     ****   return 0;
 274:Src/app.c     **** #endif
ARM GAS  /tmp/ccddOyyT.s 			page 16


 275:Src/app.c     **** }
 276:Src/app.c     **** 
 277:Src/app.c     **** static float pd_normalize_angle(float angle)
 278:Src/app.c     **** {
 279:Src/app.c     ****   return angle - 2 * M_PI * floorf((angle - (-M_PI)) / (2 * M_PI));
 280:Src/app.c     **** }
 281:Src/app.c     **** 
 282:Src/app.c     **** /* Without rotation support allow limited amount of angles */
 283:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 284:Src/app.c     **** static float pd_cook_rotation(float angle)
 285:Src/app.c     **** {
 286:Src/app.c     ****   if (angle >= (3 * M_PI) / 4)
 287:Src/app.c     ****     angle = M_PI;
 288:Src/app.c     ****   else if (angle >= (1 * M_PI) / 4)
 289:Src/app.c     ****     angle = M_PI / 2;
 290:Src/app.c     ****   else if (angle >= -(1 * M_PI) / 4)
 291:Src/app.c     ****     angle = 0;
 292:Src/app.c     ****   else if (angle >= -(3 * M_PI) / 4)
 293:Src/app.c     ****     angle = -M_PI / 2;
 294:Src/app.c     ****   else
 295:Src/app.c     ****     angle = -M_PI;
 296:Src/app.c     **** 
 297:Src/app.c     ****   return angle;
 298:Src/app.c     **** }
 299:Src/app.c     **** #else
 300:Src/app.c     **** static float pd_cook_rotation(float angle)
 301:Src/app.c     **** {
 302:Src/app.c     ****   return angle;
 303:Src/app.c     **** }
 304:Src/app.c     **** #endif
 305:Src/app.c     **** 
 306:Src/app.c     **** static float pd_compute_rotation(pd_pp_box_t *box)
 307:Src/app.c     **** {
 308:Src/app.c     ****   float x0, y0, x1, y1;
 309:Src/app.c     ****   float rotation;
 310:Src/app.c     **** 
 311:Src/app.c     ****   x0 = box->pKps[0].x;
 312:Src/app.c     ****   y0 = box->pKps[0].y;
 313:Src/app.c     ****   x1 = box->pKps[2].x;
 314:Src/app.c     ****   y1 = box->pKps[2].y;
 315:Src/app.c     **** 
 316:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
 317:Src/app.c     **** 
 318:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
 319:Src/app.c     **** }
 320:Src/app.c     **** 
 321:Src/app.c     **** static void cvt_pd_coord_to_screen_coord(pd_pp_box_t *box)
 322:Src/app.c     **** {
 323:Src/app.c     ****   int i;
 324:Src/app.c     **** 
 325:Src/app.c     ****   /* This is not a typo. Since screen aspect ratio was conserved. We really want to use LCD_BG_WIDT
 326:Src/app.c     ****    * y positions.
 327:Src/app.c     ****    */
 328:Src/app.c     **** 
 329:Src/app.c     ****   box->x_center *= LCD_BG_WIDTH;
 330:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 331:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
ARM GAS  /tmp/ccddOyyT.s 			page 17


 332:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 333:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 334:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 335:Src/app.c     ****     box->pKps[i].y *= LCD_BG_WIDTH;
 336:Src/app.c     ****   }
 337:Src/app.c     **** }
 338:Src/app.c     **** 
 339:Src/app.c     **** static void roi_shift_and_scale(roi_t *roi, float shift_x, float shift_y, float scale_x, float scal
 340:Src/app.c     **** {
 341:Src/app.c     ****   float long_side;
 342:Src/app.c     ****   float sx, sy;
 343:Src/app.c     **** 
 344:Src/app.c     ****   sx = (roi->w * shift_x * cos(roi->rotation) - roi->h * shift_y * sin(roi->rotation));
 345:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 346:Src/app.c     **** 
 347:Src/app.c     ****   roi->cx += sx;
 348:Src/app.c     ****   roi->cy += sy;
 349:Src/app.c     **** 
 350:Src/app.c     ****   long_side = MAX(roi->w, roi->h);
 351:Src/app.c     ****   roi->w = long_side;
 352:Src/app.c     ****   roi->h = long_side;
 353:Src/app.c     **** 
 354:Src/app.c     ****   roi->w *= scale_x;
 355:Src/app.c     ****   roi->h *= scale_y;
 356:Src/app.c     **** }
 357:Src/app.c     **** 
 358:Src/app.c     **** static void pd_box_to_roi(pd_pp_box_t *box,  roi_t *roi)
 359:Src/app.c     **** {
 360:Src/app.c     ****   const float shift_x = 0;
 361:Src/app.c     ****   const float shift_y = -0.5;
 362:Src/app.c     ****   const float scale = 2.6;
 363:Src/app.c     **** 
 364:Src/app.c     ****   roi->cx = box->x_center;
 365:Src/app.c     ****   roi->cy = box->y_center;
 366:Src/app.c     ****   roi->w = box->width;
 367:Src/app.c     ****   roi->h = box->height;
 368:Src/app.c     ****   roi->rotation = pd_compute_rotation(box);
 369:Src/app.c     **** 
 370:Src/app.c     ****   roi_shift_and_scale(roi, shift_x, shift_y, scale, scale);
 371:Src/app.c     **** 
 372:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 373:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
 374:Src/app.c     ****   roi->rotation = 0;
 375:Src/app.c     **** #endif
 376:Src/app.c     **** }
 377:Src/app.c     **** 
 378:Src/app.c     **** static void copy_yolo_box(od_pp_outBuffer_t *dst, const od_pp_outBuffer_t *src)
 379:Src/app.c     **** {
 380:Src/app.c     ****   dst->conf = src->conf;
 381:Src/app.c     ****   dst->x_center = src->x_center;
 382:Src/app.c     ****   dst->y_center = src->y_center;
 383:Src/app.c     ****   dst->width = src->width;
 384:Src/app.c     ****   dst->height = src->height;
 385:Src/app.c     ****   dst->class_index = src->class_index;
 386:Src/app.c     **** }
 387:Src/app.c     **** 
 388:Src/app.c     **** static void clear_yolo_output(od_pp_outBuffer_t *output, int max_count) {
ARM GAS  /tmp/ccddOyyT.s 			page 18


 389:Src/app.c     ****     for (int i = 0; i < max_count; i++) {
 390:Src/app.c     ****         output[i].conf = 0.0f;
 391:Src/app.c     ****         output[i].x_center = 0.0f;
 392:Src/app.c     ****         output[i].y_center = 0.0f;
 393:Src/app.c     ****         output[i].width = 0.0f;
 394:Src/app.c     ****         output[i].height = 0.0f;
 395:Src/app.c     ****         output[i].class_index = -1;  // invalid
 396:Src/app.c     ****     }
 397:Src/app.c     **** }
 398:Src/app.c     **** static void copy_pd_box(pd_pp_box_t *dst, pd_pp_box_t *src)
 399:Src/app.c     **** {
 400:Src/app.c     ****   int i;
 401:Src/app.c     **** 
 402:Src/app.c     ****   dst->prob = src->prob;
 403:Src/app.c     ****   dst->x_center = src->x_center;
 404:Src/app.c     ****   dst->y_center = src->y_center;
 405:Src/app.c     ****   dst->width = src->width;
 406:Src/app.c     ****   dst->height = src->height;
 407:Src/app.c     ****   for (i = 0 ; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++)
 408:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 409:Src/app.c     **** }
 410:Src/app.c     **** 
 411:Src/app.c     **** static void button_init(button_t *b, Button_TypeDef id, void (*on_click_handler)(void *), void *cb_
 412:Src/app.c     **** {
 413:Src/app.c     ****   int ret;
 414:Src/app.c     **** 
 415:Src/app.c     ****   ret = BSP_PB_Init(id, BUTTON_MODE_GPIO);
 416:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 417:Src/app.c     **** 
 418:Src/app.c     ****   b->button_id = id;
 419:Src/app.c     ****   b->on_click_handler = on_click_handler;
 420:Src/app.c     ****   b->prev_state = 0;
 421:Src/app.c     ****   b->cb_args = cb_args;
 422:Src/app.c     **** }
 423:Src/app.c     **** 
 424:Src/app.c     **** static void button_process(button_t *b)
 425:Src/app.c     **** {
 426:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 427:Src/app.c     **** 
 428:Src/app.c     ****   if (state != b->prev_state && state && b->on_click_handler)
 429:Src/app.c     ****     b->on_click_handler(b->cb_args);
 430:Src/app.c     **** 
 431:Src/app.c     ****   b->prev_state = state;
 432:Src/app.c     **** }
 433:Src/app.c     **** 
 434:Src/app.c     **** static void cpuload_init(cpuload_info_t *cpu_load)
 435:Src/app.c     **** {
 436:Src/app.c     ****   memset(cpu_load, 0, sizeof(cpuload_info_t));
 437:Src/app.c     **** }
 438:Src/app.c     **** 
 439:Src/app.c     **** static void cpuload_update(cpuload_info_t *cpu_load)
 440:Src/app.c     **** {
 441:Src/app.c     ****   int i;
 442:Src/app.c     **** 
 443:Src/app.c     ****   cpu_load->history[1] = cpu_load->history[0];
 444:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 445:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
ARM GAS  /tmp/ccddOyyT.s 			page 19


 446:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 447:Src/app.c     **** 
 448:Src/app.c     ****   if (cpu_load->history[1].tick - cpu_load->history[2].tick < 1000)
 449:Src/app.c     ****     return ;
 450:Src/app.c     **** 
 451:Src/app.c     ****   for (i = 0; i < CPU_LOAD_HISTORY_DEPTH - 2; i++)
 452:Src/app.c     ****     cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 1 - i] = cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 
 453:Src/app.c     **** }
 454:Src/app.c     **** 
 455:Src/app.c     **** static void cpuload_get_info(cpuload_info_t *cpu_load, float *cpu_load_last, float *cpu_load_last_s
 456:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 457:Src/app.c     **** {
 458:Src/app.c     ****   if (cpu_load_last)
 459:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 460:Src/app.c     ****                      (cpu_load->history[0].total - cpu_load->history[1].total);
 461:Src/app.c     ****   if (cpu_load_last_second)
 462:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 463:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 464:Src/app.c     ****   if (cpu_load_last_five_seconds)
 465:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 466:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[7].total);
 467:Src/app.c     **** }
 468:Src/app.c     **** 
 469:Src/app.c     **** static int bqueue_init(bqueue_t *bq, int buffer_nb, uint8_t **buffers)
 470:Src/app.c     **** {
 471:Src/app.c     ****   int i;
 472:Src/app.c     **** 
 473:Src/app.c     ****   if (buffer_nb > BQUEUE_MAX_BUFFERS)
 474:Src/app.c     ****     return -1;
 475:Src/app.c     **** 
 476:Src/app.c     ****   bq->free = xSemaphoreCreateCountingStatic(buffer_nb, buffer_nb, &bq->free_buffer);
 477:Src/app.c     ****   if (!bq->free)
 478:Src/app.c     ****     goto free_sem_error;
 479:Src/app.c     ****   bq->ready = xSemaphoreCreateCountingStatic(buffer_nb, 0, &bq->ready_buffer);
 480:Src/app.c     ****   if (!bq->ready)
 481:Src/app.c     ****     goto ready_sem_error;
 482:Src/app.c     **** 
 483:Src/app.c     ****   bq->buffer_nb = buffer_nb;
 484:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 485:Src/app.c     ****     assert(buffers[i]);
 486:Src/app.c     ****     bq->buffers[i] = buffers[i];
 487:Src/app.c     ****   }
 488:Src/app.c     ****   bq->free_idx = 0;
 489:Src/app.c     ****   bq->ready_idx = 0;
 490:Src/app.c     **** 
 491:Src/app.c     ****   return 0;
 492:Src/app.c     **** 
 493:Src/app.c     **** ready_sem_error:
 494:Src/app.c     ****   vSemaphoreDelete(bq->free);
 495:Src/app.c     **** free_sem_error:
 496:Src/app.c     ****   return -1;
 497:Src/app.c     **** }
 498:Src/app.c     **** 
 499:Src/app.c     **** static uint8_t *bqueue_get_free(bqueue_t *bq, int is_blocking)
 500:Src/app.c     **** {
 501:Src/app.c     ****   uint8_t *res;
 502:Src/app.c     ****   int ret;
ARM GAS  /tmp/ccddOyyT.s 			page 20


 503:Src/app.c     **** 
 504:Src/app.c     ****   ret = xSemaphoreTake(bq->free, is_blocking ? portMAX_DELAY : 0);
 505:Src/app.c     ****   if (ret == pdFALSE)
 506:Src/app.c     ****     return NULL;
 507:Src/app.c     **** 
 508:Src/app.c     ****   res = bq->buffers[bq->free_idx];
 509:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 510:Src/app.c     **** 
 511:Src/app.c     ****   return res;
 512:Src/app.c     **** }
 513:Src/app.c     **** 
 514:Src/app.c     **** static void bqueue_put_free(bqueue_t *bq)
 515:Src/app.c     **** {
 516:Src/app.c     ****   int ret;
 517:Src/app.c     **** 
 518:Src/app.c     ****   ret = xSemaphoreGive(bq->free);
 519:Src/app.c     ****   assert(ret == pdTRUE);
 520:Src/app.c     **** }
 521:Src/app.c     **** 
 522:Src/app.c     **** static uint8_t *bqueue_get_ready(bqueue_t *bq)
 523:Src/app.c     **** {
 524:Src/app.c     ****   uint8_t *res;
 525:Src/app.c     ****   int ret;
 526:Src/app.c     **** 
 527:Src/app.c     ****   ret = xSemaphoreTake(bq->ready, portMAX_DELAY);
 528:Src/app.c     ****   assert(ret == pdTRUE);
 529:Src/app.c     **** 
 530:Src/app.c     ****   res = bq->buffers[bq->ready_idx];
 531:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 532:Src/app.c     **** 
 533:Src/app.c     ****   return res;
 534:Src/app.c     **** }
 535:Src/app.c     **** 
 536:Src/app.c     **** static void bqueue_put_ready(bqueue_t *bq)
 537:Src/app.c     **** {
 538:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 539:Src/app.c     ****   int ret;
 540:Src/app.c     **** 
 541:Src/app.c     ****   if (xPortIsInsideInterrupt()) {
 542:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 543:Src/app.c     ****     assert(ret == pdTRUE);
 544:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 545:Src/app.c     ****   } else {
 546:Src/app.c     ****     ret = xSemaphoreGive(bq->ready);
 547:Src/app.c     ****     assert(ret == pdTRUE);
 548:Src/app.c     ****   }
 549:Src/app.c     **** }
 550:Src/app.c     **** 
 551:Src/app.c     **** static void reload_bg_layer(int next_disp_idx)
 552:Src/app.c     **** {
 553:Src/app.c     ****   int ret;
 554:Src/app.c     **** 
 555:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_bg_buffer[next_disp_idx], SCRL_LAYER_0);
 556:Src/app.c     ****   assert(ret == 0);
 557:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 558:Src/app.c     ****   assert(ret == 0);
 559:Src/app.c     **** 
ARM GAS  /tmp/ccddOyyT.s 			page 21


 560:Src/app.c     ****   ret = SRCL_Update();
 561:Src/app.c     ****   assert(ret == 0);
 562:Src/app.c     **** }
 563:Src/app.c     **** 
 564:Src/app.c     **** static void app_main_pipe_frame_event()
 565:Src/app.c     **** {
 566:Src/app.c     ****   int next_disp_idx = (lcd_bg_buffer_disp_idx + 1) % DISPLAY_BUFFER_NB;
 567:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 568:Src/app.c     ****   int ret;
 569:Src/app.c     **** 
 570:Src/app.c     ****   ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE1,
 571:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 572:Src/app.c     ****   assert(ret == HAL_OK);
 573:Src/app.c     **** 
 574:Src/app.c     ****   reload_bg_layer(next_disp_idx);
 575:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 576:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 577:Src/app.c     **** 
 578:Src/app.c     ****   frame_event_nb++;
 579:Src/app.c     **** }
 580:Src/app.c     **** 
 581:Src/app.c     **** 
 582:Src/app.c     **** static void app_ancillary_pipe_frame_event()
 583:Src/app.c     **** {
 584:Src/app.c     ****   uint8_t *next_buffer;
 585:Src/app.c     ****   int ret;
 586:Src/app.c     **** 
 587:Src/app.c     ****   next_buffer = bqueue_get_free(&nn_input_queue, 0);
 588:Src/app.c     ****   if (next_buffer) {
 589:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 590:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 591:Src/app.c     ****     assert(ret == HAL_OK);
 592:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 593:Src/app.c     ****     frame_event_nb_for_resize = frame_event_nb - 1;
 594:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 595:Src/app.c     ****   }
 596:Src/app.c     **** }
 597:Src/app.c     **** 
 598:Src/app.c     **** static void app_main_pipe_vsync_event()
 599:Src/app.c     **** {
 600:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 601:Src/app.c     ****   int ret;
 602:Src/app.c     **** 
 603:Src/app.c     ****   ret = xSemaphoreGiveFromISR(isp_sem, &xHigherPriorityTaskWoken);
 604:Src/app.c     ****   if (ret == pdTRUE)
 605:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 606:Src/app.c     **** }
 607:Src/app.c     **** 
 608:Src/app.c     **** static int clamp_point(int *x, int *y)
 609:Src/app.c     **** {
  84              		.loc 1 609 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
 610:Src/app.c     ****   int xi = *x;
  88              		.loc 1 610 3 view .LVU14
  89              		.loc 1 610 7 is_stmt 0 view .LVU15
ARM GAS  /tmp/ccddOyyT.s 			page 22


  90 0000 0368     		ldr	r3, [r0]
  91              	.LVL5:
 611:Src/app.c     ****   int yi = *y;
  92              		.loc 1 611 3 is_stmt 1 view .LVU16
 609:Src/app.c     ****   int xi = *x;
  93              		.loc 1 609 1 is_stmt 0 view .LVU17
  94 0002 10B5     		push	{r4, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 4, -8
  97              		.cfi_offset 14, -4
 612:Src/app.c     **** 
 613:Src/app.c     ****   if (*x < 0)
  98              		.loc 1 613 6 view .LVU18
  99 0004 002B     		cmp	r3, #0
 614:Src/app.c     ****     *x = 0;
 100              		.loc 1 614 8 view .LVU19
 101 0006 B8BF     		it	lt
 102 0008 0024     		movlt	r4, #0
 611:Src/app.c     **** 
 103              		.loc 1 611 7 view .LVU20
 104 000a 0A68     		ldr	r2, [r1]
 105              	.LVL6:
 613:Src/app.c     ****     *x = 0;
 106              		.loc 1 613 3 is_stmt 1 view .LVU21
 107              		.loc 1 614 5 view .LVU22
 108              		.loc 1 614 8 is_stmt 0 view .LVU23
 109 000c B8BF     		it	lt
 110 000e 0460     		strlt	r4, [r0]
 615:Src/app.c     ****   if (*y < 0)
 111              		.loc 1 615 3 is_stmt 1 view .LVU24
 112              		.loc 1 615 6 is_stmt 0 view .LVU25
 113 0010 0C68     		ldr	r4, [r1]
 114 0012 002C     		cmp	r4, #0
 616:Src/app.c     ****     *y = 0;
 115              		.loc 1 616 5 is_stmt 1 view .LVU26
 116              		.loc 1 616 8 is_stmt 0 view .LVU27
 117 0014 BCBF     		itt	lt
 118 0016 0024     		movlt	r4, #0
 119 0018 0C60     		strlt	r4, [r1]
 617:Src/app.c     ****   if (*x >= lcd_bg_area.XSize)
 120              		.loc 1 617 3 is_stmt 1 view .LVU28
 121              		.loc 1 617 6 is_stmt 0 view .LVU29
 122 001a 0468     		ldr	r4, [r0]
 123 001c B4F5487F 		cmp	r4, #800
 618:Src/app.c     ****     *x = lcd_bg_area.XSize - 1;
 124              		.loc 1 618 5 is_stmt 1 view .LVU30
 125              		.loc 1 618 8 is_stmt 0 view .LVU31
 126 0020 24BF     		itt	cs
 127 0022 40F21F34 		movwcs	r4, #799
 128 0026 0460     		strcs	r4, [r0]
 619:Src/app.c     ****   if (*y >= lcd_bg_area.YSize)
 129              		.loc 1 619 3 is_stmt 1 view .LVU32
 130              		.loc 1 619 6 is_stmt 0 view .LVU33
 131 0028 0C68     		ldr	r4, [r1]
 132 002a B4F5F07F 		cmp	r4, #480
 620:Src/app.c     ****     *y = lcd_bg_area.YSize - 1;
 133              		.loc 1 620 5 is_stmt 1 view .LVU34
ARM GAS  /tmp/ccddOyyT.s 			page 23


 134              		.loc 1 620 8 is_stmt 0 view .LVU35
 135 002e 24BF     		itt	cs
 136 0030 40F2DF14 		movwcs	r4, #479
 137 0034 0C60     		strcs	r4, [r1]
 621:Src/app.c     **** 
 622:Src/app.c     ****   return (xi != *x) || (yi != *y);
 138              		.loc 1 622 3 is_stmt 1 view .LVU36
 139              		.loc 1 622 21 is_stmt 0 view .LVU37
 140 0036 0068     		ldr	r0, [r0]
 141              	.LVL7:
 142              		.loc 1 622 21 view .LVU38
 143 0038 9842     		cmp	r0, r3
 144 003a 04D1     		bne	.L12
 145              		.loc 1 622 21 discriminator 2 view .LVU39
 146 003c 0868     		ldr	r0, [r1]
 147 003e 801A     		subs	r0, r0, r2
 148 0040 18BF     		it	ne
 149 0042 0120     		movne	r0, #1
 150              	.L6:
 623:Src/app.c     **** }
 151              		.loc 1 623 1 view .LVU40
 152 0044 10BD     		pop	{r4, pc}
 153              	.L12:
 622:Src/app.c     **** }
 154              		.loc 1 622 21 discriminator 3 view .LVU41
 155 0046 0120     		movs	r0, #1
 622:Src/app.c     **** }
 156              		.loc 1 622 21 view .LVU42
 157 0048 FCE7     		b	.L6
 158              		.cfi_endproc
 159              	.LFE7382:
 161              		.section	.text.clamp_corners,"ax",%progbits
 162              		.align	1
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	clamp_corners:
 168              	.LVL8:
 169              	.LFB7387:
 624:Src/app.c     **** 
 625:Src/app.c     **** static int clamp_point_with_margin(int *x, int *y, int margin)
 626:Src/app.c     **** {
 627:Src/app.c     ****   int xi = *x;
 628:Src/app.c     ****   int yi = *y;
 629:Src/app.c     **** 
 630:Src/app.c     ****   if (*x < margin)
 631:Src/app.c     ****     *x = margin;
 632:Src/app.c     ****   if (*y < margin)
 633:Src/app.c     ****     *y = margin;
 634:Src/app.c     ****   if (*x >= lcd_bg_area.XSize - margin)
 635:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 636:Src/app.c     ****   if (*y >= lcd_bg_area.YSize - margin)
 637:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 638:Src/app.c     **** 
 639:Src/app.c     ****   return (xi != *x) || (yi != *y);
 640:Src/app.c     **** }
 641:Src/app.c     **** 
ARM GAS  /tmp/ccddOyyT.s 			page 24


 642:Src/app.c     **** static void display_pd_hand(pd_pp_box_t *hand)
 643:Src/app.c     **** {
 644:Src/app.c     ****   int xc, yc;
 645:Src/app.c     ****   int x0, y0;
 646:Src/app.c     ****   int x1, y1;
 647:Src/app.c     ****   int w, h;
 648:Src/app.c     ****   int i;
 649:Src/app.c     **** 
 650:Src/app.c     ****   /* display box around palm */
 651:Src/app.c     ****   xc = (int)hand->x_center;
 652:Src/app.c     ****   yc = (int)hand->y_center;
 653:Src/app.c     ****   w = (int)hand->width;
 654:Src/app.c     ****   h = (int)hand->height;
 655:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 656:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 657:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 658:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 659:Src/app.c     ****   clamp_point(&x0, &y0);
 660:Src/app.c     ****   clamp_point(&x1, &y1);
 661:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 662:Src/app.c     **** 
 663:Src/app.c     ****   /* display palm key points */
 664:Src/app.c     ****   for (i = 0; i < 7; i++) {
 665:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 666:Src/app.c     **** 
 667:Src/app.c     ****     x0 = (int)hand->pKps[i].x;
 668:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 669:Src/app.c     ****     clamp_point(&x0, &y0);
 670:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 671:Src/app.c     ****   }
 672:Src/app.c     **** }
 673:Src/app.c     **** 
 674:Src/app.c     **** static void rotate_point(float pt[2], float rotation)
 675:Src/app.c     **** {
 676:Src/app.c     ****   float x = pt[0];
 677:Src/app.c     ****   float y = pt[1];
 678:Src/app.c     **** 
 679:Src/app.c     ****   pt[0] = cos(rotation) * x - sin(rotation) * y;
 680:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 681:Src/app.c     **** }
 682:Src/app.c     **** 
 683:Src/app.c     **** static void roi_to_corners(roi_t *roi, float corners[4][2])
 684:Src/app.c     **** {
 685:Src/app.c     ****   const float corners_init[4][2] = {
 686:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 687:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 688:Src/app.c     ****     { roi->w / 2,  roi->h / 2},
 689:Src/app.c     ****     {-roi->w / 2,  roi->h / 2},
 690:Src/app.c     ****   };
 691:Src/app.c     ****   int i;
 692:Src/app.c     **** 
 693:Src/app.c     ****   memcpy(corners, corners_init, sizeof(corners_init));
 694:Src/app.c     ****   /* rotate */
 695:Src/app.c     ****   for (i = 0; i < 4; i++)
 696:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 697:Src/app.c     **** 
 698:Src/app.c     ****   /* shift */
ARM GAS  /tmp/ccddOyyT.s 			page 25


 699:Src/app.c     ****   for (i = 0; i < 4; i++) {
 700:Src/app.c     ****     corners[i][0] += roi->cx;
 701:Src/app.c     ****     corners[i][1] += roi->cy;
 702:Src/app.c     ****   }
 703:Src/app.c     **** }
 704:Src/app.c     **** 
 705:Src/app.c     **** static int clamp_corners(float corners_in[4][2], int corners_out[4][2])
 706:Src/app.c     **** {
 170              		.loc 1 706 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 707:Src/app.c     ****   int is_clamp = 0;
 174              		.loc 1 707 3 view .LVU44
 708:Src/app.c     ****   int i;
 175              		.loc 1 708 3 view .LVU45
 709:Src/app.c     **** 
 710:Src/app.c     ****   for (i = 0; i < 4; i++) {
 176              		.loc 1 710 3 view .LVU46
 177              		.loc 1 710 17 discriminator 1 view .LVU47
 706:Src/app.c     ****   int is_clamp = 0;
 178              		.loc 1 706 1 is_stmt 0 view .LVU48
 179 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 180              		.cfi_def_cfa_offset 24
 181              		.cfi_offset 3, -24
 182              		.cfi_offset 4, -20
 183              		.cfi_offset 5, -16
 184              		.cfi_offset 6, -12
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 0546     		mov	r5, r0
 188 0004 0C46     		mov	r4, r1
 707:Src/app.c     ****   int i;
 189              		.loc 1 707 7 view .LVU49
 190 0006 0026     		movs	r6, #0
 191 0008 01F12007 		add	r7, r1, #32
 192              	.LVL9:
 193              	.L14:
 711:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 194              		.loc 1 711 5 is_stmt 1 view .LVU50
 195              		.loc 1 711 25 is_stmt 0 view .LVU51
 196 000c D5ED007A 		vldr.32	s15, [r5]
 197 0010 FDEEE77A 		vcvt.s32.f32	s15, s15
 198 0014 C4ED007A 		vstr.32	s15, [r4]	@ int
 712:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 199              		.loc 1 712 5 is_stmt 1 view .LVU52
 200              		.loc 1 712 25 is_stmt 0 view .LVU53
 201 0018 D5ED017A 		vldr.32	s15, [r5, #4]
 202 001c FDEEE77A 		vcvt.s32.f32	s15, s15
 203 0020 2146     		mov	r1, r4
 204 0022 17EE903A 		vmov	r3, s15	@ int
 713:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 205              		.loc 1 713 17 view .LVU54
 206 0026 2046     		mov	r0, r4
 712:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 207              		.loc 1 712 25 view .LVU55
 208 0028 41F8043F 		str	r3, [r1, #4]!
ARM GAS  /tmp/ccddOyyT.s 			page 26


 209              		.loc 1 713 5 is_stmt 1 view .LVU56
 210              		.loc 1 713 17 is_stmt 0 view .LVU57
 211 002c FFF7FEFF 		bl	clamp_point
 212              	.LVL10:
 710:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 213              		.loc 1 710 17 discriminator 1 view .LVU58
 214 0030 0834     		adds	r4, r4, #8
 215 0032 BC42     		cmp	r4, r7
 216              		.loc 1 713 14 discriminator 1 view .LVU59
 217 0034 46EA0006 		orr	r6, r6, r0
 218              	.LVL11:
 710:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 219              		.loc 1 710 23 is_stmt 1 discriminator 3 view .LVU60
 710:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 220              		.loc 1 710 17 discriminator 1 view .LVU61
 221 0038 05F10805 		add	r5, r5, #8
 222 003c E6D1     		bne	.L14
 714:Src/app.c     ****   }
 715:Src/app.c     **** 
 716:Src/app.c     ****   return is_clamp;
 223              		.loc 1 716 3 view .LVU62
 717:Src/app.c     **** }
 224              		.loc 1 717 1 is_stmt 0 view .LVU63
 225 003e 3046     		mov	r0, r6
 226 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 227              		.loc 1 717 1 view .LVU64
 228              		.cfi_endproc
 229              	.LFE7387:
 231              		.section	.text.roi_to_corners,"ax",%progbits
 232              		.align	1
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	roi_to_corners:
 238              	.LVL12:
 239              	.LFB7386:
 684:Src/app.c     ****   const float corners_init[4][2] = {
 240              		.loc 1 684 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 685:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 244              		.loc 1 685 3 view .LVU66
 686:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 245              		.loc 1 686 6 is_stmt 0 view .LVU67
 246 0000 D0ED027A 		vldr.32	s15, [r0, #8]
 686:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 247              		.loc 1 686 19 view .LVU68
 248 0004 90ED037A 		vldr.32	s14, [r0, #12]
 686:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 249              		.loc 1 686 14 view .LVU69
 250 0008 F6EE006A 		vmov.f32	s13, #5.0e-1
 251 000c 67EEE67A 		vnmul.f32	s15, s15, s13
 252              	.LVL13:
 686:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 253              		.loc 1 686 27 view .LVU70
 254 0010 27EE667A 		vnmul.f32	s14, s14, s13
ARM GAS  /tmp/ccddOyyT.s 			page 27


 255              	.LVL14:
 686:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 256              		.loc 1 686 27 view .LVU71
 257 0014 B1EE676A 		vneg.f32	s12, s15
 258              	.LVL15:
 686:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 259              		.loc 1 686 27 view .LVU72
 260 0018 F1EE476A 		vneg.f32	s13, s14
 261              	.LVL16:
 691:Src/app.c     **** 
 262              		.loc 1 691 3 is_stmt 1 view .LVU73
 693:Src/app.c     ****   /* rotate */
 263              		.loc 1 693 3 view .LVU74
 684:Src/app.c     ****   const float corners_init[4][2] = {
 264              		.loc 1 684 1 is_stmt 0 view .LVU75
 265 001c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 266              		.cfi_def_cfa_offset 24
 267              		.cfi_offset 4, -24
 268              		.cfi_offset 5, -20
 269              		.cfi_offset 6, -16
 270              		.cfi_offset 7, -12
 271              		.cfi_offset 8, -8
 272              		.cfi_offset 14, -4
 273 0020 0646     		mov	r6, r0
 274 0022 2DED068B 		vpush.64	{d8, d9, d10}
 275              		.cfi_def_cfa_offset 48
 276              		.cfi_offset 80, -48
 277              		.cfi_offset 81, -44
 278              		.cfi_offset 82, -40
 279              		.cfi_offset 83, -36
 280              		.cfi_offset 84, -32
 281              		.cfi_offset 85, -28
 684:Src/app.c     ****   const float corners_init[4][2] = {
 282              		.loc 1 684 1 view .LVU76
 283 0026 0C46     		mov	r4, r1
 693:Src/app.c     ****   /* rotate */
 284              		.loc 1 693 3 view .LVU77
 285 0028 C1ED007A 		vstr.32	s15, [r1]
 286 002c 81ED017A 		vstr.32	s14, [r1, #4]
 287 0030 81ED026A 		vstr.32	s12, [r1, #8]
 288 0034 81ED037A 		vstr.32	s14, [r1, #12]
 289 0038 81ED046A 		vstr.32	s12, [r1, #16]
 290 003c C1ED056A 		vstr.32	s13, [r1, #20]
 291 0040 C1ED067A 		vstr.32	s15, [r1, #24]
 292 0044 C1ED076A 		vstr.32	s13, [r1, #28]
 695:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 293              		.loc 1 695 3 is_stmt 1 view .LVU78
 294              	.LVL17:
 695:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 295              		.loc 1 695 17 discriminator 1 view .LVU79
 296 0048 8846     		mov	r8, r1
 693:Src/app.c     ****   /* rotate */
 297              		.loc 1 693 3 is_stmt 0 view .LVU80
 298 004a 0F46     		mov	r7, r1
 299 004c 01F12005 		add	r5, r1, #32
 300              	.LVL18:
 301              	.L17:
ARM GAS  /tmp/ccddOyyT.s 			page 28


 696:Src/app.c     **** 
 302              		.loc 1 696 5 is_stmt 1 view .LVU81
 303              	.LBB191:
 304              	.LBI191:
 674:Src/app.c     **** {
 305              		.loc 1 674 13 view .LVU82
 306              	.LBB192:
 676:Src/app.c     ****   float y = pt[1];
 307              		.loc 1 676 3 view .LVU83
 677:Src/app.c     **** 
 308              		.loc 1 677 3 view .LVU84
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 309              		.loc 1 679 3 view .LVU85
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 310              		.loc 1 679 11 is_stmt 0 view .LVU86
 311 0050 96ED04AA 		vldr.32	s20, [r6, #16]
 312 0054 B7EECAAA 		vcvt.f64.f32	d10, s20
 313 0058 B0EE4A0B 		vmov.f64	d0, d10
 314 005c FFF7FEFF 		bl	cos
 315              	.LVL19:
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 316              		.loc 1 679 11 view .LVU87
 317 0060 B0EE408B 		vmov.f64	d8, d0
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 318              		.loc 1 679 31 discriminator 1 view .LVU88
 319 0064 B0EE4A0B 		vmov.f64	d0, d10
 320 0068 FFF7FEFF 		bl	sin
 321              	.LVL20:
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 322              		.loc 1 679 45 discriminator 2 view .LVU89
 323 006c 97ED016A 		vldr.32	s12, [r7, #4]
 324              	.LVL21:
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 325              		.loc 1 679 25 discriminator 1 view .LVU90
 326 0070 97ED009A 		vldr.32	s18, [r7]
 327              	.LVL22:
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 328              		.loc 1 679 45 discriminator 2 view .LVU91
 329 0074 B7EEC66A 		vcvt.f64.f32	d6, s12
 330              	.LVL23:
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 331              		.loc 1 679 25 discriminator 1 view .LVU92
 332 0078 B7EEC99A 		vcvt.f64.f32	d9, s18
 333              	.LVL24:
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 334              		.loc 1 679 29 discriminator 2 view .LVU93
 335 007c 26EE407B 		vnmul.f64	d7, d6, d0
 336 0080 A8EE097B 		vfma.f64	d7, d8, d9
 680:Src/app.c     **** }
 337              		.loc 1 680 45 discriminator 2 view .LVU94
 338 0084 28EE068B 		vmul.f64	d8, d8, d6
 680:Src/app.c     **** }
 339              		.loc 1 680 29 discriminator 2 view .LVU95
 340 0088 A9EE008B 		vfma.f64	d8, d9, d0
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 341              		.loc 1 679 29 discriminator 2 view .LVU96
 342 008c B7EEC77B 		vcvt.f32.f64	s14, d7
ARM GAS  /tmp/ccddOyyT.s 			page 29


 680:Src/app.c     **** }
 343              		.loc 1 680 29 discriminator 2 view .LVU97
 344 0090 B7EEC88B 		vcvt.f32.f64	s16, d8
 679:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 345              		.loc 1 679 29 discriminator 2 view .LVU98
 346 0094 87ED007A 		vstr.32	s14, [r7]
 680:Src/app.c     **** }
 347              		.loc 1 680 3 is_stmt 1 view .LVU99
 680:Src/app.c     **** }
 348              		.loc 1 680 29 is_stmt 0 discriminator 2 view .LVU100
 349 0098 87ED018A 		vstr.32	s16, [r7, #4]
 350              	.LVL25:
 680:Src/app.c     **** }
 351              		.loc 1 680 29 discriminator 2 view .LVU101
 352              	.LBE192:
 353              	.LBE191:
 695:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 354              		.loc 1 695 23 is_stmt 1 discriminator 3 view .LVU102
 695:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 355              		.loc 1 695 17 discriminator 1 view .LVU103
 356 009c 0837     		adds	r7, r7, #8
 357 009e BD42     		cmp	r5, r7
 358 00a0 D6D1     		bne	.L17
 359 00a2 A5EB040E 		sub	lr, r5, r4
 360 00a6 AEF1080E 		sub	lr, lr, #8
 361 00aa 4FEADE0E 		lsr	lr, lr, #3
 362 00ae 0EF1010E 		add	lr, lr, #1
 363 00b2 4EF001E0 		dls	lr, lr
 364              	.L18:
 700:Src/app.c     ****     corners[i][1] += roi->cy;
 365              		.loc 1 700 5 view .LVU104
 700:Src/app.c     ****     corners[i][1] += roi->cy;
 366              		.loc 1 700 19 is_stmt 0 view .LVU105
 367 00b6 96ED007A 		vldr.32	s14, [r6]
 368 00ba D8ED007A 		vldr.32	s15, [r8]
 369 00be 77EE877A 		vadd.f32	s15, s15, s14
 370 00c2 C8ED007A 		vstr.32	s15, [r8]
 701:Src/app.c     ****   }
 371              		.loc 1 701 5 is_stmt 1 view .LVU106
 701:Src/app.c     ****   }
 372              		.loc 1 701 19 is_stmt 0 view .LVU107
 373 00c6 D8ED017A 		vldr.32	s15, [r8, #4]
 374 00ca 96ED017A 		vldr.32	s14, [r6, #4]
 375 00ce 77EE877A 		vadd.f32	s15, s15, s14
 699:Src/app.c     ****     corners[i][0] += roi->cx;
 376              		.loc 1 699 17 discriminator 1 view .LVU108
 377 00d2 08F10808 		add	r8, r8, #8
 701:Src/app.c     ****   }
 378              		.loc 1 701 19 view .LVU109
 379 00d6 48ED017A 		vstr.32	s15, [r8, #-4]
 699:Src/app.c     ****     corners[i][0] += roi->cx;
 380              		.loc 1 699 23 is_stmt 1 discriminator 3 view .LVU110
 699:Src/app.c     ****     corners[i][0] += roi->cx;
 381              		.loc 1 699 17 discriminator 1 view .LVU111
 382 00da 0FF015C0 		le	lr, .L18
 703:Src/app.c     **** 
 383              		.loc 1 703 1 is_stmt 0 view .LVU112
ARM GAS  /tmp/ccddOyyT.s 			page 30


 384 00de BDEC068B 		vldm	sp!, {d8-d10}
 385              		.cfi_restore 84
 386              		.cfi_restore 85
 387              		.cfi_restore 82
 388              		.cfi_restore 83
 389              		.cfi_restore 80
 390              		.cfi_restore 81
 391              		.cfi_def_cfa_offset 24
 392 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 703:Src/app.c     **** 
 393              		.loc 1 703 1 view .LVU113
 394              		.cfi_endproc
 395              	.LFE7386:
 397              		.section	.rodata.isp_thread_fct.str1.1,"aMS",%progbits,1
 398              	.LC1:
 399 0000 72657420 		.ascii	"ret == pdTRUE\000"
 399      3D3D2070 
 399      64545255 
 399      4500
 400              	.LC2:
 401 000e 5372632F 		.ascii	"Src/app.c\000"
 401      6170702E 
 401      6300
 402              		.section	.text.isp_thread_fct,"ax",%progbits
 403              		.align	1
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 408              	isp_thread_fct:
 409              	.LVL26:
 410              	.LFB7410:
 718:Src/app.c     **** 
 719:Src/app.c     **** static void display_roi(roi_t *roi)
 720:Src/app.c     **** {
 721:Src/app.c     ****   float corners_f[4][2];
 722:Src/app.c     ****   int corners[4][2];
 723:Src/app.c     ****   int is_clamp;
 724:Src/app.c     ****   int i;
 725:Src/app.c     **** 
 726:Src/app.c     ****   /* compute box corners */
 727:Src/app.c     ****   roi_to_corners(roi, corners_f);
 728:Src/app.c     **** 
 729:Src/app.c     ****   /* clamp */
 730:Src/app.c     ****   is_clamp = clamp_corners(corners_f, corners);
 731:Src/app.c     ****   if (is_clamp)
 732:Src/app.c     ****     return ;
 733:Src/app.c     **** 
 734:Src/app.c     ****   /* display */
 735:Src/app.c     ****   for (i = 0; i < 4; i++)
 736:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 737:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 738:Src/app.c     **** }
 739:Src/app.c     **** 
 740:Src/app.c     **** static void decode_ld_landmark(roi_t *roi, ld_point_t *lm, ld_point_t *decoded)
 741:Src/app.c     **** {
 742:Src/app.c     ****   float rotation = roi->rotation;
 743:Src/app.c     ****   float w = roi->w;
ARM GAS  /tmp/ccddOyyT.s 			page 31


 744:Src/app.c     ****   float h = roi->h;
 745:Src/app.c     **** 
 746:Src/app.c     ****   decoded->x = roi->cx + (lm->x - 0.5) * w * cos(rotation) - (lm->y - 0.5) * h * sin(rotation);
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 748:Src/app.c     **** }
 749:Src/app.c     **** 
 750:Src/app.c     **** static void display_ld_hand(hand_info_t *hand)
 751:Src/app.c     **** {
 752:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 753:Src/app.c     ****   roi_t *roi = &hand->roi;
 754:Src/app.c     ****   int x[LD_LANDMARK_NB];
 755:Src/app.c     ****   int y[LD_LANDMARK_NB];
 756:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 757:Src/app.c     ****   ld_point_t decoded;
 758:Src/app.c     ****   int i;
 759:Src/app.c     **** 
 760:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 761:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 762:Src/app.c     ****     x[i] = (int)decoded.x;
 763:Src/app.c     ****     y[i] = (int)decoded.y;
 764:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 765:Src/app.c     ****   }
 766:Src/app.c     **** 
 767:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 768:Src/app.c     ****     if (is_clamped[i])
 769:Src/app.c     ****       continue;
 770:Src/app.c     ****     UTIL_LCD_FillCircle(x[i], y[i], disk_radius, UTIL_LCD_COLOR_YELLOW);
 771:Src/app.c     ****   }
 772:Src/app.c     **** }
 773:Src/app.c     **** 
 774:Src/app.c     **** void display_hand(display_info_t *info, hand_info_t *hand)
 775:Src/app.c     **** {
 776:Src/app.c     ****   if (info->is_pd_displayed) {
 777:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 778:Src/app.c     ****     display_roi(&hand->roi);
 779:Src/app.c     ****   }
 780:Src/app.c     ****   if (info->is_ld_displayed)
 781:Src/app.c     ****     display_ld_hand(hand);
 782:Src/app.c     **** }
 783:Src/app.c     **** 
 784:Src/app.c     **** static void Display_NetworkOutput(display_info_t *info)
 785:Src/app.c     **** {
 786:Src/app.c     ****   float cpu_load_one_second;
 787:Src/app.c     ****   int line_nb = 0;
 788:Src/app.c     ****   float nn_fps;
 789:Src/app.c     ****   int i;
 790:Src/app.c     **** 
 791:Src/app.c     ****   /* clear previous ui */
 792:Src/app.c     ****   UTIL_LCD_FillRect(lcd_fg_area.X0, lcd_fg_area.Y0, lcd_fg_area.XSize, lcd_fg_area.YSize, 0x0000000
 793:Src/app.c     **** 
 794:Src/app.c     ****   /* cpu load */
 795:Src/app.c     ****   cpuload_update(&cpu_load);
 796:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 797:Src/app.c     **** 
 798:Src/app.c     ****   /* draw metrics */
 799:Src/app.c     ****   nn_fps = 1000.0 / info->nn_period_ms;
 800:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
ARM GAS  /tmp/ccddOyyT.s 			page 32


 801:Src/app.c     ****   line_nb += 1;
 802:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 803:Src/app.c     ****   line_nb += 2;
 804:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 805:Src/app.c     ****   line_nb += 1;
 806:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " pd %2ums", info->pd_ms);
 807:Src/app.c     ****   line_nb += 1;
 808:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " hl %2ums", info->hl_ms);
 809:Src/app.c     ****   line_nb += 2;
 810:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 811:Src/app.c     ****   line_nb += 2;
 812:Src/app.c     ****   if (DBG_INFO) {
 813:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 814:Src/app.c     ****     line_nb += 1;
 815:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "   %ums", info->disp_ms);
 816:Src/app.c     ****     line_nb += 1;
 817:Src/app.c     ****   }
 818:Src/app.c     **** 
 819:Src/app.c     ****   /* display palm detector output */
 820:Src/app.c     ****   for (i = 0; i < info->pd_hand_nb; i++) {
 821:Src/app.c     ****     if (info->hands[i].is_valid)
 822:Src/app.c     ****       display_hand(info, &info->hands[i]);
 823:Src/app.c     ****   }
 824:Src/app.c     **** 
 825:Src/app.c     ****   if (DBG_INFO)
 826:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 827:Src/app.c     **** }
 828:Src/app.c     **** 
 829:Src/app.c     **** /**
 830:Src/app.c     ****  * @brief  Initializes the YOLO detector model info and post-processing
 831:Src/app.c     ****  * @param  info  Pointer to the yolo_detector_info_t context struct
 832:Src/app.c     ****  * @retval None
 833:Src/app.c     ****  */
 834:Src/app.c     **** static void yolo_detector_init(yolo_detector_info_t *info)
 835:Src/app.c     **** {
 836:Src/app.c     ****   // Assumes your YOLO model is named 'yolo_detector' in the Cube.AI tool
 837:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_yolo_detector();
 838:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 839:Src/app.c     ****   int ret;
 840:Src/app.c     **** 
 841:Src/app.c     ****   /* Link model I/O buffers to the info struct */
 842:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 843:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 844:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 845:Src/app.c     **** 
 846:Src/app.c     ****   /* Initialize YOLO post-processing static parameters */
 847:Src/app.c     ****   info->static_param.nb_classes = AI_OD_YOLOV8_PP_NB_CLASSES;        // Example: 80 for COCO datase
 848:Src/app.c     ****   info->static_param.nb_total_boxes = AI_OD_YOLOV8_PP_TOTAL_BOXES;  // Example: Standard for YOLOv8
 849:Src/app.c     ****   info->static_param.max_boxes_limit = 10;  // Max boxes after NMS
 850:Src/app.c     ****   info->static_param.conf_threshold = AI_PD_MODEL_PP_CONF_THRESHOLD; // Confidence threshold
 851:Src/app.c     ****   info->static_param.iou_threshold = AI_PD_MODEL_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 852:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 853:Src/app.c     ****   info->static_param.raw_output_scale = 1.0f;
 854:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 855:Src/app.c     **** 
 856:Src/app.c     ****   /* Initialize the post-processing module */
 857:Src/app.c     ****   // Assumes a generic post-processing init function exists
ARM GAS  /tmp/ccddOyyT.s 			page 33


 858:Src/app.c     ****   ret = app_postprocess_init(&info->static_param, &NN_Instance_yolo_detector);
 859:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 860:Src/app.c     **** }
 861:Src/app.c     **** 
 862:Src/app.c     **** static int yolo_detector_run(uint8_t *buffer, yolo_detector_info_t *info, uint32_t *exec_time)
 863:Src/app.c     **** {
 864:Src/app.c     ****   uint32_t start_ts;
 865:Src/app.c     ****   int detection_nb;
 866:Src/app.c     ****   int ret;
 867:Src/app.c     ****   int i;
 868:Src/app.c     **** 
 869:Src/app.c     ****   start_ts = HAL_GetTick();
 870:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 871:Src/app.c     ****   ret = LL_ATON_Set_User_Input_Buffer_yolo_detector(0, buffer, info->nn_in_len);
 872:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 873:Src/app.c     **** 
 874:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_yolo_detector);
 875:Src/app.c     **** 
 876:Src/app.c     ****   /* Run post-processing on the model's raw output */
 877:Src/app.c     ****   ret = app_postprocess_run((void * []){info->raw_detections_out}, 1, &info->yolo_out, &info->stati
 878:Src/app.c     **** 
 879:Src/app.c     ****   // Get the number of final detections after NMS
 880:Src/app.c     ****   detection_nb = info->yolo_out.nb_detect;
 881:Src/app.c     **** 
 882:Src/app.c     ****   /* Optional: Post-process final bounding boxes (e.g., coordinate scaling) */
 883:Src/app.c     ****   for (i = 0; i < detection_nb; i++) {
 884:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 885:Src/app.c     ****   }
 886:Src/app.c     **** 
 887:Src/app.c     ****   /* Invalidate D-Cache for the output region to ensure CPU sees updated data */
 888:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->raw_detections_out, info->raw_detections_out_len));
 889:Src/app.c     **** 
 890:Src/app.c     ****   *exec_time = HAL_GetTick() - start_ts;
 891:Src/app.c     **** 
 892:Src/app.c     ****   return detection_nb;
 893:Src/app.c     **** }
 894:Src/app.c     **** 
 895:Src/app.c     **** static void face_landmark_init(fl_model_info_t *info)
 896:Src/app.c     **** {
 897:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_face_landmark();
 898:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 899:Src/app.c     **** 
 900:Src/app.c     ****   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
 901:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 902:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 903:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 904:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
 905:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 906:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 907:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 1404);
 908:Src/app.c     **** }
 909:Src/app.c     **** 
 910:Src/app.c     **** static int face_landmark_prepare_input(uint8_t *buffer, roi_t *roi, fl_model_info_t *info)
 911:Src/app.c     **** {
 912:Src/app.c     ****   float corners_f[4][2];
 913:Src/app.c     ****   int corners[4][2];
 914:Src/app.c     ****   uint8_t* out_data;
ARM GAS  /tmp/ccddOyyT.s 			page 34


 915:Src/app.c     ****   size_t height_out;
 916:Src/app.c     ****   uint8_t *in_data;
 917:Src/app.c     ****   size_t height_in;
 918:Src/app.c     ****   size_t width_out;
 919:Src/app.c     ****   size_t width_in;
 920:Src/app.c     ****   int is_clamped;
 921:Src/app.c     **** 
 922:Src/app.c     ****   /* defaults when no clamping occurs */
 923:Src/app.c     ****   out_data = info->nn_in;
 924:Src/app.c     ****   width_out = LD_WIDTH;
 925:Src/app.c     ****   height_out = LD_HEIGHT;
 926:Src/app.c     **** 
 927:Src/app.c     ****   roi_to_corners(roi, corners_f);
 928:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 929:Src/app.c     **** 
 930:Src/app.c     ****   /* If clamp perform a partial resize */
 931:Src/app.c     ****   if (is_clamped) {
 932:Src/app.c     ****     int offset_x;
 933:Src/app.c     ****     int offset_y;
 934:Src/app.c     **** 
 935:Src/app.c     ****     /* clear target memory since resize will partially write it */
 936:Src/app.c     ****     memset(info->nn_in, 0, info->nn_in_len);
 937:Src/app.c     **** 
 938:Src/app.c     ****     /* compute start address of output buffer */
 939:Src/app.c     ****     offset_x = (int)(((corners[0][0] - corners_f[0][0]) * LD_WIDTH) / (corners_f[2][0] - corners_f[
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 942:Src/app.c     **** 
 943:Src/app.c     ****     /* compute output width and height */
 944:Src/app.c     ****     width_out = (int)((corners[2][0] - corners[0][0]) / (corners_f[2][0] - corners_f[0][0]) * LD_WI
 945:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 946:Src/app.c     **** 
 947:Src/app.c     ****     assert(width_out > 0);
 948:Src/app.c     ****     assert(height_out > 0);
 949:Src/app.c     ****     {
 950:Src/app.c     ****       uint8_t* out_data_end;
 951:Src/app.c     **** 
 952:Src/app.c     ****       out_data_end = out_data + (int)LD_WIDTH * DISPLAY_BPP * (height_out - 1) + DISPLAY_BPP * widt
 953:Src/app.c     **** 
 954:Src/app.c     ****       assert(out_data_end >= info->nn_in);
 955:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 956:Src/app.c     ****     }
 957:Src/app.c     ****   }
 958:Src/app.c     **** 
 959:Src/app.c     ****   in_data = buffer + corners[0][1] * LCD_BG_WIDTH * DISPLAY_BPP + corners[0][0]* DISPLAY_BPP;
 960:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 961:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
 962:Src/app.c     **** 
 963:Src/app.c     ****   assert(width_in > 0);
 964:Src/app.c     ****   assert(height_in > 0);
 965:Src/app.c     ****   {
 966:Src/app.c     ****     uint8_t* in_data_end;
 967:Src/app.c     **** 
 968:Src/app.c     ****     in_data_end = in_data + LCD_BG_WIDTH * DISPLAY_BPP * (height_in - 1) + DISPLAY_BPP * width_in -
 969:Src/app.c     **** 
 970:Src/app.c     ****     assert(in_data_end >= buffer);
 971:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
ARM GAS  /tmp/ccddOyyT.s 			page 35


 972:Src/app.c     ****   }
 973:Src/app.c     **** 
 974:Src/app.c     ****   IPL_resize_bilinear_iu8ou8_with_strides_RGB(in_data, out_data, LCD_BG_WIDTH * DISPLAY_BPP, LD_WID
 975:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 976:Src/app.c     **** 
 977:Src/app.c     ****   return 0;
 978:Src/app.c     **** }
 979:Src/app.c     **** 
 980:Src/app.c     **** 
 981:Src/app.c     **** static int face_landmark_run(uint8_t *buffer, fl_model_info_t *info, roi_t *roi,
 982:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
 983:Src/app.c     **** {
 984:Src/app.c     ****   int is_clamped;
 985:Src/app.c     ****   int is_valid;
 986:Src/app.c     **** 
 987:Src/app.c     ****   is_clamped = face_landmark_prepare_input(buffer, roi, info);
 988:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
 989:Src/app.c     ****   if (is_clamped)
 990:Src/app.c     ****     return 0;
 991:Src/app.c     **** 
 992:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_face_landmark);
 993:Src/app.c     **** 
 994:Src/app.c     ****   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
 995:Src/app.c     **** 
 996:Src/app.c     ****   /* Discard nn_out region (used by pp_input and pp_outputs variables) to avoid Dcache evictions du
 997:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
 998:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 999:Src/app.c     **** 
1000:Src/app.c     ****   return is_valid;
1001:Src/app.c     **** }
1002:Src/app.c     **** 
1003:Src/app.c     **** // static void palm_detector_init(pd_model_info_t *info)
1004:Src/app.c     **** // {
1005:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_palm_detector();
1006:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_palm_detector();
1007:Src/app.c     **** //   int ret;
1008:Src/app.c     **** 
1009:Src/app.c     **** //   /* model info */
1010:Src/app.c     **** //   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1011:Src/app.c     **** //   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
1012:Src/app.c     **** //   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
1013:Src/app.c     **** //   assert(info->prob_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float));
1014:Src/app.c     **** //   info->boxes_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
1015:Src/app.c     **** //   info->boxes_out_len = LL_Buffer_len(&nn_out_info[1]);
1016:Src/app.c     **** //   assert(info->boxes_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float) * 18);
1017:Src/app.c     **** 
1018:Src/app.c     **** //   /* post processor info */
1019:Src/app.c     **** //   ret = app_postprocess_init(&info->static_param, &NN_Instance_palm_detector);
1020:Src/app.c     **** //   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
1021:Src/app.c     **** // }
1022:Src/app.c     **** 
1023:Src/app.c     **** // static int palm_detector_run(uint8_t *buffer, pd_model_info_t *info, uint32_t *pd_exec_time)
1024:Src/app.c     **** // {
1025:Src/app.c     **** //   uint32_t start_ts;
1026:Src/app.c     **** //   int hand_nb;
1027:Src/app.c     **** //   int ret;
1028:Src/app.c     **** //   int i;
ARM GAS  /tmp/ccddOyyT.s 			page 36


1029:Src/app.c     **** 
1030:Src/app.c     **** //   start_ts = HAL_GetTick();
1031:Src/app.c     **** //   /* Note that we don't need to clean/invalidate those input buffers since they are only access 
1032:Src/app.c     **** //   ret = LL_ATON_Set_User_Input_Buffer_palm_detector(0, buffer, info->nn_in_len);
1033:Src/app.c     **** //   assert(ret == LL_ATON_User_IO_NOERROR);
1034:Src/app.c     **** 
1035:Src/app.c     **** //   LL_ATON_RT_Main(&NN_Instance_palm_detector);
1036:Src/app.c     **** 
1037:Src/app.c     **** //   ret = app_postprocess_run((void * []){info->prob_out, info->boxes_out}, 2, &info->pd_out, &inf
1038:Src/app.c     **** //   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
1039:Src/app.c     **** //   hand_nb = MIN(info->pd_out.box_nb, PD_MAX_HAND_NB);
1040:Src/app.c     **** 
1041:Src/app.c     **** //   for (i = 0; i < hand_nb; i++) {
1042:Src/app.c     **** //     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
1043:Src/app.c     **** //     pd_box_to_roi(&info->pd_out.pOutData[i], &rois[i]);
1044:Src/app.c     **** //   }
1045:Src/app.c     **** 
1046:Src/app.c     **** //   /* Discard nn_out region (used by pp_outputs variables) to avoid Dcache evictions during nn in
1047:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1048:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
1049:Src/app.c     **** 
1050:Src/app.c     **** //   *pd_exec_time = HAL_GetTick() - start_ts;
1051:Src/app.c     **** 
1052:Src/app.c     **** //   return hand_nb;
1053:Src/app.c     **** // }
1054:Src/app.c     **** 
1055:Src/app.c     **** // static void hand_landmark_init(hl_model_info_t *info)
1056:Src/app.c     **** // {
1057:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_hand_landmark();
1058:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_hand_landmark();
1059:Src/app.c     **** 
1060:Src/app.c     **** //   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
1061:Src/app.c     **** //   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1062:Src/app.c     **** //   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[2]);
1063:Src/app.c     **** //   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
1064:Src/app.c     **** //   assert(info->prob_out_len == sizeof(float));
1065:Src/app.c     **** //   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
1066:Src/app.c     **** //   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
1067:Src/app.c     **** //   assert(info->landmarks_out_len == sizeof(float) * 63);
1068:Src/app.c     **** // }
1069:Src/app.c     **** 
1070:Src/app.c     **** 
1071:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1072:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1073:Src/app.c     **** {
1074:Src/app.c     ****   float corners_f[4][2];
1075:Src/app.c     ****   int corners[4][2];
1076:Src/app.c     ****   uint8_t* out_data;
1077:Src/app.c     ****   size_t height_out;
1078:Src/app.c     ****   uint8_t *in_data;
1079:Src/app.c     ****   size_t height_in;
1080:Src/app.c     ****   size_t width_out;
1081:Src/app.c     ****   size_t width_in;
1082:Src/app.c     ****   int is_clamped;
1083:Src/app.c     **** 
1084:Src/app.c     ****   /* defaults when no clamping occurs */
1085:Src/app.c     ****   out_data = info->nn_in;
ARM GAS  /tmp/ccddOyyT.s 			page 37


1086:Src/app.c     ****   width_out = LD_WIDTH;
1087:Src/app.c     ****   height_out = LD_HEIGHT;
1088:Src/app.c     **** 
1089:Src/app.c     ****   roi_to_corners(roi, corners_f);
1090:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
1091:Src/app.c     **** 
1092:Src/app.c     ****   /* If clamp perform a partial resize */
1093:Src/app.c     ****   if (is_clamped) {
1094:Src/app.c     ****     int offset_x;
1095:Src/app.c     ****     int offset_y;
1096:Src/app.c     **** 
1097:Src/app.c     ****     /* clear target memory since resize will partially write it */
1098:Src/app.c     ****     memset(info->nn_in, 0, info->nn_in_len);
1099:Src/app.c     **** 
1100:Src/app.c     ****     /* compute start address of output buffer */
1101:Src/app.c     ****     offset_x = (int)(((corners[0][0] - corners_f[0][0]) * LD_WIDTH) / (corners_f[2][0] - corners_f[
1102:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
1103:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
1104:Src/app.c     **** 
1105:Src/app.c     ****     /* compute output width and height */
1106:Src/app.c     ****     width_out = (int)((corners[2][0] - corners[0][0]) / (corners_f[2][0] - corners_f[0][0]) * LD_WI
1107:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
1108:Src/app.c     **** 
1109:Src/app.c     ****     assert(width_out > 0);
1110:Src/app.c     ****     assert(height_out > 0);
1111:Src/app.c     ****     {
1112:Src/app.c     ****       uint8_t* out_data_end;
1113:Src/app.c     **** 
1114:Src/app.c     ****       out_data_end = out_data + (int)LD_WIDTH * DISPLAY_BPP * (height_out - 1) + DISPLAY_BPP * widt
1115:Src/app.c     **** 
1116:Src/app.c     ****       assert(out_data_end >= info->nn_in);
1117:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
1118:Src/app.c     ****     }
1119:Src/app.c     ****   }
1120:Src/app.c     **** 
1121:Src/app.c     ****   in_data = buffer + corners[0][1] * LCD_BG_WIDTH * DISPLAY_BPP + corners[0][0]* DISPLAY_BPP;
1122:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
1123:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
1124:Src/app.c     **** 
1125:Src/app.c     ****   assert(width_in > 0);
1126:Src/app.c     ****   assert(height_in > 0);
1127:Src/app.c     ****   {
1128:Src/app.c     ****     uint8_t* in_data_end;
1129:Src/app.c     **** 
1130:Src/app.c     ****     in_data_end = in_data + LCD_BG_WIDTH * DISPLAY_BPP * (height_in - 1) + DISPLAY_BPP * width_in -
1131:Src/app.c     **** 
1132:Src/app.c     ****     assert(in_data_end >= buffer);
1133:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
1134:Src/app.c     ****   }
1135:Src/app.c     **** 
1136:Src/app.c     ****   IPL_resize_bilinear_iu8ou8_with_strides_RGB(in_data, out_data, LCD_BG_WIDTH * DISPLAY_BPP, LD_WID
1137:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
1138:Src/app.c     **** 
1139:Src/app.c     ****   return 0;
1140:Src/app.c     **** }
1141:Src/app.c     **** #else
1142:Src/app.c     **** static void app_transform(nema_matrix3x3_t t, app_v3_t v)
ARM GAS  /tmp/ccddOyyT.s 			page 38


1143:Src/app.c     **** {
1144:Src/app.c     ****   app_v3_t r;
1145:Src/app.c     ****   int i;
1146:Src/app.c     **** 
1147:Src/app.c     ****   for (i = 0; i < 3; i++)
1148:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
1149:Src/app.c     **** 
1150:Src/app.c     ****   for (i = 0; i < 3; i++)
1151:Src/app.c     ****     v[i] = r[i];
1152:Src/app.c     **** }
1153:Src/app.c     **** 
1154:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1155:Src/app.c     **** {
1156:Src/app.c     ****   app_v3_t vertex[] = {
1157:Src/app.c     ****     {           0,             0, 1},
1158:Src/app.c     ****     {LCD_BG_WIDTH,             0, 1},
1159:Src/app.c     ****     {LCD_BG_WIDTH, LCD_BG_HEIGHT, 1},
1160:Src/app.c     ****     {           0, LCD_BG_HEIGHT, 1},
1161:Src/app.c     ****   };
1162:Src/app.c     ****   GFXMMU_BuffersTypeDef buffers = { 0 };
1163:Src/app.c     ****   nema_matrix3x3_t t;
1164:Src/app.c     ****   int ret;
1165:Src/app.c     ****   int i;
1166:Src/app.c     **** 
1167:Src/app.c     ****   buffers.Buf0Address = (uint32_t) info->nn_in;
1168:Src/app.c     ****   ret = HAL_GFXMMU_ModifyBuffers(&hgfxmmu, &buffers);
1169:Src/app.c     ****   assert(ret == HAL_OK);
1170:Src/app.c     **** 
1171:Src/app.c     ****   /* bind destination texture */
1172:Src/app.c     ****   nema_bind_dst_tex(GFXMMU_VIRTUAL_BUFFER0_BASE, LD_WIDTH, LD_HEIGHT, NEMA_RGBA8888, -1);
1173:Src/app.c     ****   nema_set_clip(0, 0, LD_WIDTH, LD_HEIGHT);
1174:Src/app.c     ****   nema_clear(0);
1175:Src/app.c     ****   /* bind source texture */
1176:Src/app.c     ****   nema_bind_src_tex((uintptr_t) buffer, LCD_BG_WIDTH, LCD_BG_HEIGHT, NEMA_RGBA8888, -1, NEMA_FILTER
1177:Src/app.c     ****   nema_enable_tiling(1);
1178:Src/app.c     ****   nema_set_blend_blit(NEMA_BL_SRC);
1179:Src/app.c     **** 
1180:Src/app.c     ****   /* let's go */
1181:Src/app.c     ****   nema_mat3x3_load_identity(t);
1182:Src/app.c     ****   nema_mat3x3_translate(t, -roi->cx, -roi->cy);
1183:Src/app.c     ****   nema_mat3x3_rotate(t, nema_rad_to_deg(-roi->rotation));
1184:Src/app.c     ****   nema_mat3x3_scale(t, LD_WIDTH / roi->w, LD_HEIGHT / roi->h);
1185:Src/app.c     ****   nema_mat3x3_translate(t, LD_WIDTH / 2, LD_HEIGHT / 2);
1186:Src/app.c     ****   for (i = 0 ; i < 4; i++)
1187:Src/app.c     ****     app_transform(t, vertex[i]);
1188:Src/app.c     ****   nema_blit_quad_fit(vertex[0][0], vertex[0][1], vertex[1][0], vertex[1][1],
1189:Src/app.c     ****                      vertex[2][0], vertex[2][1], vertex[3][0], vertex[3][1]);
1190:Src/app.c     **** 
1191:Src/app.c     ****   nema_cl_submit(&cl);
1192:Src/app.c     ****   nema_cl_wait(&cl);
1193:Src/app.c     ****   HAL_ICACHE_Invalidate();
1194:Src/app.c     **** 
1195:Src/app.c     ****   assert(!nema_get_error());
1196:Src/app.c     **** 
1197:Src/app.c     ****   return 0;
1198:Src/app.c     **** }
1199:Src/app.c     **** #endif
ARM GAS  /tmp/ccddOyyT.s 			page 39


1200:Src/app.c     **** 
1201:Src/app.c     **** // static int hand_landmark_run(uint8_t *buffer, hl_model_info_t *info, roi_t *roi,
1202:Src/app.c     **** //                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
1203:Src/app.c     **** // {
1204:Src/app.c     **** //   int is_clamped;
1205:Src/app.c     **** //   int is_valid;
1206:Src/app.c     **** 
1207:Src/app.c     **** //   is_clamped = hand_landmark_prepare_input(buffer, roi, info);
1208:Src/app.c     **** //   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
1209:Src/app.c     **** //   if (is_clamped)
1210:Src/app.c     **** //     return 0;
1211:Src/app.c     **** 
1212:Src/app.c     **** //   LL_ATON_RT_Main(&NN_Instance_hand_landmark);
1213:Src/app.c     **** 
1214:Src/app.c     **** //   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
1215:Src/app.c     **** 
1216:Src/app.c     **** //   /* Discard nn_out region (used by pp_input and pp_outputs variables) to avoid Dcache evictions
1217:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1218:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
1219:Src/app.c     **** 
1220:Src/app.c     **** //   return is_valid;
1221:Src/app.c     **** // }
1222:Src/app.c     **** 
1223:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
1224:Src/app.c     **** static void app_rot_init(hl_model_info_t *info)
1225:Src/app.c     **** {
1226:Src/app.c     ****   GFXMMU_PackingTypeDef packing = { 0 };
1227:Src/app.c     ****   int ret;
1228:Src/app.c     **** 
1229:Src/app.c     ****   printf("init nema\n");
1230:Src/app.c     ****   nema_init();
1231:Src/app.c     ****   assert(!nema_get_error());
1232:Src/app.c     ****   nema_ext_hold_enable(2);
1233:Src/app.c     ****   nema_ext_hold_irq_enable(2);
1234:Src/app.c     ****   nema_ext_hold_enable(3);
1235:Src/app.c     ****   nema_ext_hold_irq_enable(3);
1236:Src/app.c     ****   printf("init nema DONE %s\n", nema_get_sw_device_name());
1237:Src/app.c     **** 
1238:Src/app.c     ****   hgfxmmu.Instance = GFXMMU;
1239:Src/app.c     ****   hgfxmmu.Init.BlockSize = GFXMMU_12BYTE_BLOCKS;
1240:Src/app.c     ****   hgfxmmu.Init.AddressTranslation = DISABLE;
1241:Src/app.c     ****   ret = HAL_GFXMMU_Init(&hgfxmmu);
1242:Src/app.c     ****   assert(ret == HAL_OK);
1243:Src/app.c     **** 
1244:Src/app.c     ****   packing.Buffer0Activation = ENABLE;
1245:Src/app.c     ****   packing.Buffer0Mode       = GFXMMU_PACKING_MSB_REMOVE;
1246:Src/app.c     ****   packing.DefaultAlpha      = 0xff;
1247:Src/app.c     ****   ret = HAL_GFXMMU_ConfigPacking(&hgfxmmu, &packing);
1248:Src/app.c     ****   assert(ret == HAL_OK);
1249:Src/app.c     **** 
1250:Src/app.c     ****   cl = nema_cl_create_sized(8192);
1251:Src/app.c     ****   nema_cl_bind_circular(&cl);
1252:Src/app.c     **** }
1253:Src/app.c     **** #endif
1254:Src/app.c     **** 
1255:Src/app.c     **** static float ld_compute_rotation(ld_point_t lm[LD_LANDMARK_NB])
1256:Src/app.c     **** {
ARM GAS  /tmp/ccddOyyT.s 			page 40


1257:Src/app.c     ****   float x0, y0, x1, y1;
1258:Src/app.c     ****   float rotation;
1259:Src/app.c     **** 
1260:Src/app.c     ****   x0 = lm[0].x;
1261:Src/app.c     ****   y0 = lm[0].y;
1262:Src/app.c     ****   x1 = lm[9].x;
1263:Src/app.c     ****   y1 = lm[9].y;
1264:Src/app.c     **** 
1265:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
1266:Src/app.c     **** 
1267:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
1268:Src/app.c     **** }
1269:Src/app.c     **** 
1270:Src/app.c     **** static void ld_to_roi(ld_point_t lm[LD_LANDMARK_NB], roi_t *roi, pd_pp_box_t *next_pd)
1271:Src/app.c     **** {
1272:Src/app.c     ****   const int pd_to_ld_idx[AI_PD_MODEL_PP_NB_KEYPOINTS] = {0, 5, 9, 13, 17, 1, 2};
1273:Src/app.c     ****   const int indices[] = {0, 1, 2, 3, 5, 6, 9, 10, 13, 14, 17, 18};
1274:Src/app.c     ****   float max_x, max_y, min_x, min_y;
1275:Src/app.c     ****   int i;
1276:Src/app.c     **** 
1277:Src/app.c     ****   max_x = max_y = -10000;
1278:Src/app.c     ****   min_x = min_y =  10000;
1279:Src/app.c     **** 
1280:Src/app.c     ****   roi->rotation = ld_compute_rotation(lm);
1281:Src/app.c     **** 
1282:Src/app.c     ****   for (i = 0; i < ARRAY_NB(indices); i++) {
1283:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
1284:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
1285:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
1286:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
1287:Src/app.c     ****   }
1288:Src/app.c     **** 
1289:Src/app.c     ****   roi->cx = (max_x + min_x) / 2;
1290:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
1291:Src/app.c     ****   roi->w = (max_x - min_x);
1292:Src/app.c     ****   roi->h = (max_y - min_y);
1293:Src/app.c     **** 
1294:Src/app.c     ****   next_pd->x_center = roi->cx;
1295:Src/app.c     ****   next_pd->y_center = roi->cy;
1296:Src/app.c     ****   next_pd->width = roi->w;
1297:Src/app.c     ****   next_pd->height = roi->h;
1298:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
1299:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
1300:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
1301:Src/app.c     ****   }
1302:Src/app.c     **** }
1303:Src/app.c     **** 
1304:Src/app.c     **** static void compute_next_roi(roi_t *src, ld_point_t lm_in[LD_LANDMARK_NB], roi_t *next, pd_pp_box_t
1305:Src/app.c     **** {
1306:Src/app.c     ****   const float shift_x = 0;
1307:Src/app.c     ****   const float shift_y = -0.1;
1308:Src/app.c     ****   const float scale = 2.0;
1309:Src/app.c     ****   ld_point_t lm[LD_LANDMARK_NB];
1310:Src/app.c     ****   roi_t roi;
1311:Src/app.c     ****   int i;
1312:Src/app.c     **** 
1313:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++)
ARM GAS  /tmp/ccddOyyT.s 			page 41


1314:Src/app.c     ****     decode_ld_landmark(src, &lm_in[i], &lm[i]);
1315:Src/app.c     **** 
1316:Src/app.c     ****   ld_to_roi(lm, &roi, next_pd);
1317:Src/app.c     ****   roi_shift_and_scale(&roi, shift_x, shift_y, scale, scale);
1318:Src/app.c     **** 
1319:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1320:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
1321:Src/app.c     ****   roi.rotation = 0;
1322:Src/app.c     **** #endif
1323:Src/app.c     **** 
1324:Src/app.c     ****   *next = roi;
1325:Src/app.c     **** }
1326:Src/app.c     **** static void nn_thread_fct(void *arg)
1327:Src/app.c     **** {
1328:Src/app.c     ****   float nn_period_filtered_ms = 0;
1329:Src/app.c     ****   // Filtered inference times, will be updated with 0
1330:Src/app.c     ****   float pd_filtered_ms = 0;
1331:Src/app.c     ****   float ld_filtered_ms = 0;
1332:Src/app.c     **** 
1333:Src/app.c     ****   uint32_t nn_period_ms;
1334:Src/app.c     ****   uint32_t nn_period[2];
1335:Src/app.c     ****   uint8_t *nn_pipe_dst;
1336:Src/app.c     ****   int is_tracking;
1337:Src/app.c     ****   uint32_t pd_ms;
1338:Src/app.c     ****   uint32_t hl_ms;
1339:Src/app.c     ****   int ret;
1340:Src/app.c     ****   roi_t roi_dummy;
1341:Src/app.c     ****   int is_landmark_valid;
1342:Src/app.c     **** 
1343:Src/app.c     ****   roi_dummy.cx = 100;
1344:Src/app.c     ****   roi_dummy.cy = 100;
1345:Src/app.c     ****   roi_dummy.w = 50;
1346:Src/app.c     ****   roi_dummy.h = 50;
1347:Src/app.c     **** 
1348:Src/app.c     **** 
1349:Src/app.c     ****   /*
1350:Src/app.c     ****    * 2. Initialize the YOLO model
1351:Src/app.c     ****    * This calls the init function to set up buffers and parameters.
1352:Src/app.c     ****    * If the application runs past this point, the initialization is successful.
1353:Src/app.c     ****    */
1354:Src/app.c     ****   yolo_detector_info_t yolo_info;
1355:Src/app.c     ****   yolo_detector_init(&yolo_info);
1356:Src/app.c     **** 
1357:Src/app.c     ****   fl_model_info_t face_info;
1358:Src/app.c     ****   face_landmark_init(&face_info);
1359:Src/app.c     **** 
1360:Src/app.c     ****   int detection_nb;
1361:Src/app.c     **** 
1362:Src/app.c     ****   /*** App Loop ***************************************************************/
1363:Src/app.c     ****   nn_period[1] = HAL_GetTick();
1364:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1365:Src/app.c     ****   assert(nn_pipe_dst);
1366:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1367:Src/app.c     ****   while (1)
1368:Src/app.c     ****   {
1369:Src/app.c     ****     uint8_t *capture_buffer;
1370:Src/app.c     ****     memset(&yolo_info.yolo_out, 0, sizeof(yolo_info.yolo_out));
ARM GAS  /tmp/ccddOyyT.s 			page 42


1371:Src/app.c     ****     // Standard frame timing
1372:Src/app.c     ****     nn_period[0] = nn_period[1];
1373:Src/app.c     ****     nn_period[1] = HAL_GetTick();
1374:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
1375:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
1376:Src/app.c     **** 
1377:Src/app.c     ****     // Get camera buffer to keep the pipeline moving
1378:Src/app.c     ****     capture_buffer = bqueue_get_ready(&nn_input_queue);
1379:Src/app.c     ****     assert(capture_buffer);
1380:Src/app.c     **** 
1381:Src/app.c     ****     SCB_InvalidateDCache_by_Addr((uint32_t *)capture_buffer, NN_WIDTH * NN_HEIGHT * NN_BPP);
1382:Src/app.c     ****     /**************************************************************************
1383:Src/app.c     ****      * MODEL EXECUTION 
1384:Src/app.c     ****      **************************************************************************/
1385:Src/app.c     ****     detection_nb = yolo_detector_run(capture_buffer, &yolo_info, &pd_ms);
1386:Src/app.c     ****     hl_ms = HAL_GetTick();
1387:Src/app.c     ****     is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &roi_dummy, ld_landmarks[0]);
1388:Src/app.c     ****     hl_ms = HAL_GetTick() - hl_ms;
1389:Src/app.c     **** 
1390:Src/app.c     ****     is_tracking = 0; // Force state to "not tracking"
1391:Src/app.c     **** 
1392:Src/app.c     ****     // Update filtered times with our zero values
1393:Src/app.c     ****     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1394:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1395:Src/app.c     **** 
1396:Src/app.c     ****     // We are done with the buffer, release it
1397:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
1398:Src/app.c     **** 
1399:Src/app.c     **** 
1400:Src/app.c     ****     /*
1401:Src/app.c     ****      * Update display stats
1402:Src/app.c     ****      */
1403:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1404:Src/app.c     ****     assert(ret == pdTRUE);
1405:Src/app.c     ****     // NEW: Loop through all detections to find the highest confidence score
1406:Src/app.c     ****     float max_confidence = 0.0f;
1407:Src/app.c     ****     for (int i = 0; i < yolo_info.yolo_out.nb_detect; i++)
1408:Src/app.c     ****       {
1409:Src/app.c     ****         // If the current object's confidence is the highest so far, save it
1410:Src/app.c     ****         if (yolo_info.yolo_out.pOutBuff[i].conf > max_confidence)
1411:Src/app.c     ****         {
1412:Src/app.c     ****           max_confidence = yolo_info.yolo_out.pOutBuff[i].x_center;
1413:Src/app.c     ****         }
1414:Src/app.c     ****       }
1415:Src/app.c     **** 
1416:Src/app.c     ****     // Populate display structure with valid, non-model data
1417:Src/app.c     ****     disp.info.pd_ms = (int)(max_confidence * NN_WIDTH);
1418:Src/app.c     ****     disp.info.hl_ms = (int)yolo_info.yolo_out.nb_detect;
1419:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
1420:Src/app.c     ****     disp.info.pd_hand_nb = yolo_info.yolo_out.nb_detect;
1421:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
1422:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
1423:Src/app.c     **** 
1424:Src/app.c     ****     // NOTE: We no longer copy box or landmark data, as none exists.
1425:Src/app.c     ****     // The display thread should check the 'is_valid' flag before drawing.
1426:Src/app.c     ****     if (is_landmark_valid)
1427:Src/app.c     ****     {
ARM GAS  /tmp/ccddOyyT.s 			page 43


1428:Src/app.c     ****       // If valid, show the dummy ROI as the bounding box
1429:Src/app.c     ****       disp.info.hands[0].roi = roi_dummy;
1430:Src/app.c     ****       // Copy the landmark data for the display thread
1431:Src/app.c     ****       for (int j = 0; j < LD_LANDMARK_NB; j++)
1432:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1433:Src/app.c     ****     }
1434:Src/app.c     **** 
1435:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1436:Src/app.c     ****     assert(ret == pdTRUE);
1437:Src/app.c     **** 
1438:Src/app.c     ****     // Signal the display thread to update
1439:Src/app.c     ****     xSemaphoreGive(disp.update);
1440:Src/app.c     ****   }
1441:Src/app.c     **** }
1442:Src/app.c     **** 
1443:Src/app.c     **** // static void backup(void *arg)
1444:Src/app.c     **** // {
1445:Src/app.c     **** //   float nn_period_filtered_ms = 0;
1446:Src/app.c     **** //   float pd_filtered_ms = 0;
1447:Src/app.c     **** //   float ld_filtered_ms = 0;
1448:Src/app.c     **** //   hl_model_info_t hl_info;
1449:Src/app.c     **** //   pd_model_info_t pd_info;
1450:Src/app.c     **** //   uint32_t nn_period_ms;
1451:Src/app.c     **** //   uint32_t nn_period[2];
1452:Src/app.c     **** //   uint8_t *nn_pipe_dst;
1453:Src/app.c     **** //   pd_pp_point_t box_next_keypoints[AI_PD_MODEL_PP_NB_KEYPOINTS];
1454:Src/app.c     **** //   pd_pp_box_t box_next;
1455:Src/app.c     **** //   int is_tracking = 0;
1456:Src/app.c     **** //   roi_t roi_next;
1457:Src/app.c     **** //   uint32_t pd_ms;
1458:Src/app.c     **** //   uint32_t hl_ms;
1459:Src/app.c     **** //   int ret;
1460:Src/app.c     **** //   int j;
1461:Src/app.c     **** 
1462:Src/app.c     **** //   /* Current tracking algo only support single hand */
1463:Src/app.c     **** //   assert(PD_MAX_HAND_NB == 1);
1464:Src/app.c     **** 
1465:Src/app.c     **** //   /* setup models buffer info */
1466:Src/app.c     **** //   palm_detector_init(&pd_info);
1467:Src/app.c     **** //   box_next.pKps = box_next_keypoints;
1468:Src/app.c     **** //   hand_landmark_init(&hl_info);
1469:Src/app.c     **** 
1470:Src/app.c     **** // #if HAS_ROTATION_SUPPORT == 1
1471:Src/app.c     **** //   app_rot_init(&hl_info);
1472:Src/app.c     **** // #endif
1473:Src/app.c     **** 
1474:Src/app.c     **** //   /*** App Loop ***************************************************************/
1475:Src/app.c     **** //   nn_period[1] = HAL_GetTick();
1476:Src/app.c     **** //   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1477:Src/app.c     **** //   assert(nn_pipe_dst);
1478:Src/app.c     **** //   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1479:Src/app.c     **** //   while (1)
1480:Src/app.c     **** //   {
1481:Src/app.c     **** //     uint8_t *capture_buffer;
1482:Src/app.c     **** //     int idx_for_resize;
1483:Src/app.c     **** 
1484:Src/app.c     **** //     nn_period[0] = nn_period[1];
ARM GAS  /tmp/ccddOyyT.s 			page 44


1485:Src/app.c     **** //     nn_period[1] = HAL_GetTick();
1486:Src/app.c     **** //     nn_period_ms = nn_period[1] - nn_period[0];
1487:Src/app.c     **** //     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 :
1488:Src/app.c     **** 
1489:Src/app.c     **** //     capture_buffer = bqueue_get_ready(&nn_input_queue);
1490:Src/app.c     **** //     assert(capture_buffer);
1491:Src/app.c     **** //     idx_for_resize = frame_event_nb_for_resize % DISPLAY_BUFFER_NB;
1492:Src/app.c     **** 
1493:Src/app.c     **** //     /* Only start palm detector when not tracking hand */
1494:Src/app.c     **** //     if (!is_tracking) {
1495:Src/app.c     **** //       is_tracking = palm_detector_run(capture_buffer, &pd_info, &pd_ms);
1496:Src/app.c     **** //       box_next.prob = pd_info.pd_out.pOutData[0].prob;
1497:Src/app.c     **** //     } else {
1498:Src/app.c     **** //       rois[0] = roi_next;
1499:Src/app.c     **** //       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
1500:Src/app.c     **** //       pd_ms = 0;
1501:Src/app.c     **** //     }
1502:Src/app.c     **** //     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1503:Src/app.c     **** //     bqueue_put_free(&nn_input_queue);
1504:Src/app.c     **** 
1505:Src/app.c     **** //     /* then run hand landmark detector if needed */
1506:Src/app.c     **** //     if (is_tracking) {
1507:Src/app.c     **** //       hl_ms = HAL_GetTick();
1508:Src/app.c     **** //       is_tracking = hand_landmark_run(lcd_bg_buffer[idx_for_resize], &hl_info, &rois[0], ld_land
1509:Src/app.c     **** //       CACHE_OP(SCB_InvalidateDCache_by_Addr(lcd_bg_buffer[idx_for_resize], sizeof(lcd_bg_buffer[
1510:Src/app.c     **** //       if (is_tracking)
1511:Src/app.c     **** //         compute_next_roi(&rois[0], ld_landmarks[0], &roi_next, &box_next);
1512:Src/app.c     **** //       hl_ms = HAL_GetTick() - hl_ms;
1513:Src/app.c     **** //     } else {
1514:Src/app.c     **** //       hl_ms = 0;
1515:Src/app.c     **** //     }
1516:Src/app.c     **** //     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1517:Src/app.c     **** 
1518:Src/app.c     **** //     /* update display stats */
1519:Src/app.c     **** //     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1520:Src/app.c     **** //     assert(ret == pdTRUE);
1521:Src/app.c     **** //     disp.info.pd_ms = is_tracking ? 0 : (int)pd_filtered_ms;
1522:Src/app.c     **** //     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
1523:Src/app.c     **** //     disp.info.nn_period_ms = nn_period_filtered_ms;
1524:Src/app.c     **** //     disp.info.pd_hand_nb = is_tracking;
1525:Src/app.c     **** //     disp.info.pd_max_prob = pd_info.pd_out.pOutData[0].prob;
1526:Src/app.c     **** //     disp.info.hands[0].is_valid = is_tracking;
1527:Src/app.c     **** //     copy_pd_box(&disp.info.hands[0].pd_hands, &pd_info.pd_out.pOutData[0]);
1528:Src/app.c     **** //     disp.info.hands[0].roi = rois[0];
1529:Src/app.c     **** //     for (j = 0; j < LD_LANDMARK_NB; j++)
1530:Src/app.c     **** //       disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1531:Src/app.c     **** //     ret = xSemaphoreGive(disp.lock);
1532:Src/app.c     **** //     assert(ret == pdTRUE);
1533:Src/app.c     **** 
1534:Src/app.c     **** //     /* It's possible xqueue is empty if display is slow. So don't check error code that may by p
1535:Src/app.c     **** //     xSemaphoreGive(disp.update);
1536:Src/app.c     **** //   }
1537:Src/app.c     **** // }
1538:Src/app.c     **** 
1539:Src/app.c     **** static void dp_update_drawing_area()
1540:Src/app.c     **** {
1541:Src/app.c     ****   int ret;
ARM GAS  /tmp/ccddOyyT.s 			page 45


1542:Src/app.c     **** 
1543:Src/app.c     ****   __disable_irq();
1544:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
1545:Src/app.c     ****   assert(ret == HAL_OK);
1546:Src/app.c     ****   __enable_irq();
1547:Src/app.c     **** }
1548:Src/app.c     **** 
1549:Src/app.c     **** static void dp_commit_drawing_area()
1550:Src/app.c     **** {
1551:Src/app.c     ****   int ret;
1552:Src/app.c     **** 
1553:Src/app.c     ****   __disable_irq();
1554:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
1555:Src/app.c     ****   assert(ret == HAL_OK);
1556:Src/app.c     ****   __enable_irq();
1557:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
1558:Src/app.c     **** }
1559:Src/app.c     **** 
1560:Src/app.c     **** static void on_ld_toggle_button_click(void *args)
1561:Src/app.c     **** {
1562:Src/app.c     ****   display_t *disp = (display_t *) args;
1563:Src/app.c     ****   int ret;
1564:Src/app.c     **** 
1565:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1566:Src/app.c     ****   assert(ret == pdTRUE);
1567:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
1568:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1569:Src/app.c     ****   assert(ret == pdTRUE);
1570:Src/app.c     **** }
1571:Src/app.c     **** 
1572:Src/app.c     **** static void on_pd_toggle_button_click(void *args)
1573:Src/app.c     **** {
1574:Src/app.c     ****   display_t *disp = (display_t *) args;
1575:Src/app.c     ****   int ret;
1576:Src/app.c     **** 
1577:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1578:Src/app.c     ****   assert(ret == pdTRUE);
1579:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
1580:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1581:Src/app.c     ****   assert(ret == pdTRUE);
1582:Src/app.c     **** }
1583:Src/app.c     **** 
1584:Src/app.c     **** static void dp_thread_fct(void *arg)
1585:Src/app.c     **** {
1586:Src/app.c     ****   button_t ld_toggle_button;
1587:Src/app.c     ****   button_t hd_toggle_button;
1588:Src/app.c     ****   uint32_t disp_ms = 0;
1589:Src/app.c     ****   display_info_t info;
1590:Src/app.c     ****   uint32_t ts;
1591:Src/app.c     ****   int ret;
1592:Src/app.c     **** 
1593:Src/app.c     **** #ifdef STM32N6570_DK_REV
1594:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER1, on_ld_toggle_button_click, &disp);
1595:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
1596:Src/app.c     **** #else
1597:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER, on_ld_toggle_button_click, &disp);
1598:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_USER, on_pd_toggle_button_click, &disp);
ARM GAS  /tmp/ccddOyyT.s 			page 46


1599:Src/app.c     **** #endif
1600:Src/app.c     ****   while (1)
1601:Src/app.c     ****   {
1602:Src/app.c     ****     ret = xSemaphoreTake(disp.update, portMAX_DELAY);
1603:Src/app.c     ****     assert(ret == pdTRUE);
1604:Src/app.c     **** 
1605:Src/app.c     ****     button_process(&ld_toggle_button);
1606:Src/app.c     ****     button_process(&hd_toggle_button);
1607:Src/app.c     **** 
1608:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1609:Src/app.c     ****     assert(ret == pdTRUE);
1610:Src/app.c     ****     info = disp.info;
1611:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1612:Src/app.c     ****     assert(ret == pdTRUE);
1613:Src/app.c     ****     info.disp_ms = disp_ms;
1614:Src/app.c     **** 
1615:Src/app.c     ****     ts = HAL_GetTick();
1616:Src/app.c     ****     dp_update_drawing_area();
1617:Src/app.c     ****     Display_NetworkOutput(&info);
1618:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
1619:Src/app.c     ****     dp_commit_drawing_area();
1620:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
1621:Src/app.c     ****   }
1622:Src/app.c     **** }
1623:Src/app.c     **** 
1624:Src/app.c     **** static void isp_thread_fct(void *arg)
1625:Src/app.c     **** {
 411              		.loc 1 1625 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		.loc 1 1625 1 is_stmt 0 view .LVU115
 416 0000 10B5     		push	{r4, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 4, -8
 419              		.cfi_offset 14, -4
1626:Src/app.c     ****   int ret;
1627:Src/app.c     **** 
1628:Src/app.c     ****   while (1) {
1629:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 420              		.loc 1 1629 11 view .LVU116
 421 0002 094C     		ldr	r4, .L24
 422              	.LVL27:
 423              	.L23:
1626:Src/app.c     ****   int ret;
 424              		.loc 1 1626 3 is_stmt 1 view .LVU117
1628:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 425              		.loc 1 1628 3 view .LVU118
 426              		.loc 1 1629 5 view .LVU119
 427              		.loc 1 1629 11 is_stmt 0 view .LVU120
 428 0004 4FF0FF31 		mov	r1, #-1
 429 0008 2068     		ldr	r0, [r4]
 430 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 431              	.LVL28:
1630:Src/app.c     ****     assert(ret == pdTRUE);
 432              		.loc 1 1630 5 is_stmt 1 view .LVU121
 433 000e 0128     		cmp	r0, #1
ARM GAS  /tmp/ccddOyyT.s 			page 47


 434 0010 06D0     		beq	.L22
 435              		.loc 1 1630 5 is_stmt 0 discriminator 1 view .LVU122
 436 0012 40F25E61 		movw	r1, #1630
 437 0016 054B     		ldr	r3, .L24+4
 438 0018 054A     		ldr	r2, .L24+8
 439 001a 0648     		ldr	r0, .L24+12
 440              	.LVL29:
 441              		.loc 1 1630 5 discriminator 1 view .LVU123
 442 001c FFF7FEFF 		bl	__assert_func
 443              	.LVL30:
 444              	.L22:
1631:Src/app.c     **** 
1632:Src/app.c     ****     CAM_IspUpdate();
 445              		.loc 1 1632 5 is_stmt 1 view .LVU124
 446 0020 FFF7FEFF 		bl	CAM_IspUpdate
 447              	.LVL31:
1628:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 448              		.loc 1 1628 9 view .LVU125
1629:Src/app.c     ****     assert(ret == pdTRUE);
 449              		.loc 1 1629 9 is_stmt 0 view .LVU126
 450 0024 EEE7     		b	.L23
 451              	.L25:
 452 0026 00BF     		.align	2
 453              	.L24:
 454 0028 00000000 		.word	isp_sem
 455 002c 00000000 		.word	.LC1
 456 0030 00000000 		.word	__func__.19
 457 0034 0E000000 		.word	.LC2
 458              		.cfi_endproc
 459              	.LFE7410:
 461              		.section	.text.on_pd_toggle_button_click,"ax",%progbits
 462              		.align	1
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 467              	on_pd_toggle_button_click:
 468              	.LVL32:
 469              	.LFB7408:
1573:Src/app.c     ****   display_t *disp = (display_t *) args;
 470              		.loc 1 1573 1 is_stmt 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
1574:Src/app.c     ****   int ret;
 474              		.loc 1 1574 3 view .LVU128
1575:Src/app.c     **** 
 475              		.loc 1 1575 3 view .LVU129
1577:Src/app.c     ****   assert(ret == pdTRUE);
 476              		.loc 1 1577 3 view .LVU130
1573:Src/app.c     ****   display_t *disp = (display_t *) args;
 477              		.loc 1 1573 1 is_stmt 0 view .LVU131
 478 0000 10B5     		push	{r4, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 4, -8
 481              		.cfi_offset 14, -4
1577:Src/app.c     ****   assert(ret == pdTRUE);
 482              		.loc 1 1577 9 view .LVU132
ARM GAS  /tmp/ccddOyyT.s 			page 48


 483 0002 4FF0FF31 		mov	r1, #-1
1573:Src/app.c     ****   display_t *disp = (display_t *) args;
 484              		.loc 1 1573 1 view .LVU133
 485 0006 0446     		mov	r4, r0
1577:Src/app.c     ****   assert(ret == pdTRUE);
 486              		.loc 1 1577 9 view .LVU134
 487 0008 406D     		ldr	r0, [r0, #84]
 488              	.LVL33:
1577:Src/app.c     ****   assert(ret == pdTRUE);
 489              		.loc 1 1577 9 view .LVU135
 490 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 491              	.LVL34:
1578:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 492              		.loc 1 1578 3 is_stmt 1 view .LVU136
 493 000e 0128     		cmp	r0, #1
 494 0010 06D0     		beq	.L27
1578:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 495              		.loc 1 1578 3 is_stmt 0 discriminator 1 view .LVU137
 496 0012 40F22A61 		movw	r1, #1578
 497 0016 0D4B     		ldr	r3, .L30
 498 0018 0D4A     		ldr	r2, .L30+4
 499              	.L29:
1581:Src/app.c     **** }
 500              		.loc 1 1581 3 discriminator 1 view .LVU138
 501 001a 0E48     		ldr	r0, .L30+8
 502              	.LVL35:
1581:Src/app.c     **** }
 503              		.loc 1 1581 3 discriminator 1 view .LVU139
 504 001c FFF7FEFF 		bl	__assert_func
 505              	.LVL36:
 506              	.L27:
1579:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 507              		.loc 1 1579 3 is_stmt 1 view .LVU140
1579:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 508              		.loc 1 1579 32 is_stmt 0 view .LVU141
 509 0020 D4F8C030 		ldr	r3, [r4, #192]
1580:Src/app.c     ****   assert(ret == pdTRUE);
 510              		.loc 1 1580 9 view .LVU142
 511 0024 606D     		ldr	r0, [r4, #84]
 512              	.LVL37:
1579:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 513              		.loc 1 1579 32 view .LVU143
 514 0026 B3FA83F3 		clz	r3, r3
 515 002a 5B09     		lsrs	r3, r3, #5
1579:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 516              		.loc 1 1579 30 view .LVU144
 517 002c C4F8C030 		str	r3, [r4, #192]
1580:Src/app.c     ****   assert(ret == pdTRUE);
 518              		.loc 1 1580 3 is_stmt 1 view .LVU145
1580:Src/app.c     ****   assert(ret == pdTRUE);
 519              		.loc 1 1580 9 is_stmt 0 view .LVU146
 520 0030 0023     		movs	r3, #0
 521 0032 1A46     		mov	r2, r3
 522 0034 1946     		mov	r1, r3
 523 0036 FFF7FEFF 		bl	xQueueGenericSend
 524              	.LVL38:
1581:Src/app.c     **** }
ARM GAS  /tmp/ccddOyyT.s 			page 49


 525              		.loc 1 1581 3 is_stmt 1 view .LVU147
 526 003a 0128     		cmp	r0, #1
 527 003c 04D0     		beq	.L26
1581:Src/app.c     **** }
 528              		.loc 1 1581 3 is_stmt 0 discriminator 1 view .LVU148
 529 003e 40F22D61 		movw	r1, #1581
 530 0042 024B     		ldr	r3, .L30
 531 0044 024A     		ldr	r2, .L30+4
 532 0046 E8E7     		b	.L29
 533              	.L26:
1582:Src/app.c     **** 
 534              		.loc 1 1582 1 view .LVU149
 535 0048 10BD     		pop	{r4, pc}
 536              	.LVL39:
 537              	.L31:
1582:Src/app.c     **** 
 538              		.loc 1 1582 1 view .LVU150
 539 004a 00BF     		.align	2
 540              	.L30:
 541 004c 00000000 		.word	.LC1
 542 0050 00000000 		.word	__func__.17
 543 0054 0E000000 		.word	.LC2
 544              		.cfi_endproc
 545              	.LFE7408:
 547              		.section	.text.on_ld_toggle_button_click,"ax",%progbits
 548              		.align	1
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 553              	on_ld_toggle_button_click:
 554              	.LVL40:
 555              	.LFB7407:
1561:Src/app.c     ****   display_t *disp = (display_t *) args;
 556              		.loc 1 1561 1 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
1562:Src/app.c     ****   int ret;
 560              		.loc 1 1562 3 view .LVU152
1563:Src/app.c     **** 
 561              		.loc 1 1563 3 view .LVU153
1565:Src/app.c     ****   assert(ret == pdTRUE);
 562              		.loc 1 1565 3 view .LVU154
1561:Src/app.c     ****   display_t *disp = (display_t *) args;
 563              		.loc 1 1561 1 is_stmt 0 view .LVU155
 564 0000 10B5     		push	{r4, lr}
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 4, -8
 567              		.cfi_offset 14, -4
1565:Src/app.c     ****   assert(ret == pdTRUE);
 568              		.loc 1 1565 9 view .LVU156
 569 0002 4FF0FF31 		mov	r1, #-1
1561:Src/app.c     ****   display_t *disp = (display_t *) args;
 570              		.loc 1 1561 1 view .LVU157
 571 0006 0446     		mov	r4, r0
1565:Src/app.c     ****   assert(ret == pdTRUE);
 572              		.loc 1 1565 9 view .LVU158
ARM GAS  /tmp/ccddOyyT.s 			page 50


 573 0008 406D     		ldr	r0, [r0, #84]
 574              	.LVL41:
1565:Src/app.c     ****   assert(ret == pdTRUE);
 575              		.loc 1 1565 9 view .LVU159
 576 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 577              	.LVL42:
1566:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 578              		.loc 1 1566 3 is_stmt 1 view .LVU160
 579 000e 0128     		cmp	r0, #1
 580 0010 06D0     		beq	.L33
1566:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 581              		.loc 1 1566 3 is_stmt 0 discriminator 1 view .LVU161
 582 0012 40F21E61 		movw	r1, #1566
 583 0016 0D4B     		ldr	r3, .L36
 584 0018 0D4A     		ldr	r2, .L36+4
 585              	.L35:
1569:Src/app.c     **** }
 586              		.loc 1 1569 3 discriminator 1 view .LVU162
 587 001a 0E48     		ldr	r0, .L36+8
 588              	.LVL43:
1569:Src/app.c     **** }
 589              		.loc 1 1569 3 discriminator 1 view .LVU163
 590 001c FFF7FEFF 		bl	__assert_func
 591              	.LVL44:
 592              	.L33:
1567:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 593              		.loc 1 1567 3 is_stmt 1 view .LVU164
1567:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 594              		.loc 1 1567 32 is_stmt 0 view .LVU165
 595 0020 D4F8BC30 		ldr	r3, [r4, #188]
1568:Src/app.c     ****   assert(ret == pdTRUE);
 596              		.loc 1 1568 9 view .LVU166
 597 0024 606D     		ldr	r0, [r4, #84]
 598              	.LVL45:
1567:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 599              		.loc 1 1567 32 view .LVU167
 600 0026 B3FA83F3 		clz	r3, r3
 601 002a 5B09     		lsrs	r3, r3, #5
1567:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 602              		.loc 1 1567 30 view .LVU168
 603 002c C4F8BC30 		str	r3, [r4, #188]
1568:Src/app.c     ****   assert(ret == pdTRUE);
 604              		.loc 1 1568 3 is_stmt 1 view .LVU169
1568:Src/app.c     ****   assert(ret == pdTRUE);
 605              		.loc 1 1568 9 is_stmt 0 view .LVU170
 606 0030 0023     		movs	r3, #0
 607 0032 1A46     		mov	r2, r3
 608 0034 1946     		mov	r1, r3
 609 0036 FFF7FEFF 		bl	xQueueGenericSend
 610              	.LVL46:
1569:Src/app.c     **** }
 611              		.loc 1 1569 3 is_stmt 1 view .LVU171
 612 003a 0128     		cmp	r0, #1
 613 003c 04D0     		beq	.L32
1569:Src/app.c     **** }
 614              		.loc 1 1569 3 is_stmt 0 discriminator 1 view .LVU172
 615 003e 40F22161 		movw	r1, #1569
ARM GAS  /tmp/ccddOyyT.s 			page 51


 616 0042 024B     		ldr	r3, .L36
 617 0044 024A     		ldr	r2, .L36+4
 618 0046 E8E7     		b	.L35
 619              	.L32:
1570:Src/app.c     **** 
 620              		.loc 1 1570 1 view .LVU173
 621 0048 10BD     		pop	{r4, pc}
 622              	.LVL47:
 623              	.L37:
1570:Src/app.c     **** 
 624              		.loc 1 1570 1 view .LVU174
 625 004a 00BF     		.align	2
 626              	.L36:
 627 004c 00000000 		.word	.LC1
 628 0050 00000000 		.word	__func__.16
 629 0054 0E000000 		.word	.LC2
 630              		.cfi_endproc
 631              	.LFE7407:
 633              		.section	.text.button_process,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 639              	button_process:
 640              	.LVL48:
 641              	.LFB7369:
 425:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 642              		.loc 1 425 1 is_stmt 1 view -0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 426:Src/app.c     **** 
 646              		.loc 1 426 3 view .LVU176
 425:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 647              		.loc 1 425 1 is_stmt 0 view .LVU177
 648 0000 38B5     		push	{r3, r4, r5, lr}
 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 3, -16
 651              		.cfi_offset 4, -12
 652              		.cfi_offset 5, -8
 653              		.cfi_offset 14, -4
 425:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 654              		.loc 1 425 1 view .LVU178
 655 0002 0446     		mov	r4, r0
 426:Src/app.c     **** 
 656              		.loc 1 426 15 view .LVU179
 657 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 658              	.LVL49:
 426:Src/app.c     **** 
 659              		.loc 1 426 15 view .LVU180
 660 0006 FFF7FEFF 		bl	BSP_PB_GetState
 661              	.LVL50:
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 662              		.loc 1 428 6 view .LVU181
 663 000a 6368     		ldr	r3, [r4, #4]
 426:Src/app.c     **** 
 664              		.loc 1 426 15 view .LVU182
ARM GAS  /tmp/ccddOyyT.s 			page 52


 665 000c 0546     		mov	r5, r0
 666              	.LVL51:
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 667              		.loc 1 428 3 is_stmt 1 view .LVU183
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 668              		.loc 1 428 6 is_stmt 0 view .LVU184
 669 000e 8342     		cmp	r3, r0
 670 0010 04D0     		beq	.L39
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 671              		.loc 1 428 30 discriminator 1 view .LVU185
 672 0012 18B1     		cbz	r0, .L39
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 673              		.loc 1 428 43 discriminator 2 view .LVU186
 674 0014 A368     		ldr	r3, [r4, #8]
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 675              		.loc 1 428 39 discriminator 2 view .LVU187
 676 0016 0BB1     		cbz	r3, .L39
 429:Src/app.c     **** 
 677              		.loc 1 429 5 is_stmt 1 view .LVU188
 678 0018 E068     		ldr	r0, [r4, #12]
 679              	.LVL52:
 429:Src/app.c     **** 
 680              		.loc 1 429 5 is_stmt 0 view .LVU189
 681 001a 9847     		blx	r3
 682              	.LVL53:
 683              	.L39:
 431:Src/app.c     **** }
 684              		.loc 1 431 3 is_stmt 1 view .LVU190
 431:Src/app.c     **** }
 685              		.loc 1 431 17 is_stmt 0 view .LVU191
 686 001c 6560     		str	r5, [r4, #4]
 432:Src/app.c     **** 
 687              		.loc 1 432 1 view .LVU192
 688 001e 38BD     		pop	{r3, r4, r5, pc}
 432:Src/app.c     **** 
 689              		.loc 1 432 1 view .LVU193
 690              		.cfi_endproc
 691              	.LFE7369:
 693              		.section	.rodata.button_init.part.0.str1.1,"aMS",%progbits,1
 694              	.LC3:
 695 0000 72657420 		.ascii	"ret == BSP_ERROR_NONE\000"
 695      3D3D2042 
 695      53505F45 
 695      52524F52 
 695      5F4E4F4E 
 696              		.section	.text.button_init.part.0,"ax",%progbits
 697              		.align	1
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 702              	button_init.part.0:
 703              	.LFB7415:
 411:Src/app.c     **** {
 704              		.loc 1 411 13 is_stmt 1 view -0
 705              		.cfi_startproc
 706              		@ Volatile: function does not return.
 707              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccddOyyT.s 			page 53


 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              	.LVL54:
 411:Src/app.c     **** {
 710              		.loc 1 411 13 is_stmt 0 view .LVU195
 711 0000 08B5     		push	{r3, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 3, -8
 714              		.cfi_offset 14, -4
 416:Src/app.c     **** 
 715              		.loc 1 416 3 discriminator 1 view .LVU196
 716 0002 4FF4D071 		mov	r1, #416
 717 0006 024B     		ldr	r3, .L47
 718 0008 024A     		ldr	r2, .L47+4
 719 000a 0348     		ldr	r0, .L47+8
 720 000c FFF7FEFF 		bl	__assert_func
 721              	.LVL55:
 722              	.L48:
 723              		.align	2
 724              	.L47:
 725 0010 00000000 		.word	.LC3
 726 0014 00000000 		.word	__func__.15
 727 0018 0E000000 		.word	.LC2
 728              		.cfi_endproc
 729              	.LFE7415:
 731              		.section	.text.display_ld_hand,"ax",%progbits
 732              		.align	1
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 737              	display_ld_hand:
 738              	.LVL56:
 739              	.LFB7390:
 751:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 740              		.loc 1 751 1 is_stmt 1 view -0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 5616
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 752:Src/app.c     ****   roi_t *roi = &hand->roi;
 744              		.loc 1 752 3 view .LVU198
 753:Src/app.c     ****   int x[LD_LANDMARK_NB];
 745              		.loc 1 753 3 view .LVU199
 754:Src/app.c     ****   int y[LD_LANDMARK_NB];
 746              		.loc 1 754 3 view .LVU200
 755:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 747              		.loc 1 755 3 view .LVU201
 756:Src/app.c     ****   ld_point_t decoded;
 748              		.loc 1 756 3 view .LVU202
 757:Src/app.c     ****   int i;
 749              		.loc 1 757 3 view .LVU203
 758:Src/app.c     **** 
 750              		.loc 1 758 3 view .LVU204
 760:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 751              		.loc 1 760 3 view .LVU205
 760:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 752              		.loc 1 760 17 discriminator 1 view .LVU206
 751:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 753              		.loc 1 751 1 is_stmt 0 view .LVU207
ARM GAS  /tmp/ccddOyyT.s 			page 54


 754 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 755              		.cfi_def_cfa_offset 36
 756              		.cfi_offset 4, -36
 757              		.cfi_offset 5, -32
 758              		.cfi_offset 6, -28
 759              		.cfi_offset 7, -24
 760              		.cfi_offset 8, -20
 761              		.cfi_offset 9, -16
 762              		.cfi_offset 10, -12
 763              		.cfi_offset 11, -8
 764              		.cfi_offset 14, -4
 765 0004 2DED0A8B 		vpush.64	{d8, d9, d10, d11, d12}
 766              		.cfi_def_cfa_offset 76
 767              		.cfi_offset 80, -76
 768              		.cfi_offset 81, -72
 769              		.cfi_offset 82, -68
 770              		.cfi_offset 83, -64
 771              		.cfi_offset 84, -60
 772              		.cfi_offset 85, -56
 773              		.cfi_offset 86, -52
 774              		.cfi_offset 87, -48
 775              		.cfi_offset 88, -44
 776              		.cfi_offset 89, -40
 777              	.LBB197:
 778              	.LBB198:
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 779              		.loc 1 746 46 view .LVU208
 780 0008 90ED0BCA 		vldr.32	s24, [r0, #44]
 781 000c B7EECCCA 		vcvt.f64.f32	d12, s24
 782              	.LBE198:
 783              	.LBE197:
 751:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 784              		.loc 1 751 1 view .LVU209
 785 0010 ADF5AF5D 		sub	sp, sp, #5600
 786              		.cfi_def_cfa_offset 5676
 787 0014 85B0     		sub	sp, sp, #20
 788              		.cfi_def_cfa_offset 5696
 789              	.LBB203:
 790              	.LBB199:
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 791              		.loc 1 746 46 view .LVU210
 792 0016 B0EE4C0B 		vmov.f64	d0, d12
 793              	.LBE199:
 794              	.LBE203:
 751:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 795              		.loc 1 751 1 view .LVU211
 796 001a 0446     		mov	r4, r0
 797              	.LBB204:
 798              	.LBB200:
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 799              		.loc 1 746 19 view .LVU212
 800 001c 90ED07AA 		vldr.32	s20, [r0, #28]
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 801              		.loc 1 746 40 view .LVU213
 802 0020 90ED09BA 		vldr.32	s22, [r0, #36]
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 803              		.loc 1 746 46 view .LVU214
ARM GAS  /tmp/ccddOyyT.s 			page 55


 804 0024 FFF7FEFF 		bl	cos
 805              	.LVL57:
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 806              		.loc 1 746 46 view .LVU215
 807 0028 B0EE408B 		vmov.f64	d8, d0
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 808              		.loc 1 746 82 discriminator 1 view .LVU216
 809 002c B0EE4C0B 		vmov.f64	d0, d12
 810 0030 FFF7FEFF 		bl	sin
 811              	.LVL58:
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 812              		.loc 1 746 76 discriminator 1 view .LVU217
 813 0034 94ED0A9A 		vldr.32	s18, [r4, #40]
 747:Src/app.c     **** }
 814              		.loc 1 747 19 view .LVU218
 815 0038 94ED086A 		vldr.32	s12, [r4, #32]
 816 003c EC46     		mov	ip, sp
 817 003e 0DF56A65 		add	r5, sp, #3744
 818 0042 0DF5EA60 		add	r0, sp, #1872
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 819              		.loc 1 746 19 view .LVU219
 820 0046 B7EECAAA 		vcvt.f64.f32	d10, s20
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 821              		.loc 1 746 40 view .LVU220
 822 004a B7EECBBA 		vcvt.f64.f32	d11, s22
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 823              		.loc 1 746 76 discriminator 1 view .LVU221
 824 004e B7EEC99A 		vcvt.f64.f32	d9, s18
 747:Src/app.c     **** }
 825              		.loc 1 747 19 view .LVU222
 826 0052 B7EEC66A 		vcvt.f64.f32	d6, s12
 827 0056 AE46     		mov	lr, r5
 828 0058 0646     		mov	r6, r0
 829 005a 6746     		mov	r7, ip
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 830              		.loc 1 746 33 view .LVU223
 831 005c B6EE005B 		vmov.f64	d5, #5.0e-1
 832              	.LBE200:
 833              	.LBE204:
 834              	.LBB205:
 835              	.LBB206:
 634:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 836              		.loc 1 634 6 view .LVU224
 837 0060 40F21D39 		movw	r9, #797
 636:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 838              		.loc 1 636 6 view .LVU225
 839 0064 40F2DD18 		movw	r8, #477
 639:Src/app.c     **** }
 840              		.loc 1 639 21 discriminator 3 view .LVU226
 841 0068 4FF4EA71 		mov	r1, #468
 842              	.LVL59:
 843              	.L51:
 639:Src/app.c     **** }
 844              		.loc 1 639 21 discriminator 3 view .LVU227
 845              	.LBE206:
 846              	.LBE205:
 761:Src/app.c     ****     x[i] = (int)decoded.x;
ARM GAS  /tmp/ccddOyyT.s 			page 56


 847              		.loc 1 761 5 is_stmt 1 view .LVU228
 848              	.LBB211:
 849              	.LBI197:
 740:Src/app.c     **** {
 850              		.loc 1 740 13 view .LVU229
 851              	.LBB201:
 742:Src/app.c     ****   float w = roi->w;
 852              		.loc 1 742 3 view .LVU230
 743:Src/app.c     ****   float h = roi->h;
 853              		.loc 1 743 3 view .LVU231
 744:Src/app.c     **** 
 854              		.loc 1 744 3 view .LVU232
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 855              		.loc 1 746 3 view .LVU233
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 856              		.loc 1 746 29 is_stmt 0 view .LVU234
 857 006c 94ED0C3A 		vldr.32	s6, [r4, #48]
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 858              		.loc 1 746 65 discriminator 1 view .LVU235
 859 0070 94ED0D4A 		vldr.32	s8, [r4, #52]
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 860              		.loc 1 746 29 view .LVU236
 861 0074 B7EEC33A 		vcvt.f64.f32	d3, s6
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 862              		.loc 1 746 65 discriminator 1 view .LVU237
 863 0078 B7EEC44A 		vcvt.f64.f32	d4, s8
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 864              		.loc 1 746 33 view .LVU238
 865 007c 33EE453B 		vsub.f64	d3, d3, d5
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 866              		.loc 1 746 24 discriminator 1 view .LVU239
 867 0080 B0EE4A7B 		vmov.f64	d7, d10
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 868              		.loc 1 746 40 view .LVU240
 869 0084 23EE0B3B 		vmul.f64	d3, d3, d11
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 870              		.loc 1 746 69 discriminator 1 view .LVU241
 871 0088 34EE454B 		vsub.f64	d4, d4, d5
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 872              		.loc 1 746 24 discriminator 1 view .LVU242
 873 008c A3EE087B 		vfma.f64	d7, d3, d8
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 874              		.loc 1 746 76 discriminator 1 view .LVU243
 875 0090 24EE094B 		vmul.f64	d4, d4, d9
 746:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 876              		.loc 1 746 60 discriminator 2 view .LVU244
 877 0094 A4EE407B 		vfms.f64	d7, d4, d0
 878 0098 F7EEC72B 		vcvt.f32.f64	s5, d7
 747:Src/app.c     **** }
 879              		.loc 1 747 3 is_stmt 1 view .LVU245
 747:Src/app.c     **** }
 880              		.loc 1 747 24 is_stmt 0 discriminator 1 view .LVU246
 881 009c B0EE467B 		vmov.f64	d7, d6
 882 00a0 A3EE007B 		vfma.f64	d7, d3, d0
 747:Src/app.c     **** }
 883              		.loc 1 747 60 discriminator 2 view .LVU247
 884 00a4 A8EE047B 		vfma.f64	d7, d8, d4
ARM GAS  /tmp/ccddOyyT.s 			page 57


 885              	.LVL60:
 747:Src/app.c     **** }
 886              		.loc 1 747 60 discriminator 2 view .LVU248
 887              	.LBE201:
 888              	.LBE211:
 762:Src/app.c     ****     y[i] = (int)decoded.y;
 889              		.loc 1 762 5 is_stmt 1 view .LVU249
 762:Src/app.c     ****     y[i] = (int)decoded.y;
 890              		.loc 1 762 12 is_stmt 0 view .LVU250
 891 00a8 FDEEE24A 		vcvt.s32.f32	s9, s5
 892 00ac 14EE90AA 		vmov	r10, s9	@ int
 763:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 893              		.loc 1 763 5 is_stmt 1 view .LVU251
 894              	.LBB212:
 895              	.LBB202:
 747:Src/app.c     **** }
 896              		.loc 1 747 60 is_stmt 0 discriminator 2 view .LVU252
 897 00b0 B7EEC77B 		vcvt.f32.f64	s14, d7
 898              	.LBE202:
 899              	.LBE212:
 900              	.LBB213:
 901              	.LBB207:
 630:Src/app.c     ****     *x = margin;
 902              		.loc 1 630 6 view .LVU253
 903 00b4 5246     		mov	r2, r10
 904              	.LBE207:
 905              	.LBE213:
 763:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 906              		.loc 1 763 12 view .LVU254
 907 00b6 FDEEC77A 		vcvt.s32.f32	s15, s14
 908              	.LBB214:
 909              	.LBB208:
 630:Src/app.c     ****     *x = margin;
 910              		.loc 1 630 6 view .LVU255
 911 00ba 022A     		cmp	r2, #2
 912 00bc B8BF     		it	lt
 913 00be 0222     		movlt	r2, #2
 914              	.LBE208:
 915              	.LBE214:
 763:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 916              		.loc 1 763 12 view .LVU256
 917 00c0 17EE903A 		vmov	r3, s15	@ int
 764:Src/app.c     ****   }
 918              		.loc 1 764 5 is_stmt 1 view .LVU257
 919              	.LVL61:
 920              	.LBB215:
 921              	.LBI205:
 625:Src/app.c     **** {
 922              		.loc 1 625 12 view .LVU258
 923              	.LBB209:
 627:Src/app.c     ****   int yi = *y;
 924              		.loc 1 627 3 view .LVU259
 628:Src/app.c     **** 
 925              		.loc 1 628 3 view .LVU260
 630:Src/app.c     ****     *x = margin;
 926              		.loc 1 630 3 view .LVU261
 632:Src/app.c     ****     *y = margin;
ARM GAS  /tmp/ccddOyyT.s 			page 58


 927              		.loc 1 632 3 view .LVU262
 634:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 928              		.loc 1 634 3 view .LVU263
 634:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 929              		.loc 1 634 6 is_stmt 0 view .LVU264
 930 00c4 4A45     		cmp	r2, r9
 931 00c6 A8BF     		it	ge
 932 00c8 4A46     		movge	r2, r9
 632:Src/app.c     ****     *y = margin;
 933              		.loc 1 632 6 view .LVU265
 934 00ca 022B     		cmp	r3, #2
 935 00cc 9B46     		mov	fp, r3
 936 00ce B8BF     		it	lt
 937 00d0 4FF0020B 		movlt	fp, #2
 636:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 938              		.loc 1 636 6 view .LVU266
 939 00d4 C345     		cmp	fp, r8
 940 00d6 A8BF     		it	ge
 941 00d8 C346     		movge	fp, r8
 639:Src/app.c     **** }
 942              		.loc 1 639 21 discriminator 2 view .LVU267
 943 00da B3EB0B03 		subs	r3, r3, fp
 944              	.LVL62:
 639:Src/app.c     **** }
 945              		.loc 1 639 21 discriminator 2 view .LVU268
 946 00de 18BF     		it	ne
 947 00e0 0123     		movne	r3, #1
 948 00e2 9245     		cmp	r10, r2
 949 00e4 18BF     		it	ne
 950 00e6 0123     		movne	r3, #1
 951              	.LBE209:
 952              	.LBE215:
 760:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 953              		.loc 1 760 17 discriminator 1 view .LVU269
 954 00e8 0139     		subs	r1, r1, #1
 955 00ea 4CF8042B 		str	r2, [ip], #4
 956              	.LBB216:
 957              	.LBB210:
 636:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 958              		.loc 1 636 3 is_stmt 1 view .LVU270
 959 00ee 40F804BB 		str	fp, [r0], #4
 639:Src/app.c     **** }
 960              		.loc 1 639 3 view .LVU271
 961              	.LVL63:
 639:Src/app.c     **** }
 962              		.loc 1 639 3 is_stmt 0 view .LVU272
 963              	.LBE210:
 964              	.LBE216:
 764:Src/app.c     ****   }
 965              		.loc 1 764 19 discriminator 1 view .LVU273
 966 00f2 4EF8043B 		str	r3, [lr], #4
 760:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 967              		.loc 1 760 36 is_stmt 1 discriminator 3 view .LVU274
 760:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 968              		.loc 1 760 17 discriminator 1 view .LVU275
 969 00f6 04F10804 		add	r4, r4, #8
 970 00fa B7D1     		bne	.L51
ARM GAS  /tmp/ccddOyyT.s 			page 59


 767:Src/app.c     ****     if (is_clamped[i])
 971              		.loc 1 767 10 is_stmt 0 view .LVU276
 972 00fc 0024     		movs	r4, #0
 973              	.L53:
 974              	.LVL64:
 768:Src/app.c     ****       continue;
 975              		.loc 1 768 5 is_stmt 1 view .LVU277
 768:Src/app.c     ****       continue;
 976              		.loc 1 768 19 is_stmt 0 view .LVU278
 977 00fe 55F8043B 		ldr	r3, [r5], #4
 768:Src/app.c     ****       continue;
 978              		.loc 1 768 8 view .LVU279
 979 0102 43B9     		cbnz	r3, .L52
 770:Src/app.c     ****   }
 980              		.loc 1 770 5 is_stmt 1 view .LVU280
 981 0104 6FF0FF03 		mvn	r3, #255
 982 0108 0222     		movs	r2, #2
 983 010a 56F82410 		ldr	r1, [r6, r4, lsl #2]
 984 010e 57F82400 		ldr	r0, [r7, r4, lsl #2]
 985 0112 FFF7FEFF 		bl	UTIL_LCD_FillCircle
 986              	.LVL65:
 987              	.L52:
 767:Src/app.c     ****     if (is_clamped[i])
 988              		.loc 1 767 36 discriminator 2 view .LVU281
 989 0116 0134     		adds	r4, r4, #1
 990              	.LVL66:
 767:Src/app.c     ****     if (is_clamped[i])
 991              		.loc 1 767 17 discriminator 1 view .LVU282
 992 0118 B4F5EA7F 		cmp	r4, #468
 993 011c EFD1     		bne	.L53
 772:Src/app.c     **** 
 994              		.loc 1 772 1 is_stmt 0 view .LVU283
 995 011e 0DF5AF5D 		add	sp, sp, #5600
 996 0122 05B0     		add	sp, sp, #20
 997              		.cfi_def_cfa_offset 76
 998              		@ sp needed
 999 0124 BDEC0A8B 		vldm	sp!, {d8-d12}
 1000              		.cfi_restore 88
 1001              		.cfi_restore 89
 1002              		.cfi_restore 86
 1003              		.cfi_restore 87
 1004              		.cfi_restore 84
 1005              		.cfi_restore 85
 1006              		.cfi_restore 82
 1007              		.cfi_restore 83
 1008              		.cfi_restore 80
 1009              		.cfi_restore 81
 1010              		.cfi_def_cfa_offset 36
 1011 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 772:Src/app.c     **** 
 1012              		.loc 1 772 1 view .LVU284
 1013              		.cfi_endproc
 1014              	.LFE7390:
 1016              		.section	.rodata.nn_thread_fct.str1.1,"aMS",%progbits,1
 1017              	.LC4:
 1018 0000 72657420 		.ascii	"ret == 0\000"
 1018      3D3D2030 
ARM GAS  /tmp/ccddOyyT.s 			page 60


 1018      00
 1019              	.LC5:
 1020 0009 696E666F 		.ascii	"info->prob_out_len == sizeof(float)\000"
 1020      2D3E7072 
 1020      6F625F6F 
 1020      75745F6C 
 1020      656E203D 
 1021              	.LC6:
 1022 002d 696E666F 		.ascii	"info->landmarks_out_len == sizeof(float) * 1404\000"
 1022      2D3E6C61 
 1022      6E646D61 
 1022      726B735F 
 1022      6F75745F 
 1023              	.LC7:
 1024 005d 6E6E5F70 		.ascii	"nn_pipe_dst\000"
 1024      6970655F 
 1024      64737400 
 1025              	.LC8:
 1026 0069 63617074 		.ascii	"capture_buffer\000"
 1026      7572655F 
 1026      62756666 
 1026      657200
 1027              	.LC9:
 1028 0078 72657420 		.ascii	"ret == LL_ATON_User_IO_NOERROR\000"
 1028      3D3D204C 
 1028      4C5F4154 
 1028      4F4E5F55 
 1028      7365725F 
 1029              	.LC10:
 1030 0097 77696474 		.ascii	"width_out > 0\000"
 1030      685F6F75 
 1030      74203E20 
 1030      3000
 1031              	.LC11:
 1032 00a5 68656967 		.ascii	"height_out > 0\000"
 1032      68745F6F 
 1032      7574203E 
 1032      203000
 1033              	.LC12:
 1034 00b4 6F75745F 		.ascii	"out_data_end >= info->nn_in\000"
 1034      64617461 
 1034      5F656E64 
 1034      203E3D20 
 1034      696E666F 
 1035              	.LC13:
 1036 00d0 6F75745F 		.ascii	"out_data_end < info->nn_in + info->nn_in_len\000"
 1036      64617461 
 1036      5F656E64 
 1036      203C2069 
 1036      6E666F2D 
 1037              	.LC14:
 1038 00fd 77696474 		.ascii	"width_in > 0\000"
 1038      685F696E 
 1038      203E2030 
 1038      00
 1039              	.LC15:
 1040 010a 68656967 		.ascii	"height_in > 0\000"
ARM GAS  /tmp/ccddOyyT.s 			page 61


 1040      68745F69 
 1040      6E203E20 
 1040      3000
 1041              	.LC16:
 1042 0118 696E5F64 		.ascii	"in_data_end >= buffer\000"
 1042      6174615F 
 1042      656E6420 
 1042      3E3D2062 
 1042      75666665 
 1043              	.LC17:
 1044 012e 696E5F64 		.ascii	"in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT"
 1044      6174615F 
 1044      656E6420 
 1044      3C206275 
 1044      66666572 
 1045 0161 202A2044 		.ascii	" * DISPLAY_BPP\000"
 1045      4953504C 
 1045      41595F42 
 1045      505000
 1046              		.section	.text.nn_thread_fct,"ax",%progbits
 1047              		.align	1
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1052              	nn_thread_fct:
 1053              	.LVL67:
 1054              	.LFB7404:
1327:Src/app.c     ****   float nn_period_filtered_ms = 0;
 1055              		.loc 1 1327 1 is_stmt 1 view -0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 152
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
1328:Src/app.c     ****   // Filtered inference times, will be updated with 0
 1059              		.loc 1 1328 3 view .LVU286
1330:Src/app.c     ****   float ld_filtered_ms = 0;
 1060              		.loc 1 1330 3 view .LVU287
1331:Src/app.c     **** 
 1061              		.loc 1 1331 3 view .LVU288
1333:Src/app.c     ****   uint32_t nn_period[2];
 1062              		.loc 1 1333 3 view .LVU289
1334:Src/app.c     ****   uint8_t *nn_pipe_dst;
 1063              		.loc 1 1334 3 view .LVU290
1335:Src/app.c     ****   int is_tracking;
 1064              		.loc 1 1335 3 view .LVU291
1336:Src/app.c     ****   uint32_t pd_ms;
 1065              		.loc 1 1336 3 view .LVU292
1337:Src/app.c     ****   uint32_t hl_ms;
 1066              		.loc 1 1337 3 view .LVU293
1338:Src/app.c     ****   int ret;
 1067              		.loc 1 1338 3 view .LVU294
1339:Src/app.c     ****   roi_t roi_dummy;
 1068              		.loc 1 1339 3 view .LVU295
1340:Src/app.c     ****   int is_landmark_valid;
 1069              		.loc 1 1340 3 view .LVU296
1341:Src/app.c     **** 
 1070              		.loc 1 1341 3 view .LVU297
1343:Src/app.c     ****   roi_dummy.cy = 100;
ARM GAS  /tmp/ccddOyyT.s 			page 62


 1071              		.loc 1 1343 3 view .LVU298
1327:Src/app.c     ****   float nn_period_filtered_ms = 0;
 1072              		.loc 1 1327 1 is_stmt 0 view .LVU299
 1073 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1074              		.cfi_def_cfa_offset 36
 1075              		.cfi_offset 4, -36
 1076              		.cfi_offset 5, -32
 1077              		.cfi_offset 6, -28
 1078              		.cfi_offset 7, -24
 1079              		.cfi_offset 8, -20
 1080              		.cfi_offset 9, -16
 1081              		.cfi_offset 10, -12
 1082              		.cfi_offset 11, -8
 1083              		.cfi_offset 14, -4
 1084 0004 2DED028B 		vpush.64	{d8}
 1085              		.cfi_def_cfa_offset 44
 1086              		.cfi_offset 80, -44
 1087              		.cfi_offset 81, -40
1343:Src/app.c     ****   roi_dummy.cy = 100;
 1088              		.loc 1 1343 16 view .LVU300
 1089 0008 C74B     		ldr	r3, .L108
1327:Src/app.c     ****   float nn_period_filtered_ms = 0;
 1090              		.loc 1 1327 1 view .LVU301
 1091 000a ABB0     		sub	sp, sp, #172
 1092              		.cfi_def_cfa_offset 216
1343:Src/app.c     ****   roi_dummy.cy = 100;
 1093              		.loc 1 1343 16 view .LVU302
 1094 000c 0793     		str	r3, [sp, #28]	@ float
1344:Src/app.c     ****   roi_dummy.w = 50;
 1095              		.loc 1 1344 3 is_stmt 1 view .LVU303
1344:Src/app.c     ****   roi_dummy.w = 50;
 1096              		.loc 1 1344 16 is_stmt 0 view .LVU304
 1097 000e 0893     		str	r3, [sp, #32]	@ float
1345:Src/app.c     ****   roi_dummy.h = 50;
 1098              		.loc 1 1345 3 is_stmt 1 view .LVU305
1345:Src/app.c     ****   roi_dummy.h = 50;
 1099              		.loc 1 1345 15 is_stmt 0 view .LVU306
 1100 0010 C64B     		ldr	r3, .L108+4
 1101 0012 0993     		str	r3, [sp, #36]	@ float
1346:Src/app.c     **** 
 1102              		.loc 1 1346 3 is_stmt 1 view .LVU307
1346:Src/app.c     **** 
 1103              		.loc 1 1346 15 is_stmt 0 view .LVU308
 1104 0014 0A93     		str	r3, [sp, #40]	@ float
1354:Src/app.c     ****   yolo_detector_init(&yolo_info);
 1105              		.loc 1 1354 3 is_stmt 1 view .LVU309
1355:Src/app.c     **** 
 1106              		.loc 1 1355 3 view .LVU310
 1107              	.LVL68:
 1108              	.LBB329:
 1109              	.LBI329:
 834:Src/app.c     **** {
 1110              		.loc 1 834 13 view .LVU311
 1111              	.LBB330:
 837:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1112              		.loc 1 837 3 view .LVU312
 837:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
ARM GAS  /tmp/ccddOyyT.s 			page 63


 1113              		.loc 1 837 46 is_stmt 0 view .LVU313
 1114 0016 FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_yolo_detector
 1115              	.LVL69:
 837:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1116              		.loc 1 837 46 view .LVU314
 1117 001a 0446     		mov	r4, r0
 1118              	.LVL70:
 838:Src/app.c     ****   int ret;
 1119              		.loc 1 838 3 is_stmt 1 view .LVU315
 838:Src/app.c     ****   int ret;
 1120              		.loc 1 838 45 is_stmt 0 view .LVU316
 1121 001c FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_yolo_detector
 1122              	.LVL71:
 839:Src/app.c     **** 
 1123              		.loc 1 839 3 is_stmt 1 view .LVU317
 842:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1124              		.loc 1 842 3 view .LVU318
 1125              	.LBB331:
 1126              	.LBI331:
 493:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 494:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf)
 495:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 496:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_end;
 497:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 498:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 499:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf)
 500:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 501:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_limit;
 502:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 503:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf)
 1127              		.loc 2 504 26 view .LVU319
 1128              	.LBB332:
 505:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 506:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->offset_end - buf->offset_start;
 1129              		.loc 2 506 5 view .LVU320
 1130              		.loc 2 506 28 is_stmt 0 view .LVU321
 1131 0020 D0E90223 		ldrd	r2, r3, [r0, #8]
 1132              	.LBE332:
 1133              	.LBE331:
 843:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1134              		.loc 1 843 40 view .LVU322
 1135 0024 2046     		mov	r0, r4
 1136              	.LVL72:
 1137              	.LBB334:
 1138              	.LBB333:
 1139              		.loc 2 506 28 view .LVU323
 1140 0026 9B1A     		subs	r3, r3, r2
 1141              	.LBE333:
 1142              	.LBE334:
 842:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1143              		.loc 1 842 19 discriminator 1 view .LVU324
 1144 0028 1C93     		str	r3, [sp, #112]
 843:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1145              		.loc 1 843 3 is_stmt 1 view .LVU325
 843:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1146              		.loc 1 843 40 is_stmt 0 view .LVU326
ARM GAS  /tmp/ccddOyyT.s 			page 64


 1147 002a FFF7FEFF 		bl	LL_Buffer_addr_start
 1148              	.LVL73:
 1149              	.LBB335:
 1150              	.LBB336:
 1151              		.loc 2 506 28 view .LVU327
 1152 002e D4E90223 		ldrd	r2, r3, [r4, #8]
 1153 0032 9B1A     		subs	r3, r3, r2
 1154              	.LBE336:
 1155              	.LBE335:
 843:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1156              		.loc 1 843 28 discriminator 1 view .LVU328
 1157 0034 1D90     		str	r0, [sp, #116]
 844:Src/app.c     **** 
 1158              		.loc 1 844 3 is_stmt 1 view .LVU329
 1159              	.LVL74:
 1160              	.LBB338:
 1161              	.LBI335:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1162              		.loc 2 504 26 view .LVU330
 1163              	.LBB337:
 1164              		.loc 2 506 5 view .LVU331
 1165              		.loc 2 506 5 is_stmt 0 view .LVU332
 1166              	.LBE337:
 1167              	.LBE338:
 844:Src/app.c     **** 
 1168              		.loc 1 844 32 discriminator 1 view .LVU333
 1169 0036 1E93     		str	r3, [sp, #120]
 847:Src/app.c     ****   info->static_param.nb_total_boxes = AI_OD_YOLOV8_PP_TOTAL_BOXES;  // Example: Standard for YOLOv8
 1170              		.loc 1 847 3 is_stmt 1 view .LVU334
 848:Src/app.c     ****   info->static_param.max_boxes_limit = 10;  // Max boxes after NMS
 1171              		.loc 1 848 37 is_stmt 0 view .LVU335
 1172 0038 0320     		movs	r0, #3
 1173 003a 40F63403 		movw	r3, #2100
 1174 003e CDE91F03 		strd	r0, r3, [sp, #124]
 849:Src/app.c     ****   info->static_param.conf_threshold = AI_PD_MODEL_PP_CONF_THRESHOLD; // Confidence threshold
 1175              		.loc 1 849 3 is_stmt 1 view .LVU336
 849:Src/app.c     ****   info->static_param.conf_threshold = AI_PD_MODEL_PP_CONF_THRESHOLD; // Confidence threshold
 1176              		.loc 1 849 38 is_stmt 0 view .LVU337
 1177 0042 0A23     		movs	r3, #10
 1178 0044 2193     		str	r3, [sp, #132]
 850:Src/app.c     ****   info->static_param.iou_threshold = AI_PD_MODEL_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 1179              		.loc 1 850 3 is_stmt 1 view .LVU338
 850:Src/app.c     ****   info->static_param.iou_threshold = AI_PD_MODEL_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 1180              		.loc 1 850 37 is_stmt 0 view .LVU339
 1181 0046 4FF07C53 		mov	r3, #1056964608
 1182 004a 2293     		str	r3, [sp, #136]	@ float
 851:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1183              		.loc 1 851 3 is_stmt 1 view .LVU340
 851:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1184              		.loc 1 851 36 is_stmt 0 view .LVU341
 1185 004c B84B     		ldr	r3, .L108+8
 858:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1186              		.loc 1 858 9 view .LVU342
 1187 004e B949     		ldr	r1, .L108+12
 851:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1188              		.loc 1 851 36 view .LVU343
 1189 0050 2393     		str	r3, [sp, #140]	@ float
ARM GAS  /tmp/ccddOyyT.s 			page 65


 853:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 1190              		.loc 1 853 3 is_stmt 1 view .LVU344
 853:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 1191              		.loc 1 853 39 is_stmt 0 view .LVU345
 1192 0052 4FF07E53 		mov	r3, #1065353216
 1193 0056 2493     		str	r3, [sp, #144]	@ float
 854:Src/app.c     **** 
 1194              		.loc 1 854 3 is_stmt 1 view .LVU346
 854:Src/app.c     **** 
 1195              		.loc 1 854 44 is_stmt 0 view .LVU347
 1196 0058 0023     		movs	r3, #0
 858:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1197              		.loc 1 858 9 view .LVU348
 1198 005a 1FA8     		add	r0, sp, #124
 854:Src/app.c     **** 
 1199              		.loc 1 854 44 view .LVU349
 1200 005c 8DF89430 		strb	r3, [sp, #148]
 858:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1201              		.loc 1 858 3 is_stmt 1 view .LVU350
 858:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1202              		.loc 1 858 9 is_stmt 0 view .LVU351
 1203 0060 FFF7FEFF 		bl	app_postprocess_init
 1204              	.LVL75:
 859:Src/app.c     **** }
 1205              		.loc 1 859 3 is_stmt 1 view .LVU352
 1206 0064 8246     		mov	r10, r0
 1207 0066 30B1     		cbz	r0, .L58
 859:Src/app.c     **** }
 1208              		.loc 1 859 3 is_stmt 0 discriminator 1 view .LVU353
 1209 0068 40F25B31 		movw	r1, #859
 1210 006c B24B     		ldr	r3, .L108+16
 1211 006e B34A     		ldr	r2, .L108+20
 1212              	.LVL76:
 1213              	.L107:
 859:Src/app.c     **** }
 1214              		.loc 1 859 3 discriminator 1 view .LVU354
 1215              	.LBE330:
 1216              	.LBE329:
 1217              	.LBB339:
 1218              	.LBB340:
 904:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1219              		.loc 1 904 3 discriminator 1 view .LVU355
 1220 0070 B348     		ldr	r0, .L108+24
 1221 0072 FFF7FEFF 		bl	__assert_func
 1222              	.LVL77:
 1223              	.L58:
 904:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1224              		.loc 1 904 3 discriminator 1 view .LVU356
 1225              	.LBE340:
 1226              	.LBE339:
1357:Src/app.c     ****   face_landmark_init(&face_info);
 1227              		.loc 1 1357 3 is_stmt 1 view .LVU357
1358:Src/app.c     **** 
 1228              		.loc 1 1358 3 view .LVU358
 1229              	.LBB357:
 1230              	.LBI339:
 895:Src/app.c     **** {
ARM GAS  /tmp/ccddOyyT.s 			page 66


 1231              		.loc 1 895 13 view .LVU359
 1232              	.LBB355:
 897:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 1233              		.loc 1 897 3 view .LVU360
 897:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 1234              		.loc 1 897 46 is_stmt 0 view .LVU361
 1235 0076 FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_face_landmark
 1236              	.LVL78:
 1237 007a 0546     		mov	r5, r0
 1238              	.LVL79:
 898:Src/app.c     **** 
 1239              		.loc 1 898 3 is_stmt 1 view .LVU362
 898:Src/app.c     **** 
 1240              		.loc 1 898 45 is_stmt 0 view .LVU363
 1241 007c FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_face_landmark
 1242              	.LVL80:
 898:Src/app.c     **** 
 1243              		.loc 1 898 45 view .LVU364
 1244 0080 0146     		mov	r1, r0
 1245              	.LVL81:
 900:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1246              		.loc 1 900 3 is_stmt 1 view .LVU365
 900:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1247              		.loc 1 900 17 is_stmt 0 view .LVU366
 1248 0082 FFF7FEFF 		bl	LL_Buffer_addr_start
 1249              	.LVL82:
 1250              	.LBB341:
 1251              	.LBB342:
 1252              		.loc 2 506 33 view .LVU367
 1253 0086 D1E9027B 		ldrd	r7, fp, [r1, #8]
 1254              	.LBE342:
 1255              	.LBE341:
 900:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1256              		.loc 1 900 17 view .LVU368
 1257 008a 0446     		mov	r4, r0
 1258              	.LVL83:
 901:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1259              		.loc 1 901 3 is_stmt 1 view .LVU369
 1260              	.LBB345:
 1261              	.LBI341:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1262              		.loc 2 504 26 view .LVU370
 1263              	.LBB343:
 1264              		.loc 2 506 5 view .LVU371
 1265              		.loc 2 506 5 is_stmt 0 view .LVU372
 1266              	.LBE343:
 1267              	.LBE345:
 902:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1268              		.loc 1 902 3 is_stmt 1 view .LVU373
 902:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1269              		.loc 1 902 30 is_stmt 0 view .LVU374
 1270 008c 2846     		mov	r0, r5
 1271              	.LVL84:
 902:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1272              		.loc 1 902 30 view .LVU375
 1273 008e FFF7FEFF 		bl	LL_Buffer_addr_start
 1274              	.LVL85:
ARM GAS  /tmp/ccddOyyT.s 			page 67


 1275              	.LBB346:
 1276              	.LBB347:
 1277              		.loc 2 506 28 view .LVU376
 1278 0092 D5E90223 		ldrd	r2, r3, [r5, #8]
 1279 0096 9B1A     		subs	r3, r3, r2
 1280              	.LBE347:
 1281              	.LBE346:
 904:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1282              		.loc 1 904 3 view .LVU377
 1283 0098 042B     		cmp	r3, #4
 902:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1284              		.loc 1 902 30 view .LVU378
 1285 009a 8046     		mov	r8, r0
 1286              	.LVL86:
 903:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
 1287              		.loc 1 903 3 is_stmt 1 view .LVU379
 1288              	.LBB349:
 1289              	.LBI346:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1290              		.loc 2 504 26 view .LVU380
 1291              	.LBB348:
 1292              		.loc 2 506 5 view .LVU381
 1293              		.loc 2 506 5 is_stmt 0 view .LVU382
 1294              	.LBE348:
 1295              	.LBE349:
 904:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1296              		.loc 1 904 3 is_stmt 1 view .LVU383
 1297 009c 04D0     		beq	.L59
 904:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1298              		.loc 1 904 3 is_stmt 0 discriminator 1 view .LVU384
 1299 009e 4FF46271 		mov	r1, #904
 1300              	.LVL87:
 904:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1301              		.loc 1 904 3 discriminator 1 view .LVU385
 1302 00a2 A84B     		ldr	r3, .L108+28
 1303              	.LVL88:
 904:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1304              		.loc 1 904 3 discriminator 1 view .LVU386
 1305 00a4 A84A     		ldr	r2, .L108+32
 1306              	.LVL89:
 904:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1307              		.loc 1 904 3 discriminator 1 view .LVU387
 1308 00a6 E3E7     		b	.L107
 1309              	.LVL90:
 1310              	.L59:
 905:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1311              		.loc 1 905 3 is_stmt 1 view .LVU388
 905:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1312              		.loc 1 905 35 is_stmt 0 view .LVU389
 1313 00a8 05F13800 		add	r0, r5, #56
 1314              	.LVL91:
 905:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1315              		.loc 1 905 35 view .LVU390
 1316 00ac FFF7FEFF 		bl	LL_Buffer_addr_start
 1317              	.LVL92:
 1318              	.LBB350:
 1319              	.LBB351:
ARM GAS  /tmp/ccddOyyT.s 			page 68


 1320              		.loc 2 506 28 view .LVU391
 1321 00b0 D5E91023 		ldrd	r2, r3, [r5, #64]
 1322              	.LBE351:
 1323              	.LBE350:
 907:Src/app.c     **** }
 1324              		.loc 1 907 3 view .LVU392
 1325 00b4 A3F5AF53 		sub	r3, r3, #5600
 1326 00b8 103B     		subs	r3, r3, #16
 1327 00ba 9342     		cmp	r3, r2
 905:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1328              		.loc 1 905 35 view .LVU393
 1329 00bc 8146     		mov	r9, r0
 1330              	.LVL93:
 906:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 1404);
 1331              		.loc 1 906 3 is_stmt 1 view .LVU394
 1332              	.LBB353:
 1333              	.LBI350:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1334              		.loc 2 504 26 view .LVU395
 1335              	.LBB352:
 1336              		.loc 2 506 5 view .LVU396
 1337              		.loc 2 506 5 is_stmt 0 view .LVU397
 1338              	.LBE352:
 1339              	.LBE353:
 907:Src/app.c     **** }
 1340              		.loc 1 907 3 is_stmt 1 view .LVU398
 1341 00be 04D0     		beq	.L60
 907:Src/app.c     **** }
 1342              		.loc 1 907 3 is_stmt 0 discriminator 1 view .LVU399
 1343 00c0 40F28B31 		movw	r1, #907
 1344              	.LVL94:
 907:Src/app.c     **** }
 1345              		.loc 1 907 3 discriminator 1 view .LVU400
 1346 00c4 A14B     		ldr	r3, .L108+36
 1347 00c6 A04A     		ldr	r2, .L108+32
 1348              	.LVL95:
 907:Src/app.c     **** }
 1349              		.loc 1 907 3 discriminator 1 view .LVU401
 1350 00c8 D2E7     		b	.L107
 1351              	.LVL96:
 1352              	.L60:
 907:Src/app.c     **** }
 1353              		.loc 1 907 3 discriminator 1 view .LVU402
 1354              	.LBE355:
 1355              	.LBE357:
1360:Src/app.c     **** 
 1356              		.loc 1 1360 3 is_stmt 1 view .LVU403
1363:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1357              		.loc 1 1363 3 view .LVU404
1363:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1358              		.loc 1 1363 18 is_stmt 0 view .LVU405
 1359 00ca FFF7FEFF 		bl	HAL_GetTick
 1360              	.LVL97:
 1361              	.LBB358:
 1362              	.LBB359:
 504:Src/app.c     ****   if (ret == pdFALSE)
 1363              		.loc 1 504 9 view .LVU406
ARM GAS  /tmp/ccddOyyT.s 			page 69


 1364 00ce A04D     		ldr	r5, .L108+40
 1365              	.LBE359:
 1366              	.LBE358:
1363:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1367              		.loc 1 1363 18 view .LVU407
 1368 00d0 0646     		mov	r6, r0
 1369              	.LVL98:
1364:Src/app.c     ****   assert(nn_pipe_dst);
 1370              		.loc 1 1364 3 is_stmt 1 view .LVU408
 1371              	.LBB362:
 1372              	.LBI358:
 499:Src/app.c     **** {
 1373              		.loc 1 499 17 view .LVU409
 1374              	.LBB360:
 501:Src/app.c     ****   int ret;
 1375              		.loc 1 501 3 view .LVU410
 502:Src/app.c     **** 
 1376              		.loc 1 502 3 view .LVU411
 504:Src/app.c     ****   if (ret == pdFALSE)
 1377              		.loc 1 504 3 view .LVU412
 504:Src/app.c     ****   if (ret == pdFALSE)
 1378              		.loc 1 504 9 is_stmt 0 discriminator 4 view .LVU413
 1379 00d2 5146     		mov	r1, r10
 1380 00d4 2868     		ldr	r0, [r5]
 1381              	.LVL99:
 504:Src/app.c     ****   if (ret == pdFALSE)
 1382              		.loc 1 504 9 discriminator 4 view .LVU414
 1383 00d6 FFF7FEFF 		bl	xQueueSemaphoreTake
 1384              	.LVL100:
 505:Src/app.c     ****     return NULL;
 1385              		.loc 1 505 3 is_stmt 1 view .LVU415
 505:Src/app.c     ****     return NULL;
 1386              		.loc 1 505 6 is_stmt 0 view .LVU416
 1387 00da 20B9     		cbnz	r0, .L61
 1388              	.LVL101:
 1389              	.L62:
 505:Src/app.c     ****     return NULL;
 1390              		.loc 1 505 6 view .LVU417
 1391              	.LBE360:
 1392              	.LBE362:
1365:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1393              		.loc 1 1365 3 discriminator 1 view .LVU418
 1394 00dc 40F25551 		movw	r1, #1365
 1395 00e0 9C4B     		ldr	r3, .L108+44
 1396 00e2 9D4A     		ldr	r2, .L108+48
 1397 00e4 C4E7     		b	.L107
 1398              	.LVL102:
 1399              	.L61:
 1400              	.LBB363:
 1401              	.LBB361:
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1402              		.loc 1 508 3 is_stmt 1 view .LVU419
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1403              		.loc 1 508 23 is_stmt 0 view .LVU420
 1404 00e6 D5F8B430 		ldr	r3, [r5, #180]
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1405              		.loc 1 508 7 view .LVU421
ARM GAS  /tmp/ccddOyyT.s 			page 70


 1406 00ea 05EB8302 		add	r2, r5, r3, lsl #2
 1407 00ee D2F8AC00 		ldr	r0, [r2, #172]
 1408              	.LVL103:
 509:Src/app.c     **** 
 1409              		.loc 1 509 3 is_stmt 1 view .LVU422
 509:Src/app.c     **** 
 1410              		.loc 1 509 37 is_stmt 0 view .LVU423
 1411 00f2 D5F8A820 		ldr	r2, [r5, #168]
 509:Src/app.c     **** 
 1412              		.loc 1 509 32 view .LVU424
 1413 00f6 0133     		adds	r3, r3, #1
 509:Src/app.c     **** 
 1414              		.loc 1 509 37 view .LVU425
 1415 00f8 93FBF2F1 		sdiv	r1, r3, r2
 1416 00fc 02FB1133 		mls	r3, r2, r1, r3
 509:Src/app.c     **** 
 1417              		.loc 1 509 16 view .LVU426
 1418 0100 C5F8B430 		str	r3, [r5, #180]
 511:Src/app.c     **** }
 1419              		.loc 1 511 3 is_stmt 1 view .LVU427
 1420              	.LVL104:
 511:Src/app.c     **** }
 1421              		.loc 1 511 3 is_stmt 0 view .LVU428
 1422              	.LBE361:
 1423              	.LBE363:
1365:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1424              		.loc 1 1365 3 is_stmt 1 view .LVU429
 1425 0104 0028     		cmp	r0, #0
 1426 0106 E9D0     		beq	.L62
1328:Src/app.c     ****   // Filtered inference times, will be updated with 0
 1427              		.loc 1 1328 9 is_stmt 0 view .LVU430
 1428 0108 9FED948A 		vldr.32	s16, .L108+52
1366:Src/app.c     ****   while (1)
 1429              		.loc 1 1366 3 view .LVU431
 1430 010c 5146     		mov	r1, r10
 1431 010e FFF7FEFF 		bl	CAM_NNPipe_Start
 1432              	.LVL105:
 1433              	.LBB364:
 1434              	.LBB356:
 1435              	.LBB354:
 1436              	.LBB344:
 1437              		.loc 2 506 28 view .LVU432
 1438 0112 ABEB0707 		sub	r7, fp, r7
 1439              	.LVL106:
 1440              		.loc 2 506 28 view .LVU433
 1441              	.LBE344:
 1442              	.LBE354:
 1443              	.LBE356:
 1444              	.LBE364:
1366:Src/app.c     ****   while (1)
 1445              		.loc 1 1366 3 is_stmt 1 view .LVU434
 1446              	.LBB365:
 1447              	.LBB366:
 1448              	.LBB367:
 1449              	.LBB368:
 1450              	.LBB369:
 1451              	.LBB370:
ARM GAS  /tmp/ccddOyyT.s 			page 71


 1452              		.file 3 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /******************************************************************************
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @file     cachel1_armv7.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @brief    CMSIS Level 1 Cache API for Armv7-M and later
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @version  V1.0.3
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @date     17. March 2023
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Copyright (c) 2020-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #if   defined ( __ICCARM__ )
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #elif defined (__clang__)
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma clang system_header    /* treat file as system include file */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef ARM_CACHEL1_ARMV7_H
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define ARM_CACHEL1_ARMV7_H
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \ingroup  CMSIS_Core_FunctionInterface
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief    Functions that configure Instruction and Data cache.
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   @{
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /* Cache Size ID Register Macros */
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_DCACHE_LINE_SIZE
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_ICACHE_LINE_SIZE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable I-Cache
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on I-Cache
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
ARM GAS  /tmp/ccddOyyT.s 			page 72


  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable I-Cache
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off I-Cache
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate I-Cache
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   I-Cache Invalidate by address
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache for the given address.
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   isize   size of memory block (in number of bytes)
ARM GAS  /tmp/ccddOyyT.s 			page 73


 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (volatile void *addr, int32_t isize)
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( isize > 0 ) {
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable D-Cache
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on D-Cache
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/ccddOyyT.s 			page 74


 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable D-Cache
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off D-Cache
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     struct {
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } locals
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if ((defined(__GNUC__) || defined(__clang__)) && !defined(__OPTIMIZE__))
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        __ALIGNED(__SCB_DCACHE_LINE_SIZE)
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ;
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if !defined(__OPTIMIZE__)
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /*
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * For the endless loop issue with no optimization builds.
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * More details, see https://github.com/ARM-software/CMSIS_5/issues/620
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * The issue only happens when local variables are in stack. If
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables are saved in general purpose register, then the function
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * is OK.
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * When local variables are in stack, after disabling the cache, flush the
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables cache line for data consistency.
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        */
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /* Clean and invalidate the local variable cache. */
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if defined(__ICCARM__)
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     /* As we can't align the stack to the cache line size, invalidate each of the variables */
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.sets;
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ways;
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ccsidr;
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals;
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.ccsidr = SCB->CCSIDR;
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.sets = (uint32_t)(CCSIDR_SETS(locals.ccsidr));
ARM GAS  /tmp/ccddOyyT.s 			page 75


 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       locals.ways = (uint32_t)(CCSIDR_WAYS(locals.ccsidr));
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((locals.sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((locals.ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (locals.ways-- != 0U);
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(locals.sets-- != 0U);
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate D-Cache
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean D-Cache
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
ARM GAS  /tmp/ccddOyyT.s 			page 76


 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean D-Cache */
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean & Invalidate D-Cache
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and Invalidates D-Cache
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
ARM GAS  /tmp/ccddOyyT.s 			page 77


 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Invalidate by address
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache for the given address.
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean by address
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache for the given address
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned starting from a 32 byte aligned address in 32 byte granularity.
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned.
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (volatile void *addr, int32_t dsize)
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
ARM GAS  /tmp/ccddOyyT.s 			page 78


 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean and Invalidate by address
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and invalidates D_Cache for the given address
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned and invalidated starting from a 32 byte aligned address in 32 byte gr
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned and inval
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1453              		.loc 3 422 52 is_stmt 0 view .LVU435
 1454 0116 04F01F03 		and	r3, r4, #31
 1455              		.loc 3 422 32 view .LVU436
 1456 011a 3B44     		add	r3, r3, r7
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1457              		.loc 3 431 25 discriminator 1 view .LVU437
 1458 011c E318     		adds	r3, r4, r3
 1459 011e 0593     		str	r3, [sp, #20]
 1460              	.LVL107:
 1461              	.L89:
 1462              		.loc 3 431 25 discriminator 1 view .LVU438
 1463              	.LBE370:
 1464              	.LBE369:
 1465              	.LBE368:
 1466              	.LBE367:
 1467              	.LBE366:
 1468              	.LBE365:
1367:Src/app.c     ****   {
 1469              		.loc 1 1367 3 is_stmt 1 view .LVU439
 1470              	.LBB434:
1369:Src/app.c     ****     memset(&yolo_info.yolo_out, 0, sizeof(yolo_info.yolo_out));
 1471              		.loc 1 1369 5 view .LVU440
1370:Src/app.c     ****     // Standard frame timing
 1472              		.loc 1 1370 5 view .LVU441
 1473 0120 0023     		movs	r3, #0
ARM GAS  /tmp/ccddOyyT.s 			page 79


 1474 0122 CDE92833 		strd	r3, r3, [sp, #160]
1372:Src/app.c     ****     nn_period[1] = HAL_GetTick();
 1475              		.loc 1 1372 5 view .LVU442
 1476              	.LVL108:
1373:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1477              		.loc 1 1373 5 view .LVU443
1373:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1478              		.loc 1 1373 20 is_stmt 0 view .LVU444
 1479 0126 FFF7FEFF 		bl	HAL_GetTick
 1480              	.LVL109:
1374:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1481              		.loc 1 1374 18 view .LVU445
 1482 012a 831B     		subs	r3, r0, r6
 1483 012c 07EE903A 		vmov	s15, r3	@ int
1375:Src/app.c     **** 
 1484              		.loc 1 1375 75 view .LVU446
 1485 0130 B2EE0E7A 		vmov.f32	s14, #1.5e+1
 1486 0134 F8EE677A 		vcvt.f32.u32	s15, s15
 1487 0138 E8EE077A 		vfma.f32	s15, s16, s14
1375:Src/app.c     **** 
 1488              		.loc 1 1375 27 view .LVU447
 1489 013c 9FED888A 		vldr.32	s16, .L108+56
 1490              	.LVL110:
1373:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1491              		.loc 1 1373 20 view .LVU448
 1492 0140 8346     		mov	fp, r0
 1493              	.LVL111:
1374:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1494              		.loc 1 1374 5 is_stmt 1 view .LVU449
1375:Src/app.c     **** 
 1495              		.loc 1 1375 5 view .LVU450
 1496              	.LBB404:
 1497              	.LBB405:
 527:Src/app.c     ****   assert(ret == pdTRUE);
 1498              		.loc 1 527 9 is_stmt 0 view .LVU451
 1499 0142 4FF0FF31 		mov	r1, #-1
 1500 0146 686D     		ldr	r0, [r5, #84]
 1501              	.LVL112:
 527:Src/app.c     ****   assert(ret == pdTRUE);
 1502              		.loc 1 527 9 view .LVU452
 1503              	.LBE405:
 1504              	.LBE404:
1375:Src/app.c     **** 
 1505              		.loc 1 1375 27 view .LVU453
 1506 0148 27EE888A 		vmul.f32	s16, s15, s16
 1507              	.LVL113:
1378:Src/app.c     ****     assert(capture_buffer);
 1508              		.loc 1 1378 5 is_stmt 1 view .LVU454
 1509              	.LBB407:
 1510              	.LBI404:
 522:Src/app.c     **** {
 1511              		.loc 1 522 17 view .LVU455
 1512              	.LBB406:
 524:Src/app.c     ****   int ret;
 1513              		.loc 1 524 3 view .LVU456
 525:Src/app.c     **** 
 1514              		.loc 1 525 3 view .LVU457
ARM GAS  /tmp/ccddOyyT.s 			page 80


 527:Src/app.c     ****   assert(ret == pdTRUE);
 1515              		.loc 1 527 3 view .LVU458
 527:Src/app.c     ****   assert(ret == pdTRUE);
 1516              		.loc 1 527 9 is_stmt 0 view .LVU459
 1517 014c FFF7FEFF 		bl	xQueueSemaphoreTake
 1518              	.LVL114:
 528:Src/app.c     **** 
 1519              		.loc 1 528 3 is_stmt 1 view .LVU460
 1520 0150 0128     		cmp	r0, #1
 1521 0152 04D0     		beq	.L63
 528:Src/app.c     **** 
 1522              		.loc 1 528 3 is_stmt 0 discriminator 1 view .LVU461
 1523 0154 4FF40471 		mov	r1, #528
 1524 0158 824B     		ldr	r3, .L108+60
 1525 015a 834A     		ldr	r2, .L108+64
 1526 015c 88E7     		b	.L107
 1527              	.L63:
 530:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1528              		.loc 1 530 3 is_stmt 1 view .LVU462
 530:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1529              		.loc 1 530 23 is_stmt 0 view .LVU463
 1530 015e D5F8B830 		ldr	r3, [r5, #184]
 530:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1531              		.loc 1 530 7 view .LVU464
 1532 0162 05EB8302 		add	r2, r5, r3, lsl #2
 1533 0166 D2F8AC60 		ldr	r6, [r2, #172]
 1534              	.LVL115:
 531:Src/app.c     **** 
 1535              		.loc 1 531 3 is_stmt 1 view .LVU465
 531:Src/app.c     **** 
 1536              		.loc 1 531 39 is_stmt 0 view .LVU466
 1537 016a D5F8A820 		ldr	r2, [r5, #168]
 531:Src/app.c     **** 
 1538              		.loc 1 531 34 view .LVU467
 1539 016e 0133     		adds	r3, r3, #1
 531:Src/app.c     **** 
 1540              		.loc 1 531 39 view .LVU468
 1541 0170 93FBF2F1 		sdiv	r1, r3, r2
 1542 0174 02FB1133 		mls	r3, r2, r1, r3
 531:Src/app.c     **** 
 1543              		.loc 1 531 17 view .LVU469
 1544 0178 C5F8B830 		str	r3, [r5, #184]
 533:Src/app.c     **** }
 1545              		.loc 1 533 3 is_stmt 1 view .LVU470
 1546              	.LVL116:
 533:Src/app.c     **** }
 1547              		.loc 1 533 3 is_stmt 0 view .LVU471
 1548              	.LBE406:
 1549              	.LBE407:
1379:Src/app.c     **** 
 1550              		.loc 1 1379 5 is_stmt 1 view .LVU472
 1551 017c 26B9     		cbnz	r6, .L64
1379:Src/app.c     **** 
 1552              		.loc 1 1379 5 is_stmt 0 discriminator 1 view .LVU473
 1553 017e 40F26351 		movw	r1, #1379
 1554 0182 7A4B     		ldr	r3, .L108+68
 1555 0184 744A     		ldr	r2, .L108+48
ARM GAS  /tmp/ccddOyyT.s 			page 81


 1556 0186 73E7     		b	.L107
 1557              	.L64:
1381:Src/app.c     ****     /**************************************************************************
 1558              		.loc 1 1381 5 is_stmt 1 view .LVU474
 1559              	.LVL117:
 1560              	.LBB408:
 1561              	.LBI408:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 1562              		.loc 3 358 27 view .LVU475
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1563              		.loc 3 361 5 view .LVU476
 1564              	.LBB409:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1565              		.loc 3 362 8 view .LVU477
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1566              		.loc 3 362 52 is_stmt 0 view .LVU478
 1567 0188 06F01F0E 		and	lr, r6, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1568              		.loc 3 362 36 view .LVU479
 1569 018c 3346     		mov	r3, r6
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1570              		.loc 3 362 32 view .LVU480
 1571 018e 0EF5962E 		add	lr, lr, #307200
 1572              	.LVL118:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1573              		.loc 3 363 7 is_stmt 1 view .LVU481
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1574              		.loc 3 365 7 view .LVU482
 1575              	.LBB410:
 1576              	.LBI410:
 1577              		.file 4 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  /tmp/ccddOyyT.s 			page 82


  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccddOyyT.s 			page 83


  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccddOyyT.s 			page 84


 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccddOyyT.s 			page 85


 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
ARM GAS  /tmp/ccddOyyT.s 			page 86


 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1578              		.loc 4 269 27 view .LVU483
 1579              	.LBB411:
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1580              		.loc 4 271 3 view .LVU484
 1581              		.syntax unified
 1582              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1583 0192 BFF34F8F 		dsb 0xF
 1584              	@ 0 "" 2
 1585              		.thumb
 1586              		.syntax unified
 1587              	.LBE411:
 1588              	.LBE410:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1589              		.loc 3 368 22 is_stmt 0 view .LVU485
 1590 0196 0EF1FF3E 		add	lr, lr, #-1
 1591              	.LVL119:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1592              		.loc 3 368 22 view .LVU486
 1593 019a 4FEA5E1E 		lsr	lr, lr, #5
 1594              	.LVL120:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1595              		.loc 3 368 22 view .LVU487
 1596 019e 0EF1010E 		add	lr, lr, #1
 1597 01a2 4EF001E0 		dls	lr, lr
 1598 01a6 724A     		ldr	r2, .L108+72
 1599              	.LVL121:
 1600              	.L65:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1601              		.loc 3 367 7 is_stmt 1 view .LVU488
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1602              		.loc 3 368 9 view .LVU489
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1603              		.loc 3 368 22 is_stmt 0 view .LVU490
 1604 01a8 C2F85C32 		str	r3, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1605              		.loc 3 369 9 is_stmt 1 view .LVU491
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1606              		.loc 3 369 17 is_stmt 0 view .LVU492
 1607 01ac 2033     		adds	r3, r3, #32
 1608              	.LVL122:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
ARM GAS  /tmp/ccddOyyT.s 			page 87


 1609              		.loc 3 370 9 is_stmt 1 view .LVU493
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1610              		.loc 3 371 25 discriminator 1 view .LVU494
 1611 01ae 0FF005C8 		le	lr, .L65
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 1612              		.loc 3 373 7 view .LVU495
 1613              	.LBB412:
 1614              	.LBI412:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1615              		.loc 4 269 27 view .LVU496
 1616              	.LBB413:
 1617              		.loc 4 271 3 view .LVU497
 1618              		.syntax unified
 1619              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1620 01b2 BFF34F8F 		dsb 0xF
 1621              	@ 0 "" 2
 1622              		.thumb
 1623              		.syntax unified
 1624              	.LBE413:
 1625              	.LBE412:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 1626              		.loc 3 374 7 view .LVU498
 1627              	.LBB414:
 1628              	.LBI414:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1629              		.loc 4 258 27 view .LVU499
 1630              	.LBB415:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1631              		.loc 4 260 3 view .LVU500
 1632              		.syntax unified
 1633              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1634 01b6 BFF36F8F 		isb 0xF
 1635              	@ 0 "" 2
 1636              	.LVL123:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1637              		.loc 4 260 3 is_stmt 0 view .LVU501
 1638              		.thumb
 1639              		.syntax unified
 1640              	.LBE415:
 1641              	.LBE414:
 1642              	.LBE409:
 1643              	.LBE408:
1385:Src/app.c     ****     hl_ms = HAL_GetTick();
 1644              		.loc 1 1385 5 is_stmt 1 view .LVU502
 1645              	.LBB416:
 1646              	.LBI416:
 862:Src/app.c     **** {
 1647              		.loc 1 862 12 view .LVU503
 1648              	.LBB417:
 864:Src/app.c     ****   int detection_nb;
 1649              		.loc 1 864 3 view .LVU504
 865:Src/app.c     ****   int ret;
 1650              		.loc 1 865 3 view .LVU505
 866:Src/app.c     ****   int i;
 1651              		.loc 1 866 3 view .LVU506
 867:Src/app.c     **** 
 1652              		.loc 1 867 3 view .LVU507
ARM GAS  /tmp/ccddOyyT.s 			page 88


 869:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1653              		.loc 1 869 3 view .LVU508
 869:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1654              		.loc 1 869 14 is_stmt 0 view .LVU509
 1655 01ba FFF7FEFF 		bl	HAL_GetTick
 1656              	.LVL124:
 871:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1657              		.loc 1 871 3 is_stmt 1 view .LVU510
 871:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1658              		.loc 1 871 9 is_stmt 0 view .LVU511
 1659 01be 3146     		mov	r1, r6
 1660 01c0 0020     		movs	r0, #0
 1661 01c2 1C9A     		ldr	r2, [sp, #112]
 1662 01c4 FFF7FEFF 		bl	LL_ATON_Set_User_Input_Buffer_yolo_detector
 1663              	.LVL125:
 872:Src/app.c     **** 
 1664              		.loc 1 872 3 is_stmt 1 view .LVU512
 1665 01c8 20B1     		cbz	r0, .L66
 872:Src/app.c     **** 
 1666              		.loc 1 872 3 is_stmt 0 discriminator 1 view .LVU513
 1667 01ca 4FF45A71 		mov	r1, #872
 1668 01ce 694B     		ldr	r3, .L108+76
 1669 01d0 694A     		ldr	r2, .L108+80
 1670 01d2 4DE7     		b	.L107
 1671              	.L66:
 874:Src/app.c     **** 
 1672              		.loc 1 874 3 is_stmt 1 view .LVU514
 1673 01d4 5748     		ldr	r0, .L108+12
 1674              	.LVL126:
 874:Src/app.c     **** 
 1675              		.loc 1 874 3 is_stmt 0 view .LVU515
 1676 01d6 FFF7FEFF 		bl	LL_ATON_RT_Main
 1677              	.LVL127:
 877:Src/app.c     **** 
 1678              		.loc 1 877 3 is_stmt 1 view .LVU516
 877:Src/app.c     **** 
 1679              		.loc 1 877 40 is_stmt 0 view .LVU517
 1680 01da 1D9B     		ldr	r3, [sp, #116]
 877:Src/app.c     **** 
 1681              		.loc 1 877 9 view .LVU518
 1682 01dc 28AA     		add	r2, sp, #160
 877:Src/app.c     **** 
 1683              		.loc 1 877 40 view .LVU519
 1684 01de 1493     		str	r3, [sp, #80]
 877:Src/app.c     **** 
 1685              		.loc 1 877 9 view .LVU520
 1686 01e0 0121     		movs	r1, #1
 1687 01e2 1FAB     		add	r3, sp, #124
 1688 01e4 14A8     		add	r0, sp, #80
 1689 01e6 FFF7FEFF 		bl	app_postprocess_run
 1690              	.LVL128:
 880:Src/app.c     **** 
 1691              		.loc 1 880 3 is_stmt 1 view .LVU521
 883:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 1692              		.loc 1 883 3 view .LVU522
 883:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 1693              		.loc 1 883 17 discriminator 1 view .LVU523
ARM GAS  /tmp/ccddOyyT.s 			page 89


 888:Src/app.c     **** 
 1694              		.loc 1 888 3 view .LVU524
 888:Src/app.c     **** 
 1695              		.loc 1 888 3 view .LVU525
 888:Src/app.c     **** 
 1696              		.loc 1 888 3 discriminator 1 view .LVU526
 1697 01ea 1E9A     		ldr	r2, [sp, #120]
 1698              	.LVL129:
 1699              	.LBB418:
 1700              	.LBI418:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 1701              		.loc 3 358 27 view .LVU527
 1702              	.LBB419:
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1703              		.loc 3 361 5 view .LVU528
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1704              		.loc 3 361 8 is_stmt 0 view .LVU529
 1705 01ec 002A     		cmp	r2, #0
 1706 01ee 1DDD     		ble	.L67
 1707              	.LBB420:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1708              		.loc 3 362 8 is_stmt 1 view .LVU530
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1709              		.loc 3 362 36 is_stmt 0 view .LVU531
 1710 01f0 1D9B     		ldr	r3, [sp, #116]
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1711              		.loc 3 362 52 view .LVU532
 1712 01f2 03F01F00 		and	r0, r3, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1713              		.loc 3 362 32 view .LVU533
 1714 01f6 1044     		add	r0, r0, r2
 1715              	.LVL130:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1716              		.loc 3 363 7 is_stmt 1 view .LVU534
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1717              		.loc 3 365 7 view .LVU535
 1718              	.LBB421:
 1719              	.LBI421:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1720              		.loc 4 269 27 view .LVU536
 1721              	.LBB422:
 1722              		.loc 4 271 3 view .LVU537
 1723              		.syntax unified
 1724              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1725 01f8 BFF34F8F 		dsb 0xF
 1726              	@ 0 "" 2
 1727              		.thumb
 1728              		.syntax unified
 1729              	.LBE422:
 1730              	.LBE421:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1731              		.loc 3 371 25 is_stmt 0 discriminator 1 view .LVU538
 1732 01fc DA43     		mvns	r2, r3
 1733              	.LVL131:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1734              		.loc 3 371 25 discriminator 1 view .LVU539
 1735 01fe 03EB000C 		add	ip, r3, r0
ARM GAS  /tmp/ccddOyyT.s 			page 90


 1736 0202 6244     		add	r2, r2, ip
 1737 0204 2038     		subs	r0, r0, #32
 1738              	.LVL132:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1739              		.loc 3 371 25 discriminator 1 view .LVU540
 1740 0206 5209     		lsrs	r2, r2, #5
 1741 0208 2030     		adds	r0, r0, #32
 1742              	.LVL133:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1743              		.loc 3 371 25 discriminator 1 view .LVU541
 1744 020a 02F1010E 		add	lr, r2, #1
 1745 020e D8BF     		it	le
 1746 0210 4FF0010E 		movle	lr, #1
 1747 0214 4EF001E0 		dls	lr, lr
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1748              		.loc 3 368 22 view .LVU542
 1749 0218 5549     		ldr	r1, .L108+72
 1750              	.LVL134:
 1751              	.L68:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1752              		.loc 3 367 7 is_stmt 1 view .LVU543
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1753              		.loc 3 368 9 view .LVU544
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1754              		.loc 3 368 22 is_stmt 0 view .LVU545
 1755 021a C1F85C32 		str	r3, [r1, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1756              		.loc 3 369 9 is_stmt 1 view .LVU546
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1757              		.loc 3 369 17 is_stmt 0 view .LVU547
 1758 021e 2033     		adds	r3, r3, #32
 1759              	.LVL135:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1760              		.loc 3 370 9 is_stmt 1 view .LVU548
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1761              		.loc 3 371 25 discriminator 1 view .LVU549
 1762 0220 0FF005C8 		le	lr, .L68
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 1763              		.loc 3 373 7 view .LVU550
 1764              	.LBB423:
 1765              	.LBI423:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1766              		.loc 4 269 27 view .LVU551
 1767              	.LBB424:
 1768              		.loc 4 271 3 view .LVU552
 1769              		.syntax unified
 1770              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1771 0224 BFF34F8F 		dsb 0xF
 1772              	@ 0 "" 2
 1773              		.thumb
 1774              		.syntax unified
 1775              	.LBE424:
 1776              	.LBE423:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 1777              		.loc 3 374 7 view .LVU553
 1778              	.LBB425:
 1779              	.LBI425:
ARM GAS  /tmp/ccddOyyT.s 			page 91


 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1780              		.loc 4 258 27 view .LVU554
 1781              	.LBB426:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1782              		.loc 4 260 3 view .LVU555
 1783              		.syntax unified
 1784              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1785 0228 BFF36F8F 		isb 0xF
 1786              	@ 0 "" 2
 1787              	.LVL136:
 1788              		.thumb
 1789              		.syntax unified
 1790              	.L67:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1791              		.loc 4 260 3 is_stmt 0 view .LVU556
 1792              	.LBE426:
 1793              	.LBE425:
 1794              	.LBE420:
 1795              	.LBE419:
 1796              	.LBE418:
 888:Src/app.c     **** 
 1797              		.loc 1 888 3 is_stmt 1 discriminator 3 view .LVU557
 890:Src/app.c     **** 
 1798              		.loc 1 890 3 view .LVU558
 890:Src/app.c     **** 
 1799              		.loc 1 890 16 is_stmt 0 view .LVU559
 1800 022c FFF7FEFF 		bl	HAL_GetTick
 1801              	.LVL137:
 892:Src/app.c     **** }
 1802              		.loc 1 892 3 is_stmt 1 view .LVU560
 892:Src/app.c     **** }
 1803              		.loc 1 892 3 is_stmt 0 view .LVU561
 1804              	.LBE417:
 1805              	.LBE416:
1386:Src/app.c     ****     is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &roi_dummy, ld_landmarks[0]);
 1806              		.loc 1 1386 5 is_stmt 1 view .LVU562
1386:Src/app.c     ****     is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &roi_dummy, ld_landmarks[0]);
 1807              		.loc 1 1386 13 is_stmt 0 view .LVU563
 1808 0230 FFF7FEFF 		bl	HAL_GetTick
 1809              	.LVL138:
1387:Src/app.c     ****     hl_ms = HAL_GetTick() - hl_ms;
 1810              		.loc 1 1387 5 is_stmt 1 view .LVU564
 1811              	.LBB427:
 1812              	.LBI366:
 981:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
 1813              		.loc 1 981 12 view .LVU565
 1814              	.LBB403:
 984:Src/app.c     ****   int is_valid;
 1815              		.loc 1 984 3 view .LVU566
 985:Src/app.c     **** 
 1816              		.loc 1 985 3 view .LVU567
 987:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
 1817              		.loc 1 987 3 view .LVU568
 1818              	.LBB379:
 1819              	.LBI379:
 910:Src/app.c     **** {
 1820              		.loc 1 910 12 view .LVU569
ARM GAS  /tmp/ccddOyyT.s 			page 92


 1821              	.LBB380:
 912:Src/app.c     ****   int corners[4][2];
 1822              		.loc 1 912 3 view .LVU570
 913:Src/app.c     ****   uint8_t* out_data;
 1823              		.loc 1 913 3 view .LVU571
 914:Src/app.c     ****   size_t height_out;
 1824              		.loc 1 914 3 view .LVU572
 915:Src/app.c     ****   uint8_t *in_data;
 1825              		.loc 1 915 3 view .LVU573
 916:Src/app.c     ****   size_t height_in;
 1826              		.loc 1 916 3 view .LVU574
 917:Src/app.c     ****   size_t width_out;
 1827              		.loc 1 917 3 view .LVU575
 918:Src/app.c     ****   size_t width_in;
 1828              		.loc 1 918 3 view .LVU576
 919:Src/app.c     ****   int is_clamped;
 1829              		.loc 1 919 3 view .LVU577
 920:Src/app.c     **** 
 1830              		.loc 1 920 3 view .LVU578
 923:Src/app.c     ****   width_out = LD_WIDTH;
 1831              		.loc 1 923 3 view .LVU579
 924:Src/app.c     ****   height_out = LD_HEIGHT;
 1832              		.loc 1 924 3 view .LVU580
 925:Src/app.c     **** 
 1833              		.loc 1 925 3 view .LVU581
 927:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 1834              		.loc 1 927 3 view .LVU582
 1835 0234 0CA9     		add	r1, sp, #48
 1836 0236 07A8     		add	r0, sp, #28
 1837              	.LVL139:
 927:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 1838              		.loc 1 927 3 is_stmt 0 view .LVU583
 1839 0238 FFF7FEFF 		bl	roi_to_corners
 1840              	.LVL140:
 928:Src/app.c     **** 
 1841              		.loc 1 928 3 is_stmt 1 view .LVU584
 928:Src/app.c     **** 
 1842              		.loc 1 928 16 is_stmt 0 view .LVU585
 1843 023c 14A9     		add	r1, sp, #80
 1844 023e 0CA8     		add	r0, sp, #48
 1845 0240 FFF7FEFF 		bl	clamp_corners
 1846              	.LVL141:
 931:Src/app.c     ****     int offset_x;
 1847              		.loc 1 931 3 is_stmt 1 view .LVU586
 931:Src/app.c     ****     int offset_x;
 1848              		.loc 1 931 6 is_stmt 0 view .LVU587
 1849 0244 0028     		cmp	r0, #0
 1850 0246 00F0AC80 		beq	.L90
 1851              	.LBB381:
 932:Src/app.c     ****     int offset_y;
 1852              		.loc 1 932 5 is_stmt 1 view .LVU588
 933:Src/app.c     **** 
 1853              		.loc 1 933 5 view .LVU589
 936:Src/app.c     **** 
 1854              		.loc 1 936 5 view .LVU590
 1855 024a 3A46     		mov	r2, r7
 1856 024c 0021     		movs	r1, #0
ARM GAS  /tmp/ccddOyyT.s 			page 93


 1857 024e 2046     		mov	r0, r4
 1858              	.LVL142:
 936:Src/app.c     **** 
 1859              		.loc 1 936 5 is_stmt 0 view .LVU591
 1860 0250 FFF7FEFF 		bl	memset
 1861              	.LVL143:
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1862              		.loc 1 939 5 is_stmt 1 view .LVU592
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1863              		.loc 1 940 38 is_stmt 0 view .LVU593
 1864 0254 DDED157A 		vldr.32	s15, [sp, #84]	@ int
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1865              		.loc 1 940 52 view .LVU594
 1866 0258 9DED0D7A 		vldr.32	s14, [sp, #52]
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1867              		.loc 1 940 38 view .LVU595
 1868 025c F8EEE77A 		vcvt.f32.s32	s15, s15
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1869              		.loc 1 940 57 view .LVU596
 1870 0260 DFED466A 		vldr.32	s13, .L108+84
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1871              		.loc 1 940 38 view .LVU597
 1872 0264 77EEC77A 		vsub.f32	s15, s15, s14
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1873              		.loc 1 940 89 view .LVU598
 1874 0268 9DED116A 		vldr.32	s12, [sp, #68]
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1875              		.loc 1 940 57 view .LVU599
 1876 026c 67EEA67A 		vmul.f32	s15, s15, s13
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1877              		.loc 1 940 89 view .LVU600
 1878 0270 36EE476A 		vsub.f32	s12, s12, s14
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1879              		.loc 1 940 70 view .LVU601
 1880 0274 87EE867A 		vdiv.f32	s14, s15, s12
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1881              		.loc 1 940 14 view .LVU602
 1882 0278 FDEEC77A 		vcvt.s32.f32	s15, s14
 1883 027c 17EE903A 		vmov	r3, s15	@ int
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1884              		.loc 1 939 38 view .LVU603
 1885 0280 DDED147A 		vldr.32	s15, [sp, #80]	@ int
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1886              		.loc 1 939 52 view .LVU604
 1887 0284 9DED0C5A 		vldr.32	s10, [sp, #48]
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1888              		.loc 1 939 38 view .LVU605
 1889 0288 B8EEE77A 		vcvt.f32.s32	s14, s15
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1890              		.loc 1 939 88 view .LVU606
 1891 028c DDED105A 		vldr.32	s11, [sp, #64]
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1892              		.loc 1 939 38 view .LVU607
 1893 0290 37EE457A 		vsub.f32	s14, s14, s10
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1894              		.loc 1 939 88 view .LVU608
 1895 0294 75EEC55A 		vsub.f32	s11, s11, s10
ARM GAS  /tmp/ccddOyyT.s 			page 94


 1896              	.LVL144:
 940:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1897              		.loc 1 940 5 is_stmt 1 view .LVU609
 941:Src/app.c     **** 
 1898              		.loc 1 941 5 view .LVU610
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1899              		.loc 1 939 57 is_stmt 0 view .LVU611
 1900 0298 27EE267A 		vmul.f32	s14, s14, s13
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1901              		.loc 1 939 69 view .LVU612
 1902 029c C7EE257A 		vdiv.f32	s15, s14, s11
 1903              	.LVL145:
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1904              		.loc 1 939 14 view .LVU613
 1905 02a0 FDEEE77A 		vcvt.s32.f32	s15, s15
 941:Src/app.c     **** 
 1906              		.loc 1 941 56 view .LVU614
 1907 02a4 C020     		movs	r0, #192
 939:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1908              		.loc 1 939 14 view .LVU615
 1909 02a6 17EE901A 		vmov	r1, s15	@ int
 941:Src/app.c     **** 
 1910              		.loc 1 941 56 view .LVU616
 1911 02aa 00FB0311 		mla	r1, r0, r3, r1
 941:Src/app.c     **** 
 1912              		.loc 1 941 14 view .LVU617
 1913 02ae 04EB8103 		add	r3, r4, r1, lsl #2
 944:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1914              		.loc 1 944 38 view .LVU618
 1915 02b2 149A     		ldr	r2, [sp, #80]
 941:Src/app.c     **** 
 1916              		.loc 1 941 14 view .LVU619
 1917 02b4 0493     		str	r3, [sp, #16]
 1918              	.LVL146:
 944:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1919              		.loc 1 944 5 is_stmt 1 view .LVU620
 944:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1920              		.loc 1 944 38 is_stmt 0 view .LVU621
 1921 02b6 189B     		ldr	r3, [sp, #96]
 1922              	.LVL147:
 945:Src/app.c     **** 
 1923              		.loc 1 945 39 view .LVU622
 1924 02b8 1599     		ldr	r1, [sp, #84]
 944:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1925              		.loc 1 944 38 view .LVU623
 1926 02ba 9B1A     		subs	r3, r3, r2
 944:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1927              		.loc 1 944 55 view .LVU624
 1928 02bc 07EE903A 		vmov	s15, r3	@ int
 1929 02c0 F8EEE77A 		vcvt.f32.s32	s15, s15
 1930 02c4 87EEA57A 		vdiv.f32	s14, s15, s11
 944:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1931              		.loc 1 944 93 view .LVU625
 1932 02c8 67EE267A 		vmul.f32	s15, s14, s13
 944:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1933              		.loc 1 944 17 view .LVU626
 1934 02cc FDEEE77A 		vcvt.s32.f32	s15, s15
ARM GAS  /tmp/ccddOyyT.s 			page 95


 945:Src/app.c     **** 
 1935              		.loc 1 945 39 view .LVU627
 1936 02d0 199A     		ldr	r2, [sp, #100]
 944:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1937              		.loc 1 944 17 view .LVU628
 1938 02d2 17EE903A 		vmov	r3, s15	@ int
 1939              	.LVL148:
 945:Src/app.c     **** 
 1940              		.loc 1 945 5 is_stmt 1 view .LVU629
 945:Src/app.c     **** 
 1941              		.loc 1 945 39 is_stmt 0 view .LVU630
 1942 02d6 521A     		subs	r2, r2, r1
 945:Src/app.c     **** 
 1943              		.loc 1 945 56 view .LVU631
 1944 02d8 07EE902A 		vmov	s15, r2	@ int
 1945 02dc F8EEE77A 		vcvt.f32.s32	s15, s15
 1946 02e0 87EE867A 		vdiv.f32	s14, s15, s12
 945:Src/app.c     **** 
 1947              		.loc 1 945 94 view .LVU632
 1948 02e4 67EE267A 		vmul.f32	s15, s14, s13
 945:Src/app.c     **** 
 1949              		.loc 1 945 18 view .LVU633
 1950 02e8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1951 02ec 17EE902A 		vmov	r2, s15	@ int
 1952              	.LVL149:
 947:Src/app.c     ****     assert(height_out > 0);
 1953              		.loc 1 947 5 is_stmt 1 view .LVU634
 1954 02f0 23B9     		cbnz	r3, .L70
 947:Src/app.c     ****     assert(height_out > 0);
 1955              		.loc 1 947 5 is_stmt 0 discriminator 1 view .LVU635
 1956 02f2 40F2B331 		movw	r1, #947
 1957 02f6 224B     		ldr	r3, .L108+88
 1958              	.LVL150:
 947:Src/app.c     ****     assert(height_out > 0);
 1959              		.loc 1 947 5 discriminator 1 view .LVU636
 1960 02f8 224A     		ldr	r2, .L108+92
 1961              	.LVL151:
 947:Src/app.c     ****     assert(height_out > 0);
 1962              		.loc 1 947 5 discriminator 1 view .LVU637
 1963 02fa B9E6     		b	.L107
 1964              	.LVL152:
 1965              	.L70:
 948:Src/app.c     ****     {
 1966              		.loc 1 948 5 is_stmt 1 view .LVU638
 1967 02fc 22B9     		cbnz	r2, .L71
 948:Src/app.c     ****     {
 1968              		.loc 1 948 5 is_stmt 0 discriminator 1 view .LVU639
 1969 02fe 4FF46D71 		mov	r1, #948
 1970 0302 214B     		ldr	r3, .L108+96
 1971              	.LVL153:
 948:Src/app.c     ****     {
 1972              		.loc 1 948 5 discriminator 1 view .LVU640
 1973 0304 1F4A     		ldr	r2, .L108+92
 1974              	.LVL154:
 948:Src/app.c     ****     {
 1975              		.loc 1 948 5 discriminator 1 view .LVU641
 1976 0306 B3E6     		b	.L107
ARM GAS  /tmp/ccddOyyT.s 			page 96


 1977              	.LVL155:
 1978              	.L71:
 1979              	.LBB382:
 950:Src/app.c     **** 
 1980              		.loc 1 950 7 is_stmt 1 view .LVU642
 952:Src/app.c     **** 
 1981              		.loc 1 952 7 view .LVU643
 952:Src/app.c     **** 
 1982              		.loc 1 952 80 is_stmt 0 view .LVU644
 1983 0308 00FB0230 		mla	r0, r0, r2, r3
 952:Src/app.c     **** 
 1984              		.loc 1 952 106 view .LVU645
 1985 030c 0499     		ldr	r1, [sp, #16]
 1986 030e 01EB8000 		add	r0, r1, r0, lsl #2
 952:Src/app.c     **** 
 1987              		.loc 1 952 20 view .LVU646
 1988 0312 6FF44071 		mvn	r1, #768
 1989 0316 0844     		add	r0, r0, r1
 1990              	.LVL156:
 954:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1991              		.loc 1 954 7 is_stmt 1 view .LVU647
 1992 0318 8442     		cmp	r4, r0
 1993 031a 39D9     		bls	.L72
 954:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1994              		.loc 1 954 7 is_stmt 0 discriminator 1 view .LVU648
 1995 031c 40F2BA31 		movw	r1, #954
 1996 0320 1A4B     		ldr	r3, .L108+100
 1997              	.LVL157:
 954:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1998              		.loc 1 954 7 discriminator 1 view .LVU649
 1999 0322 184A     		ldr	r2, .L108+92
 2000              	.LVL158:
 954:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 2001              		.loc 1 954 7 discriminator 1 view .LVU650
 2002 0324 A4E6     		b	.L107
 2003              	.L109:
 2004 0326 00BF     		.align	2
 2005              	.L108:
 2006 0328 0000C842 		.word	1120403456
 2007 032c 00004842 		.word	1112014848
 2008 0330 CDCCCC3E 		.word	1053609165
 2009 0334 00000000 		.word	NN_Instance_yolo_detector
 2010 0338 00000000 		.word	.LC4
 2011 033c 00000000 		.word	__func__.11
 2012 0340 0E000000 		.word	.LC2
 2013 0344 09000000 		.word	.LC5
 2014 0348 00000000 		.word	__func__.10
 2015 034c 2D000000 		.word	.LC6
 2016 0350 00000000 		.word	nn_input_queue
 2017 0354 5D000000 		.word	.LC7
 2018 0358 00000000 		.word	__func__.12
 2019 035c 00000000 		.word	0
 2020 0360 0000803D 		.word	1031798784
 2021 0364 00000000 		.word	.LC1
 2022 0368 00000000 		.word	__func__.9
 2023 036c 69000000 		.word	.LC8
 2024 0370 00ED00E0 		.word	-536810240
ARM GAS  /tmp/ccddOyyT.s 			page 97


 2025 0374 78000000 		.word	.LC9
 2026 0378 00000000 		.word	__func__.8
 2027 037c 00004043 		.word	1128267776
 2028 0380 97000000 		.word	.LC10
 2029 0384 00000000 		.word	__func__.7
 2030 0388 A5000000 		.word	.LC11
 2031 038c B4000000 		.word	.LC12
 2032              	.LVL159:
 2033              	.L72:
 955:Src/app.c     ****     }
 2034              		.loc 1 955 7 is_stmt 1 view .LVU651
 2035 0390 04EB070C 		add	ip, r4, r7
 2036 0394 6045     		cmp	r0, ip
 2037 0396 07D3     		bcc	.L69
 955:Src/app.c     ****     }
 2038              		.loc 1 955 7 is_stmt 0 discriminator 1 view .LVU652
 2039 0398 40F2BB31 		movw	r1, #955
 2040 039c 894B     		ldr	r3, .L110
 2041              	.LVL160:
 955:Src/app.c     ****     }
 2042              		.loc 1 955 7 discriminator 1 view .LVU653
 2043 039e 8A4A     		ldr	r2, .L110+4
 2044              	.LVL161:
 955:Src/app.c     ****     }
 2045              		.loc 1 955 7 discriminator 1 view .LVU654
 2046 03a0 66E6     		b	.L107
 2047              	.LVL162:
 2048              	.L90:
 955:Src/app.c     ****     }
 2049              		.loc 1 955 7 discriminator 1 view .LVU655
 2050              	.LBE382:
 2051              	.LBE381:
 924:Src/app.c     ****   height_out = LD_HEIGHT;
 2052              		.loc 1 924 13 view .LVU656
 2053 03a2 C023     		movs	r3, #192
 925:Src/app.c     **** 
 2054              		.loc 1 925 14 view .LVU657
 2055 03a4 1A46     		mov	r2, r3
 923:Src/app.c     ****   width_out = LD_WIDTH;
 2056              		.loc 1 923 12 view .LVU658
 2057 03a6 0494     		str	r4, [sp, #16]
 2058              	.LVL163:
 2059              	.L69:
 959:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2060              		.loc 1 959 3 is_stmt 1 view .LVU659
 959:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2061              		.loc 1 959 51 is_stmt 0 view .LVU660
 2062 03a8 4FF4486C 		mov	ip, #3200
 959:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2063              		.loc 1 959 77 view .LVU661
 2064 03ac DDE914EA 		ldrd	lr, r10, [sp, #80]
 961:Src/app.c     **** 
 2065              		.loc 1 961 29 view .LVU662
 2066 03b0 1999     		ldr	r1, [sp, #100]
 959:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2067              		.loc 1 959 80 view .LVU663
 2068 03b2 4FEA8E00 		lsl	r0, lr, #2
ARM GAS  /tmp/ccddOyyT.s 			page 98


 959:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2069              		.loc 1 959 65 view .LVU664
 2070 03b6 0CFB0A00 		mla	r0, ip, r10, r0
 961:Src/app.c     **** 
 2071              		.loc 1 961 29 view .LVU665
 2072 03ba A1EB0A0A 		sub	r10, r1, r10
 963:Src/app.c     ****   assert(height_in > 0);
 2073              		.loc 1 963 3 view .LVU666
 2074 03be 1899     		ldr	r1, [sp, #96]
 959:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2075              		.loc 1 959 11 view .LVU667
 2076 03c0 3044     		add	r0, r0, r6
 2077              	.LVL164:
 960:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
 2078              		.loc 1 960 3 is_stmt 1 view .LVU668
 961:Src/app.c     **** 
 2079              		.loc 1 961 3 view .LVU669
 963:Src/app.c     ****   assert(height_in > 0);
 2080              		.loc 1 963 3 view .LVU670
 2081 03c2 B1EB0E01 		subs	r1, r1, lr
 2082              	.LVL165:
 963:Src/app.c     ****   assert(height_in > 0);
 2083              		.loc 1 963 3 is_stmt 0 view .LVU671
 2084 03c6 04D1     		bne	.L73
 963:Src/app.c     ****   assert(height_in > 0);
 2085              		.loc 1 963 3 discriminator 1 view .LVU672
 2086 03c8 40F2C331 		movw	r1, #963
 2087              	.LVL166:
 963:Src/app.c     ****   assert(height_in > 0);
 2088              		.loc 1 963 3 discriminator 1 view .LVU673
 2089 03cc 7F4B     		ldr	r3, .L110+8
 2090              	.LVL167:
 963:Src/app.c     ****   assert(height_in > 0);
 2091              		.loc 1 963 3 discriminator 1 view .LVU674
 2092 03ce 7E4A     		ldr	r2, .L110+4
 2093              	.LVL168:
 963:Src/app.c     ****   assert(height_in > 0);
 2094              		.loc 1 963 3 discriminator 1 view .LVU675
 2095 03d0 4EE6     		b	.L107
 2096              	.LVL169:
 2097              	.L73:
 964:Src/app.c     ****   {
 2098              		.loc 1 964 3 is_stmt 1 view .LVU676
 2099 03d2 BAF1000F 		cmp	r10, #0
 2100 03d6 04D1     		bne	.L74
 964:Src/app.c     ****   {
 2101              		.loc 1 964 3 is_stmt 0 discriminator 1 view .LVU677
 2102 03d8 4FF47171 		mov	r1, #964
 2103              	.LVL170:
 964:Src/app.c     ****   {
 2104              		.loc 1 964 3 discriminator 1 view .LVU678
 2105 03dc 7C4B     		ldr	r3, .L110+12
 2106              	.LVL171:
 964:Src/app.c     ****   {
 2107              		.loc 1 964 3 discriminator 1 view .LVU679
 2108 03de 7A4A     		ldr	r2, .L110+4
 2109              	.LVL172:
ARM GAS  /tmp/ccddOyyT.s 			page 99


 964:Src/app.c     ****   {
 2110              		.loc 1 964 3 discriminator 1 view .LVU680
 2111 03e0 46E6     		b	.L107
 2112              	.LVL173:
 2113              	.L74:
 2114              	.LBB383:
 966:Src/app.c     **** 
 2115              		.loc 1 966 5 is_stmt 1 view .LVU681
 968:Src/app.c     **** 
 2116              		.loc 1 968 5 view .LVU682
 968:Src/app.c     **** 
 2117              		.loc 1 968 74 is_stmt 0 view .LVU683
 2118 03e2 4FF4487E 		mov	lr, #800
 2119 03e6 0EFB0A1E 		mla	lr, lr, r10, r1
 968:Src/app.c     **** 
 2120              		.loc 1 968 99 view .LVU684
 2121 03ea 00EB8E0E 		add	lr, r0, lr, lsl #2
 968:Src/app.c     **** 
 2122              		.loc 1 968 17 view .LVU685
 2123 03ee AEF6814E 		subw	lr, lr, #3201
 2124              	.LVL174:
 970:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2125              		.loc 1 970 5 is_stmt 1 view .LVU686
 2126 03f2 7645     		cmp	r6, lr
 2127 03f4 04D9     		bls	.L75
 970:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2128              		.loc 1 970 5 is_stmt 0 discriminator 1 view .LVU687
 2129 03f6 40F2CA31 		movw	r1, #970
 2130              	.LVL175:
 970:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2131              		.loc 1 970 5 discriminator 1 view .LVU688
 2132 03fa 764B     		ldr	r3, .L110+16
 2133              	.LVL176:
 970:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2134              		.loc 1 970 5 discriminator 1 view .LVU689
 2135 03fc 724A     		ldr	r2, .L110+4
 2136              	.LVL177:
 970:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2137              		.loc 1 970 5 discriminator 1 view .LVU690
 2138 03fe 37E6     		b	.L107
 2139              	.LVL178:
 2140              	.L75:
 971:Src/app.c     ****   }
 2141              		.loc 1 971 5 is_stmt 1 view .LVU691
 2142 0400 06F5BB16 		add	r6, r6, #1531904
 2143              	.LVL179:
 971:Src/app.c     ****   }
 2144              		.loc 1 971 5 is_stmt 0 view .LVU692
 2145 0404 06F58056 		add	r6, r6, #4096
 2146              	.LVL180:
 971:Src/app.c     ****   }
 2147              		.loc 1 971 5 view .LVU693
 2148 0408 B645     		cmp	lr, r6
 2149 040a 04D3     		bcc	.L76
 971:Src/app.c     ****   }
 2150              		.loc 1 971 5 discriminator 1 view .LVU694
 2151 040c 40F2CB31 		movw	r1, #971
ARM GAS  /tmp/ccddOyyT.s 			page 100


 2152              	.LVL181:
 971:Src/app.c     ****   }
 2153              		.loc 1 971 5 discriminator 1 view .LVU695
 2154 0410 714B     		ldr	r3, .L110+20
 2155              	.LVL182:
 971:Src/app.c     ****   }
 2156              		.loc 1 971 5 discriminator 1 view .LVU696
 2157 0412 6D4A     		ldr	r2, .L110+4
 2158              	.LVL183:
 971:Src/app.c     ****   }
 2159              		.loc 1 971 5 discriminator 1 view .LVU697
 2160 0414 2CE6     		b	.L107
 2161              	.LVL184:
 2162              	.L76:
 971:Src/app.c     ****   }
 2163              		.loc 1 971 5 discriminator 1 view .LVU698
 2164              	.LBE383:
 974:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2165              		.loc 1 974 3 is_stmt 1 view .LVU699
 2166 0416 CDE90232 		strd	r3, r2, [sp, #8]
 2167 041a 0091     		str	r1, [sp]
 2168 041c 4FF44073 		mov	r3, #768
 2169              	.LVL185:
 974:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2170              		.loc 1 974 3 is_stmt 0 view .LVU700
 2171 0420 6246     		mov	r2, ip
 2172              	.LVL186:
 974:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2173              		.loc 1 974 3 view .LVU701
 2174 0422 0499     		ldr	r1, [sp, #16]
 2175              	.LVL187:
 974:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2176              		.loc 1 974 3 view .LVU702
 2177 0424 CDF804A0 		str	r10, [sp, #4]
 2178 0428 FFF7FEFF 		bl	IPL_resize_bilinear_iu8ou8_with_strides_RGB
 2179              	.LVL188:
 977:Src/app.c     **** }
 2180              		.loc 1 977 3 is_stmt 1 view .LVU703
 977:Src/app.c     **** }
 2181              		.loc 1 977 3 is_stmt 0 view .LVU704
 2182              	.LBE380:
 2183              	.LBE379:
 988:Src/app.c     ****   if (is_clamped)
 2184              		.loc 1 988 3 is_stmt 1 view .LVU705
 988:Src/app.c     ****   if (is_clamped)
 2185              		.loc 1 988 3 view .LVU706
 988:Src/app.c     ****   if (is_clamped)
 2186              		.loc 1 988 3 discriminator 1 view .LVU707
 2187              	.LBB384:
 2188              	.LBI368:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2189              		.loc 3 418 27 view .LVU708
 2190              	.LBB378:
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2191              		.loc 3 421 5 view .LVU709
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2192              		.loc 3 421 8 is_stmt 0 view .LVU710
ARM GAS  /tmp/ccddOyyT.s 			page 101


 2193 042c 002F     		cmp	r7, #0
 2194 042e 1ADD     		ble	.L77
 2195              	.LBB377:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2196              		.loc 3 422 8 is_stmt 1 view .LVU711
 2197              	.LVL189:
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2198              		.loc 3 423 7 view .LVU712
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2199              		.loc 3 425 7 view .LVU713
 2200              	.LBB371:
 2201              	.LBI371:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2202              		.loc 4 269 27 view .LVU714
 2203              	.LBB372:
 2204              		.loc 4 271 3 view .LVU715
 2205              		.syntax unified
 2206              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2207 0430 BFF34F8F 		dsb 0xF
 2208              	@ 0 "" 2
 2209              		.thumb
 2210              		.syntax unified
 2211              	.LBE372:
 2212              	.LBE371:
 2213              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU716
 2214 0434 E343     		mvns	r3, r4
 2215 0436 0598     		ldr	r0, [sp, #20]
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2216              		.loc 3 423 16 view .LVU717
 2217 0438 2246     		mov	r2, r4
 2218              		.loc 3 431 25 discriminator 1 view .LVU718
 2219 043a 0344     		add	r3, r3, r0
 2220 043c 001B     		subs	r0, r0, r4
 2221 043e 2038     		subs	r0, r0, #32
 2222 0440 5B09     		lsrs	r3, r3, #5
 2223 0442 2030     		adds	r0, r0, #32
 2224 0444 03F1010E 		add	lr, r3, #1
 2225 0448 D8BF     		it	le
 2226 044a 4FF0010E 		movle	lr, #1
 2227 044e 4EF001E0 		dls	lr, lr
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2228              		.loc 3 428 23 view .LVU719
 2229 0452 6249     		ldr	r1, .L110+24
 2230              	.LVL190:
 2231              	.L78:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 2232              		.loc 3 427 7 is_stmt 1 view .LVU720
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2233              		.loc 3 428 9 view .LVU721
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2234              		.loc 3 428 23 is_stmt 0 view .LVU722
 2235 0454 C1F87022 		str	r2, [r1, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2236              		.loc 3 429 9 is_stmt 1 view .LVU723
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2237              		.loc 3 429 17 is_stmt 0 view .LVU724
 2238 0458 2032     		adds	r2, r2, #32
ARM GAS  /tmp/ccddOyyT.s 			page 102


 2239              	.LVL191:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2240              		.loc 3 430 9 is_stmt 1 view .LVU725
 2241              		.loc 3 431 25 discriminator 1 view .LVU726
 2242 045a 0FF005C8 		le	lr, .L78
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2243              		.loc 3 433 7 view .LVU727
 2244              	.LBB373:
 2245              	.LBI373:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2246              		.loc 4 269 27 view .LVU728
 2247              	.LBB374:
 2248              		.loc 4 271 3 view .LVU729
 2249              		.syntax unified
 2250              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2251 045e BFF34F8F 		dsb 0xF
 2252              	@ 0 "" 2
 2253              		.thumb
 2254              		.syntax unified
 2255              	.LBE374:
 2256              	.LBE373:
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2257              		.loc 3 434 7 view .LVU730
 2258              	.LBB375:
 2259              	.LBI375:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2260              		.loc 4 258 27 view .LVU731
 2261              	.LBB376:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2262              		.loc 4 260 3 view .LVU732
 2263              		.syntax unified
 2264              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2265 0462 BFF36F8F 		isb 0xF
 2266              	@ 0 "" 2
 2267              	.LVL192:
 2268              		.thumb
 2269              		.syntax unified
 2270              	.L77:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2271              		.loc 4 260 3 is_stmt 0 view .LVU733
 2272              	.LBE376:
 2273              	.LBE375:
 2274              	.LBE377:
 2275              	.LBE378:
 2276              	.LBE384:
 988:Src/app.c     ****   if (is_clamped)
 2277              		.loc 1 988 3 is_stmt 1 discriminator 3 view .LVU734
 989:Src/app.c     ****     return 0;
 2278              		.loc 1 989 3 view .LVU735
 992:Src/app.c     **** 
 2279              		.loc 1 992 3 view .LVU736
 2280 0466 5E48     		ldr	r0, .L110+28
 2281 0468 FFF7FEFF 		bl	LL_ATON_RT_Main
 2282              	.LVL193:
 994:Src/app.c     **** 
 2283              		.loc 1 994 3 view .LVU737
ARM GAS  /tmp/ccddOyyT.s 			page 103


 994:Src/app.c     **** 
 2284              		.loc 1 994 14 is_stmt 0 view .LVU738
 2285 046c 4946     		mov	r1, r9
 2286 046e 4046     		mov	r0, r8
 2287 0470 5C4A     		ldr	r2, .L110+32
 2288 0472 FFF7FEFF 		bl	ld_post_process
 2289              	.LVL194:
 2290              	.LBB385:
 2291              	.LBB386:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2292              		.loc 3 362 36 view .LVU739
 2293 0476 4146     		mov	r1, r8
 2294              	.LBE386:
 2295              	.LBE385:
 994:Src/app.c     **** 
 2296              		.loc 1 994 14 view .LVU740
 2297 0478 8246     		mov	r10, r0
 2298              	.LVL195:
 997:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2299              		.loc 1 997 3 is_stmt 1 view .LVU741
 997:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2300              		.loc 1 997 3 view .LVU742
 997:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2301              		.loc 1 997 3 discriminator 1 view .LVU743
 2302              	.LBB394:
 2303              	.LBI385:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2304              		.loc 3 358 27 view .LVU744
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2305              		.loc 3 361 5 view .LVU745
 2306              	.LBB393:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2307              		.loc 3 362 8 view .LVU746
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2308              		.loc 3 362 52 is_stmt 0 view .LVU747
 2309 047a 08F01F03 		and	r3, r8, #31
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2310              		.loc 3 363 7 is_stmt 1 view .LVU748
 2311              	.LVL196:
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2312              		.loc 3 365 7 view .LVU749
 2313              	.LBB387:
 2314              	.LBI387:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2315              		.loc 4 269 27 view .LVU750
 2316              	.LBB388:
 2317              		.loc 4 271 3 view .LVU751
 2318              		.syntax unified
 2319              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2320 047e BFF34F8F 		dsb 0xF
 2321              	@ 0 "" 2
 2322              		.thumb
 2323              		.syntax unified
 2324 0482 D81C     		adds	r0, r3, #3
 2325              	.LVL197:
 2326              		.loc 4 271 3 is_stmt 0 view .LVU752
 2327 0484 1C3B     		subs	r3, r3, #28
ARM GAS  /tmp/ccddOyyT.s 			page 104


 2328 0486 4009     		lsrs	r0, r0, #5
 2329 0488 2033     		adds	r3, r3, #32
 2330 048a 00F1010E 		add	lr, r0, #1
 2331 048e D8BF     		it	le
 2332 0490 4FF0010E 		movle	lr, #1
 2333 0494 4EF001E0 		dls	lr, lr
 2334              	.LBE388:
 2335              	.LBE387:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2336              		.loc 3 368 22 view .LVU753
 2337 0498 504A     		ldr	r2, .L110+24
 2338              	.LVL198:
 2339              	.L79:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2340              		.loc 3 367 7 is_stmt 1 view .LVU754
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2341              		.loc 3 368 9 view .LVU755
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2342              		.loc 3 368 22 is_stmt 0 view .LVU756
 2343 049a C2F85C12 		str	r1, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2344              		.loc 3 369 9 is_stmt 1 view .LVU757
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2345              		.loc 3 369 17 is_stmt 0 view .LVU758
 2346 049e 2031     		adds	r1, r1, #32
 2347              	.LVL199:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2348              		.loc 3 370 9 is_stmt 1 view .LVU759
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2349              		.loc 3 371 25 discriminator 1 view .LVU760
 2350 04a0 0FF005C8 		le	lr, .L79
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2351              		.loc 3 373 7 view .LVU761
 2352              	.LBB389:
 2353              	.LBI389:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2354              		.loc 4 269 27 view .LVU762
 2355              	.LBB390:
 2356              		.loc 4 271 3 view .LVU763
 2357              		.syntax unified
 2358              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2359 04a4 BFF34F8F 		dsb 0xF
 2360              	@ 0 "" 2
 2361              		.thumb
 2362              		.syntax unified
 2363              	.LBE390:
 2364              	.LBE389:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 2365              		.loc 3 374 7 view .LVU764
 2366              	.LBB391:
 2367              	.LBI391:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2368              		.loc 4 258 27 view .LVU765
 2369              	.LBB392:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2370              		.loc 4 260 3 view .LVU766
 2371              		.syntax unified
ARM GAS  /tmp/ccddOyyT.s 			page 105


 2372              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2373 04a8 BFF36F8F 		isb 0xF
 2374              	@ 0 "" 2
 2375              	.LVL200:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2376              		.loc 4 260 3 is_stmt 0 view .LVU767
 2377              		.thumb
 2378              		.syntax unified
 2379              	.LBE392:
 2380              	.LBE391:
 2381              	.LBE393:
 2382              	.LBE394:
 997:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2383              		.loc 1 997 3 is_stmt 1 discriminator 3 view .LVU768
 998:Src/app.c     **** 
 2384              		.loc 1 998 3 view .LVU769
 998:Src/app.c     **** 
 2385              		.loc 1 998 3 view .LVU770
 998:Src/app.c     **** 
 2386              		.loc 1 998 3 discriminator 1 view .LVU771
 2387              	.LBB395:
 2388              	.LBI395:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2389              		.loc 3 358 27 view .LVU772
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2390              		.loc 3 361 5 view .LVU773
 2391              	.LBB396:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2392              		.loc 3 362 8 view .LVU774
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2393              		.loc 3 362 52 is_stmt 0 view .LVU775
 2394 04ac 09F01F0E 		and	lr, r9, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2395              		.loc 3 362 32 view .LVU776
 2396 04b0 0EF5AF5E 		add	lr, lr, #5600
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2397              		.loc 3 362 36 view .LVU777
 2398 04b4 4B46     		mov	r3, r9
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2399              		.loc 3 362 32 view .LVU778
 2400 04b6 0EF1100E 		add	lr, lr, #16
 2401              	.LVL201:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2402              		.loc 3 363 7 is_stmt 1 view .LVU779
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2403              		.loc 3 365 7 view .LVU780
 2404              	.LBB397:
 2405              	.LBI397:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2406              		.loc 4 269 27 view .LVU781
 2407              	.LBB398:
 2408              		.loc 4 271 3 view .LVU782
 2409              		.syntax unified
 2410              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2411 04ba BFF34F8F 		dsb 0xF
 2412              	@ 0 "" 2
 2413              		.thumb
ARM GAS  /tmp/ccddOyyT.s 			page 106


 2414              		.syntax unified
 2415 04be 0EF1FF3E 		add	lr, lr, #-1
 2416              	.LVL202:
 2417              		.loc 4 271 3 is_stmt 0 view .LVU783
 2418 04c2 4FEA5E1E 		lsr	lr, lr, #5
 2419              	.LVL203:
 2420              		.loc 4 271 3 view .LVU784
 2421 04c6 0EF1010E 		add	lr, lr, #1
 2422 04ca 4EF001E0 		dls	lr, lr
 2423              	.LVL204:
 2424              	.L80:
 2425              		.loc 4 271 3 view .LVU785
 2426              	.LBE398:
 2427              	.LBE397:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2428              		.loc 3 367 7 is_stmt 1 view .LVU786
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2429              		.loc 3 368 9 view .LVU787
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2430              		.loc 3 368 22 is_stmt 0 view .LVU788
 2431 04ce C2F85C32 		str	r3, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2432              		.loc 3 369 9 is_stmt 1 view .LVU789
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2433              		.loc 3 369 17 is_stmt 0 view .LVU790
 2434 04d2 2033     		adds	r3, r3, #32
 2435              	.LVL205:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2436              		.loc 3 370 9 is_stmt 1 view .LVU791
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2437              		.loc 3 371 25 discriminator 1 view .LVU792
 2438 04d4 0FF005C8 		le	lr, .L80
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2439              		.loc 3 373 7 view .LVU793
 2440              	.LBB399:
 2441              	.LBI399:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2442              		.loc 4 269 27 view .LVU794
 2443              	.LBB400:
 2444              		.loc 4 271 3 view .LVU795
 2445              		.syntax unified
 2446              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2447 04d8 BFF34F8F 		dsb 0xF
 2448              	@ 0 "" 2
 2449              		.thumb
 2450              		.syntax unified
 2451              	.LBE400:
 2452              	.LBE399:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 2453              		.loc 3 374 7 view .LVU796
 2454              	.LBB401:
 2455              	.LBI401:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2456              		.loc 4 258 27 view .LVU797
 2457              	.LBB402:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2458              		.loc 4 260 3 view .LVU798
ARM GAS  /tmp/ccddOyyT.s 			page 107


 2459              		.syntax unified
 2460              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2461 04dc BFF36F8F 		isb 0xF
 2462              	@ 0 "" 2
 2463              	.LVL206:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2464              		.loc 4 260 3 is_stmt 0 view .LVU799
 2465              		.thumb
 2466              		.syntax unified
 2467              	.LBE402:
 2468              	.LBE401:
 2469              	.LBE396:
 2470              	.LBE395:
 2471              	.LBE403:
 2472              	.LBE427:
1388:Src/app.c     **** 
 2473              		.loc 1 1388 5 is_stmt 1 view .LVU800
1388:Src/app.c     **** 
 2474              		.loc 1 1388 13 is_stmt 0 view .LVU801
 2475 04e0 FFF7FEFF 		bl	HAL_GetTick
 2476              	.LVL207:
1390:Src/app.c     **** 
 2477              		.loc 1 1390 5 is_stmt 1 view .LVU802
1393:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 2478              		.loc 1 1393 5 view .LVU803
1394:Src/app.c     **** 
 2479              		.loc 1 1394 5 view .LVU804
1397:Src/app.c     **** 
 2480              		.loc 1 1397 5 view .LVU805
 2481              	.LBB428:
 2482              	.LBI428:
 514:Src/app.c     **** {
 2483              		.loc 1 514 13 view .LVU806
 2484              	.LBB429:
 516:Src/app.c     **** 
 2485              		.loc 1 516 3 view .LVU807
 518:Src/app.c     ****   assert(ret == pdTRUE);
 2486              		.loc 1 518 3 view .LVU808
 518:Src/app.c     ****   assert(ret == pdTRUE);
 2487              		.loc 1 518 9 is_stmt 0 view .LVU809
 2488 04e4 0023     		movs	r3, #0
 2489 04e6 2868     		ldr	r0, [r5]
 2490 04e8 1A46     		mov	r2, r3
 2491 04ea 1946     		mov	r1, r3
 2492 04ec FFF7FEFF 		bl	xQueueGenericSend
 2493              	.LVL208:
 519:Src/app.c     **** }
 2494              		.loc 1 519 3 is_stmt 1 view .LVU810
 2495 04f0 0128     		cmp	r0, #1
 2496 04f2 04D0     		beq	.L81
 519:Src/app.c     **** }
 2497              		.loc 1 519 3 is_stmt 0 discriminator 1 view .LVU811
 2498 04f4 40F20721 		movw	r1, #519
 2499 04f8 3B4B     		ldr	r3, .L110+36
 2500 04fa 3C4A     		ldr	r2, .L110+40
 2501 04fc B8E5     		b	.L107
 2502              	.L81:
ARM GAS  /tmp/ccddOyyT.s 			page 108


 2503              	.LVL209:
 519:Src/app.c     **** }
 2504              		.loc 1 519 3 discriminator 1 view .LVU812
 2505              	.LBE429:
 2506              	.LBE428:
1403:Src/app.c     ****     assert(ret == pdTRUE);
 2507              		.loc 1 1403 5 is_stmt 1 view .LVU813
1403:Src/app.c     ****     assert(ret == pdTRUE);
 2508              		.loc 1 1403 11 is_stmt 0 view .LVU814
 2509 04fe 3C4E     		ldr	r6, .L110+44
 2510              	.LVL210:
1403:Src/app.c     ****     assert(ret == pdTRUE);
 2511              		.loc 1 1403 11 view .LVU815
 2512 0500 4FF0FF31 		mov	r1, #-1
 2513 0504 706D     		ldr	r0, [r6, #84]
 2514 0506 FFF7FEFF 		bl	xQueueSemaphoreTake
 2515              	.LVL211:
1404:Src/app.c     ****     // NEW: Loop through all detections to find the highest confidence score
 2516              		.loc 1 1404 5 is_stmt 1 view .LVU816
 2517 050a 0128     		cmp	r0, #1
 2518 050c 40D1     		bne	.L82
 2519 050e DDE92813 		ldrd	r1, r3, [sp, #160]
 2520 0512 002B     		cmp	r3, #0
 2521 0514 03F10102 		add	r2, r3, #1
1406:Src/app.c     ****     for (int i = 0; i < yolo_info.yolo_out.nb_detect; i++)
 2522              		.loc 1 1406 11 is_stmt 0 view .LVU817
 2523 0518 DFED367A 		vldr.32	s15, .L110+48
 2524 051c B8BF     		it	lt
 2525 051e 0246     		movlt	r2, r0
 2526              	.L83:
 2527              	.LVL212:
 2528              	.LBB430:
1407:Src/app.c     ****       {
 2529              		.loc 1 1407 23 is_stmt 1 discriminator 1 view .LVU818
 2530 0520 013A     		subs	r2, r2, #1
 2531 0522 3AD1     		bne	.L86
 2532              	.LBE430:
1417:Src/app.c     ****     disp.info.hl_ms = (int)yolo_info.yolo_out.nb_detect;
 2533              		.loc 1 1417 5 view .LVU819
1417:Src/app.c     ****     disp.info.hl_ms = (int)yolo_info.yolo_out.nb_detect;
 2534              		.loc 1 1417 44 is_stmt 0 view .LVU820
 2535 0524 9FED347A 		vldr.32	s14, .L110+52
 2536 0528 67EE877A 		vmul.f32	s15, s15, s14
 2537              	.LVL213:
1417:Src/app.c     ****     disp.info.hl_ms = (int)yolo_info.yolo_out.nb_detect;
 2538              		.loc 1 1417 23 view .LVU821
 2539 052c FDEEE77A 		vcvt.s32.f32	s15, s15
 2540 0530 C6ED2B7A 		vstr.32	s15, [r6, #172]	@ int
1418:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 2541              		.loc 1 1418 5 is_stmt 1 view .LVU822
1421:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2542              		.loc 1 1421 27 is_stmt 0 view .LVU823
 2543 0534 DFED2F7A 		vldr.32	s15, .L110+48
1419:Src/app.c     ****     disp.info.pd_hand_nb = yolo_info.yolo_out.nb_detect;
 2544              		.loc 1 1419 28 view .LVU824
 2545 0538 86ED2A8A 		vstr.32	s16, [r6, #168]
1421:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
ARM GAS  /tmp/ccddOyyT.s 			page 109


 2546              		.loc 1 1421 27 view .LVU825
 2547 053c C6ED327A 		vstr.32	s15, [r6, #200]
1418:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 2548              		.loc 1 1418 21 view .LVU826
 2549 0540 C6F8B030 		str	r3, [r6, #176]
1419:Src/app.c     ****     disp.info.pd_hand_nb = yolo_info.yolo_out.nb_detect;
 2550              		.loc 1 1419 5 is_stmt 1 view .LVU827
1420:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 2551              		.loc 1 1420 5 view .LVU828
1420:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 2552              		.loc 1 1420 26 is_stmt 0 view .LVU829
 2553 0544 C6F8C430 		str	r3, [r6, #196]
1421:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2554              		.loc 1 1421 5 is_stmt 1 view .LVU830
1422:Src/app.c     **** 
 2555              		.loc 1 1422 5 view .LVU831
1422:Src/app.c     **** 
 2556              		.loc 1 1422 33 is_stmt 0 view .LVU832
 2557 0548 C6F8CCA0 		str	r10, [r6, #204]
1426:Src/app.c     ****     {
 2558              		.loc 1 1426 5 is_stmt 1 view .LVU833
1426:Src/app.c     ****     {
 2559              		.loc 1 1426 8 is_stmt 0 view .LVU834
 2560 054c BAF1000F 		cmp	r10, #0
 2561 0550 11D0     		beq	.L87
1429:Src/app.c     ****       // Copy the landmark data for the display thread
 2562              		.loc 1 1429 7 is_stmt 1 view .LVU835
1429:Src/app.c     ****       // Copy the landmark data for the display thread
 2563              		.loc 1 1429 30 is_stmt 0 view .LVU836
 2564 0552 DFF8ACE0 		ldr	lr, .L110+60
 2565 0556 0DF11C0C 		add	ip, sp, #28
 2566 055a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2567              	.LVL214:
1429:Src/app.c     ****       // Copy the landmark data for the display thread
 2568              		.loc 1 1429 30 view .LVU837
 2569 055e AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2570 0562 7046     		mov	r0, lr
 2571 0564 DCF80030 		ldr	r3, [ip]
 2572              	.LBB431:
1432:Src/app.c     ****     }
 2573              		.loc 1 1432 44 view .LVU838
 2574 0568 4FF46A62 		mov	r2, #3744
 2575 056c 1D49     		ldr	r1, .L110+32
 2576              	.LBE431:
1429:Src/app.c     ****       // Copy the landmark data for the display thread
 2577              		.loc 1 1429 30 view .LVU839
 2578 056e 40F8043B 		str	r3, [r0], #4
1431:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2579              		.loc 1 1431 7 is_stmt 1 view .LVU840
 2580              	.LBB432:
1431:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2581              		.loc 1 1431 12 view .LVU841
 2582              	.LVL215:
1431:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2583              		.loc 1 1431 25 discriminator 1 view .LVU842
1432:Src/app.c     ****     }
 2584              		.loc 1 1432 44 is_stmt 0 view .LVU843
ARM GAS  /tmp/ccddOyyT.s 			page 110


 2585 0572 FFF7FEFF 		bl	memcpy
 2586              	.LVL216:
 2587              	.L87:
1432:Src/app.c     ****     }
 2588              		.loc 1 1432 44 view .LVU844
 2589              	.LBE432:
1435:Src/app.c     ****     assert(ret == pdTRUE);
 2590              		.loc 1 1435 5 is_stmt 1 view .LVU845
1435:Src/app.c     ****     assert(ret == pdTRUE);
 2591              		.loc 1 1435 11 is_stmt 0 view .LVU846
 2592 0576 0023     		movs	r3, #0
 2593 0578 706D     		ldr	r0, [r6, #84]
 2594 057a 1A46     		mov	r2, r3
 2595 057c 1946     		mov	r1, r3
 2596 057e FFF7FEFF 		bl	xQueueGenericSend
 2597              	.LVL217:
1436:Src/app.c     **** 
 2598              		.loc 1 1436 5 is_stmt 1 view .LVU847
 2599 0582 0128     		cmp	r0, #1
 2600 0584 15D0     		beq	.L88
1436:Src/app.c     **** 
 2601              		.loc 1 1436 5 is_stmt 0 discriminator 1 view .LVU848
 2602 0586 40F29C51 		movw	r1, #1436
 2603 058a 174B     		ldr	r3, .L110+36
 2604 058c 1B4A     		ldr	r2, .L110+56
 2605 058e 6FE5     		b	.L107
 2606              	.LVL218:
 2607              	.L82:
1404:Src/app.c     ****     // NEW: Loop through all detections to find the highest confidence score
 2608              		.loc 1 1404 5 discriminator 1 view .LVU849
 2609 0590 40F27C51 		movw	r1, #1404
 2610 0594 144B     		ldr	r3, .L110+36
 2611 0596 194A     		ldr	r2, .L110+56
 2612 0598 6AE5     		b	.L107
 2613              	.LVL219:
 2614              	.L86:
 2615              	.LBB433:
1410:Src/app.c     ****         {
 2616              		.loc 1 1410 9 is_stmt 1 view .LVU850
1410:Src/app.c     ****         {
 2617              		.loc 1 1410 12 is_stmt 0 view .LVU851
 2618 059a 91ED047A 		vldr.32	s14, [r1, #16]
 2619 059e B4EEE77A 		vcmpe.f32	s14, s15
 2620 05a2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1412:Src/app.c     ****         }
 2621              		.loc 1 1412 11 is_stmt 1 view .LVU852
 2622 05a6 01F11801 		add	r1, r1, #24
1412:Src/app.c     ****         }
 2623              		.loc 1 1412 26 is_stmt 0 view .LVU853
 2624 05aa C8BF     		it	gt
 2625 05ac 51ED067A 		vldrgt.32	s15, [r1, #-24]
 2626              	.LVL220:
1407:Src/app.c     ****       {
 2627              		.loc 1 1407 56 is_stmt 1 discriminator 2 view .LVU854
 2628 05b0 B6E7     		b	.L83
 2629              	.LVL221:
 2630              	.L88:
ARM GAS  /tmp/ccddOyyT.s 			page 111


1407:Src/app.c     ****       {
 2631              		.loc 1 1407 56 is_stmt 0 discriminator 2 view .LVU855
 2632              	.LBE433:
1439:Src/app.c     ****   }
 2633              		.loc 1 1439 5 is_stmt 1 view .LVU856
 2634 05b2 0023     		movs	r3, #0
 2635 05b4 3068     		ldr	r0, [r6]
 2636              	.LVL222:
1439:Src/app.c     ****   }
 2637              		.loc 1 1439 5 is_stmt 0 view .LVU857
 2638 05b6 1A46     		mov	r2, r3
 2639 05b8 1946     		mov	r1, r3
 2640 05ba FFF7FEFF 		bl	xQueueGenericSend
 2641              	.LVL223:
 2642              	.LBE434:
1367:Src/app.c     ****   {
 2643              		.loc 1 1367 9 is_stmt 1 view .LVU858
 2644              	.LBB435:
1373:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 2645              		.loc 1 1373 18 is_stmt 0 discriminator 1 view .LVU859
 2646 05be 5E46     		mov	r6, fp
 2647              	.LBE435:
1368:Src/app.c     ****     uint8_t *capture_buffer;
 2648              		.loc 1 1368 3 view .LVU860
 2649 05c0 AEE5     		b	.L89
 2650              	.L111:
 2651 05c2 00BF     		.align	2
 2652              	.L110:
 2653 05c4 D0000000 		.word	.LC13
 2654 05c8 00000000 		.word	__func__.7
 2655 05cc FD000000 		.word	.LC14
 2656 05d0 0A010000 		.word	.LC15
 2657 05d4 18010000 		.word	.LC16
 2658 05d8 2E010000 		.word	.LC17
 2659 05dc 00ED00E0 		.word	-536810240
 2660 05e0 00000000 		.word	NN_Instance_face_landmark
 2661 05e4 00000000 		.word	ld_landmarks
 2662 05e8 00000000 		.word	.LC1
 2663 05ec 00000000 		.word	__func__.6
 2664 05f0 00000000 		.word	disp
 2665 05f4 00000000 		.word	0
 2666 05f8 0000A043 		.word	1134559232
 2667 05fc 00000000 		.word	__func__.12
 2668 0600 E8000000 		.word	disp+232
 2669              		.cfi_endproc
 2670              	.LFE7404:
 2672              		.section	.text.display_hand,"ax",%progbits
 2673              		.align	1
 2674              		.global	display_hand
 2675              		.syntax unified
 2676              		.thumb
 2677              		.thumb_func
 2679              	display_hand:
 2680              	.LVL224:
 2681              	.LFB7391:
 775:Src/app.c     ****   if (info->is_pd_displayed) {
 2682              		.loc 1 775 1 is_stmt 1 view -0
ARM GAS  /tmp/ccddOyyT.s 			page 112


 2683              		.cfi_startproc
 2684              		@ args = 0, pretend = 0, frame = 72
 2685              		@ frame_needed = 0, uses_anonymous_args = 0
 776:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2686              		.loc 1 776 3 view .LVU862
 775:Src/app.c     ****   if (info->is_pd_displayed) {
 2687              		.loc 1 775 1 is_stmt 0 view .LVU863
 2688 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2689              		.cfi_def_cfa_offset 28
 2690              		.cfi_offset 4, -28
 2691              		.cfi_offset 5, -24
 2692              		.cfi_offset 6, -20
 2693              		.cfi_offset 7, -16
 2694              		.cfi_offset 8, -12
 2695              		.cfi_offset 9, -8
 2696              		.cfi_offset 14, -4
 776:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2697              		.loc 1 776 6 view .LVU864
 2698 0004 8369     		ldr	r3, [r0, #24]
 775:Src/app.c     ****   if (info->is_pd_displayed) {
 2699              		.loc 1 775 1 view .LVU865
 2700 0006 0546     		mov	r5, r0
 2701 0008 0C46     		mov	r4, r1
 2702 000a 95B0     		sub	sp, sp, #84
 2703              		.cfi_def_cfa_offset 112
 776:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2704              		.loc 1 776 6 view .LVU866
 2705 000c 002B     		cmp	r3, #0
 2706 000e 00F08180 		beq	.L113
 777:Src/app.c     ****     display_roi(&hand->roi);
 2707              		.loc 1 777 5 is_stmt 1 view .LVU867
 2708              	.LVL225:
 2709              	.LBB441:
 2710              	.LBI441:
 642:Src/app.c     **** {
 2711              		.loc 1 642 13 view .LVU868
 2712              	.LBB442:
 644:Src/app.c     ****   int x0, y0;
 2713              		.loc 1 644 3 view .LVU869
 645:Src/app.c     ****   int x1, y1;
 2714              		.loc 1 645 3 view .LVU870
 646:Src/app.c     ****   int w, h;
 2715              		.loc 1 646 3 view .LVU871
 647:Src/app.c     ****   int i;
 2716              		.loc 1 647 3 view .LVU872
 648:Src/app.c     **** 
 2717              		.loc 1 648 3 view .LVU873
 651:Src/app.c     ****   yc = (int)hand->y_center;
 2718              		.loc 1 651 3 view .LVU874
 651:Src/app.c     ****   yc = (int)hand->y_center;
 2719              		.loc 1 651 6 is_stmt 0 view .LVU875
 2720 0012 D1ED027A 		vldr.32	s15, [r1, #8]
 2721 0016 FDEEE77A 		vcvt.s32.f32	s15, s15
 2722 001a 17EE900A 		vmov	r0, s15	@ int
 2723              	.LVL226:
 652:Src/app.c     ****   w = (int)hand->width;
 2724              		.loc 1 652 3 is_stmt 1 view .LVU876
ARM GAS  /tmp/ccddOyyT.s 			page 113


 652:Src/app.c     ****   w = (int)hand->width;
 2725              		.loc 1 652 6 is_stmt 0 view .LVU877
 2726 001e D1ED037A 		vldr.32	s15, [r1, #12]
 2727 0022 FDEEE77A 		vcvt.s32.f32	s15, s15
 2728 0026 17EE901A 		vmov	r1, s15	@ int
 2729              	.LVL227:
 653:Src/app.c     ****   h = (int)hand->height;
 2730              		.loc 1 653 3 is_stmt 1 view .LVU878
 654:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 2731              		.loc 1 654 3 view .LVU879
 654:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 2732              		.loc 1 654 5 is_stmt 0 view .LVU880
 2733 002a D4ED057A 		vldr.32	s15, [r4, #20]
 2734 002e FDEEE77A 		vcvt.s32.f32	s15, s15
 2735 0032 17EE903A 		vmov	r3, s15	@ int
 2736              	.LVL228:
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2737              		.loc 1 655 3 is_stmt 1 view .LVU881
 653:Src/app.c     ****   h = (int)hand->height;
 2738              		.loc 1 653 5 is_stmt 0 view .LVU882
 2739 0036 D4ED047A 		vldr.32	s15, [r4, #16]
 2740 003a FDEEE77A 		vcvt.s32.f32	s15, s15
 2741 003e 17EE902A 		vmov	r2, s15	@ int
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2742              		.loc 1 655 16 view .LVU883
 2743 0042 0132     		adds	r2, r2, #1
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2744              		.loc 1 655 21 view .LVU884
 2745 0044 02EBD272 		add	r2, r2, r2, lsr #31
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2746              		.loc 1 656 16 view .LVU885
 2747 0048 0133     		adds	r3, r3, #1
 2748              	.LVL229:
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2749              		.loc 1 655 21 view .LVU886
 2750 004a 5210     		asrs	r2, r2, #1
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2751              		.loc 1 656 21 view .LVU887
 2752 004c 03EBD373 		add	r3, r3, r3, lsr #31
 2753              	.LVL230:
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2754              		.loc 1 655 21 view .LVU888
 2755 0050 5242     		rsbs	r2, r2, #0
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2756              		.loc 1 656 21 view .LVU889
 2757 0052 5B10     		asrs	r3, r3, #1
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2758              		.loc 1 655 11 view .LVU890
 2759 0054 8618     		adds	r6, r0, r2
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2760              		.loc 1 656 21 view .LVU891
 2761 0056 5B42     		rsbs	r3, r3, #0
 657:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2762              		.loc 1 657 6 view .LVU892
 2763 0058 801A     		subs	r0, r0, r2
 2764              	.LVL231:
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
ARM GAS  /tmp/ccddOyyT.s 			page 114


 2765              		.loc 1 655 6 view .LVU893
 2766 005a 0296     		str	r6, [sp, #8]
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2767              		.loc 1 656 3 is_stmt 1 view .LVU894
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2768              		.loc 1 656 11 is_stmt 0 view .LVU895
 2769 005c CE18     		adds	r6, r1, r3
 658:Src/app.c     ****   clamp_point(&x0, &y0);
 2770              		.loc 1 658 6 view .LVU896
 2771 005e C91A     		subs	r1, r1, r3
 2772              	.LVL232:
 657:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2773              		.loc 1 657 6 view .LVU897
 2774 0060 0490     		str	r0, [sp, #16]
 658:Src/app.c     ****   clamp_point(&x0, &y0);
 2775              		.loc 1 658 6 view .LVU898
 2776 0062 0C91     		str	r1, [sp, #48]
 659:Src/app.c     ****   clamp_point(&x1, &y1);
 2777              		.loc 1 659 3 view .LVU899
 2778 0064 02A8     		add	r0, sp, #8
 2779 0066 03A9     		add	r1, sp, #12
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2780              		.loc 1 656 6 view .LVU900
 2781 0068 0396     		str	r6, [sp, #12]
 657:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2782              		.loc 1 657 3 is_stmt 1 view .LVU901
 658:Src/app.c     ****   clamp_point(&x0, &y0);
 2783              		.loc 1 658 3 view .LVU902
 659:Src/app.c     ****   clamp_point(&x1, &y1);
 2784              		.loc 1 659 3 view .LVU903
 2785 006a FFF7FEFF 		bl	clamp_point
 2786              	.LVL233:
 660:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 2787              		.loc 1 660 3 view .LVU904
 2788 006e 0CA9     		add	r1, sp, #48
 2789 0070 04A8     		add	r0, sp, #16
 2790 0072 FFF7FEFF 		bl	clamp_point
 2791              	.LVL234:
 661:Src/app.c     **** 
 2792              		.loc 1 661 3 view .LVU905
 2793 0076 DDE90201 		ldrd	r0, r1, [sp, #8]
 2794 007a 4FF0FF23 		mov	r3, #-16711936
 2795 007e 049A     		ldr	r2, [sp, #16]
 2796 0080 0093     		str	r3, [sp]
 2797 0082 0C9B     		ldr	r3, [sp, #48]
 2798 0084 121A     		subs	r2, r2, r0
 2799 0086 5B1A     		subs	r3, r3, r1
 2800 0088 FFF7FEFF 		bl	UTIL_LCD_DrawRect
 2801              	.LVL235:
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2802              		.loc 1 664 3 view .LVU906
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2803              		.loc 1 664 17 discriminator 1 view .LVU907
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2804              		.loc 1 664 10 is_stmt 0 view .LVU908
 2805 008c 0026     		movs	r6, #0
 2806              	.LBB443:
ARM GAS  /tmp/ccddOyyT.s 			page 115


 665:Src/app.c     **** 
 2807              		.loc 1 665 62 discriminator 3 view .LVU909
 2808 008e DFF8A080 		ldr	r8, .L127+4
 2809 0092 264F     		ldr	r7, .L127
 2810              	.LVL236:
 2811              	.L115:
 665:Src/app.c     **** 
 2812              		.loc 1 665 5 is_stmt 1 view .LVU910
 667:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2813              		.loc 1 667 25 is_stmt 0 view .LVU911
 2814 0094 A269     		ldr	r2, [r4, #24]
 665:Src/app.c     **** 
 2815              		.loc 1 665 62 discriminator 3 view .LVU912
 2816 0096 36F00203 		bics	r3, r6, #2
 667:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2817              		.loc 1 667 25 view .LVU913
 2818 009a 02EBC602 		add	r2, r2, r6, lsl #3
 667:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2819              		.loc 1 667 10 view .LVU914
 2820 009e D2ED007A 		vldr.32	s15, [r2]
 2821 00a2 FDEEE77A 		vcvt.s32.f32	s15, s15
 2822 00a6 CDED027A 		vstr.32	s15, [sp, #8]	@ int
 668:Src/app.c     ****     clamp_point(&x0, &y0);
 2823              		.loc 1 668 10 view .LVU915
 2824 00aa D2ED017A 		vldr.32	s15, [r2, #4]
 665:Src/app.c     **** 
 2825              		.loc 1 665 62 discriminator 3 view .LVU916
 2826 00ae 0CBF     		ite	eq
 2827 00b0 C146     		moveq	r9, r8
 2828 00b2 B946     		movne	r9, r7
 2829              	.LVL237:
 667:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2830              		.loc 1 667 5 is_stmt 1 view .LVU917
 668:Src/app.c     ****     clamp_point(&x0, &y0);
 2831              		.loc 1 668 5 view .LVU918
 668:Src/app.c     ****     clamp_point(&x0, &y0);
 2832              		.loc 1 668 10 is_stmt 0 view .LVU919
 2833 00b4 FDEEE77A 		vcvt.s32.f32	s15, s15
 669:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2834              		.loc 1 669 5 view .LVU920
 2835 00b8 03A9     		add	r1, sp, #12
 2836 00ba 02A8     		add	r0, sp, #8
 668:Src/app.c     ****     clamp_point(&x0, &y0);
 2837              		.loc 1 668 10 view .LVU921
 2838 00bc CDED037A 		vstr.32	s15, [sp, #12]	@ int
 669:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2839              		.loc 1 669 5 is_stmt 1 view .LVU922
 2840              	.LBE443:
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2841              		.loc 1 664 23 is_stmt 0 discriminator 2 view .LVU923
 2842 00c0 0136     		adds	r6, r6, #1
 2843              	.LVL238:
 2844              	.LBB444:
 669:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2845              		.loc 1 669 5 view .LVU924
 2846 00c2 FFF7FEFF 		bl	clamp_point
 2847              	.LVL239:
ARM GAS  /tmp/ccddOyyT.s 			page 116


 670:Src/app.c     ****   }
 2848              		.loc 1 670 5 is_stmt 1 view .LVU925
 2849 00c6 DDE90201 		ldrd	r0, r1, [sp, #8]
 2850 00ca 4B46     		mov	r3, r9
 2851 00cc 0222     		movs	r2, #2
 2852 00ce FFF7FEFF 		bl	UTIL_LCD_FillCircle
 2853              	.LVL240:
 2854              	.LBE444:
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2855              		.loc 1 664 23 discriminator 2 view .LVU926
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2856              		.loc 1 664 17 discriminator 1 view .LVU927
 2857 00d2 072E     		cmp	r6, #7
 2858 00d4 DED1     		bne	.L115
 2859              	.LVL241:
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2860              		.loc 1 664 17 is_stmt 0 discriminator 1 view .LVU928
 2861              	.LBE442:
 2862              	.LBE441:
 778:Src/app.c     ****   }
 2863              		.loc 1 778 5 is_stmt 1 view .LVU929
 2864              	.LBB445:
 2865              	.LBI445:
 719:Src/app.c     **** {
 2866              		.loc 1 719 13 view .LVU930
 2867              	.LBB446:
 721:Src/app.c     ****   int corners[4][2];
 2868              		.loc 1 721 3 view .LVU931
 722:Src/app.c     ****   int is_clamp;
 2869              		.loc 1 722 3 view .LVU932
 723:Src/app.c     ****   int i;
 2870              		.loc 1 723 3 view .LVU933
 724:Src/app.c     **** 
 2871              		.loc 1 724 3 view .LVU934
 727:Src/app.c     **** 
 2872              		.loc 1 727 3 view .LVU935
 2873 00d6 04A9     		add	r1, sp, #16
 2874 00d8 04F11C00 		add	r0, r4, #28
 2875              	.LVL242:
 727:Src/app.c     **** 
 2876              		.loc 1 727 3 is_stmt 0 view .LVU936
 2877 00dc FFF7FEFF 		bl	roi_to_corners
 2878              	.LVL243:
 730:Src/app.c     ****   if (is_clamp)
 2879              		.loc 1 730 3 is_stmt 1 view .LVU937
 730:Src/app.c     ****   if (is_clamp)
 2880              		.loc 1 730 14 is_stmt 0 view .LVU938
 2881 00e0 0CA9     		add	r1, sp, #48
 2882 00e2 04A8     		add	r0, sp, #16
 2883 00e4 FFF7FEFF 		bl	clamp_corners
 2884              	.LVL244:
 731:Src/app.c     ****     return ;
 2885              		.loc 1 731 3 is_stmt 1 view .LVU939
 2886 00e8 0CAF     		add	r7, sp, #48
 731:Src/app.c     ****     return ;
 2887              		.loc 1 731 6 is_stmt 0 view .LVU940
 2888 00ea 0646     		mov	r6, r0
ARM GAS  /tmp/ccddOyyT.s 			page 117


 2889 00ec 90B9     		cbnz	r0, .L113
 736:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2890              		.loc 1 736 5 view .LVU941
 2891 00ee DFF83C80 		ldr	r8, .L127
 2892              	.LVL245:
 2893              	.L117:
 736:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2894              		.loc 1 736 5 is_stmt 1 view .LVU942
 736:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2895              		.loc 1 736 64 is_stmt 0 view .LVU943
 2896 00f2 0136     		adds	r6, r6, #1
 2897              	.LVL246:
 736:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2898              		.loc 1 736 98 view .LVU944
 2899 00f4 14AB     		add	r3, sp, #80
 736:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2900              		.loc 1 736 69 view .LVU945
 2901 00f6 06F00302 		and	r2, r6, #3
 736:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2902              		.loc 1 736 5 view .LVU946
 2903 00fa CDF80080 		str	r8, [sp]
 736:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2904              		.loc 1 736 98 view .LVU947
 2905 00fe 03EBC202 		add	r2, r3, r2, lsl #3
 736:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2906              		.loc 1 736 5 view .LVU948
 2907 0102 7968     		ldr	r1, [r7, #4]
 2908 0104 52E90823 		ldrd	r2, r3, [r2, #-32]
 2909 0108 57F8080B 		ldr	r0, [r7], #8
 2910 010c FFF7FEFF 		bl	UTIL_LCD_DrawLine
 2911              	.LVL247:
 735:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2912              		.loc 1 735 23 is_stmt 1 discriminator 3 view .LVU949
 735:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2913              		.loc 1 735 17 discriminator 1 view .LVU950
 2914 0110 042E     		cmp	r6, #4
 2915 0112 EED1     		bne	.L117
 2916              	.LVL248:
 2917              	.L113:
 735:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2918              		.loc 1 735 17 is_stmt 0 discriminator 1 view .LVU951
 2919              	.LBE446:
 2920              	.LBE445:
 780:Src/app.c     ****     display_ld_hand(hand);
 2921              		.loc 1 780 3 is_stmt 1 view .LVU952
 780:Src/app.c     ****     display_ld_hand(hand);
 2922              		.loc 1 780 6 is_stmt 0 view .LVU953
 2923 0114 6B69     		ldr	r3, [r5, #20]
 2924 0116 2BB1     		cbz	r3, .L112
 781:Src/app.c     **** }
 2925              		.loc 1 781 5 is_stmt 1 view .LVU954
 2926 0118 2046     		mov	r0, r4
 782:Src/app.c     **** 
 2927              		.loc 1 782 1 is_stmt 0 view .LVU955
 2928 011a 15B0     		add	sp, sp, #84
 2929              		.cfi_remember_state
 2930              		.cfi_def_cfa_offset 28
ARM GAS  /tmp/ccddOyyT.s 			page 118


 2931              		@ sp needed
 2932 011c BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 2933              		.cfi_restore 14
 2934              		.cfi_restore 9
 2935              		.cfi_restore 8
 2936              		.cfi_restore 7
 2937              		.cfi_restore 6
 2938              		.cfi_restore 5
 2939              		.cfi_restore 4
 2940              		.cfi_def_cfa_offset 0
 2941              	.LVL249:
 781:Src/app.c     **** }
 2942              		.loc 1 781 5 view .LVU956
 2943 0120 FFF7FEBF 		b	display_ld_hand
 2944              	.LVL250:
 2945              	.L112:
 2946              		.cfi_restore_state
 782:Src/app.c     **** 
 2947              		.loc 1 782 1 view .LVU957
 2948 0124 15B0     		add	sp, sp, #84
 2949              		.cfi_def_cfa_offset 28
 2950              		@ sp needed
 2951 0126 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2952              	.LVL251:
 2953              	.L128:
 782:Src/app.c     **** 
 2954              		.loc 1 782 1 view .LVU958
 2955 012a 00BF     		.align	2
 2956              	.L127:
 2957 012c 0000FFFF 		.word	-65536
 2958 0130 FF0000FF 		.word	-16776961
 2959              		.cfi_endproc
 2960              	.LFE7391:
 2962              		.section	.rodata.dp_thread_fct.str1.1,"aMS",%progbits,1
 2963              	.LC18:
 2964 0000 72657420 		.ascii	"ret == HAL_OK\000"
 2964      3D3D2048 
 2964      414C5F4F 
 2964      4B00
 2965              		.global	__aeabi_ul2d
 2966              	.LC19:
 2967 000e 43707520 		.ascii	"Cpu load\000"
 2967      6C6F6164 
 2967      00
 2968              	.LC20:
 2969 0017 20202025 		.ascii	"   %.1f%%\000"
 2969      2E316625 
 2969      2500
 2970              	.LC21:
 2971 0021 496E6665 		.ascii	"Inferences\000"
 2971      72656E63 
 2971      657300
 2972              	.LC22:
 2973 002c 20706420 		.ascii	" pd %2ums\000"
 2973      2532756D 
 2973      7300
 2974              	.LC23:
ARM GAS  /tmp/ccddOyyT.s 			page 119


 2975 0036 20686C20 		.ascii	" hl %2ums\000"
 2975      2532756D 
 2975      7300
 2976              	.LC24:
 2977 0040 2020252E 		.ascii	"  %.1f FPS\000"
 2977      31662046 
 2977      505300
 2978              		.section	.text.dp_thread_fct,"ax",%progbits
 2979              		.align	1
 2980              		.syntax unified
 2981              		.thumb
 2982              		.thumb_func
 2984              	dp_thread_fct:
 2985              	.LVL252:
 2986              	.LFB7409:
1585:Src/app.c     ****   button_t ld_toggle_button;
 2987              		.loc 1 1585 1 is_stmt 1 view -0
 2988              		.cfi_startproc
 2989              		@ args = 0, pretend = 0, frame = 3864
 2990              		@ frame_needed = 0, uses_anonymous_args = 0
1586:Src/app.c     ****   button_t hd_toggle_button;
 2991              		.loc 1 1586 3 view .LVU960
1587:Src/app.c     ****   uint32_t disp_ms = 0;
 2992              		.loc 1 1587 3 view .LVU961
1588:Src/app.c     ****   display_info_t info;
 2993              		.loc 1 1588 3 view .LVU962
1589:Src/app.c     ****   uint32_t ts;
 2994              		.loc 1 1589 3 view .LVU963
1590:Src/app.c     ****   int ret;
 2995              		.loc 1 1590 3 view .LVU964
1591:Src/app.c     **** 
 2996              		.loc 1 1591 3 view .LVU965
1594:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
 2997              		.loc 1 1594 3 view .LVU966
1585:Src/app.c     ****   button_t ld_toggle_button;
 2998              		.loc 1 1585 1 is_stmt 0 view .LVU967
 2999 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3000              		.cfi_def_cfa_offset 36
 3001              		.cfi_offset 4, -36
 3002              		.cfi_offset 5, -32
 3003              		.cfi_offset 6, -28
 3004              		.cfi_offset 7, -24
 3005              		.cfi_offset 8, -20
 3006              		.cfi_offset 9, -16
 3007              		.cfi_offset 10, -12
 3008              		.cfi_offset 11, -8
 3009              		.cfi_offset 14, -4
 3010              	.LBB477:
 3011              	.LBB478:
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3012              		.loc 1 415 9 view .LVU968
 3013 0004 0021     		movs	r1, #0
 3014              	.LBE478:
 3015              	.LBE477:
1585:Src/app.c     ****   button_t ld_toggle_button;
 3016              		.loc 1 1585 1 view .LVU969
 3017 0006 2DED048B 		vpush.64	{d8, d9}
ARM GAS  /tmp/ccddOyyT.s 			page 120


 3018              		.cfi_def_cfa_offset 52
 3019              		.cfi_offset 80, -52
 3020              		.cfi_offset 81, -48
 3021              		.cfi_offset 82, -44
 3022              		.cfi_offset 83, -40
 3023              	.LBB482:
 3024              	.LBB479:
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3025              		.loc 1 415 9 view .LVU970
 3026 000a 0846     		mov	r0, r1
 3027              	.LVL253:
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3028              		.loc 1 415 9 view .LVU971
 3029              	.LBE479:
 3030              	.LBE482:
1585:Src/app.c     ****   button_t ld_toggle_button;
 3031              		.loc 1 1585 1 view .LVU972
 3032 000c ADF6247D 		subw	sp, sp, #3876
 3033              		.cfi_def_cfa_offset 3928
 3034              	.LVL254:
 3035              	.LBB483:
 3036              	.LBI477:
 411:Src/app.c     **** {
 3037              		.loc 1 411 13 is_stmt 1 view .LVU973
 3038              	.LBB480:
 413:Src/app.c     **** 
 3039              		.loc 1 413 3 view .LVU974
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3040              		.loc 1 415 3 view .LVU975
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3041              		.loc 1 415 9 is_stmt 0 view .LVU976
 3042 0010 FFF7FEFF 		bl	BSP_PB_Init
 3043              	.LVL255:
 416:Src/app.c     **** 
 3044              		.loc 1 416 3 is_stmt 1 view .LVU977
 3045 0014 0146     		mov	r1, r0
 3046 0016 08B1     		cbz	r0, .L130
 3047              	.LVL256:
 3048              	.L131:
 416:Src/app.c     **** 
 3049              		.loc 1 416 3 is_stmt 0 view .LVU978
 3050 0018 FFF7FEFF 		bl	button_init.part.0
 3051              	.LVL257:
 3052              	.L130:
 418:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3053              		.loc 1 418 3 is_stmt 1 view .LVU979
 419:Src/app.c     ****   b->prev_state = 0;
 3054              		.loc 1 419 23 is_stmt 0 view .LVU980
 3055 001c 984B     		ldr	r3, .L147+8
 421:Src/app.c     **** }
 3056              		.loc 1 421 14 view .LVU981
 3057 001e 994F     		ldr	r7, .L147+12
 420:Src/app.c     ****   b->cb_args = cb_args;
 3058              		.loc 1 420 17 view .LVU982
 3059 0020 CDE90403 		strd	r0, r3, [sp, #16]
 418:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3060              		.loc 1 418 16 view .LVU983
ARM GAS  /tmp/ccddOyyT.s 			page 121


 3061 0024 8DF80C00 		strb	r0, [sp, #12]
 419:Src/app.c     ****   b->prev_state = 0;
 3062              		.loc 1 419 3 is_stmt 1 view .LVU984
 421:Src/app.c     **** }
 3063              		.loc 1 421 3 view .LVU985
 3064              	.LBE480:
 3065              	.LBE483:
 3066              	.LBB484:
 3067              	.LBB485:
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3068              		.loc 1 415 9 is_stmt 0 view .LVU986
 3069 0028 0120     		movs	r0, #1
 3070              	.LVL258:
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3071              		.loc 1 415 9 view .LVU987
 3072              	.LBE485:
 3073              	.LBE484:
 3074              	.LBB489:
 3075              	.LBB481:
 421:Src/app.c     **** }
 3076              		.loc 1 421 14 view .LVU988
 3077 002a 0697     		str	r7, [sp, #24]
 3078              	.LVL259:
 421:Src/app.c     **** }
 3079              		.loc 1 421 14 view .LVU989
 3080              	.LBE481:
 3081              	.LBE489:
1595:Src/app.c     **** #else
 3082              		.loc 1 1595 3 is_stmt 1 view .LVU990
 3083              	.LBB490:
 3084              	.LBI484:
 411:Src/app.c     **** {
 3085              		.loc 1 411 13 view .LVU991
 3086              	.LBB486:
 413:Src/app.c     **** 
 3087              		.loc 1 413 3 view .LVU992
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3088              		.loc 1 415 3 view .LVU993
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3089              		.loc 1 415 9 is_stmt 0 view .LVU994
 3090 002c FFF7FEFF 		bl	BSP_PB_Init
 3091              	.LVL260:
 416:Src/app.c     **** 
 3092              		.loc 1 416 3 is_stmt 1 view .LVU995
 3093 0030 0028     		cmp	r0, #0
 3094 0032 F1D1     		bne	.L131
 418:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3095              		.loc 1 418 3 view .LVU996
 418:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3096              		.loc 1 418 16 is_stmt 0 view .LVU997
 3097 0034 0123     		movs	r3, #1
 3098              	.LBE486:
 3099              	.LBE490:
1588:Src/app.c     ****   display_info_t info;
 3100              		.loc 1 1588 12 view .LVU998
 3101 0036 0446     		mov	r4, r0
 3102              	.LBB491:
ARM GAS  /tmp/ccddOyyT.s 			page 122


 3103              	.LBB492:
 3104              	.LBB493:
 3105              	.LBB494:
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3106              		.loc 1 462 35 view .LVU999
 3107 0038 9FED8F9B 		vldr.64	d9, .L147
 3108              	.LBE494:
 3109              	.LBE493:
 3110              	.LBE492:
 3111              	.LBE491:
 3112              	.LBB504:
 3113              	.LBB487:
 418:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3114              		.loc 1 418 16 view .LVU1000
 3115 003c 8DF81C30 		strb	r3, [sp, #28]
 419:Src/app.c     ****   b->prev_state = 0;
 3116              		.loc 1 419 3 is_stmt 1 view .LVU1001
 419:Src/app.c     ****   b->prev_state = 0;
 3117              		.loc 1 419 23 is_stmt 0 view .LVU1002
 3118 0040 914B     		ldr	r3, .L147+16
 3119              	.LBE487:
 3120              	.LBE504:
 3121              	.LBB505:
 3122              	.LBB506:
1544:Src/app.c     ****   assert(ret == HAL_OK);
 3123              		.loc 1 1544 47 view .LVU1003
 3124 0042 DFF88C92 		ldr	r9, .L147+88
 3125              	.LBE506:
 3126              	.LBE505:
 3127              	.LBB512:
 3128              	.LBB488:
 420:Src/app.c     ****   b->cb_args = cb_args;
 3129              		.loc 1 420 17 view .LVU1004
 3130 0046 CDE90803 		strd	r0, r3, [sp, #32]
 421:Src/app.c     **** }
 3131              		.loc 1 421 3 is_stmt 1 view .LVU1005
 421:Src/app.c     **** }
 3132              		.loc 1 421 14 is_stmt 0 view .LVU1006
 3133 004a 0A97     		str	r7, [sp, #40]
 3134              	.LVL261:
 3135              	.L141:
 421:Src/app.c     **** }
 3136              		.loc 1 421 14 view .LVU1007
 3137              	.LBE488:
 3138              	.LBE512:
1600:Src/app.c     ****   {
 3139              		.loc 1 1600 3 is_stmt 1 view .LVU1008
1602:Src/app.c     ****     assert(ret == pdTRUE);
 3140              		.loc 1 1602 5 view .LVU1009
1602:Src/app.c     ****     assert(ret == pdTRUE);
 3141              		.loc 1 1602 11 is_stmt 0 view .LVU1010
 3142 004c 4FF0FF31 		mov	r1, #-1
 3143 0050 3868     		ldr	r0, [r7]
 3144 0052 FFF7FEFF 		bl	xQueueSemaphoreTake
 3145              	.LVL262:
1603:Src/app.c     **** 
 3146              		.loc 1 1603 5 is_stmt 1 view .LVU1011
ARM GAS  /tmp/ccddOyyT.s 			page 123


 3147 0056 0128     		cmp	r0, #1
 3148 0058 06D0     		beq	.L132
1603:Src/app.c     **** 
 3149              		.loc 1 1603 5 is_stmt 0 discriminator 1 view .LVU1012
 3150 005a 40F24361 		movw	r1, #1603
 3151 005e 8B4B     		ldr	r3, .L147+20
 3152 0060 8B4A     		ldr	r2, .L147+24
 3153              	.LVL263:
 3154              	.L146:
1609:Src/app.c     ****     info = disp.info;
 3155              		.loc 1 1609 5 discriminator 1 view .LVU1013
 3156 0062 8C48     		ldr	r0, .L147+28
 3157 0064 FFF7FEFF 		bl	__assert_func
 3158              	.LVL264:
 3159              	.L132:
1605:Src/app.c     ****     button_process(&hd_toggle_button);
 3160              		.loc 1 1605 5 is_stmt 1 view .LVU1014
 3161 0068 03A8     		add	r0, sp, #12
 3162              	.LVL265:
1605:Src/app.c     ****     button_process(&hd_toggle_button);
 3163              		.loc 1 1605 5 is_stmt 0 view .LVU1015
 3164 006a FFF7FEFF 		bl	button_process
 3165              	.LVL266:
1606:Src/app.c     **** 
 3166              		.loc 1 1606 5 is_stmt 1 view .LVU1016
 3167 006e 07A8     		add	r0, sp, #28
 3168 0070 FFF7FEFF 		bl	button_process
 3169              	.LVL267:
1608:Src/app.c     ****     assert(ret == pdTRUE);
 3170              		.loc 1 1608 5 view .LVU1017
1608:Src/app.c     ****     assert(ret == pdTRUE);
 3171              		.loc 1 1608 11 is_stmt 0 view .LVU1018
 3172 0074 4FF0FF31 		mov	r1, #-1
 3173 0078 786D     		ldr	r0, [r7, #84]
 3174 007a FFF7FEFF 		bl	xQueueSemaphoreTake
 3175              	.LVL268:
1609:Src/app.c     ****     info = disp.info;
 3176              		.loc 1 1609 5 is_stmt 1 view .LVU1019
 3177 007e 0128     		cmp	r0, #1
 3178 0080 04D0     		beq	.L133
1609:Src/app.c     ****     info = disp.info;
 3179              		.loc 1 1609 5 is_stmt 0 discriminator 1 view .LVU1020
 3180 0082 40F24961 		movw	r1, #1609
 3181 0086 814B     		ldr	r3, .L147+20
 3182 0088 814A     		ldr	r2, .L147+24
 3183 008a EAE7     		b	.L146
 3184              	.L133:
1610:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3185              		.loc 1 1610 5 is_stmt 1 view .LVU1021
1610:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3186              		.loc 1 1610 10 is_stmt 0 view .LVU1022
 3187 008c 40F6F462 		movw	r2, #3828
 3188 0090 8149     		ldr	r1, .L147+32
 3189 0092 0BA8     		add	r0, sp, #44
 3190              	.LVL269:
1610:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3191              		.loc 1 1610 10 view .LVU1023
ARM GAS  /tmp/ccddOyyT.s 			page 124


 3192 0094 FFF7FEFF 		bl	memcpy
 3193              	.LVL270:
1611:Src/app.c     ****     assert(ret == pdTRUE);
 3194              		.loc 1 1611 5 is_stmt 1 view .LVU1024
1611:Src/app.c     ****     assert(ret == pdTRUE);
 3195              		.loc 1 1611 11 is_stmt 0 view .LVU1025
 3196 0098 0023     		movs	r3, #0
 3197 009a 786D     		ldr	r0, [r7, #84]
 3198 009c 1A46     		mov	r2, r3
 3199 009e 1946     		mov	r1, r3
 3200 00a0 FFF7FEFF 		bl	xQueueGenericSend
 3201              	.LVL271:
1612:Src/app.c     ****     info.disp_ms = disp_ms;
 3202              		.loc 1 1612 5 view .LVU1026
 3203 00a4 0128     		cmp	r0, #1
1611:Src/app.c     ****     assert(ret == pdTRUE);
 3204              		.loc 1 1611 11 view .LVU1027
 3205 00a6 0546     		mov	r5, r0
 3206              	.LVL272:
1612:Src/app.c     ****     info.disp_ms = disp_ms;
 3207              		.loc 1 1612 5 is_stmt 1 view .LVU1028
 3208 00a8 04D0     		beq	.L134
1612:Src/app.c     ****     info.disp_ms = disp_ms;
 3209              		.loc 1 1612 5 is_stmt 0 discriminator 1 view .LVU1029
 3210 00aa 40F24C61 		movw	r1, #1612
 3211 00ae 774B     		ldr	r3, .L147+20
 3212 00b0 774A     		ldr	r2, .L147+24
 3213 00b2 D6E7     		b	.L146
 3214              	.L134:
1613:Src/app.c     **** 
 3215              		.loc 1 1613 5 is_stmt 1 view .LVU1030
1613:Src/app.c     **** 
 3216              		.loc 1 1613 18 is_stmt 0 view .LVU1031
 3217 00b4 0F94     		str	r4, [sp, #60]
1615:Src/app.c     ****     dp_update_drawing_area();
 3218              		.loc 1 1615 5 is_stmt 1 view .LVU1032
1615:Src/app.c     ****     dp_update_drawing_area();
 3219              		.loc 1 1615 10 is_stmt 0 view .LVU1033
 3220 00b6 FFF7FEFF 		bl	HAL_GetTick
 3221              	.LVL273:
1615:Src/app.c     ****     dp_update_drawing_area();
 3222              		.loc 1 1615 10 view .LVU1034
 3223 00ba 8246     		mov	r10, r0
 3224              	.LVL274:
1616:Src/app.c     ****     Display_NetworkOutput(&info);
 3225              		.loc 1 1616 5 is_stmt 1 view .LVU1035
 3226              	.LBB513:
 3227              	.LBI505:
1539:Src/app.c     **** {
 3228              		.loc 1 1539 13 view .LVU1036
 3229              	.LBB511:
1541:Src/app.c     **** 
 3230              		.loc 1 1541 3 view .LVU1037
1543:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
 3231              		.loc 1 1543 3 view .LVU1038
 3232              	.LBB507:
 3233              	.LBI507:
ARM GAS  /tmp/ccddOyyT.s 			page 125


 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  /tmp/ccddOyyT.s 			page 126


 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
ARM GAS  /tmp/ccddOyyT.s 			page 127


 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
ARM GAS  /tmp/ccddOyyT.s 			page 128


 443:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccddOyyT.s 			page 129


 500:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
ARM GAS  /tmp/ccddOyyT.s 			page 130


 557:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
ARM GAS  /tmp/ccddOyyT.s 			page 131


 614:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccddOyyT.s 			page 132


 671:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
ARM GAS  /tmp/ccddOyyT.s 			page 133


 728:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccddOyyT.s 			page 134


 785:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
ARM GAS  /tmp/ccddOyyT.s 			page 135


 842:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccddOyyT.s 			page 136


 899:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccddOyyT.s 			page 137


 956:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 3234              		.loc 4 960 27 view .LVU1039
 3235              	.LBB508:
 961:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 3236              		.loc 4 962 3 view .LVU1040
 3237              		.syntax unified
 3238              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3239 00bc 72B6     		cpsid i
 3240              	@ 0 "" 2
 3241              		.thumb
 3242              		.syntax unified
 3243              	.LBE508:
 3244              	.LBE507:
1544:Src/app.c     ****   assert(ret == HAL_OK);
 3245              		.loc 1 1544 3 view .LVU1041
1544:Src/app.c     ****   assert(ret == HAL_OK);
 3246              		.loc 1 1544 47 is_stmt 0 view .LVU1042
 3247 00be DFF81482 		ldr	r8, .L147+92
 3248 00c2 D9F80030 		ldr	r3, [r9]
1544:Src/app.c     ****   assert(ret == HAL_OK);
 3249              		.loc 1 1544 9 view .LVU1043
 3250 00c6 7548     		ldr	r0, .L147+36
 3251              	.LVL275:
1544:Src/app.c     ****   assert(ret == HAL_OK);
 3252              		.loc 1 1544 9 view .LVU1044
 3253 00c8 2946     		mov	r1, r5
 3254 00ca 00FB0380 		mla	r0, r0, r3, r8
 3255 00ce FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 3256              	.LVL276:
1545:Src/app.c     ****   __enable_irq();
 3257              		.loc 1 1545 3 is_stmt 1 view .LVU1045
 3258 00d2 8346     		mov	fp, r0
 3259 00d4 20B1     		cbz	r0, .L135
1545:Src/app.c     ****   __enable_irq();
 3260              		.loc 1 1545 3 is_stmt 0 discriminator 1 view .LVU1046
 3261 00d6 40F20961 		movw	r1, #1545
 3262 00da 714B     		ldr	r3, .L147+40
 3263 00dc 714A     		ldr	r2, .L147+44
 3264 00de C0E7     		b	.L146
 3265              	.L135:
1546:Src/app.c     **** }
 3266              		.loc 1 1546 3 is_stmt 1 view .LVU1047
 3267              	.LBB509:
 3268              	.LBI509:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3269              		.loc 4 949 27 view .LVU1048
 3270              	.LBB510:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3271              		.loc 4 951 3 view .LVU1049
 3272              		.syntax unified
 3273              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3274 00e0 62B6     		cpsie i
ARM GAS  /tmp/ccddOyyT.s 			page 138


 3275              	@ 0 "" 2
 3276              	.LVL277:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3277              		.loc 4 951 3 is_stmt 0 view .LVU1050
 3278              		.thumb
 3279              		.syntax unified
 3280              	.LBE510:
 3281              	.LBE509:
 3282              	.LBE511:
 3283              	.LBE513:
1617:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
 3284              		.loc 1 1617 5 is_stmt 1 view .LVU1051
 3285              	.LBB514:
 3286              	.LBI491:
 784:Src/app.c     **** {
 3287              		.loc 1 784 13 view .LVU1052
 3288              	.LBB503:
 786:Src/app.c     ****   int line_nb = 0;
 3289              		.loc 1 786 3 view .LVU1053
 787:Src/app.c     ****   float nn_fps;
 3290              		.loc 1 787 3 view .LVU1054
 788:Src/app.c     ****   int i;
 3291              		.loc 1 788 3 view .LVU1055
 789:Src/app.c     **** 
 3292              		.loc 1 789 3 view .LVU1056
 792:Src/app.c     **** 
 3293              		.loc 1 792 3 view .LVU1057
 3294              	.LBB496:
 3295              	.LBB497:
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3296              		.loc 1 443 24 is_stmt 0 view .LVU1058
 3297 00e2 714C     		ldr	r4, .L147+48
 3298              	.LVL278:
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3299              		.loc 1 443 24 view .LVU1059
 3300              	.LBE497:
 3301              	.LBE496:
 792:Src/app.c     **** 
 3302              		.loc 1 792 3 view .LVU1060
 3303 00e4 4FF4F073 		mov	r3, #480
 3304 00e8 4FF44872 		mov	r2, #800
 3305 00ec 0146     		mov	r1, r0
 3306 00ee 0090     		str	r0, [sp]
 3307              	.LBB500:
 3308              	.LBB498:
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3309              		.loc 1 443 24 view .LVU1061
 3310 00f0 04F13805 		add	r5, r4, #56
 3311              	.LVL279:
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3312              		.loc 1 443 24 view .LVU1062
 3313 00f4 04F12006 		add	r6, r4, #32
 3314              	.LBE498:
 3315              	.LBE500:
 792:Src/app.c     **** 
 3316              		.loc 1 792 3 view .LVU1063
 3317 00f8 FFF7FEFF 		bl	UTIL_LCD_FillRect
ARM GAS  /tmp/ccddOyyT.s 			page 139


 3318              	.LVL280:
 795:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 3319              		.loc 1 795 3 is_stmt 1 view .LVU1064
 3320              	.LBB501:
 3321              	.LBI496:
 439:Src/app.c     **** {
 3322              		.loc 1 439 13 view .LVU1065
 3323              	.LBB499:
 441:Src/app.c     **** 
 3324              		.loc 1 441 3 view .LVU1066
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3325              		.loc 1 443 3 view .LVU1067
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3326              		.loc 1 443 24 is_stmt 0 view .LVU1068
 3327 00fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3328 00fe 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3329 0100 96E80300 		ldm	r6, {r0, r1}
 3330 0104 85E80300 		stm	r5, {r0, r1}
 444:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3331              		.loc 1 444 3 is_stmt 1 view .LVU1069
 444:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3332              		.loc 1 444 32 is_stmt 0 view .LVU1070
 3333 0108 FFF7FEFF 		bl	TIM4_Get_Value
 3334              	.LVL281:
 3335 010c 0546     		mov	r5, r0
 444:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3336              		.loc 1 444 30 discriminator 1 view .LVU1071
 3337 010e C4E9080B 		strd	r0, fp, [r4, #32]
 445:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3338              		.loc 1 445 3 is_stmt 1 view .LVU1072
 445:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3339              		.loc 1 445 62 is_stmt 0 view .LVU1073
 3340 0112 FFF7FEFF 		bl	ulTaskGetIdleRunTimeCounter
 3341              	.LVL282:
 445:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3342              		.loc 1 445 60 discriminator 1 view .LVU1074
 3343 0116 2D1A     		subs	r5, r5, r0
 3344 0118 63EB0303 		sbc	r3, r3, r3
 445:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3345              		.loc 1 445 31 discriminator 1 view .LVU1075
 3346 011c C4E90A53 		strd	r5, r3, [r4, #40]
 446:Src/app.c     **** 
 3347              		.loc 1 446 3 is_stmt 1 view .LVU1076
 446:Src/app.c     **** 
 3348              		.loc 1 446 31 is_stmt 0 view .LVU1077
 3349 0120 FFF7FEFF 		bl	HAL_GetTick
 3350              	.LVL283:
 448:Src/app.c     ****     return ;
 3351              		.loc 1 448 33 view .LVU1078
 3352 0124 A36C     		ldr	r3, [r4, #72]
 3353 0126 226E     		ldr	r2, [r4, #96]
 446:Src/app.c     **** 
 3354              		.loc 1 446 29 discriminator 1 view .LVU1079
 3355 0128 2063     		str	r0, [r4, #48]
 448:Src/app.c     ****     return ;
 3356              		.loc 1 448 3 is_stmt 1 view .LVU1080
 448:Src/app.c     ****     return ;
ARM GAS  /tmp/ccddOyyT.s 			page 140


 3357              		.loc 1 448 33 is_stmt 0 view .LVU1081
 3358 012a 9B1A     		subs	r3, r3, r2
 448:Src/app.c     ****     return ;
 3359              		.loc 1 448 6 view .LVU1082
 3360 012c B3F57A7F 		cmp	r3, #1000
 3361 0130 06D3     		bcc	.L136
 452:Src/app.c     **** }
 3362              		.loc 1 452 55 view .LVU1083
 3363 0132 9022     		movs	r2, #144
 3364 0134 04F13801 		add	r1, r4, #56
 3365 0138 04F15000 		add	r0, r4, #80
 3366 013c FFF7FEFF 		bl	memmove
 3367              	.LVL284:
 3368              	.L136:
 452:Src/app.c     **** }
 3369              		.loc 1 452 55 view .LVU1084
 3370              	.LBE499:
 3371              	.LBE501:
 796:Src/app.c     **** 
 3372              		.loc 1 796 3 is_stmt 1 view .LVU1085
 3373              	.LBB502:
 3374              	.LBI493:
 455:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 3375              		.loc 1 455 13 view .LVU1086
 3376              	.LBB495:
 458:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 3377              		.loc 1 458 3 view .LVU1087
 461:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 3378              		.loc 1 461 3 view .LVU1088
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3379              		.loc 1 462 5 view .LVU1089
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3380              		.loc 1 462 66 is_stmt 0 view .LVU1090
 3381 0140 D4E91C23 		ldrd	r2, r3, [r4, #112]
 3382 0144 D4E91601 		ldrd	r0, r1, [r4, #88]
 3383 0148 801A     		subs	r0, r0, r2
 3384 014a 61EB0301 		sbc	r1, r1, r3
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3385              		.loc 1 462 35 view .LVU1091
 3386 014e FFF7FEFF 		bl	__aeabi_ul2d
 3387              	.LVL285:
 463:Src/app.c     ****   if (cpu_load_last_five_seconds)
 3388              		.loc 1 463 50 view .LVU1092
 3389 0152 D4E91A32 		ldrd	r3, r2, [r4, #104]
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3390              		.loc 1 462 35 view .LVU1093
 3391 0156 41EC180B 		vmov	d8, r0, r1
 463:Src/app.c     ****   if (cpu_load_last_five_seconds)
 3392              		.loc 1 463 50 view .LVU1094
 3393 015a D4E91401 		ldrd	r0, r1, [r4, #80]
 3394 015e C01A     		subs	r0, r0, r3
 3395 0160 61EB0201 		sbc	r1, r1, r2
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3396              		.loc 1 462 97 view .LVU1095
 3397 0164 FFF7FEFF 		bl	__aeabi_ul2d
 3398              	.LVL286:
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
ARM GAS  /tmp/ccddOyyT.s 			page 141


 3399              		.loc 1 462 35 view .LVU1096
 3400 0168 28EE098B 		vmul.f64	d8, d8, d9
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3401              		.loc 1 462 97 view .LVU1097
 3402 016c 41EC160B 		vmov	d6, r0, r1
 3403 0170 88EE067B 		vdiv.f64	d7, d8, d6
 3404 0174 B7EEC78B 		vcvt.f32.f64	s16, d7
 3405              	.LVL287:
 464:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 3406              		.loc 1 464 3 is_stmt 1 view .LVU1098
 464:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 3407              		.loc 1 464 3 is_stmt 0 view .LVU1099
 3408              	.LBE495:
 3409              	.LBE502:
 799:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 3410              		.loc 1 799 3 is_stmt 1 view .LVU1100
 799:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 3411              		.loc 1 799 10 is_stmt 0 view .LVU1101
 3412 0178 DDED0B7A 		vldr.32	s15, [sp, #44]
 3413 017c 9FED4B7A 		vldr.32	s14, .L147+52
 3414 0180 C7EE278A 		vdiv.f32	s17, s14, s15
 3415              	.LVL288:
 800:Src/app.c     ****   line_nb += 1;
 3416              		.loc 1 800 3 is_stmt 1 view .LVU1102
 800:Src/app.c     ****   line_nb += 1;
 3417              		.loc 1 800 26 is_stmt 0 view .LVU1103
 3418 0184 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3419              	.LVL289:
 800:Src/app.c     ****   line_nb += 1;
 3420              		.loc 1 800 3 discriminator 1 view .LVU1104
 3421 0188 0021     		movs	r1, #0
 3422 018a 0222     		movs	r2, #2
 3423 018c 0846     		mov	r0, r1
 3424 018e 484B     		ldr	r3, .L147+56
 3425 0190 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3426              	.LVL290:
 801:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 3427              		.loc 1 801 3 is_stmt 1 view .LVU1105
 802:Src/app.c     ****   line_nb += 2;
 3428              		.loc 1 802 3 view .LVU1106
 802:Src/app.c     ****   line_nb += 2;
 3429              		.loc 1 802 26 is_stmt 0 view .LVU1107
 3430 0194 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3431              	.LVL291:
 802:Src/app.c     ****   line_nb += 2;
 3432              		.loc 1 802 3 discriminator 1 view .LVU1108
 3433 0198 B7EEC87A 		vcvt.f64.f32	d7, s16
 3434 019c C188     		ldrh	r1, [r0, #6]
 3435 019e 0222     		movs	r2, #2
 3436 01a0 8DED007B 		vstr.64	d7, [sp]
 3437 01a4 434B     		ldr	r3, .L147+60
 3438 01a6 0020     		movs	r0, #0
 3439 01a8 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3440              	.LVL292:
 803:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 3441              		.loc 1 803 3 is_stmt 1 view .LVU1109
 804:Src/app.c     ****   line_nb += 1;
ARM GAS  /tmp/ccddOyyT.s 			page 142


 3442              		.loc 1 804 3 view .LVU1110
 804:Src/app.c     ****   line_nb += 1;
 3443              		.loc 1 804 26 is_stmt 0 view .LVU1111
 3444 01ac FFF7FEFF 		bl	UTIL_LCD_GetFont
 3445              	.LVL293:
 804:Src/app.c     ****   line_nb += 1;
 3446              		.loc 1 804 26 discriminator 1 view .LVU1112
 3447 01b0 C188     		ldrh	r1, [r0, #6]
 804:Src/app.c     ****   line_nb += 1;
 3448              		.loc 1 804 3 discriminator 1 view .LVU1113
 3449 01b2 0222     		movs	r2, #2
 3450 01b4 404B     		ldr	r3, .L147+64
 3451 01b6 01EB4101 		add	r1, r1, r1, lsl #1
 3452 01ba 0020     		movs	r0, #0
 3453 01bc FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3454              	.LVL294:
 805:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " pd %2ums", info->pd_ms);
 3455              		.loc 1 805 3 is_stmt 1 view .LVU1114
 806:Src/app.c     ****   line_nb += 1;
 3456              		.loc 1 806 3 view .LVU1115
 806:Src/app.c     ****   line_nb += 1;
 3457              		.loc 1 806 26 is_stmt 0 view .LVU1116
 3458 01c0 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3459              	.LVL295:
 806:Src/app.c     ****   line_nb += 1;
 3460              		.loc 1 806 3 discriminator 1 view .LVU1117
 3461 01c4 0222     		movs	r2, #2
 806:Src/app.c     ****   line_nb += 1;
 3462              		.loc 1 806 26 discriminator 1 view .LVU1118
 3463 01c6 C188     		ldrh	r1, [r0, #6]
 806:Src/app.c     ****   line_nb += 1;
 3464              		.loc 1 806 3 discriminator 1 view .LVU1119
 3465 01c8 0C9B     		ldr	r3, [sp, #48]
 3466 01ca 9140     		lsls	r1, r1, r2
 3467 01cc 0020     		movs	r0, #0
 3468 01ce 0093     		str	r3, [sp]
 3469 01d0 3A4B     		ldr	r3, .L147+68
 3470 01d2 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3471              	.LVL296:
 807:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " hl %2ums", info->hl_ms);
 3472              		.loc 1 807 3 is_stmt 1 view .LVU1120
 808:Src/app.c     ****   line_nb += 2;
 3473              		.loc 1 808 3 view .LVU1121
 808:Src/app.c     ****   line_nb += 2;
 3474              		.loc 1 808 26 is_stmt 0 view .LVU1122
 3475 01d6 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3476              	.LVL297:
 808:Src/app.c     ****   line_nb += 2;
 3477              		.loc 1 808 3 discriminator 1 view .LVU1123
 3478 01da 0D9B     		ldr	r3, [sp, #52]
 808:Src/app.c     ****   line_nb += 2;
 3479              		.loc 1 808 26 discriminator 1 view .LVU1124
 3480 01dc C188     		ldrh	r1, [r0, #6]
 808:Src/app.c     ****   line_nb += 2;
 3481              		.loc 1 808 3 discriminator 1 view .LVU1125
 3482 01de 0222     		movs	r2, #2
 3483 01e0 01EB8101 		add	r1, r1, r1, lsl #2
ARM GAS  /tmp/ccddOyyT.s 			page 143


 3484 01e4 0020     		movs	r0, #0
 3485 01e6 0093     		str	r3, [sp]
 3486 01e8 354B     		ldr	r3, .L147+72
 3487 01ea FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3488              	.LVL298:
 809:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 3489              		.loc 1 809 3 is_stmt 1 view .LVU1126
 810:Src/app.c     ****   line_nb += 2;
 3490              		.loc 1 810 3 view .LVU1127
 810:Src/app.c     ****   line_nb += 2;
 3491              		.loc 1 810 26 is_stmt 0 view .LVU1128
 3492 01ee FFF7FEFF 		bl	UTIL_LCD_GetFont
 3493              	.LVL299:
 810:Src/app.c     ****   line_nb += 2;
 3494              		.loc 1 810 3 discriminator 1 view .LVU1129
 3495 01f2 B7EEE87A 		vcvt.f64.f32	d7, s17
 810:Src/app.c     ****   line_nb += 2;
 3496              		.loc 1 810 26 discriminator 1 view .LVU1130
 3497 01f6 C188     		ldrh	r1, [r0, #6]
 810:Src/app.c     ****   line_nb += 2;
 3498              		.loc 1 810 3 discriminator 1 view .LVU1131
 3499 01f8 324B     		ldr	r3, .L147+76
 3500 01fa 8DED007B 		vstr.64	d7, [sp]
 3501 01fe 0222     		movs	r2, #2
 3502 0200 0020     		movs	r0, #0
 3503 0202 C1EBC101 		rsb	r1, r1, r1, lsl #3
 3504 0206 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3505              	.LVL300:
 811:Src/app.c     ****   if (DBG_INFO) {
 3506              		.loc 1 811 3 is_stmt 1 view .LVU1132
 812:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 3507              		.loc 1 812 3 view .LVU1133
 820:Src/app.c     ****     if (info->hands[i].is_valid)
 3508              		.loc 1 820 3 view .LVU1134
 820:Src/app.c     ****     if (info->hands[i].is_valid)
 3509              		.loc 1 820 17 discriminator 1 view .LVU1135
 3510 020a 129B     		ldr	r3, [sp, #72]
 3511 020c 002B     		cmp	r3, #0
 3512 020e 05DD     		ble	.L137
 821:Src/app.c     ****       display_hand(info, &info->hands[i]);
 3513              		.loc 1 821 5 view .LVU1136
 821:Src/app.c     ****       display_hand(info, &info->hands[i]);
 3514              		.loc 1 821 8 is_stmt 0 view .LVU1137
 3515 0210 149B     		ldr	r3, [sp, #80]
 3516 0212 1BB1     		cbz	r3, .L137
 822:Src/app.c     ****   }
 3517              		.loc 1 822 7 is_stmt 1 view .LVU1138
 3518 0214 14A9     		add	r1, sp, #80
 3519 0216 0BA8     		add	r0, sp, #44
 3520              	.LVL301:
 822:Src/app.c     ****   }
 3521              		.loc 1 822 7 is_stmt 0 view .LVU1139
 3522 0218 FFF7FEFF 		bl	display_hand
 3523              	.LVL302:
 820:Src/app.c     ****     if (info->hands[i].is_valid)
 3524              		.loc 1 820 38 is_stmt 1 discriminator 2 view .LVU1140
 820:Src/app.c     ****     if (info->hands[i].is_valid)
ARM GAS  /tmp/ccddOyyT.s 			page 144


 3525              		.loc 1 820 17 discriminator 1 view .LVU1141
 3526              	.L137:
 825:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 3527              		.loc 1 825 3 view .LVU1142
 825:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 3528              		.loc 1 825 3 is_stmt 0 view .LVU1143
 3529              	.LBE503:
 3530              	.LBE514:
1618:Src/app.c     ****     dp_commit_drawing_area();
 3531              		.loc 1 1618 5 is_stmt 1 view .LVU1144
 3532              	.LBB515:
 3533              	.LBI515:
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3534              		.loc 3 388 27 view .LVU1145
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3535              		.loc 3 391 5 view .LVU1146
 3536              	.LBB516:
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3537              		.loc 3 392 8 view .LVU1147
 3538              	.LBE516:
 3539              	.LBE515:
1618:Src/app.c     ****     dp_commit_drawing_area();
 3540              		.loc 1 1618 42 is_stmt 0 view .LVU1148
 3541 021c D9F80030 		ldr	r3, [r9]
 3542 0220 1E4A     		ldr	r2, .L147+36
 3543 0222 02FB0383 		mla	r3, r2, r3, r8
 3544              	.LVL303:
 3545              	.LBB524:
 3546              	.LBB523:
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3547              		.loc 3 393 7 is_stmt 1 view .LVU1149
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3548              		.loc 3 395 7 view .LVU1150
 3549              	.LBB517:
 3550              	.LBI517:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3551              		.loc 4 269 27 view .LVU1151
 3552              	.LBB518:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3553              		.loc 4 271 3 view .LVU1152
 3554              		.syntax unified
 3555              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3556 0226 BFF34F8F 		dsb 0xF
 3557              	@ 0 "" 2
 3558              		.thumb
 3559              		.syntax unified
 3560              	.LBE518:
 3561              	.LBE517:
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3562              		.loc 3 398 22 is_stmt 0 view .LVU1153
 3563 022a 45F6C05E 		movw	lr, #24000
 3564 022e 4EF001E0 		dls	lr, lr
 3565 0232 254A     		ldr	r2, .L147+80
 3566              	.LVL304:
 3567              	.L139:
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 3568              		.loc 3 397 7 is_stmt 1 view .LVU1154
ARM GAS  /tmp/ccddOyyT.s 			page 145


 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3569              		.loc 3 398 9 view .LVU1155
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3570              		.loc 3 398 22 is_stmt 0 view .LVU1156
 3571 0234 C2F86832 		str	r3, [r2, #616]
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3572              		.loc 3 399 9 is_stmt 1 view .LVU1157
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3573              		.loc 3 399 17 is_stmt 0 view .LVU1158
 3574 0238 2033     		adds	r3, r3, #32
 3575              	.LVL305:
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3576              		.loc 3 400 9 is_stmt 1 view .LVU1159
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3577              		.loc 3 401 25 discriminator 1 view .LVU1160
 3578 023a 0FF005C8 		le	lr, .L139
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3579              		.loc 3 403 7 view .LVU1161
 3580              	.LBB519:
 3581              	.LBI519:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3582              		.loc 4 269 27 view .LVU1162
 3583              	.LBB520:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3584              		.loc 4 271 3 view .LVU1163
 3585              		.syntax unified
 3586              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3587 023e BFF34F8F 		dsb 0xF
 3588              	@ 0 "" 2
 3589              		.thumb
 3590              		.syntax unified
 3591              	.LBE520:
 3592              	.LBE519:
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 3593              		.loc 3 404 7 view .LVU1164
 3594              	.LBB521:
 3595              	.LBI521:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3596              		.loc 4 258 27 view .LVU1165
 3597              	.LBB522:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3598              		.loc 4 260 3 view .LVU1166
 3599              		.syntax unified
 3600              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3601 0242 BFF36F8F 		isb 0xF
 3602              	@ 0 "" 2
 3603              	.LVL306:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3604              		.loc 4 260 3 is_stmt 0 view .LVU1167
 3605              		.thumb
 3606              		.syntax unified
 3607              	.LBE522:
 3608              	.LBE521:
 3609              	.LBE523:
 3610              	.LBE524:
1619:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
 3611              		.loc 1 1619 5 is_stmt 1 view .LVU1168
ARM GAS  /tmp/ccddOyyT.s 			page 146


 3612              	.LBB525:
 3613              	.LBI525:
1549:Src/app.c     **** {
 3614              		.loc 1 1549 13 view .LVU1169
 3615              	.LBB526:
1551:Src/app.c     **** 
 3616              		.loc 1 1551 3 view .LVU1170
1553:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
 3617              		.loc 1 1553 3 view .LVU1171
 3618              	.LBB527:
 3619              	.LBI527:
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3620              		.loc 4 960 27 view .LVU1172
 3621              	.LBB528:
 3622              		.loc 4 962 3 view .LVU1173
 3623              		.syntax unified
 3624              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3625 0246 72B6     		cpsid i
 3626              	@ 0 "" 2
 3627              		.thumb
 3628              		.syntax unified
 3629              	.LBE528:
 3630              	.LBE527:
1554:Src/app.c     ****   assert(ret == HAL_OK);
 3631              		.loc 1 1554 3 view .LVU1174
1554:Src/app.c     ****   assert(ret == HAL_OK);
 3632              		.loc 1 1554 9 is_stmt 0 view .LVU1175
 3633 0248 0120     		movs	r0, #1
 3634 024a FFF7FEFF 		bl	SCRL_ReloadLayer
 3635              	.LVL307:
1555:Src/app.c     ****   __enable_irq();
 3636              		.loc 1 1555 3 is_stmt 1 view .LVU1176
 3637 024e 20B1     		cbz	r0, .L140
1555:Src/app.c     ****   __enable_irq();
 3638              		.loc 1 1555 3 is_stmt 0 discriminator 1 view .LVU1177
 3639 0250 40F21361 		movw	r1, #1555
 3640 0254 124B     		ldr	r3, .L147+40
 3641 0256 1D4A     		ldr	r2, .L147+84
 3642 0258 03E7     		b	.L146
 3643              	.L140:
1556:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
 3644              		.loc 1 1556 3 is_stmt 1 view .LVU1178
 3645              	.LBB529:
 3646              	.LBI529:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3647              		.loc 4 949 27 view .LVU1179
 3648              	.LBB530:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3649              		.loc 4 951 3 view .LVU1180
 3650              		.syntax unified
 3651              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3652 025a 62B6     		cpsie i
 3653              	@ 0 "" 2
 3654              		.thumb
 3655              		.syntax unified
 3656              	.LBE530:
 3657              	.LBE529:
ARM GAS  /tmp/ccddOyyT.s 			page 147


1557:Src/app.c     **** }
 3658              		.loc 1 1557 3 view .LVU1181
1557:Src/app.c     **** }
 3659              		.loc 1 1557 28 is_stmt 0 view .LVU1182
 3660 025c D9F80030 		ldr	r3, [r9]
 3661 0260 C3F10103 		rsb	r3, r3, #1
1557:Src/app.c     **** }
 3662              		.loc 1 1557 24 view .LVU1183
 3663 0264 C9F80030 		str	r3, [r9]
 3664              	.LVL308:
1557:Src/app.c     **** }
 3665              		.loc 1 1557 24 view .LVU1184
 3666              	.LBE526:
 3667              	.LBE525:
1620:Src/app.c     ****   }
 3668              		.loc 1 1620 5 is_stmt 1 view .LVU1185
1620:Src/app.c     ****   }
 3669              		.loc 1 1620 15 is_stmt 0 view .LVU1186
 3670 0268 FFF7FEFF 		bl	HAL_GetTick
 3671              	.LVL309:
1620:Src/app.c     ****   }
 3672              		.loc 1 1620 13 discriminator 1 view .LVU1187
 3673 026c A0EB0A04 		sub	r4, r0, r10
 3674              	.LVL310:
1600:Src/app.c     ****   {
 3675              		.loc 1 1600 9 is_stmt 1 view .LVU1188
1602:Src/app.c     ****     assert(ret == pdTRUE);
 3676              		.loc 1 1602 9 is_stmt 0 view .LVU1189
 3677 0270 ECE6     		b	.L141
 3678              	.L148:
 3679 0272 00BFAFF3 		.align	3
 3679      0080
 3680              	.L147:
 3681 0278 00000000 		.word	0
 3682 027c 00005940 		.word	1079574528
 3683 0280 00000000 		.word	on_ld_toggle_button_click
 3684 0284 00000000 		.word	disp
 3685 0288 00000000 		.word	on_pd_toggle_button_click
 3686 028c 00000000 		.word	.LC1
 3687 0290 00000000 		.word	__func__.18
 3688 0294 0E000000 		.word	.LC2
 3689 0298 A8000000 		.word	disp+168
 3690 029c 00B80B00 		.word	768000
 3691 02a0 00000000 		.word	.LC18
 3692 02a4 00000000 		.word	__func__.14
 3693 02a8 00000000 		.word	cpu_load
 3694 02ac 00007A44 		.word	1148846080
 3695 02b0 0E000000 		.word	.LC19
 3696 02b4 17000000 		.word	.LC20
 3697 02b8 21000000 		.word	.LC21
 3698 02bc 2C000000 		.word	.LC22
 3699 02c0 36000000 		.word	.LC23
 3700 02c4 40000000 		.word	.LC24
 3701 02c8 00ED00E0 		.word	-536810240
 3702 02cc 00000000 		.word	__func__.13
 3703 02d0 00000000 		.word	lcd_fg_buffer_rd_idx
 3704 02d4 00181500 		.word	lcd_fg_buffer
ARM GAS  /tmp/ccddOyyT.s 			page 148


 3705              		.cfi_endproc
 3706              	.LFE7409:
 3708              		.section	.rodata.app_run.str1.1,"aMS",%progbits,1
 3709              	.LC25:
 3710 0000 496E6974 		.ascii	"Init application\000"
 3710      20617070 
 3710      6C696361 
 3710      74696F6E 
 3710      00
 3711              	.LC26:
 3712 0011 6973705F 		.ascii	"isp_sem\000"
 3712      73656D00 
 3713              	.LC27:
 3714 0019 64697370 		.ascii	"disp.update\000"
 3714      2E757064 
 3714      61746500 
 3715              	.LC28:
 3716 0025 64697370 		.ascii	"disp.lock\000"
 3716      2E6C6F63 
 3716      6B00
 3717              	.LC29:
 3718 002f 6E6E00   		.ascii	"nn\000"
 3719              	.LC30:
 3720 0032 68646C20 		.ascii	"hdl != NULL\000"
 3720      213D204E 
 3720      554C4C00 
 3721              	.LC31:
 3722 003e 647000   		.ascii	"dp\000"
 3723              	.LC32:
 3724 0041 69737000 		.ascii	"isp\000"
 3725              		.section	.text.app_run,"ax",%progbits
 3726              		.align	1
 3727              		.global	app_run
 3728              		.syntax unified
 3729              		.thumb
 3730              		.thumb_func
 3732              	app_run:
 3733              	.LFB7412:
1633:Src/app.c     ****   }
1634:Src/app.c     **** }
1635:Src/app.c     **** 
1636:Src/app.c     **** static void Display_init()
1637:Src/app.c     **** {
1638:Src/app.c     ****   SCRL_LayerConfig layers_config[2] = {
1639:Src/app.c     ****     {
1640:Src/app.c     ****       .origin = {lcd_bg_area.X0, lcd_bg_area.Y0},
1641:Src/app.c     ****       .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1642:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1643:Src/app.c     ****       .format = SCRL_RGB888,
1644:Src/app.c     **** #else
1645:Src/app.c     ****       .format = SCRL_ARGB8888,
1646:Src/app.c     **** #endif
1647:Src/app.c     ****       .address = lcd_bg_buffer[lcd_bg_buffer_disp_idx],
1648:Src/app.c     ****     },
1649:Src/app.c     ****     {
1650:Src/app.c     ****       .origin = {lcd_fg_area.X0, lcd_fg_area.Y0},
1651:Src/app.c     ****       .size = {lcd_fg_area.XSize, lcd_fg_area.YSize},
ARM GAS  /tmp/ccddOyyT.s 			page 149


1652:Src/app.c     ****       .format = SCRL_ARGB4444,
1653:Src/app.c     ****       .address = lcd_fg_buffer[1],
1654:Src/app.c     ****     },
1655:Src/app.c     ****   };
1656:Src/app.c     ****   SCRL_ScreenConfig screen_config = {
1657:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1658:Src/app.c     **** #ifdef SCR_LIB_USE_SPI
1659:Src/app.c     ****     .format = SCRL_RGB565,
1660:Src/app.c     **** #else
1661:Src/app.c     ****      .format = SCRL_YUV422, /* Use SCRL_RGB565 if host support this format to reduce cpu load */
1662:Src/app.c     **** #endif
1663:Src/app.c     ****     .address = screen_buffer,
1664:Src/app.c     ****     .fps = CAMERA_FPS,
1665:Src/app.c     ****   };
1666:Src/app.c     ****   int ret;
1667:Src/app.c     **** 
1668:Src/app.c     ****   ret = SCRL_Init((SCRL_LayerConfig *[2]){&layers_config[0], &layers_config[1]}, &screen_config);
1669:Src/app.c     ****   assert(ret == 0);
1670:Src/app.c     **** 
1671:Src/app.c     ****   UTIL_LCD_SetLayer(SCRL_LAYER_1);
1672:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
1673:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
1674:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
1675:Src/app.c     **** }
1676:Src/app.c     **** 
1677:Src/app.c     **** void app_run()
1678:Src/app.c     **** {
 3734              		.loc 1 1678 1 is_stmt 1 view -0
 3735              		.cfi_startproc
 3736              		@ args = 0, pretend = 0, frame = 56
 3737              		@ frame_needed = 0, uses_anonymous_args = 0
1679:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3738              		.loc 1 1679 3 view .LVU1191
 3739              	.LVL311:
1680:Src/app.c     ****   UBaseType_t dp_priority = FREERTOS_PRIORITY(-2);
 3740              		.loc 1 1680 3 view .LVU1192
1681:Src/app.c     ****   UBaseType_t nn_priority = FREERTOS_PRIORITY(1);
 3741              		.loc 1 1681 3 view .LVU1193
1682:Src/app.c     ****   TaskHandle_t hdl;
 3742              		.loc 1 1682 3 view .LVU1194
1683:Src/app.c     ****   int ret;
 3743              		.loc 1 1683 3 view .LVU1195
1684:Src/app.c     **** 
1685:Src/app.c     ****   printf("Init application\n");
 3744              		.loc 1 1685 3 view .LVU1196
1678:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3745              		.loc 1 1678 1 is_stmt 0 view .LVU1197
 3746 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3747              		.cfi_def_cfa_offset 28
 3748              		.cfi_offset 4, -28
 3749              		.cfi_offset 5, -24
 3750              		.cfi_offset 6, -20
 3751              		.cfi_offset 7, -16
 3752              		.cfi_offset 8, -12
 3753              		.cfi_offset 9, -8
 3754              		.cfi_offset 14, -4
1686:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
ARM GAS  /tmp/ccddOyyT.s 			page 150


1687:Src/app.c     ****   CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 3755              		.loc 1 1687 12 view .LVU1198
 3756 0004 854D     		ldr	r5, .L169
1678:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3757              		.loc 1 1678 1 view .LVU1199
 3758 0006 93B0     		sub	sp, sp, #76
 3759              		.cfi_def_cfa_offset 104
1685:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
 3760              		.loc 1 1685 3 view .LVU1200
 3761 0008 8548     		ldr	r0, .L169+4
 3762 000a FFF7FEFF 		bl	puts
 3763              	.LVL312:
 3764              		.loc 1 1687 3 is_stmt 1 view .LVU1201
 3765              		.loc 1 1687 12 is_stmt 0 view .LVU1202
 3766 000e D5F8FC30 		ldr	r3, [r5, #252]
1688:Src/app.c     **** 
1689:Src/app.c     ****   /* screen init */
1690:Src/app.c     ****   memset(lcd_bg_buffer, 0, sizeof(lcd_bg_buffer));
 3767              		.loc 1 1690 3 view .LVU1203
 3768 0012 844C     		ldr	r4, .L169+8
1687:Src/app.c     **** 
 3769              		.loc 1 1687 20 view .LVU1204
 3770 0014 43F08073 		orr	r3, r3, #16777216
 3771              		.loc 1 1690 3 view .LVU1205
 3772 0018 0021     		movs	r1, #0
 3773 001a 2046     		mov	r0, r4
 3774 001c 824A     		ldr	r2, .L169+12
1687:Src/app.c     **** 
 3775              		.loc 1 1687 20 view .LVU1206
 3776 001e C5F8FC30 		str	r3, [r5, #252]
 3777              		.loc 1 1690 3 is_stmt 1 view .LVU1207
 3778 0022 FFF7FEFF 		bl	memset
 3779              	.LVL313:
1691:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_bg_buffer, sizeof(lcd_bg_buffer)));
 3780              		.loc 1 1691 3 view .LVU1208
 3781              		.loc 1 1691 3 view .LVU1209
 3782              		.loc 1 1691 3 discriminator 1 view .LVU1210
 3783              	.LBB553:
 3784              	.LBI553:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3785              		.loc 3 418 27 view .LVU1211
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3786              		.loc 3 421 5 view .LVU1212
 3787              	.LBB554:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3788              		.loc 3 422 8 view .LVU1213
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3789              		.loc 3 423 7 view .LVU1214
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3790              		.loc 3 425 7 view .LVU1215
 3791              	.LBB555:
 3792              	.LBI555:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3793              		.loc 4 269 27 view .LVU1216
 3794              	.LBB556:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3795              		.loc 4 271 3 view .LVU1217
ARM GAS  /tmp/ccddOyyT.s 			page 151


 3796              		.syntax unified
 3797              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3798 0026 BFF34F8F 		dsb 0xF
 3799              	@ 0 "" 2
 3800              		.thumb
 3801              		.syntax unified
 3802              	.LBE556:
 3803              	.LBE555:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3804              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1218
 3805 002a DFF880E2 		ldr	lr, .L169+144
 3806              	.LBB558:
 3807              	.LBB557:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3808              		.loc 4 272 1 view .LVU1219
 3809 002e 0023     		movs	r3, #0
 3810              	.LBE557:
 3811              	.LBE558:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3812              		.loc 3 431 25 discriminator 1 view .LVU1220
 3813 0030 4EF001E0 		dls	lr, lr
 3814              	.LVL314:
 3815              	.L150:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3816              		.loc 3 431 25 discriminator 1 view .LVU1221
 3817 0034 E218     		adds	r2, r4, r3
 3818              	.LVL315:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 3819              		.loc 3 427 7 is_stmt 1 view .LVU1222
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3820              		.loc 3 428 9 view .LVU1223
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3821              		.loc 3 428 23 is_stmt 0 view .LVU1224
 3822 0036 C5F87022 		str	r2, [r5, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 3823              		.loc 3 429 9 is_stmt 1 view .LVU1225
 3824              	.LVL316:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3825              		.loc 3 430 9 view .LVU1226
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3826              		.loc 3 431 25 discriminator 1 view .LVU1227
 3827 003a 2033     		adds	r3, r3, #32
 3828              	.LVL317:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3829              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1228
 3830 003c 0FF007C0 		le	lr, .L150
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3831              		.loc 3 433 7 is_stmt 1 view .LVU1229
 3832              	.LBB559:
 3833              	.LBI559:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3834              		.loc 4 269 27 view .LVU1230
 3835              	.LBB560:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3836              		.loc 4 271 3 view .LVU1231
 3837              		.syntax unified
 3838              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccddOyyT.s 			page 152


 3839 0040 BFF34F8F 		dsb 0xF
 3840              	@ 0 "" 2
 3841              		.thumb
 3842              		.syntax unified
 3843              	.LBE560:
 3844              	.LBE559:
 3845              		.loc 3 434 7 view .LVU1232
 3846              	.LBB561:
 3847              	.LBI561:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3848              		.loc 4 258 27 view .LVU1233
 3849              	.LBB562:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3850              		.loc 4 260 3 view .LVU1234
 3851              		.syntax unified
 3852              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3853 0044 BFF36F8F 		isb 0xF
 3854              	@ 0 "" 2
 3855              	.LVL318:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3856              		.loc 4 260 3 is_stmt 0 view .LVU1235
 3857              		.thumb
 3858              		.syntax unified
 3859              	.LBE562:
 3860              	.LBE561:
 3861              	.LBE554:
 3862              	.LBE553:
 3863              		.loc 1 1691 3 is_stmt 1 discriminator 3 view .LVU1236
1692:Src/app.c     ****   memset(lcd_fg_buffer, 0, sizeof(lcd_fg_buffer));
 3864              		.loc 1 1692 3 view .LVU1237
 3865 0048 784D     		ldr	r5, .L169+16
 3866 004a 0021     		movs	r1, #0
 3867 004c 2846     		mov	r0, r5
 3868 004e 784A     		ldr	r2, .L169+20
 3869 0050 FFF7FEFF 		bl	memset
 3870              	.LVL319:
1693:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_fg_buffer, sizeof(lcd_fg_buffer)));
 3871              		.loc 1 1693 3 view .LVU1238
 3872              		.loc 1 1693 3 view .LVU1239
 3873              		.loc 1 1693 3 discriminator 1 view .LVU1240
 3874              	.LBB563:
 3875              	.LBI563:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3876              		.loc 3 418 27 view .LVU1241
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3877              		.loc 3 421 5 view .LVU1242
 3878              	.LBB564:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3879              		.loc 3 422 8 view .LVU1243
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3880              		.loc 3 423 7 view .LVU1244
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3881              		.loc 3 425 7 view .LVU1245
 3882              	.LBB565:
 3883              	.LBI565:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3884              		.loc 4 269 27 view .LVU1246
ARM GAS  /tmp/ccddOyyT.s 			page 153


 3885              	.LBB566:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3886              		.loc 4 271 3 view .LVU1247
 3887              		.syntax unified
 3888              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3889 0054 BFF34F8F 		dsb 0xF
 3890              	@ 0 "" 2
 3891              		.thumb
 3892              		.syntax unified
 3893              	.LBE566:
 3894              	.LBE565:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3895              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1248
 3896 0058 4BF6803E 		movw	lr, #48000
 3897              	.LBB568:
 3898              	.LBB567:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3899              		.loc 4 272 1 view .LVU1249
 3900 005c 0023     		movs	r3, #0
 3901              	.LBE567:
 3902              	.LBE568:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3903              		.loc 3 431 25 discriminator 1 view .LVU1250
 3904 005e 4EF001E0 		dls	lr, lr
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3905              		.loc 3 428 23 view .LVU1251
 3906 0062 6E4A     		ldr	r2, .L169
 3907              	.LVL320:
 3908              	.L151:
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3909              		.loc 3 428 23 view .LVU1252
 3910 0064 E918     		adds	r1, r5, r3
 3911              	.LVL321:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 3912              		.loc 3 427 7 is_stmt 1 view .LVU1253
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3913              		.loc 3 428 9 view .LVU1254
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3914              		.loc 3 428 23 is_stmt 0 view .LVU1255
 3915 0066 C2F87012 		str	r1, [r2, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 3916              		.loc 3 429 9 is_stmt 1 view .LVU1256
 3917              	.LVL322:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3918              		.loc 3 430 9 view .LVU1257
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3919              		.loc 3 431 25 discriminator 1 view .LVU1258
 3920 006a 2033     		adds	r3, r3, #32
 3921              	.LVL323:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3922              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1259
 3923 006c 0FF007C0 		le	lr, .L151
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3924              		.loc 3 433 7 is_stmt 1 view .LVU1260
 3925              	.LBB569:
 3926              	.LBI569:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccddOyyT.s 			page 154


 3927              		.loc 4 269 27 view .LVU1261
 3928              	.LBB570:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3929              		.loc 4 271 3 view .LVU1262
 3930              		.syntax unified
 3931              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3932 0070 BFF34F8F 		dsb 0xF
 3933              	@ 0 "" 2
 3934              		.thumb
 3935              		.syntax unified
 3936              	.LBE570:
 3937              	.LBE569:
 3938              		.loc 3 434 7 view .LVU1263
 3939              	.LBB571:
 3940              	.LBI571:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3941              		.loc 4 258 27 view .LVU1264
 3942              	.LBB572:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3943              		.loc 4 260 3 view .LVU1265
 3944              		.syntax unified
 3945              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3946 0074 BFF36F8F 		isb 0xF
 3947              	@ 0 "" 2
 3948              	.LVL324:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3949              		.loc 4 260 3 is_stmt 0 view .LVU1266
 3950              		.thumb
 3951              		.syntax unified
 3952              	.LBE572:
 3953              	.LBE571:
 3954              	.LBE564:
 3955              	.LBE563:
 3956              		.loc 1 1693 3 is_stmt 1 discriminator 3 view .LVU1267
1694:Src/app.c     ****   Display_init();
 3957              		.loc 1 1694 3 view .LVU1268
 3958              	.LBB573:
 3959              	.LBI573:
1636:Src/app.c     **** {
 3960              		.loc 1 1636 13 view .LVU1269
 3961              	.LBB574:
1638:Src/app.c     ****     {
 3962              		.loc 1 1638 3 view .LVU1270
1638:Src/app.c     ****     {
 3963              		.loc 1 1638 20 is_stmt 0 view .LVU1271
 3964 0078 0320     		movs	r0, #3
 3965 007a 0021     		movs	r1, #0
 3966 007c 0126     		movs	r6, #1
1656:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3967              		.loc 1 1656 21 view .LVU1272
 3968 007e 0227     		movs	r7, #2
 3969 0080 4FF01E09 		mov	r9, #30
1638:Src/app.c     ****     {
 3970              		.loc 1 1638 20 view .LVU1273
 3971 0084 8DF83000 		strb	r0, [sp, #48]
1647:Src/app.c     ****     },
 3972              		.loc 1 1647 31 view .LVU1274
ARM GAS  /tmp/ccddOyyT.s 			page 155


 3973 0088 6A48     		ldr	r0, .L169+24
1638:Src/app.c     ****     {
 3974              		.loc 1 1638 20 view .LVU1275
 3975 008a 6B4A     		ldr	r2, .L169+28
1647:Src/app.c     ****     },
 3976              		.loc 1 1647 18 view .LVU1276
 3977 008c 0068     		ldr	r0, [r0]
1638:Src/app.c     ****     {
 3978              		.loc 1 1638 20 view .LVU1277
 3979 008e CDE90A12 		strd	r1, r2, [sp, #40]
1647:Src/app.c     ****     },
 3980              		.loc 1 1647 18 view .LVU1278
 3981 0092 03FB0044 		mla	r4, r3, r0, r4
1638:Src/app.c     ****     {
 3982              		.loc 1 1638 20 view .LVU1279
 3983 0096 694B     		ldr	r3, .L169+32
 3984 0098 CDE90D41 		strd	r4, r1, [sp, #52]
 3985 009c 1193     		str	r3, [sp, #68]
1656:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3986              		.loc 1 1656 3 is_stmt 1 view .LVU1280
1656:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3987              		.loc 1 1656 21 is_stmt 0 view .LVU1281
 3988 009e 684B     		ldr	r3, .L169+36
1668:Src/app.c     ****   assert(ret == 0);
 3989              		.loc 1 1668 9 view .LVU1282
 3990 00a0 06A9     		add	r1, sp, #24
1656:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3991              		.loc 1 1656 21 view .LVU1283
 3992 00a2 0893     		str	r3, [sp, #32]
1668:Src/app.c     ****   assert(ret == 0);
 3993              		.loc 1 1668 42 view .LVU1284
 3994 00a4 0AAB     		add	r3, sp, #40
 3995 00a6 0493     		str	r3, [sp, #16]
1668:Src/app.c     ****   assert(ret == 0);
 3996              		.loc 1 1668 9 view .LVU1285
 3997 00a8 04A8     		add	r0, sp, #16
1668:Src/app.c     ****   assert(ret == 0);
 3998              		.loc 1 1668 42 view .LVU1286
 3999 00aa 0EAB     		add	r3, sp, #56
1638:Src/app.c     ****     {
 4000              		.loc 1 1638 20 view .LVU1287
 4001 00ac 0F92     		str	r2, [sp, #60]
 4002 00ae 8DF84060 		strb	r6, [sp, #64]
1656:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 4003              		.loc 1 1656 21 view .LVU1288
 4004 00b2 0692     		str	r2, [sp, #24]
 4005 00b4 8DF81C70 		strb	r7, [sp, #28]
 4006 00b8 ADF82490 		strh	r9, [sp, #36]	@ movhi
1666:Src/app.c     **** 
 4007              		.loc 1 1666 3 is_stmt 1 view .LVU1289
1668:Src/app.c     ****   assert(ret == 0);
 4008              		.loc 1 1668 3 view .LVU1290
1668:Src/app.c     ****   assert(ret == 0);
 4009              		.loc 1 1668 42 is_stmt 0 view .LVU1291
 4010 00bc 0593     		str	r3, [sp, #20]
1668:Src/app.c     ****   assert(ret == 0);
 4011              		.loc 1 1668 9 view .LVU1292
ARM GAS  /tmp/ccddOyyT.s 			page 156


 4012 00be FFF7FEFF 		bl	SCRL_Init
 4013              	.LVL325:
1669:Src/app.c     **** 
 4014              		.loc 1 1669 3 is_stmt 1 view .LVU1293
 4015 00c2 0446     		mov	r4, r0
 4016 00c4 30B1     		cbz	r0, .L152
1669:Src/app.c     **** 
 4017              		.loc 1 1669 3 is_stmt 0 discriminator 1 view .LVU1294
 4018 00c6 40F28561 		movw	r1, #1669
 4019 00ca 5E4B     		ldr	r3, .L169+40
 4020 00cc 5E4A     		ldr	r2, .L169+44
 4021              	.LVL326:
 4022              	.L168:
1669:Src/app.c     **** 
 4023              		.loc 1 1669 3 discriminator 1 view .LVU1295
 4024              	.LBE574:
 4025              	.LBE573:
1695:Src/app.c     **** 
1696:Src/app.c     ****   /* create buffer queues */
1697:Src/app.c     ****   ret = bqueue_init(&nn_input_queue, 2, (uint8_t *[2]){nn_input_buffers[0], nn_input_buffers[1]});
1698:Src/app.c     ****   assert(ret == 0);
 4026              		.loc 1 1698 3 discriminator 1 view .LVU1296
 4027 00ce 5F48     		ldr	r0, .L169+48
 4028 00d0 FFF7FEFF 		bl	__assert_func
 4029              	.LVL327:
 4030              	.L152:
 4031              	.LBB577:
 4032              	.LBB575:
1671:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 4033              		.loc 1 1671 3 is_stmt 1 view .LVU1297
 4034 00d4 3046     		mov	r0, r6
 4035              	.LVL328:
1671:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 4036              		.loc 1 1671 3 is_stmt 0 view .LVU1298
 4037 00d6 FFF7FEFF 		bl	UTIL_LCD_SetLayer
 4038              	.LVL329:
1672:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
 4039              		.loc 1 1672 3 is_stmt 1 view .LVU1299
 4040 00da 2046     		mov	r0, r4
 4041 00dc FFF7FEFF 		bl	UTIL_LCD_Clear
 4042              	.LVL330:
1673:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 4043              		.loc 1 1673 3 view .LVU1300
 4044              	.LBE575:
 4045              	.LBE577:
 4046              	.LBB578:
 4047              	.LBB579:
 476:Src/app.c     ****   if (!bq->free)
 4048              		.loc 1 476 14 is_stmt 0 view .LVU1301
 4049 00e0 DFF8CC81 		ldr	r8, .L169+148
 4050              	.LBE579:
 4051              	.LBE578:
 4052              	.LBB584:
 4053              	.LBB576:
1673:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 4054              		.loc 1 1673 3 view .LVU1302
 4055 00e4 5A48     		ldr	r0, .L169+52
ARM GAS  /tmp/ccddOyyT.s 			page 157


 4056 00e6 FFF7FEFF 		bl	UTIL_LCD_SetFont
 4057              	.LVL331:
1674:Src/app.c     **** }
 4058              		.loc 1 1674 3 is_stmt 1 view .LVU1303
 4059 00ea 4FF0FF30 		mov	r0, #-1
 4060 00ee FFF7FEFF 		bl	UTIL_LCD_SetTextColor
 4061              	.LVL332:
1674:Src/app.c     **** }
 4062              		.loc 1 1674 3 is_stmt 0 view .LVU1304
 4063              	.LBE576:
 4064              	.LBE584:
1697:Src/app.c     ****   assert(ret == 0);
 4065              		.loc 1 1697 3 is_stmt 1 view .LVU1305
 4066              	.LBB585:
 4067              	.LBI578:
 469:Src/app.c     **** {
 4068              		.loc 1 469 12 view .LVU1306
 4069              	.LBB580:
 471:Src/app.c     **** 
 4070              		.loc 1 471 3 view .LVU1307
 473:Src/app.c     ****     return -1;
 4071              		.loc 1 473 3 view .LVU1308
 476:Src/app.c     ****   if (!bq->free)
 4072              		.loc 1 476 3 view .LVU1309
 476:Src/app.c     ****   if (!bq->free)
 4073              		.loc 1 476 14 is_stmt 0 view .LVU1310
 4074 00f2 4246     		mov	r2, r8
 4075 00f4 3946     		mov	r1, r7
 4076 00f6 3846     		mov	r0, r7
 4077 00f8 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4078              	.LVL333:
 476:Src/app.c     ****   if (!bq->free)
 4079              		.loc 1 476 12 discriminator 1 view .LVU1311
 4080 00fc A8F10405 		sub	r5, r8, #4
 4081 0100 48F8040C 		str	r0, [r8, #-4]
 477:Src/app.c     ****     goto free_sem_error;
 4082              		.loc 1 477 3 is_stmt 1 view .LVU1312
 477:Src/app.c     ****     goto free_sem_error;
 4083              		.loc 1 477 6 is_stmt 0 view .LVU1313
 4084 0104 58B1     		cbz	r0, .L153
 479:Src/app.c     ****   if (!bq->ready)
 4085              		.loc 1 479 3 is_stmt 1 view .LVU1314
 479:Src/app.c     ****   if (!bq->ready)
 4086              		.loc 1 479 15 is_stmt 0 view .LVU1315
 4087 0106 2146     		mov	r1, r4
 4088 0108 3846     		mov	r0, r7
 4089 010a 08F15402 		add	r2, r8, #84
 4090 010e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4091              	.LVL334:
 479:Src/app.c     ****   if (!bq->ready)
 4092              		.loc 1 479 13 discriminator 1 view .LVU1316
 4093 0112 6865     		str	r0, [r5, #84]
 480:Src/app.c     ****     goto ready_sem_error;
 4094              		.loc 1 480 3 is_stmt 1 view .LVU1317
 480:Src/app.c     ****     goto ready_sem_error;
 4095              		.loc 1 480 6 is_stmt 0 view .LVU1318
 4096 0114 40B9     		cbnz	r0, .L154
ARM GAS  /tmp/ccddOyyT.s 			page 158


 481:Src/app.c     **** 
 4097              		.loc 1 481 5 is_stmt 1 view .LVU1319
 4098              	.LDL1:
 494:Src/app.c     **** free_sem_error:
 4099              		.loc 1 494 3 view .LVU1320
 4100 0116 58F8040C 		ldr	r0, [r8, #-4]
 4101 011a FFF7FEFF 		bl	vQueueDelete
 4102              	.LVL335:
 494:Src/app.c     **** free_sem_error:
 4103              		.loc 1 494 3 is_stmt 0 view .LVU1321
 4104              	.LBE580:
 4105              	.LBE585:
 4106              		.loc 1 1698 3 is_stmt 1 view .LVU1322
 4107              	.L153:
 4108              		.loc 1 1698 3 is_stmt 0 discriminator 1 view .LVU1323
 4109 011e 40F2A261 		movw	r1, #1698
 4110 0122 484B     		ldr	r3, .L169+40
 4111 0124 4B4A     		ldr	r2, .L169+56
 4112 0126 D2E7     		b	.L168
 4113              	.LVL336:
 4114              	.L154:
 4115              	.LBB586:
 4116              	.LBB581:
 483:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 4117              		.loc 1 483 3 is_stmt 1 view .LVU1324
 486:Src/app.c     ****   }
 4118              		.loc 1 486 20 is_stmt 0 view .LVU1325
 4119 0128 4B4B     		ldr	r3, .L169+60
 4120              	.LBE581:
 4121              	.LBE586:
 4122              	.LBB587:
 4123              	.LBB588:
 436:Src/app.c     **** }
 4124              		.loc 1 436 3 view .LVU1326
 4125 012a E022     		movs	r2, #224
 4126 012c 2146     		mov	r1, r4
 4127              	.LBE588:
 4128              	.LBE587:
 4129              	.LBB591:
 4130              	.LBB582:
 486:Src/app.c     ****   }
 4131              		.loc 1 486 20 view .LVU1327
 4132 012e C5F8AC30 		str	r3, [r5, #172]
 4133              	.LBE582:
 4134              	.LBE591:
 4135              	.LBB592:
 4136              	.LBB589:
 436:Src/app.c     **** }
 4137              		.loc 1 436 3 view .LVU1328
 4138 0132 4A48     		ldr	r0, .L169+64
 4139              	.LBE589:
 4140              	.LBE592:
 4141              	.LBB593:
 4142              	.LBB583:
 486:Src/app.c     ****   }
 4143              		.loc 1 486 20 view .LVU1329
 4144 0134 03F59623 		add	r3, r3, #307200
ARM GAS  /tmp/ccddOyyT.s 			page 159


 488:Src/app.c     ****   bq->ready_idx = 0;
 4145              		.loc 1 488 16 view .LVU1330
 4146 0138 C5E92C34 		strd	r3, r4, [r5, #176]
 483:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 4147              		.loc 1 483 17 view .LVU1331
 4148 013c C5F8A870 		str	r7, [r5, #168]
 484:Src/app.c     ****     assert(buffers[i]);
 4149              		.loc 1 484 3 is_stmt 1 view .LVU1332
 4150              	.LVL337:
 484:Src/app.c     ****     assert(buffers[i]);
 4151              		.loc 1 484 17 discriminator 1 view .LVU1333
 485:Src/app.c     ****     bq->buffers[i] = buffers[i];
 4152              		.loc 1 485 5 view .LVU1334
 486:Src/app.c     ****   }
 4153              		.loc 1 486 5 view .LVU1335
 484:Src/app.c     ****     assert(buffers[i]);
 4154              		.loc 1 484 31 discriminator 2 view .LVU1336
 484:Src/app.c     ****     assert(buffers[i]);
 4155              		.loc 1 484 17 discriminator 1 view .LVU1337
 485:Src/app.c     ****     bq->buffers[i] = buffers[i];
 4156              		.loc 1 485 5 view .LVU1338
 486:Src/app.c     ****   }
 4157              		.loc 1 486 5 view .LVU1339
 489:Src/app.c     **** 
 4158              		.loc 1 489 3 view .LVU1340
 489:Src/app.c     **** 
 4159              		.loc 1 489 17 is_stmt 0 view .LVU1341
 4160 0140 C5F8B840 		str	r4, [r5, #184]
 491:Src/app.c     **** 
 4161              		.loc 1 491 3 is_stmt 1 view .LVU1342
 4162              	.LVL338:
 491:Src/app.c     **** 
 4163              		.loc 1 491 3 is_stmt 0 view .LVU1343
 4164              	.LBE583:
 4165              	.LBE593:
 4166              		.loc 1 1698 3 is_stmt 1 view .LVU1344
1699:Src/app.c     **** 
1700:Src/app.c     ****   cpuload_init(&cpu_load);
 4167              		.loc 1 1700 3 view .LVU1345
 4168              	.LBB594:
 4169              	.LBI587:
 434:Src/app.c     **** {
 4170              		.loc 1 434 13 view .LVU1346
 4171              	.LBB590:
 436:Src/app.c     **** }
 4172              		.loc 1 436 3 view .LVU1347
 4173 0144 FFF7FEFF 		bl	memset
 4174              	.LVL339:
 436:Src/app.c     **** }
 4175              		.loc 1 436 3 is_stmt 0 view .LVU1348
 4176              	.LBE590:
 4177              	.LBE594:
1701:Src/app.c     **** 
1702:Src/app.c     ****   /*** Camera Init ************************************************************/  
1703:Src/app.c     ****   CAM_Init();
 4178              		.loc 1 1703 3 is_stmt 1 view .LVU1349
 4179 0148 FFF7FEFF 		bl	CAM_Init
ARM GAS  /tmp/ccddOyyT.s 			page 160


 4180              	.LVL340:
1704:Src/app.c     **** 
1705:Src/app.c     ****   /* sems + mutex init */
1706:Src/app.c     ****   isp_sem = xSemaphoreCreateCountingStatic(1, 0, &isp_sem_buffer);
 4181              		.loc 1 1706 3 view .LVU1350
 4182              		.loc 1 1706 13 is_stmt 0 view .LVU1351
 4183 014c 2146     		mov	r1, r4
 4184 014e 3046     		mov	r0, r6
 4185 0150 434A     		ldr	r2, .L169+68
 4186 0152 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4187              	.LVL341:
 4188              		.loc 1 1706 11 discriminator 1 view .LVU1352
 4189 0156 434B     		ldr	r3, .L169+72
 4190 0158 1860     		str	r0, [r3]
1707:Src/app.c     ****   assert(isp_sem);
 4191              		.loc 1 1707 3 is_stmt 1 view .LVU1353
 4192 015a 20B9     		cbnz	r0, .L167
 4193              		.loc 1 1707 3 is_stmt 0 discriminator 1 view .LVU1354
 4194 015c 40F2AB61 		movw	r1, #1707
 4195 0160 414B     		ldr	r3, .L169+76
 4196 0162 3C4A     		ldr	r2, .L169+56
 4197 0164 B3E7     		b	.L168
 4198              	.L167:
1708:Src/app.c     ****   disp.update = xSemaphoreCreateCountingStatic(1, 0, &disp.update_buffer);
 4199              		.loc 1 1708 3 is_stmt 1 view .LVU1355
 4200              		.loc 1 1708 17 is_stmt 0 view .LVU1356
 4201 0166 414D     		ldr	r5, .L169+80
 4202 0168 2146     		mov	r1, r4
 4203 016a 2A46     		mov	r2, r5
 4204 016c 3046     		mov	r0, r6
 4205 016e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4206              	.LVL342:
 4207              		.loc 1 1708 15 discriminator 1 view .LVU1357
 4208 0172 2F1F     		subs	r7, r5, #4
 4209 0174 45F8040C 		str	r0, [r5, #-4]
1709:Src/app.c     ****   assert(disp.update);
 4210              		.loc 1 1709 3 is_stmt 1 view .LVU1358
 4211 0178 20B9     		cbnz	r0, .L157
 4212              		.loc 1 1709 3 is_stmt 0 discriminator 1 view .LVU1359
 4213 017a 40F2AD61 		movw	r1, #1709
 4214 017e 3C4B     		ldr	r3, .L169+84
 4215 0180 344A     		ldr	r2, .L169+56
 4216 0182 A4E7     		b	.L168
 4217              	.L157:
1710:Src/app.c     ****   disp.lock = xSemaphoreCreateMutexStatic(&disp.lock_buffer);
 4218              		.loc 1 1710 3 is_stmt 1 view .LVU1360
 4219              		.loc 1 1710 15 is_stmt 0 view .LVU1361
 4220 0184 3046     		mov	r0, r6
 4221 0186 05F15401 		add	r1, r5, #84
 4222 018a FFF7FEFF 		bl	xQueueCreateMutexStatic
 4223              	.LVL343:
 4224              		.loc 1 1710 13 discriminator 1 view .LVU1362
 4225 018e 7865     		str	r0, [r7, #84]
1711:Src/app.c     ****   assert(disp.lock);
 4226              		.loc 1 1711 3 is_stmt 1 view .LVU1363
 4227 0190 20B9     		cbnz	r0, .L158
 4228              		.loc 1 1711 3 is_stmt 0 discriminator 1 view .LVU1364
ARM GAS  /tmp/ccddOyyT.s 			page 161


 4229 0192 40F2AF61 		movw	r1, #1711
 4230 0196 374B     		ldr	r3, .L169+88
 4231 0198 2E4A     		ldr	r2, .L169+56
 4232 019a 98E7     		b	.L168
 4233              	.L158:
1712:Src/app.c     **** 
1713:Src/app.c     ****   /* Start LCD Display camera pipe stream */
1714:Src/app.c     ****   CAM_DisplayPipe_Start(lcd_bg_buffer[0], CMW_MODE_CONTINUOUS);
 4234              		.loc 1 1714 3 is_stmt 1 view .LVU1365
 4235 019c 2146     		mov	r1, r4
 4236 019e 2148     		ldr	r0, .L169+8
 4237 01a0 FFF7FEFF 		bl	CAM_DisplayPipe_Start
 4238              	.LVL344:
1715:Src/app.c     **** 
1716:Src/app.c     ****   /* threads init */
1717:Src/app.c     ****   hdl = xTaskCreateStatic(nn_thread_fct, "nn", configMINIMAL_STACK_SIZE * 4, NULL, nn_priority, nn_
 4239              		.loc 1 1717 3 view .LVU1366
 4240              		.loc 1 1717 9 is_stmt 0 view .LVU1367
 4241 01a4 344B     		ldr	r3, .L169+92
 4242 01a6 4FF48052 		mov	r2, #4096
 4243 01aa 0293     		str	r3, [sp, #8]
 4244 01ac 334B     		ldr	r3, .L169+96
 4245 01ae 3449     		ldr	r1, .L169+100
 4246 01b0 0193     		str	r3, [sp, #4]
 4247 01b2 1D23     		movs	r3, #29
 4248 01b4 3348     		ldr	r0, .L169+104
 4249 01b6 0093     		str	r3, [sp]
 4250 01b8 2346     		mov	r3, r4
 4251 01ba FFF7FEFF 		bl	xTaskCreateStatic
 4252              	.LVL345:
1718:Src/app.c     ****                           &nn_thread);
1719:Src/app.c     ****   assert(hdl != NULL);
 4253              		.loc 1 1719 3 is_stmt 1 view .LVU1368
 4254 01be 20B9     		cbnz	r0, .L159
 4255              		.loc 1 1719 3 is_stmt 0 discriminator 1 view .LVU1369
 4256 01c0 40F2B761 		movw	r1, #1719
 4257 01c4 304B     		ldr	r3, .L169+108
 4258 01c6 234A     		ldr	r2, .L169+56
 4259 01c8 81E7     		b	.L168
 4260              	.L159:
1720:Src/app.c     ****   hdl = xTaskCreateStatic(dp_thread_fct, "dp", configMINIMAL_STACK_SIZE * 2, NULL, dp_priority, dp_
 4261              		.loc 1 1720 3 is_stmt 1 view .LVU1370
 4262              		.loc 1 1720 9 is_stmt 0 view .LVU1371
 4263 01ca 304B     		ldr	r3, .L169+112
 4264 01cc 4FF40062 		mov	r2, #2048
 4265 01d0 0293     		str	r3, [sp, #8]
 4266 01d2 2F4B     		ldr	r3, .L169+116
 4267 01d4 2F49     		ldr	r1, .L169+120
 4268 01d6 0193     		str	r3, [sp, #4]
 4269 01d8 1A23     		movs	r3, #26
 4270 01da 2F48     		ldr	r0, .L169+124
 4271              	.LVL346:
 4272              		.loc 1 1720 9 view .LVU1372
 4273 01dc 0093     		str	r3, [sp]
 4274 01de 2346     		mov	r3, r4
 4275 01e0 FFF7FEFF 		bl	xTaskCreateStatic
 4276              	.LVL347:
ARM GAS  /tmp/ccddOyyT.s 			page 162


1721:Src/app.c     ****                           &dp_thread);
1722:Src/app.c     ****   assert(hdl != NULL);
 4277              		.loc 1 1722 3 is_stmt 1 view .LVU1373
 4278 01e4 20B9     		cbnz	r0, .L160
 4279              		.loc 1 1722 3 is_stmt 0 discriminator 1 view .LVU1374
 4280 01e6 40F2BA61 		movw	r1, #1722
 4281 01ea 274B     		ldr	r3, .L169+108
 4282 01ec 194A     		ldr	r2, .L169+56
 4283 01ee 6EE7     		b	.L168
 4284              	.L160:
1723:Src/app.c     ****   hdl = xTaskCreateStatic(isp_thread_fct, "isp", configMINIMAL_STACK_SIZE * 2, NULL, isp_priority, 
 4285              		.loc 1 1723 3 is_stmt 1 view .LVU1375
 4286              		.loc 1 1723 9 is_stmt 0 view .LVU1376
 4287 01f0 2A4B     		ldr	r3, .L169+128
 4288 01f2 4FF40062 		mov	r2, #2048
 4289 01f6 0293     		str	r3, [sp, #8]
 4290 01f8 294B     		ldr	r3, .L169+132
 4291 01fa 2A49     		ldr	r1, .L169+136
 4292 01fc CDE90093 		strd	r9, r3, [sp]
 4293 0200 2948     		ldr	r0, .L169+140
 4294              	.LVL348:
 4295              		.loc 1 1723 9 view .LVU1377
 4296 0202 2346     		mov	r3, r4
 4297 0204 FFF7FEFF 		bl	xTaskCreateStatic
 4298              	.LVL349:
1724:Src/app.c     ****                           &isp_thread);
1725:Src/app.c     ****   assert(hdl != NULL);
 4299              		.loc 1 1725 3 is_stmt 1 view .LVU1378
 4300 0208 20B9     		cbnz	r0, .L149
 4301              		.loc 1 1725 3 is_stmt 0 discriminator 1 view .LVU1379
 4302 020a 40F2BD61 		movw	r1, #1725
 4303 020e 1E4B     		ldr	r3, .L169+108
 4304 0210 104A     		ldr	r2, .L169+56
 4305 0212 5CE7     		b	.L168
 4306              	.L149:
1726:Src/app.c     **** }
 4307              		.loc 1 1726 1 view .LVU1380
 4308 0214 13B0     		add	sp, sp, #76
 4309              		.cfi_def_cfa_offset 28
 4310              		@ sp needed
 4311 0216 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4312              	.L170:
 4313 021a 00BF     		.align	2
 4314              	.L169:
 4315 021c 00ED00E0 		.word	-536810240
 4316 0220 00000000 		.word	.LC25
 4317 0224 00882C00 		.word	lcd_bg_buffer
 4318 0228 00C05D00 		.word	6144000
 4319 022c 00181500 		.word	lcd_fg_buffer
 4320 0230 00701700 		.word	1536000
 4321 0234 00000000 		.word	lcd_bg_buffer_disp_idx
 4322 0238 2003E001 		.word	31458080
 4323 023c 00D02000 		.word	lcd_fg_buffer+768000
 4324 0240 00600900 		.word	screen_buffer
 4325 0244 00000000 		.word	.LC4
 4326 0248 00000000 		.word	__func__.5
 4327 024c 0E000000 		.word	.LC2
ARM GAS  /tmp/ccddOyyT.s 			page 163


 4328 0250 00000000 		.word	Font20
 4329 0254 00000000 		.word	__func__.20
 4330 0258 00000000 		.word	nn_input_buffers
 4331 025c 00000000 		.word	cpu_load
 4332 0260 00000000 		.word	isp_sem_buffer
 4333 0264 00000000 		.word	isp_sem
 4334 0268 11000000 		.word	.LC26
 4335 026c 04000000 		.word	disp+4
 4336 0270 19000000 		.word	.LC27
 4337 0274 25000000 		.word	.LC28
 4338 0278 00000000 		.word	nn_thread
 4339 027c 00000000 		.word	nn_thread_stack
 4340 0280 2F000000 		.word	.LC29
 4341 0284 00000000 		.word	nn_thread_fct
 4342 0288 32000000 		.word	.LC30
 4343 028c 00000000 		.word	dp_thread
 4344 0290 00000000 		.word	dp_thread_stack
 4345 0294 3E000000 		.word	.LC31
 4346 0298 00000000 		.word	dp_thread_fct
 4347 029c 00000000 		.word	isp_thread
 4348 02a0 00000000 		.word	isp_thread_stack
 4349 02a4 41000000 		.word	.LC32
 4350 02a8 00000000 		.word	isp_thread_fct
 4351 02ac 00EE0200 		.word	192000
 4352 02b0 04000000 		.word	nn_input_queue+4
 4353              		.cfi_endproc
 4354              	.LFE7412:
 4356              		.section	.text.CMW_CAMERA_PIPE_FrameEventCallback,"ax",%progbits
 4357              		.align	1
 4358              		.global	CMW_CAMERA_PIPE_FrameEventCallback
 4359              		.syntax unified
 4360              		.thumb
 4361              		.thumb_func
 4363              	CMW_CAMERA_PIPE_FrameEventCallback:
 4364              	.LVL350:
 4365              	.LFB7413:
1727:Src/app.c     **** 
1728:Src/app.c     **** int CMW_CAMERA_PIPE_FrameEventCallback(uint32_t pipe)
1729:Src/app.c     **** {
 4366              		.loc 1 1729 1 is_stmt 1 view -0
 4367              		.cfi_startproc
 4368              		@ args = 0, pretend = 0, frame = 8
 4369              		@ frame_needed = 0, uses_anonymous_args = 0
1730:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4370              		.loc 1 1730 3 view .LVU1382
 4371              		.loc 1 1730 6 is_stmt 0 view .LVU1383
 4372 0000 0128     		cmp	r0, #1
1729:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4373              		.loc 1 1729 1 view .LVU1384
 4374 0002 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 4375              		.cfi_def_cfa_offset 40
 4376              		.cfi_offset 4, -32
 4377              		.cfi_offset 5, -28
 4378              		.cfi_offset 6, -24
 4379              		.cfi_offset 7, -20
 4380              		.cfi_offset 8, -16
 4381              		.cfi_offset 9, -12
ARM GAS  /tmp/ccddOyyT.s 			page 164


 4382              		.cfi_offset 10, -8
 4383              		.cfi_offset 14, -4
1729:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4384              		.loc 1 1729 1 view .LVU1385
 4385 0006 0646     		mov	r6, r0
 4386              		.loc 1 1730 6 view .LVU1386
 4387 0008 50D1     		bne	.L172
1731:Src/app.c     ****     app_main_pipe_frame_event();
 4388              		.loc 1 1731 5 is_stmt 1 view .LVU1387
 4389              	.LBB605:
 4390              	.LBI605:
 564:Src/app.c     **** {
 4391              		.loc 1 564 13 view .LVU1388
 4392              	.LBB606:
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4393              		.loc 1 566 3 view .LVU1389
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4394              		.loc 1 566 47 is_stmt 0 view .LVU1390
 4395 000a 514F     		ldr	r7, .L198
 567:Src/app.c     ****   int ret;
 4396              		.loc 1 567 47 view .LVU1391
 4397 000c DFF87081 		ldr	r8, .L198+48
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4398              		.loc 1 566 47 view .LVU1392
 4399 0010 3D68     		ldr	r5, [r7]
 567:Src/app.c     ****   int ret;
 4400              		.loc 1 567 47 view .LVU1393
 4401 0012 D8F80040 		ldr	r4, [r8]
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4402              		.loc 1 566 47 view .LVU1394
 4403 0016 0135     		adds	r5, r5, #1
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4404              		.loc 1 566 7 view .LVU1395
 4405 0018 6B42     		rsbs	r3, r5, #0
 4406 001a 03F00303 		and	r3, r3, #3
 567:Src/app.c     ****   int ret;
 4407              		.loc 1 567 47 view .LVU1396
 4408 001e 04F10104 		add	r4, r4, #1
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4409              		.loc 1 566 7 view .LVU1397
 4410 0022 05F00305 		and	r5, r5, #3
 4411 0026 55EA43B5 		csneg	r5, r5, r3, mi
 4412              	.LVL351:
 567:Src/app.c     ****   int ret;
 4413              		.loc 1 567 3 is_stmt 1 view .LVU1398
 567:Src/app.c     ****   int ret;
 4414              		.loc 1 567 7 is_stmt 0 view .LVU1399
 4415 002a 6342     		rsbs	r3, r4, #0
 4416 002c 03F00303 		and	r3, r3, #3
 571:Src/app.c     ****   assert(ret == HAL_OK);
 4417              		.loc 1 571 78 view .LVU1400
 4418 0030 DFF850A1 		ldr	r10, .L198+52
 4419 0034 DFF85091 		ldr	r9, .L198+56
 567:Src/app.c     ****   int ret;
 4420              		.loc 1 567 7 view .LVU1401
 4421 0038 04F00304 		and	r4, r4, #3
 4422 003c 54EA43B4 		csneg	r4, r4, r3, mi
ARM GAS  /tmp/ccddOyyT.s 			page 165


 4423              	.LVL352:
 568:Src/app.c     **** 
 4424              		.loc 1 568 3 is_stmt 1 view .LVU1402
 570:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4425              		.loc 1 570 3 view .LVU1403
 570:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4426              		.loc 1 570 9 is_stmt 0 view .LVU1404
 4427 0040 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 4428              	.LVL353:
 570:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4429              		.loc 1 570 9 view .LVU1405
 4430 0044 3146     		mov	r1, r6
 4431 0046 0022     		movs	r2, #0
 4432 0048 0AFB0493 		mla	r3, r10, r4, r9
 4433 004c FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 4434              	.LVL354:
 572:Src/app.c     **** 
 4435              		.loc 1 572 3 is_stmt 1 view .LVU1406
 4436 0050 0146     		mov	r1, r0
 4437 0052 30B1     		cbz	r0, .L173
 572:Src/app.c     **** 
 4438              		.loc 1 572 3 is_stmt 0 discriminator 1 view .LVU1407
 4439 0054 4FF40F71 		mov	r1, #572
 4440 0058 3E4B     		ldr	r3, .L198+4
 4441 005a 3F4A     		ldr	r2, .L198+8
 4442              	.LVL355:
 4443              	.L197:
 4444              	.LBB607:
 4445              	.LBB608:
 556:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4446              		.loc 1 556 3 discriminator 1 view .LVU1408
 4447 005c 3F48     		ldr	r0, .L198+12
 4448 005e FFF7FEFF 		bl	__assert_func
 4449              	.LVL356:
 4450              	.L173:
 556:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4451              		.loc 1 556 3 discriminator 1 view .LVU1409
 4452              	.LBE608:
 4453              	.LBE607:
 574:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 4454              		.loc 1 574 3 is_stmt 1 view .LVU1410
 4455              	.LBB610:
 4456              	.LBI607:
 551:Src/app.c     **** {
 4457              		.loc 1 551 13 view .LVU1411
 4458              	.LBB609:
 553:Src/app.c     **** 
 4459              		.loc 1 553 3 view .LVU1412
 555:Src/app.c     ****   assert(ret == 0);
 4460              		.loc 1 555 3 view .LVU1413
 555:Src/app.c     ****   assert(ret == 0);
 4461              		.loc 1 555 9 is_stmt 0 view .LVU1414
 4462 0062 0AFB0590 		mla	r0, r10, r5, r9
 4463              	.LVL357:
 555:Src/app.c     ****   assert(ret == 0);
 4464              		.loc 1 555 9 view .LVU1415
 4465 0066 FFF7FEFF 		bl	SCRL_SetAddress_NoReload
ARM GAS  /tmp/ccddOyyT.s 			page 166


 4466              	.LVL358:
 556:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4467              		.loc 1 556 3 is_stmt 1 view .LVU1416
 4468 006a 20B1     		cbz	r0, .L174
 556:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4469              		.loc 1 556 3 is_stmt 0 discriminator 1 view .LVU1417
 4470 006c 4FF40B71 		mov	r1, #556
 4471 0070 3B4B     		ldr	r3, .L198+16
 4472 0072 3C4A     		ldr	r2, .L198+20
 4473 0074 F2E7     		b	.L197
 4474              	.L174:
 557:Src/app.c     ****   assert(ret == 0);
 4475              		.loc 1 557 3 is_stmt 1 view .LVU1418
 557:Src/app.c     ****   assert(ret == 0);
 4476              		.loc 1 557 9 is_stmt 0 view .LVU1419
 4477 0076 FFF7FEFF 		bl	SCRL_ReloadLayer
 4478              	.LVL359:
 558:Src/app.c     **** 
 4479              		.loc 1 558 3 is_stmt 1 view .LVU1420
 4480 007a 20B1     		cbz	r0, .L175
 558:Src/app.c     **** 
 4481              		.loc 1 558 3 is_stmt 0 discriminator 1 view .LVU1421
 4482 007c 40F22E21 		movw	r1, #558
 4483 0080 374B     		ldr	r3, .L198+16
 4484 0082 384A     		ldr	r2, .L198+20
 4485 0084 EAE7     		b	.L197
 4486              	.L175:
 560:Src/app.c     ****   assert(ret == 0);
 4487              		.loc 1 560 3 is_stmt 1 view .LVU1422
 560:Src/app.c     ****   assert(ret == 0);
 4488              		.loc 1 560 9 is_stmt 0 view .LVU1423
 4489 0086 FFF7FEFF 		bl	SRCL_Update
 4490              	.LVL360:
 561:Src/app.c     **** }
 4491              		.loc 1 561 3 is_stmt 1 view .LVU1424
 4492 008a 20B1     		cbz	r0, .L176
 561:Src/app.c     **** }
 4493              		.loc 1 561 3 is_stmt 0 discriminator 1 view .LVU1425
 4494 008c 40F23121 		movw	r1, #561
 4495 0090 334B     		ldr	r3, .L198+16
 4496 0092 344A     		ldr	r2, .L198+20
 4497 0094 E2E7     		b	.L197
 4498              	.L176:
 4499              	.LVL361:
 561:Src/app.c     **** }
 4500              		.loc 1 561 3 discriminator 1 view .LVU1426
 4501              	.LBE609:
 4502              	.LBE610:
 575:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 4503              		.loc 1 575 3 is_stmt 1 view .LVU1427
 578:Src/app.c     **** }
 4504              		.loc 1 578 17 is_stmt 0 view .LVU1428
 4505 0096 344A     		ldr	r2, .L198+24
 575:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 4506              		.loc 1 575 26 view .LVU1429
 4507 0098 3D60     		str	r5, [r7]
 576:Src/app.c     **** 
ARM GAS  /tmp/ccddOyyT.s 			page 167


 4508              		.loc 1 576 3 is_stmt 1 view .LVU1430
 578:Src/app.c     **** }
 4509              		.loc 1 578 17 is_stmt 0 view .LVU1431
 4510 009a 1368     		ldr	r3, [r2]
 576:Src/app.c     **** 
 4511              		.loc 1 576 26 view .LVU1432
 4512 009c C8F80040 		str	r4, [r8]
 578:Src/app.c     **** }
 4513              		.loc 1 578 3 is_stmt 1 view .LVU1433
 578:Src/app.c     **** }
 4514              		.loc 1 578 17 is_stmt 0 view .LVU1434
 4515 00a0 0133     		adds	r3, r3, #1
 4516 00a2 1360     		str	r3, [r2]
 4517              	.LVL362:
 4518              	.L177:
 578:Src/app.c     **** }
 4519              		.loc 1 578 17 view .LVU1435
 4520              	.LBE606:
 4521              	.LBE605:
1732:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
1733:Src/app.c     ****     app_ancillary_pipe_frame_event();
1734:Src/app.c     **** 
1735:Src/app.c     ****   return HAL_OK;
 4522              		.loc 1 1735 3 is_stmt 1 view .LVU1436
1736:Src/app.c     **** }
 4523              		.loc 1 1736 1 is_stmt 0 view .LVU1437
 4524 00a4 0020     		movs	r0, #0
 4525 00a6 02B0     		add	sp, sp, #8
 4526              		.cfi_remember_state
 4527              		.cfi_def_cfa_offset 32
 4528              		@ sp needed
 4529 00a8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4530              	.LVL363:
 4531              	.L172:
 4532              		.cfi_restore_state
1732:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 4533              		.loc 1 1732 8 is_stmt 1 view .LVU1438
1732:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 4534              		.loc 1 1732 11 is_stmt 0 view .LVU1439
 4535 00ac 0228     		cmp	r0, #2
 4536 00ae F9D1     		bne	.L177
1733:Src/app.c     **** 
 4537              		.loc 1 1733 5 is_stmt 1 view .LVU1440
 4538              	.LBB611:
 4539              	.LBI611:
 582:Src/app.c     **** {
 4540              		.loc 1 582 13 view .LVU1441
 4541              	.LBB612:
 584:Src/app.c     ****   int ret;
 4542              		.loc 1 584 3 view .LVU1442
 585:Src/app.c     **** 
 4543              		.loc 1 585 3 view .LVU1443
 587:Src/app.c     ****   if (next_buffer) {
 4544              		.loc 1 587 3 view .LVU1444
 4545              	.LBB613:
 4546              	.LBI613:
 499:Src/app.c     **** {
ARM GAS  /tmp/ccddOyyT.s 			page 168


 4547              		.loc 1 499 17 view .LVU1445
 4548              	.LVL364:
 4549              	.LBB614:
 501:Src/app.c     ****   int ret;
 4550              		.loc 1 501 3 view .LVU1446
 502:Src/app.c     **** 
 4551              		.loc 1 502 3 view .LVU1447
 504:Src/app.c     ****   if (ret == pdFALSE)
 4552              		.loc 1 504 3 view .LVU1448
 504:Src/app.c     ****   if (ret == pdFALSE)
 4553              		.loc 1 504 9 is_stmt 0 view .LVU1449
 4554 00b0 2E4C     		ldr	r4, .L198+28
 504:Src/app.c     ****   if (ret == pdFALSE)
 4555              		.loc 1 504 9 discriminator 4 view .LVU1450
 4556 00b2 0021     		movs	r1, #0
 4557 00b4 2068     		ldr	r0, [r4]
 4558              	.LVL365:
 504:Src/app.c     ****   if (ret == pdFALSE)
 4559              		.loc 1 504 9 discriminator 4 view .LVU1451
 4560 00b6 FFF7FEFF 		bl	xQueueSemaphoreTake
 4561              	.LVL366:
 505:Src/app.c     ****     return NULL;
 4562              		.loc 1 505 3 is_stmt 1 view .LVU1452
 505:Src/app.c     ****     return NULL;
 4563              		.loc 1 505 6 is_stmt 0 view .LVU1453
 4564 00ba 0028     		cmp	r0, #0
 4565 00bc F2D0     		beq	.L177
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4566              		.loc 1 508 3 is_stmt 1 view .LVU1454
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4567              		.loc 1 508 23 is_stmt 0 view .LVU1455
 4568 00be D4F8B420 		ldr	r2, [r4, #180]
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4569              		.loc 1 508 7 view .LVU1456
 4570 00c2 04EB8203 		add	r3, r4, r2, lsl #2
 4571 00c6 D3F8AC50 		ldr	r5, [r3, #172]
 4572              	.LVL367:
 509:Src/app.c     **** 
 4573              		.loc 1 509 3 is_stmt 1 view .LVU1457
 509:Src/app.c     **** 
 4574              		.loc 1 509 37 is_stmt 0 view .LVU1458
 4575 00ca D4F8A830 		ldr	r3, [r4, #168]
 509:Src/app.c     **** 
 4576              		.loc 1 509 32 view .LVU1459
 4577 00ce 0132     		adds	r2, r2, #1
 509:Src/app.c     **** 
 4578              		.loc 1 509 37 view .LVU1460
 4579 00d0 92FBF3F1 		sdiv	r1, r2, r3
 4580 00d4 03FB1122 		mls	r2, r3, r1, r2
 509:Src/app.c     **** 
 4581              		.loc 1 509 16 view .LVU1461
 4582 00d8 C4F8B420 		str	r2, [r4, #180]
 511:Src/app.c     **** }
 4583              		.loc 1 511 3 is_stmt 1 view .LVU1462
 4584              	.LVL368:
 511:Src/app.c     **** }
 4585              		.loc 1 511 3 is_stmt 0 view .LVU1463
ARM GAS  /tmp/ccddOyyT.s 			page 169


 4586              	.LBE614:
 4587              	.LBE613:
 588:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 4588              		.loc 1 588 3 is_stmt 1 view .LVU1464
 588:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 4589              		.loc 1 588 6 is_stmt 0 view .LVU1465
 4590 00dc 002D     		cmp	r5, #0
 4591 00de E1D0     		beq	.L177
 589:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4592              		.loc 1 589 5 is_stmt 1 view .LVU1466
 589:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4593              		.loc 1 589 11 is_stmt 0 view .LVU1467
 4594 00e0 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 4595              	.LVL369:
 589:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4596              		.loc 1 589 11 discriminator 1 view .LVU1468
 4597 00e4 2B46     		mov	r3, r5
 4598 00e6 0022     		movs	r2, #0
 4599 00e8 3146     		mov	r1, r6
 4600 00ea FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 4601              	.LVL370:
 591:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 4602              		.loc 1 591 5 is_stmt 1 view .LVU1469
 4603 00ee 20B1     		cbz	r0, .L180
 591:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 4604              		.loc 1 591 5 is_stmt 0 discriminator 1 view .LVU1470
 4605 00f0 40F24F21 		movw	r1, #591
 4606 00f4 174B     		ldr	r3, .L198+4
 4607 00f6 1E4A     		ldr	r2, .L198+32
 4608 00f8 B0E7     		b	.L197
 4609              	.L180:
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4610              		.loc 1 593 5 is_stmt 1 view .LVU1471
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4611              		.loc 1 593 48 is_stmt 0 view .LVU1472
 4612 00fa 1B4B     		ldr	r3, .L198+24
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4613              		.loc 1 593 31 view .LVU1473
 4614 00fc 1D4A     		ldr	r2, .L198+36
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4615              		.loc 1 593 48 view .LVU1474
 4616 00fe 1B68     		ldr	r3, [r3]
 4617              	.LBB615:
 4618              	.LBB616:
 538:Src/app.c     ****   int ret;
 4619              		.loc 1 538 14 view .LVU1475
 4620 0100 0190     		str	r0, [sp, #4]
 4621              	.LBE616:
 4622              	.LBE615:
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4623              		.loc 1 593 48 view .LVU1476
 4624 0102 013B     		subs	r3, r3, #1
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4625              		.loc 1 593 31 view .LVU1477
 4626 0104 1360     		str	r3, [r2]
 594:Src/app.c     ****   }
 4627              		.loc 1 594 5 is_stmt 1 view .LVU1478
ARM GAS  /tmp/ccddOyyT.s 			page 170


 4628              	.LBB618:
 4629              	.LBI615:
 536:Src/app.c     **** {
 4630              		.loc 1 536 13 view .LVU1479
 4631              	.LVL371:
 4632              	.LBB617:
 538:Src/app.c     ****   int ret;
 4633              		.loc 1 538 3 view .LVU1480
 539:Src/app.c     **** 
 4634              		.loc 1 539 3 view .LVU1481
 541:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4635              		.loc 1 541 3 view .LVU1482
 541:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4636              		.loc 1 541 7 is_stmt 0 view .LVU1483
 4637 0106 FFF7FEFF 		bl	xPortIsInsideInterrupt
 4638              	.LVL372:
 541:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4639              		.loc 1 541 6 discriminator 1 view .LVU1484
 4640 010a 0346     		mov	r3, r0
 4641 010c A0B1     		cbz	r0, .L181
 542:Src/app.c     ****     assert(ret == pdTRUE);
 4642              		.loc 1 542 5 is_stmt 1 view .LVU1485
 542:Src/app.c     ****     assert(ret == pdTRUE);
 4643              		.loc 1 542 11 is_stmt 0 view .LVU1486
 4644 010e 606D     		ldr	r0, [r4, #84]
 4645 0110 01A9     		add	r1, sp, #4
 4646 0112 FFF7FEFF 		bl	xQueueGiveFromISR
 4647              	.LVL373:
 543:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4648              		.loc 1 543 5 is_stmt 1 view .LVU1487
 4649 0116 0128     		cmp	r0, #1
 4650 0118 04D0     		beq	.L182
 543:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4651              		.loc 1 543 5 is_stmt 0 discriminator 1 view .LVU1488
 4652 011a 40F21F21 		movw	r1, #543
 4653 011e 164B     		ldr	r3, .L198+40
 4654 0120 164A     		ldr	r2, .L198+44
 4655 0122 9BE7     		b	.L197
 4656              	.L182:
 544:Src/app.c     ****   } else {
 4657              		.loc 1 544 5 is_stmt 1 view .LVU1489
 544:Src/app.c     ****   } else {
 4658              		.loc 1 544 5 view .LVU1490
 4659 0124 019B     		ldr	r3, [sp, #4]
 4660 0126 002B     		cmp	r3, #0
 4661 0128 BCD0     		beq	.L177
 544:Src/app.c     ****   } else {
 4662              		.loc 1 544 5 discriminator 1 view .LVU1491
 4663 012a 4FF0E023 		mov	r3, #-536813568
 4664 012e 4FF08052 		mov	r2, #268435456
 4665 0132 C3F8042D 		str	r2, [r3, #3332]
 4666 0136 B5E7     		b	.L177
 4667              	.LVL374:
 4668              	.L181:
 546:Src/app.c     ****     assert(ret == pdTRUE);
 4669              		.loc 1 546 5 view .LVU1492
 546:Src/app.c     ****     assert(ret == pdTRUE);
ARM GAS  /tmp/ccddOyyT.s 			page 171


 4670              		.loc 1 546 11 is_stmt 0 view .LVU1493
 4671 0138 0246     		mov	r2, r0
 4672 013a 0146     		mov	r1, r0
 4673 013c 606D     		ldr	r0, [r4, #84]
 4674 013e FFF7FEFF 		bl	xQueueGenericSend
 4675              	.LVL375:
 547:Src/app.c     ****   }
 4676              		.loc 1 547 5 is_stmt 1 view .LVU1494
 4677 0142 0128     		cmp	r0, #1
 4678 0144 AED0     		beq	.L177
 547:Src/app.c     ****   }
 4679              		.loc 1 547 5 is_stmt 0 discriminator 1 view .LVU1495
 4680 0146 40F22321 		movw	r1, #547
 4681 014a 0B4B     		ldr	r3, .L198+40
 4682 014c 0B4A     		ldr	r2, .L198+44
 4683 014e 85E7     		b	.L197
 4684              	.L199:
 4685              		.align	2
 4686              	.L198:
 4687 0150 00000000 		.word	lcd_bg_buffer_disp_idx
 4688 0154 00000000 		.word	.LC18
 4689 0158 00000000 		.word	__func__.3
 4690 015c 0E000000 		.word	.LC2
 4691 0160 00000000 		.word	.LC4
 4692 0164 00000000 		.word	__func__.2
 4693 0168 00000000 		.word	frame_event_nb
 4694 016c 00000000 		.word	nn_input_queue
 4695 0170 00000000 		.word	__func__.1
 4696 0174 00000000 		.word	frame_event_nb_for_resize
 4697 0178 00000000 		.word	.LC1
 4698 017c 00000000 		.word	__func__.0
 4699 0180 00000000 		.word	lcd_bg_buffer_capt_idx
 4700 0184 00701700 		.word	1536000
 4701 0188 00882C00 		.word	lcd_bg_buffer
 4702              	.LBE617:
 4703              	.LBE618:
 4704              	.LBE612:
 4705              	.LBE611:
 4706              		.cfi_endproc
 4707              	.LFE7413:
 4709              		.section	.text.CMW_CAMERA_PIPE_VsyncEventCallback,"ax",%progbits
 4710              		.align	1
 4711              		.global	CMW_CAMERA_PIPE_VsyncEventCallback
 4712              		.syntax unified
 4713              		.thumb
 4714              		.thumb_func
 4716              	CMW_CAMERA_PIPE_VsyncEventCallback:
 4717              	.LVL376:
 4718              	.LFB7414:
1737:Src/app.c     **** 
1738:Src/app.c     **** int CMW_CAMERA_PIPE_VsyncEventCallback(uint32_t pipe)
1739:Src/app.c     **** {
 4719              		.loc 1 1739 1 is_stmt 1 view -0
 4720              		.cfi_startproc
 4721              		@ args = 0, pretend = 0, frame = 8
 4722              		@ frame_needed = 0, uses_anonymous_args = 0
1740:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
ARM GAS  /tmp/ccddOyyT.s 			page 172


 4723              		.loc 1 1740 3 view .LVU1497
 4724              		.loc 1 1740 6 is_stmt 0 view .LVU1498
 4725 0000 0128     		cmp	r0, #1
1739:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4726              		.loc 1 1739 1 view .LVU1499
 4727 0002 07B5     		push	{r0, r1, r2, lr}
 4728              		.cfi_def_cfa_offset 16
 4729              		.cfi_offset 14, -4
 4730              		.loc 1 1740 6 view .LVU1500
 4731 0004 10D1     		bne	.L201
1741:Src/app.c     ****     app_main_pipe_vsync_event();
 4732              		.loc 1 1741 5 is_stmt 1 view .LVU1501
 4733              	.LBB621:
 4734              	.LBI621:
 598:Src/app.c     **** {
 4735              		.loc 1 598 13 view .LVU1502
 4736              	.LBB622:
 600:Src/app.c     ****   int ret;
 4737              		.loc 1 600 3 view .LVU1503
 600:Src/app.c     ****   int ret;
 4738              		.loc 1 600 14 is_stmt 0 view .LVU1504
 4739 0006 0023     		movs	r3, #0
 4740 0008 0193     		str	r3, [sp, #4]
 601:Src/app.c     **** 
 4741              		.loc 1 601 3 is_stmt 1 view .LVU1505
 603:Src/app.c     ****   if (ret == pdTRUE)
 4742              		.loc 1 603 3 view .LVU1506
 603:Src/app.c     ****   if (ret == pdTRUE)
 4743              		.loc 1 603 9 is_stmt 0 view .LVU1507
 4744 000a 094B     		ldr	r3, .L206
 4745 000c 01A9     		add	r1, sp, #4
 4746 000e 1868     		ldr	r0, [r3]
 4747              	.LVL377:
 603:Src/app.c     ****   if (ret == pdTRUE)
 4748              		.loc 1 603 9 view .LVU1508
 4749 0010 FFF7FEFF 		bl	xQueueGiveFromISR
 4750              	.LVL378:
 604:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4751              		.loc 1 604 3 is_stmt 1 view .LVU1509
 604:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4752              		.loc 1 604 6 is_stmt 0 view .LVU1510
 4753 0014 0128     		cmp	r0, #1
 4754 0016 07D1     		bne	.L201
 605:Src/app.c     **** }
 4755              		.loc 1 605 5 is_stmt 1 view .LVU1511
 605:Src/app.c     **** }
 4756              		.loc 1 605 5 view .LVU1512
 4757 0018 019B     		ldr	r3, [sp, #4]
 4758 001a 2BB1     		cbz	r3, .L201
 605:Src/app.c     **** }
 4759              		.loc 1 605 5 discriminator 1 view .LVU1513
 4760 001c 4FF0E023 		mov	r3, #-536813568
 4761 0020 4FF08052 		mov	r2, #268435456
 4762 0024 C3F8042D 		str	r2, [r3, #3332]
 605:Src/app.c     **** }
 4763              		.loc 1 605 5 discriminator 3 view .LVU1514
 4764              	.LVL379:
ARM GAS  /tmp/ccddOyyT.s 			page 173


 4765              	.L201:
 605:Src/app.c     **** }
 4766              		.loc 1 605 5 is_stmt 0 discriminator 3 view .LVU1515
 4767              	.LBE622:
 4768              	.LBE621:
1742:Src/app.c     **** 
1743:Src/app.c     ****   return HAL_OK;
 4769              		.loc 1 1743 3 is_stmt 1 view .LVU1516
1744:Src/app.c     **** }
 4770              		.loc 1 1744 1 is_stmt 0 view .LVU1517
 4771 0028 0020     		movs	r0, #0
 4772 002a 03B0     		add	sp, sp, #12
 4773              		.cfi_def_cfa_offset 4
 4774              		@ sp needed
 4775 002c 5DF804FB 		ldr	pc, [sp], #4
 4776              	.L207:
 4777              		.align	2
 4778              	.L206:
 4779 0030 00000000 		.word	isp_sem
 4780              		.cfi_endproc
 4781              	.LFE7414:
 4783              		.section	.rodata.__func__.0,"a"
 4786              	__func__.0:
 4787 0000 62717565 		.ascii	"bqueue_put_ready\000"
 4787      75655F70 
 4787      75745F72 
 4787      65616479 
 4787      00
 4788              		.section	.rodata.__func__.1,"a"
 4791              	__func__.1:
 4792 0000 6170705F 		.ascii	"app_ancillary_pipe_frame_event\000"
 4792      616E6369 
 4792      6C6C6172 
 4792      795F7069 
 4792      70655F66 
 4793              		.section	.rodata.__func__.2,"a"
 4796              	__func__.2:
 4797 0000 72656C6F 		.ascii	"reload_bg_layer\000"
 4797      61645F62 
 4797      675F6C61 
 4797      79657200 
 4798              		.section	.rodata.__func__.3,"a"
 4801              	__func__.3:
 4802 0000 6170705F 		.ascii	"app_main_pipe_frame_event\000"
 4802      6D61696E 
 4802      5F706970 
 4802      655F6672 
 4802      616D655F 
 4803              		.section	.rodata.__func__.5,"a"
 4806              	__func__.5:
 4807 0000 44697370 		.ascii	"Display_init\000"
 4807      6C61795F 
 4807      696E6974 
 4807      00
 4808              		.section	.rodata.__func__.6,"a"
 4811              	__func__.6:
 4812 0000 62717565 		.ascii	"bqueue_put_free\000"
ARM GAS  /tmp/ccddOyyT.s 			page 174


 4812      75655F70 
 4812      75745F66 
 4812      72656500 
 4813              		.section	.rodata.__func__.7,"a"
 4816              	__func__.7:
 4817 0000 66616365 		.ascii	"face_landmark_prepare_input\000"
 4817      5F6C616E 
 4817      646D6172 
 4817      6B5F7072 
 4817      65706172 
 4818              		.section	.rodata.__func__.8,"a"
 4821              	__func__.8:
 4822 0000 796F6C6F 		.ascii	"yolo_detector_run\000"
 4822      5F646574 
 4822      6563746F 
 4822      725F7275 
 4822      6E00
 4823              		.section	.rodata.__func__.9,"a"
 4826              	__func__.9:
 4827 0000 62717565 		.ascii	"bqueue_get_ready\000"
 4827      75655F67 
 4827      65745F72 
 4827      65616479 
 4827      00
 4828              		.section	.rodata.__func__.10,"a"
 4831              	__func__.10:
 4832 0000 66616365 		.ascii	"face_landmark_init\000"
 4832      5F6C616E 
 4832      646D6172 
 4832      6B5F696E 
 4832      697400
 4833              		.section	.rodata.__func__.11,"a"
 4836              	__func__.11:
 4837 0000 796F6C6F 		.ascii	"yolo_detector_init\000"
 4837      5F646574 
 4837      6563746F 
 4837      725F696E 
 4837      697400
 4838              		.section	.rodata.__func__.12,"a"
 4841              	__func__.12:
 4842 0000 6E6E5F74 		.ascii	"nn_thread_fct\000"
 4842      68726561 
 4842      645F6663 
 4842      7400
 4843              		.section	.rodata.__func__.13,"a"
 4846              	__func__.13:
 4847 0000 64705F63 		.ascii	"dp_commit_drawing_area\000"
 4847      6F6D6D69 
 4847      745F6472 
 4847      6177696E 
 4847      675F6172 
 4848              		.section	.rodata.__func__.14,"a"
 4851              	__func__.14:
 4852 0000 64705F75 		.ascii	"dp_update_drawing_area\000"
 4852      70646174 
 4852      655F6472 
 4852      6177696E 
ARM GAS  /tmp/ccddOyyT.s 			page 175


 4852      675F6172 
 4853              		.section	.rodata.__func__.15,"a"
 4856              	__func__.15:
 4857 0000 62757474 		.ascii	"button_init\000"
 4857      6F6E5F69 
 4857      6E697400 
 4858              		.section	.rodata.__func__.16,"a"
 4861              	__func__.16:
 4862 0000 6F6E5F6C 		.ascii	"on_ld_toggle_button_click\000"
 4862      645F746F 
 4862      67676C65 
 4862      5F627574 
 4862      746F6E5F 
 4863              		.section	.rodata.__func__.17,"a"
 4866              	__func__.17:
 4867 0000 6F6E5F70 		.ascii	"on_pd_toggle_button_click\000"
 4867      645F746F 
 4867      67676C65 
 4867      5F627574 
 4867      746F6E5F 
 4868              		.section	.rodata.__func__.18,"a"
 4871              	__func__.18:
 4872 0000 64705F74 		.ascii	"dp_thread_fct\000"
 4872      68726561 
 4872      645F6663 
 4872      7400
 4873              		.section	.rodata.__func__.19,"a"
 4876              	__func__.19:
 4877 0000 6973705F 		.ascii	"isp_thread_fct\000"
 4877      74687265 
 4877      61645F66 
 4877      637400
 4878              		.section	.rodata.__func__.20,"a"
 4881              	__func__.20:
 4882 0000 6170705F 		.ascii	"app_run\000"
 4882      72756E00 
 4883              		.section	.bss.isp_sem_buffer,"aw",%nobits
 4884              		.align	2
 4887              	isp_sem_buffer:
 4888 0000 00000000 		.space	80
 4888      00000000 
 4888      00000000 
 4888      00000000 
 4888      00000000 
 4889              		.section	.bss.isp_sem,"aw",%nobits
 4890              		.align	2
 4893              	isp_sem:
 4894 0000 00000000 		.space	4
 4895              		.section	.bss.isp_thread_stack,"aw",%nobits
 4896              		.align	2
 4899              	isp_thread_stack:
 4900 0000 00000000 		.space	8192
 4900      00000000 
 4900      00000000 
 4900      00000000 
 4900      00000000 
 4901              		.section	.bss.isp_thread,"aw",%nobits
ARM GAS  /tmp/ccddOyyT.s 			page 176


 4902              		.align	2
 4905              	isp_thread:
 4906 0000 00000000 		.space	96
 4906      00000000 
 4906      00000000 
 4906      00000000 
 4906      00000000 
 4907              		.section	.bss.dp_thread_stack,"aw",%nobits
 4908              		.align	2
 4911              	dp_thread_stack:
 4912 0000 00000000 		.space	8192
 4912      00000000 
 4912      00000000 
 4912      00000000 
 4912      00000000 
 4913              		.section	.bss.dp_thread,"aw",%nobits
 4914              		.align	2
 4917              	dp_thread:
 4918 0000 00000000 		.space	96
 4918      00000000 
 4918      00000000 
 4918      00000000 
 4918      00000000 
 4919              		.section	.bss.nn_thread_stack,"aw",%nobits
 4920              		.align	2
 4923              	nn_thread_stack:
 4924 0000 00000000 		.space	16384
 4924      00000000 
 4924      00000000 
 4924      00000000 
 4924      00000000 
 4925              		.section	.bss.nn_thread,"aw",%nobits
 4926              		.align	2
 4929              	nn_thread:
 4930 0000 00000000 		.space	96
 4930      00000000 
 4930      00000000 
 4930      00000000 
 4930      00000000 
 4931              		.section	.bss.nn_input_queue,"aw",%nobits
 4932              		.align	2
 4935              	nn_input_queue:
 4936 0000 00000000 		.space	188
 4936      00000000 
 4936      00000000 
 4936      00000000 
 4936      00000000 
 4937              		.section	.psram_bss,"aw"
 4938              		.align	5
 4941              	nn_input_buffers:
 4942 0000 00000000 		.space	614400
 4942      00000000 
 4942      00000000 
 4942      00000000 
 4942      00000000 
 4943              		.section	.bss.frame_event_nb_for_resize,"aw",%nobits
 4944              		.align	2
ARM GAS  /tmp/ccddOyyT.s 			page 177


 4947              	frame_event_nb_for_resize:
 4948 0000 00000000 		.space	4
 4949              		.section	.bss.frame_event_nb,"aw",%nobits
 4950              		.align	2
 4953              	frame_event_nb:
 4954 0000 00000000 		.space	4
 4955              		.section	.bss.ld_landmarks,"aw",%nobits
 4956              		.align	2
 4959              	ld_landmarks:
 4960 0000 00000000 		.space	3744
 4960      00000000 
 4960      00000000 
 4960      00000000 
 4960      00000000 
 4961              		.section	.data.NN_Instance_face_landmark,"aw"
 4962              		.align	2
 4965              	NN_Instance_face_landmark:
 4966 0000 00000000 		.word	NN_Interface_face_landmark
 4967 0004 00000000 		.word	0
 4968 0008 00000000 		.space	40
 4968      00000000 
 4968      00000000 
 4968      00000000 
 4968      00000000 
 4969              		.section	.rodata.str1.1,"aMS",%progbits,1
 4970              	.LC33:
 4971 0000 66616365 		.ascii	"face_landmark\000"
 4971      5F6C616E 
 4971      646D6172 
 4971      6B00
 4972              		.section	.rodata.NN_Interface_face_landmark,"a"
 4973              		.align	2
 4976              	NN_Interface_face_landmark:
 4977 0000 00000000 		.word	.LC33
 4978 0004 00000000 		.word	LL_ATON_EC_Network_Init_face_landmark
 4979 0008 00000000 		.word	LL_ATON_EC_Inference_Init_face_landmark
 4980 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_face_landmark
 4981 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_face_landmark
 4982 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_face_landmark
 4983 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_face_landmark
 4984 001c 00000000 		.word	LL_ATON_EpochBlockItems_face_landmark
 4985 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_face_landmark
 4986 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_face_landmark
 4987 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_face_landmark
 4988              		.section	.data.NN_Instance_yolo_detector,"aw"
 4989              		.align	2
 4992              	NN_Instance_yolo_detector:
 4993 0000 00000000 		.word	NN_Interface_yolo_detector
 4994 0004 00000000 		.word	0
 4995 0008 00000000 		.space	40
 4995      00000000 
 4995      00000000 
 4995      00000000 
 4995      00000000 
 4996              		.section	.rodata.str1.1
 4997              	.LC34:
 4998 000e 796F6C6F 		.ascii	"yolo_detector\000"
ARM GAS  /tmp/ccddOyyT.s 			page 178


 4998      5F646574 
 4998      6563746F 
 4998      7200
 4999              		.section	.rodata.NN_Interface_yolo_detector,"a"
 5000              		.align	2
 5003              	NN_Interface_yolo_detector:
 5004 0000 0E000000 		.word	.LC34
 5005 0004 00000000 		.word	LL_ATON_EC_Network_Init_yolo_detector
 5006 0008 00000000 		.word	LL_ATON_EC_Inference_Init_yolo_detector
 5007 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_yolo_detector
 5008 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_yolo_detector
 5009 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_yolo_detector
 5010 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_yolo_detector
 5011 001c 00000000 		.word	LL_ATON_EpochBlockItems_yolo_detector
 5012 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_yolo_detector
 5013 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_yolo_detector
 5014 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_yolo_detector
 5015              		.section	.psram_bss
 5016              		.align	5
 5019              	screen_buffer:
 5020 96000 00000000 		.space	768000
 5020      00000000 
 5020      00000000 
 5020      00000000 
 5020      00000000 
 5021              		.section	.bss.cpu_load,"aw",%nobits
 5022              		.align	3
 5025              	cpu_load:
 5026 0000 00000000 		.space	224
 5026      00000000 
 5026      00000000 
 5026      00000000 
 5026      00000000 
 5027              		.section	.data.disp,"aw"
 5028              		.align	2
 5031              	disp:
 5032 0000 00000000 		.space	168
 5032      00000000 
 5032      00000000 
 5032      00000000 
 5032      00000000 
 5033 00a8 00000000 		.space	20
 5033      00000000 
 5033      00000000 
 5033      00000000 
 5033      00000000 
 5034 00bc 01000000 		.word	1
 5035 00c0 00000000 		.word	0
 5036 00c4 00000000 		.space	3800
 5036      00000000 
 5036      00000000 
 5036      00000000 
 5036      00000000 
 5037              		.section	.bss.lcd_fg_buffer_rd_idx,"aw",%nobits
 5038              		.align	2
 5041              	lcd_fg_buffer_rd_idx:
 5042 0000 00000000 		.space	4
ARM GAS  /tmp/ccddOyyT.s 			page 179


 5043              		.section	.psram_bss
 5044              		.align	5
 5047              	lcd_fg_buffer:
 5048 151800 00000000 		.space	1536000
 5048      00000000 
 5048      00000000 
 5048      00000000 
 5048      00000000 
 5049              		.section	.bss.lcd_bg_buffer_capt_idx,"aw",%nobits
 5050              		.align	2
 5053              	lcd_bg_buffer_capt_idx:
 5054 0000 00000000 		.space	4
 5055              		.section	.data.lcd_bg_buffer_disp_idx,"aw"
 5056              		.align	2
 5059              	lcd_bg_buffer_disp_idx:
 5060 0000 01000000 		.word	1
 5061              		.section	.psram_bss
 5062              		.align	5
 5065              	lcd_bg_buffer:
 5066 2c8800 00000000 		.space	6144000
 5066      00000000 
 5066      00000000 
 5066      00000000 
 5066      00000000 
 5067              		.text
 5068              	.Letext0:
 5069              		.file 5 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5070              		.file 6 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5071              		.file 7 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5072              		.file 8 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5073              		.file 9 "Lib/FreeRTOS/Source/include/projdefs.h"
 5074              		.file 10 "Lib/FreeRTOS/Source/portable/GCC/ARM_CM55_NTZ/non_secure/portmacrocommon.h"
 5075              		.file 11 "Lib/FreeRTOS/Source/include/FreeRTOS.h"
 5076              		.file 12 "Lib/FreeRTOS/Source/include/task.h"
 5077              		.file 13 "Lib/FreeRTOS/Source/include/queue.h"
 5078              		.file 14 "Lib/FreeRTOS/Source/include/semphr.h"
 5079              		.file 15 "STM32Cube_FW_N6/Drivers/CMSIS/Include/core_cm55.h"
 5080              		.file 16 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n657xx.h"
 5081              		.file 17 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n6xx.h"
 5082              		.file 18 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_def.h"
 5083              		.file 19 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gpio.h"
 5084              		.file 20 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_dcmipp.h"
 5085              		.file 21 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gfxmmu.h"
 5086              		.file 22 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_pp_output_if.h"
 5087              		.file 23 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_yolov8_pp_if.h"
 5088              		.file 24 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/pd_pp_output_if.h"
 5089              		.file 25 "Inc/ld.h"
 5090              		.file 26 "Lib/screenl/Inc/scrl.h"
 5091              		.file 27 "STM32Cube_FW_N6/Drivers/BSP/STM32N6570-DK/stm32n6570_discovery.h"
 5092              		.file 28 "STM32Cube_FW_N6/Utilities/lcd/../Fonts/fonts.h"
 5093              		.file 29 "STM32Cube_FW_N6/Utilities/lcd/stm32_lcd.h"
 5094              		.file 30 "Lib/NemaGFX/include/nema_hal.h"
 5095              		.file 31 "Lib/NemaGFX/include/nema_cmdlist.h"
 5096              		.file 32 "Lib/Camera_Middleware/cmw_camera.h"
 5097              		.file 33 "Lib/ipl/Inc/IPL_resize.h"
 5098              		.file 34 "Lib/ai-postprocessing-wrapper/app_postprocess.h"
 5099              		.file 35 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_runtime.h"
ARM GAS  /tmp/ccddOyyT.s 			page 180


 5100              		.file 36 "Inc/app_cam.h"
 5101              		.file 37 "Inc/FreeRTOSConfig.h"
 5102              		.file 38 "Inc/stm32_lcd_ex.h"
 5103              		.file 39 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal.h"
 5104              		.file 40 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5105              		.file 41 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5106              		.file 42 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5107              		.file 43 "<built-in>"
ARM GAS  /tmp/ccddOyyT.s 			page 181


DEFINED SYMBOLS
                            *ABS*:00000000 app.c
     /tmp/ccddOyyT.s:26     .text.LL_Buffer_addr_start:00000000 $t
     /tmp/ccddOyyT.s:31     .text.LL_Buffer_addr_start:00000000 LL_Buffer_addr_start
     /tmp/ccddOyyT.s:76     .text.clamp_point:00000000 $t
     /tmp/ccddOyyT.s:81     .text.clamp_point:00000000 clamp_point
     /tmp/ccddOyyT.s:162    .text.clamp_corners:00000000 $t
     /tmp/ccddOyyT.s:167    .text.clamp_corners:00000000 clamp_corners
     /tmp/ccddOyyT.s:232    .text.roi_to_corners:00000000 $t
     /tmp/ccddOyyT.s:237    .text.roi_to_corners:00000000 roi_to_corners
     /tmp/ccddOyyT.s:403    .text.isp_thread_fct:00000000 $t
     /tmp/ccddOyyT.s:408    .text.isp_thread_fct:00000000 isp_thread_fct
     /tmp/ccddOyyT.s:454    .text.isp_thread_fct:00000028 $d
     /tmp/ccddOyyT.s:4893   .bss.isp_sem:00000000 isp_sem
     /tmp/ccddOyyT.s:4876   .rodata.__func__.19:00000000 __func__.19
     /tmp/ccddOyyT.s:462    .text.on_pd_toggle_button_click:00000000 $t
     /tmp/ccddOyyT.s:467    .text.on_pd_toggle_button_click:00000000 on_pd_toggle_button_click
     /tmp/ccddOyyT.s:541    .text.on_pd_toggle_button_click:0000004c $d
     /tmp/ccddOyyT.s:4866   .rodata.__func__.17:00000000 __func__.17
     /tmp/ccddOyyT.s:548    .text.on_ld_toggle_button_click:00000000 $t
     /tmp/ccddOyyT.s:553    .text.on_ld_toggle_button_click:00000000 on_ld_toggle_button_click
     /tmp/ccddOyyT.s:627    .text.on_ld_toggle_button_click:0000004c $d
     /tmp/ccddOyyT.s:4861   .rodata.__func__.16:00000000 __func__.16
     /tmp/ccddOyyT.s:634    .text.button_process:00000000 $t
     /tmp/ccddOyyT.s:639    .text.button_process:00000000 button_process
     /tmp/ccddOyyT.s:697    .text.button_init.part.0:00000000 $t
     /tmp/ccddOyyT.s:702    .text.button_init.part.0:00000000 button_init.part.0
     /tmp/ccddOyyT.s:725    .text.button_init.part.0:00000010 $d
     /tmp/ccddOyyT.s:4856   .rodata.__func__.15:00000000 __func__.15
     /tmp/ccddOyyT.s:732    .text.display_ld_hand:00000000 $t
     /tmp/ccddOyyT.s:737    .text.display_ld_hand:00000000 display_ld_hand
     /tmp/ccddOyyT.s:1047   .text.nn_thread_fct:00000000 $t
     /tmp/ccddOyyT.s:1052   .text.nn_thread_fct:00000000 nn_thread_fct
     /tmp/ccddOyyT.s:2006   .text.nn_thread_fct:00000328 $d
     /tmp/ccddOyyT.s:4992   .data.NN_Instance_yolo_detector:00000000 NN_Instance_yolo_detector
     /tmp/ccddOyyT.s:4836   .rodata.__func__.11:00000000 __func__.11
     /tmp/ccddOyyT.s:4831   .rodata.__func__.10:00000000 __func__.10
     /tmp/ccddOyyT.s:4935   .bss.nn_input_queue:00000000 nn_input_queue
     /tmp/ccddOyyT.s:4841   .rodata.__func__.12:00000000 __func__.12
     /tmp/ccddOyyT.s:4826   .rodata.__func__.9:00000000 __func__.9
     /tmp/ccddOyyT.s:4821   .rodata.__func__.8:00000000 __func__.8
     /tmp/ccddOyyT.s:4816   .rodata.__func__.7:00000000 __func__.7
     /tmp/ccddOyyT.s:2035   .text.nn_thread_fct:00000390 $t
     /tmp/ccddOyyT.s:2653   .text.nn_thread_fct:000005c4 $d
     /tmp/ccddOyyT.s:4965   .data.NN_Instance_face_landmark:00000000 NN_Instance_face_landmark
     /tmp/ccddOyyT.s:4959   .bss.ld_landmarks:00000000 ld_landmarks
     /tmp/ccddOyyT.s:4811   .rodata.__func__.6:00000000 __func__.6
     /tmp/ccddOyyT.s:5031   .data.disp:00000000 disp
     /tmp/ccddOyyT.s:2673   .text.display_hand:00000000 $t
     /tmp/ccddOyyT.s:2679   .text.display_hand:00000000 display_hand
     /tmp/ccddOyyT.s:2957   .text.display_hand:0000012c $d
     /tmp/ccddOyyT.s:2979   .text.dp_thread_fct:00000000 $t
     /tmp/ccddOyyT.s:2984   .text.dp_thread_fct:00000000 dp_thread_fct
     /tmp/ccddOyyT.s:3681   .text.dp_thread_fct:00000278 $d
     /tmp/ccddOyyT.s:4871   .rodata.__func__.18:00000000 __func__.18
     /tmp/ccddOyyT.s:4851   .rodata.__func__.14:00000000 __func__.14
     /tmp/ccddOyyT.s:5025   .bss.cpu_load:00000000 cpu_load
ARM GAS  /tmp/ccddOyyT.s 			page 182


     /tmp/ccddOyyT.s:4846   .rodata.__func__.13:00000000 __func__.13
     /tmp/ccddOyyT.s:5041   .bss.lcd_fg_buffer_rd_idx:00000000 lcd_fg_buffer_rd_idx
     /tmp/ccddOyyT.s:5047   .psram_bss:00151800 lcd_fg_buffer
     /tmp/ccddOyyT.s:3726   .text.app_run:00000000 $t
     /tmp/ccddOyyT.s:3732   .text.app_run:00000000 app_run
     /tmp/ccddOyyT.s:4315   .text.app_run:0000021c $d
     /tmp/ccddOyyT.s:5065   .psram_bss:002c8800 lcd_bg_buffer
     /tmp/ccddOyyT.s:5059   .data.lcd_bg_buffer_disp_idx:00000000 lcd_bg_buffer_disp_idx
     /tmp/ccddOyyT.s:5019   .psram_bss:00096000 screen_buffer
     /tmp/ccddOyyT.s:4806   .rodata.__func__.5:00000000 __func__.5
     /tmp/ccddOyyT.s:4881   .rodata.__func__.20:00000000 __func__.20
     /tmp/ccddOyyT.s:4941   .psram_bss:00000000 nn_input_buffers
     /tmp/ccddOyyT.s:4887   .bss.isp_sem_buffer:00000000 isp_sem_buffer
     /tmp/ccddOyyT.s:4929   .bss.nn_thread:00000000 nn_thread
     /tmp/ccddOyyT.s:4923   .bss.nn_thread_stack:00000000 nn_thread_stack
     /tmp/ccddOyyT.s:4917   .bss.dp_thread:00000000 dp_thread
     /tmp/ccddOyyT.s:4911   .bss.dp_thread_stack:00000000 dp_thread_stack
     /tmp/ccddOyyT.s:4905   .bss.isp_thread:00000000 isp_thread
     /tmp/ccddOyyT.s:4899   .bss.isp_thread_stack:00000000 isp_thread_stack
     /tmp/ccddOyyT.s:4357   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 $t
     /tmp/ccddOyyT.s:4363   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 CMW_CAMERA_PIPE_FrameEventCallback
     /tmp/ccddOyyT.s:4687   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000150 $d
     /tmp/ccddOyyT.s:4801   .rodata.__func__.3:00000000 __func__.3
     /tmp/ccddOyyT.s:4796   .rodata.__func__.2:00000000 __func__.2
     /tmp/ccddOyyT.s:4953   .bss.frame_event_nb:00000000 frame_event_nb
     /tmp/ccddOyyT.s:4791   .rodata.__func__.1:00000000 __func__.1
     /tmp/ccddOyyT.s:4947   .bss.frame_event_nb_for_resize:00000000 frame_event_nb_for_resize
     /tmp/ccddOyyT.s:4786   .rodata.__func__.0:00000000 __func__.0
     /tmp/ccddOyyT.s:5053   .bss.lcd_bg_buffer_capt_idx:00000000 lcd_bg_buffer_capt_idx
     /tmp/ccddOyyT.s:4710   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 $t
     /tmp/ccddOyyT.s:4716   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 CMW_CAMERA_PIPE_VsyncEventCallback
     /tmp/ccddOyyT.s:4779   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000030 $d
     /tmp/ccddOyyT.s:4884   .bss.isp_sem_buffer:00000000 $d
     /tmp/ccddOyyT.s:4890   .bss.isp_sem:00000000 $d
     /tmp/ccddOyyT.s:4896   .bss.isp_thread_stack:00000000 $d
     /tmp/ccddOyyT.s:4902   .bss.isp_thread:00000000 $d
     /tmp/ccddOyyT.s:4908   .bss.dp_thread_stack:00000000 $d
     /tmp/ccddOyyT.s:4914   .bss.dp_thread:00000000 $d
     /tmp/ccddOyyT.s:4920   .bss.nn_thread_stack:00000000 $d
     /tmp/ccddOyyT.s:4926   .bss.nn_thread:00000000 $d
     /tmp/ccddOyyT.s:4932   .bss.nn_input_queue:00000000 $d
     /tmp/ccddOyyT.s:4938   .psram_bss:00000000 $d
     /tmp/ccddOyyT.s:4944   .bss.frame_event_nb_for_resize:00000000 $d
     /tmp/ccddOyyT.s:4950   .bss.frame_event_nb:00000000 $d
     /tmp/ccddOyyT.s:4956   .bss.ld_landmarks:00000000 $d
     /tmp/ccddOyyT.s:4962   .data.NN_Instance_face_landmark:00000000 $d
     /tmp/ccddOyyT.s:4976   .rodata.NN_Interface_face_landmark:00000000 NN_Interface_face_landmark
     /tmp/ccddOyyT.s:4973   .rodata.NN_Interface_face_landmark:00000000 $d
     /tmp/ccddOyyT.s:4989   .data.NN_Instance_yolo_detector:00000000 $d
     /tmp/ccddOyyT.s:5003   .rodata.NN_Interface_yolo_detector:00000000 NN_Interface_yolo_detector
     /tmp/ccddOyyT.s:5000   .rodata.NN_Interface_yolo_detector:00000000 $d
     /tmp/ccddOyyT.s:5022   .bss.cpu_load:00000000 $d
     /tmp/ccddOyyT.s:5028   .data.disp:00000000 $d
     /tmp/ccddOyyT.s:5038   .bss.lcd_fg_buffer_rd_idx:00000000 $d
     /tmp/ccddOyyT.s:5050   .bss.lcd_bg_buffer_capt_idx:00000000 $d
     /tmp/ccddOyyT.s:5056   .data.lcd_bg_buffer_disp_idx:00000000 $d
                           .group:00000000 wm4.0.c552ae9005b0f2cca11872fae5d4b7f2
ARM GAS  /tmp/ccddOyyT.s 			page 183


                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.e0c9f337c65cb9f22ed5f23d082bc78b
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_gcc.h.26.7a5fd1a99dbedde687044a4433ab3e15
                           .group:00000000 wm4.newlib.h.7.591ac1bd65c1f5b34864757667a05252
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.math.h.13.47cfc34cae8a1153323939c4d32cf7c2
                           .group:00000000 wm4.float.h.29.0e9d9baf95ec39f9555dc80c6e28186b
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.arm_math_types.h.94.a6c8422e2657ad4cd95bd8be69ba02aa
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4.arm_mve.h.38.47b22bbd301ce82bc6dafd1a387f65a3
                           .group:00000000 wm4.arm_math_types.h.559.cab78f278b684a3ea2271947c7aea680
                           .group:00000000 wm4.arm_math_memory.h.28.fe8a81c6a9ac13061a5f748732089249
                           .group:00000000 wm4.none.h.185.db055cca83e83f96d8d0bb450fbdf4bb
                           .group:00000000 wm4.utils.h.27.57524573fe37b04009eecf3582a4c591
                           .group:00000000 wm4.fast_math_functions.h.28.8eb7477260c1d6b62047c49a01c4cbaa
                           .group:00000000 wm4.controller_functions.h.28.7bed7d7a726df2f65b8a3d89cff01247
                           .group:00000000 wm4.filtering_functions.h.46.6cf1424fb1f86d5f9958d208b83340a1
                           .group:00000000 wm4.postprocess_conf.h.22.40318f185f671a7d25dfae2fe1604bec
                           .group:00000000 wm4.app.h.24.8dd4c0fb84cd0b63d7417a5327c5d796
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.47.dc31ec4674d7bcb103c9f08809549f45
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4.app_cam.h.19.2495a46447d71a1025370e29864418f5
                           .group:00000000 wm4.app_config.h.19.88dee04c97f3e42d3acfeeca22b174e5
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.ll_aton_config.h.20.79eb8be0291ee9086e6be08969d61846
                           .group:00000000 wm4.ll_aton_attributes.h.20.26d469460cb32db5740effdc8cc403f3
                           .group:00000000 wm4.assert.h.11.d99a111e320bc5106fc4046225782672
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.ae5ea2b0ff9ea6e39e585807e35200d3
                           .group:00000000 wm4.ll_aton_util.h.34.9098eaa90d3d72b819973556e3e5fe44
                           .group:00000000 wm4.FreeRTOS.h.59.647b1b0da38e4e98108aae13c8abe9ee
                           .group:00000000 wm4.FreeRTOSConfig.h.59.2629c72cff9e6dbe880a2dc225eae516
                           .group:00000000 wm4.FreeRTOS.h.80.7742fabaf5accf3762dc12f7f259a8a0
                           .group:00000000 wm4.projdefs.h.30.55a824156f299c075c33148a9fdadb99
                           .group:00000000 wm4.portmacro.h.30.cbb4b2da41f551c2a9904f0d03a1ce3e
ARM GAS  /tmp/ccddOyyT.s 			page 184


                           .group:00000000 wm4.portmacrocommon.h.30.d5cb67896ab50a95311be7e023da5c4f
                           .group:00000000 wm4.portmacro.h.68.4051ecf710d074fb55b16d91dfebeeaa
                           .group:00000000 wm4.portable.h.61.d557c57974d490f056246a26cdcddd6c
                           .group:00000000 wm4.mpu_wrappers.h.30.ccc5f1a6903f941a88c268f5f62af3fe
                           .group:00000000 wm4.portable.h.189.522b8bd52a171d3fd1432ef06d0caa63
                           .group:00000000 wm4.FreeRTOS.h.102.fb871f3e464d99c5a57b3115545a02ad
                           .group:00000000 wm4.list.h.59.bce6419520cd4f5f98779a1530bf2118
                           .group:00000000 wm4.task.h.56.84290139c73b47f5b9aac361361a2a31
                           .group:00000000 wm4.queue.h.68.219f47fba8b59640449b84d04c5bd6d8
                           .group:00000000 wm4.semphr.h.40.c1a9c6f5bf0feb4da0b6a45d234a79d0
                           .group:00000000 wm4.ll_aton_platform.h.20.06ded592ee586a6abb6019a90ebd54df
                           .group:00000000 wm4.stm32n6xx_hal_conf.h.21.004a06df6e15ac197e03f723792da58a
                           .group:00000000 wm4.arm_cmse.h.103.a0d15a79c4c9a67da8d5831704d7248e
                           .group:00000000 wm4.stm32n6xx.h.34.80585dd08aa426c932f6311fdb7386da
                           .group:00000000 wm4.stm32n657xx.h.26.acd272cb67318cc1a4791ce2f0720ca6
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm55.h.68.832d5cf835639cc0d28219c3d2867330
                           .group:00000000 wm4.core_cm55.h.196.52e437a270752da561676e507b35baeb
                           .group:00000000 wm4.mpu_armv8.h.32.9d72426c8e2b47753456dcb84802c5b3
                           .group:00000000 wm4.pmu_armv8.h.32.eaa95f88a71b29390b135fd81c071b6b
                           .group:00000000 wm4.core_cm55.h.4411.860dad8650880893dd57b815844f7186
                           .group:00000000 wm4.cachel1_armv7.h.32.abd77761a989e008b0c60891114a33c7
                           .group:00000000 wm4.stm32n657xx.h.575.1c2a5e6bedffc6f9083dcc857bc6d09d
                           .group:00000000 wm4.stm32n6xx.h.114.5cf793d8af485e14f110e3e24bde1aa5
                           .group:00000000 wm4.stm32_hal_legacy.h.22.87fb12bf5a1a1e00fc134f22bc9aa8c4
                           .group:00000000 wm4.stm32n6xx_hal_def.h.63.2cbbf1954826c09c874c4e06e42e8b71
                           .group:00000000 wm4.stm32n6xx_ll_bus.h.38.2366a295ee4cdb04833997d3787fcd2d
                           .group:00000000 wm4.stm32n6xx_ll_rcc.h.21.002e22a16fd7f67dde6dce41e8ba9620
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.194.1cb1283e40f9bebcd3fba2a9a961838e
                           .group:00000000 wm4.stm32n6xx_hal_rcc_ex.h.21.79aa32178dfef625fbd20d362449acfa
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.4359.3f0b7ad33826d95438602c9aebc08af9
                           .group:00000000 wm4.stm32n6xx_hal_gpio.h.21.89d54af663b98eb8fc098192053f7eeb
                           .group:00000000 wm4.stm32n6xx_hal_gpio_ex.h.22.4acb2e3511a98bb48b81cfc8e09fd59e
                           .group:00000000 wm4.stm32n6xx_hal_rif.h.21.424d0bafb874a777dee3742a22e13037
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.21.61e48c5c2e8d25d22177834b232fe45c
                           .group:00000000 wm4.stm32n6xx_hal_dma_ex.h.21.66e597beb090a165329d6ccf665e41bc
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.1020.87e2180c009560b617c1f8208140c950
                           .group:00000000 wm4.stm32n6xx_hal_cortex.h.21.f493623cc58f9454ab4eae41e395c5cc
                           .group:00000000 wm4.stm32n6xx_hal_bsec.h.21.61b309e67dd810e28897a01b1b21a97f
                           .group:00000000 wm4.stm32n6xx_hal_dcmipp.h.21.f538bfd785c6469670251ac9bc7af55d
                           .group:00000000 wm4.stm32n6xx_hal_dma2d.h.21.75c8d46cdbb72970123b3f34ae2043d7
                           .group:00000000 wm4.stm32n6xx_hal_exti.h.21.fda87e715ea6b98239ec30171d1df594
                           .group:00000000 wm4.stm32n6xx_hal_gfxmmu.h.21.9784a9103143d48bd3c37389d0e0b8e6
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.21.3f483626ff64c5bf027265bb2e1d1331
                           .group:00000000 wm4.stm32n6xx_hal_i2c_ex.h.21.79e9196c22282cdaf6b4047893638c45
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.741.1084702632703acc669e4282b3043372
                           .group:00000000 wm4.stm32n6xx_hal_icache.h.21.194b4ec6e76f32b14f65c85616854850
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.21.ae1eb09930e7e550e48e418ac5849e4d
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.1002.b13ede7fc94ed5ad1c6768a157d2149a
                           .group:00000000 wm4.stm32n6xx_ll_usb.h.21.d518a5d97876c2ff49040c20a2c4a120
                           .group:00000000 wm4.stm32n6xx_hal_pcd.h.155.27040aac6844effe2af8c180caf1dd2e
                           .group:00000000 wm4.stm32n6xx_hal_pwr.h.21.cdb73e4869c3fed3fc84f901ec0e5f0a
                           .group:00000000 wm4.stm32n6xx_hal_pwr_ex.h.21.1a673224a58b0c1e5fad8eeda6514208
                           .group:00000000 wm4.stm32n6xx_hal_ramcfg.h.21.a62dfbb4d2c14e9a8c634a215e37bd3d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.21.9f810303326e2d91749800e9911f8e4d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.906.93ec0695066db4253cdbcb7d84358a0b
                           .group:00000000 wm4.stm32n6xx_hal_tim.h.21.839dd2b2a70382fb2c44f8f293a84d5f
ARM GAS  /tmp/ccddOyyT.s 			page 185


                           .group:00000000 wm4.stm32n6xx_hal_tim_ex.h.21.e372d5ac63c13441211ea4ecbd353150
                           .group:00000000 wm4.stm32n6xx_hal_uart.h.21.230f549bfa0d5ebfd77bfb311b2aca15
                           .group:00000000 wm4.stm32n6xx_hal_uart_ex.h.21.a0d5511e1d0703b7b5278c8f5472b96d
                           .group:00000000 wm4.stm32n6xx_hal_xspi.h.21.e17898be2073b6b6b19faf30b4e304e9
                           .group:00000000 wm4.stm32n6xx_hal_cacheaxi.h.21.7c3375b7903ec42376e4883320997f74
                           .group:00000000 wm4.stm32n6xx_hal_gpu2d.h.21.48d0249122abad294a630c39cc4ebaed
                           .group:00000000 wm4.stm32n6xx_hal.h.81.5e59143eba07faca3e9aeaa5470826c8
                           .group:00000000 wm4.ll_aton_platform.h.288.664a74b8c5792a861b3d52bd39f4a693
                           .group:00000000 wm4.ATON.h.19.cf7dff4c0f1bfe90e42066f604751dc7
                           .group:00000000 wm4.ll_aton_rcompat.h.22.b2bd0d777466a5ac720f3b2429c5fea7
                           .group:00000000 wm4.ll_aton_platform.h.383.f09ccd502bb682b863f991d963ee7462
                           .group:00000000 wm4.ll_aton_osal_freertos.h.62.85a065f77def7f6fef26149f92fe1378
                           .group:00000000 wm4.ll_aton_osal.h.116.bc018513feb9b28713cf2afc78ec679b
                           .group:00000000 wm4.ll_aton_rt_user_api.h.71.e6b7f8d03b2c998f838260ad3cb6cd40
                           .group:00000000 wm4.od_pp_output_if.h.11.62a3da738caf687aa42d96759c237b2c
                           .group:00000000 wm4.mpe_pp_output_if.h.11.db0dd5ceb87072354c56b51e8f9b2a0d
                           .group:00000000 wm4.pd_pp_output_if.h.19.b7de9bd1876930668a82409743b6dbf4
                           .group:00000000 wm4.spe_pp_output_if.h.11.cb67d0d15a71c95e0e8b7fee8a9755fe
                           .group:00000000 wm4.iseg_pp_output_if.h.11.df7e791a4e783022a9fba78cdb1c05d4
                           .group:00000000 wm4.sseg_pp_output_if.h.11.caf00fb1ae24f8dc9c80bee7827b96f2
                           .group:00000000 wm4.app_postprocess.h.49.6186ff44b2c06089fe0297042919e83a
                           .group:00000000 wm4.isp_conf.h.21.bfb1d020517608810095aa56acf25d1e
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.isp_core.h.109.be5387f515355b6edcb70af2607f9a68
                           .group:00000000 wm4.ld.h.19.137dbadf938c8a0cfe15d7982e5e13e2
                           .group:00000000 wm4.cmw_errno.h.21.91021ac9b2627a1ce6b8517d105715d1
                           .group:00000000 wm4.stm32n6570_discovery_conf.h.21.f52c8202689527a3dc0d9c6cba9c0416
                           .group:00000000 wm4.stm32n6570_discovery_errno.h.22.80e523b09444a11ebe4b6e24ae914f0e
                           .group:00000000 wm4.stm32n6570_discovery_bus.h.62.3b5b2c6837f7adeb489604fa214cd371
                           .group:00000000 wm4.cmw_camera.h.33.b34cbb506ffb5bbc0bae0cee9fc48966
                           .group:00000000 wm4.stm32n6570_discovery.h.25.5fc3699797f7c334a2e25a2a6a563b07
                           .group:00000000 wm4.lcd.h.21.98701c105e66fef2e089854e5bc0fe32
                           .group:00000000 wm4.stm32_lcd.h.55.1a04e503950bf34ef3721d2ebb9542fc
                           .group:00000000 wm4.stm32_lcd_ex.h.21.eaf9c9c1000e162e58259e027110f2f5
                           .group:00000000 wm4.utils.h.19.2f7e4a8a839d9215c56961f5a9914d6d
                           .group:00000000 wm4.nema_sys_defs.h.24.0b35b5138cb9b4a3130f5d424bc2bcc0
                           .group:00000000 wm4.nema_hal.h.193.74a3b292db2bcbda0132dae40ae0f4e5
                           .group:00000000 wm4.nema_cmdlist.h.30.a652eb980f08f0ed22ad00119d504926
                           .group:00000000 wm4.nema_graphics.h.61.b3907f86eccb4e55a4b69e8aebdd3657
                           .group:00000000 wm4.nema_blender.h.30.fb13cc9231bd108bca212984b3a891e0
                           .group:00000000 wm4.nema_math.h.30.ef7265c89982f7dae18e3ec2d7f3d003
                           .group:00000000 wm4.nema_version.h.35.6aae27202c190348dff84b89d4c12df7
                           .group:00000000 wm4.nema_error.h.29.50848ed81d21ff4ae4b870fae3681118

UNDEFINED SYMBOLS
cos
sin
xQueueSemaphoreTake
__assert_func
CAM_IspUpdate
xQueueGenericSend
BSP_PB_GetState
UTIL_LCD_FillCircle
LL_ATON_Output_Buffers_Info_yolo_detector
LL_ATON_Input_Buffers_Info_yolo_detector
ARM GAS  /tmp/ccddOyyT.s 			page 186


app_postprocess_init
LL_ATON_Output_Buffers_Info_face_landmark
LL_ATON_Input_Buffers_Info_face_landmark
HAL_GetTick
CAM_NNPipe_Start
LL_ATON_Set_User_Input_Buffer_yolo_detector
LL_ATON_RT_Main
app_postprocess_run
memset
IPL_resize_bilinear_iu8ou8_with_strides_RGB
ld_post_process
memcpy
UTIL_LCD_DrawRect
UTIL_LCD_DrawLine
__aeabi_ul2d
BSP_PB_Init
SCRL_SetAddress_NoReload
UTIL_LCD_FillRect
TIM4_Get_Value
ulTaskGetIdleRunTimeCounter
memmove
UTIL_LCD_GetFont
UTIL_LCDEx_PrintfAt
SCRL_ReloadLayer
puts
SCRL_Init
UTIL_LCD_SetLayer
UTIL_LCD_Clear
UTIL_LCD_SetFont
UTIL_LCD_SetTextColor
xQueueCreateCountingSemaphoreStatic
vQueueDelete
CAM_Init
xQueueCreateMutexStatic
CAM_DisplayPipe_Start
xTaskCreateStatic
Font20
CMW_CAMERA_GetDCMIPPHandle
HAL_DCMIPP_PIPE_SetMemoryAddress
SRCL_Update
xPortIsInsideInterrupt
xQueueGiveFromISR
LL_ATON_EC_Network_Init_face_landmark
LL_ATON_EC_Inference_Init_face_landmark
LL_ATON_Set_User_Input_Buffer_face_landmark
LL_ATON_Get_User_Input_Buffer_face_landmark
LL_ATON_Set_User_Output_Buffer_face_landmark
LL_ATON_Get_User_Output_Buffer_face_landmark
LL_ATON_EpochBlockItems_face_landmark
LL_ATON_Internal_Buffers_Info_face_landmark
LL_ATON_EC_Network_Init_yolo_detector
LL_ATON_EC_Inference_Init_yolo_detector
LL_ATON_Get_User_Input_Buffer_yolo_detector
LL_ATON_Set_User_Output_Buffer_yolo_detector
LL_ATON_Get_User_Output_Buffer_yolo_detector
LL_ATON_EpochBlockItems_yolo_detector
LL_ATON_Internal_Buffers_Info_yolo_detector
ARM GAS  /tmp/ccddOyyT.s 			page 187


