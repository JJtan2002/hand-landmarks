ARM GAS  /tmp/ccl1pJez.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 4
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"app.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "Src/app.c"
  25              		.section	.text.LL_Buffer_addr_start,"ax",%progbits
  26              		.align	1
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	LL_Buffer_addr_start:
  32              	.LVL0:
  33              	.LFB2660:
  34              		.file 2 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h"
   1:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
   2:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   3:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @file    ll_aton_NN_interface.h
   4:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @author  SRA Artificial Intelligence & Embedded Architectures
   5:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief   Interface that defines a NN generated by the AtoNN Compiler.
   6:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   7:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @attention
   8:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
   9:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * Copyright (c) 2024 STMicroelectronics.
  10:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * All rights reserved.
  11:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  12:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * in the root directory of this software component.
  14:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  16:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
  17:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
  18:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  19:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef __LL_ATON_NN_INTERFACE_H
  20:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define __LL_ATON_NN_INTERFACE_H
  21:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  22:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef __cplusplus
  23:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** extern "C"
  24:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** {
ARM GAS  /tmp/ccl1pJez.s 			page 2


  25:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
  26:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  27:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <assert.h>
  28:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdbool.h>
  29:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stddef.h>
  30:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdint.h>
  31:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  32:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_config.h"
  33:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  34:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_attributes.h"
  35:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_util.h"
  36:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  37:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup User I/O Return Values & Callback Event Types
  38:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  39:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  40:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  41:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_User_IO_Result
  42:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_NOERROR,     /**< */
  44:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_ALIGN, /**< */
  45:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_SIZE,  /**< */
  46:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_INDEX, /**< */
  47:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_User_IO_Result_t;
  48:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  49:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_RT_Callbacktype
  50:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  51:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_START,  /**< Callback called before start_epoch_block */
  52:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_START, /**< Callback called after start_epoch_block */
  53:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_END,    /**< Callback called before end_epoch_block */
  54:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_END,   /**< Callback called after end_epoch_block */
  55:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_Init,    /**< Callback called after `LL_ATON_RT_Init_Network`,
  56:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  57:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_DeInit,  /**< Callback called after `LL_ATON_RT_DeInit_Network`,
  58:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  59:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Init,    /**< Callback called after `LL_ATON_RT_RuntimeInit` */
  60:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Deinit,  /**< Callback called before `LL_ATON_RT_RuntimeDeInit` */
  61:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_RT_Callbacktype_t;
  62:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  63:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
  64:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
  65:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  66:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  67:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Epoch Blocks
  68:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  69:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  70:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  71:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /* this is needed to avoid some compilers (e.g. KEIL) that observe a strict semantic about conver
  72:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * pointers to integers in cost initializers
  73:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  74:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef union
  75:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  76:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     unsigned char *p;
  77:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t i;
  78:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } __LL_address_t;
  79:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  80:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*EpochBlock_FuncPtr_t)(const void *epoch_block);
  81:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/ccl1pJez.s 			page 3


  82:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
  83:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_NONE = 0x0,                 /**< */
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_start = (0x1 << 0),   /**< First EpochBlock of an Epoch */
  86:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_end = (0x1 << 1),     /**< Last EpochBlock of an Epoch */
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob = (0x1 << 2),          /**< Item is an Epoch Blob */
  88:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_last_eb = (0x1 << 3),       /**< Last EpochBlock */
  89:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_hw = (0x1 << 4),       /**< Pure HW EpochBlock */
  90:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_sw = (0x1 << 5),       /**< Pure SW EpochBlock */
  91:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_hybrid = (0x1 << 6),        /**< Hybrid EpochBlock (i.e. mixed HW/SW) */
  92:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_internal = (0x1 << 7),      /**< ATON lib internal EpochBlock (used to impleme
  93:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob_encrypted = (0x1 << 8) /**< The blob is encrypted and must be decrypted o
  94:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_Flags_t;
  95:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  96:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
  97:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  98:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t start_epoch_block; /**< Method to execute the EpochBlock */
  99:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t end_epoch_block;   /**< Method to be executed when the EpochBlock ends */
 100:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t blob_address;                 /**< Blob address (in case this EpochBlock represents a
 101:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t wait_mask;                     /**< Mask needed to check when an EpochBlock ends
 102:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - if epoch blob: number (not bitmask) of epoch co
 103:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - otherwise: bitmask with all output streaming en
 104:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t flags;                         /**< EpochBlock flags */
 105:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef LL_ATON_EB_DBG_INFO
 106:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t epoch_num;             /**< Epoch number / First epoch number within blob */
 107:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t last_epoch_num;        /**< Epoch number / Last epoch number within blob */
 108:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t in_streng_mask;       /**< Debug information about input streaming engines used in epo
 109:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t out_streng_mask;      /**< Debug information about output streaming engines used in ep
 110:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_npu_cycles; /**< Debug information estimates for NPU cycles in epoch w/o mem
 111:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_tot_cycles; /**< Debug information estimates for NPU cycles in epoch w/ memo
 112:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                             // LL_ATON_EB_DBG_INFO
 113:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_ItemTypeDef;
 114:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef EpochBlock_ItemTypeDef LL_ATON_RT_EpochBlockItem_t;
 115:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 116:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 117:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 118:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 119:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 120:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for User Callbacks
 121:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 122:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 123:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 124:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 125:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last one of an array of `const EpochBlock_ItemType
 126:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 127:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 128:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb);
 129:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 130:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 131:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the first EpochBlock of an Epoch
 132:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 133:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 134:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb);
 135:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 136:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 137:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last EpochBlock of an Epoch
 138:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
ARM GAS  /tmp/ccl1pJez.s 			page 4


 139:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 140:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb);
 141:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 142:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 143:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the an Epoch Blob
 144:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 145:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 146:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb);
 147:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 148:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 149:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if - in case this epoch is a blob (see above) - the blob is encrypted
 150:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 151:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 152:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb);
 153:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 154:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 155:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is pure SW epoch
 156:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 157:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 158:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb);
 159:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 160:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 161:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a pure HW or mixed SW/HW epoch
 162:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 163:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 164:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb);
 165:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 166:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 167:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a hybrid epoch
 168:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 169:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 170:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb);
 171:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 172:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 173:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is an internal epoch
 174:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 175:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 176:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb);
 177:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 178:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 179:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the Epoch controller id to use
 180:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 181:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 182:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb);
 183:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 184:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 185:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the address of the configuration of the epoch controller (the blob address)
 186:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 187:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 188:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb);
 189:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 190:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 191:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer types definition
 192:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 193:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 194:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 195:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
ARM GAS  /tmp/ccl1pJez.s 			page 5


 196:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 197:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 198:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Input, Output, and Internal Buffers
 199:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 200:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 201:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 202:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 203:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 204:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UNDEFINED = 0,
 205:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT = 1,
 206:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT2 = 2,
 207:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT2 = 3,
 208:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT4 = 4,
 209:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT4 = 5,
 210:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT8 = 6,
 211:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT8 = 7,
 212:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT16 = 8,
 213:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT16 = 9,
 214:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT32 = 10,
 215:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT64 = 11,
 216:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_STRING = 12,
 217:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BOOL = 13,
 218:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT16 = 14,
 219:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_DOUBLE = 15,
 220:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT32 = 16,
 221:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT64 = 17,
 222:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX64 = 18,
 223:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX128 = 19,
 224:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BFLOAT16 = 20,
 225:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FXP = 100 // AtoNN specific
 226:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_DataType_TypeDef;
 227:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 228:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 229:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer Channel position
 230:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 231:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 232:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 233:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 234:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_UNDEFINED = 0, /**< No channel present */
 235:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_First = 1,     /**< Channel First         ( ...B C H W )*/
 236:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Last = 2,      /**< Channel Last          ( ...B H W C ) */
 237:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Mixed = 3,     /**< Channel with Batch(b) ( ...B C/b H W b ) */
 238:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_CHPos_TypeDef;
 239:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 240:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 241:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer definition
 242:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 243:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 244:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 245:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *name;             /**< Buffer name. NULL if end of list */
 246:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     __LL_address_t addr_base;     /**< Buffer base address */
 247:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_start;        /**< Offset of the buffer start address from the base address */
 248:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_end;          /**< Offset of the buffer end address from the base address
 249:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (first bytes address beyond buffer length) */
 250:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_limit;        /**< Offset of the limiter address from the base address,
 251:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (needed for configuring streaming engines) */
 252:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_user_allocated;    /**< */
ARM GAS  /tmp/ccl1pJez.s 			page 6


 253:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_param;             /**< */
 254:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t epoch;               /**< */
 255:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t batch;               /**< */
 256:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *mem_shape;    /**< shape as seen by the user in memory (only valid for input/ou
 257:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t mem_ndims;           /**< Number of dimensions of mem_shape (Length of mem_shape) */
 258:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_CHPos_TypeDef chpos;   /**< Position  of channels dimension in mem shape */
 259:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_DataType_TypeDef type; /**< */
 260:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qm;                    /**< */
 261:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qn;                    /**< */
 262:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t Qunsigned;            /**< */
 263:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t ndims;                /**< */
 264:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t nbits;                /**< */
 265:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t per_channel;          /**< */
 266:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *shape;        /**< */
 267:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const float *scale;           /**< */
 268:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const int16_t *offset;        /**< This can become int8 or uint8 based on the Qunsigned field.
 269:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (This field Must have the same format of the quantized value
 270:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_Buffer_InfoTypeDef;
 271:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 272:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 273:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 274:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 275:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 276:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for Buffer Analysis
 277:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 278:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 279:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 280:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 281:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the base address of the mem pool the buffer is allocated in
 282:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 283:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 284:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf);
 285:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 286:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 287:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the start address of the buffer
 288:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 289:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 290:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf);
 291:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 292:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 293:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the end address of the buffer
 294:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 295:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 296:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf);
 297:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 298:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 299:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the limit address of the buffer
 300:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 301:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 302:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf);
 303:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 304:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 305:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the length of the buffer
 306:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 307:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 308:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf);
 309:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/ccl1pJez.s 			page 7


 310:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 311:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the buffer elements number of bits
 312:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 313:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 314:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_bits(const LL_Buffer_InfoTypeDef *buf);
 315:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 316:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 317:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 318:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 319:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 320:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types and Declaration Macros for ATON Runtime Execution & User AP
 321:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 322:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 323:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 324:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct; // forward declaration
 325:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct __nn_instance_struct NN_Instance_TypeDef;
 326:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 327:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
 328:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief Declare the function prototypes for named NN interface functions generated by the AtoNN c
 329:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param network_name name of the network as provided by option `--network-name`
 330:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
 331:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)                                              
 332:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Network_Init_##network_name(void);                                        
 333:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Inference_Init_##network_name(void);                                      
 334:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_##network_name(uint32_t num, void *
 335:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                uint32_t size);     
 336:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Input_Buffer_##network_name(uint32_t num);                         
 337:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_##network_name(uint32_t num, void 
 338:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                 uint32_t size);    
 339:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Output_Buffer_##network_name(uint32_t num);                        
 340:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_##network_name(void);               
 341:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Output_Buffers_Info_##network_name(void);            
 342:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_##network_name(void);             
 343:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Internal_Buffers_Info_##network_name(void);
 344:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 345:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 346:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Type definitions for NN interface functions
 347:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 348:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef bool (*NN_EC_Hook_TypeDef)(void);
 349:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_InputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t s
 350:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_InputGetter_TypeDef)(uint32_t num);
 351:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_OutputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t 
 352:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_OutputGetter_TypeDef)(uint32_t num);
 353:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const EpochBlock_ItemTypeDef *(*NN_EpochBlockItems_TypeDef)(void);
 354:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const LL_Buffer_InfoTypeDef *(*NN_Buffers_Info_TypeDef)(void);
 355:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 356:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceRuntime_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype);
 357:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 358:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceEpochBlock_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype, const NN_Instance_Type
 359:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                             const EpochBlock_ItemTypeDef *epoch_block);
 360:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 361:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 362:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 363:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *network_name;
 364:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_network_init;
 365:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_inference_init;
 366:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputSetter_TypeDef input_setter;
ARM GAS  /tmp/ccl1pJez.s 			page 8


 367:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputGetter_TypeDef input_getter;
 368:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputSetter_TypeDef output_setter;
 369:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputGetter_TypeDef output_getter;
 370:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EpochBlockItems_TypeDef epoch_block_items;
 371:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef output_buffers_info;
 372:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef input_buffers_info;
 373:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef internal_buffers_info;
 374:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Interface_TypeDef;
 375:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 376:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 377:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 378:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile current_epoch_block; // pointer to current epoch block
 379:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile first_epoch_block;   // pointer to first epoch block in 
 380:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile next_epoch_block;    // pointer to epoch block to be ins
 381:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 382:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile saved_current_epoch_block; // pointer to saved current e
 383:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef
 384:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         *volatile saved_first_epoch_block; // pointer to saved first epoch block in current epoch l
 385:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 386:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     bool inference_started; // inference has been started
 387:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 388:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 389:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t triggered_events;        // currently triggered events/IRQs in current epoch
 390:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile bool current_epoch_block_started; // has current epoch block already been started
 391:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                         // (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 392:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 393:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef NDEBUG
 394:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t
 395:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         nr_of_epoch_blocks; // number of epoch blocks in network (includes also terminating empty e
 396:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t saved_nr_of_epoch_blocks; // number of epoch blocks in saved network (include
 397:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                 // empty epoch block)
 398:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                          // NDEBUG
 399:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 400:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     TraceEpochBlock_FuncPtr_t epoch_callback_function; // epoch callback function
 401:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 402:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if defined(LL_ATON_RT_RELOC)
 403:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t inst_reloc;
 404:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
 405:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 406:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Execution_State_TypeDef;
 407:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 408:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct
 409:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 410:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const NN_Interface_TypeDef *network;
 411:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Execution_State_TypeDef exec_state;
 412:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   };
 413:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 414:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 415:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 416:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 417:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 418:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Inline Implementations
 419:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 420:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 421:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 422:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb)
 423:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/ccl1pJez.s 			page 9


 424:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_last_eb) != 0);
 425:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 426:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 427:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb)
 428:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 429:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_start) != 0);
 430:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 431:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 432:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb)
 433:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 434:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_end) != 0);
 435:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 436:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 437:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb)
 438:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 439:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob) != 0);
 440:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 441:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 442:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb)
 443:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 444:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob_encrypted) != 0);
 445:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 446:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 447:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb)
 448:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 449:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_sw) != 0);
 450:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 451:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 452:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb)
 453:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 454:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_hw) != 0);
 455:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 456:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 457:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb)
 458:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 459:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_hybrid) != 0);
 460:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 461:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 462:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb)
 463:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 464:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_internal) != 0);
 465:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 466:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 467:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb)
 468:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 469:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 470:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->wait_mask;
 471:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 472:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 473:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb)
 474:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 475:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 476:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->blob_address;
 477:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 478:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf)
 480:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/ccl1pJez.s 			page 10


 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     if (buf->is_user_allocated)
 482:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       unsigned char **tmp = (unsigned char **)buf->addr_base.p;
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
 485:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 486:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->addr_base.p;
 487:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 488:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 489:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf)
 490:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  35              		.loc 2 490 3 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_start;
  40              		.loc 2 491 5 view .LVU1
  41              	.LBB173:
  42              	.LBI173:
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43              		.loc 2 479 32 view .LVU2
  44              	.LBB174:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  45              		.loc 2 481 5 view .LVU3
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  46              		.loc 2 481 8 is_stmt 0 view .LVU4
  47 0000 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
  48              	.LBB175:
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
  49              		.loc 2 483 23 view .LVU5
  50 0002 4368     		ldr	r3, [r0, #4]
  51              	.LBE175:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  52              		.loc 2 481 8 view .LVU6
  53 0004 02B1     		cbz	r2, .L2
  54              	.LBB176:
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
  55              		.loc 2 483 7 is_stmt 1 view .LVU7
  56              	.LVL1:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  57              		.loc 2 484 7 view .LVU8
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  58              		.loc 2 484 14 is_stmt 0 view .LVU9
  59 0006 1B68     		ldr	r3, [r3]
  60              	.LVL2:
  61              	.L2:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  62              		.loc 2 484 14 view .LVU10
  63              	.LBE176:
  64              	.LBE174:
  65              	.LBE173:
  66              		.loc 2 491 37 discriminator 1 view .LVU11
  67 0008 8068     		ldr	r0, [r0, #8]
  68              	.LVL3:
 492:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
  69              		.loc 2 492 3 view .LVU12
  70 000a 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccl1pJez.s 			page 11


  71 000c 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE2660:
  75              		.section	.text.clamp_point,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	clamp_point:
  82              	.LVL4:
  83              	.LFB7380:
   1:Src/app.c     **** /**
   2:Src/app.c     ****   ******************************************************************************
   3:Src/app.c     ****   * @file    app.c
   4:Src/app.c     ****   * @author  MDG Application Team
   5:Src/app.c     ****   ******************************************************************************
   6:Src/app.c     ****   * @attention
   7:Src/app.c     ****   *
   8:Src/app.c     ****   * Copyright (c) 2024 STMicroelectronics.
   9:Src/app.c     ****   * All rights reserved.
  10:Src/app.c     ****   *
  11:Src/app.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  12:Src/app.c     ****   * in the root directory of this software component.
  13:Src/app.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  14:Src/app.c     ****   *
  15:Src/app.c     ****   ******************************************************************************
  16:Src/app.c     ****   */
  17:Src/app.c     **** 
  18:Src/app.c     **** #include "app.h"
  19:Src/app.c     **** 
  20:Src/app.c     **** #include <stdint.h>
  21:Src/app.c     **** #include <stdio.h>
  22:Src/app.c     **** 
  23:Src/app.c     **** #include "app_cam.h"
  24:Src/app.c     **** #include "app_config.h"
  25:Src/app.c     **** #include "IPL_resize.h"
  26:Src/app.c     **** #include "app_postprocess.h"
  27:Src/app.c     **** #include "isp_api.h"
  28:Src/app.c     **** #include "ld.h"
  29:Src/app.c     **** #include "ll_aton_runtime.h"
  30:Src/app.c     **** #include "cmw_camera.h"
  31:Src/app.c     **** #include "scrl.h"
  32:Src/app.c     **** #ifdef STM32N6570_DK_REV
  33:Src/app.c     **** #include "stm32n6570_discovery.h"
  34:Src/app.c     **** #else
  35:Src/app.c     **** #include "stm32n6xx_nucleo.h"
  36:Src/app.c     **** #endif
  37:Src/app.c     **** #include "stm32_lcd.h"
  38:Src/app.c     **** #include "stm32_lcd_ex.h"
  39:Src/app.c     **** #include "stm32n6xx_hal.h"
  40:Src/app.c     **** #include "FreeRTOS.h"
  41:Src/app.c     **** #include "task.h"
  42:Src/app.c     **** #include "semphr.h"
  43:Src/app.c     **** #include "utils.h"
  44:Src/app.c     **** 
  45:Src/app.c     **** #define FREERTOS_PRIORITY(p) ((UBaseType_t)((int)tskIDLE_PRIORITY + configMAX_PRIORITIES / 2 + (p))
  46:Src/app.c     **** 
ARM GAS  /tmp/ccl1pJez.s 			page 12


  47:Src/app.c     **** #ifndef M_PI
  48:Src/app.c     **** #define M_PI 3.14159265358979323846
  49:Src/app.c     **** #endif
  50:Src/app.c     **** 
  51:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  52:Src/app.c     **** #include "nema_core.h"
  53:Src/app.c     **** #include "nema_error.h"
  54:Src/app.c     **** void nema_enable_tiling(int);
  55:Src/app.c     **** #endif
  56:Src/app.c     **** 
  57:Src/app.c     **** #define LCD_FG_WIDTH LCD_BG_WIDTH
  58:Src/app.c     **** #define LCD_FG_HEIGHT LCD_BG_HEIGHT
  59:Src/app.c     **** 
  60:Src/app.c     **** #define CACHE_OP(__op__) do { \
  61:Src/app.c     ****   if (is_cache_enable()) { \
  62:Src/app.c     ****     __op__; \
  63:Src/app.c     ****   } \
  64:Src/app.c     **** } while (0)
  65:Src/app.c     **** 
  66:Src/app.c     **** #define DBG_INFO 0
  67:Src/app.c     **** #define USE_FILTERED_TS 1
  68:Src/app.c     **** 
  69:Src/app.c     **** #define BQUEUE_MAX_BUFFERS 2
  70:Src/app.c     **** #define CPU_LOAD_HISTORY_DEPTH 8
  71:Src/app.c     **** 
  72:Src/app.c     **** #define DISPLAY_BUFFER_NB (DISPLAY_DELAY + 2)
  73:Src/app.c     **** 
  74:Src/app.c     **** /* palm detector */
  75:Src/app.c     **** #define PD_MAX_HAND_NB 1
  76:Src/app.c     **** 
  77:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  78:Src/app.c     **** typedef float app_v3_t[3];
  79:Src/app.c     **** #endif
  80:Src/app.c     **** 
  81:Src/app.c     **** typedef struct {
  82:Src/app.c     ****   float cx;
  83:Src/app.c     ****   float cy;
  84:Src/app.c     ****   float w;
  85:Src/app.c     ****   float h;
  86:Src/app.c     ****   float rotation;
  87:Src/app.c     **** } roi_t;
  88:Src/app.c     **** 
  89:Src/app.c     **** #define UTIL_LCD_COLOR_TRANSPARENT 0
  90:Src/app.c     **** 
  91:Src/app.c     **** #ifdef STM32N6570_DK_REV
  92:Src/app.c     **** #define LCD_FONT Font20
  93:Src/app.c     **** #define DISK_RADIUS 2
  94:Src/app.c     **** #else
  95:Src/app.c     **** #define LCD_FONT Font12
  96:Src/app.c     **** #define DISK_RADIUS 1
  97:Src/app.c     **** #endif
  98:Src/app.c     **** 
  99:Src/app.c     **** typedef struct
 100:Src/app.c     **** {
 101:Src/app.c     ****   uint32_t X0;
 102:Src/app.c     ****   uint32_t Y0;
 103:Src/app.c     ****   uint32_t XSize;
ARM GAS  /tmp/ccl1pJez.s 			page 13


 104:Src/app.c     ****   uint32_t YSize;
 105:Src/app.c     **** } Rectangle_TypeDef;
 106:Src/app.c     **** 
 107:Src/app.c     **** typedef struct {
 108:Src/app.c     ****   SemaphoreHandle_t free;
 109:Src/app.c     ****   StaticSemaphore_t free_buffer;
 110:Src/app.c     ****   SemaphoreHandle_t ready;
 111:Src/app.c     ****   StaticSemaphore_t ready_buffer;
 112:Src/app.c     ****   int buffer_nb;
 113:Src/app.c     ****   uint8_t *buffers[BQUEUE_MAX_BUFFERS];
 114:Src/app.c     ****   int free_idx;
 115:Src/app.c     ****   int ready_idx;
 116:Src/app.c     **** } bqueue_t;
 117:Src/app.c     **** 
 118:Src/app.c     **** typedef struct {
 119:Src/app.c     ****   uint64_t current_total;
 120:Src/app.c     ****   uint64_t current_thread_total;
 121:Src/app.c     ****   uint64_t prev_total;
 122:Src/app.c     ****   uint64_t prev_thread_total;
 123:Src/app.c     ****   struct {
 124:Src/app.c     ****     uint64_t total;
 125:Src/app.c     ****     uint64_t thread;
 126:Src/app.c     ****     uint32_t tick;
 127:Src/app.c     ****   } history[CPU_LOAD_HISTORY_DEPTH];
 128:Src/app.c     **** } cpuload_info_t;
 129:Src/app.c     **** 
 130:Src/app.c     **** typedef struct {
 131:Src/app.c     ****   int is_valid;
 132:Src/app.c     ****   pd_pp_box_t pd_hands;
 133:Src/app.c     ****   roi_t roi;
 134:Src/app.c     ****   ld_point_t ld_landmarks[LD_LANDMARK_NB];
 135:Src/app.c     **** } hand_info_t;
 136:Src/app.c     **** 
 137:Src/app.c     **** typedef struct {
 138:Src/app.c     ****   float nn_period_ms;
 139:Src/app.c     ****   uint32_t pd_ms;
 140:Src/app.c     ****   uint32_t hl_ms;
 141:Src/app.c     ****   uint32_t pp_ms;
 142:Src/app.c     ****   uint32_t disp_ms;
 143:Src/app.c     ****   int is_ld_displayed;
 144:Src/app.c     ****   int is_pd_displayed;
 145:Src/app.c     ****   int pd_hand_nb;
 146:Src/app.c     ****   float pd_max_prob;
 147:Src/app.c     ****   hand_info_t hands[PD_MAX_HAND_NB];
 148:Src/app.c     **** } display_info_t;
 149:Src/app.c     **** 
 150:Src/app.c     **** typedef struct {
 151:Src/app.c     ****   SemaphoreHandle_t update;
 152:Src/app.c     ****   StaticSemaphore_t update_buffer;
 153:Src/app.c     ****   SemaphoreHandle_t lock;
 154:Src/app.c     ****   StaticSemaphore_t lock_buffer;
 155:Src/app.c     ****   display_info_t info;
 156:Src/app.c     **** } display_t;
 157:Src/app.c     **** 
 158:Src/app.c     **** typedef struct {
 159:Src/app.c     ****   uint32_t nn_in_len;
 160:Src/app.c     ****   float *prob_out;
ARM GAS  /tmp/ccl1pJez.s 			page 14


 161:Src/app.c     ****   uint32_t prob_out_len;
 162:Src/app.c     ****   float *boxes_out;
 163:Src/app.c     ****   uint32_t boxes_out_len;
 164:Src/app.c     ****   pd_model_pp_static_param_t static_param;
 165:Src/app.c     ****   pd_pp_out_t pd_out;
 166:Src/app.c     **** } pd_model_info_t;
 167:Src/app.c     **** 
 168:Src/app.c     **** /**
 169:Src/app.c     ****  * @brief  YOLO detector model context struct
 170:Src/app.c     ****  */
 171:Src/app.c     **** typedef struct {
 172:Src/app.c     ****   // Input buffer info
 173:Src/app.c     ****   uint32_t nn_in_len;
 174:Src/app.c     **** 
 175:Src/app.c     ****   // Raw output buffer info from the model
 176:Src/app.c     ****   float *raw_detections_out;
 177:Src/app.c     ****   uint32_t raw_detections_out_len;
 178:Src/app.c     **** 
 179:Src/app.c     ****   // Post-processing parameters and final output
 180:Src/app.c     ****   od_yolov8_pp_static_param_t static_param;
 181:Src/app.c     ****   od_pp_out_t yolo_out; 
 182:Src/app.c     **** } yolo_detector_info_t;
 183:Src/app.c     **** 
 184:Src/app.c     **** typedef struct {
 185:Src/app.c     ****   uint8_t *nn_in;
 186:Src/app.c     ****   uint32_t nn_in_len;
 187:Src/app.c     ****   float *prob_out;
 188:Src/app.c     ****   uint32_t prob_out_len;
 189:Src/app.c     ****   float *landmarks_out;
 190:Src/app.c     ****   uint32_t landmarks_out_len;
 191:Src/app.c     **** } hl_model_info_t;
 192:Src/app.c     **** 
 193:Src/app.c     **** typedef struct {
 194:Src/app.c     ****   uint8_t *nn_in;
 195:Src/app.c     ****   uint32_t nn_in_len;
 196:Src/app.c     ****   float *prob_out;
 197:Src/app.c     ****   uint32_t prob_out_len;
 198:Src/app.c     ****   float *landmarks_out;
 199:Src/app.c     ****   uint32_t landmarks_out_len;
 200:Src/app.c     **** } fl_model_info_t;
 201:Src/app.c     **** 
 202:Src/app.c     **** typedef struct {
 203:Src/app.c     ****   Button_TypeDef button_id;
 204:Src/app.c     ****   int prev_state;
 205:Src/app.c     ****   void (*on_click_handler)(void *cb_args);
 206:Src/app.c     ****   void *cb_args;
 207:Src/app.c     **** } button_t;
 208:Src/app.c     **** 
 209:Src/app.c     **** /* Globals */
 210:Src/app.c     **** /* Lcd Background area */
 211:Src/app.c     **** static Rectangle_TypeDef lcd_bg_area = {
 212:Src/app.c     ****   .X0 = 0,
 213:Src/app.c     ****   .Y0 = 0,
 214:Src/app.c     ****   .XSize = LCD_BG_WIDTH,
 215:Src/app.c     ****   .YSize = LCD_BG_HEIGHT,
 216:Src/app.c     **** };
 217:Src/app.c     **** /* Lcd Foreground area */
ARM GAS  /tmp/ccl1pJez.s 			page 15


 218:Src/app.c     **** static Rectangle_TypeDef lcd_fg_area = {
 219:Src/app.c     ****   .X0 = 0,
 220:Src/app.c     ****   .Y0 = 0,
 221:Src/app.c     ****   .XSize = LCD_FG_WIDTH,
 222:Src/app.c     ****   .YSize = LCD_FG_HEIGHT,
 223:Src/app.c     **** };
 224:Src/app.c     **** /* Lcd Background Buffer */
 225:Src/app.c     **** static uint8_t lcd_bg_buffer[DISPLAY_BUFFER_NB][LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP] ALIGN_3
 226:Src/app.c     **** static int lcd_bg_buffer_disp_idx = 1;
 227:Src/app.c     **** static int lcd_bg_buffer_capt_idx = 0;
 228:Src/app.c     **** /* Lcd Foreground Buffer */
 229:Src/app.c     **** static uint8_t lcd_fg_buffer[2][LCD_FG_WIDTH * LCD_FG_HEIGHT* 2] ALIGN_32 IN_PSRAM;
 230:Src/app.c     **** static int lcd_fg_buffer_rd_idx;
 231:Src/app.c     **** static display_t disp = {
 232:Src/app.c     ****   .info.is_ld_displayed = 1,
 233:Src/app.c     ****   .info.is_pd_displayed = 0,
 234:Src/app.c     **** };
 235:Src/app.c     **** static cpuload_info_t cpu_load;
 236:Src/app.c     **** /* screen buffer */
 237:Src/app.c     **** static uint8_t screen_buffer[LCD_BG_WIDTH * LCD_BG_HEIGHT * 2] ALIGN_32 IN_PSRAM;
 238:Src/app.c     **** 
 239:Src/app.c     **** /* model */
 240:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(yolo_detector);
 241:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(face_landmark);
 242:Src/app.c     **** static roi_t rois[PD_MAX_HAND_NB];
 243:Src/app.c     ****  /* hand landmark */
 244:Src/app.c     **** //LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(hand_landmark);
 245:Src/app.c     **** static ld_point_t ld_landmarks[PD_MAX_HAND_NB][LD_LANDMARK_NB];
 246:Src/app.c     **** static uint32_t frame_event_nb;
 247:Src/app.c     **** static volatile uint32_t frame_event_nb_for_resize;
 248:Src/app.c     **** 
 249:Src/app.c     ****  /* nn input buffers */
 250:Src/app.c     **** static uint8_t nn_input_buffers[2][NN_WIDTH * NN_HEIGHT * NN_BPP] ALIGN_32 IN_PSRAM;
 251:Src/app.c     **** static bqueue_t nn_input_queue;
 252:Src/app.c     **** 
 253:Src/app.c     ****  /* rtos */
 254:Src/app.c     **** static StaticTask_t nn_thread;
 255:Src/app.c     **** static StackType_t nn_thread_stack[4 * configMINIMAL_STACK_SIZE];
 256:Src/app.c     **** static StaticTask_t dp_thread;
 257:Src/app.c     **** static StackType_t dp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 258:Src/app.c     **** static StaticTask_t isp_thread;
 259:Src/app.c     **** static StackType_t isp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 260:Src/app.c     **** static SemaphoreHandle_t isp_sem;
 261:Src/app.c     **** static StaticSemaphore_t isp_sem_buffer;
 262:Src/app.c     **** 
 263:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
 264:Src/app.c     **** static GFXMMU_HandleTypeDef hgfxmmu;
 265:Src/app.c     **** static nema_cmdlist_t cl;
 266:Src/app.c     **** #endif
 267:Src/app.c     **** 
 268:Src/app.c     **** static int is_cache_enable()
 269:Src/app.c     **** {
 270:Src/app.c     **** #if defined(USE_DCACHE)
 271:Src/app.c     ****   return 1;
 272:Src/app.c     **** #else
 273:Src/app.c     ****   return 0;
 274:Src/app.c     **** #endif
ARM GAS  /tmp/ccl1pJez.s 			page 16


 275:Src/app.c     **** }
 276:Src/app.c     **** 
 277:Src/app.c     **** static float pd_normalize_angle(float angle)
 278:Src/app.c     **** {
 279:Src/app.c     ****   return angle - 2 * M_PI * floorf((angle - (-M_PI)) / (2 * M_PI));
 280:Src/app.c     **** }
 281:Src/app.c     **** 
 282:Src/app.c     **** /* Without rotation support allow limited amount of angles */
 283:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 284:Src/app.c     **** static float pd_cook_rotation(float angle)
 285:Src/app.c     **** {
 286:Src/app.c     ****   if (angle >= (3 * M_PI) / 4)
 287:Src/app.c     ****     angle = M_PI;
 288:Src/app.c     ****   else if (angle >= (1 * M_PI) / 4)
 289:Src/app.c     ****     angle = M_PI / 2;
 290:Src/app.c     ****   else if (angle >= -(1 * M_PI) / 4)
 291:Src/app.c     ****     angle = 0;
 292:Src/app.c     ****   else if (angle >= -(3 * M_PI) / 4)
 293:Src/app.c     ****     angle = -M_PI / 2;
 294:Src/app.c     ****   else
 295:Src/app.c     ****     angle = -M_PI;
 296:Src/app.c     **** 
 297:Src/app.c     ****   return angle;
 298:Src/app.c     **** }
 299:Src/app.c     **** #else
 300:Src/app.c     **** static float pd_cook_rotation(float angle)
 301:Src/app.c     **** {
 302:Src/app.c     ****   return angle;
 303:Src/app.c     **** }
 304:Src/app.c     **** #endif
 305:Src/app.c     **** 
 306:Src/app.c     **** static float pd_compute_rotation(pd_pp_box_t *box)
 307:Src/app.c     **** {
 308:Src/app.c     ****   float x0, y0, x1, y1;
 309:Src/app.c     ****   float rotation;
 310:Src/app.c     **** 
 311:Src/app.c     ****   x0 = box->pKps[0].x;
 312:Src/app.c     ****   y0 = box->pKps[0].y;
 313:Src/app.c     ****   x1 = box->pKps[2].x;
 314:Src/app.c     ****   y1 = box->pKps[2].y;
 315:Src/app.c     **** 
 316:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
 317:Src/app.c     **** 
 318:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
 319:Src/app.c     **** }
 320:Src/app.c     **** 
 321:Src/app.c     **** static void cvt_pd_coord_to_screen_coord(pd_pp_box_t *box)
 322:Src/app.c     **** {
 323:Src/app.c     ****   int i;
 324:Src/app.c     **** 
 325:Src/app.c     ****   /* This is not a typo. Since screen aspect ratio was conserved. We really want to use LCD_BG_WIDT
 326:Src/app.c     ****    * y positions.
 327:Src/app.c     ****    */
 328:Src/app.c     **** 
 329:Src/app.c     ****   box->x_center *= LCD_BG_WIDTH;
 330:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 331:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
ARM GAS  /tmp/ccl1pJez.s 			page 17


 332:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 333:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 334:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 335:Src/app.c     ****     box->pKps[i].y *= LCD_BG_WIDTH;
 336:Src/app.c     ****   }
 337:Src/app.c     **** }
 338:Src/app.c     **** 
 339:Src/app.c     **** static void roi_shift_and_scale(roi_t *roi, float shift_x, float shift_y, float scale_x, float scal
 340:Src/app.c     **** {
 341:Src/app.c     ****   float long_side;
 342:Src/app.c     ****   float sx, sy;
 343:Src/app.c     **** 
 344:Src/app.c     ****   sx = (roi->w * shift_x * cos(roi->rotation) - roi->h * shift_y * sin(roi->rotation));
 345:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 346:Src/app.c     **** 
 347:Src/app.c     ****   roi->cx += sx;
 348:Src/app.c     ****   roi->cy += sy;
 349:Src/app.c     **** 
 350:Src/app.c     ****   long_side = MAX(roi->w, roi->h);
 351:Src/app.c     ****   roi->w = long_side;
 352:Src/app.c     ****   roi->h = long_side;
 353:Src/app.c     **** 
 354:Src/app.c     ****   roi->w *= scale_x;
 355:Src/app.c     ****   roi->h *= scale_y;
 356:Src/app.c     **** }
 357:Src/app.c     **** 
 358:Src/app.c     **** static void pd_box_to_roi(pd_pp_box_t *box,  roi_t *roi)
 359:Src/app.c     **** {
 360:Src/app.c     ****   const float shift_x = 0;
 361:Src/app.c     ****   const float shift_y = -0.5;
 362:Src/app.c     ****   const float scale = 2.6;
 363:Src/app.c     **** 
 364:Src/app.c     ****   roi->cx = box->x_center;
 365:Src/app.c     ****   roi->cy = box->y_center;
 366:Src/app.c     ****   roi->w = box->width;
 367:Src/app.c     ****   roi->h = box->height;
 368:Src/app.c     ****   roi->rotation = pd_compute_rotation(box);
 369:Src/app.c     **** 
 370:Src/app.c     ****   roi_shift_and_scale(roi, shift_x, shift_y, scale, scale);
 371:Src/app.c     **** 
 372:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 373:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
 374:Src/app.c     ****   roi->rotation = 0;
 375:Src/app.c     **** #endif
 376:Src/app.c     **** }
 377:Src/app.c     **** 
 378:Src/app.c     **** static void copy_pd_box(pd_pp_box_t *dst, pd_pp_box_t *src)
 379:Src/app.c     **** {
 380:Src/app.c     ****   int i;
 381:Src/app.c     **** 
 382:Src/app.c     ****   dst->prob = src->prob;
 383:Src/app.c     ****   dst->x_center = src->x_center;
 384:Src/app.c     ****   dst->y_center = src->y_center;
 385:Src/app.c     ****   dst->width = src->width;
 386:Src/app.c     ****   dst->height = src->height;
 387:Src/app.c     ****   for (i = 0 ; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++)
 388:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
ARM GAS  /tmp/ccl1pJez.s 			page 18


 389:Src/app.c     **** }
 390:Src/app.c     **** 
 391:Src/app.c     **** static void button_init(button_t *b, Button_TypeDef id, void (*on_click_handler)(void *), void *cb_
 392:Src/app.c     **** {
 393:Src/app.c     ****   int ret;
 394:Src/app.c     **** 
 395:Src/app.c     ****   ret = BSP_PB_Init(id, BUTTON_MODE_GPIO);
 396:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 397:Src/app.c     **** 
 398:Src/app.c     ****   b->button_id = id;
 399:Src/app.c     ****   b->on_click_handler = on_click_handler;
 400:Src/app.c     ****   b->prev_state = 0;
 401:Src/app.c     ****   b->cb_args = cb_args;
 402:Src/app.c     **** }
 403:Src/app.c     **** 
 404:Src/app.c     **** static void button_process(button_t *b)
 405:Src/app.c     **** {
 406:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 407:Src/app.c     **** 
 408:Src/app.c     ****   if (state != b->prev_state && state && b->on_click_handler)
 409:Src/app.c     ****     b->on_click_handler(b->cb_args);
 410:Src/app.c     **** 
 411:Src/app.c     ****   b->prev_state = state;
 412:Src/app.c     **** }
 413:Src/app.c     **** 
 414:Src/app.c     **** static void cpuload_init(cpuload_info_t *cpu_load)
 415:Src/app.c     **** {
 416:Src/app.c     ****   memset(cpu_load, 0, sizeof(cpuload_info_t));
 417:Src/app.c     **** }
 418:Src/app.c     **** 
 419:Src/app.c     **** static void cpuload_update(cpuload_info_t *cpu_load)
 420:Src/app.c     **** {
 421:Src/app.c     ****   int i;
 422:Src/app.c     **** 
 423:Src/app.c     ****   cpu_load->history[1] = cpu_load->history[0];
 424:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 425:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 426:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 427:Src/app.c     **** 
 428:Src/app.c     ****   if (cpu_load->history[1].tick - cpu_load->history[2].tick < 1000)
 429:Src/app.c     ****     return ;
 430:Src/app.c     **** 
 431:Src/app.c     ****   for (i = 0; i < CPU_LOAD_HISTORY_DEPTH - 2; i++)
 432:Src/app.c     ****     cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 1 - i] = cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 
 433:Src/app.c     **** }
 434:Src/app.c     **** 
 435:Src/app.c     **** static void cpuload_get_info(cpuload_info_t *cpu_load, float *cpu_load_last, float *cpu_load_last_s
 436:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 437:Src/app.c     **** {
 438:Src/app.c     ****   if (cpu_load_last)
 439:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 440:Src/app.c     ****                      (cpu_load->history[0].total - cpu_load->history[1].total);
 441:Src/app.c     ****   if (cpu_load_last_second)
 442:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 443:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 444:Src/app.c     ****   if (cpu_load_last_five_seconds)
 445:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
ARM GAS  /tmp/ccl1pJez.s 			page 19


 446:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[7].total);
 447:Src/app.c     **** }
 448:Src/app.c     **** 
 449:Src/app.c     **** static int bqueue_init(bqueue_t *bq, int buffer_nb, uint8_t **buffers)
 450:Src/app.c     **** {
 451:Src/app.c     ****   int i;
 452:Src/app.c     **** 
 453:Src/app.c     ****   if (buffer_nb > BQUEUE_MAX_BUFFERS)
 454:Src/app.c     ****     return -1;
 455:Src/app.c     **** 
 456:Src/app.c     ****   bq->free = xSemaphoreCreateCountingStatic(buffer_nb, buffer_nb, &bq->free_buffer);
 457:Src/app.c     ****   if (!bq->free)
 458:Src/app.c     ****     goto free_sem_error;
 459:Src/app.c     ****   bq->ready = xSemaphoreCreateCountingStatic(buffer_nb, 0, &bq->ready_buffer);
 460:Src/app.c     ****   if (!bq->ready)
 461:Src/app.c     ****     goto ready_sem_error;
 462:Src/app.c     **** 
 463:Src/app.c     ****   bq->buffer_nb = buffer_nb;
 464:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 465:Src/app.c     ****     assert(buffers[i]);
 466:Src/app.c     ****     bq->buffers[i] = buffers[i];
 467:Src/app.c     ****   }
 468:Src/app.c     ****   bq->free_idx = 0;
 469:Src/app.c     ****   bq->ready_idx = 0;
 470:Src/app.c     **** 
 471:Src/app.c     ****   return 0;
 472:Src/app.c     **** 
 473:Src/app.c     **** ready_sem_error:
 474:Src/app.c     ****   vSemaphoreDelete(bq->free);
 475:Src/app.c     **** free_sem_error:
 476:Src/app.c     ****   return -1;
 477:Src/app.c     **** }
 478:Src/app.c     **** 
 479:Src/app.c     **** static uint8_t *bqueue_get_free(bqueue_t *bq, int is_blocking)
 480:Src/app.c     **** {
 481:Src/app.c     ****   uint8_t *res;
 482:Src/app.c     ****   int ret;
 483:Src/app.c     **** 
 484:Src/app.c     ****   ret = xSemaphoreTake(bq->free, is_blocking ? portMAX_DELAY : 0);
 485:Src/app.c     ****   if (ret == pdFALSE)
 486:Src/app.c     ****     return NULL;
 487:Src/app.c     **** 
 488:Src/app.c     ****   res = bq->buffers[bq->free_idx];
 489:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 490:Src/app.c     **** 
 491:Src/app.c     ****   return res;
 492:Src/app.c     **** }
 493:Src/app.c     **** 
 494:Src/app.c     **** static void bqueue_put_free(bqueue_t *bq)
 495:Src/app.c     **** {
 496:Src/app.c     ****   int ret;
 497:Src/app.c     **** 
 498:Src/app.c     ****   ret = xSemaphoreGive(bq->free);
 499:Src/app.c     ****   assert(ret == pdTRUE);
 500:Src/app.c     **** }
 501:Src/app.c     **** 
 502:Src/app.c     **** static uint8_t *bqueue_get_ready(bqueue_t *bq)
ARM GAS  /tmp/ccl1pJez.s 			page 20


 503:Src/app.c     **** {
 504:Src/app.c     ****   uint8_t *res;
 505:Src/app.c     ****   int ret;
 506:Src/app.c     **** 
 507:Src/app.c     ****   ret = xSemaphoreTake(bq->ready, portMAX_DELAY);
 508:Src/app.c     ****   assert(ret == pdTRUE);
 509:Src/app.c     **** 
 510:Src/app.c     ****   res = bq->buffers[bq->ready_idx];
 511:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 512:Src/app.c     **** 
 513:Src/app.c     ****   return res;
 514:Src/app.c     **** }
 515:Src/app.c     **** 
 516:Src/app.c     **** static void bqueue_put_ready(bqueue_t *bq)
 517:Src/app.c     **** {
 518:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 519:Src/app.c     ****   int ret;
 520:Src/app.c     **** 
 521:Src/app.c     ****   if (xPortIsInsideInterrupt()) {
 522:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 523:Src/app.c     ****     assert(ret == pdTRUE);
 524:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 525:Src/app.c     ****   } else {
 526:Src/app.c     ****     ret = xSemaphoreGive(bq->ready);
 527:Src/app.c     ****     assert(ret == pdTRUE);
 528:Src/app.c     ****   }
 529:Src/app.c     **** }
 530:Src/app.c     **** 
 531:Src/app.c     **** static void reload_bg_layer(int next_disp_idx)
 532:Src/app.c     **** {
 533:Src/app.c     ****   int ret;
 534:Src/app.c     **** 
 535:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_bg_buffer[next_disp_idx], SCRL_LAYER_0);
 536:Src/app.c     ****   assert(ret == 0);
 537:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 538:Src/app.c     ****   assert(ret == 0);
 539:Src/app.c     **** 
 540:Src/app.c     ****   ret = SRCL_Update();
 541:Src/app.c     ****   assert(ret == 0);
 542:Src/app.c     **** }
 543:Src/app.c     **** 
 544:Src/app.c     **** static void app_main_pipe_frame_event()
 545:Src/app.c     **** {
 546:Src/app.c     ****   int next_disp_idx = (lcd_bg_buffer_disp_idx + 1) % DISPLAY_BUFFER_NB;
 547:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 548:Src/app.c     ****   int ret;
 549:Src/app.c     **** 
 550:Src/app.c     ****   ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE1,
 551:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 552:Src/app.c     ****   assert(ret == HAL_OK);
 553:Src/app.c     **** 
 554:Src/app.c     ****   reload_bg_layer(next_disp_idx);
 555:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 556:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 557:Src/app.c     **** 
 558:Src/app.c     ****   frame_event_nb++;
 559:Src/app.c     **** }
ARM GAS  /tmp/ccl1pJez.s 			page 21


 560:Src/app.c     **** 
 561:Src/app.c     **** 
 562:Src/app.c     **** static void app_ancillary_pipe_frame_event()
 563:Src/app.c     **** {
 564:Src/app.c     ****   uint8_t *next_buffer;
 565:Src/app.c     ****   int ret;
 566:Src/app.c     **** 
 567:Src/app.c     ****   next_buffer = bqueue_get_free(&nn_input_queue, 0);
 568:Src/app.c     ****   if (next_buffer) {
 569:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 570:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 571:Src/app.c     ****     assert(ret == HAL_OK);
 572:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 573:Src/app.c     ****     frame_event_nb_for_resize = frame_event_nb - 1;
 574:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 575:Src/app.c     ****   }
 576:Src/app.c     **** }
 577:Src/app.c     **** 
 578:Src/app.c     **** static void app_main_pipe_vsync_event()
 579:Src/app.c     **** {
 580:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 581:Src/app.c     ****   int ret;
 582:Src/app.c     **** 
 583:Src/app.c     ****   ret = xSemaphoreGiveFromISR(isp_sem, &xHigherPriorityTaskWoken);
 584:Src/app.c     ****   if (ret == pdTRUE)
 585:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 586:Src/app.c     **** }
 587:Src/app.c     **** 
 588:Src/app.c     **** static int clamp_point(int *x, int *y)
 589:Src/app.c     **** {
  84              		.loc 1 589 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
 590:Src/app.c     ****   int xi = *x;
  88              		.loc 1 590 3 view .LVU14
  89              		.loc 1 590 7 is_stmt 0 view .LVU15
  90 0000 0368     		ldr	r3, [r0]
  91              	.LVL5:
 591:Src/app.c     ****   int yi = *y;
  92              		.loc 1 591 3 is_stmt 1 view .LVU16
 589:Src/app.c     ****   int xi = *x;
  93              		.loc 1 589 1 is_stmt 0 view .LVU17
  94 0002 10B5     		push	{r4, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 4, -8
  97              		.cfi_offset 14, -4
 592:Src/app.c     **** 
 593:Src/app.c     ****   if (*x < 0)
  98              		.loc 1 593 6 view .LVU18
  99 0004 002B     		cmp	r3, #0
 594:Src/app.c     ****     *x = 0;
 100              		.loc 1 594 8 view .LVU19
 101 0006 B8BF     		it	lt
 102 0008 0024     		movlt	r4, #0
 591:Src/app.c     **** 
 103              		.loc 1 591 7 view .LVU20
ARM GAS  /tmp/ccl1pJez.s 			page 22


 104 000a 0A68     		ldr	r2, [r1]
 105              	.LVL6:
 593:Src/app.c     ****     *x = 0;
 106              		.loc 1 593 3 is_stmt 1 view .LVU21
 107              		.loc 1 594 5 view .LVU22
 108              		.loc 1 594 8 is_stmt 0 view .LVU23
 109 000c B8BF     		it	lt
 110 000e 0460     		strlt	r4, [r0]
 595:Src/app.c     ****   if (*y < 0)
 111              		.loc 1 595 3 is_stmt 1 view .LVU24
 112              		.loc 1 595 6 is_stmt 0 view .LVU25
 113 0010 0C68     		ldr	r4, [r1]
 114 0012 002C     		cmp	r4, #0
 596:Src/app.c     ****     *y = 0;
 115              		.loc 1 596 5 is_stmt 1 view .LVU26
 116              		.loc 1 596 8 is_stmt 0 view .LVU27
 117 0014 BCBF     		itt	lt
 118 0016 0024     		movlt	r4, #0
 119 0018 0C60     		strlt	r4, [r1]
 597:Src/app.c     ****   if (*x >= lcd_bg_area.XSize)
 120              		.loc 1 597 3 is_stmt 1 view .LVU28
 121              		.loc 1 597 6 is_stmt 0 view .LVU29
 122 001a 0468     		ldr	r4, [r0]
 123 001c B4F5487F 		cmp	r4, #800
 598:Src/app.c     ****     *x = lcd_bg_area.XSize - 1;
 124              		.loc 1 598 5 is_stmt 1 view .LVU30
 125              		.loc 1 598 8 is_stmt 0 view .LVU31
 126 0020 24BF     		itt	cs
 127 0022 40F21F34 		movwcs	r4, #799
 128 0026 0460     		strcs	r4, [r0]
 599:Src/app.c     ****   if (*y >= lcd_bg_area.YSize)
 129              		.loc 1 599 3 is_stmt 1 view .LVU32
 130              		.loc 1 599 6 is_stmt 0 view .LVU33
 131 0028 0C68     		ldr	r4, [r1]
 132 002a B4F5F07F 		cmp	r4, #480
 600:Src/app.c     ****     *y = lcd_bg_area.YSize - 1;
 133              		.loc 1 600 5 is_stmt 1 view .LVU34
 134              		.loc 1 600 8 is_stmt 0 view .LVU35
 135 002e 24BF     		itt	cs
 136 0030 40F2DF14 		movwcs	r4, #479
 137 0034 0C60     		strcs	r4, [r1]
 601:Src/app.c     **** 
 602:Src/app.c     ****   return (xi != *x) || (yi != *y);
 138              		.loc 1 602 3 is_stmt 1 view .LVU36
 139              		.loc 1 602 21 is_stmt 0 view .LVU37
 140 0036 0068     		ldr	r0, [r0]
 141              	.LVL7:
 142              		.loc 1 602 21 view .LVU38
 143 0038 9842     		cmp	r0, r3
 144 003a 04D1     		bne	.L12
 145              		.loc 1 602 21 discriminator 2 view .LVU39
 146 003c 0868     		ldr	r0, [r1]
 147 003e 801A     		subs	r0, r0, r2
 148 0040 18BF     		it	ne
 149 0042 0120     		movne	r0, #1
 150              	.L6:
 603:Src/app.c     **** }
ARM GAS  /tmp/ccl1pJez.s 			page 23


 151              		.loc 1 603 1 view .LVU40
 152 0044 10BD     		pop	{r4, pc}
 153              	.L12:
 602:Src/app.c     **** }
 154              		.loc 1 602 21 discriminator 3 view .LVU41
 155 0046 0120     		movs	r0, #1
 602:Src/app.c     **** }
 156              		.loc 1 602 21 view .LVU42
 157 0048 FCE7     		b	.L6
 158              		.cfi_endproc
 159              	.LFE7380:
 161              		.section	.text.clamp_corners,"ax",%progbits
 162              		.align	1
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	clamp_corners:
 168              	.LVL8:
 169              	.LFB7385:
 604:Src/app.c     **** 
 605:Src/app.c     **** static int clamp_point_with_margin(int *x, int *y, int margin)
 606:Src/app.c     **** {
 607:Src/app.c     ****   int xi = *x;
 608:Src/app.c     ****   int yi = *y;
 609:Src/app.c     **** 
 610:Src/app.c     ****   if (*x < margin)
 611:Src/app.c     ****     *x = margin;
 612:Src/app.c     ****   if (*y < margin)
 613:Src/app.c     ****     *y = margin;
 614:Src/app.c     ****   if (*x >= lcd_bg_area.XSize - margin)
 615:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 616:Src/app.c     ****   if (*y >= lcd_bg_area.YSize - margin)
 617:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 618:Src/app.c     **** 
 619:Src/app.c     ****   return (xi != *x) || (yi != *y);
 620:Src/app.c     **** }
 621:Src/app.c     **** 
 622:Src/app.c     **** static void display_pd_hand(pd_pp_box_t *hand)
 623:Src/app.c     **** {
 624:Src/app.c     ****   int xc, yc;
 625:Src/app.c     ****   int x0, y0;
 626:Src/app.c     ****   int x1, y1;
 627:Src/app.c     ****   int w, h;
 628:Src/app.c     ****   int i;
 629:Src/app.c     **** 
 630:Src/app.c     ****   /* display box around palm */
 631:Src/app.c     ****   xc = (int)hand->x_center;
 632:Src/app.c     ****   yc = (int)hand->y_center;
 633:Src/app.c     ****   w = (int)hand->width;
 634:Src/app.c     ****   h = (int)hand->height;
 635:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 636:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 637:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 638:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 639:Src/app.c     ****   clamp_point(&x0, &y0);
 640:Src/app.c     ****   clamp_point(&x1, &y1);
 641:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
ARM GAS  /tmp/ccl1pJez.s 			page 24


 642:Src/app.c     **** 
 643:Src/app.c     ****   /* display palm key points */
 644:Src/app.c     ****   for (i = 0; i < 7; i++) {
 645:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 646:Src/app.c     **** 
 647:Src/app.c     ****     x0 = (int)hand->pKps[i].x;
 648:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 649:Src/app.c     ****     clamp_point(&x0, &y0);
 650:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 651:Src/app.c     ****   }
 652:Src/app.c     **** }
 653:Src/app.c     **** 
 654:Src/app.c     **** static void rotate_point(float pt[2], float rotation)
 655:Src/app.c     **** {
 656:Src/app.c     ****   float x = pt[0];
 657:Src/app.c     ****   float y = pt[1];
 658:Src/app.c     **** 
 659:Src/app.c     ****   pt[0] = cos(rotation) * x - sin(rotation) * y;
 660:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 661:Src/app.c     **** }
 662:Src/app.c     **** 
 663:Src/app.c     **** static void roi_to_corners(roi_t *roi, float corners[4][2])
 664:Src/app.c     **** {
 665:Src/app.c     ****   const float corners_init[4][2] = {
 666:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 667:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 668:Src/app.c     ****     { roi->w / 2,  roi->h / 2},
 669:Src/app.c     ****     {-roi->w / 2,  roi->h / 2},
 670:Src/app.c     ****   };
 671:Src/app.c     ****   int i;
 672:Src/app.c     **** 
 673:Src/app.c     ****   memcpy(corners, corners_init, sizeof(corners_init));
 674:Src/app.c     ****   /* rotate */
 675:Src/app.c     ****   for (i = 0; i < 4; i++)
 676:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 677:Src/app.c     **** 
 678:Src/app.c     ****   /* shift */
 679:Src/app.c     ****   for (i = 0; i < 4; i++) {
 680:Src/app.c     ****     corners[i][0] += roi->cx;
 681:Src/app.c     ****     corners[i][1] += roi->cy;
 682:Src/app.c     ****   }
 683:Src/app.c     **** }
 684:Src/app.c     **** 
 685:Src/app.c     **** static int clamp_corners(float corners_in[4][2], int corners_out[4][2])
 686:Src/app.c     **** {
 170              		.loc 1 686 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 687:Src/app.c     ****   int is_clamp = 0;
 174              		.loc 1 687 3 view .LVU44
 688:Src/app.c     ****   int i;
 175              		.loc 1 688 3 view .LVU45
 689:Src/app.c     **** 
 690:Src/app.c     ****   for (i = 0; i < 4; i++) {
 176              		.loc 1 690 3 view .LVU46
 177              		.loc 1 690 17 discriminator 1 view .LVU47
ARM GAS  /tmp/ccl1pJez.s 			page 25


 686:Src/app.c     ****   int is_clamp = 0;
 178              		.loc 1 686 1 is_stmt 0 view .LVU48
 179 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 180              		.cfi_def_cfa_offset 24
 181              		.cfi_offset 3, -24
 182              		.cfi_offset 4, -20
 183              		.cfi_offset 5, -16
 184              		.cfi_offset 6, -12
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 0546     		mov	r5, r0
 188 0004 0C46     		mov	r4, r1
 687:Src/app.c     ****   int i;
 189              		.loc 1 687 7 view .LVU49
 190 0006 0026     		movs	r6, #0
 191 0008 01F12007 		add	r7, r1, #32
 192              	.LVL9:
 193              	.L14:
 691:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 194              		.loc 1 691 5 is_stmt 1 view .LVU50
 195              		.loc 1 691 25 is_stmt 0 view .LVU51
 196 000c D5ED007A 		vldr.32	s15, [r5]
 197 0010 FDEEE77A 		vcvt.s32.f32	s15, s15
 198 0014 C4ED007A 		vstr.32	s15, [r4]	@ int
 692:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 199              		.loc 1 692 5 is_stmt 1 view .LVU52
 200              		.loc 1 692 25 is_stmt 0 view .LVU53
 201 0018 D5ED017A 		vldr.32	s15, [r5, #4]
 202 001c FDEEE77A 		vcvt.s32.f32	s15, s15
 203 0020 2146     		mov	r1, r4
 204 0022 17EE903A 		vmov	r3, s15	@ int
 693:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 205              		.loc 1 693 17 view .LVU54
 206 0026 2046     		mov	r0, r4
 692:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 207              		.loc 1 692 25 view .LVU55
 208 0028 41F8043F 		str	r3, [r1, #4]!
 209              		.loc 1 693 5 is_stmt 1 view .LVU56
 210              		.loc 1 693 17 is_stmt 0 view .LVU57
 211 002c FFF7FEFF 		bl	clamp_point
 212              	.LVL10:
 690:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 213              		.loc 1 690 17 discriminator 1 view .LVU58
 214 0030 0834     		adds	r4, r4, #8
 215 0032 BC42     		cmp	r4, r7
 216              		.loc 1 693 14 discriminator 1 view .LVU59
 217 0034 46EA0006 		orr	r6, r6, r0
 218              	.LVL11:
 690:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 219              		.loc 1 690 23 is_stmt 1 discriminator 3 view .LVU60
 690:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 220              		.loc 1 690 17 discriminator 1 view .LVU61
 221 0038 05F10805 		add	r5, r5, #8
 222 003c E6D1     		bne	.L14
 694:Src/app.c     ****   }
 695:Src/app.c     **** 
 696:Src/app.c     ****   return is_clamp;
ARM GAS  /tmp/ccl1pJez.s 			page 26


 223              		.loc 1 696 3 view .LVU62
 697:Src/app.c     **** }
 224              		.loc 1 697 1 is_stmt 0 view .LVU63
 225 003e 3046     		mov	r0, r6
 226 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 227              		.loc 1 697 1 view .LVU64
 228              		.cfi_endproc
 229              	.LFE7385:
 231              		.section	.text.roi_to_corners,"ax",%progbits
 232              		.align	1
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	roi_to_corners:
 238              	.LVL12:
 239              	.LFB7384:
 664:Src/app.c     ****   const float corners_init[4][2] = {
 240              		.loc 1 664 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 665:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 244              		.loc 1 665 3 view .LVU66
 666:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 245              		.loc 1 666 6 is_stmt 0 view .LVU67
 246 0000 D0ED027A 		vldr.32	s15, [r0, #8]
 666:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 247              		.loc 1 666 19 view .LVU68
 248 0004 90ED037A 		vldr.32	s14, [r0, #12]
 666:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 249              		.loc 1 666 14 view .LVU69
 250 0008 F6EE006A 		vmov.f32	s13, #5.0e-1
 251 000c 67EEE67A 		vnmul.f32	s15, s15, s13
 252              	.LVL13:
 666:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 253              		.loc 1 666 27 view .LVU70
 254 0010 27EE667A 		vnmul.f32	s14, s14, s13
 255              	.LVL14:
 666:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 256              		.loc 1 666 27 view .LVU71
 257 0014 B1EE676A 		vneg.f32	s12, s15
 258              	.LVL15:
 666:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 259              		.loc 1 666 27 view .LVU72
 260 0018 F1EE476A 		vneg.f32	s13, s14
 261              	.LVL16:
 671:Src/app.c     **** 
 262              		.loc 1 671 3 is_stmt 1 view .LVU73
 673:Src/app.c     ****   /* rotate */
 263              		.loc 1 673 3 view .LVU74
 664:Src/app.c     ****   const float corners_init[4][2] = {
 264              		.loc 1 664 1 is_stmt 0 view .LVU75
 265 001c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 266              		.cfi_def_cfa_offset 24
 267              		.cfi_offset 4, -24
 268              		.cfi_offset 5, -20
 269              		.cfi_offset 6, -16
ARM GAS  /tmp/ccl1pJez.s 			page 27


 270              		.cfi_offset 7, -12
 271              		.cfi_offset 8, -8
 272              		.cfi_offset 14, -4
 273 0020 0646     		mov	r6, r0
 274 0022 2DED068B 		vpush.64	{d8, d9, d10}
 275              		.cfi_def_cfa_offset 48
 276              		.cfi_offset 80, -48
 277              		.cfi_offset 81, -44
 278              		.cfi_offset 82, -40
 279              		.cfi_offset 83, -36
 280              		.cfi_offset 84, -32
 281              		.cfi_offset 85, -28
 664:Src/app.c     ****   const float corners_init[4][2] = {
 282              		.loc 1 664 1 view .LVU76
 283 0026 0C46     		mov	r4, r1
 673:Src/app.c     ****   /* rotate */
 284              		.loc 1 673 3 view .LVU77
 285 0028 C1ED007A 		vstr.32	s15, [r1]
 286 002c 81ED017A 		vstr.32	s14, [r1, #4]
 287 0030 81ED026A 		vstr.32	s12, [r1, #8]
 288 0034 81ED037A 		vstr.32	s14, [r1, #12]
 289 0038 81ED046A 		vstr.32	s12, [r1, #16]
 290 003c C1ED056A 		vstr.32	s13, [r1, #20]
 291 0040 C1ED067A 		vstr.32	s15, [r1, #24]
 292 0044 C1ED076A 		vstr.32	s13, [r1, #28]
 675:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 293              		.loc 1 675 3 is_stmt 1 view .LVU78
 294              	.LVL17:
 675:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 295              		.loc 1 675 17 discriminator 1 view .LVU79
 296 0048 8846     		mov	r8, r1
 673:Src/app.c     ****   /* rotate */
 297              		.loc 1 673 3 is_stmt 0 view .LVU80
 298 004a 0F46     		mov	r7, r1
 299 004c 01F12005 		add	r5, r1, #32
 300              	.LVL18:
 301              	.L17:
 676:Src/app.c     **** 
 302              		.loc 1 676 5 is_stmt 1 view .LVU81
 303              	.LBB179:
 304              	.LBI179:
 654:Src/app.c     **** {
 305              		.loc 1 654 13 view .LVU82
 306              	.LBB180:
 656:Src/app.c     ****   float y = pt[1];
 307              		.loc 1 656 3 view .LVU83
 657:Src/app.c     **** 
 308              		.loc 1 657 3 view .LVU84
 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 309              		.loc 1 659 3 view .LVU85
 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 310              		.loc 1 659 11 is_stmt 0 view .LVU86
 311 0050 96ED04AA 		vldr.32	s20, [r6, #16]
 312 0054 B7EECAAA 		vcvt.f64.f32	d10, s20
 313 0058 B0EE4A0B 		vmov.f64	d0, d10
 314 005c FFF7FEFF 		bl	cos
 315              	.LVL19:
ARM GAS  /tmp/ccl1pJez.s 			page 28


 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 316              		.loc 1 659 11 view .LVU87
 317 0060 B0EE408B 		vmov.f64	d8, d0
 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 318              		.loc 1 659 31 discriminator 1 view .LVU88
 319 0064 B0EE4A0B 		vmov.f64	d0, d10
 320 0068 FFF7FEFF 		bl	sin
 321              	.LVL20:
 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 322              		.loc 1 659 45 discriminator 2 view .LVU89
 323 006c 97ED016A 		vldr.32	s12, [r7, #4]
 324              	.LVL21:
 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 325              		.loc 1 659 25 discriminator 1 view .LVU90
 326 0070 97ED009A 		vldr.32	s18, [r7]
 327              	.LVL22:
 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 328              		.loc 1 659 45 discriminator 2 view .LVU91
 329 0074 B7EEC66A 		vcvt.f64.f32	d6, s12
 330              	.LVL23:
 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 331              		.loc 1 659 25 discriminator 1 view .LVU92
 332 0078 B7EEC99A 		vcvt.f64.f32	d9, s18
 333              	.LVL24:
 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 334              		.loc 1 659 29 discriminator 2 view .LVU93
 335 007c 26EE407B 		vnmul.f64	d7, d6, d0
 336 0080 A8EE097B 		vfma.f64	d7, d8, d9
 660:Src/app.c     **** }
 337              		.loc 1 660 45 discriminator 2 view .LVU94
 338 0084 28EE068B 		vmul.f64	d8, d8, d6
 660:Src/app.c     **** }
 339              		.loc 1 660 29 discriminator 2 view .LVU95
 340 0088 A9EE008B 		vfma.f64	d8, d9, d0
 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 341              		.loc 1 659 29 discriminator 2 view .LVU96
 342 008c B7EEC77B 		vcvt.f32.f64	s14, d7
 660:Src/app.c     **** }
 343              		.loc 1 660 29 discriminator 2 view .LVU97
 344 0090 B7EEC88B 		vcvt.f32.f64	s16, d8
 659:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 345              		.loc 1 659 29 discriminator 2 view .LVU98
 346 0094 87ED007A 		vstr.32	s14, [r7]
 660:Src/app.c     **** }
 347              		.loc 1 660 3 is_stmt 1 view .LVU99
 660:Src/app.c     **** }
 348              		.loc 1 660 29 is_stmt 0 discriminator 2 view .LVU100
 349 0098 87ED018A 		vstr.32	s16, [r7, #4]
 350              	.LVL25:
 660:Src/app.c     **** }
 351              		.loc 1 660 29 discriminator 2 view .LVU101
 352              	.LBE180:
 353              	.LBE179:
 675:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 354              		.loc 1 675 23 is_stmt 1 discriminator 3 view .LVU102
 675:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 355              		.loc 1 675 17 discriminator 1 view .LVU103
ARM GAS  /tmp/ccl1pJez.s 			page 29


 356 009c 0837     		adds	r7, r7, #8
 357 009e BD42     		cmp	r5, r7
 358 00a0 D6D1     		bne	.L17
 359 00a2 A5EB040E 		sub	lr, r5, r4
 360 00a6 AEF1080E 		sub	lr, lr, #8
 361 00aa 4FEADE0E 		lsr	lr, lr, #3
 362 00ae 0EF1010E 		add	lr, lr, #1
 363 00b2 4EF001E0 		dls	lr, lr
 364              	.L18:
 680:Src/app.c     ****     corners[i][1] += roi->cy;
 365              		.loc 1 680 5 view .LVU104
 680:Src/app.c     ****     corners[i][1] += roi->cy;
 366              		.loc 1 680 19 is_stmt 0 view .LVU105
 367 00b6 96ED007A 		vldr.32	s14, [r6]
 368 00ba D8ED007A 		vldr.32	s15, [r8]
 369 00be 77EE877A 		vadd.f32	s15, s15, s14
 370 00c2 C8ED007A 		vstr.32	s15, [r8]
 681:Src/app.c     ****   }
 371              		.loc 1 681 5 is_stmt 1 view .LVU106
 681:Src/app.c     ****   }
 372              		.loc 1 681 19 is_stmt 0 view .LVU107
 373 00c6 D8ED017A 		vldr.32	s15, [r8, #4]
 374 00ca 96ED017A 		vldr.32	s14, [r6, #4]
 375 00ce 77EE877A 		vadd.f32	s15, s15, s14
 679:Src/app.c     ****     corners[i][0] += roi->cx;
 376              		.loc 1 679 17 discriminator 1 view .LVU108
 377 00d2 08F10808 		add	r8, r8, #8
 681:Src/app.c     ****   }
 378              		.loc 1 681 19 view .LVU109
 379 00d6 48ED017A 		vstr.32	s15, [r8, #-4]
 679:Src/app.c     ****     corners[i][0] += roi->cx;
 380              		.loc 1 679 23 is_stmt 1 discriminator 3 view .LVU110
 679:Src/app.c     ****     corners[i][0] += roi->cx;
 381              		.loc 1 679 17 discriminator 1 view .LVU111
 382 00da 0FF015C0 		le	lr, .L18
 683:Src/app.c     **** 
 383              		.loc 1 683 1 is_stmt 0 view .LVU112
 384 00de BDEC068B 		vldm	sp!, {d8-d10}
 385              		.cfi_restore 84
 386              		.cfi_restore 85
 387              		.cfi_restore 82
 388              		.cfi_restore 83
 389              		.cfi_restore 80
 390              		.cfi_restore 81
 391              		.cfi_def_cfa_offset 24
 392 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 683:Src/app.c     **** 
 393              		.loc 1 683 1 view .LVU113
 394              		.cfi_endproc
 395              	.LFE7384:
 397              		.section	.rodata.isp_thread_fct.str1.1,"aMS",%progbits,1
 398              	.LC1:
 399 0000 72657420 		.ascii	"ret == pdTRUE\000"
 399      3D3D2070 
 399      64545255 
 399      4500
 400              	.LC2:
ARM GAS  /tmp/ccl1pJez.s 			page 30


 401 000e 5372632F 		.ascii	"Src/app.c\000"
 401      6170702E 
 401      6300
 402              		.section	.text.isp_thread_fct,"ax",%progbits
 403              		.align	1
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 408              	isp_thread_fct:
 409              	.LVL26:
 410              	.LFB7408:
 698:Src/app.c     **** 
 699:Src/app.c     **** static void display_roi(roi_t *roi)
 700:Src/app.c     **** {
 701:Src/app.c     ****   float corners_f[4][2];
 702:Src/app.c     ****   int corners[4][2];
 703:Src/app.c     ****   int is_clamp;
 704:Src/app.c     ****   int i;
 705:Src/app.c     **** 
 706:Src/app.c     ****   /* compute box corners */
 707:Src/app.c     ****   roi_to_corners(roi, corners_f);
 708:Src/app.c     **** 
 709:Src/app.c     ****   /* clamp */
 710:Src/app.c     ****   is_clamp = clamp_corners(corners_f, corners);
 711:Src/app.c     ****   if (is_clamp)
 712:Src/app.c     ****     return ;
 713:Src/app.c     **** 
 714:Src/app.c     ****   /* display */
 715:Src/app.c     ****   for (i = 0; i < 4; i++)
 716:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 717:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 718:Src/app.c     **** }
 719:Src/app.c     **** 
 720:Src/app.c     **** static void decode_ld_landmark(roi_t *roi, ld_point_t *lm, ld_point_t *decoded)
 721:Src/app.c     **** {
 722:Src/app.c     ****   float rotation = roi->rotation;
 723:Src/app.c     ****   float w = roi->w;
 724:Src/app.c     ****   float h = roi->h;
 725:Src/app.c     **** 
 726:Src/app.c     ****   decoded->x = roi->cx + (lm->x - 0.5) * w * cos(rotation) - (lm->y - 0.5) * h * sin(rotation);
 727:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 728:Src/app.c     **** }
 729:Src/app.c     **** 
 730:Src/app.c     **** static void display_ld_hand(hand_info_t *hand)
 731:Src/app.c     **** {
 732:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 733:Src/app.c     ****   roi_t *roi = &hand->roi;
 734:Src/app.c     ****   int x[LD_LANDMARK_NB];
 735:Src/app.c     ****   int y[LD_LANDMARK_NB];
 736:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 737:Src/app.c     ****   ld_point_t decoded;
 738:Src/app.c     ****   int i;
 739:Src/app.c     **** 
 740:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 741:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 742:Src/app.c     ****     x[i] = (int)decoded.x;
 743:Src/app.c     ****     y[i] = (int)decoded.y;
ARM GAS  /tmp/ccl1pJez.s 			page 31


 744:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 745:Src/app.c     ****   }
 746:Src/app.c     **** 
 747:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 748:Src/app.c     ****     if (is_clamped[i])
 749:Src/app.c     ****       continue;
 750:Src/app.c     ****     UTIL_LCD_FillCircle(x[i], y[i], disk_radius, UTIL_LCD_COLOR_YELLOW);
 751:Src/app.c     ****   }
 752:Src/app.c     **** }
 753:Src/app.c     **** 
 754:Src/app.c     **** void display_hand(display_info_t *info, hand_info_t *hand)
 755:Src/app.c     **** {
 756:Src/app.c     ****   if (info->is_pd_displayed) {
 757:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 758:Src/app.c     ****     display_roi(&hand->roi);
 759:Src/app.c     ****   }
 760:Src/app.c     ****   if (info->is_ld_displayed)
 761:Src/app.c     ****     display_ld_hand(hand);
 762:Src/app.c     **** }
 763:Src/app.c     **** 
 764:Src/app.c     **** static void Display_NetworkOutput(display_info_t *info)
 765:Src/app.c     **** {
 766:Src/app.c     ****   float cpu_load_one_second;
 767:Src/app.c     ****   int line_nb = 0;
 768:Src/app.c     ****   float nn_fps;
 769:Src/app.c     ****   int i;
 770:Src/app.c     **** 
 771:Src/app.c     ****   /* clear previous ui */
 772:Src/app.c     ****   UTIL_LCD_FillRect(lcd_fg_area.X0, lcd_fg_area.Y0, lcd_fg_area.XSize, lcd_fg_area.YSize, 0x0000000
 773:Src/app.c     **** 
 774:Src/app.c     ****   /* cpu load */
 775:Src/app.c     ****   cpuload_update(&cpu_load);
 776:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 777:Src/app.c     **** 
 778:Src/app.c     ****   /* draw metrics */
 779:Src/app.c     ****   nn_fps = 1000.0 / info->nn_period_ms;
 780:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 781:Src/app.c     ****   line_nb += 1;
 782:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 783:Src/app.c     ****   line_nb += 2;
 784:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 785:Src/app.c     ****   line_nb += 1;
 786:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " pd %2ums", info->pd_ms);
 787:Src/app.c     ****   line_nb += 1;
 788:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " hl %2ums", info->hl_ms);
 789:Src/app.c     ****   line_nb += 2;
 790:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 791:Src/app.c     ****   line_nb += 2;
 792:Src/app.c     ****   if (DBG_INFO) {
 793:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 794:Src/app.c     ****     line_nb += 1;
 795:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "   %ums", info->disp_ms);
 796:Src/app.c     ****     line_nb += 1;
 797:Src/app.c     ****   }
 798:Src/app.c     **** 
 799:Src/app.c     ****   /* display palm detector output */
 800:Src/app.c     ****   for (i = 0; i < info->pd_hand_nb; i++) {
ARM GAS  /tmp/ccl1pJez.s 			page 32


 801:Src/app.c     ****     if (info->hands[i].is_valid)
 802:Src/app.c     ****       display_hand(info, &info->hands[i]);
 803:Src/app.c     ****   }
 804:Src/app.c     **** 
 805:Src/app.c     ****   if (DBG_INFO)
 806:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 807:Src/app.c     **** }
 808:Src/app.c     **** 
 809:Src/app.c     **** /**
 810:Src/app.c     ****  * @brief  Initializes the YOLO detector model info and post-processing
 811:Src/app.c     ****  * @param  info  Pointer to the yolo_detector_info_t context struct
 812:Src/app.c     ****  * @retval None
 813:Src/app.c     ****  */
 814:Src/app.c     **** static void yolo_detector_init(yolo_detector_info_t *info)
 815:Src/app.c     **** {
 816:Src/app.c     ****   // Assumes your YOLO model is named 'yolo_detector' in the Cube.AI tool
 817:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_yolo_detector();
 818:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 819:Src/app.c     ****   int ret;
 820:Src/app.c     **** 
 821:Src/app.c     ****   /* Link model I/O buffers to the info struct */
 822:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 823:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 824:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 825:Src/app.c     **** 
 826:Src/app.c     ****   /* Initialize YOLO post-processing static parameters */
 827:Src/app.c     ****   info->static_param.nb_classes = 80;        // Example: 80 for COCO dataset
 828:Src/app.c     ****   info->static_param.nb_total_boxes = 8400;  // Example: Standard for YOLOv8
 829:Src/app.c     ****   info->static_param.max_boxes_limit = 100;  // Max boxes after NMS
 830:Src/app.c     ****   info->static_param.conf_threshold = 0.40f; // Confidence threshold
 831:Src/app.c     ****   info->static_param.iou_threshold = 0.45f;  // IoU threshold for NMS
 832:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 833:Src/app.c     ****   info->static_param.raw_output_scale = 1.0f;
 834:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 835:Src/app.c     **** 
 836:Src/app.c     ****   /* Initialize the post-processing module */
 837:Src/app.c     ****   // Assumes a generic post-processing init function exists
 838:Src/app.c     ****   ret = app_postprocess_init(&info->static_param, &NN_Instance_yolo_detector);
 839:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 840:Src/app.c     **** }
 841:Src/app.c     **** 
 842:Src/app.c     **** static int yolo_detector_run(uint8_t *buffer, yolo_detector_info_t *info, uint32_t *exec_time)
 843:Src/app.c     **** {
 844:Src/app.c     ****   uint32_t start_ts;
 845:Src/app.c     ****   int detection_nb;
 846:Src/app.c     ****   int ret;
 847:Src/app.c     ****   int i;
 848:Src/app.c     **** 
 849:Src/app.c     ****   start_ts = HAL_GetTick();
 850:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 851:Src/app.c     ****   ret = LL_ATON_Set_User_Input_Buffer_yolo_detector(0, buffer, info->nn_in_len);
 852:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 853:Src/app.c     **** 
 854:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_yolo_detector);
 855:Src/app.c     **** 
 856:Src/app.c     ****   /* Run post-processing on the model's raw output */
 857:Src/app.c     ****   ret = app_postprocess_run((void * []){info->raw_detections_out}, 1, &info->yolo_out, &info->stati
ARM GAS  /tmp/ccl1pJez.s 			page 33


 858:Src/app.c     **** 
 859:Src/app.c     ****   // Get the number of final detections after NMS
 860:Src/app.c     ****   detection_nb = info->yolo_out.nb_detect;
 861:Src/app.c     **** 
 862:Src/app.c     ****   /* Optional: Post-process final bounding boxes (e.g., coordinate scaling) */
 863:Src/app.c     ****   for (i = 0; i < detection_nb; i++) {
 864:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 865:Src/app.c     ****   }
 866:Src/app.c     **** 
 867:Src/app.c     ****   /* Invalidate D-Cache for the output region to ensure CPU sees updated data */
 868:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->raw_detections_out, info->raw_detections_out_len));
 869:Src/app.c     **** 
 870:Src/app.c     ****   *exec_time = HAL_GetTick() - start_ts;
 871:Src/app.c     **** 
 872:Src/app.c     ****   return detection_nb;
 873:Src/app.c     **** }
 874:Src/app.c     **** 
 875:Src/app.c     **** static void face_landmark_init(fl_model_info_t *info)
 876:Src/app.c     **** {
 877:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_face_landmark();
 878:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 879:Src/app.c     **** 
 880:Src/app.c     ****   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
 881:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 882:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 883:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 884:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
 885:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 886:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 887:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 1404);
 888:Src/app.c     **** }
 889:Src/app.c     **** 
 890:Src/app.c     **** static int face_landmark_prepare_input(uint8_t *buffer, roi_t *roi, fl_model_info_t *info)
 891:Src/app.c     **** {
 892:Src/app.c     ****   float corners_f[4][2];
 893:Src/app.c     ****   int corners[4][2];
 894:Src/app.c     ****   uint8_t* out_data;
 895:Src/app.c     ****   size_t height_out;
 896:Src/app.c     ****   uint8_t *in_data;
 897:Src/app.c     ****   size_t height_in;
 898:Src/app.c     ****   size_t width_out;
 899:Src/app.c     ****   size_t width_in;
 900:Src/app.c     ****   int is_clamped;
 901:Src/app.c     **** 
 902:Src/app.c     ****   /* defaults when no clamping occurs */
 903:Src/app.c     ****   out_data = info->nn_in;
 904:Src/app.c     ****   width_out = LD_WIDTH;
 905:Src/app.c     ****   height_out = LD_HEIGHT;
 906:Src/app.c     **** 
 907:Src/app.c     ****   roi_to_corners(roi, corners_f);
 908:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 909:Src/app.c     **** 
 910:Src/app.c     ****   /* If clamp perform a partial resize */
 911:Src/app.c     ****   if (is_clamped) {
 912:Src/app.c     ****     int offset_x;
 913:Src/app.c     ****     int offset_y;
 914:Src/app.c     **** 
ARM GAS  /tmp/ccl1pJez.s 			page 34


 915:Src/app.c     ****     /* clear target memory since resize will partially write it */
 916:Src/app.c     ****     memset(info->nn_in, 0, info->nn_in_len);
 917:Src/app.c     **** 
 918:Src/app.c     ****     /* compute start address of output buffer */
 919:Src/app.c     ****     offset_x = (int)(((corners[0][0] - corners_f[0][0]) * LD_WIDTH) / (corners_f[2][0] - corners_f[
 920:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 921:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 922:Src/app.c     **** 
 923:Src/app.c     ****     /* compute output width and height */
 924:Src/app.c     ****     width_out = (int)((corners[2][0] - corners[0][0]) / (corners_f[2][0] - corners_f[0][0]) * LD_WI
 925:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 926:Src/app.c     **** 
 927:Src/app.c     ****     assert(width_out > 0);
 928:Src/app.c     ****     assert(height_out > 0);
 929:Src/app.c     ****     {
 930:Src/app.c     ****       uint8_t* out_data_end;
 931:Src/app.c     **** 
 932:Src/app.c     ****       out_data_end = out_data + (int)LD_WIDTH * DISPLAY_BPP * (height_out - 1) + DISPLAY_BPP * widt
 933:Src/app.c     **** 
 934:Src/app.c     ****       assert(out_data_end >= info->nn_in);
 935:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 936:Src/app.c     ****     }
 937:Src/app.c     ****   }
 938:Src/app.c     **** 
 939:Src/app.c     ****   in_data = buffer + corners[0][1] * LCD_BG_WIDTH * DISPLAY_BPP + corners[0][0]* DISPLAY_BPP;
 940:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 941:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
 942:Src/app.c     **** 
 943:Src/app.c     ****   assert(width_in > 0);
 944:Src/app.c     ****   assert(height_in > 0);
 945:Src/app.c     ****   {
 946:Src/app.c     ****     uint8_t* in_data_end;
 947:Src/app.c     **** 
 948:Src/app.c     ****     in_data_end = in_data + LCD_BG_WIDTH * DISPLAY_BPP * (height_in - 1) + DISPLAY_BPP * width_in -
 949:Src/app.c     **** 
 950:Src/app.c     ****     assert(in_data_end >= buffer);
 951:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 952:Src/app.c     ****   }
 953:Src/app.c     **** 
 954:Src/app.c     ****   IPL_resize_bilinear_iu8ou8_with_strides_RGB(in_data, out_data, LCD_BG_WIDTH * DISPLAY_BPP, LD_WID
 955:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 956:Src/app.c     **** 
 957:Src/app.c     ****   return 0;
 958:Src/app.c     **** }
 959:Src/app.c     **** 
 960:Src/app.c     **** 
 961:Src/app.c     **** static int face_landmark_run(uint8_t *buffer, fl_model_info_t *info, roi_t *roi,
 962:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
 963:Src/app.c     **** {
 964:Src/app.c     ****   int is_clamped;
 965:Src/app.c     ****   int is_valid;
 966:Src/app.c     **** 
 967:Src/app.c     ****   is_clamped = face_landmark_prepare_input(buffer, roi, info);
 968:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
 969:Src/app.c     ****   if (is_clamped)
 970:Src/app.c     ****     return 0;
 971:Src/app.c     **** 
ARM GAS  /tmp/ccl1pJez.s 			page 35


 972:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_face_landmark);
 973:Src/app.c     **** 
 974:Src/app.c     ****   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
 975:Src/app.c     **** 
 976:Src/app.c     ****   /* Discard nn_out region (used by pp_input and pp_outputs variables) to avoid Dcache evictions du
 977:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
 978:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 979:Src/app.c     **** 
 980:Src/app.c     ****   return is_valid;
 981:Src/app.c     **** }
 982:Src/app.c     **** 
 983:Src/app.c     **** // static void palm_detector_init(pd_model_info_t *info)
 984:Src/app.c     **** // {
 985:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_palm_detector();
 986:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_palm_detector();
 987:Src/app.c     **** //   int ret;
 988:Src/app.c     **** 
 989:Src/app.c     **** //   /* model info */
 990:Src/app.c     **** //   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 991:Src/app.c     **** //   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 992:Src/app.c     **** //   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 993:Src/app.c     **** //   assert(info->prob_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float));
 994:Src/app.c     **** //   info->boxes_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 995:Src/app.c     **** //   info->boxes_out_len = LL_Buffer_len(&nn_out_info[1]);
 996:Src/app.c     **** //   assert(info->boxes_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float) * 18);
 997:Src/app.c     **** 
 998:Src/app.c     **** //   /* post processor info */
 999:Src/app.c     **** //   ret = app_postprocess_init(&info->static_param, &NN_Instance_palm_detector);
1000:Src/app.c     **** //   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
1001:Src/app.c     **** // }
1002:Src/app.c     **** 
1003:Src/app.c     **** // static int palm_detector_run(uint8_t *buffer, pd_model_info_t *info, uint32_t *pd_exec_time)
1004:Src/app.c     **** // {
1005:Src/app.c     **** //   uint32_t start_ts;
1006:Src/app.c     **** //   int hand_nb;
1007:Src/app.c     **** //   int ret;
1008:Src/app.c     **** //   int i;
1009:Src/app.c     **** 
1010:Src/app.c     **** //   start_ts = HAL_GetTick();
1011:Src/app.c     **** //   /* Note that we don't need to clean/invalidate those input buffers since they are only access 
1012:Src/app.c     **** //   ret = LL_ATON_Set_User_Input_Buffer_palm_detector(0, buffer, info->nn_in_len);
1013:Src/app.c     **** //   assert(ret == LL_ATON_User_IO_NOERROR);
1014:Src/app.c     **** 
1015:Src/app.c     **** //   LL_ATON_RT_Main(&NN_Instance_palm_detector);
1016:Src/app.c     **** 
1017:Src/app.c     **** //   ret = app_postprocess_run((void * []){info->prob_out, info->boxes_out}, 2, &info->pd_out, &inf
1018:Src/app.c     **** //   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
1019:Src/app.c     **** //   hand_nb = MIN(info->pd_out.box_nb, PD_MAX_HAND_NB);
1020:Src/app.c     **** 
1021:Src/app.c     **** //   for (i = 0; i < hand_nb; i++) {
1022:Src/app.c     **** //     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
1023:Src/app.c     **** //     pd_box_to_roi(&info->pd_out.pOutData[i], &rois[i]);
1024:Src/app.c     **** //   }
1025:Src/app.c     **** 
1026:Src/app.c     **** //   /* Discard nn_out region (used by pp_outputs variables) to avoid Dcache evictions during nn in
1027:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1028:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
ARM GAS  /tmp/ccl1pJez.s 			page 36


1029:Src/app.c     **** 
1030:Src/app.c     **** //   *pd_exec_time = HAL_GetTick() - start_ts;
1031:Src/app.c     **** 
1032:Src/app.c     **** //   return hand_nb;
1033:Src/app.c     **** // }
1034:Src/app.c     **** 
1035:Src/app.c     **** // static void hand_landmark_init(hl_model_info_t *info)
1036:Src/app.c     **** // {
1037:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_hand_landmark();
1038:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_hand_landmark();
1039:Src/app.c     **** 
1040:Src/app.c     **** //   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
1041:Src/app.c     **** //   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1042:Src/app.c     **** //   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[2]);
1043:Src/app.c     **** //   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
1044:Src/app.c     **** //   assert(info->prob_out_len == sizeof(float));
1045:Src/app.c     **** //   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
1046:Src/app.c     **** //   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
1047:Src/app.c     **** //   assert(info->landmarks_out_len == sizeof(float) * 63);
1048:Src/app.c     **** // }
1049:Src/app.c     **** 
1050:Src/app.c     **** 
1051:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1052:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1053:Src/app.c     **** {
1054:Src/app.c     ****   float corners_f[4][2];
1055:Src/app.c     ****   int corners[4][2];
1056:Src/app.c     ****   uint8_t* out_data;
1057:Src/app.c     ****   size_t height_out;
1058:Src/app.c     ****   uint8_t *in_data;
1059:Src/app.c     ****   size_t height_in;
1060:Src/app.c     ****   size_t width_out;
1061:Src/app.c     ****   size_t width_in;
1062:Src/app.c     ****   int is_clamped;
1063:Src/app.c     **** 
1064:Src/app.c     ****   /* defaults when no clamping occurs */
1065:Src/app.c     ****   out_data = info->nn_in;
1066:Src/app.c     ****   width_out = LD_WIDTH;
1067:Src/app.c     ****   height_out = LD_HEIGHT;
1068:Src/app.c     **** 
1069:Src/app.c     ****   roi_to_corners(roi, corners_f);
1070:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
1071:Src/app.c     **** 
1072:Src/app.c     ****   /* If clamp perform a partial resize */
1073:Src/app.c     ****   if (is_clamped) {
1074:Src/app.c     ****     int offset_x;
1075:Src/app.c     ****     int offset_y;
1076:Src/app.c     **** 
1077:Src/app.c     ****     /* clear target memory since resize will partially write it */
1078:Src/app.c     ****     memset(info->nn_in, 0, info->nn_in_len);
1079:Src/app.c     **** 
1080:Src/app.c     ****     /* compute start address of output buffer */
1081:Src/app.c     ****     offset_x = (int)(((corners[0][0] - corners_f[0][0]) * LD_WIDTH) / (corners_f[2][0] - corners_f[
1082:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
1083:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
1084:Src/app.c     **** 
1085:Src/app.c     ****     /* compute output width and height */
ARM GAS  /tmp/ccl1pJez.s 			page 37


1086:Src/app.c     ****     width_out = (int)((corners[2][0] - corners[0][0]) / (corners_f[2][0] - corners_f[0][0]) * LD_WI
1087:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
1088:Src/app.c     **** 
1089:Src/app.c     ****     assert(width_out > 0);
1090:Src/app.c     ****     assert(height_out > 0);
1091:Src/app.c     ****     {
1092:Src/app.c     ****       uint8_t* out_data_end;
1093:Src/app.c     **** 
1094:Src/app.c     ****       out_data_end = out_data + (int)LD_WIDTH * DISPLAY_BPP * (height_out - 1) + DISPLAY_BPP * widt
1095:Src/app.c     **** 
1096:Src/app.c     ****       assert(out_data_end >= info->nn_in);
1097:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
1098:Src/app.c     ****     }
1099:Src/app.c     ****   }
1100:Src/app.c     **** 
1101:Src/app.c     ****   in_data = buffer + corners[0][1] * LCD_BG_WIDTH * DISPLAY_BPP + corners[0][0]* DISPLAY_BPP;
1102:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
1103:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
1104:Src/app.c     **** 
1105:Src/app.c     ****   assert(width_in > 0);
1106:Src/app.c     ****   assert(height_in > 0);
1107:Src/app.c     ****   {
1108:Src/app.c     ****     uint8_t* in_data_end;
1109:Src/app.c     **** 
1110:Src/app.c     ****     in_data_end = in_data + LCD_BG_WIDTH * DISPLAY_BPP * (height_in - 1) + DISPLAY_BPP * width_in -
1111:Src/app.c     **** 
1112:Src/app.c     ****     assert(in_data_end >= buffer);
1113:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
1114:Src/app.c     ****   }
1115:Src/app.c     **** 
1116:Src/app.c     ****   IPL_resize_bilinear_iu8ou8_with_strides_RGB(in_data, out_data, LCD_BG_WIDTH * DISPLAY_BPP, LD_WID
1117:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
1118:Src/app.c     **** 
1119:Src/app.c     ****   return 0;
1120:Src/app.c     **** }
1121:Src/app.c     **** #else
1122:Src/app.c     **** static void app_transform(nema_matrix3x3_t t, app_v3_t v)
1123:Src/app.c     **** {
1124:Src/app.c     ****   app_v3_t r;
1125:Src/app.c     ****   int i;
1126:Src/app.c     **** 
1127:Src/app.c     ****   for (i = 0; i < 3; i++)
1128:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
1129:Src/app.c     **** 
1130:Src/app.c     ****   for (i = 0; i < 3; i++)
1131:Src/app.c     ****     v[i] = r[i];
1132:Src/app.c     **** }
1133:Src/app.c     **** 
1134:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1135:Src/app.c     **** {
1136:Src/app.c     ****   app_v3_t vertex[] = {
1137:Src/app.c     ****     {           0,             0, 1},
1138:Src/app.c     ****     {LCD_BG_WIDTH,             0, 1},
1139:Src/app.c     ****     {LCD_BG_WIDTH, LCD_BG_HEIGHT, 1},
1140:Src/app.c     ****     {           0, LCD_BG_HEIGHT, 1},
1141:Src/app.c     ****   };
1142:Src/app.c     ****   GFXMMU_BuffersTypeDef buffers = { 0 };
ARM GAS  /tmp/ccl1pJez.s 			page 38


1143:Src/app.c     ****   nema_matrix3x3_t t;
1144:Src/app.c     ****   int ret;
1145:Src/app.c     ****   int i;
1146:Src/app.c     **** 
1147:Src/app.c     ****   buffers.Buf0Address = (uint32_t) info->nn_in;
1148:Src/app.c     ****   ret = HAL_GFXMMU_ModifyBuffers(&hgfxmmu, &buffers);
1149:Src/app.c     ****   assert(ret == HAL_OK);
1150:Src/app.c     **** 
1151:Src/app.c     ****   /* bind destination texture */
1152:Src/app.c     ****   nema_bind_dst_tex(GFXMMU_VIRTUAL_BUFFER0_BASE, LD_WIDTH, LD_HEIGHT, NEMA_RGBA8888, -1);
1153:Src/app.c     ****   nema_set_clip(0, 0, LD_WIDTH, LD_HEIGHT);
1154:Src/app.c     ****   nema_clear(0);
1155:Src/app.c     ****   /* bind source texture */
1156:Src/app.c     ****   nema_bind_src_tex((uintptr_t) buffer, LCD_BG_WIDTH, LCD_BG_HEIGHT, NEMA_RGBA8888, -1, NEMA_FILTER
1157:Src/app.c     ****   nema_enable_tiling(1);
1158:Src/app.c     ****   nema_set_blend_blit(NEMA_BL_SRC);
1159:Src/app.c     **** 
1160:Src/app.c     ****   /* let's go */
1161:Src/app.c     ****   nema_mat3x3_load_identity(t);
1162:Src/app.c     ****   nema_mat3x3_translate(t, -roi->cx, -roi->cy);
1163:Src/app.c     ****   nema_mat3x3_rotate(t, nema_rad_to_deg(-roi->rotation));
1164:Src/app.c     ****   nema_mat3x3_scale(t, LD_WIDTH / roi->w, LD_HEIGHT / roi->h);
1165:Src/app.c     ****   nema_mat3x3_translate(t, LD_WIDTH / 2, LD_HEIGHT / 2);
1166:Src/app.c     ****   for (i = 0 ; i < 4; i++)
1167:Src/app.c     ****     app_transform(t, vertex[i]);
1168:Src/app.c     ****   nema_blit_quad_fit(vertex[0][0], vertex[0][1], vertex[1][0], vertex[1][1],
1169:Src/app.c     ****                      vertex[2][0], vertex[2][1], vertex[3][0], vertex[3][1]);
1170:Src/app.c     **** 
1171:Src/app.c     ****   nema_cl_submit(&cl);
1172:Src/app.c     ****   nema_cl_wait(&cl);
1173:Src/app.c     ****   HAL_ICACHE_Invalidate();
1174:Src/app.c     **** 
1175:Src/app.c     ****   assert(!nema_get_error());
1176:Src/app.c     **** 
1177:Src/app.c     ****   return 0;
1178:Src/app.c     **** }
1179:Src/app.c     **** #endif
1180:Src/app.c     **** 
1181:Src/app.c     **** // static int hand_landmark_run(uint8_t *buffer, hl_model_info_t *info, roi_t *roi,
1182:Src/app.c     **** //                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
1183:Src/app.c     **** // {
1184:Src/app.c     **** //   int is_clamped;
1185:Src/app.c     **** //   int is_valid;
1186:Src/app.c     **** 
1187:Src/app.c     **** //   is_clamped = hand_landmark_prepare_input(buffer, roi, info);
1188:Src/app.c     **** //   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
1189:Src/app.c     **** //   if (is_clamped)
1190:Src/app.c     **** //     return 0;
1191:Src/app.c     **** 
1192:Src/app.c     **** //   LL_ATON_RT_Main(&NN_Instance_hand_landmark);
1193:Src/app.c     **** 
1194:Src/app.c     **** //   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
1195:Src/app.c     **** 
1196:Src/app.c     **** //   /* Discard nn_out region (used by pp_input and pp_outputs variables) to avoid Dcache evictions
1197:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1198:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
1199:Src/app.c     **** 
ARM GAS  /tmp/ccl1pJez.s 			page 39


1200:Src/app.c     **** //   return is_valid;
1201:Src/app.c     **** // }
1202:Src/app.c     **** 
1203:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
1204:Src/app.c     **** static void app_rot_init(hl_model_info_t *info)
1205:Src/app.c     **** {
1206:Src/app.c     ****   GFXMMU_PackingTypeDef packing = { 0 };
1207:Src/app.c     ****   int ret;
1208:Src/app.c     **** 
1209:Src/app.c     ****   printf("init nema\n");
1210:Src/app.c     ****   nema_init();
1211:Src/app.c     ****   assert(!nema_get_error());
1212:Src/app.c     ****   nema_ext_hold_enable(2);
1213:Src/app.c     ****   nema_ext_hold_irq_enable(2);
1214:Src/app.c     ****   nema_ext_hold_enable(3);
1215:Src/app.c     ****   nema_ext_hold_irq_enable(3);
1216:Src/app.c     ****   printf("init nema DONE %s\n", nema_get_sw_device_name());
1217:Src/app.c     **** 
1218:Src/app.c     ****   hgfxmmu.Instance = GFXMMU;
1219:Src/app.c     ****   hgfxmmu.Init.BlockSize = GFXMMU_12BYTE_BLOCKS;
1220:Src/app.c     ****   hgfxmmu.Init.AddressTranslation = DISABLE;
1221:Src/app.c     ****   ret = HAL_GFXMMU_Init(&hgfxmmu);
1222:Src/app.c     ****   assert(ret == HAL_OK);
1223:Src/app.c     **** 
1224:Src/app.c     ****   packing.Buffer0Activation = ENABLE;
1225:Src/app.c     ****   packing.Buffer0Mode       = GFXMMU_PACKING_MSB_REMOVE;
1226:Src/app.c     ****   packing.DefaultAlpha      = 0xff;
1227:Src/app.c     ****   ret = HAL_GFXMMU_ConfigPacking(&hgfxmmu, &packing);
1228:Src/app.c     ****   assert(ret == HAL_OK);
1229:Src/app.c     **** 
1230:Src/app.c     ****   cl = nema_cl_create_sized(8192);
1231:Src/app.c     ****   nema_cl_bind_circular(&cl);
1232:Src/app.c     **** }
1233:Src/app.c     **** #endif
1234:Src/app.c     **** 
1235:Src/app.c     **** static float ld_compute_rotation(ld_point_t lm[LD_LANDMARK_NB])
1236:Src/app.c     **** {
1237:Src/app.c     ****   float x0, y0, x1, y1;
1238:Src/app.c     ****   float rotation;
1239:Src/app.c     **** 
1240:Src/app.c     ****   x0 = lm[0].x;
1241:Src/app.c     ****   y0 = lm[0].y;
1242:Src/app.c     ****   x1 = lm[9].x;
1243:Src/app.c     ****   y1 = lm[9].y;
1244:Src/app.c     **** 
1245:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
1246:Src/app.c     **** 
1247:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
1248:Src/app.c     **** }
1249:Src/app.c     **** 
1250:Src/app.c     **** static void ld_to_roi(ld_point_t lm[LD_LANDMARK_NB], roi_t *roi, pd_pp_box_t *next_pd)
1251:Src/app.c     **** {
1252:Src/app.c     ****   const int pd_to_ld_idx[AI_PD_MODEL_PP_NB_KEYPOINTS] = {0, 5, 9, 13, 17, 1, 2};
1253:Src/app.c     ****   const int indices[] = {0, 1, 2, 3, 5, 6, 9, 10, 13, 14, 17, 18};
1254:Src/app.c     ****   float max_x, max_y, min_x, min_y;
1255:Src/app.c     ****   int i;
1256:Src/app.c     **** 
ARM GAS  /tmp/ccl1pJez.s 			page 40


1257:Src/app.c     ****   max_x = max_y = -10000;
1258:Src/app.c     ****   min_x = min_y =  10000;
1259:Src/app.c     **** 
1260:Src/app.c     ****   roi->rotation = ld_compute_rotation(lm);
1261:Src/app.c     **** 
1262:Src/app.c     ****   for (i = 0; i < ARRAY_NB(indices); i++) {
1263:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
1264:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
1265:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
1266:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
1267:Src/app.c     ****   }
1268:Src/app.c     **** 
1269:Src/app.c     ****   roi->cx = (max_x + min_x) / 2;
1270:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
1271:Src/app.c     ****   roi->w = (max_x - min_x);
1272:Src/app.c     ****   roi->h = (max_y - min_y);
1273:Src/app.c     **** 
1274:Src/app.c     ****   next_pd->x_center = roi->cx;
1275:Src/app.c     ****   next_pd->y_center = roi->cy;
1276:Src/app.c     ****   next_pd->width = roi->w;
1277:Src/app.c     ****   next_pd->height = roi->h;
1278:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
1279:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
1280:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
1281:Src/app.c     ****   }
1282:Src/app.c     **** }
1283:Src/app.c     **** 
1284:Src/app.c     **** static void compute_next_roi(roi_t *src, ld_point_t lm_in[LD_LANDMARK_NB], roi_t *next, pd_pp_box_t
1285:Src/app.c     **** {
1286:Src/app.c     ****   const float shift_x = 0;
1287:Src/app.c     ****   const float shift_y = -0.1;
1288:Src/app.c     ****   const float scale = 2.0;
1289:Src/app.c     ****   ld_point_t lm[LD_LANDMARK_NB];
1290:Src/app.c     ****   roi_t roi;
1291:Src/app.c     ****   int i;
1292:Src/app.c     **** 
1293:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++)
1294:Src/app.c     ****     decode_ld_landmark(src, &lm_in[i], &lm[i]);
1295:Src/app.c     **** 
1296:Src/app.c     ****   ld_to_roi(lm, &roi, next_pd);
1297:Src/app.c     ****   roi_shift_and_scale(&roi, shift_x, shift_y, scale, scale);
1298:Src/app.c     **** 
1299:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1300:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
1301:Src/app.c     ****   roi.rotation = 0;
1302:Src/app.c     **** #endif
1303:Src/app.c     **** 
1304:Src/app.c     ****   *next = roi;
1305:Src/app.c     **** }
1306:Src/app.c     **** static void nn_thread_fct(void *arg)
1307:Src/app.c     **** {
1308:Src/app.c     ****   float nn_period_filtered_ms = 0;
1309:Src/app.c     ****   // Filtered inference times, will be updated with 0
1310:Src/app.c     ****   float pd_filtered_ms = 0;
1311:Src/app.c     ****   float ld_filtered_ms = 0;
1312:Src/app.c     **** 
1313:Src/app.c     ****   uint32_t nn_period_ms;
ARM GAS  /tmp/ccl1pJez.s 			page 41


1314:Src/app.c     ****   uint32_t nn_period[2];
1315:Src/app.c     ****   uint8_t *nn_pipe_dst;
1316:Src/app.c     ****   int is_tracking;
1317:Src/app.c     ****   uint32_t pd_ms;
1318:Src/app.c     ****   uint32_t hl_ms;
1319:Src/app.c     ****   int ret;
1320:Src/app.c     ****   roi_t roi_dummy;
1321:Src/app.c     ****   int is_landmark_valid;
1322:Src/app.c     **** 
1323:Src/app.c     ****   roi_dummy.cx = 100;
1324:Src/app.c     ****   roi_dummy.cy = 100;
1325:Src/app.c     ****   roi_dummy.w = 50;
1326:Src/app.c     ****   roi_dummy.h = 50;
1327:Src/app.c     **** 
1328:Src/app.c     **** 
1329:Src/app.c     ****   /*
1330:Src/app.c     ****    * 2. Initialize the YOLO model
1331:Src/app.c     ****    * This calls the init function to set up buffers and parameters.
1332:Src/app.c     ****    * If the application runs past this point, the initialization is successful.
1333:Src/app.c     ****    */
1334:Src/app.c     ****   yolo_detector_info_t yolo_info;
1335:Src/app.c     ****   yolo_detector_init(&yolo_info);
1336:Src/app.c     **** 
1337:Src/app.c     ****   fl_model_info_t face_info;
1338:Src/app.c     ****   face_landmark_init(&face_info);
1339:Src/app.c     **** 
1340:Src/app.c     ****   int detection_nb;
1341:Src/app.c     **** 
1342:Src/app.c     ****   /*** App Loop ***************************************************************/
1343:Src/app.c     ****   nn_period[1] = HAL_GetTick();
1344:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1345:Src/app.c     ****   assert(nn_pipe_dst);
1346:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1347:Src/app.c     ****   while (1)
1348:Src/app.c     ****   {
1349:Src/app.c     ****     uint8_t *capture_buffer;
1350:Src/app.c     **** 
1351:Src/app.c     ****     // Standard frame timing
1352:Src/app.c     ****     nn_period[0] = nn_period[1];
1353:Src/app.c     ****     nn_period[1] = HAL_GetTick();
1354:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
1355:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
1356:Src/app.c     **** 
1357:Src/app.c     ****     // Get camera buffer to keep the pipeline moving
1358:Src/app.c     ****     capture_buffer = bqueue_get_ready(&nn_input_queue);
1359:Src/app.c     ****     assert(capture_buffer);
1360:Src/app.c     **** 
1361:Src/app.c     **** 
1362:Src/app.c     ****     /**************************************************************************
1363:Src/app.c     ****      * MODEL EXECUTION 
1364:Src/app.c     ****      **************************************************************************/
1365:Src/app.c     ****     detection_nb = yolo_detector_run(capture_buffer, &yolo_info, &pd_ms);
1366:Src/app.c     ****     hl_ms = HAL_GetTick();
1367:Src/app.c     ****     is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &roi_dummy, ld_landmarks[0]);
1368:Src/app.c     ****     hl_ms = HAL_GetTick() - hl_ms;
1369:Src/app.c     **** 
1370:Src/app.c     ****     is_tracking = 0; // Force state to "not tracking"
ARM GAS  /tmp/ccl1pJez.s 			page 42


1371:Src/app.c     **** 
1372:Src/app.c     ****     // Update filtered times with our zero values
1373:Src/app.c     ****     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1374:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1375:Src/app.c     **** 
1376:Src/app.c     ****     // We are done with the buffer, release it
1377:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
1378:Src/app.c     **** 
1379:Src/app.c     **** 
1380:Src/app.c     ****     /*
1381:Src/app.c     ****      * Update display stats with the "no detection" info
1382:Src/app.c     ****      */
1383:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1384:Src/app.c     ****     assert(ret == pdTRUE);
1385:Src/app.c     **** 
1386:Src/app.c     ****     // Populate display structure with valid, non-model data
1387:Src/app.c     ****     disp.info.pd_ms = (int)pd_filtered_ms;
1388:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
1389:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
1390:Src/app.c     ****     disp.info.pd_hand_nb = 0;
1391:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
1392:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
1393:Src/app.c     **** 
1394:Src/app.c     ****     // NOTE: We no longer copy box or landmark data, as none exists.
1395:Src/app.c     ****     // The display thread should check the 'is_valid' flag before drawing.
1396:Src/app.c     ****     if (is_landmark_valid)
1397:Src/app.c     ****     {
1398:Src/app.c     ****       // If valid, show the dummy ROI as the bounding box
1399:Src/app.c     ****       disp.info.hands[0].roi = roi_dummy;
1400:Src/app.c     ****       // Copy the landmark data for the display thread
1401:Src/app.c     ****       for (int j = 0; j < LD_LANDMARK_NB; j++)
1402:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1403:Src/app.c     ****     }
1404:Src/app.c     **** 
1405:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1406:Src/app.c     ****     assert(ret == pdTRUE);
1407:Src/app.c     **** 
1408:Src/app.c     ****     // Signal the display thread to update
1409:Src/app.c     ****     xSemaphoreGive(disp.update);
1410:Src/app.c     ****   }
1411:Src/app.c     **** }
1412:Src/app.c     **** 
1413:Src/app.c     **** // static void backup(void *arg)
1414:Src/app.c     **** // {
1415:Src/app.c     **** //   float nn_period_filtered_ms = 0;
1416:Src/app.c     **** //   float pd_filtered_ms = 0;
1417:Src/app.c     **** //   float ld_filtered_ms = 0;
1418:Src/app.c     **** //   hl_model_info_t hl_info;
1419:Src/app.c     **** //   pd_model_info_t pd_info;
1420:Src/app.c     **** //   uint32_t nn_period_ms;
1421:Src/app.c     **** //   uint32_t nn_period[2];
1422:Src/app.c     **** //   uint8_t *nn_pipe_dst;
1423:Src/app.c     **** //   pd_pp_point_t box_next_keypoints[AI_PD_MODEL_PP_NB_KEYPOINTS];
1424:Src/app.c     **** //   pd_pp_box_t box_next;
1425:Src/app.c     **** //   int is_tracking = 0;
1426:Src/app.c     **** //   roi_t roi_next;
1427:Src/app.c     **** //   uint32_t pd_ms;
ARM GAS  /tmp/ccl1pJez.s 			page 43


1428:Src/app.c     **** //   uint32_t hl_ms;
1429:Src/app.c     **** //   int ret;
1430:Src/app.c     **** //   int j;
1431:Src/app.c     **** 
1432:Src/app.c     **** //   /* Current tracking algo only support single hand */
1433:Src/app.c     **** //   assert(PD_MAX_HAND_NB == 1);
1434:Src/app.c     **** 
1435:Src/app.c     **** //   /* setup models buffer info */
1436:Src/app.c     **** //   palm_detector_init(&pd_info);
1437:Src/app.c     **** //   box_next.pKps = box_next_keypoints;
1438:Src/app.c     **** //   hand_landmark_init(&hl_info);
1439:Src/app.c     **** 
1440:Src/app.c     **** // #if HAS_ROTATION_SUPPORT == 1
1441:Src/app.c     **** //   app_rot_init(&hl_info);
1442:Src/app.c     **** // #endif
1443:Src/app.c     **** 
1444:Src/app.c     **** //   /*** App Loop ***************************************************************/
1445:Src/app.c     **** //   nn_period[1] = HAL_GetTick();
1446:Src/app.c     **** //   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1447:Src/app.c     **** //   assert(nn_pipe_dst);
1448:Src/app.c     **** //   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1449:Src/app.c     **** //   while (1)
1450:Src/app.c     **** //   {
1451:Src/app.c     **** //     uint8_t *capture_buffer;
1452:Src/app.c     **** //     int idx_for_resize;
1453:Src/app.c     **** 
1454:Src/app.c     **** //     nn_period[0] = nn_period[1];
1455:Src/app.c     **** //     nn_period[1] = HAL_GetTick();
1456:Src/app.c     **** //     nn_period_ms = nn_period[1] - nn_period[0];
1457:Src/app.c     **** //     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 :
1458:Src/app.c     **** 
1459:Src/app.c     **** //     capture_buffer = bqueue_get_ready(&nn_input_queue);
1460:Src/app.c     **** //     assert(capture_buffer);
1461:Src/app.c     **** //     idx_for_resize = frame_event_nb_for_resize % DISPLAY_BUFFER_NB;
1462:Src/app.c     **** 
1463:Src/app.c     **** //     /* Only start palm detector when not tracking hand */
1464:Src/app.c     **** //     if (!is_tracking) {
1465:Src/app.c     **** //       is_tracking = palm_detector_run(capture_buffer, &pd_info, &pd_ms);
1466:Src/app.c     **** //       box_next.prob = pd_info.pd_out.pOutData[0].prob;
1467:Src/app.c     **** //     } else {
1468:Src/app.c     **** //       rois[0] = roi_next;
1469:Src/app.c     **** //       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
1470:Src/app.c     **** //       pd_ms = 0;
1471:Src/app.c     **** //     }
1472:Src/app.c     **** //     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1473:Src/app.c     **** //     bqueue_put_free(&nn_input_queue);
1474:Src/app.c     **** 
1475:Src/app.c     **** //     /* then run hand landmark detector if needed */
1476:Src/app.c     **** //     if (is_tracking) {
1477:Src/app.c     **** //       hl_ms = HAL_GetTick();
1478:Src/app.c     **** //       is_tracking = hand_landmark_run(lcd_bg_buffer[idx_for_resize], &hl_info, &rois[0], ld_land
1479:Src/app.c     **** //       CACHE_OP(SCB_InvalidateDCache_by_Addr(lcd_bg_buffer[idx_for_resize], sizeof(lcd_bg_buffer[
1480:Src/app.c     **** //       if (is_tracking)
1481:Src/app.c     **** //         compute_next_roi(&rois[0], ld_landmarks[0], &roi_next, &box_next);
1482:Src/app.c     **** //       hl_ms = HAL_GetTick() - hl_ms;
1483:Src/app.c     **** //     } else {
1484:Src/app.c     **** //       hl_ms = 0;
ARM GAS  /tmp/ccl1pJez.s 			page 44


1485:Src/app.c     **** //     }
1486:Src/app.c     **** //     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1487:Src/app.c     **** 
1488:Src/app.c     **** //     /* update display stats */
1489:Src/app.c     **** //     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1490:Src/app.c     **** //     assert(ret == pdTRUE);
1491:Src/app.c     **** //     disp.info.pd_ms = is_tracking ? 0 : (int)pd_filtered_ms;
1492:Src/app.c     **** //     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
1493:Src/app.c     **** //     disp.info.nn_period_ms = nn_period_filtered_ms;
1494:Src/app.c     **** //     disp.info.pd_hand_nb = is_tracking;
1495:Src/app.c     **** //     disp.info.pd_max_prob = pd_info.pd_out.pOutData[0].prob;
1496:Src/app.c     **** //     disp.info.hands[0].is_valid = is_tracking;
1497:Src/app.c     **** //     copy_pd_box(&disp.info.hands[0].pd_hands, &pd_info.pd_out.pOutData[0]);
1498:Src/app.c     **** //     disp.info.hands[0].roi = rois[0];
1499:Src/app.c     **** //     for (j = 0; j < LD_LANDMARK_NB; j++)
1500:Src/app.c     **** //       disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1501:Src/app.c     **** //     ret = xSemaphoreGive(disp.lock);
1502:Src/app.c     **** //     assert(ret == pdTRUE);
1503:Src/app.c     **** 
1504:Src/app.c     **** //     /* It's possible xqueue is empty if display is slow. So don't check error code that may by p
1505:Src/app.c     **** //     xSemaphoreGive(disp.update);
1506:Src/app.c     **** //   }
1507:Src/app.c     **** // }
1508:Src/app.c     **** 
1509:Src/app.c     **** static void dp_update_drawing_area()
1510:Src/app.c     **** {
1511:Src/app.c     ****   int ret;
1512:Src/app.c     **** 
1513:Src/app.c     ****   __disable_irq();
1514:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
1515:Src/app.c     ****   assert(ret == HAL_OK);
1516:Src/app.c     ****   __enable_irq();
1517:Src/app.c     **** }
1518:Src/app.c     **** 
1519:Src/app.c     **** static void dp_commit_drawing_area()
1520:Src/app.c     **** {
1521:Src/app.c     ****   int ret;
1522:Src/app.c     **** 
1523:Src/app.c     ****   __disable_irq();
1524:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
1525:Src/app.c     ****   assert(ret == HAL_OK);
1526:Src/app.c     ****   __enable_irq();
1527:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
1528:Src/app.c     **** }
1529:Src/app.c     **** 
1530:Src/app.c     **** static void on_ld_toggle_button_click(void *args)
1531:Src/app.c     **** {
1532:Src/app.c     ****   display_t *disp = (display_t *) args;
1533:Src/app.c     ****   int ret;
1534:Src/app.c     **** 
1535:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1536:Src/app.c     ****   assert(ret == pdTRUE);
1537:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
1538:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1539:Src/app.c     ****   assert(ret == pdTRUE);
1540:Src/app.c     **** }
1541:Src/app.c     **** 
ARM GAS  /tmp/ccl1pJez.s 			page 45


1542:Src/app.c     **** static void on_pd_toggle_button_click(void *args)
1543:Src/app.c     **** {
1544:Src/app.c     ****   display_t *disp = (display_t *) args;
1545:Src/app.c     ****   int ret;
1546:Src/app.c     **** 
1547:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1548:Src/app.c     ****   assert(ret == pdTRUE);
1549:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
1550:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1551:Src/app.c     ****   assert(ret == pdTRUE);
1552:Src/app.c     **** }
1553:Src/app.c     **** 
1554:Src/app.c     **** static void dp_thread_fct(void *arg)
1555:Src/app.c     **** {
1556:Src/app.c     ****   button_t ld_toggle_button;
1557:Src/app.c     ****   button_t hd_toggle_button;
1558:Src/app.c     ****   uint32_t disp_ms = 0;
1559:Src/app.c     ****   display_info_t info;
1560:Src/app.c     ****   uint32_t ts;
1561:Src/app.c     ****   int ret;
1562:Src/app.c     **** 
1563:Src/app.c     **** #ifdef STM32N6570_DK_REV
1564:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER1, on_ld_toggle_button_click, &disp);
1565:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
1566:Src/app.c     **** #else
1567:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER, on_ld_toggle_button_click, &disp);
1568:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_USER, on_pd_toggle_button_click, &disp);
1569:Src/app.c     **** #endif
1570:Src/app.c     ****   while (1)
1571:Src/app.c     ****   {
1572:Src/app.c     ****     ret = xSemaphoreTake(disp.update, portMAX_DELAY);
1573:Src/app.c     ****     assert(ret == pdTRUE);
1574:Src/app.c     **** 
1575:Src/app.c     ****     button_process(&ld_toggle_button);
1576:Src/app.c     ****     button_process(&hd_toggle_button);
1577:Src/app.c     **** 
1578:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1579:Src/app.c     ****     assert(ret == pdTRUE);
1580:Src/app.c     ****     info = disp.info;
1581:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1582:Src/app.c     ****     assert(ret == pdTRUE);
1583:Src/app.c     ****     info.disp_ms = disp_ms;
1584:Src/app.c     **** 
1585:Src/app.c     ****     ts = HAL_GetTick();
1586:Src/app.c     ****     dp_update_drawing_area();
1587:Src/app.c     ****     Display_NetworkOutput(&info);
1588:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
1589:Src/app.c     ****     dp_commit_drawing_area();
1590:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
1591:Src/app.c     ****   }
1592:Src/app.c     **** }
1593:Src/app.c     **** 
1594:Src/app.c     **** static void isp_thread_fct(void *arg)
1595:Src/app.c     **** {
 411              		.loc 1 1595 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccl1pJez.s 			page 46


 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		.loc 1 1595 1 is_stmt 0 view .LVU115
 416 0000 10B5     		push	{r4, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 4, -8
 419              		.cfi_offset 14, -4
1596:Src/app.c     ****   int ret;
1597:Src/app.c     **** 
1598:Src/app.c     ****   while (1) {
1599:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 420              		.loc 1 1599 11 view .LVU116
 421 0002 094C     		ldr	r4, .L24
 422              	.LVL27:
 423              	.L23:
1596:Src/app.c     ****   int ret;
 424              		.loc 1 1596 3 is_stmt 1 view .LVU117
1598:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 425              		.loc 1 1598 3 view .LVU118
 426              		.loc 1 1599 5 view .LVU119
 427              		.loc 1 1599 11 is_stmt 0 view .LVU120
 428 0004 4FF0FF31 		mov	r1, #-1
 429 0008 2068     		ldr	r0, [r4]
 430 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 431              	.LVL28:
1600:Src/app.c     ****     assert(ret == pdTRUE);
 432              		.loc 1 1600 5 is_stmt 1 view .LVU121
 433 000e 0128     		cmp	r0, #1
 434 0010 06D0     		beq	.L22
 435              		.loc 1 1600 5 is_stmt 0 discriminator 1 view .LVU122
 436 0012 4FF4C861 		mov	r1, #1600
 437 0016 054B     		ldr	r3, .L24+4
 438 0018 054A     		ldr	r2, .L24+8
 439 001a 0648     		ldr	r0, .L24+12
 440              	.LVL29:
 441              		.loc 1 1600 5 discriminator 1 view .LVU123
 442 001c FFF7FEFF 		bl	__assert_func
 443              	.LVL30:
 444              	.L22:
1601:Src/app.c     **** 
1602:Src/app.c     ****     CAM_IspUpdate();
 445              		.loc 1 1602 5 is_stmt 1 view .LVU124
 446 0020 FFF7FEFF 		bl	CAM_IspUpdate
 447              	.LVL31:
1598:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 448              		.loc 1 1598 9 view .LVU125
1599:Src/app.c     ****     assert(ret == pdTRUE);
 449              		.loc 1 1599 9 is_stmt 0 view .LVU126
 450 0024 EEE7     		b	.L23
 451              	.L25:
 452 0026 00BF     		.align	2
 453              	.L24:
 454 0028 00000000 		.word	isp_sem
 455 002c 00000000 		.word	.LC1
 456 0030 00000000 		.word	__func__.19
 457 0034 0E000000 		.word	.LC2
 458              		.cfi_endproc
 459              	.LFE7408:
ARM GAS  /tmp/ccl1pJez.s 			page 47


 461              		.section	.text.on_pd_toggle_button_click,"ax",%progbits
 462              		.align	1
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 467              	on_pd_toggle_button_click:
 468              	.LVL32:
 469              	.LFB7406:
1543:Src/app.c     ****   display_t *disp = (display_t *) args;
 470              		.loc 1 1543 1 is_stmt 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
1544:Src/app.c     ****   int ret;
 474              		.loc 1 1544 3 view .LVU128
1545:Src/app.c     **** 
 475              		.loc 1 1545 3 view .LVU129
1547:Src/app.c     ****   assert(ret == pdTRUE);
 476              		.loc 1 1547 3 view .LVU130
1543:Src/app.c     ****   display_t *disp = (display_t *) args;
 477              		.loc 1 1543 1 is_stmt 0 view .LVU131
 478 0000 10B5     		push	{r4, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 4, -8
 481              		.cfi_offset 14, -4
1547:Src/app.c     ****   assert(ret == pdTRUE);
 482              		.loc 1 1547 9 view .LVU132
 483 0002 4FF0FF31 		mov	r1, #-1
1543:Src/app.c     ****   display_t *disp = (display_t *) args;
 484              		.loc 1 1543 1 view .LVU133
 485 0006 0446     		mov	r4, r0
1547:Src/app.c     ****   assert(ret == pdTRUE);
 486              		.loc 1 1547 9 view .LVU134
 487 0008 406D     		ldr	r0, [r0, #84]
 488              	.LVL33:
1547:Src/app.c     ****   assert(ret == pdTRUE);
 489              		.loc 1 1547 9 view .LVU135
 490 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 491              	.LVL34:
1548:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 492              		.loc 1 1548 3 is_stmt 1 view .LVU136
 493 000e 0128     		cmp	r0, #1
 494 0010 06D0     		beq	.L27
1548:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 495              		.loc 1 1548 3 is_stmt 0 discriminator 1 view .LVU137
 496 0012 40F20C61 		movw	r1, #1548
 497 0016 0D4B     		ldr	r3, .L30
 498 0018 0D4A     		ldr	r2, .L30+4
 499              	.L29:
1551:Src/app.c     **** }
 500              		.loc 1 1551 3 discriminator 1 view .LVU138
 501 001a 0E48     		ldr	r0, .L30+8
 502              	.LVL35:
1551:Src/app.c     **** }
 503              		.loc 1 1551 3 discriminator 1 view .LVU139
 504 001c FFF7FEFF 		bl	__assert_func
 505              	.LVL36:
ARM GAS  /tmp/ccl1pJez.s 			page 48


 506              	.L27:
1549:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 507              		.loc 1 1549 3 is_stmt 1 view .LVU140
1549:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 508              		.loc 1 1549 32 is_stmt 0 view .LVU141
 509 0020 D4F8C030 		ldr	r3, [r4, #192]
1550:Src/app.c     ****   assert(ret == pdTRUE);
 510              		.loc 1 1550 9 view .LVU142
 511 0024 606D     		ldr	r0, [r4, #84]
 512              	.LVL37:
1549:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 513              		.loc 1 1549 32 view .LVU143
 514 0026 B3FA83F3 		clz	r3, r3
 515 002a 5B09     		lsrs	r3, r3, #5
1549:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 516              		.loc 1 1549 30 view .LVU144
 517 002c C4F8C030 		str	r3, [r4, #192]
1550:Src/app.c     ****   assert(ret == pdTRUE);
 518              		.loc 1 1550 3 is_stmt 1 view .LVU145
1550:Src/app.c     ****   assert(ret == pdTRUE);
 519              		.loc 1 1550 9 is_stmt 0 view .LVU146
 520 0030 0023     		movs	r3, #0
 521 0032 1A46     		mov	r2, r3
 522 0034 1946     		mov	r1, r3
 523 0036 FFF7FEFF 		bl	xQueueGenericSend
 524              	.LVL38:
1551:Src/app.c     **** }
 525              		.loc 1 1551 3 is_stmt 1 view .LVU147
 526 003a 0128     		cmp	r0, #1
 527 003c 04D0     		beq	.L26
1551:Src/app.c     **** }
 528              		.loc 1 1551 3 is_stmt 0 discriminator 1 view .LVU148
 529 003e 40F20F61 		movw	r1, #1551
 530 0042 024B     		ldr	r3, .L30
 531 0044 024A     		ldr	r2, .L30+4
 532 0046 E8E7     		b	.L29
 533              	.L26:
1552:Src/app.c     **** 
 534              		.loc 1 1552 1 view .LVU149
 535 0048 10BD     		pop	{r4, pc}
 536              	.LVL39:
 537              	.L31:
1552:Src/app.c     **** 
 538              		.loc 1 1552 1 view .LVU150
 539 004a 00BF     		.align	2
 540              	.L30:
 541 004c 00000000 		.word	.LC1
 542 0050 00000000 		.word	__func__.17
 543 0054 0E000000 		.word	.LC2
 544              		.cfi_endproc
 545              	.LFE7406:
 547              		.section	.text.on_ld_toggle_button_click,"ax",%progbits
 548              		.align	1
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 553              	on_ld_toggle_button_click:
ARM GAS  /tmp/ccl1pJez.s 			page 49


 554              	.LVL40:
 555              	.LFB7405:
1531:Src/app.c     ****   display_t *disp = (display_t *) args;
 556              		.loc 1 1531 1 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
1532:Src/app.c     ****   int ret;
 560              		.loc 1 1532 3 view .LVU152
1533:Src/app.c     **** 
 561              		.loc 1 1533 3 view .LVU153
1535:Src/app.c     ****   assert(ret == pdTRUE);
 562              		.loc 1 1535 3 view .LVU154
1531:Src/app.c     ****   display_t *disp = (display_t *) args;
 563              		.loc 1 1531 1 is_stmt 0 view .LVU155
 564 0000 10B5     		push	{r4, lr}
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 4, -8
 567              		.cfi_offset 14, -4
1535:Src/app.c     ****   assert(ret == pdTRUE);
 568              		.loc 1 1535 9 view .LVU156
 569 0002 4FF0FF31 		mov	r1, #-1
1531:Src/app.c     ****   display_t *disp = (display_t *) args;
 570              		.loc 1 1531 1 view .LVU157
 571 0006 0446     		mov	r4, r0
1535:Src/app.c     ****   assert(ret == pdTRUE);
 572              		.loc 1 1535 9 view .LVU158
 573 0008 406D     		ldr	r0, [r0, #84]
 574              	.LVL41:
1535:Src/app.c     ****   assert(ret == pdTRUE);
 575              		.loc 1 1535 9 view .LVU159
 576 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 577              	.LVL42:
1536:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 578              		.loc 1 1536 3 is_stmt 1 view .LVU160
 579 000e 0128     		cmp	r0, #1
 580 0010 06D0     		beq	.L33
1536:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 581              		.loc 1 1536 3 is_stmt 0 discriminator 1 view .LVU161
 582 0012 4FF4C061 		mov	r1, #1536
 583 0016 0D4B     		ldr	r3, .L36
 584 0018 0D4A     		ldr	r2, .L36+4
 585              	.L35:
1539:Src/app.c     **** }
 586              		.loc 1 1539 3 discriminator 1 view .LVU162
 587 001a 0E48     		ldr	r0, .L36+8
 588              	.LVL43:
1539:Src/app.c     **** }
 589              		.loc 1 1539 3 discriminator 1 view .LVU163
 590 001c FFF7FEFF 		bl	__assert_func
 591              	.LVL44:
 592              	.L33:
1537:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 593              		.loc 1 1537 3 is_stmt 1 view .LVU164
1537:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 594              		.loc 1 1537 32 is_stmt 0 view .LVU165
 595 0020 D4F8BC30 		ldr	r3, [r4, #188]
ARM GAS  /tmp/ccl1pJez.s 			page 50


1538:Src/app.c     ****   assert(ret == pdTRUE);
 596              		.loc 1 1538 9 view .LVU166
 597 0024 606D     		ldr	r0, [r4, #84]
 598              	.LVL45:
1537:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 599              		.loc 1 1537 32 view .LVU167
 600 0026 B3FA83F3 		clz	r3, r3
 601 002a 5B09     		lsrs	r3, r3, #5
1537:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 602              		.loc 1 1537 30 view .LVU168
 603 002c C4F8BC30 		str	r3, [r4, #188]
1538:Src/app.c     ****   assert(ret == pdTRUE);
 604              		.loc 1 1538 3 is_stmt 1 view .LVU169
1538:Src/app.c     ****   assert(ret == pdTRUE);
 605              		.loc 1 1538 9 is_stmt 0 view .LVU170
 606 0030 0023     		movs	r3, #0
 607 0032 1A46     		mov	r2, r3
 608 0034 1946     		mov	r1, r3
 609 0036 FFF7FEFF 		bl	xQueueGenericSend
 610              	.LVL46:
1539:Src/app.c     **** }
 611              		.loc 1 1539 3 is_stmt 1 view .LVU171
 612 003a 0128     		cmp	r0, #1
 613 003c 04D0     		beq	.L32
1539:Src/app.c     **** }
 614              		.loc 1 1539 3 is_stmt 0 discriminator 1 view .LVU172
 615 003e 40F20361 		movw	r1, #1539
 616 0042 024B     		ldr	r3, .L36
 617 0044 024A     		ldr	r2, .L36+4
 618 0046 E8E7     		b	.L35
 619              	.L32:
1540:Src/app.c     **** 
 620              		.loc 1 1540 1 view .LVU173
 621 0048 10BD     		pop	{r4, pc}
 622              	.LVL47:
 623              	.L37:
1540:Src/app.c     **** 
 624              		.loc 1 1540 1 view .LVU174
 625 004a 00BF     		.align	2
 626              	.L36:
 627 004c 00000000 		.word	.LC1
 628 0050 00000000 		.word	__func__.16
 629 0054 0E000000 		.word	.LC2
 630              		.cfi_endproc
 631              	.LFE7405:
 633              		.section	.text.button_process,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 639              	button_process:
 640              	.LVL48:
 641              	.LFB7367:
 405:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 642              		.loc 1 405 1 is_stmt 1 view -0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccl1pJez.s 			page 51


 645              		@ frame_needed = 0, uses_anonymous_args = 0
 406:Src/app.c     **** 
 646              		.loc 1 406 3 view .LVU176
 405:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 647              		.loc 1 405 1 is_stmt 0 view .LVU177
 648 0000 38B5     		push	{r3, r4, r5, lr}
 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 3, -16
 651              		.cfi_offset 4, -12
 652              		.cfi_offset 5, -8
 653              		.cfi_offset 14, -4
 405:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 654              		.loc 1 405 1 view .LVU178
 655 0002 0446     		mov	r4, r0
 406:Src/app.c     **** 
 656              		.loc 1 406 15 view .LVU179
 657 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 658              	.LVL49:
 406:Src/app.c     **** 
 659              		.loc 1 406 15 view .LVU180
 660 0006 FFF7FEFF 		bl	BSP_PB_GetState
 661              	.LVL50:
 408:Src/app.c     ****     b->on_click_handler(b->cb_args);
 662              		.loc 1 408 6 view .LVU181
 663 000a 6368     		ldr	r3, [r4, #4]
 406:Src/app.c     **** 
 664              		.loc 1 406 15 view .LVU182
 665 000c 0546     		mov	r5, r0
 666              	.LVL51:
 408:Src/app.c     ****     b->on_click_handler(b->cb_args);
 667              		.loc 1 408 3 is_stmt 1 view .LVU183
 408:Src/app.c     ****     b->on_click_handler(b->cb_args);
 668              		.loc 1 408 6 is_stmt 0 view .LVU184
 669 000e 8342     		cmp	r3, r0
 670 0010 04D0     		beq	.L39
 408:Src/app.c     ****     b->on_click_handler(b->cb_args);
 671              		.loc 1 408 30 discriminator 1 view .LVU185
 672 0012 18B1     		cbz	r0, .L39
 408:Src/app.c     ****     b->on_click_handler(b->cb_args);
 673              		.loc 1 408 43 discriminator 2 view .LVU186
 674 0014 A368     		ldr	r3, [r4, #8]
 408:Src/app.c     ****     b->on_click_handler(b->cb_args);
 675              		.loc 1 408 39 discriminator 2 view .LVU187
 676 0016 0BB1     		cbz	r3, .L39
 409:Src/app.c     **** 
 677              		.loc 1 409 5 is_stmt 1 view .LVU188
 678 0018 E068     		ldr	r0, [r4, #12]
 679              	.LVL52:
 409:Src/app.c     **** 
 680              		.loc 1 409 5 is_stmt 0 view .LVU189
 681 001a 9847     		blx	r3
 682              	.LVL53:
 683              	.L39:
 411:Src/app.c     **** }
 684              		.loc 1 411 3 is_stmt 1 view .LVU190
 411:Src/app.c     **** }
 685              		.loc 1 411 17 is_stmt 0 view .LVU191
ARM GAS  /tmp/ccl1pJez.s 			page 52


 686 001c 6560     		str	r5, [r4, #4]
 412:Src/app.c     **** 
 687              		.loc 1 412 1 view .LVU192
 688 001e 38BD     		pop	{r3, r4, r5, pc}
 412:Src/app.c     **** 
 689              		.loc 1 412 1 view .LVU193
 690              		.cfi_endproc
 691              	.LFE7367:
 693              		.section	.rodata.button_init.part.0.str1.1,"aMS",%progbits,1
 694              	.LC3:
 695 0000 72657420 		.ascii	"ret == BSP_ERROR_NONE\000"
 695      3D3D2042 
 695      53505F45 
 695      52524F52 
 695      5F4E4F4E 
 696              		.section	.text.button_init.part.0,"ax",%progbits
 697              		.align	1
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 702              	button_init.part.0:
 703              	.LFB7413:
 391:Src/app.c     **** {
 704              		.loc 1 391 13 is_stmt 1 view -0
 705              		.cfi_startproc
 706              		@ Volatile: function does not return.
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              	.LVL54:
 391:Src/app.c     **** {
 710              		.loc 1 391 13 is_stmt 0 view .LVU195
 711 0000 08B5     		push	{r3, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 3, -8
 714              		.cfi_offset 14, -4
 396:Src/app.c     **** 
 715              		.loc 1 396 3 discriminator 1 view .LVU196
 716 0002 4FF4C671 		mov	r1, #396
 717 0006 024B     		ldr	r3, .L47
 718 0008 024A     		ldr	r2, .L47+4
 719 000a 0348     		ldr	r0, .L47+8
 720 000c FFF7FEFF 		bl	__assert_func
 721              	.LVL55:
 722              	.L48:
 723              		.align	2
 724              	.L47:
 725 0010 00000000 		.word	.LC3
 726 0014 00000000 		.word	__func__.15
 727 0018 0E000000 		.word	.LC2
 728              		.cfi_endproc
 729              	.LFE7413:
 731              		.section	.text.display_ld_hand,"ax",%progbits
 732              		.align	1
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 737              	display_ld_hand:
ARM GAS  /tmp/ccl1pJez.s 			page 53


 738              	.LVL56:
 739              	.LFB7388:
 731:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 740              		.loc 1 731 1 is_stmt 1 view -0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 5616
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 732:Src/app.c     ****   roi_t *roi = &hand->roi;
 744              		.loc 1 732 3 view .LVU198
 733:Src/app.c     ****   int x[LD_LANDMARK_NB];
 745              		.loc 1 733 3 view .LVU199
 734:Src/app.c     ****   int y[LD_LANDMARK_NB];
 746              		.loc 1 734 3 view .LVU200
 735:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 747              		.loc 1 735 3 view .LVU201
 736:Src/app.c     ****   ld_point_t decoded;
 748              		.loc 1 736 3 view .LVU202
 737:Src/app.c     ****   int i;
 749              		.loc 1 737 3 view .LVU203
 738:Src/app.c     **** 
 750              		.loc 1 738 3 view .LVU204
 740:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 751              		.loc 1 740 3 view .LVU205
 740:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 752              		.loc 1 740 17 discriminator 1 view .LVU206
 731:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 753              		.loc 1 731 1 is_stmt 0 view .LVU207
 754 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 755              		.cfi_def_cfa_offset 36
 756              		.cfi_offset 4, -36
 757              		.cfi_offset 5, -32
 758              		.cfi_offset 6, -28
 759              		.cfi_offset 7, -24
 760              		.cfi_offset 8, -20
 761              		.cfi_offset 9, -16
 762              		.cfi_offset 10, -12
 763              		.cfi_offset 11, -8
 764              		.cfi_offset 14, -4
 765 0004 2DED0A8B 		vpush.64	{d8, d9, d10, d11, d12}
 766              		.cfi_def_cfa_offset 76
 767              		.cfi_offset 80, -76
 768              		.cfi_offset 81, -72
 769              		.cfi_offset 82, -68
 770              		.cfi_offset 83, -64
 771              		.cfi_offset 84, -60
 772              		.cfi_offset 85, -56
 773              		.cfi_offset 86, -52
 774              		.cfi_offset 87, -48
 775              		.cfi_offset 88, -44
 776              		.cfi_offset 89, -40
 777              	.LBB185:
 778              	.LBB186:
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 779              		.loc 1 726 46 view .LVU208
 780 0008 90ED0BCA 		vldr.32	s24, [r0, #44]
 781 000c B7EECCCA 		vcvt.f64.f32	d12, s24
 782              	.LBE186:
ARM GAS  /tmp/ccl1pJez.s 			page 54


 783              	.LBE185:
 731:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 784              		.loc 1 731 1 view .LVU209
 785 0010 ADF5AF5D 		sub	sp, sp, #5600
 786              		.cfi_def_cfa_offset 5676
 787 0014 85B0     		sub	sp, sp, #20
 788              		.cfi_def_cfa_offset 5696
 789              	.LBB191:
 790              	.LBB187:
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 791              		.loc 1 726 46 view .LVU210
 792 0016 B0EE4C0B 		vmov.f64	d0, d12
 793              	.LBE187:
 794              	.LBE191:
 731:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 795              		.loc 1 731 1 view .LVU211
 796 001a 0446     		mov	r4, r0
 797              	.LBB192:
 798              	.LBB188:
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 799              		.loc 1 726 19 view .LVU212
 800 001c 90ED07AA 		vldr.32	s20, [r0, #28]
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 801              		.loc 1 726 40 view .LVU213
 802 0020 90ED09BA 		vldr.32	s22, [r0, #36]
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 803              		.loc 1 726 46 view .LVU214
 804 0024 FFF7FEFF 		bl	cos
 805              	.LVL57:
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 806              		.loc 1 726 46 view .LVU215
 807 0028 B0EE408B 		vmov.f64	d8, d0
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 808              		.loc 1 726 82 discriminator 1 view .LVU216
 809 002c B0EE4C0B 		vmov.f64	d0, d12
 810 0030 FFF7FEFF 		bl	sin
 811              	.LVL58:
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 812              		.loc 1 726 76 discriminator 1 view .LVU217
 813 0034 94ED0A9A 		vldr.32	s18, [r4, #40]
 727:Src/app.c     **** }
 814              		.loc 1 727 19 view .LVU218
 815 0038 94ED086A 		vldr.32	s12, [r4, #32]
 816 003c EC46     		mov	ip, sp
 817 003e 0DF56A65 		add	r5, sp, #3744
 818 0042 0DF5EA60 		add	r0, sp, #1872
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 819              		.loc 1 726 19 view .LVU219
 820 0046 B7EECAAA 		vcvt.f64.f32	d10, s20
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 821              		.loc 1 726 40 view .LVU220
 822 004a B7EECBBA 		vcvt.f64.f32	d11, s22
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 823              		.loc 1 726 76 discriminator 1 view .LVU221
 824 004e B7EEC99A 		vcvt.f64.f32	d9, s18
 727:Src/app.c     **** }
 825              		.loc 1 727 19 view .LVU222
ARM GAS  /tmp/ccl1pJez.s 			page 55


 826 0052 B7EEC66A 		vcvt.f64.f32	d6, s12
 827 0056 AE46     		mov	lr, r5
 828 0058 0646     		mov	r6, r0
 829 005a 6746     		mov	r7, ip
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 830              		.loc 1 726 33 view .LVU223
 831 005c B6EE005B 		vmov.f64	d5, #5.0e-1
 832              	.LBE188:
 833              	.LBE192:
 834              	.LBB193:
 835              	.LBB194:
 614:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 836              		.loc 1 614 6 view .LVU224
 837 0060 40F21D39 		movw	r9, #797
 616:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 838              		.loc 1 616 6 view .LVU225
 839 0064 40F2DD18 		movw	r8, #477
 619:Src/app.c     **** }
 840              		.loc 1 619 21 discriminator 3 view .LVU226
 841 0068 4FF4EA71 		mov	r1, #468
 842              	.LVL59:
 843              	.L51:
 619:Src/app.c     **** }
 844              		.loc 1 619 21 discriminator 3 view .LVU227
 845              	.LBE194:
 846              	.LBE193:
 741:Src/app.c     ****     x[i] = (int)decoded.x;
 847              		.loc 1 741 5 is_stmt 1 view .LVU228
 848              	.LBB199:
 849              	.LBI185:
 720:Src/app.c     **** {
 850              		.loc 1 720 13 view .LVU229
 851              	.LBB189:
 722:Src/app.c     ****   float w = roi->w;
 852              		.loc 1 722 3 view .LVU230
 723:Src/app.c     ****   float h = roi->h;
 853              		.loc 1 723 3 view .LVU231
 724:Src/app.c     **** 
 854              		.loc 1 724 3 view .LVU232
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 855              		.loc 1 726 3 view .LVU233
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 856              		.loc 1 726 29 is_stmt 0 view .LVU234
 857 006c 94ED0C3A 		vldr.32	s6, [r4, #48]
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 858              		.loc 1 726 65 discriminator 1 view .LVU235
 859 0070 94ED0D4A 		vldr.32	s8, [r4, #52]
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 860              		.loc 1 726 29 view .LVU236
 861 0074 B7EEC33A 		vcvt.f64.f32	d3, s6
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 862              		.loc 1 726 65 discriminator 1 view .LVU237
 863 0078 B7EEC44A 		vcvt.f64.f32	d4, s8
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 864              		.loc 1 726 33 view .LVU238
 865 007c 33EE453B 		vsub.f64	d3, d3, d5
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
ARM GAS  /tmp/ccl1pJez.s 			page 56


 866              		.loc 1 726 24 discriminator 1 view .LVU239
 867 0080 B0EE4A7B 		vmov.f64	d7, d10
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 868              		.loc 1 726 40 view .LVU240
 869 0084 23EE0B3B 		vmul.f64	d3, d3, d11
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 870              		.loc 1 726 69 discriminator 1 view .LVU241
 871 0088 34EE454B 		vsub.f64	d4, d4, d5
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 872              		.loc 1 726 24 discriminator 1 view .LVU242
 873 008c A3EE087B 		vfma.f64	d7, d3, d8
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 874              		.loc 1 726 76 discriminator 1 view .LVU243
 875 0090 24EE094B 		vmul.f64	d4, d4, d9
 726:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 876              		.loc 1 726 60 discriminator 2 view .LVU244
 877 0094 A4EE407B 		vfms.f64	d7, d4, d0
 878 0098 F7EEC72B 		vcvt.f32.f64	s5, d7
 727:Src/app.c     **** }
 879              		.loc 1 727 3 is_stmt 1 view .LVU245
 727:Src/app.c     **** }
 880              		.loc 1 727 24 is_stmt 0 discriminator 1 view .LVU246
 881 009c B0EE467B 		vmov.f64	d7, d6
 882 00a0 A3EE007B 		vfma.f64	d7, d3, d0
 727:Src/app.c     **** }
 883              		.loc 1 727 60 discriminator 2 view .LVU247
 884 00a4 A8EE047B 		vfma.f64	d7, d8, d4
 885              	.LVL60:
 727:Src/app.c     **** }
 886              		.loc 1 727 60 discriminator 2 view .LVU248
 887              	.LBE189:
 888              	.LBE199:
 742:Src/app.c     ****     y[i] = (int)decoded.y;
 889              		.loc 1 742 5 is_stmt 1 view .LVU249
 742:Src/app.c     ****     y[i] = (int)decoded.y;
 890              		.loc 1 742 12 is_stmt 0 view .LVU250
 891 00a8 FDEEE24A 		vcvt.s32.f32	s9, s5
 892 00ac 14EE90AA 		vmov	r10, s9	@ int
 743:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 893              		.loc 1 743 5 is_stmt 1 view .LVU251
 894              	.LBB200:
 895              	.LBB190:
 727:Src/app.c     **** }
 896              		.loc 1 727 60 is_stmt 0 discriminator 2 view .LVU252
 897 00b0 B7EEC77B 		vcvt.f32.f64	s14, d7
 898              	.LBE190:
 899              	.LBE200:
 900              	.LBB201:
 901              	.LBB195:
 610:Src/app.c     ****     *x = margin;
 902              		.loc 1 610 6 view .LVU253
 903 00b4 5246     		mov	r2, r10
 904              	.LBE195:
 905              	.LBE201:
 743:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 906              		.loc 1 743 12 view .LVU254
 907 00b6 FDEEC77A 		vcvt.s32.f32	s15, s14
ARM GAS  /tmp/ccl1pJez.s 			page 57


 908              	.LBB202:
 909              	.LBB196:
 610:Src/app.c     ****     *x = margin;
 910              		.loc 1 610 6 view .LVU255
 911 00ba 022A     		cmp	r2, #2
 912 00bc B8BF     		it	lt
 913 00be 0222     		movlt	r2, #2
 914              	.LBE196:
 915              	.LBE202:
 743:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 916              		.loc 1 743 12 view .LVU256
 917 00c0 17EE903A 		vmov	r3, s15	@ int
 744:Src/app.c     ****   }
 918              		.loc 1 744 5 is_stmt 1 view .LVU257
 919              	.LVL61:
 920              	.LBB203:
 921              	.LBI193:
 605:Src/app.c     **** {
 922              		.loc 1 605 12 view .LVU258
 923              	.LBB197:
 607:Src/app.c     ****   int yi = *y;
 924              		.loc 1 607 3 view .LVU259
 608:Src/app.c     **** 
 925              		.loc 1 608 3 view .LVU260
 610:Src/app.c     ****     *x = margin;
 926              		.loc 1 610 3 view .LVU261
 612:Src/app.c     ****     *y = margin;
 927              		.loc 1 612 3 view .LVU262
 614:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 928              		.loc 1 614 3 view .LVU263
 614:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 929              		.loc 1 614 6 is_stmt 0 view .LVU264
 930 00c4 4A45     		cmp	r2, r9
 931 00c6 A8BF     		it	ge
 932 00c8 4A46     		movge	r2, r9
 612:Src/app.c     ****     *y = margin;
 933              		.loc 1 612 6 view .LVU265
 934 00ca 022B     		cmp	r3, #2
 935 00cc 9B46     		mov	fp, r3
 936 00ce B8BF     		it	lt
 937 00d0 4FF0020B 		movlt	fp, #2
 616:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 938              		.loc 1 616 6 view .LVU266
 939 00d4 C345     		cmp	fp, r8
 940 00d6 A8BF     		it	ge
 941 00d8 C346     		movge	fp, r8
 619:Src/app.c     **** }
 942              		.loc 1 619 21 discriminator 2 view .LVU267
 943 00da B3EB0B03 		subs	r3, r3, fp
 944              	.LVL62:
 619:Src/app.c     **** }
 945              		.loc 1 619 21 discriminator 2 view .LVU268
 946 00de 18BF     		it	ne
 947 00e0 0123     		movne	r3, #1
 948 00e2 9245     		cmp	r10, r2
 949 00e4 18BF     		it	ne
 950 00e6 0123     		movne	r3, #1
ARM GAS  /tmp/ccl1pJez.s 			page 58


 951              	.LBE197:
 952              	.LBE203:
 740:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 953              		.loc 1 740 17 discriminator 1 view .LVU269
 954 00e8 0139     		subs	r1, r1, #1
 955 00ea 4CF8042B 		str	r2, [ip], #4
 956              	.LBB204:
 957              	.LBB198:
 616:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 958              		.loc 1 616 3 is_stmt 1 view .LVU270
 959 00ee 40F804BB 		str	fp, [r0], #4
 619:Src/app.c     **** }
 960              		.loc 1 619 3 view .LVU271
 961              	.LVL63:
 619:Src/app.c     **** }
 962              		.loc 1 619 3 is_stmt 0 view .LVU272
 963              	.LBE198:
 964              	.LBE204:
 744:Src/app.c     ****   }
 965              		.loc 1 744 19 discriminator 1 view .LVU273
 966 00f2 4EF8043B 		str	r3, [lr], #4
 740:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 967              		.loc 1 740 36 is_stmt 1 discriminator 3 view .LVU274
 740:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 968              		.loc 1 740 17 discriminator 1 view .LVU275
 969 00f6 04F10804 		add	r4, r4, #8
 970 00fa B7D1     		bne	.L51
 747:Src/app.c     ****     if (is_clamped[i])
 971              		.loc 1 747 10 is_stmt 0 view .LVU276
 972 00fc 0024     		movs	r4, #0
 973              	.L53:
 974              	.LVL64:
 748:Src/app.c     ****       continue;
 975              		.loc 1 748 5 is_stmt 1 view .LVU277
 748:Src/app.c     ****       continue;
 976              		.loc 1 748 19 is_stmt 0 view .LVU278
 977 00fe 55F8043B 		ldr	r3, [r5], #4
 748:Src/app.c     ****       continue;
 978              		.loc 1 748 8 view .LVU279
 979 0102 43B9     		cbnz	r3, .L52
 750:Src/app.c     ****   }
 980              		.loc 1 750 5 is_stmt 1 view .LVU280
 981 0104 6FF0FF03 		mvn	r3, #255
 982 0108 0222     		movs	r2, #2
 983 010a 56F82410 		ldr	r1, [r6, r4, lsl #2]
 984 010e 57F82400 		ldr	r0, [r7, r4, lsl #2]
 985 0112 FFF7FEFF 		bl	UTIL_LCD_FillCircle
 986              	.LVL65:
 987              	.L52:
 747:Src/app.c     ****     if (is_clamped[i])
 988              		.loc 1 747 36 discriminator 2 view .LVU281
 989 0116 0134     		adds	r4, r4, #1
 990              	.LVL66:
 747:Src/app.c     ****     if (is_clamped[i])
 991              		.loc 1 747 17 discriminator 1 view .LVU282
 992 0118 B4F5EA7F 		cmp	r4, #468
 993 011c EFD1     		bne	.L53
ARM GAS  /tmp/ccl1pJez.s 			page 59


 752:Src/app.c     **** 
 994              		.loc 1 752 1 is_stmt 0 view .LVU283
 995 011e 0DF5AF5D 		add	sp, sp, #5600
 996 0122 05B0     		add	sp, sp, #20
 997              		.cfi_def_cfa_offset 76
 998              		@ sp needed
 999 0124 BDEC0A8B 		vldm	sp!, {d8-d12}
 1000              		.cfi_restore 88
 1001              		.cfi_restore 89
 1002              		.cfi_restore 86
 1003              		.cfi_restore 87
 1004              		.cfi_restore 84
 1005              		.cfi_restore 85
 1006              		.cfi_restore 82
 1007              		.cfi_restore 83
 1008              		.cfi_restore 80
 1009              		.cfi_restore 81
 1010              		.cfi_def_cfa_offset 36
 1011 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 752:Src/app.c     **** 
 1012              		.loc 1 752 1 view .LVU284
 1013              		.cfi_endproc
 1014              	.LFE7388:
 1016              		.section	.rodata.nn_thread_fct.str1.1,"aMS",%progbits,1
 1017              	.LC4:
 1018 0000 72657420 		.ascii	"ret == 0\000"
 1018      3D3D2030 
 1018      00
 1019              	.LC5:
 1020 0009 696E666F 		.ascii	"info->prob_out_len == sizeof(float)\000"
 1020      2D3E7072 
 1020      6F625F6F 
 1020      75745F6C 
 1020      656E203D 
 1021              	.LC6:
 1022 002d 696E666F 		.ascii	"info->landmarks_out_len == sizeof(float) * 1404\000"
 1022      2D3E6C61 
 1022      6E646D61 
 1022      726B735F 
 1022      6F75745F 
 1023              	.LC7:
 1024 005d 6E6E5F70 		.ascii	"nn_pipe_dst\000"
 1024      6970655F 
 1024      64737400 
 1025              	.LC8:
 1026 0069 63617074 		.ascii	"capture_buffer\000"
 1026      7572655F 
 1026      62756666 
 1026      657200
 1027              	.LC9:
 1028 0078 72657420 		.ascii	"ret == LL_ATON_User_IO_NOERROR\000"
 1028      3D3D204C 
 1028      4C5F4154 
 1028      4F4E5F55 
 1028      7365725F 
 1029              	.LC10:
 1030 0097 77696474 		.ascii	"width_out > 0\000"
ARM GAS  /tmp/ccl1pJez.s 			page 60


 1030      685F6F75 
 1030      74203E20 
 1030      3000
 1031              	.LC11:
 1032 00a5 68656967 		.ascii	"height_out > 0\000"
 1032      68745F6F 
 1032      7574203E 
 1032      203000
 1033              	.LC12:
 1034 00b4 6F75745F 		.ascii	"out_data_end >= info->nn_in\000"
 1034      64617461 
 1034      5F656E64 
 1034      203E3D20 
 1034      696E666F 
 1035              	.LC13:
 1036 00d0 6F75745F 		.ascii	"out_data_end < info->nn_in + info->nn_in_len\000"
 1036      64617461 
 1036      5F656E64 
 1036      203C2069 
 1036      6E666F2D 
 1037              	.LC14:
 1038 00fd 77696474 		.ascii	"width_in > 0\000"
 1038      685F696E 
 1038      203E2030 
 1038      00
 1039              	.LC15:
 1040 010a 68656967 		.ascii	"height_in > 0\000"
 1040      68745F69 
 1040      6E203E20 
 1040      3000
 1041              	.LC16:
 1042 0118 696E5F64 		.ascii	"in_data_end >= buffer\000"
 1042      6174615F 
 1042      656E6420 
 1042      3E3D2062 
 1042      75666665 
 1043              	.LC17:
 1044 012e 696E5F64 		.ascii	"in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT"
 1044      6174615F 
 1044      656E6420 
 1044      3C206275 
 1044      66666572 
 1045 0161 202A2044 		.ascii	" * DISPLAY_BPP\000"
 1045      4953504C 
 1045      41595F42 
 1045      505000
 1046              		.section	.text.nn_thread_fct,"ax",%progbits
 1047              		.align	1
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1052              	nn_thread_fct:
 1053              	.LVL67:
 1054              	.LFB7402:
1307:Src/app.c     ****   float nn_period_filtered_ms = 0;
 1055              		.loc 1 1307 1 is_stmt 1 view -0
 1056              		.cfi_startproc
ARM GAS  /tmp/ccl1pJez.s 			page 61


 1057              		@ args = 0, pretend = 0, frame = 160
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
1308:Src/app.c     ****   // Filtered inference times, will be updated with 0
 1059              		.loc 1 1308 3 view .LVU286
1310:Src/app.c     ****   float ld_filtered_ms = 0;
 1060              		.loc 1 1310 3 view .LVU287
1311:Src/app.c     **** 
 1061              		.loc 1 1311 3 view .LVU288
1313:Src/app.c     ****   uint32_t nn_period[2];
 1062              		.loc 1 1313 3 view .LVU289
1314:Src/app.c     ****   uint8_t *nn_pipe_dst;
 1063              		.loc 1 1314 3 view .LVU290
1315:Src/app.c     ****   int is_tracking;
 1064              		.loc 1 1315 3 view .LVU291
1316:Src/app.c     ****   uint32_t pd_ms;
 1065              		.loc 1 1316 3 view .LVU292
1317:Src/app.c     ****   uint32_t hl_ms;
 1066              		.loc 1 1317 3 view .LVU293
1318:Src/app.c     ****   int ret;
 1067              		.loc 1 1318 3 view .LVU294
1319:Src/app.c     ****   roi_t roi_dummy;
 1068              		.loc 1 1319 3 view .LVU295
1320:Src/app.c     ****   int is_landmark_valid;
 1069              		.loc 1 1320 3 view .LVU296
1321:Src/app.c     **** 
 1070              		.loc 1 1321 3 view .LVU297
1323:Src/app.c     ****   roi_dummy.cy = 100;
 1071              		.loc 1 1323 3 view .LVU298
1307:Src/app.c     ****   float nn_period_filtered_ms = 0;
 1072              		.loc 1 1307 1 is_stmt 0 view .LVU299
 1073 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1074              		.cfi_def_cfa_offset 36
 1075              		.cfi_offset 4, -36
 1076              		.cfi_offset 5, -32
 1077              		.cfi_offset 6, -28
 1078              		.cfi_offset 7, -24
 1079              		.cfi_offset 8, -20
 1080              		.cfi_offset 9, -16
 1081              		.cfi_offset 10, -12
 1082              		.cfi_offset 11, -8
 1083              		.cfi_offset 14, -4
 1084 0004 2DED048B 		vpush.64	{d8, d9}
 1085              		.cfi_def_cfa_offset 52
 1086              		.cfi_offset 80, -52
 1087              		.cfi_offset 81, -48
 1088              		.cfi_offset 82, -44
 1089              		.cfi_offset 83, -40
1323:Src/app.c     ****   roi_dummy.cy = 100;
 1090              		.loc 1 1323 16 view .LVU300
 1091 0008 C44B     		ldr	r3, .L100
1307:Src/app.c     ****   float nn_period_filtered_ms = 0;
 1092              		.loc 1 1307 1 view .LVU301
 1093 000a ADB0     		sub	sp, sp, #180
 1094              		.cfi_def_cfa_offset 232
1323:Src/app.c     ****   roi_dummy.cy = 100;
 1095              		.loc 1 1323 16 view .LVU302
 1096 000c 0993     		str	r3, [sp, #36]	@ float
ARM GAS  /tmp/ccl1pJez.s 			page 62


1324:Src/app.c     ****   roi_dummy.w = 50;
 1097              		.loc 1 1324 3 is_stmt 1 view .LVU303
1324:Src/app.c     ****   roi_dummy.w = 50;
 1098              		.loc 1 1324 16 is_stmt 0 view .LVU304
 1099 000e 0A93     		str	r3, [sp, #40]	@ float
1325:Src/app.c     ****   roi_dummy.h = 50;
 1100              		.loc 1 1325 3 is_stmt 1 view .LVU305
1325:Src/app.c     ****   roi_dummy.h = 50;
 1101              		.loc 1 1325 15 is_stmt 0 view .LVU306
 1102 0010 C34B     		ldr	r3, .L100+4
 1103              	.LBB311:
 1104              	.LBB312:
 828:Src/app.c     ****   info->static_param.max_boxes_limit = 100;  // Max boxes after NMS
 1105              		.loc 1 828 37 view .LVU307
 1106 0012 4FF05008 		mov	r8, #80
 1107              	.LBE312:
 1108              	.LBE311:
1325:Src/app.c     ****   roi_dummy.h = 50;
 1109              		.loc 1 1325 15 view .LVU308
 1110 0016 0B93     		str	r3, [sp, #44]	@ float
1326:Src/app.c     **** 
 1111              		.loc 1 1326 3 is_stmt 1 view .LVU309
1326:Src/app.c     **** 
 1112              		.loc 1 1326 15 is_stmt 0 view .LVU310
 1113 0018 0C93     		str	r3, [sp, #48]	@ float
1334:Src/app.c     ****   yolo_detector_init(&yolo_info);
 1114              		.loc 1 1334 3 is_stmt 1 view .LVU311
1335:Src/app.c     **** 
 1115              		.loc 1 1335 3 view .LVU312
 1116              	.LVL68:
 1117              	.LBB322:
 1118              	.LBI311:
 814:Src/app.c     **** {
 1119              		.loc 1 814 13 view .LVU313
 1120              	.LBB321:
 817:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1121              		.loc 1 817 3 view .LVU314
 817:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1122              		.loc 1 817 46 is_stmt 0 view .LVU315
 1123 001a FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_yolo_detector
 1124              	.LVL69:
 817:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1125              		.loc 1 817 46 view .LVU316
 1126 001e 0446     		mov	r4, r0
 1127              	.LVL70:
 818:Src/app.c     ****   int ret;
 1128              		.loc 1 818 3 is_stmt 1 view .LVU317
 818:Src/app.c     ****   int ret;
 1129              		.loc 1 818 45 is_stmt 0 view .LVU318
 1130 0020 FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_yolo_detector
 1131              	.LVL71:
 819:Src/app.c     **** 
 1132              		.loc 1 819 3 is_stmt 1 view .LVU319
 822:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1133              		.loc 1 822 3 view .LVU320
 1134              	.LBB313:
 1135              	.LBI313:
ARM GAS  /tmp/ccl1pJez.s 			page 63


 493:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 494:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf)
 495:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 496:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_end;
 497:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 498:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 499:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf)
 500:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 501:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_limit;
 502:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 503:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf)
 1136              		.loc 2 504 26 view .LVU321
 1137              	.LBB314:
 505:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 506:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->offset_end - buf->offset_start;
 1138              		.loc 2 506 5 view .LVU322
 1139              		.loc 2 506 28 is_stmt 0 view .LVU323
 1140 0024 D0E90223 		ldrd	r2, r3, [r0, #8]
 1141              	.LBE314:
 1142              	.LBE313:
 823:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1143              		.loc 1 823 40 view .LVU324
 1144 0028 2046     		mov	r0, r4
 1145              	.LVL72:
 1146              	.LBB316:
 1147              	.LBB315:
 1148              		.loc 2 506 28 view .LVU325
 1149 002a 9B1A     		subs	r3, r3, r2
 1150              	.LBE315:
 1151              	.LBE316:
 822:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1152              		.loc 1 822 19 discriminator 1 view .LVU326
 1153 002c 1E93     		str	r3, [sp, #120]
 823:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1154              		.loc 1 823 3 is_stmt 1 view .LVU327
 823:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1155              		.loc 1 823 40 is_stmt 0 view .LVU328
 1156 002e FFF7FEFF 		bl	LL_Buffer_addr_start
 1157              	.LVL73:
 1158              	.LBB317:
 1159              	.LBB318:
 1160              		.loc 2 506 28 view .LVU329
 1161 0032 D4E90223 		ldrd	r2, r3, [r4, #8]
 1162 0036 9B1A     		subs	r3, r3, r2
 1163              	.LBE318:
 1164              	.LBE317:
 824:Src/app.c     **** 
 1165              		.loc 1 824 32 discriminator 1 view .LVU330
 1166 0038 2093     		str	r3, [sp, #128]
 828:Src/app.c     ****   info->static_param.max_boxes_limit = 100;  // Max boxes after NMS
 1167              		.loc 1 828 37 view .LVU331
 1168 003a 42F2D003 		movw	r3, #8400
 1169 003e CDE92183 		strd	r8, r3, [sp, #132]
 829:Src/app.c     ****   info->static_param.conf_threshold = 0.40f; // Confidence threshold
 1170              		.loc 1 829 38 view .LVU332
 1171 0042 6423     		movs	r3, #100
ARM GAS  /tmp/ccl1pJez.s 			page 64


 1172 0044 2393     		str	r3, [sp, #140]
 830:Src/app.c     ****   info->static_param.iou_threshold = 0.45f;  // IoU threshold for NMS
 1173              		.loc 1 830 37 view .LVU333
 1174 0046 B74B     		ldr	r3, .L100+8
 823:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1175              		.loc 1 823 28 discriminator 1 view .LVU334
 1176 0048 1F90     		str	r0, [sp, #124]
 824:Src/app.c     **** 
 1177              		.loc 1 824 3 is_stmt 1 view .LVU335
 1178              	.LVL74:
 1179              	.LBB320:
 1180              	.LBI317:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1181              		.loc 2 504 26 view .LVU336
 1182              	.LBB319:
 1183              		.loc 2 506 5 view .LVU337
 1184              		.loc 2 506 5 is_stmt 0 view .LVU338
 1185              	.LBE319:
 1186              	.LBE320:
 827:Src/app.c     ****   info->static_param.nb_total_boxes = 8400;  // Example: Standard for YOLOv8
 1187              		.loc 1 827 3 is_stmt 1 view .LVU339
 829:Src/app.c     ****   info->static_param.conf_threshold = 0.40f; // Confidence threshold
 1188              		.loc 1 829 3 view .LVU340
 830:Src/app.c     ****   info->static_param.iou_threshold = 0.45f;  // IoU threshold for NMS
 1189              		.loc 1 830 3 view .LVU341
 830:Src/app.c     ****   info->static_param.iou_threshold = 0.45f;  // IoU threshold for NMS
 1190              		.loc 1 830 37 is_stmt 0 view .LVU342
 1191 004a 2493     		str	r3, [sp, #144]	@ float
 831:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1192              		.loc 1 831 3 is_stmt 1 view .LVU343
 831:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1193              		.loc 1 831 36 is_stmt 0 view .LVU344
 1194 004c B64B     		ldr	r3, .L100+12
 838:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1195              		.loc 1 838 9 view .LVU345
 1196 004e B749     		ldr	r1, .L100+16
 831:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1197              		.loc 1 831 36 view .LVU346
 1198 0050 2593     		str	r3, [sp, #148]	@ float
 833:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 1199              		.loc 1 833 3 is_stmt 1 view .LVU347
 833:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 1200              		.loc 1 833 39 is_stmt 0 view .LVU348
 1201 0052 4FF07E53 		mov	r3, #1065353216
 1202 0056 2693     		str	r3, [sp, #152]	@ float
 834:Src/app.c     **** 
 1203              		.loc 1 834 3 is_stmt 1 view .LVU349
 834:Src/app.c     **** 
 1204              		.loc 1 834 44 is_stmt 0 view .LVU350
 1205 0058 0023     		movs	r3, #0
 838:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1206              		.loc 1 838 9 view .LVU351
 1207 005a 21A8     		add	r0, sp, #132
 834:Src/app.c     **** 
 1208              		.loc 1 834 44 view .LVU352
 1209 005c 8DF89C30 		strb	r3, [sp, #156]
 838:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
ARM GAS  /tmp/ccl1pJez.s 			page 65


 1210              		.loc 1 838 3 is_stmt 1 view .LVU353
 838:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1211              		.loc 1 838 9 is_stmt 0 view .LVU354
 1212 0060 FFF7FEFF 		bl	app_postprocess_init
 1213              	.LVL75:
 839:Src/app.c     **** }
 1214              		.loc 1 839 3 is_stmt 1 view .LVU355
 1215 0064 8146     		mov	r9, r0
 1216 0066 30B1     		cbz	r0, .L58
 839:Src/app.c     **** }
 1217              		.loc 1 839 3 is_stmt 0 discriminator 1 view .LVU356
 1218 0068 40F24731 		movw	r1, #839
 1219 006c B04B     		ldr	r3, .L100+20
 1220 006e B14A     		ldr	r2, .L100+24
 1221              	.LVL76:
 1222              	.L99:
 839:Src/app.c     **** }
 1223              		.loc 1 839 3 discriminator 1 view .LVU357
 1224              	.LBE321:
 1225              	.LBE322:
 1226              	.LBB323:
 1227              	.LBB324:
 884:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1228              		.loc 1 884 3 discriminator 1 view .LVU358
 1229 0070 B148     		ldr	r0, .L100+28
 1230 0072 FFF7FEFF 		bl	__assert_func
 1231              	.LVL77:
 1232              	.L58:
 884:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1233              		.loc 1 884 3 discriminator 1 view .LVU359
 1234              	.LBE324:
 1235              	.LBE323:
1337:Src/app.c     ****   face_landmark_init(&face_info);
 1236              		.loc 1 1337 3 is_stmt 1 view .LVU360
1338:Src/app.c     **** 
 1237              		.loc 1 1338 3 view .LVU361
 1238              	.LBB341:
 1239              	.LBI323:
 875:Src/app.c     **** {
 1240              		.loc 1 875 13 view .LVU362
 1241              	.LBB339:
 877:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 1242              		.loc 1 877 3 view .LVU363
 877:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 1243              		.loc 1 877 46 is_stmt 0 view .LVU364
 1244 0076 FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_face_landmark
 1245              	.LVL78:
 1246 007a 0546     		mov	r5, r0
 1247              	.LVL79:
 878:Src/app.c     **** 
 1248              		.loc 1 878 3 is_stmt 1 view .LVU365
 878:Src/app.c     **** 
 1249              		.loc 1 878 45 is_stmt 0 view .LVU366
 1250 007c FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_face_landmark
 1251              	.LVL80:
 878:Src/app.c     **** 
 1252              		.loc 1 878 45 view .LVU367
ARM GAS  /tmp/ccl1pJez.s 			page 66


 1253 0080 0146     		mov	r1, r0
 1254              	.LVL81:
 880:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1255              		.loc 1 880 3 is_stmt 1 view .LVU368
 880:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1256              		.loc 1 880 17 is_stmt 0 view .LVU369
 1257 0082 FFF7FEFF 		bl	LL_Buffer_addr_start
 1258              	.LVL82:
 1259              	.LBB325:
 1260              	.LBB326:
 1261              		.loc 2 506 33 view .LVU370
 1262 0086 D1E9026A 		ldrd	r6, r10, [r1, #8]
 1263              	.LBE326:
 1264              	.LBE325:
 880:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1265              		.loc 1 880 17 view .LVU371
 1266 008a 0446     		mov	r4, r0
 1267              	.LVL83:
 881:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1268              		.loc 1 881 3 is_stmt 1 view .LVU372
 1269              	.LBB329:
 1270              	.LBI325:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1271              		.loc 2 504 26 view .LVU373
 1272              	.LBB327:
 1273              		.loc 2 506 5 view .LVU374
 1274              		.loc 2 506 5 is_stmt 0 view .LVU375
 1275              	.LBE327:
 1276              	.LBE329:
 882:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1277              		.loc 1 882 3 is_stmt 1 view .LVU376
 882:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1278              		.loc 1 882 30 is_stmt 0 view .LVU377
 1279 008c 2846     		mov	r0, r5
 1280              	.LVL84:
 882:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1281              		.loc 1 882 30 view .LVU378
 1282 008e FFF7FEFF 		bl	LL_Buffer_addr_start
 1283              	.LVL85:
 1284              	.LBB330:
 1285              	.LBB331:
 1286              		.loc 2 506 28 view .LVU379
 1287 0092 D5E90223 		ldrd	r2, r3, [r5, #8]
 1288 0096 9B1A     		subs	r3, r3, r2
 1289              	.LBE331:
 1290              	.LBE330:
 884:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1291              		.loc 1 884 3 view .LVU380
 1292 0098 042B     		cmp	r3, #4
 882:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1293              		.loc 1 882 30 view .LVU381
 1294 009a 0746     		mov	r7, r0
 1295              	.LVL86:
 883:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
 1296              		.loc 1 883 3 is_stmt 1 view .LVU382
 1297              	.LBB333:
 1298              	.LBI330:
ARM GAS  /tmp/ccl1pJez.s 			page 67


 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1299              		.loc 2 504 26 view .LVU383
 1300              	.LBB332:
 1301              		.loc 2 506 5 view .LVU384
 1302              		.loc 2 506 5 is_stmt 0 view .LVU385
 1303              	.LBE332:
 1304              	.LBE333:
 884:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1305              		.loc 1 884 3 is_stmt 1 view .LVU386
 1306 009c 04D0     		beq	.L59
 884:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1307              		.loc 1 884 3 is_stmt 0 discriminator 1 view .LVU387
 1308 009e 4FF45D71 		mov	r1, #884
 1309              	.LVL87:
 884:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1310              		.loc 1 884 3 discriminator 1 view .LVU388
 1311 00a2 A64B     		ldr	r3, .L100+32
 1312              	.LVL88:
 884:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1313              		.loc 1 884 3 discriminator 1 view .LVU389
 1314 00a4 A64A     		ldr	r2, .L100+36
 1315              	.LVL89:
 884:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1316              		.loc 1 884 3 discriminator 1 view .LVU390
 1317 00a6 E3E7     		b	.L99
 1318              	.LVL90:
 1319              	.L59:
 885:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1320              		.loc 1 885 3 is_stmt 1 view .LVU391
 885:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1321              		.loc 1 885 35 is_stmt 0 view .LVU392
 1322 00a8 05F13800 		add	r0, r5, #56
 1323              	.LVL91:
 885:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1324              		.loc 1 885 35 view .LVU393
 1325 00ac FFF7FEFF 		bl	LL_Buffer_addr_start
 1326              	.LVL92:
 1327              	.LBB334:
 1328              	.LBB335:
 1329              		.loc 2 506 28 view .LVU394
 1330 00b0 D5E91023 		ldrd	r2, r3, [r5, #64]
 1331              	.LBE335:
 1332              	.LBE334:
 887:Src/app.c     **** }
 1333              		.loc 1 887 3 view .LVU395
 1334 00b4 A3F5AF53 		sub	r3, r3, #5600
 1335 00b8 103B     		subs	r3, r3, #16
 1336 00ba 9342     		cmp	r3, r2
 885:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1337              		.loc 1 885 35 view .LVU396
 1338 00bc 8046     		mov	r8, r0
 1339              	.LVL93:
 886:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 1404);
 1340              		.loc 1 886 3 is_stmt 1 view .LVU397
 1341              	.LBB337:
 1342              	.LBI334:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/ccl1pJez.s 			page 68


 1343              		.loc 2 504 26 view .LVU398
 1344              	.LBB336:
 1345              		.loc 2 506 5 view .LVU399
 1346              		.loc 2 506 5 is_stmt 0 view .LVU400
 1347              	.LBE336:
 1348              	.LBE337:
 887:Src/app.c     **** }
 1349              		.loc 1 887 3 is_stmt 1 view .LVU401
 1350 00be 04D0     		beq	.L60
 887:Src/app.c     **** }
 1351              		.loc 1 887 3 is_stmt 0 discriminator 1 view .LVU402
 1352 00c0 40F27731 		movw	r1, #887
 1353              	.LVL94:
 887:Src/app.c     **** }
 1354              		.loc 1 887 3 discriminator 1 view .LVU403
 1355 00c4 9F4B     		ldr	r3, .L100+40
 1356 00c6 9E4A     		ldr	r2, .L100+36
 1357              	.LVL95:
 887:Src/app.c     **** }
 1358              		.loc 1 887 3 discriminator 1 view .LVU404
 1359 00c8 D2E7     		b	.L99
 1360              	.LVL96:
 1361              	.L60:
 887:Src/app.c     **** }
 1362              		.loc 1 887 3 discriminator 1 view .LVU405
 1363              	.LBE339:
 1364              	.LBE341:
1340:Src/app.c     **** 
 1365              		.loc 1 1340 3 is_stmt 1 view .LVU406
1343:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1366              		.loc 1 1343 3 view .LVU407
1343:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1367              		.loc 1 1343 18 is_stmt 0 view .LVU408
 1368 00ca FFF7FEFF 		bl	HAL_GetTick
 1369              	.LVL97:
 1370              	.LBB342:
 1371              	.LBB343:
 484:Src/app.c     ****   if (ret == pdFALSE)
 1372              		.loc 1 484 9 view .LVU409
 1373 00ce DFF8B8B2 		ldr	fp, .L100+108
 1374              	.LBE343:
 1375              	.LBE342:
1343:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1376              		.loc 1 1343 18 view .LVU410
 1377 00d2 0546     		mov	r5, r0
 1378              	.LVL98:
1344:Src/app.c     ****   assert(nn_pipe_dst);
 1379              		.loc 1 1344 3 is_stmt 1 view .LVU411
 1380              	.LBB346:
 1381              	.LBI342:
 479:Src/app.c     **** {
 1382              		.loc 1 479 17 view .LVU412
 1383              	.LBB344:
 481:Src/app.c     ****   int ret;
 1384              		.loc 1 481 3 view .LVU413
 482:Src/app.c     **** 
 1385              		.loc 1 482 3 view .LVU414
ARM GAS  /tmp/ccl1pJez.s 			page 69


 484:Src/app.c     ****   if (ret == pdFALSE)
 1386              		.loc 1 484 3 view .LVU415
 484:Src/app.c     ****   if (ret == pdFALSE)
 1387              		.loc 1 484 9 is_stmt 0 discriminator 4 view .LVU416
 1388 00d4 4946     		mov	r1, r9
 1389 00d6 DBF80000 		ldr	r0, [fp]
 1390              	.LVL99:
 484:Src/app.c     ****   if (ret == pdFALSE)
 1391              		.loc 1 484 9 discriminator 4 view .LVU417
 1392 00da FFF7FEFF 		bl	xQueueSemaphoreTake
 1393              	.LVL100:
 485:Src/app.c     ****     return NULL;
 1394              		.loc 1 485 3 is_stmt 1 view .LVU418
 485:Src/app.c     ****     return NULL;
 1395              		.loc 1 485 6 is_stmt 0 view .LVU419
 1396 00de 20B9     		cbnz	r0, .L61
 1397              	.LVL101:
 1398              	.L62:
 485:Src/app.c     ****     return NULL;
 1399              		.loc 1 485 6 view .LVU420
 1400              	.LBE344:
 1401              	.LBE346:
1345:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1402              		.loc 1 1345 3 discriminator 1 view .LVU421
 1403 00e0 40F24151 		movw	r1, #1345
 1404 00e4 984B     		ldr	r3, .L100+44
 1405 00e6 994A     		ldr	r2, .L100+48
 1406 00e8 C2E7     		b	.L99
 1407              	.LVL102:
 1408              	.L61:
 1409              	.LBB347:
 1410              	.LBB345:
 488:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1411              		.loc 1 488 3 is_stmt 1 view .LVU422
 488:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1412              		.loc 1 488 23 is_stmt 0 view .LVU423
 1413 00ea DBF8B430 		ldr	r3, [fp, #180]
 488:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1414              		.loc 1 488 7 view .LVU424
 1415 00ee 0BEB8302 		add	r2, fp, r3, lsl #2
 1416 00f2 D2F8AC00 		ldr	r0, [r2, #172]
 1417              	.LVL103:
 489:Src/app.c     **** 
 1418              		.loc 1 489 3 is_stmt 1 view .LVU425
 489:Src/app.c     **** 
 1419              		.loc 1 489 37 is_stmt 0 view .LVU426
 1420 00f6 DBF8A820 		ldr	r2, [fp, #168]
 489:Src/app.c     **** 
 1421              		.loc 1 489 32 view .LVU427
 1422 00fa 0133     		adds	r3, r3, #1
 489:Src/app.c     **** 
 1423              		.loc 1 489 37 view .LVU428
 1424 00fc 93FBF2F1 		sdiv	r1, r3, r2
 1425 0100 02FB1133 		mls	r3, r2, r1, r3
 489:Src/app.c     **** 
 1426              		.loc 1 489 16 view .LVU429
 1427 0104 CBF8B430 		str	r3, [fp, #180]
ARM GAS  /tmp/ccl1pJez.s 			page 70


 491:Src/app.c     **** }
 1428              		.loc 1 491 3 is_stmt 1 view .LVU430
 1429              	.LVL104:
 491:Src/app.c     **** }
 1430              		.loc 1 491 3 is_stmt 0 view .LVU431
 1431              	.LBE345:
 1432              	.LBE347:
1345:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1433              		.loc 1 1345 3 is_stmt 1 view .LVU432
 1434 0108 0028     		cmp	r0, #0
 1435 010a E9D0     		beq	.L62
1311:Src/app.c     **** 
 1436              		.loc 1 1311 9 is_stmt 0 view .LVU433
 1437 010c 9FED909A 		vldr.32	s18, .L100+52
1310:Src/app.c     ****   float ld_filtered_ms = 0;
 1438              		.loc 1 1310 9 view .LVU434
 1439 0110 F0EE499A 		vmov.f32	s19, s18
1308:Src/app.c     ****   // Filtered inference times, will be updated with 0
 1440              		.loc 1 1308 9 view .LVU435
 1441 0114 F0EE498A 		vmov.f32	s17, s18
1346:Src/app.c     ****   while (1)
 1442              		.loc 1 1346 3 view .LVU436
 1443 0118 4946     		mov	r1, r9
 1444              	.LBB348:
 1445              	.LBB340:
 1446              	.LBB338:
 1447              	.LBB328:
 1448              		.loc 2 506 28 view .LVU437
 1449 011a AAEB0606 		sub	r6, r10, r6
 1450              	.LVL105:
 1451              		.loc 2 506 28 view .LVU438
 1452              	.LBE328:
 1453              	.LBE338:
 1454              	.LBE340:
 1455              	.LBE348:
1346:Src/app.c     ****   while (1)
 1456              		.loc 1 1346 3 is_stmt 1 view .LVU439
 1457 011e FFF7FEFF 		bl	CAM_NNPipe_Start
 1458              	.LVL106:
 1459              	.LBB349:
 1460              	.LBB350:
 1461              	.LBB351:
 1462              	.LBB352:
 1463              	.LBB353:
 1464              	.LBB354:
 1465              		.file 3 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /******************************************************************************
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @file     cachel1_armv7.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @brief    CMSIS Level 1 Cache API for Armv7-M and later
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @version  V1.0.3
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @date     17. March 2023
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Copyright (c) 2020-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
ARM GAS  /tmp/ccl1pJez.s 			page 71


  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #if   defined ( __ICCARM__ )
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #elif defined (__clang__)
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma clang system_header    /* treat file as system include file */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef ARM_CACHEL1_ARMV7_H
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define ARM_CACHEL1_ARMV7_H
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \ingroup  CMSIS_Core_FunctionInterface
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief    Functions that configure Instruction and Data cache.
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   @{
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /* Cache Size ID Register Macros */
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_DCACHE_LINE_SIZE
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_ICACHE_LINE_SIZE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable I-Cache
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on I-Cache
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
ARM GAS  /tmp/ccl1pJez.s 			page 72


  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable I-Cache
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off I-Cache
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate I-Cache
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   I-Cache Invalidate by address
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache for the given address.
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   isize   size of memory block (in number of bytes)
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (volatile void *addr, int32_t isize)
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( isize > 0 ) {
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
ARM GAS  /tmp/ccl1pJez.s 			page 73


 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable D-Cache
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on D-Cache
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable D-Cache
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off D-Cache
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
ARM GAS  /tmp/ccl1pJez.s 			page 74


 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     struct {
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } locals
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if ((defined(__GNUC__) || defined(__clang__)) && !defined(__OPTIMIZE__))
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        __ALIGNED(__SCB_DCACHE_LINE_SIZE)
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ;
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if !defined(__OPTIMIZE__)
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /*
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * For the endless loop issue with no optimization builds.
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * More details, see https://github.com/ARM-software/CMSIS_5/issues/620
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * The issue only happens when local variables are in stack. If
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables are saved in general purpose register, then the function
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * is OK.
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * When local variables are in stack, after disabling the cache, flush the
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables cache line for data consistency.
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        */
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /* Clean and invalidate the local variable cache. */
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if defined(__ICCARM__)
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     /* As we can't align the stack to the cache line size, invalidate each of the variables */
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.sets;
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ways;
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ccsidr;
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals;
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.ccsidr = SCB->CCSIDR;
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.sets = (uint32_t)(CCSIDR_SETS(locals.ccsidr));
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       locals.ways = (uint32_t)(CCSIDR_WAYS(locals.ccsidr));
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((locals.sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((locals.ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (locals.ways-- != 0U);
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(locals.sets-- != 0U);
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
ARM GAS  /tmp/ccl1pJez.s 			page 75


 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate D-Cache
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean D-Cache
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean D-Cache */
ARM GAS  /tmp/ccl1pJez.s 			page 76


 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean & Invalidate D-Cache
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and Invalidates D-Cache
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Invalidate by address
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache for the given address.
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
ARM GAS  /tmp/ccl1pJez.s 			page 77


 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean by address
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache for the given address
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned starting from a 32 byte aligned address in 32 byte granularity.
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned.
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (volatile void *addr, int32_t dsize)
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
ARM GAS  /tmp/ccl1pJez.s 			page 78


 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean and Invalidate by address
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and invalidates D_Cache for the given address
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned and invalidated starting from a 32 byte aligned address in 32 byte gr
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned and inval
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1466              		.loc 3 422 52 is_stmt 0 view .LVU440
 1467 0122 04F01F03 		and	r3, r4, #31
 1468              		.loc 3 422 32 view .LVU441
 1469 0126 3344     		add	r3, r3, r6
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1470              		.loc 3 431 25 discriminator 1 view .LVU442
 1471 0128 04EB030A 		add	r10, r4, r3
 1472              	.LVL107:
 1473              	.L84:
 1474              		.loc 3 431 25 discriminator 1 view .LVU443
 1475              	.LBE354:
 1476              	.LBE353:
 1477              	.LBE352:
 1478              	.LBE351:
 1479              	.LBE350:
 1480              	.LBE349:
1347:Src/app.c     ****   {
 1481              		.loc 1 1347 3 is_stmt 1 view .LVU444
 1482              	.LBB418:
1349:Src/app.c     **** 
 1483              		.loc 1 1349 5 view .LVU445
1352:Src/app.c     ****     nn_period[1] = HAL_GetTick();
 1484              		.loc 1 1352 5 view .LVU446
1353:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1485              		.loc 1 1353 5 view .LVU447
1353:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1486              		.loc 1 1353 20 is_stmt 0 view .LVU448
 1487 012c FFF7FEFF 		bl	HAL_GetTick
 1488              	.LVL108:
1354:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1489              		.loc 1 1354 18 view .LVU449
 1490 0130 431B     		subs	r3, r0, r5
 1491 0132 07EE903A 		vmov	s15, r3	@ int
1355:Src/app.c     **** 
 1492              		.loc 1 1355 75 view .LVU450
 1493 0136 B2EE0E7A 		vmov.f32	s14, #1.5e+1
 1494 013a F8EE677A 		vcvt.f32.u32	s15, s15
ARM GAS  /tmp/ccl1pJez.s 			page 79


 1495 013e E8EE877A 		vfma.f32	s15, s17, s14
1355:Src/app.c     **** 
 1496              		.loc 1 1355 27 view .LVU451
 1497 0142 DFED848A 		vldr.32	s17, .L100+56
 1498              	.LVL109:
 1499              	.LBB391:
 1500              	.LBB392:
 507:Src/app.c     ****   assert(ret == pdTRUE);
 1501              		.loc 1 507 9 view .LVU452
 1502 0146 DFF840B2 		ldr	fp, .L100+108
 1503              	.LBE392:
 1504              	.LBE391:
1353:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1505              		.loc 1 1353 20 view .LVU453
 1506 014a 0590     		str	r0, [sp, #20]
 1507              	.LVL110:
1354:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1508              		.loc 1 1354 5 is_stmt 1 view .LVU454
1355:Src/app.c     **** 
 1509              		.loc 1 1355 5 view .LVU455
 1510              	.LBB395:
 1511              	.LBB393:
 507:Src/app.c     ****   assert(ret == pdTRUE);
 1512              		.loc 1 507 9 is_stmt 0 view .LVU456
 1513 014c 4FF0FF31 		mov	r1, #-1
 1514 0150 DBF85400 		ldr	r0, [fp, #84]
 1515              	.LVL111:
 507:Src/app.c     ****   assert(ret == pdTRUE);
 1516              		.loc 1 507 9 view .LVU457
 1517              	.LBE393:
 1518              	.LBE395:
1355:Src/app.c     **** 
 1519              		.loc 1 1355 27 view .LVU458
 1520 0154 67EEA88A 		vmul.f32	s17, s15, s17
 1521              	.LVL112:
1358:Src/app.c     ****     assert(capture_buffer);
 1522              		.loc 1 1358 5 is_stmt 1 view .LVU459
 1523              	.LBB396:
 1524              	.LBI391:
 502:Src/app.c     **** {
 1525              		.loc 1 502 17 view .LVU460
 1526              	.LBB394:
 504:Src/app.c     ****   int ret;
 1527              		.loc 1 504 3 view .LVU461
 505:Src/app.c     **** 
 1528              		.loc 1 505 3 view .LVU462
 507:Src/app.c     ****   assert(ret == pdTRUE);
 1529              		.loc 1 507 3 view .LVU463
 507:Src/app.c     ****   assert(ret == pdTRUE);
 1530              		.loc 1 507 9 is_stmt 0 view .LVU464
 1531 0158 FFF7FEFF 		bl	xQueueSemaphoreTake
 1532              	.LVL113:
 508:Src/app.c     **** 
 1533              		.loc 1 508 3 view .LVU465
 1534 015c 0128     		cmp	r0, #1
 507:Src/app.c     ****   assert(ret == pdTRUE);
 1535              		.loc 1 507 9 view .LVU466
ARM GAS  /tmp/ccl1pJez.s 			page 80


 1536 015e 8146     		mov	r9, r0
 1537              	.LVL114:
 508:Src/app.c     **** 
 1538              		.loc 1 508 3 is_stmt 1 view .LVU467
 1539 0160 04D0     		beq	.L63
 508:Src/app.c     **** 
 1540              		.loc 1 508 3 is_stmt 0 discriminator 1 view .LVU468
 1541 0162 4FF4FE71 		mov	r1, #508
 1542 0166 7C4B     		ldr	r3, .L100+60
 1543 0168 7C4A     		ldr	r2, .L100+64
 1544 016a 81E7     		b	.L99
 1545              	.L63:
 510:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1546              		.loc 1 510 3 is_stmt 1 view .LVU469
 510:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1547              		.loc 1 510 23 is_stmt 0 view .LVU470
 1548 016c DBF8B830 		ldr	r3, [fp, #184]
 510:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1549              		.loc 1 510 7 view .LVU471
 1550 0170 0BEB8302 		add	r2, fp, r3, lsl #2
 1551 0174 D2F8AC50 		ldr	r5, [r2, #172]
 1552              	.LVL115:
 511:Src/app.c     **** 
 1553              		.loc 1 511 3 is_stmt 1 view .LVU472
 511:Src/app.c     **** 
 1554              		.loc 1 511 39 is_stmt 0 view .LVU473
 1555 0178 DBF8A820 		ldr	r2, [fp, #168]
 511:Src/app.c     **** 
 1556              		.loc 1 511 34 view .LVU474
 1557 017c 0133     		adds	r3, r3, #1
 511:Src/app.c     **** 
 1558              		.loc 1 511 39 view .LVU475
 1559 017e 93FBF2F1 		sdiv	r1, r3, r2
 1560 0182 02FB1133 		mls	r3, r2, r1, r3
 511:Src/app.c     **** 
 1561              		.loc 1 511 17 view .LVU476
 1562 0186 CBF8B830 		str	r3, [fp, #184]
 513:Src/app.c     **** }
 1563              		.loc 1 513 3 is_stmt 1 view .LVU477
 1564              	.LVL116:
 513:Src/app.c     **** }
 1565              		.loc 1 513 3 is_stmt 0 view .LVU478
 1566              	.LBE394:
 1567              	.LBE396:
1359:Src/app.c     **** 
 1568              		.loc 1 1359 5 is_stmt 1 view .LVU479
 1569 018a 25B9     		cbnz	r5, .L64
1359:Src/app.c     **** 
 1570              		.loc 1 1359 5 is_stmt 0 discriminator 1 view .LVU480
 1571 018c 40F24F51 		movw	r1, #1359
 1572 0190 734B     		ldr	r3, .L100+68
 1573 0192 6E4A     		ldr	r2, .L100+48
 1574 0194 6CE7     		b	.L99
 1575              	.L64:
1365:Src/app.c     ****     hl_ms = HAL_GetTick();
 1576              		.loc 1 1365 5 is_stmt 1 view .LVU481
 1577              	.LVL117:
ARM GAS  /tmp/ccl1pJez.s 			page 81


 1578              	.LBB397:
 1579              	.LBI397:
 842:Src/app.c     **** {
 1580              		.loc 1 842 12 view .LVU482
 1581              	.LBB398:
 844:Src/app.c     ****   int detection_nb;
 1582              		.loc 1 844 3 view .LVU483
 845:Src/app.c     ****   int ret;
 1583              		.loc 1 845 3 view .LVU484
 846:Src/app.c     ****   int i;
 1584              		.loc 1 846 3 view .LVU485
 847:Src/app.c     **** 
 1585              		.loc 1 847 3 view .LVU486
 849:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1586              		.loc 1 849 3 view .LVU487
 849:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1587              		.loc 1 849 14 is_stmt 0 view .LVU488
 1588 0196 FFF7FEFF 		bl	HAL_GetTick
 1589              	.LVL118:
 851:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1590              		.loc 1 851 9 view .LVU489
 1591 019a 2946     		mov	r1, r5
 849:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1592              		.loc 1 849 14 view .LVU490
 1593 019c 8346     		mov	fp, r0
 1594              	.LVL119:
 851:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1595              		.loc 1 851 3 is_stmt 1 view .LVU491
 851:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1596              		.loc 1 851 9 is_stmt 0 view .LVU492
 1597 019e 1E9A     		ldr	r2, [sp, #120]
 1598 01a0 0020     		movs	r0, #0
 1599              	.LVL120:
 851:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1600              		.loc 1 851 9 view .LVU493
 1601 01a2 FFF7FEFF 		bl	LL_ATON_Set_User_Input_Buffer_yolo_detector
 1602              	.LVL121:
 852:Src/app.c     **** 
 1603              		.loc 1 852 3 is_stmt 1 view .LVU494
 1604 01a6 20B1     		cbz	r0, .L65
 852:Src/app.c     **** 
 1605              		.loc 1 852 3 is_stmt 0 discriminator 1 view .LVU495
 1606 01a8 4FF45571 		mov	r1, #852
 1607 01ac 6D4B     		ldr	r3, .L100+72
 1608 01ae 6E4A     		ldr	r2, .L100+76
 1609 01b0 5EE7     		b	.L99
 1610              	.L65:
 854:Src/app.c     **** 
 1611              		.loc 1 854 3 is_stmt 1 view .LVU496
 1612 01b2 5E48     		ldr	r0, .L100+16
 1613              	.LVL122:
 854:Src/app.c     **** 
 1614              		.loc 1 854 3 is_stmt 0 view .LVU497
 1615 01b4 FFF7FEFF 		bl	LL_ATON_RT_Main
 1616              	.LVL123:
 857:Src/app.c     **** 
 1617              		.loc 1 857 3 is_stmt 1 view .LVU498
ARM GAS  /tmp/ccl1pJez.s 			page 82


 857:Src/app.c     **** 
 1618              		.loc 1 857 40 is_stmt 0 view .LVU499
 1619 01b8 1F9B     		ldr	r3, [sp, #124]
 857:Src/app.c     **** 
 1620              		.loc 1 857 9 view .LVU500
 1621 01ba 2AAA     		add	r2, sp, #168
 857:Src/app.c     **** 
 1622              		.loc 1 857 40 view .LVU501
 1623 01bc 1693     		str	r3, [sp, #88]
 857:Src/app.c     **** 
 1624              		.loc 1 857 9 view .LVU502
 1625 01be 4946     		mov	r1, r9
 1626 01c0 21AB     		add	r3, sp, #132
 1627 01c2 16A8     		add	r0, sp, #88
 1628 01c4 FFF7FEFF 		bl	app_postprocess_run
 1629              	.LVL124:
 860:Src/app.c     **** 
 1630              		.loc 1 860 3 is_stmt 1 view .LVU503
 863:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 1631              		.loc 1 863 3 view .LVU504
 863:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 1632              		.loc 1 863 17 discriminator 1 view .LVU505
 868:Src/app.c     **** 
 1633              		.loc 1 868 3 view .LVU506
 868:Src/app.c     **** 
 1634              		.loc 1 868 3 view .LVU507
 868:Src/app.c     **** 
 1635              		.loc 1 868 3 discriminator 1 view .LVU508
 1636 01c8 209A     		ldr	r2, [sp, #128]
 1637              	.LVL125:
 1638              	.LBB399:
 1639              	.LBI399:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 1640              		.loc 3 358 27 view .LVU509
 1641              	.LBB400:
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1642              		.loc 3 361 5 view .LVU510
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1643              		.loc 3 361 8 is_stmt 0 view .LVU511
 1644 01ca 002A     		cmp	r2, #0
 1645 01cc 1CDD     		ble	.L66
 1646              	.LBB401:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1647              		.loc 3 362 8 is_stmt 1 view .LVU512
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1648              		.loc 3 362 36 is_stmt 0 view .LVU513
 1649 01ce 1F9B     		ldr	r3, [sp, #124]
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1650              		.loc 3 362 52 view .LVU514
 1651 01d0 03F01F01 		and	r1, r3, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1652              		.loc 3 362 32 view .LVU515
 1653 01d4 1144     		add	r1, r1, r2
 1654              	.LVL126:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1655              		.loc 3 363 7 is_stmt 1 view .LVU516
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/ccl1pJez.s 			page 83


 1656              		.loc 3 365 7 view .LVU517
 1657              	.LBB402:
 1658              	.LBI402:
 1659              		.file 4 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  /tmp/ccl1pJez.s 			page 84


  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  /tmp/ccl1pJez.s 			page 85


 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccl1pJez.s 			page 86


 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccl1pJez.s 			page 87


 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1660              		.loc 4 269 27 view .LVU518
 1661              	.LBB403:
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1662              		.loc 4 271 3 view .LVU519
 1663              		.syntax unified
 1664              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1665 01d6 BFF34F8F 		dsb 0xF
 1666              	@ 0 "" 2
 1667              		.thumb
 1668              		.syntax unified
 1669              	.LBE403:
ARM GAS  /tmp/ccl1pJez.s 			page 88


 1670              	.LBE402:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1671              		.loc 3 371 25 is_stmt 0 discriminator 1 view .LVU520
 1672 01da DA43     		mvns	r2, r3
 1673              	.LVL127:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1674              		.loc 3 371 25 discriminator 1 view .LVU521
 1675 01dc 03EB010C 		add	ip, r3, r1
 1676 01e0 6244     		add	r2, r2, ip
 1677 01e2 2039     		subs	r1, r1, #32
 1678              	.LVL128:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1679              		.loc 3 371 25 discriminator 1 view .LVU522
 1680 01e4 5209     		lsrs	r2, r2, #5
 1681 01e6 2031     		adds	r1, r1, #32
 1682              	.LVL129:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1683              		.loc 3 371 25 discriminator 1 view .LVU523
 1684 01e8 02F1010E 		add	lr, r2, #1
 1685 01ec D8BF     		it	le
 1686 01ee CE46     		movle	lr, r9
 1687 01f0 4EF001E0 		dls	lr, lr
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1688              		.loc 3 368 22 view .LVU524
 1689 01f4 5D48     		ldr	r0, .L100+80
 1690              	.LVL130:
 1691              	.L67:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1692              		.loc 3 367 7 is_stmt 1 view .LVU525
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1693              		.loc 3 368 9 view .LVU526
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1694              		.loc 3 368 22 is_stmt 0 view .LVU527
 1695 01f6 C0F85C32 		str	r3, [r0, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1696              		.loc 3 369 9 is_stmt 1 view .LVU528
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1697              		.loc 3 369 17 is_stmt 0 view .LVU529
 1698 01fa 2033     		adds	r3, r3, #32
 1699              	.LVL131:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1700              		.loc 3 370 9 is_stmt 1 view .LVU530
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1701              		.loc 3 371 25 discriminator 1 view .LVU531
 1702 01fc 0FF005C8 		le	lr, .L67
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 1703              		.loc 3 373 7 view .LVU532
 1704              	.LBB404:
 1705              	.LBI404:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1706              		.loc 4 269 27 view .LVU533
 1707              	.LBB405:
 1708              		.loc 4 271 3 view .LVU534
 1709              		.syntax unified
 1710              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1711 0200 BFF34F8F 		dsb 0xF
 1712              	@ 0 "" 2
ARM GAS  /tmp/ccl1pJez.s 			page 89


 1713              		.thumb
 1714              		.syntax unified
 1715              	.LBE405:
 1716              	.LBE404:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 1717              		.loc 3 374 7 view .LVU535
 1718              	.LBB406:
 1719              	.LBI406:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1720              		.loc 4 258 27 view .LVU536
 1721              	.LBB407:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1722              		.loc 4 260 3 view .LVU537
 1723              		.syntax unified
 1724              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1725 0204 BFF36F8F 		isb 0xF
 1726              	@ 0 "" 2
 1727              	.LVL132:
 1728              		.thumb
 1729              		.syntax unified
 1730              	.L66:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1731              		.loc 4 260 3 is_stmt 0 view .LVU538
 1732              	.LBE407:
 1733              	.LBE406:
 1734              	.LBE401:
 1735              	.LBE400:
 1736              	.LBE399:
 868:Src/app.c     **** 
 1737              		.loc 1 868 3 is_stmt 1 discriminator 3 view .LVU539
 870:Src/app.c     **** 
 1738              		.loc 1 870 3 view .LVU540
 870:Src/app.c     **** 
 1739              		.loc 1 870 16 is_stmt 0 view .LVU541
 1740 0208 FFF7FEFF 		bl	HAL_GetTick
 1741              	.LVL133:
 870:Src/app.c     **** 
 1742              		.loc 1 870 30 discriminator 1 view .LVU542
 1743 020c A0EB0B03 		sub	r3, r0, fp
 1744 0210 08EE103A 		vmov	s16, r3	@ int
 1745              	.LVL134:
 872:Src/app.c     **** }
 1746              		.loc 1 872 3 is_stmt 1 view .LVU543
 872:Src/app.c     **** }
 1747              		.loc 1 872 3 is_stmt 0 view .LVU544
 1748              	.LBE398:
 1749              	.LBE397:
1366:Src/app.c     ****     is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &roi_dummy, ld_landmarks[0]);
 1750              		.loc 1 1366 5 is_stmt 1 view .LVU545
1366:Src/app.c     ****     is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &roi_dummy, ld_landmarks[0]);
 1751              		.loc 1 1366 13 is_stmt 0 view .LVU546
 1752 0214 FFF7FEFF 		bl	HAL_GetTick
 1753              	.LVL135:
 1754              	.LBB408:
 1755              	.LBB389:
 1756              	.LBB363:
 1757              	.LBB364:
ARM GAS  /tmp/ccl1pJez.s 			page 90


 907:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 1758              		.loc 1 907 3 view .LVU547
 1759 0218 0EA9     		add	r1, sp, #56
 1760              	.LBE364:
 1761              	.LBE363:
 1762              	.LBE389:
 1763              	.LBE408:
1366:Src/app.c     ****     is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &roi_dummy, ld_landmarks[0]);
 1764              		.loc 1 1366 13 view .LVU548
 1765 021a 0790     		str	r0, [sp, #28]
 1766              	.LVL136:
1367:Src/app.c     ****     hl_ms = HAL_GetTick() - hl_ms;
 1767              		.loc 1 1367 5 is_stmt 1 view .LVU549
 1768              	.LBB409:
 1769              	.LBI350:
 961:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
 1770              		.loc 1 961 12 view .LVU550
 1771              	.LBB390:
 964:Src/app.c     ****   int is_valid;
 1772              		.loc 1 964 3 view .LVU551
 965:Src/app.c     **** 
 1773              		.loc 1 965 3 view .LVU552
 967:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
 1774              		.loc 1 967 3 view .LVU553
 1775              	.LBB369:
 1776              	.LBI363:
 890:Src/app.c     **** {
 1777              		.loc 1 890 12 view .LVU554
 1778              	.LBB368:
 892:Src/app.c     ****   int corners[4][2];
 1779              		.loc 1 892 3 view .LVU555
 893:Src/app.c     ****   uint8_t* out_data;
 1780              		.loc 1 893 3 view .LVU556
 894:Src/app.c     ****   size_t height_out;
 1781              		.loc 1 894 3 view .LVU557
 895:Src/app.c     ****   uint8_t *in_data;
 1782              		.loc 1 895 3 view .LVU558
 896:Src/app.c     ****   size_t height_in;
 1783              		.loc 1 896 3 view .LVU559
 897:Src/app.c     ****   size_t width_out;
 1784              		.loc 1 897 3 view .LVU560
 898:Src/app.c     ****   size_t width_in;
 1785              		.loc 1 898 3 view .LVU561
 899:Src/app.c     ****   int is_clamped;
 1786              		.loc 1 899 3 view .LVU562
 900:Src/app.c     **** 
 1787              		.loc 1 900 3 view .LVU563
 903:Src/app.c     ****   width_out = LD_WIDTH;
 1788              		.loc 1 903 3 view .LVU564
 904:Src/app.c     ****   height_out = LD_HEIGHT;
 1789              		.loc 1 904 3 view .LVU565
 905:Src/app.c     **** 
 1790              		.loc 1 905 3 view .LVU566
 907:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 1791              		.loc 1 907 3 view .LVU567
 1792 021c 09A8     		add	r0, sp, #36
 1793              	.LVL137:
ARM GAS  /tmp/ccl1pJez.s 			page 91


 907:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 1794              		.loc 1 907 3 is_stmt 0 view .LVU568
 1795 021e FFF7FEFF 		bl	roi_to_corners
 1796              	.LVL138:
 908:Src/app.c     **** 
 1797              		.loc 1 908 3 is_stmt 1 view .LVU569
 908:Src/app.c     **** 
 1798              		.loc 1 908 16 is_stmt 0 view .LVU570
 1799 0222 16A9     		add	r1, sp, #88
 1800 0224 0EA8     		add	r0, sp, #56
 1801 0226 FFF7FEFF 		bl	clamp_corners
 1802              	.LVL139:
 911:Src/app.c     ****     int offset_x;
 1803              		.loc 1 911 3 is_stmt 1 view .LVU571
 911:Src/app.c     ****     int offset_x;
 1804              		.loc 1 911 6 is_stmt 0 view .LVU572
 1805 022a 0028     		cmp	r0, #0
 1806 022c 00F0AE80 		beq	.L85
 1807              	.LBB365:
 912:Src/app.c     ****     int offset_y;
 1808              		.loc 1 912 5 is_stmt 1 view .LVU573
 913:Src/app.c     **** 
 1809              		.loc 1 913 5 view .LVU574
 916:Src/app.c     **** 
 1810              		.loc 1 916 5 view .LVU575
 1811 0230 3246     		mov	r2, r6
 1812 0232 0021     		movs	r1, #0
 1813 0234 2046     		mov	r0, r4
 1814              	.LVL140:
 916:Src/app.c     **** 
 1815              		.loc 1 916 5 is_stmt 0 view .LVU576
 1816 0236 FFF7FEFF 		bl	memset
 1817              	.LVL141:
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1818              		.loc 1 919 5 is_stmt 1 view .LVU577
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1819              		.loc 1 920 38 is_stmt 0 view .LVU578
 1820 023a DDED177A 		vldr.32	s15, [sp, #92]	@ int
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1821              		.loc 1 920 52 view .LVU579
 1822 023e 9DED0F7A 		vldr.32	s14, [sp, #60]
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1823              		.loc 1 920 38 view .LVU580
 1824 0242 F8EEE77A 		vcvt.f32.s32	s15, s15
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1825              		.loc 1 920 57 view .LVU581
 1826 0246 DFED4A6A 		vldr.32	s13, .L100+84
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1827              		.loc 1 920 38 view .LVU582
 1828 024a 77EEC77A 		vsub.f32	s15, s15, s14
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1829              		.loc 1 920 89 view .LVU583
 1830 024e 9DED136A 		vldr.32	s12, [sp, #76]
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1831              		.loc 1 920 57 view .LVU584
 1832 0252 67EEA67A 		vmul.f32	s15, s15, s13
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
ARM GAS  /tmp/ccl1pJez.s 			page 92


 1833              		.loc 1 920 89 view .LVU585
 1834 0256 36EE476A 		vsub.f32	s12, s12, s14
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1835              		.loc 1 920 70 view .LVU586
 1836 025a 87EE867A 		vdiv.f32	s14, s15, s12
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1837              		.loc 1 920 14 view .LVU587
 1838 025e FDEEC77A 		vcvt.s32.f32	s15, s14
 1839 0262 17EE903A 		vmov	r3, s15	@ int
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1840              		.loc 1 919 38 view .LVU588
 1841 0266 DDED167A 		vldr.32	s15, [sp, #88]	@ int
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1842              		.loc 1 919 52 view .LVU589
 1843 026a 9DED0E5A 		vldr.32	s10, [sp, #56]
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1844              		.loc 1 919 38 view .LVU590
 1845 026e B8EEE77A 		vcvt.f32.s32	s14, s15
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1846              		.loc 1 919 88 view .LVU591
 1847 0272 DDED125A 		vldr.32	s11, [sp, #72]
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1848              		.loc 1 919 38 view .LVU592
 1849 0276 37EE457A 		vsub.f32	s14, s14, s10
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1850              		.loc 1 919 88 view .LVU593
 1851 027a 75EEC55A 		vsub.f32	s11, s11, s10
 1852              	.LVL142:
 920:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1853              		.loc 1 920 5 is_stmt 1 view .LVU594
 921:Src/app.c     **** 
 1854              		.loc 1 921 5 view .LVU595
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1855              		.loc 1 919 57 is_stmt 0 view .LVU596
 1856 027e 27EE267A 		vmul.f32	s14, s14, s13
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1857              		.loc 1 919 69 view .LVU597
 1858 0282 C7EE257A 		vdiv.f32	s15, s14, s11
 1859              	.LVL143:
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1860              		.loc 1 919 14 view .LVU598
 1861 0286 FDEEE77A 		vcvt.s32.f32	s15, s15
 921:Src/app.c     **** 
 1862              		.loc 1 921 56 view .LVU599
 1863 028a 4FF0C00C 		mov	ip, #192
 919:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1864              		.loc 1 919 14 view .LVU600
 1865 028e 17EE901A 		vmov	r1, s15	@ int
 924:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1866              		.loc 1 924 38 view .LVU601
 1867 0292 169A     		ldr	r2, [sp, #88]
 921:Src/app.c     **** 
 1868              		.loc 1 921 56 view .LVU602
 1869 0294 0CFB0311 		mla	r1, ip, r3, r1
 924:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1870              		.loc 1 924 38 view .LVU603
 1871 0298 1A9B     		ldr	r3, [sp, #104]
ARM GAS  /tmp/ccl1pJez.s 			page 93


 925:Src/app.c     **** 
 1872              		.loc 1 925 39 view .LVU604
 1873 029a 1798     		ldr	r0, [sp, #92]
 924:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1874              		.loc 1 924 38 view .LVU605
 1875 029c 9B1A     		subs	r3, r3, r2
 924:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1876              		.loc 1 924 55 view .LVU606
 1877 029e 07EE903A 		vmov	s15, r3	@ int
 1878 02a2 F8EEE77A 		vcvt.f32.s32	s15, s15
 1879 02a6 87EEA57A 		vdiv.f32	s14, s15, s11
 924:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1880              		.loc 1 924 93 view .LVU607
 1881 02aa 67EE267A 		vmul.f32	s15, s14, s13
 924:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1882              		.loc 1 924 17 view .LVU608
 1883 02ae FDEEE77A 		vcvt.s32.f32	s15, s15
 925:Src/app.c     **** 
 1884              		.loc 1 925 39 view .LVU609
 1885 02b2 1B9A     		ldr	r2, [sp, #108]
 924:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1886              		.loc 1 924 17 view .LVU610
 1887 02b4 17EE903A 		vmov	r3, s15	@ int
 925:Src/app.c     **** 
 1888              		.loc 1 925 39 view .LVU611
 1889 02b8 121A     		subs	r2, r2, r0
 925:Src/app.c     **** 
 1890              		.loc 1 925 56 view .LVU612
 1891 02ba 07EE902A 		vmov	s15, r2	@ int
 1892 02be F8EEE77A 		vcvt.f32.s32	s15, s15
 1893 02c2 87EE867A 		vdiv.f32	s14, s15, s12
 925:Src/app.c     **** 
 1894              		.loc 1 925 94 view .LVU613
 1895 02c6 67EE267A 		vmul.f32	s15, s14, s13
 925:Src/app.c     **** 
 1896              		.loc 1 925 18 view .LVU614
 1897 02ca FDEEE77A 		vcvt.s32.f32	s15, s15
 921:Src/app.c     **** 
 1898              		.loc 1 921 14 view .LVU615
 1899 02ce 04EB8101 		add	r1, r4, r1, lsl #2
 1900              	.LVL144:
 924:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1901              		.loc 1 924 5 is_stmt 1 view .LVU616
 925:Src/app.c     **** 
 1902              		.loc 1 925 5 view .LVU617
 925:Src/app.c     **** 
 1903              		.loc 1 925 18 is_stmt 0 view .LVU618
 1904 02d2 17EE902A 		vmov	r2, s15	@ int
 1905              	.LVL145:
 927:Src/app.c     ****     assert(height_out > 0);
 1906              		.loc 1 927 5 is_stmt 1 view .LVU619
 1907 02d6 23B9     		cbnz	r3, .L69
 927:Src/app.c     ****     assert(height_out > 0);
 1908              		.loc 1 927 5 is_stmt 0 discriminator 1 view .LVU620
 1909 02d8 40F29F31 		movw	r1, #927
 1910              	.LVL146:
 927:Src/app.c     ****     assert(height_out > 0);
ARM GAS  /tmp/ccl1pJez.s 			page 94


 1911              		.loc 1 927 5 discriminator 1 view .LVU621
 1912 02dc 254B     		ldr	r3, .L100+88
 1913              	.LVL147:
 927:Src/app.c     ****     assert(height_out > 0);
 1914              		.loc 1 927 5 discriminator 1 view .LVU622
 1915 02de 264A     		ldr	r2, .L100+92
 1916              	.LVL148:
 927:Src/app.c     ****     assert(height_out > 0);
 1917              		.loc 1 927 5 discriminator 1 view .LVU623
 1918 02e0 C6E6     		b	.L99
 1919              	.LVL149:
 1920              	.L69:
 928:Src/app.c     ****     {
 1921              		.loc 1 928 5 is_stmt 1 view .LVU624
 1922 02e2 22B9     		cbnz	r2, .L70
 928:Src/app.c     ****     {
 1923              		.loc 1 928 5 is_stmt 0 discriminator 1 view .LVU625
 1924 02e4 4FF46871 		mov	r1, #928
 1925              	.LVL150:
 928:Src/app.c     ****     {
 1926              		.loc 1 928 5 discriminator 1 view .LVU626
 1927 02e8 244B     		ldr	r3, .L100+96
 1928              	.LVL151:
 928:Src/app.c     ****     {
 1929              		.loc 1 928 5 discriminator 1 view .LVU627
 1930 02ea 234A     		ldr	r2, .L100+92
 1931              	.LVL152:
 928:Src/app.c     ****     {
 1932              		.loc 1 928 5 discriminator 1 view .LVU628
 1933 02ec C0E6     		b	.L99
 1934              	.LVL153:
 1935              	.L70:
 1936              	.LBB366:
 930:Src/app.c     **** 
 1937              		.loc 1 930 7 is_stmt 1 view .LVU629
 932:Src/app.c     **** 
 1938              		.loc 1 932 7 view .LVU630
 932:Src/app.c     **** 
 1939              		.loc 1 932 20 is_stmt 0 view .LVU631
 1940 02ee 6FF4407E 		mvn	lr, #768
 932:Src/app.c     **** 
 1941              		.loc 1 932 80 view .LVU632
 1942 02f2 0CFB023C 		mla	ip, ip, r2, r3
 932:Src/app.c     **** 
 1943              		.loc 1 932 106 view .LVU633
 1944 02f6 01EB8C0C 		add	ip, r1, ip, lsl #2
 932:Src/app.c     **** 
 1945              		.loc 1 932 20 view .LVU634
 1946 02fa F444     		add	ip, ip, lr
 1947              	.LVL154:
 934:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1948              		.loc 1 934 7 is_stmt 1 view .LVU635
 1949 02fc 6445     		cmp	r4, ip
 1950 02fe 04D9     		bls	.L71
 934:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1951              		.loc 1 934 7 is_stmt 0 discriminator 1 view .LVU636
 1952 0300 40F2A631 		movw	r1, #934
ARM GAS  /tmp/ccl1pJez.s 			page 95


 1953              	.LVL155:
 934:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1954              		.loc 1 934 7 discriminator 1 view .LVU637
 1955 0304 1E4B     		ldr	r3, .L100+100
 1956              	.LVL156:
 934:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1957              		.loc 1 934 7 discriminator 1 view .LVU638
 1958 0306 1C4A     		ldr	r2, .L100+92
 1959              	.LVL157:
 934:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1960              		.loc 1 934 7 discriminator 1 view .LVU639
 1961 0308 B2E6     		b	.L99
 1962              	.LVL158:
 1963              	.L71:
 935:Src/app.c     ****     }
 1964              		.loc 1 935 7 is_stmt 1 view .LVU640
 1965 030a A019     		adds	r0, r4, r6
 1966 030c 8445     		cmp	ip, r0
 1967 030e 40D3     		bcc	.L68
 935:Src/app.c     ****     }
 1968              		.loc 1 935 7 is_stmt 0 discriminator 1 view .LVU641
 1969 0310 40F2A731 		movw	r1, #935
 1970              	.LVL159:
 935:Src/app.c     ****     }
 1971              		.loc 1 935 7 discriminator 1 view .LVU642
 1972 0314 1B4B     		ldr	r3, .L100+104
 1973              	.LVL160:
 935:Src/app.c     ****     }
 1974              		.loc 1 935 7 discriminator 1 view .LVU643
 1975 0316 184A     		ldr	r2, .L100+92
 1976              	.LVL161:
 935:Src/app.c     ****     }
 1977              		.loc 1 935 7 discriminator 1 view .LVU644
 1978 0318 AAE6     		b	.L99
 1979              	.L101:
 1980 031a 00BF     		.align	2
 1981              	.L100:
 1982 031c 0000C842 		.word	1120403456
 1983 0320 00004842 		.word	1112014848
 1984 0324 CDCCCC3E 		.word	1053609165
 1985 0328 6666E63E 		.word	1055286886
 1986 032c 00000000 		.word	NN_Instance_yolo_detector
 1987 0330 00000000 		.word	.LC4
 1988 0334 00000000 		.word	__func__.11
 1989 0338 0E000000 		.word	.LC2
 1990 033c 09000000 		.word	.LC5
 1991 0340 00000000 		.word	__func__.10
 1992 0344 2D000000 		.word	.LC6
 1993 0348 5D000000 		.word	.LC7
 1994 034c 00000000 		.word	__func__.12
 1995 0350 00000000 		.word	0
 1996 0354 0000803D 		.word	1031798784
 1997 0358 00000000 		.word	.LC1
 1998 035c 00000000 		.word	__func__.9
 1999 0360 69000000 		.word	.LC8
 2000 0364 78000000 		.word	.LC9
 2001 0368 00000000 		.word	__func__.8
ARM GAS  /tmp/ccl1pJez.s 			page 96


 2002 036c 00ED00E0 		.word	-536810240
 2003 0370 00004043 		.word	1128267776
 2004 0374 97000000 		.word	.LC10
 2005 0378 00000000 		.word	__func__.7
 2006 037c A5000000 		.word	.LC11
 2007 0380 B4000000 		.word	.LC12
 2008 0384 D0000000 		.word	.LC13
 2009 0388 00000000 		.word	nn_input_queue
 2010              	.LVL162:
 2011              	.L85:
 935:Src/app.c     ****     }
 2012              		.loc 1 935 7 discriminator 1 view .LVU645
 2013              	.LBE366:
 2014              	.LBE365:
 904:Src/app.c     ****   height_out = LD_HEIGHT;
 2015              		.loc 1 904 13 view .LVU646
 2016 038c C023     		movs	r3, #192
 903:Src/app.c     ****   width_out = LD_WIDTH;
 2017              		.loc 1 903 12 view .LVU647
 2018 038e 2146     		mov	r1, r4
 905:Src/app.c     **** 
 2019              		.loc 1 905 14 view .LVU648
 2020 0390 1A46     		mov	r2, r3
 2021              	.LVL163:
 2022              	.L68:
 939:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2023              		.loc 1 939 3 is_stmt 1 view .LVU649
 939:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2024              		.loc 1 939 77 is_stmt 0 view .LVU650
 2025 0392 DDE916C9 		ldrd	ip, r9, [sp, #88]
 939:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2026              		.loc 1 939 51 view .LVU651
 2027 0396 4FF4486E 		mov	lr, #3200
 939:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2028              		.loc 1 939 80 view .LVU652
 2029 039a 4FEA8C00 		lsl	r0, ip, #2
 939:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2030              		.loc 1 939 65 view .LVU653
 2031 039e 0EFB0900 		mla	r0, lr, r9, r0
 939:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2032              		.loc 1 939 11 view .LVU654
 2033 03a2 2844     		add	r0, r0, r5
 2034 03a4 0690     		str	r0, [sp, #24]
 2035              	.LVL164:
 940:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
 2036              		.loc 1 940 3 is_stmt 1 view .LVU655
 941:Src/app.c     **** 
 2037              		.loc 1 941 3 view .LVU656
 941:Src/app.c     **** 
 2038              		.loc 1 941 29 is_stmt 0 view .LVU657
 2039 03a6 1B98     		ldr	r0, [sp, #108]
 2040              	.LVL165:
 941:Src/app.c     **** 
 2041              		.loc 1 941 29 view .LVU658
 2042 03a8 A0EB0909 		sub	r9, r0, r9
 2043              	.LVL166:
 943:Src/app.c     ****   assert(height_in > 0);
ARM GAS  /tmp/ccl1pJez.s 			page 97


 2044              		.loc 1 943 3 is_stmt 1 view .LVU659
 2045 03ac 1A98     		ldr	r0, [sp, #104]
 2046 03ae B0EB0C0C 		subs	ip, r0, ip
 2047              	.LVL167:
 943:Src/app.c     ****   assert(height_in > 0);
 2048              		.loc 1 943 3 is_stmt 0 view .LVU660
 2049 03b2 04D1     		bne	.L72
 943:Src/app.c     ****   assert(height_in > 0);
 2050              		.loc 1 943 3 discriminator 1 view .LVU661
 2051 03b4 40F2AF31 		movw	r1, #943
 2052              	.LVL168:
 943:Src/app.c     ****   assert(height_in > 0);
 2053              		.loc 1 943 3 discriminator 1 view .LVU662
 2054 03b8 7C4B     		ldr	r3, .L102
 2055              	.LVL169:
 943:Src/app.c     ****   assert(height_in > 0);
 2056              		.loc 1 943 3 discriminator 1 view .LVU663
 2057 03ba 7D4A     		ldr	r2, .L102+4
 2058              	.LVL170:
 943:Src/app.c     ****   assert(height_in > 0);
 2059              		.loc 1 943 3 discriminator 1 view .LVU664
 2060 03bc 58E6     		b	.L99
 2061              	.LVL171:
 2062              	.L72:
 944:Src/app.c     ****   {
 2063              		.loc 1 944 3 is_stmt 1 view .LVU665
 2064 03be B9F1000F 		cmp	r9, #0
 2065 03c2 04D1     		bne	.L73
 944:Src/app.c     ****   {
 2066              		.loc 1 944 3 is_stmt 0 discriminator 1 view .LVU666
 2067 03c4 4FF46C71 		mov	r1, #944
 2068              	.LVL172:
 944:Src/app.c     ****   {
 2069              		.loc 1 944 3 discriminator 1 view .LVU667
 2070 03c8 7A4B     		ldr	r3, .L102+8
 2071              	.LVL173:
 944:Src/app.c     ****   {
 2072              		.loc 1 944 3 discriminator 1 view .LVU668
 2073 03ca 794A     		ldr	r2, .L102+4
 2074              	.LVL174:
 944:Src/app.c     ****   {
 2075              		.loc 1 944 3 discriminator 1 view .LVU669
 2076 03cc 50E6     		b	.L99
 2077              	.LVL175:
 2078              	.L73:
 2079              	.LBB367:
 946:Src/app.c     **** 
 2080              		.loc 1 946 5 is_stmt 1 view .LVU670
 948:Src/app.c     **** 
 2081              		.loc 1 948 5 view .LVU671
 948:Src/app.c     **** 
 2082              		.loc 1 948 74 is_stmt 0 view .LVU672
 2083 03ce 4FF4487B 		mov	fp, #800
 2084 03d2 0BFB09CB 		mla	fp, fp, r9, ip
 948:Src/app.c     **** 
 2085              		.loc 1 948 99 view .LVU673
 2086 03d6 0698     		ldr	r0, [sp, #24]
ARM GAS  /tmp/ccl1pJez.s 			page 98


 2087 03d8 00EB8B0B 		add	fp, r0, fp, lsl #2
 948:Src/app.c     **** 
 2088              		.loc 1 948 17 view .LVU674
 2089 03dc 6FF44860 		mvn	r0, #3200
 2090 03e0 8344     		add	fp, fp, r0
 2091              	.LVL176:
 950:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2092              		.loc 1 950 5 is_stmt 1 view .LVU675
 2093 03e2 5D45     		cmp	r5, fp
 2094 03e4 04D9     		bls	.L74
 950:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2095              		.loc 1 950 5 is_stmt 0 discriminator 1 view .LVU676
 2096 03e6 40F2B631 		movw	r1, #950
 2097              	.LVL177:
 950:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2098              		.loc 1 950 5 discriminator 1 view .LVU677
 2099 03ea 734B     		ldr	r3, .L102+12
 2100              	.LVL178:
 950:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2101              		.loc 1 950 5 discriminator 1 view .LVU678
 2102 03ec 704A     		ldr	r2, .L102+4
 2103              	.LVL179:
 950:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2104              		.loc 1 950 5 discriminator 1 view .LVU679
 2105 03ee 3FE6     		b	.L99
 2106              	.LVL180:
 2107              	.L74:
 951:Src/app.c     ****   }
 2108              		.loc 1 951 5 is_stmt 1 view .LVU680
 2109 03f0 05F5BB15 		add	r5, r5, #1531904
 2110              	.LVL181:
 951:Src/app.c     ****   }
 2111              		.loc 1 951 5 is_stmt 0 view .LVU681
 2112 03f4 05F58055 		add	r5, r5, #4096
 2113              	.LVL182:
 951:Src/app.c     ****   }
 2114              		.loc 1 951 5 view .LVU682
 2115 03f8 AB45     		cmp	fp, r5
 2116 03fa 04D3     		bcc	.L75
 951:Src/app.c     ****   }
 2117              		.loc 1 951 5 discriminator 1 view .LVU683
 2118 03fc 40F2B731 		movw	r1, #951
 2119              	.LVL183:
 951:Src/app.c     ****   }
 2120              		.loc 1 951 5 discriminator 1 view .LVU684
 2121 0400 6E4B     		ldr	r3, .L102+16
 2122              	.LVL184:
 951:Src/app.c     ****   }
 2123              		.loc 1 951 5 discriminator 1 view .LVU685
 2124 0402 6B4A     		ldr	r2, .L102+4
 2125              	.LVL185:
 951:Src/app.c     ****   }
 2126              		.loc 1 951 5 discriminator 1 view .LVU686
 2127 0404 34E6     		b	.L99
 2128              	.LVL186:
 2129              	.L75:
 951:Src/app.c     ****   }
ARM GAS  /tmp/ccl1pJez.s 			page 99


 2130              		.loc 1 951 5 discriminator 1 view .LVU687
 2131              	.LBE367:
 954:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2132              		.loc 1 954 3 is_stmt 1 view .LVU688
 2133 0406 CDE90232 		strd	r3, r2, [sp, #8]
 2134 040a CDE900C9 		strd	ip, r9, [sp]
 2135 040e 4FF44073 		mov	r3, #768
 2136              	.LVL187:
 954:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2137              		.loc 1 954 3 is_stmt 0 view .LVU689
 2138 0412 7246     		mov	r2, lr
 2139              	.LVL188:
 954:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2140              		.loc 1 954 3 view .LVU690
 2141 0414 0698     		ldr	r0, [sp, #24]
 2142 0416 FFF7FEFF 		bl	IPL_resize_bilinear_iu8ou8_with_strides_RGB
 2143              	.LVL189:
 957:Src/app.c     **** }
 2144              		.loc 1 957 3 is_stmt 1 view .LVU691
 957:Src/app.c     **** }
 2145              		.loc 1 957 3 is_stmt 0 view .LVU692
 2146              	.LBE368:
 2147              	.LBE369:
 968:Src/app.c     ****   if (is_clamped)
 2148              		.loc 1 968 3 is_stmt 1 view .LVU693
 968:Src/app.c     ****   if (is_clamped)
 2149              		.loc 1 968 3 view .LVU694
 968:Src/app.c     ****   if (is_clamped)
 2150              		.loc 1 968 3 discriminator 1 view .LVU695
 2151              	.LBB370:
 2152              	.LBI352:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2153              		.loc 3 418 27 view .LVU696
 2154              	.LBB362:
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2155              		.loc 3 421 5 view .LVU697
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2156              		.loc 3 421 8 is_stmt 0 view .LVU698
 2157 041a 002E     		cmp	r6, #0
 2158 041c 1ADD     		ble	.L76
 2159              	.LBB361:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2160              		.loc 3 422 8 is_stmt 1 view .LVU699
 2161              	.LVL190:
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2162              		.loc 3 423 7 view .LVU700
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2163              		.loc 3 425 7 view .LVU701
 2164              	.LBB355:
 2165              	.LBI355:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2166              		.loc 4 269 27 view .LVU702
 2167              	.LBB356:
 2168              		.loc 4 271 3 view .LVU703
 2169              		.syntax unified
 2170              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2171 041e BFF34F8F 		dsb 0xF
ARM GAS  /tmp/ccl1pJez.s 			page 100


 2172              	@ 0 "" 2
 2173              		.thumb
 2174              		.syntax unified
 2175              	.LBE356:
 2176              	.LBE355:
 2177              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU704
 2178 0422 E343     		mvns	r3, r4
 2179 0424 AAEB0400 		sub	r0, r10, r4
 2180 0428 5344     		add	r3, r3, r10
 2181 042a 2038     		subs	r0, r0, #32
 2182 042c 5B09     		lsrs	r3, r3, #5
 2183 042e 2030     		adds	r0, r0, #32
 2184 0430 03F1010E 		add	lr, r3, #1
 2185 0434 D8BF     		it	le
 2186 0436 4FF0010E 		movle	lr, #1
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2187              		.loc 3 423 16 view .LVU705
 2188 043a 2246     		mov	r2, r4
 2189 043c 4EF001E0 		dls	lr, lr
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2190              		.loc 3 428 23 view .LVU706
 2191 0440 5F49     		ldr	r1, .L102+20
 2192              	.LVL191:
 2193              	.L77:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 2194              		.loc 3 427 7 is_stmt 1 view .LVU707
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2195              		.loc 3 428 9 view .LVU708
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2196              		.loc 3 428 23 is_stmt 0 view .LVU709
 2197 0442 C1F87022 		str	r2, [r1, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2198              		.loc 3 429 9 is_stmt 1 view .LVU710
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2199              		.loc 3 429 17 is_stmt 0 view .LVU711
 2200 0446 2032     		adds	r2, r2, #32
 2201              	.LVL192:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2202              		.loc 3 430 9 is_stmt 1 view .LVU712
 2203              		.loc 3 431 25 discriminator 1 view .LVU713
 2204 0448 0FF005C8 		le	lr, .L77
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2205              		.loc 3 433 7 view .LVU714
 2206              	.LBB357:
 2207              	.LBI357:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2208              		.loc 4 269 27 view .LVU715
 2209              	.LBB358:
 2210              		.loc 4 271 3 view .LVU716
 2211              		.syntax unified
 2212              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2213 044c BFF34F8F 		dsb 0xF
 2214              	@ 0 "" 2
 2215              		.thumb
 2216              		.syntax unified
 2217              	.LBE358:
ARM GAS  /tmp/ccl1pJez.s 			page 101


 2218              	.LBE357:
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2219              		.loc 3 434 7 view .LVU717
 2220              	.LBB359:
 2221              	.LBI359:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2222              		.loc 4 258 27 view .LVU718
 2223              	.LBB360:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2224              		.loc 4 260 3 view .LVU719
 2225              		.syntax unified
 2226              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2227 0450 BFF36F8F 		isb 0xF
 2228              	@ 0 "" 2
 2229              	.LVL193:
 2230              		.thumb
 2231              		.syntax unified
 2232              	.L76:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2233              		.loc 4 260 3 is_stmt 0 view .LVU720
 2234              	.LBE360:
 2235              	.LBE359:
 2236              	.LBE361:
 2237              	.LBE362:
 2238              	.LBE370:
 968:Src/app.c     ****   if (is_clamped)
 2239              		.loc 1 968 3 is_stmt 1 discriminator 3 view .LVU721
 969:Src/app.c     ****     return 0;
 2240              		.loc 1 969 3 view .LVU722
 972:Src/app.c     **** 
 2241              		.loc 1 972 3 view .LVU723
 2242 0454 5B48     		ldr	r0, .L102+24
 2243 0456 FFF7FEFF 		bl	LL_ATON_RT_Main
 2244              	.LVL194:
 974:Src/app.c     **** 
 2245              		.loc 1 974 3 view .LVU724
 974:Src/app.c     **** 
 2246              		.loc 1 974 14 is_stmt 0 view .LVU725
 2247 045a 4146     		mov	r1, r8
 2248 045c 3846     		mov	r0, r7
 2249 045e 5A4A     		ldr	r2, .L102+28
 2250 0460 FFF7FEFF 		bl	ld_post_process
 2251              	.LVL195:
 2252              	.LBB371:
 2253              	.LBB372:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2254              		.loc 3 362 52 view .LVU726
 2255 0464 07F01F03 		and	r3, r7, #31
 2256              	.LBE372:
 2257              	.LBE371:
 974:Src/app.c     **** 
 2258              		.loc 1 974 14 view .LVU727
 2259 0468 0546     		mov	r5, r0
 2260              	.LVL196:
 977:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2261              		.loc 1 977 3 is_stmt 1 view .LVU728
 977:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
ARM GAS  /tmp/ccl1pJez.s 			page 102


 2262              		.loc 1 977 3 view .LVU729
 977:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2263              		.loc 1 977 3 discriminator 1 view .LVU730
 2264              	.LBB380:
 2265              	.LBI371:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2266              		.loc 3 358 27 view .LVU731
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2267              		.loc 3 361 5 view .LVU732
 2268              	.LBB379:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2269              		.loc 3 362 8 view .LVU733
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2270              		.loc 3 362 36 is_stmt 0 view .LVU734
 2271 046a 3846     		mov	r0, r7
 2272              	.LVL197:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2273              		.loc 3 363 7 is_stmt 1 view .LVU735
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2274              		.loc 3 365 7 view .LVU736
 2275              	.LBB373:
 2276              	.LBI373:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2277              		.loc 4 269 27 view .LVU737
 2278              	.LBB374:
 2279              		.loc 4 271 3 view .LVU738
 2280              		.syntax unified
 2281              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2282 046c BFF34F8F 		dsb 0xF
 2283              	@ 0 "" 2
 2284              		.thumb
 2285              		.syntax unified
 2286 0470 D91C     		adds	r1, r3, #3
 2287 0472 1C3B     		subs	r3, r3, #28
 2288 0474 4909     		lsrs	r1, r1, #5
 2289 0476 2033     		adds	r3, r3, #32
 2290 0478 01F1010E 		add	lr, r1, #1
 2291 047c D8BF     		it	le
 2292 047e 4FF0010E 		movle	lr, #1
 2293 0482 4EF001E0 		dls	lr, lr
 2294              	.LBE374:
 2295              	.LBE373:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2296              		.loc 3 368 22 is_stmt 0 view .LVU739
 2297 0486 4E4A     		ldr	r2, .L102+20
 2298              	.LVL198:
 2299              	.L78:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2300              		.loc 3 367 7 is_stmt 1 view .LVU740
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2301              		.loc 3 368 9 view .LVU741
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2302              		.loc 3 368 22 is_stmt 0 view .LVU742
 2303 0488 C2F85C02 		str	r0, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2304              		.loc 3 369 9 is_stmt 1 view .LVU743
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
ARM GAS  /tmp/ccl1pJez.s 			page 103


 2305              		.loc 3 369 17 is_stmt 0 view .LVU744
 2306 048c 2030     		adds	r0, r0, #32
 2307              	.LVL199:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2308              		.loc 3 370 9 is_stmt 1 view .LVU745
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2309              		.loc 3 371 25 discriminator 1 view .LVU746
 2310 048e 0FF005C8 		le	lr, .L78
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2311              		.loc 3 373 7 view .LVU747
 2312              	.LBB375:
 2313              	.LBI375:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2314              		.loc 4 269 27 view .LVU748
 2315              	.LBB376:
 2316              		.loc 4 271 3 view .LVU749
 2317              		.syntax unified
 2318              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2319 0492 BFF34F8F 		dsb 0xF
 2320              	@ 0 "" 2
 2321              		.thumb
 2322              		.syntax unified
 2323              	.LBE376:
 2324              	.LBE375:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 2325              		.loc 3 374 7 view .LVU750
 2326              	.LBB377:
 2327              	.LBI377:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2328              		.loc 4 258 27 view .LVU751
 2329              	.LBB378:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2330              		.loc 4 260 3 view .LVU752
 2331              		.syntax unified
 2332              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2333 0496 BFF36F8F 		isb 0xF
 2334              	@ 0 "" 2
 2335              	.LVL200:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2336              		.loc 4 260 3 is_stmt 0 view .LVU753
 2337              		.thumb
 2338              		.syntax unified
 2339              	.LBE378:
 2340              	.LBE377:
 2341              	.LBE379:
 2342              	.LBE380:
 977:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2343              		.loc 1 977 3 is_stmt 1 discriminator 3 view .LVU754
 978:Src/app.c     **** 
 2344              		.loc 1 978 3 view .LVU755
 978:Src/app.c     **** 
 2345              		.loc 1 978 3 view .LVU756
 978:Src/app.c     **** 
 2346              		.loc 1 978 3 discriminator 1 view .LVU757
 2347              	.LBB381:
 2348              	.LBI381:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
ARM GAS  /tmp/ccl1pJez.s 			page 104


 2349              		.loc 3 358 27 view .LVU758
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2350              		.loc 3 361 5 view .LVU759
 2351              	.LBB382:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2352              		.loc 3 362 8 view .LVU760
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2353              		.loc 3 362 52 is_stmt 0 view .LVU761
 2354 049a 08F01F0E 		and	lr, r8, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2355              		.loc 3 362 32 view .LVU762
 2356 049e 0EF5AF5E 		add	lr, lr, #5600
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2357              		.loc 3 362 36 view .LVU763
 2358 04a2 4346     		mov	r3, r8
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2359              		.loc 3 362 32 view .LVU764
 2360 04a4 0EF1100E 		add	lr, lr, #16
 2361              	.LVL201:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2362              		.loc 3 363 7 is_stmt 1 view .LVU765
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2363              		.loc 3 365 7 view .LVU766
 2364              	.LBB383:
 2365              	.LBI383:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2366              		.loc 4 269 27 view .LVU767
 2367              	.LBB384:
 2368              		.loc 4 271 3 view .LVU768
 2369              		.syntax unified
 2370              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2371 04a8 BFF34F8F 		dsb 0xF
 2372              	@ 0 "" 2
 2373              		.thumb
 2374              		.syntax unified
 2375 04ac 0EF1FF3E 		add	lr, lr, #-1
 2376              	.LVL202:
 2377              		.loc 4 271 3 is_stmt 0 view .LVU769
 2378 04b0 4FEA5E1E 		lsr	lr, lr, #5
 2379              	.LVL203:
 2380              		.loc 4 271 3 view .LVU770
 2381 04b4 0EF1010E 		add	lr, lr, #1
 2382 04b8 4EF001E0 		dls	lr, lr
 2383              	.LVL204:
 2384              	.L79:
 2385              		.loc 4 271 3 view .LVU771
 2386              	.LBE384:
 2387              	.LBE383:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2388              		.loc 3 367 7 is_stmt 1 view .LVU772
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2389              		.loc 3 368 9 view .LVU773
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2390              		.loc 3 368 22 is_stmt 0 view .LVU774
 2391 04bc C2F85C32 		str	r3, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2392              		.loc 3 369 9 is_stmt 1 view .LVU775
ARM GAS  /tmp/ccl1pJez.s 			page 105


 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2393              		.loc 3 369 17 is_stmt 0 view .LVU776
 2394 04c0 2033     		adds	r3, r3, #32
 2395              	.LVL205:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2396              		.loc 3 370 9 is_stmt 1 view .LVU777
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2397              		.loc 3 371 25 discriminator 1 view .LVU778
 2398 04c2 0FF005C8 		le	lr, .L79
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2399              		.loc 3 373 7 view .LVU779
 2400              	.LBB385:
 2401              	.LBI385:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2402              		.loc 4 269 27 view .LVU780
 2403              	.LBB386:
 2404              		.loc 4 271 3 view .LVU781
 2405              		.syntax unified
 2406              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2407 04c6 BFF34F8F 		dsb 0xF
 2408              	@ 0 "" 2
 2409              		.thumb
 2410              		.syntax unified
 2411              	.LBE386:
 2412              	.LBE385:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 2413              		.loc 3 374 7 view .LVU782
 2414              	.LBB387:
 2415              	.LBI387:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2416              		.loc 4 258 27 view .LVU783
 2417              	.LBB388:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2418              		.loc 4 260 3 view .LVU784
 2419              		.syntax unified
 2420              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2421 04ca BFF36F8F 		isb 0xF
 2422              	@ 0 "" 2
 2423              	.LVL206:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2424              		.loc 4 260 3 is_stmt 0 view .LVU785
 2425              		.thumb
 2426              		.syntax unified
 2427              	.LBE388:
 2428              	.LBE387:
 2429              	.LBE382:
 2430              	.LBE381:
 2431              	.LBE390:
 2432              	.LBE409:
1368:Src/app.c     **** 
 2433              		.loc 1 1368 5 is_stmt 1 view .LVU786
1368:Src/app.c     **** 
 2434              		.loc 1 1368 13 is_stmt 0 view .LVU787
 2435 04ce FFF7FEFF 		bl	HAL_GetTick
 2436              	.LVL207:
1368:Src/app.c     **** 
 2437              		.loc 1 1368 11 discriminator 1 view .LVU788
ARM GAS  /tmp/ccl1pJez.s 			page 106


 2438 04d2 079B     		ldr	r3, [sp, #28]
1373:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 2439              		.loc 1 1373 60 view .LVU789
 2440 04d4 F1EE0C6A 		vmov.f32	s13, #7.0e+0
1368:Src/app.c     **** 
 2441              		.loc 1 1368 11 discriminator 1 view .LVU790
 2442 04d8 C31A     		subs	r3, r0, r3
 2443 04da 07EE903A 		vmov	s15, r3	@ int
 2444              	.LVL208:
1370:Src/app.c     **** 
 2445              		.loc 1 1370 5 is_stmt 1 view .LVU791
1373:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 2446              		.loc 1 1373 5 view .LVU792
1373:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 2447              		.loc 1 1373 60 is_stmt 0 view .LVU793
 2448 04de B8EE488A 		vcvt.f32.u32	s16, s16
 2449              	.LVL209:
1374:Src/app.c     **** 
 2450              		.loc 1 1374 60 view .LVU794
 2451 04e2 F8EE677A 		vcvt.f32.u32	s15, s15
 2452              	.LBB410:
 2453              	.LBB411:
 498:Src/app.c     ****   assert(ret == pdTRUE);
 2454              		.loc 1 498 9 view .LVU795
 2455 04e6 0023     		movs	r3, #0
 2456              	.LVL210:
 498:Src/app.c     ****   assert(ret == pdTRUE);
 2457              		.loc 1 498 9 view .LVU796
 2458              	.LBE411:
 2459              	.LBE410:
1373:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 2460              		.loc 1 1373 20 view .LVU797
 2461 04e8 B4EE007A 		vmov.f32	s14, #1.25e-1
1373:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 2462              		.loc 1 1373 60 view .LVU798
 2463 04ec A9EEA68A 		vfma.f32	s16, s19, s13
1374:Src/app.c     **** 
 2464              		.loc 1 1374 60 view .LVU799
 2465 04f0 E9EE267A 		vfma.f32	s15, s18, s13
 2466              	.LBB414:
 2467              	.LBB412:
 498:Src/app.c     ****   assert(ret == pdTRUE);
 2468              		.loc 1 498 9 view .LVU800
 2469 04f4 3548     		ldr	r0, .L102+32
 2470              	.LVL211:
 498:Src/app.c     ****   assert(ret == pdTRUE);
 2471              		.loc 1 498 9 view .LVU801
 2472 04f6 1A46     		mov	r2, r3
 2473 04f8 1946     		mov	r1, r3
 2474 04fa 0068     		ldr	r0, [r0]
 2475              	.LBE412:
 2476              	.LBE414:
1373:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 2477              		.loc 1 1373 20 view .LVU802
 2478 04fc 68EE079A 		vmul.f32	s19, s16, s14
 2479              	.LVL212:
1374:Src/app.c     **** 
ARM GAS  /tmp/ccl1pJez.s 			page 107


 2480              		.loc 1 1374 5 is_stmt 1 view .LVU803
1374:Src/app.c     **** 
 2481              		.loc 1 1374 20 is_stmt 0 view .LVU804
 2482 0500 27EE879A 		vmul.f32	s18, s15, s14
 2483              	.LVL213:
1377:Src/app.c     **** 
 2484              		.loc 1 1377 5 is_stmt 1 view .LVU805
 2485              	.LBB415:
 2486              	.LBI410:
 494:Src/app.c     **** {
 2487              		.loc 1 494 13 view .LVU806
 2488              	.LBB413:
 496:Src/app.c     **** 
 2489              		.loc 1 496 3 view .LVU807
 498:Src/app.c     ****   assert(ret == pdTRUE);
 2490              		.loc 1 498 3 view .LVU808
 498:Src/app.c     ****   assert(ret == pdTRUE);
 2491              		.loc 1 498 9 is_stmt 0 view .LVU809
 2492 0504 FFF7FEFF 		bl	xQueueGenericSend
 2493              	.LVL214:
 499:Src/app.c     **** }
 2494              		.loc 1 499 3 is_stmt 1 view .LVU810
 2495 0508 0128     		cmp	r0, #1
 2496 050a 04D0     		beq	.L80
 499:Src/app.c     **** }
 2497              		.loc 1 499 3 is_stmt 0 discriminator 1 view .LVU811
 2498 050c 40F2F311 		movw	r1, #499
 2499 0510 2F4B     		ldr	r3, .L102+36
 2500 0512 304A     		ldr	r2, .L102+40
 2501 0514 ACE5     		b	.L99
 2502              	.L80:
 2503              	.LVL215:
 499:Src/app.c     **** }
 2504              		.loc 1 499 3 discriminator 1 view .LVU812
 2505              	.LBE413:
 2506              	.LBE415:
1383:Src/app.c     ****     assert(ret == pdTRUE);
 2507              		.loc 1 1383 5 is_stmt 1 view .LVU813
1383:Src/app.c     ****     assert(ret == pdTRUE);
 2508              		.loc 1 1383 11 is_stmt 0 view .LVU814
 2509 0516 DFF8C490 		ldr	r9, .L102+48
 2510 051a 4FF0FF31 		mov	r1, #-1
 2511 051e D9F85400 		ldr	r0, [r9, #84]
 2512 0522 FFF7FEFF 		bl	xQueueSemaphoreTake
 2513              	.LVL216:
1384:Src/app.c     **** 
 2514              		.loc 1 1384 5 is_stmt 1 view .LVU815
 2515 0526 0128     		cmp	r0, #1
 2516 0528 04D0     		beq	.L81
1384:Src/app.c     **** 
 2517              		.loc 1 1384 5 is_stmt 0 discriminator 1 view .LVU816
 2518 052a 4FF4AD61 		mov	r1, #1384
 2519 052e 284B     		ldr	r3, .L102+36
 2520 0530 294A     		ldr	r2, .L102+44
 2521 0532 9DE5     		b	.L99
 2522              	.L81:
1387:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
ARM GAS  /tmp/ccl1pJez.s 			page 108


 2523              		.loc 1 1387 5 is_stmt 1 view .LVU817
1387:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
 2524              		.loc 1 1387 23 is_stmt 0 view .LVU818
 2525 0534 FDEEE97A 		vcvt.s32.f32	s15, s19
1390:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 2526              		.loc 1 1390 26 view .LVU819
 2527 0538 0023     		movs	r3, #0
1387:Src/app.c     ****     disp.info.hl_ms = (int)ld_filtered_ms;
 2528              		.loc 1 1387 23 view .LVU820
 2529 053a C9ED2B7A 		vstr.32	s15, [r9, #172]	@ int
1388:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 2530              		.loc 1 1388 5 is_stmt 1 view .LVU821
1390:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 2531              		.loc 1 1390 26 is_stmt 0 view .LVU822
 2532 053e C9F8C430 		str	r3, [r9, #196]
1388:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 2533              		.loc 1 1388 23 view .LVU823
 2534 0542 FDEEC97A 		vcvt.s32.f32	s15, s18
1391:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2535              		.loc 1 1391 27 view .LVU824
 2536 0546 0023     		movs	r3, #0
1388:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 2537              		.loc 1 1388 23 view .LVU825
 2538 0548 C9ED2C7A 		vstr.32	s15, [r9, #176]	@ int
1389:Src/app.c     ****     disp.info.pd_hand_nb = 0;
 2539              		.loc 1 1389 5 is_stmt 1 view .LVU826
1389:Src/app.c     ****     disp.info.pd_hand_nb = 0;
 2540              		.loc 1 1389 28 is_stmt 0 view .LVU827
 2541 054c C9ED2A8A 		vstr.32	s17, [r9, #168]
1390:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 2542              		.loc 1 1390 5 is_stmt 1 view .LVU828
1391:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2543              		.loc 1 1391 5 view .LVU829
1391:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2544              		.loc 1 1391 27 is_stmt 0 view .LVU830
 2545 0550 C9F8C830 		str	r3, [r9, #200]	@ float
1392:Src/app.c     **** 
 2546              		.loc 1 1392 5 is_stmt 1 view .LVU831
1392:Src/app.c     **** 
 2547              		.loc 1 1392 33 is_stmt 0 view .LVU832
 2548 0554 C9F8CC50 		str	r5, [r9, #204]
1396:Src/app.c     ****     {
 2549              		.loc 1 1396 5 is_stmt 1 view .LVU833
1396:Src/app.c     ****     {
 2550              		.loc 1 1396 8 is_stmt 0 view .LVU834
 2551 0558 85B1     		cbz	r5, .L82
1399:Src/app.c     ****       // Copy the landmark data for the display thread
 2552              		.loc 1 1399 7 is_stmt 1 view .LVU835
1399:Src/app.c     ****       // Copy the landmark data for the display thread
 2553              		.loc 1 1399 30 is_stmt 0 view .LVU836
 2554 055a 09F1E805 		add	r5, r9, #232
 2555              	.LVL217:
1399:Src/app.c     ****       // Copy the landmark data for the display thread
 2556              		.loc 1 1399 30 view .LVU837
 2557 055e 0DF1240C 		add	ip, sp, #36
 2558 0562 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2559              	.LVL218:
ARM GAS  /tmp/ccl1pJez.s 			page 109


1399:Src/app.c     ****       // Copy the landmark data for the display thread
 2560              		.loc 1 1399 30 view .LVU838
 2561 0566 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2562 0568 2846     		mov	r0, r5
 2563 056a DCF80030 		ldr	r3, [ip]
 2564              	.LBB416:
1402:Src/app.c     ****     }
 2565              		.loc 1 1402 44 view .LVU839
 2566 056e 4FF46A62 		mov	r2, #3744
 2567 0572 1549     		ldr	r1, .L102+28
 2568              	.LBE416:
1399:Src/app.c     ****       // Copy the landmark data for the display thread
 2569              		.loc 1 1399 30 view .LVU840
 2570 0574 40F8043B 		str	r3, [r0], #4
1401:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2571              		.loc 1 1401 7 is_stmt 1 view .LVU841
 2572              	.LBB417:
1401:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2573              		.loc 1 1401 12 view .LVU842
 2574              	.LVL219:
1401:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2575              		.loc 1 1401 25 discriminator 1 view .LVU843
1402:Src/app.c     ****     }
 2576              		.loc 1 1402 44 is_stmt 0 view .LVU844
 2577 0578 FFF7FEFF 		bl	memcpy
 2578              	.LVL220:
 2579              	.L82:
1402:Src/app.c     ****     }
 2580              		.loc 1 1402 44 view .LVU845
 2581              	.LBE417:
1405:Src/app.c     ****     assert(ret == pdTRUE);
 2582              		.loc 1 1405 5 is_stmt 1 view .LVU846
1405:Src/app.c     ****     assert(ret == pdTRUE);
 2583              		.loc 1 1405 11 is_stmt 0 view .LVU847
 2584 057c 0023     		movs	r3, #0
 2585 057e D9F85400 		ldr	r0, [r9, #84]
 2586 0582 1A46     		mov	r2, r3
 2587 0584 1946     		mov	r1, r3
 2588 0586 FFF7FEFF 		bl	xQueueGenericSend
 2589              	.LVL221:
1406:Src/app.c     **** 
 2590              		.loc 1 1406 5 is_stmt 1 view .LVU848
 2591 058a 0128     		cmp	r0, #1
 2592 058c 04D0     		beq	.L83
1406:Src/app.c     **** 
 2593              		.loc 1 1406 5 is_stmt 0 discriminator 1 view .LVU849
 2594 058e 40F27E51 		movw	r1, #1406
 2595 0592 0F4B     		ldr	r3, .L102+36
 2596 0594 104A     		ldr	r2, .L102+44
 2597 0596 6BE5     		b	.L99
 2598              	.L83:
1409:Src/app.c     ****   }
 2599              		.loc 1 1409 5 is_stmt 1 view .LVU850
 2600 0598 0023     		movs	r3, #0
 2601 059a D9F80000 		ldr	r0, [r9]
 2602              	.LVL222:
1409:Src/app.c     ****   }
ARM GAS  /tmp/ccl1pJez.s 			page 110


 2603              		.loc 1 1409 5 is_stmt 0 view .LVU851
 2604 059e 1A46     		mov	r2, r3
 2605 05a0 1946     		mov	r1, r3
 2606 05a2 FFF7FEFF 		bl	xQueueGenericSend
 2607              	.LVL223:
 2608              	.LBE418:
1347:Src/app.c     ****   {
 2609              		.loc 1 1347 9 is_stmt 1 view .LVU852
 2610              	.LBB419:
1353:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 2611              		.loc 1 1353 18 is_stmt 0 discriminator 1 view .LVU853
 2612 05a6 059D     		ldr	r5, [sp, #20]
 2613              	.LBE419:
1348:Src/app.c     ****     uint8_t *capture_buffer;
 2614              		.loc 1 1348 3 view .LVU854
 2615 05a8 C0E5     		b	.L84
 2616              	.L103:
 2617 05aa 00BF     		.align	2
 2618              	.L102:
 2619 05ac FD000000 		.word	.LC14
 2620 05b0 00000000 		.word	__func__.7
 2621 05b4 0A010000 		.word	.LC15
 2622 05b8 18010000 		.word	.LC16
 2623 05bc 2E010000 		.word	.LC17
 2624 05c0 00ED00E0 		.word	-536810240
 2625 05c4 00000000 		.word	NN_Instance_face_landmark
 2626 05c8 00000000 		.word	ld_landmarks
 2627 05cc 00000000 		.word	nn_input_queue
 2628 05d0 00000000 		.word	.LC1
 2629 05d4 00000000 		.word	__func__.6
 2630 05d8 00000000 		.word	__func__.12
 2631 05dc 00000000 		.word	disp
 2632              		.cfi_endproc
 2633              	.LFE7402:
 2635              		.section	.text.display_hand,"ax",%progbits
 2636              		.align	1
 2637              		.global	display_hand
 2638              		.syntax unified
 2639              		.thumb
 2640              		.thumb_func
 2642              	display_hand:
 2643              	.LVL224:
 2644              	.LFB7389:
 755:Src/app.c     ****   if (info->is_pd_displayed) {
 2645              		.loc 1 755 1 is_stmt 1 view -0
 2646              		.cfi_startproc
 2647              		@ args = 0, pretend = 0, frame = 72
 2648              		@ frame_needed = 0, uses_anonymous_args = 0
 756:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2649              		.loc 1 756 3 view .LVU856
 755:Src/app.c     ****   if (info->is_pd_displayed) {
 2650              		.loc 1 755 1 is_stmt 0 view .LVU857
 2651 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2652              		.cfi_def_cfa_offset 28
 2653              		.cfi_offset 4, -28
 2654              		.cfi_offset 5, -24
 2655              		.cfi_offset 6, -20
ARM GAS  /tmp/ccl1pJez.s 			page 111


 2656              		.cfi_offset 7, -16
 2657              		.cfi_offset 8, -12
 2658              		.cfi_offset 9, -8
 2659              		.cfi_offset 14, -4
 756:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2660              		.loc 1 756 6 view .LVU858
 2661 0004 8369     		ldr	r3, [r0, #24]
 755:Src/app.c     ****   if (info->is_pd_displayed) {
 2662              		.loc 1 755 1 view .LVU859
 2663 0006 0546     		mov	r5, r0
 2664 0008 0C46     		mov	r4, r1
 2665 000a 95B0     		sub	sp, sp, #84
 2666              		.cfi_def_cfa_offset 112
 756:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2667              		.loc 1 756 6 view .LVU860
 2668 000c 002B     		cmp	r3, #0
 2669 000e 00F08180 		beq	.L105
 757:Src/app.c     ****     display_roi(&hand->roi);
 2670              		.loc 1 757 5 is_stmt 1 view .LVU861
 2671              	.LVL225:
 2672              	.LBB425:
 2673              	.LBI425:
 622:Src/app.c     **** {
 2674              		.loc 1 622 13 view .LVU862
 2675              	.LBB426:
 624:Src/app.c     ****   int x0, y0;
 2676              		.loc 1 624 3 view .LVU863
 625:Src/app.c     ****   int x1, y1;
 2677              		.loc 1 625 3 view .LVU864
 626:Src/app.c     ****   int w, h;
 2678              		.loc 1 626 3 view .LVU865
 627:Src/app.c     ****   int i;
 2679              		.loc 1 627 3 view .LVU866
 628:Src/app.c     **** 
 2680              		.loc 1 628 3 view .LVU867
 631:Src/app.c     ****   yc = (int)hand->y_center;
 2681              		.loc 1 631 3 view .LVU868
 631:Src/app.c     ****   yc = (int)hand->y_center;
 2682              		.loc 1 631 6 is_stmt 0 view .LVU869
 2683 0012 D1ED027A 		vldr.32	s15, [r1, #8]
 2684 0016 FDEEE77A 		vcvt.s32.f32	s15, s15
 2685 001a 17EE900A 		vmov	r0, s15	@ int
 2686              	.LVL226:
 632:Src/app.c     ****   w = (int)hand->width;
 2687              		.loc 1 632 3 is_stmt 1 view .LVU870
 632:Src/app.c     ****   w = (int)hand->width;
 2688              		.loc 1 632 6 is_stmt 0 view .LVU871
 2689 001e D1ED037A 		vldr.32	s15, [r1, #12]
 2690 0022 FDEEE77A 		vcvt.s32.f32	s15, s15
 2691 0026 17EE901A 		vmov	r1, s15	@ int
 2692              	.LVL227:
 633:Src/app.c     ****   h = (int)hand->height;
 2693              		.loc 1 633 3 is_stmt 1 view .LVU872
 634:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 2694              		.loc 1 634 3 view .LVU873
 634:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 2695              		.loc 1 634 5 is_stmt 0 view .LVU874
ARM GAS  /tmp/ccl1pJez.s 			page 112


 2696 002a D4ED057A 		vldr.32	s15, [r4, #20]
 2697 002e FDEEE77A 		vcvt.s32.f32	s15, s15
 2698 0032 17EE903A 		vmov	r3, s15	@ int
 2699              	.LVL228:
 635:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2700              		.loc 1 635 3 is_stmt 1 view .LVU875
 633:Src/app.c     ****   h = (int)hand->height;
 2701              		.loc 1 633 5 is_stmt 0 view .LVU876
 2702 0036 D4ED047A 		vldr.32	s15, [r4, #16]
 2703 003a FDEEE77A 		vcvt.s32.f32	s15, s15
 2704 003e 17EE902A 		vmov	r2, s15	@ int
 635:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2705              		.loc 1 635 16 view .LVU877
 2706 0042 0132     		adds	r2, r2, #1
 635:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2707              		.loc 1 635 21 view .LVU878
 2708 0044 02EBD272 		add	r2, r2, r2, lsr #31
 636:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2709              		.loc 1 636 16 view .LVU879
 2710 0048 0133     		adds	r3, r3, #1
 2711              	.LVL229:
 635:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2712              		.loc 1 635 21 view .LVU880
 2713 004a 5210     		asrs	r2, r2, #1
 636:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2714              		.loc 1 636 21 view .LVU881
 2715 004c 03EBD373 		add	r3, r3, r3, lsr #31
 2716              	.LVL230:
 635:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2717              		.loc 1 635 21 view .LVU882
 2718 0050 5242     		rsbs	r2, r2, #0
 636:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2719              		.loc 1 636 21 view .LVU883
 2720 0052 5B10     		asrs	r3, r3, #1
 635:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2721              		.loc 1 635 11 view .LVU884
 2722 0054 8618     		adds	r6, r0, r2
 636:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2723              		.loc 1 636 21 view .LVU885
 2724 0056 5B42     		rsbs	r3, r3, #0
 637:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2725              		.loc 1 637 6 view .LVU886
 2726 0058 801A     		subs	r0, r0, r2
 2727              	.LVL231:
 635:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2728              		.loc 1 635 6 view .LVU887
 2729 005a 0296     		str	r6, [sp, #8]
 636:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2730              		.loc 1 636 3 is_stmt 1 view .LVU888
 636:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2731              		.loc 1 636 11 is_stmt 0 view .LVU889
 2732 005c CE18     		adds	r6, r1, r3
 638:Src/app.c     ****   clamp_point(&x0, &y0);
 2733              		.loc 1 638 6 view .LVU890
 2734 005e C91A     		subs	r1, r1, r3
 2735              	.LVL232:
 637:Src/app.c     ****   y1 = yc + (h + 1) / 2;
ARM GAS  /tmp/ccl1pJez.s 			page 113


 2736              		.loc 1 637 6 view .LVU891
 2737 0060 0490     		str	r0, [sp, #16]
 638:Src/app.c     ****   clamp_point(&x0, &y0);
 2738              		.loc 1 638 6 view .LVU892
 2739 0062 0C91     		str	r1, [sp, #48]
 639:Src/app.c     ****   clamp_point(&x1, &y1);
 2740              		.loc 1 639 3 view .LVU893
 2741 0064 02A8     		add	r0, sp, #8
 2742 0066 03A9     		add	r1, sp, #12
 636:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2743              		.loc 1 636 6 view .LVU894
 2744 0068 0396     		str	r6, [sp, #12]
 637:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2745              		.loc 1 637 3 is_stmt 1 view .LVU895
 638:Src/app.c     ****   clamp_point(&x0, &y0);
 2746              		.loc 1 638 3 view .LVU896
 639:Src/app.c     ****   clamp_point(&x1, &y1);
 2747              		.loc 1 639 3 view .LVU897
 2748 006a FFF7FEFF 		bl	clamp_point
 2749              	.LVL233:
 640:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 2750              		.loc 1 640 3 view .LVU898
 2751 006e 0CA9     		add	r1, sp, #48
 2752 0070 04A8     		add	r0, sp, #16
 2753 0072 FFF7FEFF 		bl	clamp_point
 2754              	.LVL234:
 641:Src/app.c     **** 
 2755              		.loc 1 641 3 view .LVU899
 2756 0076 DDE90201 		ldrd	r0, r1, [sp, #8]
 2757 007a 4FF0FF23 		mov	r3, #-16711936
 2758 007e 049A     		ldr	r2, [sp, #16]
 2759 0080 0093     		str	r3, [sp]
 2760 0082 0C9B     		ldr	r3, [sp, #48]
 2761 0084 121A     		subs	r2, r2, r0
 2762 0086 5B1A     		subs	r3, r3, r1
 2763 0088 FFF7FEFF 		bl	UTIL_LCD_DrawRect
 2764              	.LVL235:
 644:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2765              		.loc 1 644 3 view .LVU900
 644:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2766              		.loc 1 644 17 discriminator 1 view .LVU901
 644:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2767              		.loc 1 644 10 is_stmt 0 view .LVU902
 2768 008c 0026     		movs	r6, #0
 2769              	.LBB427:
 645:Src/app.c     **** 
 2770              		.loc 1 645 62 discriminator 3 view .LVU903
 2771 008e DFF8A080 		ldr	r8, .L119+4
 2772 0092 264F     		ldr	r7, .L119
 2773              	.LVL236:
 2774              	.L107:
 645:Src/app.c     **** 
 2775              		.loc 1 645 5 is_stmt 1 view .LVU904
 647:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2776              		.loc 1 647 25 is_stmt 0 view .LVU905
 2777 0094 A269     		ldr	r2, [r4, #24]
 645:Src/app.c     **** 
ARM GAS  /tmp/ccl1pJez.s 			page 114


 2778              		.loc 1 645 62 discriminator 3 view .LVU906
 2779 0096 36F00203 		bics	r3, r6, #2
 647:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2780              		.loc 1 647 25 view .LVU907
 2781 009a 02EBC602 		add	r2, r2, r6, lsl #3
 647:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2782              		.loc 1 647 10 view .LVU908
 2783 009e D2ED007A 		vldr.32	s15, [r2]
 2784 00a2 FDEEE77A 		vcvt.s32.f32	s15, s15
 2785 00a6 CDED027A 		vstr.32	s15, [sp, #8]	@ int
 648:Src/app.c     ****     clamp_point(&x0, &y0);
 2786              		.loc 1 648 10 view .LVU909
 2787 00aa D2ED017A 		vldr.32	s15, [r2, #4]
 645:Src/app.c     **** 
 2788              		.loc 1 645 62 discriminator 3 view .LVU910
 2789 00ae 0CBF     		ite	eq
 2790 00b0 C146     		moveq	r9, r8
 2791 00b2 B946     		movne	r9, r7
 2792              	.LVL237:
 647:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2793              		.loc 1 647 5 is_stmt 1 view .LVU911
 648:Src/app.c     ****     clamp_point(&x0, &y0);
 2794              		.loc 1 648 5 view .LVU912
 648:Src/app.c     ****     clamp_point(&x0, &y0);
 2795              		.loc 1 648 10 is_stmt 0 view .LVU913
 2796 00b4 FDEEE77A 		vcvt.s32.f32	s15, s15
 649:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2797              		.loc 1 649 5 view .LVU914
 2798 00b8 03A9     		add	r1, sp, #12
 2799 00ba 02A8     		add	r0, sp, #8
 648:Src/app.c     ****     clamp_point(&x0, &y0);
 2800              		.loc 1 648 10 view .LVU915
 2801 00bc CDED037A 		vstr.32	s15, [sp, #12]	@ int
 649:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2802              		.loc 1 649 5 is_stmt 1 view .LVU916
 2803              	.LBE427:
 644:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2804              		.loc 1 644 23 is_stmt 0 discriminator 2 view .LVU917
 2805 00c0 0136     		adds	r6, r6, #1
 2806              	.LVL238:
 2807              	.LBB428:
 649:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2808              		.loc 1 649 5 view .LVU918
 2809 00c2 FFF7FEFF 		bl	clamp_point
 2810              	.LVL239:
 650:Src/app.c     ****   }
 2811              		.loc 1 650 5 is_stmt 1 view .LVU919
 2812 00c6 DDE90201 		ldrd	r0, r1, [sp, #8]
 2813 00ca 4B46     		mov	r3, r9
 2814 00cc 0222     		movs	r2, #2
 2815 00ce FFF7FEFF 		bl	UTIL_LCD_FillCircle
 2816              	.LVL240:
 2817              	.LBE428:
 644:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2818              		.loc 1 644 23 discriminator 2 view .LVU920
 644:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2819              		.loc 1 644 17 discriminator 1 view .LVU921
ARM GAS  /tmp/ccl1pJez.s 			page 115


 2820 00d2 072E     		cmp	r6, #7
 2821 00d4 DED1     		bne	.L107
 2822              	.LVL241:
 644:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2823              		.loc 1 644 17 is_stmt 0 discriminator 1 view .LVU922
 2824              	.LBE426:
 2825              	.LBE425:
 758:Src/app.c     ****   }
 2826              		.loc 1 758 5 is_stmt 1 view .LVU923
 2827              	.LBB429:
 2828              	.LBI429:
 699:Src/app.c     **** {
 2829              		.loc 1 699 13 view .LVU924
 2830              	.LBB430:
 701:Src/app.c     ****   int corners[4][2];
 2831              		.loc 1 701 3 view .LVU925
 702:Src/app.c     ****   int is_clamp;
 2832              		.loc 1 702 3 view .LVU926
 703:Src/app.c     ****   int i;
 2833              		.loc 1 703 3 view .LVU927
 704:Src/app.c     **** 
 2834              		.loc 1 704 3 view .LVU928
 707:Src/app.c     **** 
 2835              		.loc 1 707 3 view .LVU929
 2836 00d6 04A9     		add	r1, sp, #16
 2837 00d8 04F11C00 		add	r0, r4, #28
 2838              	.LVL242:
 707:Src/app.c     **** 
 2839              		.loc 1 707 3 is_stmt 0 view .LVU930
 2840 00dc FFF7FEFF 		bl	roi_to_corners
 2841              	.LVL243:
 710:Src/app.c     ****   if (is_clamp)
 2842              		.loc 1 710 3 is_stmt 1 view .LVU931
 710:Src/app.c     ****   if (is_clamp)
 2843              		.loc 1 710 14 is_stmt 0 view .LVU932
 2844 00e0 0CA9     		add	r1, sp, #48
 2845 00e2 04A8     		add	r0, sp, #16
 2846 00e4 FFF7FEFF 		bl	clamp_corners
 2847              	.LVL244:
 711:Src/app.c     ****     return ;
 2848              		.loc 1 711 3 is_stmt 1 view .LVU933
 2849 00e8 0CAF     		add	r7, sp, #48
 711:Src/app.c     ****     return ;
 2850              		.loc 1 711 6 is_stmt 0 view .LVU934
 2851 00ea 0646     		mov	r6, r0
 2852 00ec 90B9     		cbnz	r0, .L105
 716:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2853              		.loc 1 716 5 view .LVU935
 2854 00ee DFF83C80 		ldr	r8, .L119
 2855              	.LVL245:
 2856              	.L109:
 716:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2857              		.loc 1 716 5 is_stmt 1 view .LVU936
 716:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2858              		.loc 1 716 64 is_stmt 0 view .LVU937
 2859 00f2 0136     		adds	r6, r6, #1
 2860              	.LVL246:
ARM GAS  /tmp/ccl1pJez.s 			page 116


 716:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2861              		.loc 1 716 98 view .LVU938
 2862 00f4 14AB     		add	r3, sp, #80
 716:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2863              		.loc 1 716 69 view .LVU939
 2864 00f6 06F00302 		and	r2, r6, #3
 716:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2865              		.loc 1 716 5 view .LVU940
 2866 00fa CDF80080 		str	r8, [sp]
 716:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2867              		.loc 1 716 98 view .LVU941
 2868 00fe 03EBC202 		add	r2, r3, r2, lsl #3
 716:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2869              		.loc 1 716 5 view .LVU942
 2870 0102 7968     		ldr	r1, [r7, #4]
 2871 0104 52E90823 		ldrd	r2, r3, [r2, #-32]
 2872 0108 57F8080B 		ldr	r0, [r7], #8
 2873 010c FFF7FEFF 		bl	UTIL_LCD_DrawLine
 2874              	.LVL247:
 715:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2875              		.loc 1 715 23 is_stmt 1 discriminator 3 view .LVU943
 715:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2876              		.loc 1 715 17 discriminator 1 view .LVU944
 2877 0110 042E     		cmp	r6, #4
 2878 0112 EED1     		bne	.L109
 2879              	.LVL248:
 2880              	.L105:
 715:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2881              		.loc 1 715 17 is_stmt 0 discriminator 1 view .LVU945
 2882              	.LBE430:
 2883              	.LBE429:
 760:Src/app.c     ****     display_ld_hand(hand);
 2884              		.loc 1 760 3 is_stmt 1 view .LVU946
 760:Src/app.c     ****     display_ld_hand(hand);
 2885              		.loc 1 760 6 is_stmt 0 view .LVU947
 2886 0114 6B69     		ldr	r3, [r5, #20]
 2887 0116 2BB1     		cbz	r3, .L104
 761:Src/app.c     **** }
 2888              		.loc 1 761 5 is_stmt 1 view .LVU948
 2889 0118 2046     		mov	r0, r4
 762:Src/app.c     **** 
 2890              		.loc 1 762 1 is_stmt 0 view .LVU949
 2891 011a 15B0     		add	sp, sp, #84
 2892              		.cfi_remember_state
 2893              		.cfi_def_cfa_offset 28
 2894              		@ sp needed
 2895 011c BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 2896              		.cfi_restore 14
 2897              		.cfi_restore 9
 2898              		.cfi_restore 8
 2899              		.cfi_restore 7
 2900              		.cfi_restore 6
 2901              		.cfi_restore 5
 2902              		.cfi_restore 4
 2903              		.cfi_def_cfa_offset 0
 2904              	.LVL249:
 761:Src/app.c     **** }
ARM GAS  /tmp/ccl1pJez.s 			page 117


 2905              		.loc 1 761 5 view .LVU950
 2906 0120 FFF7FEBF 		b	display_ld_hand
 2907              	.LVL250:
 2908              	.L104:
 2909              		.cfi_restore_state
 762:Src/app.c     **** 
 2910              		.loc 1 762 1 view .LVU951
 2911 0124 15B0     		add	sp, sp, #84
 2912              		.cfi_def_cfa_offset 28
 2913              		@ sp needed
 2914 0126 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2915              	.LVL251:
 2916              	.L120:
 762:Src/app.c     **** 
 2917              		.loc 1 762 1 view .LVU952
 2918 012a 00BF     		.align	2
 2919              	.L119:
 2920 012c 0000FFFF 		.word	-65536
 2921 0130 FF0000FF 		.word	-16776961
 2922              		.cfi_endproc
 2923              	.LFE7389:
 2925              		.section	.rodata.dp_thread_fct.str1.1,"aMS",%progbits,1
 2926              	.LC18:
 2927 0000 72657420 		.ascii	"ret == HAL_OK\000"
 2927      3D3D2048 
 2927      414C5F4F 
 2927      4B00
 2928              		.global	__aeabi_ul2d
 2929              	.LC19:
 2930 000e 43707520 		.ascii	"Cpu load\000"
 2930      6C6F6164 
 2930      00
 2931              	.LC20:
 2932 0017 20202025 		.ascii	"   %.1f%%\000"
 2932      2E316625 
 2932      2500
 2933              	.LC21:
 2934 0021 496E6665 		.ascii	"Inferences\000"
 2934      72656E63 
 2934      657300
 2935              	.LC22:
 2936 002c 20706420 		.ascii	" pd %2ums\000"
 2936      2532756D 
 2936      7300
 2937              	.LC23:
 2938 0036 20686C20 		.ascii	" hl %2ums\000"
 2938      2532756D 
 2938      7300
 2939              	.LC24:
 2940 0040 2020252E 		.ascii	"  %.1f FPS\000"
 2940      31662046 
 2940      505300
 2941              		.section	.text.dp_thread_fct,"ax",%progbits
 2942              		.align	1
 2943              		.syntax unified
 2944              		.thumb
 2945              		.thumb_func
ARM GAS  /tmp/ccl1pJez.s 			page 118


 2947              	dp_thread_fct:
 2948              	.LVL252:
 2949              	.LFB7407:
1555:Src/app.c     ****   button_t ld_toggle_button;
 2950              		.loc 1 1555 1 is_stmt 1 view -0
 2951              		.cfi_startproc
 2952              		@ args = 0, pretend = 0, frame = 3864
 2953              		@ frame_needed = 0, uses_anonymous_args = 0
1556:Src/app.c     ****   button_t hd_toggle_button;
 2954              		.loc 1 1556 3 view .LVU954
1557:Src/app.c     ****   uint32_t disp_ms = 0;
 2955              		.loc 1 1557 3 view .LVU955
1558:Src/app.c     ****   display_info_t info;
 2956              		.loc 1 1558 3 view .LVU956
1559:Src/app.c     ****   uint32_t ts;
 2957              		.loc 1 1559 3 view .LVU957
1560:Src/app.c     ****   int ret;
 2958              		.loc 1 1560 3 view .LVU958
1561:Src/app.c     **** 
 2959              		.loc 1 1561 3 view .LVU959
1564:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
 2960              		.loc 1 1564 3 view .LVU960
1555:Src/app.c     ****   button_t ld_toggle_button;
 2961              		.loc 1 1555 1 is_stmt 0 view .LVU961
 2962 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2963              		.cfi_def_cfa_offset 36
 2964              		.cfi_offset 4, -36
 2965              		.cfi_offset 5, -32
 2966              		.cfi_offset 6, -28
 2967              		.cfi_offset 7, -24
 2968              		.cfi_offset 8, -20
 2969              		.cfi_offset 9, -16
 2970              		.cfi_offset 10, -12
 2971              		.cfi_offset 11, -8
 2972              		.cfi_offset 14, -4
 2973              	.LBB461:
 2974              	.LBB462:
 395:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2975              		.loc 1 395 9 view .LVU962
 2976 0004 0021     		movs	r1, #0
 2977              	.LBE462:
 2978              	.LBE461:
1555:Src/app.c     ****   button_t ld_toggle_button;
 2979              		.loc 1 1555 1 view .LVU963
 2980 0006 2DED048B 		vpush.64	{d8, d9}
 2981              		.cfi_def_cfa_offset 52
 2982              		.cfi_offset 80, -52
 2983              		.cfi_offset 81, -48
 2984              		.cfi_offset 82, -44
 2985              		.cfi_offset 83, -40
 2986              	.LBB466:
 2987              	.LBB463:
 395:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2988              		.loc 1 395 9 view .LVU964
 2989 000a 0846     		mov	r0, r1
 2990              	.LVL253:
 395:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
ARM GAS  /tmp/ccl1pJez.s 			page 119


 2991              		.loc 1 395 9 view .LVU965
 2992              	.LBE463:
 2993              	.LBE466:
1555:Src/app.c     ****   button_t ld_toggle_button;
 2994              		.loc 1 1555 1 view .LVU966
 2995 000c ADF6247D 		subw	sp, sp, #3876
 2996              		.cfi_def_cfa_offset 3928
 2997              	.LVL254:
 2998              	.LBB467:
 2999              	.LBI461:
 391:Src/app.c     **** {
 3000              		.loc 1 391 13 is_stmt 1 view .LVU967
 3001              	.LBB464:
 393:Src/app.c     **** 
 3002              		.loc 1 393 3 view .LVU968
 395:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3003              		.loc 1 395 3 view .LVU969
 395:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3004              		.loc 1 395 9 is_stmt 0 view .LVU970
 3005 0010 FFF7FEFF 		bl	BSP_PB_Init
 3006              	.LVL255:
 396:Src/app.c     **** 
 3007              		.loc 1 396 3 is_stmt 1 view .LVU971
 3008 0014 0146     		mov	r1, r0
 3009 0016 08B1     		cbz	r0, .L122
 3010              	.LVL256:
 3011              	.L123:
 396:Src/app.c     **** 
 3012              		.loc 1 396 3 is_stmt 0 view .LVU972
 3013 0018 FFF7FEFF 		bl	button_init.part.0
 3014              	.LVL257:
 3015              	.L122:
 398:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3016              		.loc 1 398 3 is_stmt 1 view .LVU973
 399:Src/app.c     ****   b->prev_state = 0;
 3017              		.loc 1 399 23 is_stmt 0 view .LVU974
 3018 001c 984B     		ldr	r3, .L139+8
 401:Src/app.c     **** }
 3019              		.loc 1 401 14 view .LVU975
 3020 001e 994F     		ldr	r7, .L139+12
 400:Src/app.c     ****   b->cb_args = cb_args;
 3021              		.loc 1 400 17 view .LVU976
 3022 0020 CDE90403 		strd	r0, r3, [sp, #16]
 398:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3023              		.loc 1 398 16 view .LVU977
 3024 0024 8DF80C00 		strb	r0, [sp, #12]
 399:Src/app.c     ****   b->prev_state = 0;
 3025              		.loc 1 399 3 is_stmt 1 view .LVU978
 401:Src/app.c     **** }
 3026              		.loc 1 401 3 view .LVU979
 3027              	.LBE464:
 3028              	.LBE467:
 3029              	.LBB468:
 3030              	.LBB469:
 395:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3031              		.loc 1 395 9 is_stmt 0 view .LVU980
 3032 0028 0120     		movs	r0, #1
ARM GAS  /tmp/ccl1pJez.s 			page 120


 3033              	.LVL258:
 395:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3034              		.loc 1 395 9 view .LVU981
 3035              	.LBE469:
 3036              	.LBE468:
 3037              	.LBB473:
 3038              	.LBB465:
 401:Src/app.c     **** }
 3039              		.loc 1 401 14 view .LVU982
 3040 002a 0697     		str	r7, [sp, #24]
 3041              	.LVL259:
 401:Src/app.c     **** }
 3042              		.loc 1 401 14 view .LVU983
 3043              	.LBE465:
 3044              	.LBE473:
1565:Src/app.c     **** #else
 3045              		.loc 1 1565 3 is_stmt 1 view .LVU984
 3046              	.LBB474:
 3047              	.LBI468:
 391:Src/app.c     **** {
 3048              		.loc 1 391 13 view .LVU985
 3049              	.LBB470:
 393:Src/app.c     **** 
 3050              		.loc 1 393 3 view .LVU986
 395:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3051              		.loc 1 395 3 view .LVU987
 395:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3052              		.loc 1 395 9 is_stmt 0 view .LVU988
 3053 002c FFF7FEFF 		bl	BSP_PB_Init
 3054              	.LVL260:
 396:Src/app.c     **** 
 3055              		.loc 1 396 3 is_stmt 1 view .LVU989
 3056 0030 0028     		cmp	r0, #0
 3057 0032 F1D1     		bne	.L123
 398:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3058              		.loc 1 398 3 view .LVU990
 398:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3059              		.loc 1 398 16 is_stmt 0 view .LVU991
 3060 0034 0123     		movs	r3, #1
 3061              	.LBE470:
 3062              	.LBE474:
1558:Src/app.c     ****   display_info_t info;
 3063              		.loc 1 1558 12 view .LVU992
 3064 0036 0446     		mov	r4, r0
 3065              	.LBB475:
 3066              	.LBB476:
 3067              	.LBB477:
 3068              	.LBB478:
 442:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3069              		.loc 1 442 35 view .LVU993
 3070 0038 9FED8F9B 		vldr.64	d9, .L139
 3071              	.LBE478:
 3072              	.LBE477:
 3073              	.LBE476:
 3074              	.LBE475:
 3075              	.LBB488:
 3076              	.LBB471:
ARM GAS  /tmp/ccl1pJez.s 			page 121


 398:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3077              		.loc 1 398 16 view .LVU994
 3078 003c 8DF81C30 		strb	r3, [sp, #28]
 399:Src/app.c     ****   b->prev_state = 0;
 3079              		.loc 1 399 3 is_stmt 1 view .LVU995
 399:Src/app.c     ****   b->prev_state = 0;
 3080              		.loc 1 399 23 is_stmt 0 view .LVU996
 3081 0040 914B     		ldr	r3, .L139+16
 3082              	.LBE471:
 3083              	.LBE488:
 3084              	.LBB489:
 3085              	.LBB490:
1514:Src/app.c     ****   assert(ret == HAL_OK);
 3086              		.loc 1 1514 47 view .LVU997
 3087 0042 DFF88C92 		ldr	r9, .L139+88
 3088              	.LBE490:
 3089              	.LBE489:
 3090              	.LBB496:
 3091              	.LBB472:
 400:Src/app.c     ****   b->cb_args = cb_args;
 3092              		.loc 1 400 17 view .LVU998
 3093 0046 CDE90803 		strd	r0, r3, [sp, #32]
 401:Src/app.c     **** }
 3094              		.loc 1 401 3 is_stmt 1 view .LVU999
 401:Src/app.c     **** }
 3095              		.loc 1 401 14 is_stmt 0 view .LVU1000
 3096 004a 0A97     		str	r7, [sp, #40]
 3097              	.LVL261:
 3098              	.L133:
 401:Src/app.c     **** }
 3099              		.loc 1 401 14 view .LVU1001
 3100              	.LBE472:
 3101              	.LBE496:
1570:Src/app.c     ****   {
 3102              		.loc 1 1570 3 is_stmt 1 view .LVU1002
1572:Src/app.c     ****     assert(ret == pdTRUE);
 3103              		.loc 1 1572 5 view .LVU1003
1572:Src/app.c     ****     assert(ret == pdTRUE);
 3104              		.loc 1 1572 11 is_stmt 0 view .LVU1004
 3105 004c 4FF0FF31 		mov	r1, #-1
 3106 0050 3868     		ldr	r0, [r7]
 3107 0052 FFF7FEFF 		bl	xQueueSemaphoreTake
 3108              	.LVL262:
1573:Src/app.c     **** 
 3109              		.loc 1 1573 5 is_stmt 1 view .LVU1005
 3110 0056 0128     		cmp	r0, #1
 3111 0058 06D0     		beq	.L124
1573:Src/app.c     **** 
 3112              		.loc 1 1573 5 is_stmt 0 discriminator 1 view .LVU1006
 3113 005a 40F22561 		movw	r1, #1573
 3114 005e 8B4B     		ldr	r3, .L139+20
 3115 0060 8B4A     		ldr	r2, .L139+24
 3116              	.LVL263:
 3117              	.L138:
1579:Src/app.c     ****     info = disp.info;
 3118              		.loc 1 1579 5 discriminator 1 view .LVU1007
 3119 0062 8C48     		ldr	r0, .L139+28
ARM GAS  /tmp/ccl1pJez.s 			page 122


 3120 0064 FFF7FEFF 		bl	__assert_func
 3121              	.LVL264:
 3122              	.L124:
1575:Src/app.c     ****     button_process(&hd_toggle_button);
 3123              		.loc 1 1575 5 is_stmt 1 view .LVU1008
 3124 0068 03A8     		add	r0, sp, #12
 3125              	.LVL265:
1575:Src/app.c     ****     button_process(&hd_toggle_button);
 3126              		.loc 1 1575 5 is_stmt 0 view .LVU1009
 3127 006a FFF7FEFF 		bl	button_process
 3128              	.LVL266:
1576:Src/app.c     **** 
 3129              		.loc 1 1576 5 is_stmt 1 view .LVU1010
 3130 006e 07A8     		add	r0, sp, #28
 3131 0070 FFF7FEFF 		bl	button_process
 3132              	.LVL267:
1578:Src/app.c     ****     assert(ret == pdTRUE);
 3133              		.loc 1 1578 5 view .LVU1011
1578:Src/app.c     ****     assert(ret == pdTRUE);
 3134              		.loc 1 1578 11 is_stmt 0 view .LVU1012
 3135 0074 4FF0FF31 		mov	r1, #-1
 3136 0078 786D     		ldr	r0, [r7, #84]
 3137 007a FFF7FEFF 		bl	xQueueSemaphoreTake
 3138              	.LVL268:
1579:Src/app.c     ****     info = disp.info;
 3139              		.loc 1 1579 5 is_stmt 1 view .LVU1013
 3140 007e 0128     		cmp	r0, #1
 3141 0080 04D0     		beq	.L125
1579:Src/app.c     ****     info = disp.info;
 3142              		.loc 1 1579 5 is_stmt 0 discriminator 1 view .LVU1014
 3143 0082 40F22B61 		movw	r1, #1579
 3144 0086 814B     		ldr	r3, .L139+20
 3145 0088 814A     		ldr	r2, .L139+24
 3146 008a EAE7     		b	.L138
 3147              	.L125:
1580:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3148              		.loc 1 1580 5 is_stmt 1 view .LVU1015
1580:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3149              		.loc 1 1580 10 is_stmt 0 view .LVU1016
 3150 008c 40F6F462 		movw	r2, #3828
 3151 0090 8149     		ldr	r1, .L139+32
 3152 0092 0BA8     		add	r0, sp, #44
 3153              	.LVL269:
1580:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3154              		.loc 1 1580 10 view .LVU1017
 3155 0094 FFF7FEFF 		bl	memcpy
 3156              	.LVL270:
1581:Src/app.c     ****     assert(ret == pdTRUE);
 3157              		.loc 1 1581 5 is_stmt 1 view .LVU1018
1581:Src/app.c     ****     assert(ret == pdTRUE);
 3158              		.loc 1 1581 11 is_stmt 0 view .LVU1019
 3159 0098 0023     		movs	r3, #0
 3160 009a 786D     		ldr	r0, [r7, #84]
 3161 009c 1A46     		mov	r2, r3
 3162 009e 1946     		mov	r1, r3
 3163 00a0 FFF7FEFF 		bl	xQueueGenericSend
 3164              	.LVL271:
ARM GAS  /tmp/ccl1pJez.s 			page 123


1582:Src/app.c     ****     info.disp_ms = disp_ms;
 3165              		.loc 1 1582 5 view .LVU1020
 3166 00a4 0128     		cmp	r0, #1
1581:Src/app.c     ****     assert(ret == pdTRUE);
 3167              		.loc 1 1581 11 view .LVU1021
 3168 00a6 0546     		mov	r5, r0
 3169              	.LVL272:
1582:Src/app.c     ****     info.disp_ms = disp_ms;
 3170              		.loc 1 1582 5 is_stmt 1 view .LVU1022
 3171 00a8 04D0     		beq	.L126
1582:Src/app.c     ****     info.disp_ms = disp_ms;
 3172              		.loc 1 1582 5 is_stmt 0 discriminator 1 view .LVU1023
 3173 00aa 40F22E61 		movw	r1, #1582
 3174 00ae 774B     		ldr	r3, .L139+20
 3175 00b0 774A     		ldr	r2, .L139+24
 3176 00b2 D6E7     		b	.L138
 3177              	.L126:
1583:Src/app.c     **** 
 3178              		.loc 1 1583 5 is_stmt 1 view .LVU1024
1583:Src/app.c     **** 
 3179              		.loc 1 1583 18 is_stmt 0 view .LVU1025
 3180 00b4 0F94     		str	r4, [sp, #60]
1585:Src/app.c     ****     dp_update_drawing_area();
 3181              		.loc 1 1585 5 is_stmt 1 view .LVU1026
1585:Src/app.c     ****     dp_update_drawing_area();
 3182              		.loc 1 1585 10 is_stmt 0 view .LVU1027
 3183 00b6 FFF7FEFF 		bl	HAL_GetTick
 3184              	.LVL273:
1585:Src/app.c     ****     dp_update_drawing_area();
 3185              		.loc 1 1585 10 view .LVU1028
 3186 00ba 8246     		mov	r10, r0
 3187              	.LVL274:
1586:Src/app.c     ****     Display_NetworkOutput(&info);
 3188              		.loc 1 1586 5 is_stmt 1 view .LVU1029
 3189              	.LBB497:
 3190              	.LBI489:
1509:Src/app.c     **** {
 3191              		.loc 1 1509 13 view .LVU1030
 3192              	.LBB495:
1511:Src/app.c     **** 
 3193              		.loc 1 1511 3 view .LVU1031
1513:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
 3194              		.loc 1 1513 3 view .LVU1032
 3195              	.LBB491:
 3196              	.LBI491:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccl1pJez.s 			page 124


 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
ARM GAS  /tmp/ccl1pJez.s 			page 125


 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccl1pJez.s 			page 126


 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
ARM GAS  /tmp/ccl1pJez.s 			page 127


 455:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccl1pJez.s 			page 128


 512:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccl1pJez.s 			page 129


 569:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
ARM GAS  /tmp/ccl1pJez.s 			page 130


 626:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccl1pJez.s 			page 131


 683:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
ARM GAS  /tmp/ccl1pJez.s 			page 132


 740:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
ARM GAS  /tmp/ccl1pJez.s 			page 133


 797:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
ARM GAS  /tmp/ccl1pJez.s 			page 134


 854:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccl1pJez.s 			page 135


 911:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 3197              		.loc 4 960 27 view .LVU1033
 3198              	.LBB492:
 961:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 3199              		.loc 4 962 3 view .LVU1034
 3200              		.syntax unified
 3201              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccl1pJez.s 			page 136


 3202 00bc 72B6     		cpsid i
 3203              	@ 0 "" 2
 3204              		.thumb
 3205              		.syntax unified
 3206              	.LBE492:
 3207              	.LBE491:
1514:Src/app.c     ****   assert(ret == HAL_OK);
 3208              		.loc 1 1514 3 view .LVU1035
1514:Src/app.c     ****   assert(ret == HAL_OK);
 3209              		.loc 1 1514 47 is_stmt 0 view .LVU1036
 3210 00be DFF81482 		ldr	r8, .L139+92
 3211 00c2 D9F80030 		ldr	r3, [r9]
1514:Src/app.c     ****   assert(ret == HAL_OK);
 3212              		.loc 1 1514 9 view .LVU1037
 3213 00c6 7548     		ldr	r0, .L139+36
 3214              	.LVL275:
1514:Src/app.c     ****   assert(ret == HAL_OK);
 3215              		.loc 1 1514 9 view .LVU1038
 3216 00c8 2946     		mov	r1, r5
 3217 00ca 00FB0380 		mla	r0, r0, r3, r8
 3218 00ce FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 3219              	.LVL276:
1515:Src/app.c     ****   __enable_irq();
 3220              		.loc 1 1515 3 is_stmt 1 view .LVU1039
 3221 00d2 8346     		mov	fp, r0
 3222 00d4 20B1     		cbz	r0, .L127
1515:Src/app.c     ****   __enable_irq();
 3223              		.loc 1 1515 3 is_stmt 0 discriminator 1 view .LVU1040
 3224 00d6 40F2EB51 		movw	r1, #1515
 3225 00da 714B     		ldr	r3, .L139+40
 3226 00dc 714A     		ldr	r2, .L139+44
 3227 00de C0E7     		b	.L138
 3228              	.L127:
1516:Src/app.c     **** }
 3229              		.loc 1 1516 3 is_stmt 1 view .LVU1041
 3230              	.LBB493:
 3231              	.LBI493:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3232              		.loc 4 949 27 view .LVU1042
 3233              	.LBB494:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3234              		.loc 4 951 3 view .LVU1043
 3235              		.syntax unified
 3236              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3237 00e0 62B6     		cpsie i
 3238              	@ 0 "" 2
 3239              	.LVL277:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3240              		.loc 4 951 3 is_stmt 0 view .LVU1044
 3241              		.thumb
 3242              		.syntax unified
 3243              	.LBE494:
 3244              	.LBE493:
 3245              	.LBE495:
 3246              	.LBE497:
1587:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
 3247              		.loc 1 1587 5 is_stmt 1 view .LVU1045
ARM GAS  /tmp/ccl1pJez.s 			page 137


 3248              	.LBB498:
 3249              	.LBI475:
 764:Src/app.c     **** {
 3250              		.loc 1 764 13 view .LVU1046
 3251              	.LBB487:
 766:Src/app.c     ****   int line_nb = 0;
 3252              		.loc 1 766 3 view .LVU1047
 767:Src/app.c     ****   float nn_fps;
 3253              		.loc 1 767 3 view .LVU1048
 768:Src/app.c     ****   int i;
 3254              		.loc 1 768 3 view .LVU1049
 769:Src/app.c     **** 
 3255              		.loc 1 769 3 view .LVU1050
 772:Src/app.c     **** 
 3256              		.loc 1 772 3 view .LVU1051
 3257              	.LBB480:
 3258              	.LBB481:
 423:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3259              		.loc 1 423 24 is_stmt 0 view .LVU1052
 3260 00e2 714C     		ldr	r4, .L139+48
 3261              	.LVL278:
 423:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3262              		.loc 1 423 24 view .LVU1053
 3263              	.LBE481:
 3264              	.LBE480:
 772:Src/app.c     **** 
 3265              		.loc 1 772 3 view .LVU1054
 3266 00e4 4FF4F073 		mov	r3, #480
 3267 00e8 4FF44872 		mov	r2, #800
 3268 00ec 0146     		mov	r1, r0
 3269 00ee 0090     		str	r0, [sp]
 3270              	.LBB484:
 3271              	.LBB482:
 423:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3272              		.loc 1 423 24 view .LVU1055
 3273 00f0 04F13805 		add	r5, r4, #56
 3274              	.LVL279:
 423:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3275              		.loc 1 423 24 view .LVU1056
 3276 00f4 04F12006 		add	r6, r4, #32
 3277              	.LBE482:
 3278              	.LBE484:
 772:Src/app.c     **** 
 3279              		.loc 1 772 3 view .LVU1057
 3280 00f8 FFF7FEFF 		bl	UTIL_LCD_FillRect
 3281              	.LVL280:
 775:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 3282              		.loc 1 775 3 is_stmt 1 view .LVU1058
 3283              	.LBB485:
 3284              	.LBI480:
 419:Src/app.c     **** {
 3285              		.loc 1 419 13 view .LVU1059
 3286              	.LBB483:
 421:Src/app.c     **** 
 3287              		.loc 1 421 3 view .LVU1060
 423:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3288              		.loc 1 423 3 view .LVU1061
ARM GAS  /tmp/ccl1pJez.s 			page 138


 423:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3289              		.loc 1 423 24 is_stmt 0 view .LVU1062
 3290 00fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3291 00fe 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3292 0100 96E80300 		ldm	r6, {r0, r1}
 3293 0104 85E80300 		stm	r5, {r0, r1}
 424:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3294              		.loc 1 424 3 is_stmt 1 view .LVU1063
 424:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3295              		.loc 1 424 32 is_stmt 0 view .LVU1064
 3296 0108 FFF7FEFF 		bl	TIM4_Get_Value
 3297              	.LVL281:
 3298 010c 0546     		mov	r5, r0
 424:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3299              		.loc 1 424 30 discriminator 1 view .LVU1065
 3300 010e C4E9080B 		strd	r0, fp, [r4, #32]
 425:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3301              		.loc 1 425 3 is_stmt 1 view .LVU1066
 425:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3302              		.loc 1 425 62 is_stmt 0 view .LVU1067
 3303 0112 FFF7FEFF 		bl	ulTaskGetIdleRunTimeCounter
 3304              	.LVL282:
 425:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3305              		.loc 1 425 60 discriminator 1 view .LVU1068
 3306 0116 2D1A     		subs	r5, r5, r0
 3307 0118 63EB0303 		sbc	r3, r3, r3
 425:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3308              		.loc 1 425 31 discriminator 1 view .LVU1069
 3309 011c C4E90A53 		strd	r5, r3, [r4, #40]
 426:Src/app.c     **** 
 3310              		.loc 1 426 3 is_stmt 1 view .LVU1070
 426:Src/app.c     **** 
 3311              		.loc 1 426 31 is_stmt 0 view .LVU1071
 3312 0120 FFF7FEFF 		bl	HAL_GetTick
 3313              	.LVL283:
 428:Src/app.c     ****     return ;
 3314              		.loc 1 428 33 view .LVU1072
 3315 0124 A36C     		ldr	r3, [r4, #72]
 3316 0126 226E     		ldr	r2, [r4, #96]
 426:Src/app.c     **** 
 3317              		.loc 1 426 29 discriminator 1 view .LVU1073
 3318 0128 2063     		str	r0, [r4, #48]
 428:Src/app.c     ****     return ;
 3319              		.loc 1 428 3 is_stmt 1 view .LVU1074
 428:Src/app.c     ****     return ;
 3320              		.loc 1 428 33 is_stmt 0 view .LVU1075
 3321 012a 9B1A     		subs	r3, r3, r2
 428:Src/app.c     ****     return ;
 3322              		.loc 1 428 6 view .LVU1076
 3323 012c B3F57A7F 		cmp	r3, #1000
 3324 0130 06D3     		bcc	.L128
 432:Src/app.c     **** }
 3325              		.loc 1 432 55 view .LVU1077
 3326 0132 9022     		movs	r2, #144
 3327 0134 04F13801 		add	r1, r4, #56
 3328 0138 04F15000 		add	r0, r4, #80
 3329 013c FFF7FEFF 		bl	memmove
ARM GAS  /tmp/ccl1pJez.s 			page 139


 3330              	.LVL284:
 3331              	.L128:
 432:Src/app.c     **** }
 3332              		.loc 1 432 55 view .LVU1078
 3333              	.LBE483:
 3334              	.LBE485:
 776:Src/app.c     **** 
 3335              		.loc 1 776 3 is_stmt 1 view .LVU1079
 3336              	.LBB486:
 3337              	.LBI477:
 435:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 3338              		.loc 1 435 13 view .LVU1080
 3339              	.LBB479:
 438:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 3340              		.loc 1 438 3 view .LVU1081
 441:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 3341              		.loc 1 441 3 view .LVU1082
 442:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3342              		.loc 1 442 5 view .LVU1083
 442:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3343              		.loc 1 442 66 is_stmt 0 view .LVU1084
 3344 0140 D4E91C23 		ldrd	r2, r3, [r4, #112]
 3345 0144 D4E91601 		ldrd	r0, r1, [r4, #88]
 3346 0148 801A     		subs	r0, r0, r2
 3347 014a 61EB0301 		sbc	r1, r1, r3
 442:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3348              		.loc 1 442 35 view .LVU1085
 3349 014e FFF7FEFF 		bl	__aeabi_ul2d
 3350              	.LVL285:
 443:Src/app.c     ****   if (cpu_load_last_five_seconds)
 3351              		.loc 1 443 50 view .LVU1086
 3352 0152 D4E91A32 		ldrd	r3, r2, [r4, #104]
 442:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3353              		.loc 1 442 35 view .LVU1087
 3354 0156 41EC180B 		vmov	d8, r0, r1
 443:Src/app.c     ****   if (cpu_load_last_five_seconds)
 3355              		.loc 1 443 50 view .LVU1088
 3356 015a D4E91401 		ldrd	r0, r1, [r4, #80]
 3357 015e C01A     		subs	r0, r0, r3
 3358 0160 61EB0201 		sbc	r1, r1, r2
 442:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3359              		.loc 1 442 97 view .LVU1089
 3360 0164 FFF7FEFF 		bl	__aeabi_ul2d
 3361              	.LVL286:
 442:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3362              		.loc 1 442 35 view .LVU1090
 3363 0168 28EE098B 		vmul.f64	d8, d8, d9
 442:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3364              		.loc 1 442 97 view .LVU1091
 3365 016c 41EC160B 		vmov	d6, r0, r1
 3366 0170 88EE067B 		vdiv.f64	d7, d8, d6
 3367 0174 B7EEC78B 		vcvt.f32.f64	s16, d7
 3368              	.LVL287:
 444:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 3369              		.loc 1 444 3 is_stmt 1 view .LVU1092
 444:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 3370              		.loc 1 444 3 is_stmt 0 view .LVU1093
ARM GAS  /tmp/ccl1pJez.s 			page 140


 3371              	.LBE479:
 3372              	.LBE486:
 779:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 3373              		.loc 1 779 3 is_stmt 1 view .LVU1094
 779:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 3374              		.loc 1 779 10 is_stmt 0 view .LVU1095
 3375 0178 DDED0B7A 		vldr.32	s15, [sp, #44]
 3376 017c 9FED4B7A 		vldr.32	s14, .L139+52
 3377 0180 C7EE278A 		vdiv.f32	s17, s14, s15
 3378              	.LVL288:
 780:Src/app.c     ****   line_nb += 1;
 3379              		.loc 1 780 3 is_stmt 1 view .LVU1096
 780:Src/app.c     ****   line_nb += 1;
 3380              		.loc 1 780 26 is_stmt 0 view .LVU1097
 3381 0184 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3382              	.LVL289:
 780:Src/app.c     ****   line_nb += 1;
 3383              		.loc 1 780 3 discriminator 1 view .LVU1098
 3384 0188 0021     		movs	r1, #0
 3385 018a 0222     		movs	r2, #2
 3386 018c 0846     		mov	r0, r1
 3387 018e 484B     		ldr	r3, .L139+56
 3388 0190 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3389              	.LVL290:
 781:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 3390              		.loc 1 781 3 is_stmt 1 view .LVU1099
 782:Src/app.c     ****   line_nb += 2;
 3391              		.loc 1 782 3 view .LVU1100
 782:Src/app.c     ****   line_nb += 2;
 3392              		.loc 1 782 26 is_stmt 0 view .LVU1101
 3393 0194 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3394              	.LVL291:
 782:Src/app.c     ****   line_nb += 2;
 3395              		.loc 1 782 3 discriminator 1 view .LVU1102
 3396 0198 B7EEC87A 		vcvt.f64.f32	d7, s16
 3397 019c C188     		ldrh	r1, [r0, #6]
 3398 019e 0222     		movs	r2, #2
 3399 01a0 8DED007B 		vstr.64	d7, [sp]
 3400 01a4 434B     		ldr	r3, .L139+60
 3401 01a6 0020     		movs	r0, #0
 3402 01a8 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3403              	.LVL292:
 783:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 3404              		.loc 1 783 3 is_stmt 1 view .LVU1103
 784:Src/app.c     ****   line_nb += 1;
 3405              		.loc 1 784 3 view .LVU1104
 784:Src/app.c     ****   line_nb += 1;
 3406              		.loc 1 784 26 is_stmt 0 view .LVU1105
 3407 01ac FFF7FEFF 		bl	UTIL_LCD_GetFont
 3408              	.LVL293:
 784:Src/app.c     ****   line_nb += 1;
 3409              		.loc 1 784 26 discriminator 1 view .LVU1106
 3410 01b0 C188     		ldrh	r1, [r0, #6]
 784:Src/app.c     ****   line_nb += 1;
 3411              		.loc 1 784 3 discriminator 1 view .LVU1107
 3412 01b2 0222     		movs	r2, #2
 3413 01b4 404B     		ldr	r3, .L139+64
ARM GAS  /tmp/ccl1pJez.s 			page 141


 3414 01b6 01EB4101 		add	r1, r1, r1, lsl #1
 3415 01ba 0020     		movs	r0, #0
 3416 01bc FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3417              	.LVL294:
 785:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " pd %2ums", info->pd_ms);
 3418              		.loc 1 785 3 is_stmt 1 view .LVU1108
 786:Src/app.c     ****   line_nb += 1;
 3419              		.loc 1 786 3 view .LVU1109
 786:Src/app.c     ****   line_nb += 1;
 3420              		.loc 1 786 26 is_stmt 0 view .LVU1110
 3421 01c0 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3422              	.LVL295:
 786:Src/app.c     ****   line_nb += 1;
 3423              		.loc 1 786 3 discriminator 1 view .LVU1111
 3424 01c4 0222     		movs	r2, #2
 786:Src/app.c     ****   line_nb += 1;
 3425              		.loc 1 786 26 discriminator 1 view .LVU1112
 3426 01c6 C188     		ldrh	r1, [r0, #6]
 786:Src/app.c     ****   line_nb += 1;
 3427              		.loc 1 786 3 discriminator 1 view .LVU1113
 3428 01c8 0C9B     		ldr	r3, [sp, #48]
 3429 01ca 9140     		lsls	r1, r1, r2
 3430 01cc 0020     		movs	r0, #0
 3431 01ce 0093     		str	r3, [sp]
 3432 01d0 3A4B     		ldr	r3, .L139+68
 3433 01d2 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3434              	.LVL296:
 787:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " hl %2ums", info->hl_ms);
 3435              		.loc 1 787 3 is_stmt 1 view .LVU1114
 788:Src/app.c     ****   line_nb += 2;
 3436              		.loc 1 788 3 view .LVU1115
 788:Src/app.c     ****   line_nb += 2;
 3437              		.loc 1 788 26 is_stmt 0 view .LVU1116
 3438 01d6 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3439              	.LVL297:
 788:Src/app.c     ****   line_nb += 2;
 3440              		.loc 1 788 3 discriminator 1 view .LVU1117
 3441 01da 0D9B     		ldr	r3, [sp, #52]
 788:Src/app.c     ****   line_nb += 2;
 3442              		.loc 1 788 26 discriminator 1 view .LVU1118
 3443 01dc C188     		ldrh	r1, [r0, #6]
 788:Src/app.c     ****   line_nb += 2;
 3444              		.loc 1 788 3 discriminator 1 view .LVU1119
 3445 01de 0222     		movs	r2, #2
 3446 01e0 01EB8101 		add	r1, r1, r1, lsl #2
 3447 01e4 0020     		movs	r0, #0
 3448 01e6 0093     		str	r3, [sp]
 3449 01e8 354B     		ldr	r3, .L139+72
 3450 01ea FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3451              	.LVL298:
 789:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 3452              		.loc 1 789 3 is_stmt 1 view .LVU1120
 790:Src/app.c     ****   line_nb += 2;
 3453              		.loc 1 790 3 view .LVU1121
 790:Src/app.c     ****   line_nb += 2;
 3454              		.loc 1 790 26 is_stmt 0 view .LVU1122
 3455 01ee FFF7FEFF 		bl	UTIL_LCD_GetFont
ARM GAS  /tmp/ccl1pJez.s 			page 142


 3456              	.LVL299:
 790:Src/app.c     ****   line_nb += 2;
 3457              		.loc 1 790 3 discriminator 1 view .LVU1123
 3458 01f2 B7EEE87A 		vcvt.f64.f32	d7, s17
 790:Src/app.c     ****   line_nb += 2;
 3459              		.loc 1 790 26 discriminator 1 view .LVU1124
 3460 01f6 C188     		ldrh	r1, [r0, #6]
 790:Src/app.c     ****   line_nb += 2;
 3461              		.loc 1 790 3 discriminator 1 view .LVU1125
 3462 01f8 324B     		ldr	r3, .L139+76
 3463 01fa 8DED007B 		vstr.64	d7, [sp]
 3464 01fe 0222     		movs	r2, #2
 3465 0200 0020     		movs	r0, #0
 3466 0202 C1EBC101 		rsb	r1, r1, r1, lsl #3
 3467 0206 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3468              	.LVL300:
 791:Src/app.c     ****   if (DBG_INFO) {
 3469              		.loc 1 791 3 is_stmt 1 view .LVU1126
 792:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 3470              		.loc 1 792 3 view .LVU1127
 800:Src/app.c     ****     if (info->hands[i].is_valid)
 3471              		.loc 1 800 3 view .LVU1128
 800:Src/app.c     ****     if (info->hands[i].is_valid)
 3472              		.loc 1 800 17 discriminator 1 view .LVU1129
 3473 020a 129B     		ldr	r3, [sp, #72]
 3474 020c 002B     		cmp	r3, #0
 3475 020e 05DD     		ble	.L129
 801:Src/app.c     ****       display_hand(info, &info->hands[i]);
 3476              		.loc 1 801 5 view .LVU1130
 801:Src/app.c     ****       display_hand(info, &info->hands[i]);
 3477              		.loc 1 801 8 is_stmt 0 view .LVU1131
 3478 0210 149B     		ldr	r3, [sp, #80]
 3479 0212 1BB1     		cbz	r3, .L129
 802:Src/app.c     ****   }
 3480              		.loc 1 802 7 is_stmt 1 view .LVU1132
 3481 0214 14A9     		add	r1, sp, #80
 3482 0216 0BA8     		add	r0, sp, #44
 3483              	.LVL301:
 802:Src/app.c     ****   }
 3484              		.loc 1 802 7 is_stmt 0 view .LVU1133
 3485 0218 FFF7FEFF 		bl	display_hand
 3486              	.LVL302:
 800:Src/app.c     ****     if (info->hands[i].is_valid)
 3487              		.loc 1 800 38 is_stmt 1 discriminator 2 view .LVU1134
 800:Src/app.c     ****     if (info->hands[i].is_valid)
 3488              		.loc 1 800 17 discriminator 1 view .LVU1135
 3489              	.L129:
 805:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 3490              		.loc 1 805 3 view .LVU1136
 805:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 3491              		.loc 1 805 3 is_stmt 0 view .LVU1137
 3492              	.LBE487:
 3493              	.LBE498:
1588:Src/app.c     ****     dp_commit_drawing_area();
 3494              		.loc 1 1588 5 is_stmt 1 view .LVU1138
 3495              	.LBB499:
 3496              	.LBI499:
ARM GAS  /tmp/ccl1pJez.s 			page 143


 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3497              		.loc 3 388 27 view .LVU1139
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3498              		.loc 3 391 5 view .LVU1140
 3499              	.LBB500:
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3500              		.loc 3 392 8 view .LVU1141
 3501              	.LBE500:
 3502              	.LBE499:
1588:Src/app.c     ****     dp_commit_drawing_area();
 3503              		.loc 1 1588 42 is_stmt 0 view .LVU1142
 3504 021c D9F80030 		ldr	r3, [r9]
 3505 0220 1E4A     		ldr	r2, .L139+36
 3506 0222 02FB0383 		mla	r3, r2, r3, r8
 3507              	.LVL303:
 3508              	.LBB508:
 3509              	.LBB507:
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3510              		.loc 3 393 7 is_stmt 1 view .LVU1143
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3511              		.loc 3 395 7 view .LVU1144
 3512              	.LBB501:
 3513              	.LBI501:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3514              		.loc 4 269 27 view .LVU1145
 3515              	.LBB502:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3516              		.loc 4 271 3 view .LVU1146
 3517              		.syntax unified
 3518              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3519 0226 BFF34F8F 		dsb 0xF
 3520              	@ 0 "" 2
 3521              		.thumb
 3522              		.syntax unified
 3523              	.LBE502:
 3524              	.LBE501:
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3525              		.loc 3 398 22 is_stmt 0 view .LVU1147
 3526 022a 45F6C05E 		movw	lr, #24000
 3527 022e 4EF001E0 		dls	lr, lr
 3528 0232 254A     		ldr	r2, .L139+80
 3529              	.LVL304:
 3530              	.L131:
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 3531              		.loc 3 397 7 is_stmt 1 view .LVU1148
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3532              		.loc 3 398 9 view .LVU1149
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3533              		.loc 3 398 22 is_stmt 0 view .LVU1150
 3534 0234 C2F86832 		str	r3, [r2, #616]
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3535              		.loc 3 399 9 is_stmt 1 view .LVU1151
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3536              		.loc 3 399 17 is_stmt 0 view .LVU1152
 3537 0238 2033     		adds	r3, r3, #32
 3538              	.LVL305:
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
ARM GAS  /tmp/ccl1pJez.s 			page 144


 3539              		.loc 3 400 9 is_stmt 1 view .LVU1153
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3540              		.loc 3 401 25 discriminator 1 view .LVU1154
 3541 023a 0FF005C8 		le	lr, .L131
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3542              		.loc 3 403 7 view .LVU1155
 3543              	.LBB503:
 3544              	.LBI503:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3545              		.loc 4 269 27 view .LVU1156
 3546              	.LBB504:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3547              		.loc 4 271 3 view .LVU1157
 3548              		.syntax unified
 3549              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3550 023e BFF34F8F 		dsb 0xF
 3551              	@ 0 "" 2
 3552              		.thumb
 3553              		.syntax unified
 3554              	.LBE504:
 3555              	.LBE503:
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 3556              		.loc 3 404 7 view .LVU1158
 3557              	.LBB505:
 3558              	.LBI505:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3559              		.loc 4 258 27 view .LVU1159
 3560              	.LBB506:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3561              		.loc 4 260 3 view .LVU1160
 3562              		.syntax unified
 3563              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3564 0242 BFF36F8F 		isb 0xF
 3565              	@ 0 "" 2
 3566              	.LVL306:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3567              		.loc 4 260 3 is_stmt 0 view .LVU1161
 3568              		.thumb
 3569              		.syntax unified
 3570              	.LBE506:
 3571              	.LBE505:
 3572              	.LBE507:
 3573              	.LBE508:
1589:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
 3574              		.loc 1 1589 5 is_stmt 1 view .LVU1162
 3575              	.LBB509:
 3576              	.LBI509:
1519:Src/app.c     **** {
 3577              		.loc 1 1519 13 view .LVU1163
 3578              	.LBB510:
1521:Src/app.c     **** 
 3579              		.loc 1 1521 3 view .LVU1164
1523:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
 3580              		.loc 1 1523 3 view .LVU1165
 3581              	.LBB511:
 3582              	.LBI511:
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccl1pJez.s 			page 145


 3583              		.loc 4 960 27 view .LVU1166
 3584              	.LBB512:
 3585              		.loc 4 962 3 view .LVU1167
 3586              		.syntax unified
 3587              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3588 0246 72B6     		cpsid i
 3589              	@ 0 "" 2
 3590              		.thumb
 3591              		.syntax unified
 3592              	.LBE512:
 3593              	.LBE511:
1524:Src/app.c     ****   assert(ret == HAL_OK);
 3594              		.loc 1 1524 3 view .LVU1168
1524:Src/app.c     ****   assert(ret == HAL_OK);
 3595              		.loc 1 1524 9 is_stmt 0 view .LVU1169
 3596 0248 0120     		movs	r0, #1
 3597 024a FFF7FEFF 		bl	SCRL_ReloadLayer
 3598              	.LVL307:
1525:Src/app.c     ****   __enable_irq();
 3599              		.loc 1 1525 3 is_stmt 1 view .LVU1170
 3600 024e 20B1     		cbz	r0, .L132
1525:Src/app.c     ****   __enable_irq();
 3601              		.loc 1 1525 3 is_stmt 0 discriminator 1 view .LVU1171
 3602 0250 40F2F551 		movw	r1, #1525
 3603 0254 124B     		ldr	r3, .L139+40
 3604 0256 1D4A     		ldr	r2, .L139+84
 3605 0258 03E7     		b	.L138
 3606              	.L132:
1526:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
 3607              		.loc 1 1526 3 is_stmt 1 view .LVU1172
 3608              	.LBB513:
 3609              	.LBI513:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3610              		.loc 4 949 27 view .LVU1173
 3611              	.LBB514:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3612              		.loc 4 951 3 view .LVU1174
 3613              		.syntax unified
 3614              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3615 025a 62B6     		cpsie i
 3616              	@ 0 "" 2
 3617              		.thumb
 3618              		.syntax unified
 3619              	.LBE514:
 3620              	.LBE513:
1527:Src/app.c     **** }
 3621              		.loc 1 1527 3 view .LVU1175
1527:Src/app.c     **** }
 3622              		.loc 1 1527 28 is_stmt 0 view .LVU1176
 3623 025c D9F80030 		ldr	r3, [r9]
 3624 0260 C3F10103 		rsb	r3, r3, #1
1527:Src/app.c     **** }
 3625              		.loc 1 1527 24 view .LVU1177
 3626 0264 C9F80030 		str	r3, [r9]
 3627              	.LVL308:
1527:Src/app.c     **** }
 3628              		.loc 1 1527 24 view .LVU1178
ARM GAS  /tmp/ccl1pJez.s 			page 146


 3629              	.LBE510:
 3630              	.LBE509:
1590:Src/app.c     ****   }
 3631              		.loc 1 1590 5 is_stmt 1 view .LVU1179
1590:Src/app.c     ****   }
 3632              		.loc 1 1590 15 is_stmt 0 view .LVU1180
 3633 0268 FFF7FEFF 		bl	HAL_GetTick
 3634              	.LVL309:
1590:Src/app.c     ****   }
 3635              		.loc 1 1590 13 discriminator 1 view .LVU1181
 3636 026c A0EB0A04 		sub	r4, r0, r10
 3637              	.LVL310:
1570:Src/app.c     ****   {
 3638              		.loc 1 1570 9 is_stmt 1 view .LVU1182
1572:Src/app.c     ****     assert(ret == pdTRUE);
 3639              		.loc 1 1572 9 is_stmt 0 view .LVU1183
 3640 0270 ECE6     		b	.L133
 3641              	.L140:
 3642 0272 00BFAFF3 		.align	3
 3642      0080
 3643              	.L139:
 3644 0278 00000000 		.word	0
 3645 027c 00005940 		.word	1079574528
 3646 0280 00000000 		.word	on_ld_toggle_button_click
 3647 0284 00000000 		.word	disp
 3648 0288 00000000 		.word	on_pd_toggle_button_click
 3649 028c 00000000 		.word	.LC1
 3650 0290 00000000 		.word	__func__.18
 3651 0294 0E000000 		.word	.LC2
 3652 0298 A8000000 		.word	disp+168
 3653 029c 00B80B00 		.word	768000
 3654 02a0 00000000 		.word	.LC18
 3655 02a4 00000000 		.word	__func__.14
 3656 02a8 00000000 		.word	cpu_load
 3657 02ac 00007A44 		.word	1148846080
 3658 02b0 0E000000 		.word	.LC19
 3659 02b4 17000000 		.word	.LC20
 3660 02b8 21000000 		.word	.LC21
 3661 02bc 2C000000 		.word	.LC22
 3662 02c0 36000000 		.word	.LC23
 3663 02c4 40000000 		.word	.LC24
 3664 02c8 00ED00E0 		.word	-536810240
 3665 02cc 00000000 		.word	__func__.13
 3666 02d0 00000000 		.word	lcd_fg_buffer_rd_idx
 3667 02d4 00180F00 		.word	lcd_fg_buffer
 3668              		.cfi_endproc
 3669              	.LFE7407:
 3671              		.section	.rodata.app_run.str1.1,"aMS",%progbits,1
 3672              	.LC25:
 3673 0000 496E6974 		.ascii	"Init application\000"
 3673      20617070 
 3673      6C696361 
 3673      74696F6E 
 3673      00
 3674              	.LC26:
 3675 0011 6973705F 		.ascii	"isp_sem\000"
 3675      73656D00 
ARM GAS  /tmp/ccl1pJez.s 			page 147


 3676              	.LC27:
 3677 0019 64697370 		.ascii	"disp.update\000"
 3677      2E757064 
 3677      61746500 
 3678              	.LC28:
 3679 0025 64697370 		.ascii	"disp.lock\000"
 3679      2E6C6F63 
 3679      6B00
 3680              	.LC29:
 3681 002f 6E6E00   		.ascii	"nn\000"
 3682              	.LC30:
 3683 0032 68646C20 		.ascii	"hdl != NULL\000"
 3683      213D204E 
 3683      554C4C00 
 3684              	.LC31:
 3685 003e 647000   		.ascii	"dp\000"
 3686              	.LC32:
 3687 0041 69737000 		.ascii	"isp\000"
 3688              		.section	.text.app_run,"ax",%progbits
 3689              		.align	1
 3690              		.global	app_run
 3691              		.syntax unified
 3692              		.thumb
 3693              		.thumb_func
 3695              	app_run:
 3696              	.LFB7410:
1603:Src/app.c     ****   }
1604:Src/app.c     **** }
1605:Src/app.c     **** 
1606:Src/app.c     **** static void Display_init()
1607:Src/app.c     **** {
1608:Src/app.c     ****   SCRL_LayerConfig layers_config[2] = {
1609:Src/app.c     ****     {
1610:Src/app.c     ****       .origin = {lcd_bg_area.X0, lcd_bg_area.Y0},
1611:Src/app.c     ****       .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1612:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1613:Src/app.c     ****       .format = SCRL_RGB888,
1614:Src/app.c     **** #else
1615:Src/app.c     ****       .format = SCRL_ARGB8888,
1616:Src/app.c     **** #endif
1617:Src/app.c     ****       .address = lcd_bg_buffer[lcd_bg_buffer_disp_idx],
1618:Src/app.c     ****     },
1619:Src/app.c     ****     {
1620:Src/app.c     ****       .origin = {lcd_fg_area.X0, lcd_fg_area.Y0},
1621:Src/app.c     ****       .size = {lcd_fg_area.XSize, lcd_fg_area.YSize},
1622:Src/app.c     ****       .format = SCRL_ARGB4444,
1623:Src/app.c     ****       .address = lcd_fg_buffer[1],
1624:Src/app.c     ****     },
1625:Src/app.c     ****   };
1626:Src/app.c     ****   SCRL_ScreenConfig screen_config = {
1627:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1628:Src/app.c     **** #ifdef SCR_LIB_USE_SPI
1629:Src/app.c     ****     .format = SCRL_RGB565,
1630:Src/app.c     **** #else
1631:Src/app.c     ****      .format = SCRL_YUV422, /* Use SCRL_RGB565 if host support this format to reduce cpu load */
1632:Src/app.c     **** #endif
1633:Src/app.c     ****     .address = screen_buffer,
ARM GAS  /tmp/ccl1pJez.s 			page 148


1634:Src/app.c     ****     .fps = CAMERA_FPS,
1635:Src/app.c     ****   };
1636:Src/app.c     ****   int ret;
1637:Src/app.c     **** 
1638:Src/app.c     ****   ret = SCRL_Init((SCRL_LayerConfig *[2]){&layers_config[0], &layers_config[1]}, &screen_config);
1639:Src/app.c     ****   assert(ret == 0);
1640:Src/app.c     **** 
1641:Src/app.c     ****   UTIL_LCD_SetLayer(SCRL_LAYER_1);
1642:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
1643:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
1644:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
1645:Src/app.c     **** }
1646:Src/app.c     **** 
1647:Src/app.c     **** void app_run()
1648:Src/app.c     **** {
 3697              		.loc 1 1648 1 is_stmt 1 view -0
 3698              		.cfi_startproc
 3699              		@ args = 0, pretend = 0, frame = 56
 3700              		@ frame_needed = 0, uses_anonymous_args = 0
1649:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3701              		.loc 1 1649 3 view .LVU1185
 3702              	.LVL311:
1650:Src/app.c     ****   UBaseType_t dp_priority = FREERTOS_PRIORITY(-2);
 3703              		.loc 1 1650 3 view .LVU1186
1651:Src/app.c     ****   UBaseType_t nn_priority = FREERTOS_PRIORITY(1);
 3704              		.loc 1 1651 3 view .LVU1187
1652:Src/app.c     ****   TaskHandle_t hdl;
 3705              		.loc 1 1652 3 view .LVU1188
1653:Src/app.c     ****   int ret;
 3706              		.loc 1 1653 3 view .LVU1189
1654:Src/app.c     **** 
1655:Src/app.c     ****   printf("Init application\n");
 3707              		.loc 1 1655 3 view .LVU1190
1648:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3708              		.loc 1 1648 1 is_stmt 0 view .LVU1191
 3709 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3710              		.cfi_def_cfa_offset 28
 3711              		.cfi_offset 4, -28
 3712              		.cfi_offset 5, -24
 3713              		.cfi_offset 6, -20
 3714              		.cfi_offset 7, -16
 3715              		.cfi_offset 8, -12
 3716              		.cfi_offset 9, -8
 3717              		.cfi_offset 14, -4
1656:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
1657:Src/app.c     ****   CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 3718              		.loc 1 1657 12 view .LVU1192
 3719 0004 854D     		ldr	r5, .L161
1648:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3720              		.loc 1 1648 1 view .LVU1193
 3721 0006 93B0     		sub	sp, sp, #76
 3722              		.cfi_def_cfa_offset 104
1655:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
 3723              		.loc 1 1655 3 view .LVU1194
 3724 0008 8548     		ldr	r0, .L161+4
 3725 000a FFF7FEFF 		bl	puts
 3726              	.LVL312:
ARM GAS  /tmp/ccl1pJez.s 			page 149


 3727              		.loc 1 1657 3 is_stmt 1 view .LVU1195
 3728              		.loc 1 1657 12 is_stmt 0 view .LVU1196
 3729 000e D5F8FC30 		ldr	r3, [r5, #252]
1658:Src/app.c     **** 
1659:Src/app.c     ****   /* screen init */
1660:Src/app.c     ****   memset(lcd_bg_buffer, 0, sizeof(lcd_bg_buffer));
 3730              		.loc 1 1660 3 view .LVU1197
 3731 0012 844C     		ldr	r4, .L161+8
1657:Src/app.c     **** 
 3732              		.loc 1 1657 20 view .LVU1198
 3733 0014 43F08073 		orr	r3, r3, #16777216
 3734              		.loc 1 1660 3 view .LVU1199
 3735 0018 0021     		movs	r1, #0
 3736 001a 2046     		mov	r0, r4
 3737 001c 824A     		ldr	r2, .L161+12
1657:Src/app.c     **** 
 3738              		.loc 1 1657 20 view .LVU1200
 3739 001e C5F8FC30 		str	r3, [r5, #252]
 3740              		.loc 1 1660 3 is_stmt 1 view .LVU1201
 3741 0022 FFF7FEFF 		bl	memset
 3742              	.LVL313:
1661:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_bg_buffer, sizeof(lcd_bg_buffer)));
 3743              		.loc 1 1661 3 view .LVU1202
 3744              		.loc 1 1661 3 view .LVU1203
 3745              		.loc 1 1661 3 discriminator 1 view .LVU1204
 3746              	.LBB537:
 3747              	.LBI537:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3748              		.loc 3 418 27 view .LVU1205
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3749              		.loc 3 421 5 view .LVU1206
 3750              	.LBB538:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3751              		.loc 3 422 8 view .LVU1207
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3752              		.loc 3 423 7 view .LVU1208
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3753              		.loc 3 425 7 view .LVU1209
 3754              	.LBB539:
 3755              	.LBI539:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3756              		.loc 4 269 27 view .LVU1210
 3757              	.LBB540:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3758              		.loc 4 271 3 view .LVU1211
 3759              		.syntax unified
 3760              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3761 0026 BFF34F8F 		dsb 0xF
 3762              	@ 0 "" 2
 3763              		.thumb
 3764              		.syntax unified
 3765              	.LBE540:
 3766              	.LBE539:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3767              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1212
 3768 002a DFF880E2 		ldr	lr, .L161+144
 3769              	.LBB542:
ARM GAS  /tmp/ccl1pJez.s 			page 150


 3770              	.LBB541:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3771              		.loc 4 272 1 view .LVU1213
 3772 002e 0023     		movs	r3, #0
 3773              	.LBE541:
 3774              	.LBE542:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3775              		.loc 3 431 25 discriminator 1 view .LVU1214
 3776 0030 4EF001E0 		dls	lr, lr
 3777              	.LVL314:
 3778              	.L142:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3779              		.loc 3 431 25 discriminator 1 view .LVU1215
 3780 0034 E218     		adds	r2, r4, r3
 3781              	.LVL315:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 3782              		.loc 3 427 7 is_stmt 1 view .LVU1216
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3783              		.loc 3 428 9 view .LVU1217
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3784              		.loc 3 428 23 is_stmt 0 view .LVU1218
 3785 0036 C5F87022 		str	r2, [r5, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 3786              		.loc 3 429 9 is_stmt 1 view .LVU1219
 3787              	.LVL316:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3788              		.loc 3 430 9 view .LVU1220
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3789              		.loc 3 431 25 discriminator 1 view .LVU1221
 3790 003a 2033     		adds	r3, r3, #32
 3791              	.LVL317:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3792              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1222
 3793 003c 0FF007C0 		le	lr, .L142
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3794              		.loc 3 433 7 is_stmt 1 view .LVU1223
 3795              	.LBB543:
 3796              	.LBI543:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3797              		.loc 4 269 27 view .LVU1224
 3798              	.LBB544:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3799              		.loc 4 271 3 view .LVU1225
 3800              		.syntax unified
 3801              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3802 0040 BFF34F8F 		dsb 0xF
 3803              	@ 0 "" 2
 3804              		.thumb
 3805              		.syntax unified
 3806              	.LBE544:
 3807              	.LBE543:
 3808              		.loc 3 434 7 view .LVU1226
 3809              	.LBB545:
 3810              	.LBI545:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3811              		.loc 4 258 27 view .LVU1227
 3812              	.LBB546:
ARM GAS  /tmp/ccl1pJez.s 			page 151


 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3813              		.loc 4 260 3 view .LVU1228
 3814              		.syntax unified
 3815              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3816 0044 BFF36F8F 		isb 0xF
 3817              	@ 0 "" 2
 3818              	.LVL318:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3819              		.loc 4 260 3 is_stmt 0 view .LVU1229
 3820              		.thumb
 3821              		.syntax unified
 3822              	.LBE546:
 3823              	.LBE545:
 3824              	.LBE538:
 3825              	.LBE537:
 3826              		.loc 1 1661 3 is_stmt 1 discriminator 3 view .LVU1230
1662:Src/app.c     ****   memset(lcd_fg_buffer, 0, sizeof(lcd_fg_buffer));
 3827              		.loc 1 1662 3 view .LVU1231
 3828 0048 784D     		ldr	r5, .L161+16
 3829 004a 0021     		movs	r1, #0
 3830 004c 2846     		mov	r0, r5
 3831 004e 784A     		ldr	r2, .L161+20
 3832 0050 FFF7FEFF 		bl	memset
 3833              	.LVL319:
1663:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_fg_buffer, sizeof(lcd_fg_buffer)));
 3834              		.loc 1 1663 3 view .LVU1232
 3835              		.loc 1 1663 3 view .LVU1233
 3836              		.loc 1 1663 3 discriminator 1 view .LVU1234
 3837              	.LBB547:
 3838              	.LBI547:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3839              		.loc 3 418 27 view .LVU1235
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3840              		.loc 3 421 5 view .LVU1236
 3841              	.LBB548:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3842              		.loc 3 422 8 view .LVU1237
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3843              		.loc 3 423 7 view .LVU1238
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3844              		.loc 3 425 7 view .LVU1239
 3845              	.LBB549:
 3846              	.LBI549:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3847              		.loc 4 269 27 view .LVU1240
 3848              	.LBB550:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3849              		.loc 4 271 3 view .LVU1241
 3850              		.syntax unified
 3851              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3852 0054 BFF34F8F 		dsb 0xF
 3853              	@ 0 "" 2
 3854              		.thumb
 3855              		.syntax unified
 3856              	.LBE550:
 3857              	.LBE549:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/ccl1pJez.s 			page 152


 3858              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1242
 3859 0058 4BF6803E 		movw	lr, #48000
 3860              	.LBB552:
 3861              	.LBB551:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3862              		.loc 4 272 1 view .LVU1243
 3863 005c 0023     		movs	r3, #0
 3864              	.LBE551:
 3865              	.LBE552:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3866              		.loc 3 431 25 discriminator 1 view .LVU1244
 3867 005e 4EF001E0 		dls	lr, lr
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3868              		.loc 3 428 23 view .LVU1245
 3869 0062 6E4A     		ldr	r2, .L161
 3870              	.LVL320:
 3871              	.L143:
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3872              		.loc 3 428 23 view .LVU1246
 3873 0064 E918     		adds	r1, r5, r3
 3874              	.LVL321:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 3875              		.loc 3 427 7 is_stmt 1 view .LVU1247
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3876              		.loc 3 428 9 view .LVU1248
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3877              		.loc 3 428 23 is_stmt 0 view .LVU1249
 3878 0066 C2F87012 		str	r1, [r2, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 3879              		.loc 3 429 9 is_stmt 1 view .LVU1250
 3880              	.LVL322:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3881              		.loc 3 430 9 view .LVU1251
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3882              		.loc 3 431 25 discriminator 1 view .LVU1252
 3883 006a 2033     		adds	r3, r3, #32
 3884              	.LVL323:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3885              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1253
 3886 006c 0FF007C0 		le	lr, .L143
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3887              		.loc 3 433 7 is_stmt 1 view .LVU1254
 3888              	.LBB553:
 3889              	.LBI553:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3890              		.loc 4 269 27 view .LVU1255
 3891              	.LBB554:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3892              		.loc 4 271 3 view .LVU1256
 3893              		.syntax unified
 3894              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3895 0070 BFF34F8F 		dsb 0xF
 3896              	@ 0 "" 2
 3897              		.thumb
 3898              		.syntax unified
 3899              	.LBE554:
 3900              	.LBE553:
ARM GAS  /tmp/ccl1pJez.s 			page 153


 3901              		.loc 3 434 7 view .LVU1257
 3902              	.LBB555:
 3903              	.LBI555:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3904              		.loc 4 258 27 view .LVU1258
 3905              	.LBB556:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3906              		.loc 4 260 3 view .LVU1259
 3907              		.syntax unified
 3908              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3909 0074 BFF36F8F 		isb 0xF
 3910              	@ 0 "" 2
 3911              	.LVL324:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3912              		.loc 4 260 3 is_stmt 0 view .LVU1260
 3913              		.thumb
 3914              		.syntax unified
 3915              	.LBE556:
 3916              	.LBE555:
 3917              	.LBE548:
 3918              	.LBE547:
 3919              		.loc 1 1663 3 is_stmt 1 discriminator 3 view .LVU1261
1664:Src/app.c     ****   Display_init();
 3920              		.loc 1 1664 3 view .LVU1262
 3921              	.LBB557:
 3922              	.LBI557:
1606:Src/app.c     **** {
 3923              		.loc 1 1606 13 view .LVU1263
 3924              	.LBB558:
1608:Src/app.c     ****     {
 3925              		.loc 1 1608 3 view .LVU1264
1608:Src/app.c     ****     {
 3926              		.loc 1 1608 20 is_stmt 0 view .LVU1265
 3927 0078 0320     		movs	r0, #3
 3928 007a 0021     		movs	r1, #0
 3929 007c 0126     		movs	r6, #1
1626:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3930              		.loc 1 1626 21 view .LVU1266
 3931 007e 0227     		movs	r7, #2
 3932 0080 4FF01E09 		mov	r9, #30
1608:Src/app.c     ****     {
 3933              		.loc 1 1608 20 view .LVU1267
 3934 0084 8DF83000 		strb	r0, [sp, #48]
1617:Src/app.c     ****     },
 3935              		.loc 1 1617 31 view .LVU1268
 3936 0088 6A48     		ldr	r0, .L161+24
1608:Src/app.c     ****     {
 3937              		.loc 1 1608 20 view .LVU1269
 3938 008a 6B4A     		ldr	r2, .L161+28
1617:Src/app.c     ****     },
 3939              		.loc 1 1617 18 view .LVU1270
 3940 008c 0068     		ldr	r0, [r0]
1608:Src/app.c     ****     {
 3941              		.loc 1 1608 20 view .LVU1271
 3942 008e CDE90A12 		strd	r1, r2, [sp, #40]
1617:Src/app.c     ****     },
 3943              		.loc 1 1617 18 view .LVU1272
ARM GAS  /tmp/ccl1pJez.s 			page 154


 3944 0092 03FB0044 		mla	r4, r3, r0, r4
1608:Src/app.c     ****     {
 3945              		.loc 1 1608 20 view .LVU1273
 3946 0096 694B     		ldr	r3, .L161+32
 3947 0098 CDE90D41 		strd	r4, r1, [sp, #52]
 3948 009c 1193     		str	r3, [sp, #68]
1626:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3949              		.loc 1 1626 3 is_stmt 1 view .LVU1274
1626:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3950              		.loc 1 1626 21 is_stmt 0 view .LVU1275
 3951 009e 684B     		ldr	r3, .L161+36
1638:Src/app.c     ****   assert(ret == 0);
 3952              		.loc 1 1638 9 view .LVU1276
 3953 00a0 06A9     		add	r1, sp, #24
1626:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3954              		.loc 1 1626 21 view .LVU1277
 3955 00a2 0893     		str	r3, [sp, #32]
1638:Src/app.c     ****   assert(ret == 0);
 3956              		.loc 1 1638 42 view .LVU1278
 3957 00a4 0AAB     		add	r3, sp, #40
 3958 00a6 0493     		str	r3, [sp, #16]
1638:Src/app.c     ****   assert(ret == 0);
 3959              		.loc 1 1638 9 view .LVU1279
 3960 00a8 04A8     		add	r0, sp, #16
1638:Src/app.c     ****   assert(ret == 0);
 3961              		.loc 1 1638 42 view .LVU1280
 3962 00aa 0EAB     		add	r3, sp, #56
1608:Src/app.c     ****     {
 3963              		.loc 1 1608 20 view .LVU1281
 3964 00ac 0F92     		str	r2, [sp, #60]
 3965 00ae 8DF84060 		strb	r6, [sp, #64]
1626:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3966              		.loc 1 1626 21 view .LVU1282
 3967 00b2 0692     		str	r2, [sp, #24]
 3968 00b4 8DF81C70 		strb	r7, [sp, #28]
 3969 00b8 ADF82490 		strh	r9, [sp, #36]	@ movhi
1636:Src/app.c     **** 
 3970              		.loc 1 1636 3 is_stmt 1 view .LVU1283
1638:Src/app.c     ****   assert(ret == 0);
 3971              		.loc 1 1638 3 view .LVU1284
1638:Src/app.c     ****   assert(ret == 0);
 3972              		.loc 1 1638 42 is_stmt 0 view .LVU1285
 3973 00bc 0593     		str	r3, [sp, #20]
1638:Src/app.c     ****   assert(ret == 0);
 3974              		.loc 1 1638 9 view .LVU1286
 3975 00be FFF7FEFF 		bl	SCRL_Init
 3976              	.LVL325:
1639:Src/app.c     **** 
 3977              		.loc 1 1639 3 is_stmt 1 view .LVU1287
 3978 00c2 0446     		mov	r4, r0
 3979 00c4 30B1     		cbz	r0, .L144
1639:Src/app.c     **** 
 3980              		.loc 1 1639 3 is_stmt 0 discriminator 1 view .LVU1288
 3981 00c6 40F26761 		movw	r1, #1639
 3982 00ca 5E4B     		ldr	r3, .L161+40
 3983 00cc 5E4A     		ldr	r2, .L161+44
 3984              	.LVL326:
ARM GAS  /tmp/ccl1pJez.s 			page 155


 3985              	.L160:
1639:Src/app.c     **** 
 3986              		.loc 1 1639 3 discriminator 1 view .LVU1289
 3987              	.LBE558:
 3988              	.LBE557:
1665:Src/app.c     **** 
1666:Src/app.c     ****   /* create buffer queues */
1667:Src/app.c     ****   ret = bqueue_init(&nn_input_queue, 2, (uint8_t *[2]){nn_input_buffers[0], nn_input_buffers[1]});
1668:Src/app.c     ****   assert(ret == 0);
 3989              		.loc 1 1668 3 discriminator 1 view .LVU1290
 3990 00ce 5F48     		ldr	r0, .L161+48
 3991 00d0 FFF7FEFF 		bl	__assert_func
 3992              	.LVL327:
 3993              	.L144:
 3994              	.LBB561:
 3995              	.LBB559:
1641:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 3996              		.loc 1 1641 3 is_stmt 1 view .LVU1291
 3997 00d4 3046     		mov	r0, r6
 3998              	.LVL328:
1641:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 3999              		.loc 1 1641 3 is_stmt 0 view .LVU1292
 4000 00d6 FFF7FEFF 		bl	UTIL_LCD_SetLayer
 4001              	.LVL329:
1642:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
 4002              		.loc 1 1642 3 is_stmt 1 view .LVU1293
 4003 00da 2046     		mov	r0, r4
 4004 00dc FFF7FEFF 		bl	UTIL_LCD_Clear
 4005              	.LVL330:
1643:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 4006              		.loc 1 1643 3 view .LVU1294
 4007              	.LBE559:
 4008              	.LBE561:
 4009              	.LBB562:
 4010              	.LBB563:
 456:Src/app.c     ****   if (!bq->free)
 4011              		.loc 1 456 14 is_stmt 0 view .LVU1295
 4012 00e0 DFF8CC81 		ldr	r8, .L161+148
 4013              	.LBE563:
 4014              	.LBE562:
 4015              	.LBB568:
 4016              	.LBB560:
1643:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 4017              		.loc 1 1643 3 view .LVU1296
 4018 00e4 5A48     		ldr	r0, .L161+52
 4019 00e6 FFF7FEFF 		bl	UTIL_LCD_SetFont
 4020              	.LVL331:
1644:Src/app.c     **** }
 4021              		.loc 1 1644 3 is_stmt 1 view .LVU1297
 4022 00ea 4FF0FF30 		mov	r0, #-1
 4023 00ee FFF7FEFF 		bl	UTIL_LCD_SetTextColor
 4024              	.LVL332:
1644:Src/app.c     **** }
 4025              		.loc 1 1644 3 is_stmt 0 view .LVU1298
 4026              	.LBE560:
 4027              	.LBE568:
1667:Src/app.c     ****   assert(ret == 0);
ARM GAS  /tmp/ccl1pJez.s 			page 156


 4028              		.loc 1 1667 3 is_stmt 1 view .LVU1299
 4029              	.LBB569:
 4030              	.LBI562:
 449:Src/app.c     **** {
 4031              		.loc 1 449 12 view .LVU1300
 4032              	.LBB564:
 451:Src/app.c     **** 
 4033              		.loc 1 451 3 view .LVU1301
 453:Src/app.c     ****     return -1;
 4034              		.loc 1 453 3 view .LVU1302
 456:Src/app.c     ****   if (!bq->free)
 4035              		.loc 1 456 3 view .LVU1303
 456:Src/app.c     ****   if (!bq->free)
 4036              		.loc 1 456 14 is_stmt 0 view .LVU1304
 4037 00f2 4246     		mov	r2, r8
 4038 00f4 3946     		mov	r1, r7
 4039 00f6 3846     		mov	r0, r7
 4040 00f8 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4041              	.LVL333:
 456:Src/app.c     ****   if (!bq->free)
 4042              		.loc 1 456 12 discriminator 1 view .LVU1305
 4043 00fc A8F10405 		sub	r5, r8, #4
 4044 0100 48F8040C 		str	r0, [r8, #-4]
 457:Src/app.c     ****     goto free_sem_error;
 4045              		.loc 1 457 3 is_stmt 1 view .LVU1306
 457:Src/app.c     ****     goto free_sem_error;
 4046              		.loc 1 457 6 is_stmt 0 view .LVU1307
 4047 0104 58B1     		cbz	r0, .L145
 459:Src/app.c     ****   if (!bq->ready)
 4048              		.loc 1 459 3 is_stmt 1 view .LVU1308
 459:Src/app.c     ****   if (!bq->ready)
 4049              		.loc 1 459 15 is_stmt 0 view .LVU1309
 4050 0106 2146     		mov	r1, r4
 4051 0108 3846     		mov	r0, r7
 4052 010a 08F15402 		add	r2, r8, #84
 4053 010e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4054              	.LVL334:
 459:Src/app.c     ****   if (!bq->ready)
 4055              		.loc 1 459 13 discriminator 1 view .LVU1310
 4056 0112 6865     		str	r0, [r5, #84]
 460:Src/app.c     ****     goto ready_sem_error;
 4057              		.loc 1 460 3 is_stmt 1 view .LVU1311
 460:Src/app.c     ****     goto ready_sem_error;
 4058              		.loc 1 460 6 is_stmt 0 view .LVU1312
 4059 0114 40B9     		cbnz	r0, .L146
 461:Src/app.c     **** 
 4060              		.loc 1 461 5 is_stmt 1 view .LVU1313
 4061              	.LDL1:
 474:Src/app.c     **** free_sem_error:
 4062              		.loc 1 474 3 view .LVU1314
 4063 0116 58F8040C 		ldr	r0, [r8, #-4]
 4064 011a FFF7FEFF 		bl	vQueueDelete
 4065              	.LVL335:
 474:Src/app.c     **** free_sem_error:
 4066              		.loc 1 474 3 is_stmt 0 view .LVU1315
 4067              	.LBE564:
 4068              	.LBE569:
ARM GAS  /tmp/ccl1pJez.s 			page 157


 4069              		.loc 1 1668 3 is_stmt 1 view .LVU1316
 4070              	.L145:
 4071              		.loc 1 1668 3 is_stmt 0 discriminator 1 view .LVU1317
 4072 011e 40F28461 		movw	r1, #1668
 4073 0122 484B     		ldr	r3, .L161+40
 4074 0124 4B4A     		ldr	r2, .L161+56
 4075 0126 D2E7     		b	.L160
 4076              	.LVL336:
 4077              	.L146:
 4078              	.LBB570:
 4079              	.LBB565:
 463:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 4080              		.loc 1 463 3 is_stmt 1 view .LVU1318
 466:Src/app.c     ****   }
 4081              		.loc 1 466 20 is_stmt 0 view .LVU1319
 4082 0128 4B4B     		ldr	r3, .L161+60
 4083              	.LBE565:
 4084              	.LBE570:
 4085              	.LBB571:
 4086              	.LBB572:
 416:Src/app.c     **** }
 4087              		.loc 1 416 3 view .LVU1320
 4088 012a E022     		movs	r2, #224
 4089 012c 2146     		mov	r1, r4
 4090              	.LBE572:
 4091              	.LBE571:
 4092              	.LBB575:
 4093              	.LBB566:
 466:Src/app.c     ****   }
 4094              		.loc 1 466 20 view .LVU1321
 4095 012e C5F8AC30 		str	r3, [r5, #172]
 4096              	.LBE566:
 4097              	.LBE575:
 4098              	.LBB576:
 4099              	.LBB573:
 416:Src/app.c     **** }
 4100              		.loc 1 416 3 view .LVU1322
 4101 0132 4A48     		ldr	r0, .L161+64
 4102              	.LBE573:
 4103              	.LBE576:
 4104              	.LBB577:
 4105              	.LBB567:
 466:Src/app.c     ****   }
 4106              		.loc 1 466 20 view .LVU1323
 4107 0134 03F5D833 		add	r3, r3, #110592
 468:Src/app.c     ****   bq->ready_idx = 0;
 4108              		.loc 1 468 16 view .LVU1324
 4109 0138 C5E92C34 		strd	r3, r4, [r5, #176]
 463:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 4110              		.loc 1 463 17 view .LVU1325
 4111 013c C5F8A870 		str	r7, [r5, #168]
 464:Src/app.c     ****     assert(buffers[i]);
 4112              		.loc 1 464 3 is_stmt 1 view .LVU1326
 4113              	.LVL337:
 464:Src/app.c     ****     assert(buffers[i]);
 4114              		.loc 1 464 17 discriminator 1 view .LVU1327
 465:Src/app.c     ****     bq->buffers[i] = buffers[i];
ARM GAS  /tmp/ccl1pJez.s 			page 158


 4115              		.loc 1 465 5 view .LVU1328
 466:Src/app.c     ****   }
 4116              		.loc 1 466 5 view .LVU1329
 464:Src/app.c     ****     assert(buffers[i]);
 4117              		.loc 1 464 31 discriminator 2 view .LVU1330
 464:Src/app.c     ****     assert(buffers[i]);
 4118              		.loc 1 464 17 discriminator 1 view .LVU1331
 465:Src/app.c     ****     bq->buffers[i] = buffers[i];
 4119              		.loc 1 465 5 view .LVU1332
 466:Src/app.c     ****   }
 4120              		.loc 1 466 5 view .LVU1333
 469:Src/app.c     **** 
 4121              		.loc 1 469 3 view .LVU1334
 469:Src/app.c     **** 
 4122              		.loc 1 469 17 is_stmt 0 view .LVU1335
 4123 0140 C5F8B840 		str	r4, [r5, #184]
 471:Src/app.c     **** 
 4124              		.loc 1 471 3 is_stmt 1 view .LVU1336
 4125              	.LVL338:
 471:Src/app.c     **** 
 4126              		.loc 1 471 3 is_stmt 0 view .LVU1337
 4127              	.LBE567:
 4128              	.LBE577:
 4129              		.loc 1 1668 3 is_stmt 1 view .LVU1338
1669:Src/app.c     **** 
1670:Src/app.c     ****   cpuload_init(&cpu_load);
 4130              		.loc 1 1670 3 view .LVU1339
 4131              	.LBB578:
 4132              	.LBI571:
 414:Src/app.c     **** {
 4133              		.loc 1 414 13 view .LVU1340
 4134              	.LBB574:
 416:Src/app.c     **** }
 4135              		.loc 1 416 3 view .LVU1341
 4136 0144 FFF7FEFF 		bl	memset
 4137              	.LVL339:
 416:Src/app.c     **** }
 4138              		.loc 1 416 3 is_stmt 0 view .LVU1342
 4139              	.LBE574:
 4140              	.LBE578:
1671:Src/app.c     **** 
1672:Src/app.c     ****   /*** Camera Init ************************************************************/  
1673:Src/app.c     ****   CAM_Init();
 4141              		.loc 1 1673 3 is_stmt 1 view .LVU1343
 4142 0148 FFF7FEFF 		bl	CAM_Init
 4143              	.LVL340:
1674:Src/app.c     **** 
1675:Src/app.c     ****   /* sems + mutex init */
1676:Src/app.c     ****   isp_sem = xSemaphoreCreateCountingStatic(1, 0, &isp_sem_buffer);
 4144              		.loc 1 1676 3 view .LVU1344
 4145              		.loc 1 1676 13 is_stmt 0 view .LVU1345
 4146 014c 2146     		mov	r1, r4
 4147 014e 3046     		mov	r0, r6
 4148 0150 434A     		ldr	r2, .L161+68
 4149 0152 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4150              	.LVL341:
 4151              		.loc 1 1676 11 discriminator 1 view .LVU1346
ARM GAS  /tmp/ccl1pJez.s 			page 159


 4152 0156 434B     		ldr	r3, .L161+72
 4153 0158 1860     		str	r0, [r3]
1677:Src/app.c     ****   assert(isp_sem);
 4154              		.loc 1 1677 3 is_stmt 1 view .LVU1347
 4155 015a 20B9     		cbnz	r0, .L159
 4156              		.loc 1 1677 3 is_stmt 0 discriminator 1 view .LVU1348
 4157 015c 40F28D61 		movw	r1, #1677
 4158 0160 414B     		ldr	r3, .L161+76
 4159 0162 3C4A     		ldr	r2, .L161+56
 4160 0164 B3E7     		b	.L160
 4161              	.L159:
1678:Src/app.c     ****   disp.update = xSemaphoreCreateCountingStatic(1, 0, &disp.update_buffer);
 4162              		.loc 1 1678 3 is_stmt 1 view .LVU1349
 4163              		.loc 1 1678 17 is_stmt 0 view .LVU1350
 4164 0166 414D     		ldr	r5, .L161+80
 4165 0168 2146     		mov	r1, r4
 4166 016a 2A46     		mov	r2, r5
 4167 016c 3046     		mov	r0, r6
 4168 016e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4169              	.LVL342:
 4170              		.loc 1 1678 15 discriminator 1 view .LVU1351
 4171 0172 2F1F     		subs	r7, r5, #4
 4172 0174 45F8040C 		str	r0, [r5, #-4]
1679:Src/app.c     ****   assert(disp.update);
 4173              		.loc 1 1679 3 is_stmt 1 view .LVU1352
 4174 0178 20B9     		cbnz	r0, .L149
 4175              		.loc 1 1679 3 is_stmt 0 discriminator 1 view .LVU1353
 4176 017a 40F28F61 		movw	r1, #1679
 4177 017e 3C4B     		ldr	r3, .L161+84
 4178 0180 344A     		ldr	r2, .L161+56
 4179 0182 A4E7     		b	.L160
 4180              	.L149:
1680:Src/app.c     ****   disp.lock = xSemaphoreCreateMutexStatic(&disp.lock_buffer);
 4181              		.loc 1 1680 3 is_stmt 1 view .LVU1354
 4182              		.loc 1 1680 15 is_stmt 0 view .LVU1355
 4183 0184 3046     		mov	r0, r6
 4184 0186 05F15401 		add	r1, r5, #84
 4185 018a FFF7FEFF 		bl	xQueueCreateMutexStatic
 4186              	.LVL343:
 4187              		.loc 1 1680 13 discriminator 1 view .LVU1356
 4188 018e 7865     		str	r0, [r7, #84]
1681:Src/app.c     ****   assert(disp.lock);
 4189              		.loc 1 1681 3 is_stmt 1 view .LVU1357
 4190 0190 20B9     		cbnz	r0, .L150
 4191              		.loc 1 1681 3 is_stmt 0 discriminator 1 view .LVU1358
 4192 0192 40F29161 		movw	r1, #1681
 4193 0196 374B     		ldr	r3, .L161+88
 4194 0198 2E4A     		ldr	r2, .L161+56
 4195 019a 98E7     		b	.L160
 4196              	.L150:
1682:Src/app.c     **** 
1683:Src/app.c     ****   /* Start LCD Display camera pipe stream */
1684:Src/app.c     ****   CAM_DisplayPipe_Start(lcd_bg_buffer[0], CMW_MODE_CONTINUOUS);
 4197              		.loc 1 1684 3 is_stmt 1 view .LVU1359
 4198 019c 2146     		mov	r1, r4
 4199 019e 2148     		ldr	r0, .L161+8
 4200 01a0 FFF7FEFF 		bl	CAM_DisplayPipe_Start
ARM GAS  /tmp/ccl1pJez.s 			page 160


 4201              	.LVL344:
1685:Src/app.c     **** 
1686:Src/app.c     ****   /* threads init */
1687:Src/app.c     ****   hdl = xTaskCreateStatic(nn_thread_fct, "nn", configMINIMAL_STACK_SIZE * 4, NULL, nn_priority, nn_
 4202              		.loc 1 1687 3 view .LVU1360
 4203              		.loc 1 1687 9 is_stmt 0 view .LVU1361
 4204 01a4 344B     		ldr	r3, .L161+92
 4205 01a6 4FF48052 		mov	r2, #4096
 4206 01aa 0293     		str	r3, [sp, #8]
 4207 01ac 334B     		ldr	r3, .L161+96
 4208 01ae 3449     		ldr	r1, .L161+100
 4209 01b0 0193     		str	r3, [sp, #4]
 4210 01b2 1D23     		movs	r3, #29
 4211 01b4 3348     		ldr	r0, .L161+104
 4212 01b6 0093     		str	r3, [sp]
 4213 01b8 2346     		mov	r3, r4
 4214 01ba FFF7FEFF 		bl	xTaskCreateStatic
 4215              	.LVL345:
1688:Src/app.c     ****                           &nn_thread);
1689:Src/app.c     ****   assert(hdl != NULL);
 4216              		.loc 1 1689 3 is_stmt 1 view .LVU1362
 4217 01be 20B9     		cbnz	r0, .L151
 4218              		.loc 1 1689 3 is_stmt 0 discriminator 1 view .LVU1363
 4219 01c0 40F29961 		movw	r1, #1689
 4220 01c4 304B     		ldr	r3, .L161+108
 4221 01c6 234A     		ldr	r2, .L161+56
 4222 01c8 81E7     		b	.L160
 4223              	.L151:
1690:Src/app.c     ****   hdl = xTaskCreateStatic(dp_thread_fct, "dp", configMINIMAL_STACK_SIZE * 2, NULL, dp_priority, dp_
 4224              		.loc 1 1690 3 is_stmt 1 view .LVU1364
 4225              		.loc 1 1690 9 is_stmt 0 view .LVU1365
 4226 01ca 304B     		ldr	r3, .L161+112
 4227 01cc 4FF40062 		mov	r2, #2048
 4228 01d0 0293     		str	r3, [sp, #8]
 4229 01d2 2F4B     		ldr	r3, .L161+116
 4230 01d4 2F49     		ldr	r1, .L161+120
 4231 01d6 0193     		str	r3, [sp, #4]
 4232 01d8 1A23     		movs	r3, #26
 4233 01da 2F48     		ldr	r0, .L161+124
 4234              	.LVL346:
 4235              		.loc 1 1690 9 view .LVU1366
 4236 01dc 0093     		str	r3, [sp]
 4237 01de 2346     		mov	r3, r4
 4238 01e0 FFF7FEFF 		bl	xTaskCreateStatic
 4239              	.LVL347:
1691:Src/app.c     ****                           &dp_thread);
1692:Src/app.c     ****   assert(hdl != NULL);
 4240              		.loc 1 1692 3 is_stmt 1 view .LVU1367
 4241 01e4 20B9     		cbnz	r0, .L152
 4242              		.loc 1 1692 3 is_stmt 0 discriminator 1 view .LVU1368
 4243 01e6 40F29C61 		movw	r1, #1692
 4244 01ea 274B     		ldr	r3, .L161+108
 4245 01ec 194A     		ldr	r2, .L161+56
 4246 01ee 6EE7     		b	.L160
 4247              	.L152:
1693:Src/app.c     ****   hdl = xTaskCreateStatic(isp_thread_fct, "isp", configMINIMAL_STACK_SIZE * 2, NULL, isp_priority, 
 4248              		.loc 1 1693 3 is_stmt 1 view .LVU1369
ARM GAS  /tmp/ccl1pJez.s 			page 161


 4249              		.loc 1 1693 9 is_stmt 0 view .LVU1370
 4250 01f0 2A4B     		ldr	r3, .L161+128
 4251 01f2 4FF40062 		mov	r2, #2048
 4252 01f6 0293     		str	r3, [sp, #8]
 4253 01f8 294B     		ldr	r3, .L161+132
 4254 01fa 2A49     		ldr	r1, .L161+136
 4255 01fc CDE90093 		strd	r9, r3, [sp]
 4256 0200 2948     		ldr	r0, .L161+140
 4257              	.LVL348:
 4258              		.loc 1 1693 9 view .LVU1371
 4259 0202 2346     		mov	r3, r4
 4260 0204 FFF7FEFF 		bl	xTaskCreateStatic
 4261              	.LVL349:
1694:Src/app.c     ****                           &isp_thread);
1695:Src/app.c     ****   assert(hdl != NULL);
 4262              		.loc 1 1695 3 is_stmt 1 view .LVU1372
 4263 0208 20B9     		cbnz	r0, .L141
 4264              		.loc 1 1695 3 is_stmt 0 discriminator 1 view .LVU1373
 4265 020a 40F29F61 		movw	r1, #1695
 4266 020e 1E4B     		ldr	r3, .L161+108
 4267 0210 104A     		ldr	r2, .L161+56
 4268 0212 5CE7     		b	.L160
 4269              	.L141:
1696:Src/app.c     **** }
 4270              		.loc 1 1696 1 view .LVU1374
 4271 0214 13B0     		add	sp, sp, #76
 4272              		.cfi_def_cfa_offset 28
 4273              		@ sp needed
 4274 0216 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4275              	.L162:
 4276 021a 00BF     		.align	2
 4277              	.L161:
 4278 021c 00ED00E0 		.word	-536810240
 4279 0220 00000000 		.word	.LC25
 4280 0224 00882600 		.word	lcd_bg_buffer
 4281 0228 00C05D00 		.word	6144000
 4282 022c 00180F00 		.word	lcd_fg_buffer
 4283 0230 00701700 		.word	1536000
 4284 0234 00000000 		.word	lcd_bg_buffer_disp_idx
 4285 0238 2003E001 		.word	31458080
 4286 023c 00D01A00 		.word	lcd_fg_buffer+768000
 4287 0240 00600300 		.word	screen_buffer
 4288 0244 00000000 		.word	.LC4
 4289 0248 00000000 		.word	__func__.5
 4290 024c 0E000000 		.word	.LC2
 4291 0250 00000000 		.word	Font20
 4292 0254 00000000 		.word	__func__.20
 4293 0258 00000000 		.word	nn_input_buffers
 4294 025c 00000000 		.word	cpu_load
 4295 0260 00000000 		.word	isp_sem_buffer
 4296 0264 00000000 		.word	isp_sem
 4297 0268 11000000 		.word	.LC26
 4298 026c 04000000 		.word	disp+4
 4299 0270 19000000 		.word	.LC27
 4300 0274 25000000 		.word	.LC28
 4301 0278 00000000 		.word	nn_thread
 4302 027c 00000000 		.word	nn_thread_stack
ARM GAS  /tmp/ccl1pJez.s 			page 162


 4303 0280 2F000000 		.word	.LC29
 4304 0284 00000000 		.word	nn_thread_fct
 4305 0288 32000000 		.word	.LC30
 4306 028c 00000000 		.word	dp_thread
 4307 0290 00000000 		.word	dp_thread_stack
 4308 0294 3E000000 		.word	.LC31
 4309 0298 00000000 		.word	dp_thread_fct
 4310 029c 00000000 		.word	isp_thread
 4311 02a0 00000000 		.word	isp_thread_stack
 4312 02a4 41000000 		.word	.LC32
 4313 02a8 00000000 		.word	isp_thread_fct
 4314 02ac 00EE0200 		.word	192000
 4315 02b0 04000000 		.word	nn_input_queue+4
 4316              		.cfi_endproc
 4317              	.LFE7410:
 4319              		.section	.text.CMW_CAMERA_PIPE_FrameEventCallback,"ax",%progbits
 4320              		.align	1
 4321              		.global	CMW_CAMERA_PIPE_FrameEventCallback
 4322              		.syntax unified
 4323              		.thumb
 4324              		.thumb_func
 4326              	CMW_CAMERA_PIPE_FrameEventCallback:
 4327              	.LVL350:
 4328              	.LFB7411:
1697:Src/app.c     **** 
1698:Src/app.c     **** int CMW_CAMERA_PIPE_FrameEventCallback(uint32_t pipe)
1699:Src/app.c     **** {
 4329              		.loc 1 1699 1 is_stmt 1 view -0
 4330              		.cfi_startproc
 4331              		@ args = 0, pretend = 0, frame = 8
 4332              		@ frame_needed = 0, uses_anonymous_args = 0
1700:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4333              		.loc 1 1700 3 view .LVU1376
 4334              		.loc 1 1700 6 is_stmt 0 view .LVU1377
 4335 0000 0128     		cmp	r0, #1
1699:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4336              		.loc 1 1699 1 view .LVU1378
 4337 0002 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 4338              		.cfi_def_cfa_offset 40
 4339              		.cfi_offset 4, -32
 4340              		.cfi_offset 5, -28
 4341              		.cfi_offset 6, -24
 4342              		.cfi_offset 7, -20
 4343              		.cfi_offset 8, -16
 4344              		.cfi_offset 9, -12
 4345              		.cfi_offset 10, -8
 4346              		.cfi_offset 14, -4
1699:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4347              		.loc 1 1699 1 view .LVU1379
 4348 0006 0646     		mov	r6, r0
 4349              		.loc 1 1700 6 view .LVU1380
 4350 0008 50D1     		bne	.L164
1701:Src/app.c     ****     app_main_pipe_frame_event();
 4351              		.loc 1 1701 5 is_stmt 1 view .LVU1381
 4352              	.LBB589:
 4353              	.LBI589:
 544:Src/app.c     **** {
ARM GAS  /tmp/ccl1pJez.s 			page 163


 4354              		.loc 1 544 13 view .LVU1382
 4355              	.LBB590:
 546:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4356              		.loc 1 546 3 view .LVU1383
 546:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4357              		.loc 1 546 47 is_stmt 0 view .LVU1384
 4358 000a 514F     		ldr	r7, .L190
 547:Src/app.c     ****   int ret;
 4359              		.loc 1 547 47 view .LVU1385
 4360 000c DFF87081 		ldr	r8, .L190+48
 546:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4361              		.loc 1 546 47 view .LVU1386
 4362 0010 3D68     		ldr	r5, [r7]
 547:Src/app.c     ****   int ret;
 4363              		.loc 1 547 47 view .LVU1387
 4364 0012 D8F80040 		ldr	r4, [r8]
 546:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4365              		.loc 1 546 47 view .LVU1388
 4366 0016 0135     		adds	r5, r5, #1
 546:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4367              		.loc 1 546 7 view .LVU1389
 4368 0018 6B42     		rsbs	r3, r5, #0
 4369 001a 03F00303 		and	r3, r3, #3
 547:Src/app.c     ****   int ret;
 4370              		.loc 1 547 47 view .LVU1390
 4371 001e 04F10104 		add	r4, r4, #1
 546:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4372              		.loc 1 546 7 view .LVU1391
 4373 0022 05F00305 		and	r5, r5, #3
 4374 0026 55EA43B5 		csneg	r5, r5, r3, mi
 4375              	.LVL351:
 547:Src/app.c     ****   int ret;
 4376              		.loc 1 547 3 is_stmt 1 view .LVU1392
 547:Src/app.c     ****   int ret;
 4377              		.loc 1 547 7 is_stmt 0 view .LVU1393
 4378 002a 6342     		rsbs	r3, r4, #0
 4379 002c 03F00303 		and	r3, r3, #3
 551:Src/app.c     ****   assert(ret == HAL_OK);
 4380              		.loc 1 551 78 view .LVU1394
 4381 0030 DFF850A1 		ldr	r10, .L190+52
 4382 0034 DFF85091 		ldr	r9, .L190+56
 547:Src/app.c     ****   int ret;
 4383              		.loc 1 547 7 view .LVU1395
 4384 0038 04F00304 		and	r4, r4, #3
 4385 003c 54EA43B4 		csneg	r4, r4, r3, mi
 4386              	.LVL352:
 548:Src/app.c     **** 
 4387              		.loc 1 548 3 is_stmt 1 view .LVU1396
 550:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4388              		.loc 1 550 3 view .LVU1397
 550:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4389              		.loc 1 550 9 is_stmt 0 view .LVU1398
 4390 0040 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 4391              	.LVL353:
 550:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4392              		.loc 1 550 9 view .LVU1399
 4393 0044 3146     		mov	r1, r6
ARM GAS  /tmp/ccl1pJez.s 			page 164


 4394 0046 0022     		movs	r2, #0
 4395 0048 0AFB0493 		mla	r3, r10, r4, r9
 4396 004c FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 4397              	.LVL354:
 552:Src/app.c     **** 
 4398              		.loc 1 552 3 is_stmt 1 view .LVU1400
 4399 0050 0146     		mov	r1, r0
 4400 0052 30B1     		cbz	r0, .L165
 552:Src/app.c     **** 
 4401              		.loc 1 552 3 is_stmt 0 discriminator 1 view .LVU1401
 4402 0054 4FF40A71 		mov	r1, #552
 4403 0058 3E4B     		ldr	r3, .L190+4
 4404 005a 3F4A     		ldr	r2, .L190+8
 4405              	.LVL355:
 4406              	.L189:
 4407              	.LBB591:
 4408              	.LBB592:
 536:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4409              		.loc 1 536 3 discriminator 1 view .LVU1402
 4410 005c 3F48     		ldr	r0, .L190+12
 4411 005e FFF7FEFF 		bl	__assert_func
 4412              	.LVL356:
 4413              	.L165:
 536:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4414              		.loc 1 536 3 discriminator 1 view .LVU1403
 4415              	.LBE592:
 4416              	.LBE591:
 554:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 4417              		.loc 1 554 3 is_stmt 1 view .LVU1404
 4418              	.LBB594:
 4419              	.LBI591:
 531:Src/app.c     **** {
 4420              		.loc 1 531 13 view .LVU1405
 4421              	.LBB593:
 533:Src/app.c     **** 
 4422              		.loc 1 533 3 view .LVU1406
 535:Src/app.c     ****   assert(ret == 0);
 4423              		.loc 1 535 3 view .LVU1407
 535:Src/app.c     ****   assert(ret == 0);
 4424              		.loc 1 535 9 is_stmt 0 view .LVU1408
 4425 0062 0AFB0590 		mla	r0, r10, r5, r9
 4426              	.LVL357:
 535:Src/app.c     ****   assert(ret == 0);
 4427              		.loc 1 535 9 view .LVU1409
 4428 0066 FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 4429              	.LVL358:
 536:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4430              		.loc 1 536 3 is_stmt 1 view .LVU1410
 4431 006a 20B1     		cbz	r0, .L166
 536:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4432              		.loc 1 536 3 is_stmt 0 discriminator 1 view .LVU1411
 4433 006c 4FF40671 		mov	r1, #536
 4434 0070 3B4B     		ldr	r3, .L190+16
 4435 0072 3C4A     		ldr	r2, .L190+20
 4436 0074 F2E7     		b	.L189
 4437              	.L166:
 537:Src/app.c     ****   assert(ret == 0);
ARM GAS  /tmp/ccl1pJez.s 			page 165


 4438              		.loc 1 537 3 is_stmt 1 view .LVU1412
 537:Src/app.c     ****   assert(ret == 0);
 4439              		.loc 1 537 9 is_stmt 0 view .LVU1413
 4440 0076 FFF7FEFF 		bl	SCRL_ReloadLayer
 4441              	.LVL359:
 538:Src/app.c     **** 
 4442              		.loc 1 538 3 is_stmt 1 view .LVU1414
 4443 007a 20B1     		cbz	r0, .L167
 538:Src/app.c     **** 
 4444              		.loc 1 538 3 is_stmt 0 discriminator 1 view .LVU1415
 4445 007c 40F21A21 		movw	r1, #538
 4446 0080 374B     		ldr	r3, .L190+16
 4447 0082 384A     		ldr	r2, .L190+20
 4448 0084 EAE7     		b	.L189
 4449              	.L167:
 540:Src/app.c     ****   assert(ret == 0);
 4450              		.loc 1 540 3 is_stmt 1 view .LVU1416
 540:Src/app.c     ****   assert(ret == 0);
 4451              		.loc 1 540 9 is_stmt 0 view .LVU1417
 4452 0086 FFF7FEFF 		bl	SRCL_Update
 4453              	.LVL360:
 541:Src/app.c     **** }
 4454              		.loc 1 541 3 is_stmt 1 view .LVU1418
 4455 008a 20B1     		cbz	r0, .L168
 541:Src/app.c     **** }
 4456              		.loc 1 541 3 is_stmt 0 discriminator 1 view .LVU1419
 4457 008c 40F21D21 		movw	r1, #541
 4458 0090 334B     		ldr	r3, .L190+16
 4459 0092 344A     		ldr	r2, .L190+20
 4460 0094 E2E7     		b	.L189
 4461              	.L168:
 4462              	.LVL361:
 541:Src/app.c     **** }
 4463              		.loc 1 541 3 discriminator 1 view .LVU1420
 4464              	.LBE593:
 4465              	.LBE594:
 555:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 4466              		.loc 1 555 3 is_stmt 1 view .LVU1421
 558:Src/app.c     **** }
 4467              		.loc 1 558 17 is_stmt 0 view .LVU1422
 4468 0096 344A     		ldr	r2, .L190+24
 555:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 4469              		.loc 1 555 26 view .LVU1423
 4470 0098 3D60     		str	r5, [r7]
 556:Src/app.c     **** 
 4471              		.loc 1 556 3 is_stmt 1 view .LVU1424
 558:Src/app.c     **** }
 4472              		.loc 1 558 17 is_stmt 0 view .LVU1425
 4473 009a 1368     		ldr	r3, [r2]
 556:Src/app.c     **** 
 4474              		.loc 1 556 26 view .LVU1426
 4475 009c C8F80040 		str	r4, [r8]
 558:Src/app.c     **** }
 4476              		.loc 1 558 3 is_stmt 1 view .LVU1427
 558:Src/app.c     **** }
 4477              		.loc 1 558 17 is_stmt 0 view .LVU1428
 4478 00a0 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccl1pJez.s 			page 166


 4479 00a2 1360     		str	r3, [r2]
 4480              	.LVL362:
 4481              	.L169:
 558:Src/app.c     **** }
 4482              		.loc 1 558 17 view .LVU1429
 4483              	.LBE590:
 4484              	.LBE589:
1702:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
1703:Src/app.c     ****     app_ancillary_pipe_frame_event();
1704:Src/app.c     **** 
1705:Src/app.c     ****   return HAL_OK;
 4485              		.loc 1 1705 3 is_stmt 1 view .LVU1430
1706:Src/app.c     **** }
 4486              		.loc 1 1706 1 is_stmt 0 view .LVU1431
 4487 00a4 0020     		movs	r0, #0
 4488 00a6 02B0     		add	sp, sp, #8
 4489              		.cfi_remember_state
 4490              		.cfi_def_cfa_offset 32
 4491              		@ sp needed
 4492 00a8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4493              	.LVL363:
 4494              	.L164:
 4495              		.cfi_restore_state
1702:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 4496              		.loc 1 1702 8 is_stmt 1 view .LVU1432
1702:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 4497              		.loc 1 1702 11 is_stmt 0 view .LVU1433
 4498 00ac 0228     		cmp	r0, #2
 4499 00ae F9D1     		bne	.L169
1703:Src/app.c     **** 
 4500              		.loc 1 1703 5 is_stmt 1 view .LVU1434
 4501              	.LBB595:
 4502              	.LBI595:
 562:Src/app.c     **** {
 4503              		.loc 1 562 13 view .LVU1435
 4504              	.LBB596:
 564:Src/app.c     ****   int ret;
 4505              		.loc 1 564 3 view .LVU1436
 565:Src/app.c     **** 
 4506              		.loc 1 565 3 view .LVU1437
 567:Src/app.c     ****   if (next_buffer) {
 4507              		.loc 1 567 3 view .LVU1438
 4508              	.LBB597:
 4509              	.LBI597:
 479:Src/app.c     **** {
 4510              		.loc 1 479 17 view .LVU1439
 4511              	.LVL364:
 4512              	.LBB598:
 481:Src/app.c     ****   int ret;
 4513              		.loc 1 481 3 view .LVU1440
 482:Src/app.c     **** 
 4514              		.loc 1 482 3 view .LVU1441
 484:Src/app.c     ****   if (ret == pdFALSE)
 4515              		.loc 1 484 3 view .LVU1442
 484:Src/app.c     ****   if (ret == pdFALSE)
 4516              		.loc 1 484 9 is_stmt 0 view .LVU1443
 4517 00b0 2E4C     		ldr	r4, .L190+28
ARM GAS  /tmp/ccl1pJez.s 			page 167


 484:Src/app.c     ****   if (ret == pdFALSE)
 4518              		.loc 1 484 9 discriminator 4 view .LVU1444
 4519 00b2 0021     		movs	r1, #0
 4520 00b4 2068     		ldr	r0, [r4]
 4521              	.LVL365:
 484:Src/app.c     ****   if (ret == pdFALSE)
 4522              		.loc 1 484 9 discriminator 4 view .LVU1445
 4523 00b6 FFF7FEFF 		bl	xQueueSemaphoreTake
 4524              	.LVL366:
 485:Src/app.c     ****     return NULL;
 4525              		.loc 1 485 3 is_stmt 1 view .LVU1446
 485:Src/app.c     ****     return NULL;
 4526              		.loc 1 485 6 is_stmt 0 view .LVU1447
 4527 00ba 0028     		cmp	r0, #0
 4528 00bc F2D0     		beq	.L169
 488:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4529              		.loc 1 488 3 is_stmt 1 view .LVU1448
 488:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4530              		.loc 1 488 23 is_stmt 0 view .LVU1449
 4531 00be D4F8B420 		ldr	r2, [r4, #180]
 488:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4532              		.loc 1 488 7 view .LVU1450
 4533 00c2 04EB8203 		add	r3, r4, r2, lsl #2
 4534 00c6 D3F8AC50 		ldr	r5, [r3, #172]
 4535              	.LVL367:
 489:Src/app.c     **** 
 4536              		.loc 1 489 3 is_stmt 1 view .LVU1451
 489:Src/app.c     **** 
 4537              		.loc 1 489 37 is_stmt 0 view .LVU1452
 4538 00ca D4F8A830 		ldr	r3, [r4, #168]
 489:Src/app.c     **** 
 4539              		.loc 1 489 32 view .LVU1453
 4540 00ce 0132     		adds	r2, r2, #1
 489:Src/app.c     **** 
 4541              		.loc 1 489 37 view .LVU1454
 4542 00d0 92FBF3F1 		sdiv	r1, r2, r3
 4543 00d4 03FB1122 		mls	r2, r3, r1, r2
 489:Src/app.c     **** 
 4544              		.loc 1 489 16 view .LVU1455
 4545 00d8 C4F8B420 		str	r2, [r4, #180]
 491:Src/app.c     **** }
 4546              		.loc 1 491 3 is_stmt 1 view .LVU1456
 4547              	.LVL368:
 491:Src/app.c     **** }
 4548              		.loc 1 491 3 is_stmt 0 view .LVU1457
 4549              	.LBE598:
 4550              	.LBE597:
 568:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 4551              		.loc 1 568 3 is_stmt 1 view .LVU1458
 568:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 4552              		.loc 1 568 6 is_stmt 0 view .LVU1459
 4553 00dc 002D     		cmp	r5, #0
 4554 00de E1D0     		beq	.L169
 569:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4555              		.loc 1 569 5 is_stmt 1 view .LVU1460
 569:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4556              		.loc 1 569 11 is_stmt 0 view .LVU1461
ARM GAS  /tmp/ccl1pJez.s 			page 168


 4557 00e0 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 4558              	.LVL369:
 569:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4559              		.loc 1 569 11 discriminator 1 view .LVU1462
 4560 00e4 2B46     		mov	r3, r5
 4561 00e6 0022     		movs	r2, #0
 4562 00e8 3146     		mov	r1, r6
 4563 00ea FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 4564              	.LVL370:
 571:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 4565              		.loc 1 571 5 is_stmt 1 view .LVU1463
 4566 00ee 20B1     		cbz	r0, .L172
 571:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 4567              		.loc 1 571 5 is_stmt 0 discriminator 1 view .LVU1464
 4568 00f0 40F23B21 		movw	r1, #571
 4569 00f4 174B     		ldr	r3, .L190+4
 4570 00f6 1E4A     		ldr	r2, .L190+32
 4571 00f8 B0E7     		b	.L189
 4572              	.L172:
 573:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4573              		.loc 1 573 5 is_stmt 1 view .LVU1465
 573:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4574              		.loc 1 573 48 is_stmt 0 view .LVU1466
 4575 00fa 1B4B     		ldr	r3, .L190+24
 573:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4576              		.loc 1 573 31 view .LVU1467
 4577 00fc 1D4A     		ldr	r2, .L190+36
 573:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4578              		.loc 1 573 48 view .LVU1468
 4579 00fe 1B68     		ldr	r3, [r3]
 4580              	.LBB599:
 4581              	.LBB600:
 518:Src/app.c     ****   int ret;
 4582              		.loc 1 518 14 view .LVU1469
 4583 0100 0190     		str	r0, [sp, #4]
 4584              	.LBE600:
 4585              	.LBE599:
 573:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4586              		.loc 1 573 48 view .LVU1470
 4587 0102 013B     		subs	r3, r3, #1
 573:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4588              		.loc 1 573 31 view .LVU1471
 4589 0104 1360     		str	r3, [r2]
 574:Src/app.c     ****   }
 4590              		.loc 1 574 5 is_stmt 1 view .LVU1472
 4591              	.LBB602:
 4592              	.LBI599:
 516:Src/app.c     **** {
 4593              		.loc 1 516 13 view .LVU1473
 4594              	.LVL371:
 4595              	.LBB601:
 518:Src/app.c     ****   int ret;
 4596              		.loc 1 518 3 view .LVU1474
 519:Src/app.c     **** 
 4597              		.loc 1 519 3 view .LVU1475
 521:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4598              		.loc 1 521 3 view .LVU1476
ARM GAS  /tmp/ccl1pJez.s 			page 169


 521:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4599              		.loc 1 521 7 is_stmt 0 view .LVU1477
 4600 0106 FFF7FEFF 		bl	xPortIsInsideInterrupt
 4601              	.LVL372:
 521:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4602              		.loc 1 521 6 discriminator 1 view .LVU1478
 4603 010a 0346     		mov	r3, r0
 4604 010c A0B1     		cbz	r0, .L173
 522:Src/app.c     ****     assert(ret == pdTRUE);
 4605              		.loc 1 522 5 is_stmt 1 view .LVU1479
 522:Src/app.c     ****     assert(ret == pdTRUE);
 4606              		.loc 1 522 11 is_stmt 0 view .LVU1480
 4607 010e 606D     		ldr	r0, [r4, #84]
 4608 0110 01A9     		add	r1, sp, #4
 4609 0112 FFF7FEFF 		bl	xQueueGiveFromISR
 4610              	.LVL373:
 523:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4611              		.loc 1 523 5 is_stmt 1 view .LVU1481
 4612 0116 0128     		cmp	r0, #1
 4613 0118 04D0     		beq	.L174
 523:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4614              		.loc 1 523 5 is_stmt 0 discriminator 1 view .LVU1482
 4615 011a 40F20B21 		movw	r1, #523
 4616 011e 164B     		ldr	r3, .L190+40
 4617 0120 164A     		ldr	r2, .L190+44
 4618 0122 9BE7     		b	.L189
 4619              	.L174:
 524:Src/app.c     ****   } else {
 4620              		.loc 1 524 5 is_stmt 1 view .LVU1483
 524:Src/app.c     ****   } else {
 4621              		.loc 1 524 5 view .LVU1484
 4622 0124 019B     		ldr	r3, [sp, #4]
 4623 0126 002B     		cmp	r3, #0
 4624 0128 BCD0     		beq	.L169
 524:Src/app.c     ****   } else {
 4625              		.loc 1 524 5 discriminator 1 view .LVU1485
 4626 012a 4FF0E023 		mov	r3, #-536813568
 4627 012e 4FF08052 		mov	r2, #268435456
 4628 0132 C3F8042D 		str	r2, [r3, #3332]
 4629 0136 B5E7     		b	.L169
 4630              	.LVL374:
 4631              	.L173:
 526:Src/app.c     ****     assert(ret == pdTRUE);
 4632              		.loc 1 526 5 view .LVU1486
 526:Src/app.c     ****     assert(ret == pdTRUE);
 4633              		.loc 1 526 11 is_stmt 0 view .LVU1487
 4634 0138 0246     		mov	r2, r0
 4635 013a 0146     		mov	r1, r0
 4636 013c 606D     		ldr	r0, [r4, #84]
 4637 013e FFF7FEFF 		bl	xQueueGenericSend
 4638              	.LVL375:
 527:Src/app.c     ****   }
 4639              		.loc 1 527 5 is_stmt 1 view .LVU1488
 4640 0142 0128     		cmp	r0, #1
 4641 0144 AED0     		beq	.L169
 527:Src/app.c     ****   }
 4642              		.loc 1 527 5 is_stmt 0 discriminator 1 view .LVU1489
ARM GAS  /tmp/ccl1pJez.s 			page 170


 4643 0146 40F20F21 		movw	r1, #527
 4644 014a 0B4B     		ldr	r3, .L190+40
 4645 014c 0B4A     		ldr	r2, .L190+44
 4646 014e 85E7     		b	.L189
 4647              	.L191:
 4648              		.align	2
 4649              	.L190:
 4650 0150 00000000 		.word	lcd_bg_buffer_disp_idx
 4651 0154 00000000 		.word	.LC18
 4652 0158 00000000 		.word	__func__.3
 4653 015c 0E000000 		.word	.LC2
 4654 0160 00000000 		.word	.LC4
 4655 0164 00000000 		.word	__func__.2
 4656 0168 00000000 		.word	frame_event_nb
 4657 016c 00000000 		.word	nn_input_queue
 4658 0170 00000000 		.word	__func__.1
 4659 0174 00000000 		.word	frame_event_nb_for_resize
 4660 0178 00000000 		.word	.LC1
 4661 017c 00000000 		.word	__func__.0
 4662 0180 00000000 		.word	lcd_bg_buffer_capt_idx
 4663 0184 00701700 		.word	1536000
 4664 0188 00882600 		.word	lcd_bg_buffer
 4665              	.LBE601:
 4666              	.LBE602:
 4667              	.LBE596:
 4668              	.LBE595:
 4669              		.cfi_endproc
 4670              	.LFE7411:
 4672              		.section	.text.CMW_CAMERA_PIPE_VsyncEventCallback,"ax",%progbits
 4673              		.align	1
 4674              		.global	CMW_CAMERA_PIPE_VsyncEventCallback
 4675              		.syntax unified
 4676              		.thumb
 4677              		.thumb_func
 4679              	CMW_CAMERA_PIPE_VsyncEventCallback:
 4680              	.LVL376:
 4681              	.LFB7412:
1707:Src/app.c     **** 
1708:Src/app.c     **** int CMW_CAMERA_PIPE_VsyncEventCallback(uint32_t pipe)
1709:Src/app.c     **** {
 4682              		.loc 1 1709 1 is_stmt 1 view -0
 4683              		.cfi_startproc
 4684              		@ args = 0, pretend = 0, frame = 8
 4685              		@ frame_needed = 0, uses_anonymous_args = 0
1710:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4686              		.loc 1 1710 3 view .LVU1491
 4687              		.loc 1 1710 6 is_stmt 0 view .LVU1492
 4688 0000 0128     		cmp	r0, #1
1709:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4689              		.loc 1 1709 1 view .LVU1493
 4690 0002 07B5     		push	{r0, r1, r2, lr}
 4691              		.cfi_def_cfa_offset 16
 4692              		.cfi_offset 14, -4
 4693              		.loc 1 1710 6 view .LVU1494
 4694 0004 10D1     		bne	.L193
1711:Src/app.c     ****     app_main_pipe_vsync_event();
 4695              		.loc 1 1711 5 is_stmt 1 view .LVU1495
ARM GAS  /tmp/ccl1pJez.s 			page 171


 4696              	.LBB605:
 4697              	.LBI605:
 578:Src/app.c     **** {
 4698              		.loc 1 578 13 view .LVU1496
 4699              	.LBB606:
 580:Src/app.c     ****   int ret;
 4700              		.loc 1 580 3 view .LVU1497
 580:Src/app.c     ****   int ret;
 4701              		.loc 1 580 14 is_stmt 0 view .LVU1498
 4702 0006 0023     		movs	r3, #0
 4703 0008 0193     		str	r3, [sp, #4]
 581:Src/app.c     **** 
 4704              		.loc 1 581 3 is_stmt 1 view .LVU1499
 583:Src/app.c     ****   if (ret == pdTRUE)
 4705              		.loc 1 583 3 view .LVU1500
 583:Src/app.c     ****   if (ret == pdTRUE)
 4706              		.loc 1 583 9 is_stmt 0 view .LVU1501
 4707 000a 094B     		ldr	r3, .L198
 4708 000c 01A9     		add	r1, sp, #4
 4709 000e 1868     		ldr	r0, [r3]
 4710              	.LVL377:
 583:Src/app.c     ****   if (ret == pdTRUE)
 4711              		.loc 1 583 9 view .LVU1502
 4712 0010 FFF7FEFF 		bl	xQueueGiveFromISR
 4713              	.LVL378:
 584:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4714              		.loc 1 584 3 is_stmt 1 view .LVU1503
 584:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4715              		.loc 1 584 6 is_stmt 0 view .LVU1504
 4716 0014 0128     		cmp	r0, #1
 4717 0016 07D1     		bne	.L193
 585:Src/app.c     **** }
 4718              		.loc 1 585 5 is_stmt 1 view .LVU1505
 585:Src/app.c     **** }
 4719              		.loc 1 585 5 view .LVU1506
 4720 0018 019B     		ldr	r3, [sp, #4]
 4721 001a 2BB1     		cbz	r3, .L193
 585:Src/app.c     **** }
 4722              		.loc 1 585 5 discriminator 1 view .LVU1507
 4723 001c 4FF0E023 		mov	r3, #-536813568
 4724 0020 4FF08052 		mov	r2, #268435456
 4725 0024 C3F8042D 		str	r2, [r3, #3332]
 585:Src/app.c     **** }
 4726              		.loc 1 585 5 discriminator 3 view .LVU1508
 4727              	.LVL379:
 4728              	.L193:
 585:Src/app.c     **** }
 4729              		.loc 1 585 5 is_stmt 0 discriminator 3 view .LVU1509
 4730              	.LBE606:
 4731              	.LBE605:
1712:Src/app.c     **** 
1713:Src/app.c     ****   return HAL_OK;
 4732              		.loc 1 1713 3 is_stmt 1 view .LVU1510
1714:Src/app.c     **** }
 4733              		.loc 1 1714 1 is_stmt 0 view .LVU1511
 4734 0028 0020     		movs	r0, #0
 4735 002a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccl1pJez.s 			page 172


 4736              		.cfi_def_cfa_offset 4
 4737              		@ sp needed
 4738 002c 5DF804FB 		ldr	pc, [sp], #4
 4739              	.L199:
 4740              		.align	2
 4741              	.L198:
 4742 0030 00000000 		.word	isp_sem
 4743              		.cfi_endproc
 4744              	.LFE7412:
 4746              		.section	.rodata.__func__.0,"a"
 4749              	__func__.0:
 4750 0000 62717565 		.ascii	"bqueue_put_ready\000"
 4750      75655F70 
 4750      75745F72 
 4750      65616479 
 4750      00
 4751              		.section	.rodata.__func__.1,"a"
 4754              	__func__.1:
 4755 0000 6170705F 		.ascii	"app_ancillary_pipe_frame_event\000"
 4755      616E6369 
 4755      6C6C6172 
 4755      795F7069 
 4755      70655F66 
 4756              		.section	.rodata.__func__.2,"a"
 4759              	__func__.2:
 4760 0000 72656C6F 		.ascii	"reload_bg_layer\000"
 4760      61645F62 
 4760      675F6C61 
 4760      79657200 
 4761              		.section	.rodata.__func__.3,"a"
 4764              	__func__.3:
 4765 0000 6170705F 		.ascii	"app_main_pipe_frame_event\000"
 4765      6D61696E 
 4765      5F706970 
 4765      655F6672 
 4765      616D655F 
 4766              		.section	.rodata.__func__.5,"a"
 4769              	__func__.5:
 4770 0000 44697370 		.ascii	"Display_init\000"
 4770      6C61795F 
 4770      696E6974 
 4770      00
 4771              		.section	.rodata.__func__.6,"a"
 4774              	__func__.6:
 4775 0000 62717565 		.ascii	"bqueue_put_free\000"
 4775      75655F70 
 4775      75745F66 
 4775      72656500 
 4776              		.section	.rodata.__func__.7,"a"
 4779              	__func__.7:
 4780 0000 66616365 		.ascii	"face_landmark_prepare_input\000"
 4780      5F6C616E 
 4780      646D6172 
 4780      6B5F7072 
 4780      65706172 
 4781              		.section	.rodata.__func__.8,"a"
 4784              	__func__.8:
ARM GAS  /tmp/ccl1pJez.s 			page 173


 4785 0000 796F6C6F 		.ascii	"yolo_detector_run\000"
 4785      5F646574 
 4785      6563746F 
 4785      725F7275 
 4785      6E00
 4786              		.section	.rodata.__func__.9,"a"
 4789              	__func__.9:
 4790 0000 62717565 		.ascii	"bqueue_get_ready\000"
 4790      75655F67 
 4790      65745F72 
 4790      65616479 
 4790      00
 4791              		.section	.rodata.__func__.10,"a"
 4794              	__func__.10:
 4795 0000 66616365 		.ascii	"face_landmark_init\000"
 4795      5F6C616E 
 4795      646D6172 
 4795      6B5F696E 
 4795      697400
 4796              		.section	.rodata.__func__.11,"a"
 4799              	__func__.11:
 4800 0000 796F6C6F 		.ascii	"yolo_detector_init\000"
 4800      5F646574 
 4800      6563746F 
 4800      725F696E 
 4800      697400
 4801              		.section	.rodata.__func__.12,"a"
 4804              	__func__.12:
 4805 0000 6E6E5F74 		.ascii	"nn_thread_fct\000"
 4805      68726561 
 4805      645F6663 
 4805      7400
 4806              		.section	.rodata.__func__.13,"a"
 4809              	__func__.13:
 4810 0000 64705F63 		.ascii	"dp_commit_drawing_area\000"
 4810      6F6D6D69 
 4810      745F6472 
 4810      6177696E 
 4810      675F6172 
 4811              		.section	.rodata.__func__.14,"a"
 4814              	__func__.14:
 4815 0000 64705F75 		.ascii	"dp_update_drawing_area\000"
 4815      70646174 
 4815      655F6472 
 4815      6177696E 
 4815      675F6172 
 4816              		.section	.rodata.__func__.15,"a"
 4819              	__func__.15:
 4820 0000 62757474 		.ascii	"button_init\000"
 4820      6F6E5F69 
 4820      6E697400 
 4821              		.section	.rodata.__func__.16,"a"
 4824              	__func__.16:
 4825 0000 6F6E5F6C 		.ascii	"on_ld_toggle_button_click\000"
 4825      645F746F 
 4825      67676C65 
 4825      5F627574 
ARM GAS  /tmp/ccl1pJez.s 			page 174


 4825      746F6E5F 
 4826              		.section	.rodata.__func__.17,"a"
 4829              	__func__.17:
 4830 0000 6F6E5F70 		.ascii	"on_pd_toggle_button_click\000"
 4830      645F746F 
 4830      67676C65 
 4830      5F627574 
 4830      746F6E5F 
 4831              		.section	.rodata.__func__.18,"a"
 4834              	__func__.18:
 4835 0000 64705F74 		.ascii	"dp_thread_fct\000"
 4835      68726561 
 4835      645F6663 
 4835      7400
 4836              		.section	.rodata.__func__.19,"a"
 4839              	__func__.19:
 4840 0000 6973705F 		.ascii	"isp_thread_fct\000"
 4840      74687265 
 4840      61645F66 
 4840      637400
 4841              		.section	.rodata.__func__.20,"a"
 4844              	__func__.20:
 4845 0000 6170705F 		.ascii	"app_run\000"
 4845      72756E00 
 4846              		.section	.bss.isp_sem_buffer,"aw",%nobits
 4847              		.align	2
 4850              	isp_sem_buffer:
 4851 0000 00000000 		.space	80
 4851      00000000 
 4851      00000000 
 4851      00000000 
 4851      00000000 
 4852              		.section	.bss.isp_sem,"aw",%nobits
 4853              		.align	2
 4856              	isp_sem:
 4857 0000 00000000 		.space	4
 4858              		.section	.bss.isp_thread_stack,"aw",%nobits
 4859              		.align	2
 4862              	isp_thread_stack:
 4863 0000 00000000 		.space	8192
 4863      00000000 
 4863      00000000 
 4863      00000000 
 4863      00000000 
 4864              		.section	.bss.isp_thread,"aw",%nobits
 4865              		.align	2
 4868              	isp_thread:
 4869 0000 00000000 		.space	96
 4869      00000000 
 4869      00000000 
 4869      00000000 
 4869      00000000 
 4870              		.section	.bss.dp_thread_stack,"aw",%nobits
 4871              		.align	2
 4874              	dp_thread_stack:
 4875 0000 00000000 		.space	8192
 4875      00000000 
ARM GAS  /tmp/ccl1pJez.s 			page 175


 4875      00000000 
 4875      00000000 
 4875      00000000 
 4876              		.section	.bss.dp_thread,"aw",%nobits
 4877              		.align	2
 4880              	dp_thread:
 4881 0000 00000000 		.space	96
 4881      00000000 
 4881      00000000 
 4881      00000000 
 4881      00000000 
 4882              		.section	.bss.nn_thread_stack,"aw",%nobits
 4883              		.align	2
 4886              	nn_thread_stack:
 4887 0000 00000000 		.space	16384
 4887      00000000 
 4887      00000000 
 4887      00000000 
 4887      00000000 
 4888              		.section	.bss.nn_thread,"aw",%nobits
 4889              		.align	2
 4892              	nn_thread:
 4893 0000 00000000 		.space	96
 4893      00000000 
 4893      00000000 
 4893      00000000 
 4893      00000000 
 4894              		.section	.bss.nn_input_queue,"aw",%nobits
 4895              		.align	2
 4898              	nn_input_queue:
 4899 0000 00000000 		.space	188
 4899      00000000 
 4899      00000000 
 4899      00000000 
 4899      00000000 
 4900              		.section	.psram_bss,"aw"
 4901              		.align	5
 4904              	nn_input_buffers:
 4905 0000 00000000 		.space	221184
 4905      00000000 
 4905      00000000 
 4905      00000000 
 4905      00000000 
 4906              		.section	.bss.frame_event_nb_for_resize,"aw",%nobits
 4907              		.align	2
 4910              	frame_event_nb_for_resize:
 4911 0000 00000000 		.space	4
 4912              		.section	.bss.frame_event_nb,"aw",%nobits
 4913              		.align	2
 4916              	frame_event_nb:
 4917 0000 00000000 		.space	4
 4918              		.section	.bss.ld_landmarks,"aw",%nobits
 4919              		.align	2
 4922              	ld_landmarks:
 4923 0000 00000000 		.space	3744
 4923      00000000 
 4923      00000000 
ARM GAS  /tmp/ccl1pJez.s 			page 176


 4923      00000000 
 4923      00000000 
 4924              		.section	.data.NN_Instance_face_landmark,"aw"
 4925              		.align	2
 4928              	NN_Instance_face_landmark:
 4929 0000 00000000 		.word	NN_Interface_face_landmark
 4930 0004 00000000 		.word	0
 4931 0008 00000000 		.space	40
 4931      00000000 
 4931      00000000 
 4931      00000000 
 4931      00000000 
 4932              		.section	.rodata.str1.1,"aMS",%progbits,1
 4933              	.LC33:
 4934 0000 66616365 		.ascii	"face_landmark\000"
 4934      5F6C616E 
 4934      646D6172 
 4934      6B00
 4935              		.section	.rodata.NN_Interface_face_landmark,"a"
 4936              		.align	2
 4939              	NN_Interface_face_landmark:
 4940 0000 00000000 		.word	.LC33
 4941 0004 00000000 		.word	LL_ATON_EC_Network_Init_face_landmark
 4942 0008 00000000 		.word	LL_ATON_EC_Inference_Init_face_landmark
 4943 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_face_landmark
 4944 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_face_landmark
 4945 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_face_landmark
 4946 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_face_landmark
 4947 001c 00000000 		.word	LL_ATON_EpochBlockItems_face_landmark
 4948 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_face_landmark
 4949 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_face_landmark
 4950 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_face_landmark
 4951              		.section	.data.NN_Instance_yolo_detector,"aw"
 4952              		.align	2
 4955              	NN_Instance_yolo_detector:
 4956 0000 00000000 		.word	NN_Interface_yolo_detector
 4957 0004 00000000 		.word	0
 4958 0008 00000000 		.space	40
 4958      00000000 
 4958      00000000 
 4958      00000000 
 4958      00000000 
 4959              		.section	.rodata.str1.1
 4960              	.LC34:
 4961 000e 796F6C6F 		.ascii	"yolo_detector\000"
 4961      5F646574 
 4961      6563746F 
 4961      7200
 4962              		.section	.rodata.NN_Interface_yolo_detector,"a"
 4963              		.align	2
 4966              	NN_Interface_yolo_detector:
 4967 0000 0E000000 		.word	.LC34
 4968 0004 00000000 		.word	LL_ATON_EC_Network_Init_yolo_detector
 4969 0008 00000000 		.word	LL_ATON_EC_Inference_Init_yolo_detector
 4970 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_yolo_detector
 4971 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_yolo_detector
 4972 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_yolo_detector
ARM GAS  /tmp/ccl1pJez.s 			page 177


 4973 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_yolo_detector
 4974 001c 00000000 		.word	LL_ATON_EpochBlockItems_yolo_detector
 4975 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_yolo_detector
 4976 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_yolo_detector
 4977 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_yolo_detector
 4978              		.section	.psram_bss
 4979              		.align	5
 4982              	screen_buffer:
 4983 36000 00000000 		.space	768000
 4983      00000000 
 4983      00000000 
 4983      00000000 
 4983      00000000 
 4984              		.section	.bss.cpu_load,"aw",%nobits
 4985              		.align	3
 4988              	cpu_load:
 4989 0000 00000000 		.space	224
 4989      00000000 
 4989      00000000 
 4989      00000000 
 4989      00000000 
 4990              		.section	.data.disp,"aw"
 4991              		.align	2
 4994              	disp:
 4995 0000 00000000 		.space	168
 4995      00000000 
 4995      00000000 
 4995      00000000 
 4995      00000000 
 4996 00a8 00000000 		.space	20
 4996      00000000 
 4996      00000000 
 4996      00000000 
 4996      00000000 
 4997 00bc 01000000 		.word	1
 4998 00c0 00000000 		.word	0
 4999 00c4 00000000 		.space	3800
 4999      00000000 
 4999      00000000 
 4999      00000000 
 4999      00000000 
 5000              		.section	.bss.lcd_fg_buffer_rd_idx,"aw",%nobits
 5001              		.align	2
 5004              	lcd_fg_buffer_rd_idx:
 5005 0000 00000000 		.space	4
 5006              		.section	.psram_bss
 5007              		.align	5
 5010              	lcd_fg_buffer:
 5011 f1800 00000000 		.space	1536000
 5011      00000000 
 5011      00000000 
 5011      00000000 
 5011      00000000 
 5012              		.section	.bss.lcd_bg_buffer_capt_idx,"aw",%nobits
 5013              		.align	2
 5016              	lcd_bg_buffer_capt_idx:
 5017 0000 00000000 		.space	4
ARM GAS  /tmp/ccl1pJez.s 			page 178


 5018              		.section	.data.lcd_bg_buffer_disp_idx,"aw"
 5019              		.align	2
 5022              	lcd_bg_buffer_disp_idx:
 5023 0000 01000000 		.word	1
 5024              		.section	.psram_bss
 5025              		.align	5
 5028              	lcd_bg_buffer:
 5029 268800 00000000 		.space	6144000
 5029      00000000 
 5029      00000000 
 5029      00000000 
 5029      00000000 
 5030              		.text
 5031              	.Letext0:
 5032              		.file 5 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5033              		.file 6 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5034              		.file 7 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5035              		.file 8 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5036              		.file 9 "Lib/FreeRTOS/Source/include/projdefs.h"
 5037              		.file 10 "Lib/FreeRTOS/Source/portable/GCC/ARM_CM55_NTZ/non_secure/portmacrocommon.h"
 5038              		.file 11 "Lib/FreeRTOS/Source/include/FreeRTOS.h"
 5039              		.file 12 "Lib/FreeRTOS/Source/include/task.h"
 5040              		.file 13 "Lib/FreeRTOS/Source/include/queue.h"
 5041              		.file 14 "Lib/FreeRTOS/Source/include/semphr.h"
 5042              		.file 15 "STM32Cube_FW_N6/Drivers/CMSIS/Include/core_cm55.h"
 5043              		.file 16 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n657xx.h"
 5044              		.file 17 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n6xx.h"
 5045              		.file 18 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_def.h"
 5046              		.file 19 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gpio.h"
 5047              		.file 20 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_dcmipp.h"
 5048              		.file 21 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gfxmmu.h"
 5049              		.file 22 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_pp_output_if.h"
 5050              		.file 23 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_yolov8_pp_if.h"
 5051              		.file 24 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/pd_pp_output_if.h"
 5052              		.file 25 "Inc/ld.h"
 5053              		.file 26 "Lib/screenl/Inc/scrl.h"
 5054              		.file 27 "STM32Cube_FW_N6/Drivers/BSP/STM32N6570-DK/stm32n6570_discovery.h"
 5055              		.file 28 "STM32Cube_FW_N6/Utilities/lcd/../Fonts/fonts.h"
 5056              		.file 29 "STM32Cube_FW_N6/Utilities/lcd/stm32_lcd.h"
 5057              		.file 30 "Lib/NemaGFX/include/nema_hal.h"
 5058              		.file 31 "Lib/NemaGFX/include/nema_cmdlist.h"
 5059              		.file 32 "Lib/Camera_Middleware/cmw_camera.h"
 5060              		.file 33 "Lib/ipl/Inc/IPL_resize.h"
 5061              		.file 34 "Lib/ai-postprocessing-wrapper/app_postprocess.h"
 5062              		.file 35 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_runtime.h"
 5063              		.file 36 "Inc/app_cam.h"
 5064              		.file 37 "Inc/FreeRTOSConfig.h"
 5065              		.file 38 "Inc/stm32_lcd_ex.h"
 5066              		.file 39 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal.h"
 5067              		.file 40 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5068              		.file 41 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5069              		.file 42 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5070              		.file 43 "<built-in>"
ARM GAS  /tmp/ccl1pJez.s 			page 179


DEFINED SYMBOLS
                            *ABS*:00000000 app.c
     /tmp/ccl1pJez.s:26     .text.LL_Buffer_addr_start:00000000 $t
     /tmp/ccl1pJez.s:31     .text.LL_Buffer_addr_start:00000000 LL_Buffer_addr_start
     /tmp/ccl1pJez.s:76     .text.clamp_point:00000000 $t
     /tmp/ccl1pJez.s:81     .text.clamp_point:00000000 clamp_point
     /tmp/ccl1pJez.s:162    .text.clamp_corners:00000000 $t
     /tmp/ccl1pJez.s:167    .text.clamp_corners:00000000 clamp_corners
     /tmp/ccl1pJez.s:232    .text.roi_to_corners:00000000 $t
     /tmp/ccl1pJez.s:237    .text.roi_to_corners:00000000 roi_to_corners
     /tmp/ccl1pJez.s:403    .text.isp_thread_fct:00000000 $t
     /tmp/ccl1pJez.s:408    .text.isp_thread_fct:00000000 isp_thread_fct
     /tmp/ccl1pJez.s:454    .text.isp_thread_fct:00000028 $d
     /tmp/ccl1pJez.s:4856   .bss.isp_sem:00000000 isp_sem
     /tmp/ccl1pJez.s:4839   .rodata.__func__.19:00000000 __func__.19
     /tmp/ccl1pJez.s:462    .text.on_pd_toggle_button_click:00000000 $t
     /tmp/ccl1pJez.s:467    .text.on_pd_toggle_button_click:00000000 on_pd_toggle_button_click
     /tmp/ccl1pJez.s:541    .text.on_pd_toggle_button_click:0000004c $d
     /tmp/ccl1pJez.s:4829   .rodata.__func__.17:00000000 __func__.17
     /tmp/ccl1pJez.s:548    .text.on_ld_toggle_button_click:00000000 $t
     /tmp/ccl1pJez.s:553    .text.on_ld_toggle_button_click:00000000 on_ld_toggle_button_click
     /tmp/ccl1pJez.s:627    .text.on_ld_toggle_button_click:0000004c $d
     /tmp/ccl1pJez.s:4824   .rodata.__func__.16:00000000 __func__.16
     /tmp/ccl1pJez.s:634    .text.button_process:00000000 $t
     /tmp/ccl1pJez.s:639    .text.button_process:00000000 button_process
     /tmp/ccl1pJez.s:697    .text.button_init.part.0:00000000 $t
     /tmp/ccl1pJez.s:702    .text.button_init.part.0:00000000 button_init.part.0
     /tmp/ccl1pJez.s:725    .text.button_init.part.0:00000010 $d
     /tmp/ccl1pJez.s:4819   .rodata.__func__.15:00000000 __func__.15
     /tmp/ccl1pJez.s:732    .text.display_ld_hand:00000000 $t
     /tmp/ccl1pJez.s:737    .text.display_ld_hand:00000000 display_ld_hand
     /tmp/ccl1pJez.s:1047   .text.nn_thread_fct:00000000 $t
     /tmp/ccl1pJez.s:1052   .text.nn_thread_fct:00000000 nn_thread_fct
     /tmp/ccl1pJez.s:1982   .text.nn_thread_fct:0000031c $d
     /tmp/ccl1pJez.s:4955   .data.NN_Instance_yolo_detector:00000000 NN_Instance_yolo_detector
     /tmp/ccl1pJez.s:4799   .rodata.__func__.11:00000000 __func__.11
     /tmp/ccl1pJez.s:4794   .rodata.__func__.10:00000000 __func__.10
     /tmp/ccl1pJez.s:4804   .rodata.__func__.12:00000000 __func__.12
     /tmp/ccl1pJez.s:4789   .rodata.__func__.9:00000000 __func__.9
     /tmp/ccl1pJez.s:4784   .rodata.__func__.8:00000000 __func__.8
     /tmp/ccl1pJez.s:4779   .rodata.__func__.7:00000000 __func__.7
     /tmp/ccl1pJez.s:4898   .bss.nn_input_queue:00000000 nn_input_queue
     /tmp/ccl1pJez.s:2016   .text.nn_thread_fct:0000038c $t
     /tmp/ccl1pJez.s:2619   .text.nn_thread_fct:000005ac $d
     /tmp/ccl1pJez.s:4928   .data.NN_Instance_face_landmark:00000000 NN_Instance_face_landmark
     /tmp/ccl1pJez.s:4922   .bss.ld_landmarks:00000000 ld_landmarks
     /tmp/ccl1pJez.s:4774   .rodata.__func__.6:00000000 __func__.6
     /tmp/ccl1pJez.s:4994   .data.disp:00000000 disp
     /tmp/ccl1pJez.s:2636   .text.display_hand:00000000 $t
     /tmp/ccl1pJez.s:2642   .text.display_hand:00000000 display_hand
     /tmp/ccl1pJez.s:2920   .text.display_hand:0000012c $d
     /tmp/ccl1pJez.s:2942   .text.dp_thread_fct:00000000 $t
     /tmp/ccl1pJez.s:2947   .text.dp_thread_fct:00000000 dp_thread_fct
     /tmp/ccl1pJez.s:3644   .text.dp_thread_fct:00000278 $d
     /tmp/ccl1pJez.s:4834   .rodata.__func__.18:00000000 __func__.18
     /tmp/ccl1pJez.s:4814   .rodata.__func__.14:00000000 __func__.14
     /tmp/ccl1pJez.s:4988   .bss.cpu_load:00000000 cpu_load
ARM GAS  /tmp/ccl1pJez.s 			page 180


     /tmp/ccl1pJez.s:4809   .rodata.__func__.13:00000000 __func__.13
     /tmp/ccl1pJez.s:5004   .bss.lcd_fg_buffer_rd_idx:00000000 lcd_fg_buffer_rd_idx
     /tmp/ccl1pJez.s:5010   .psram_bss:000f1800 lcd_fg_buffer
     /tmp/ccl1pJez.s:3689   .text.app_run:00000000 $t
     /tmp/ccl1pJez.s:3695   .text.app_run:00000000 app_run
     /tmp/ccl1pJez.s:4278   .text.app_run:0000021c $d
     /tmp/ccl1pJez.s:5028   .psram_bss:00268800 lcd_bg_buffer
     /tmp/ccl1pJez.s:5022   .data.lcd_bg_buffer_disp_idx:00000000 lcd_bg_buffer_disp_idx
     /tmp/ccl1pJez.s:4982   .psram_bss:00036000 screen_buffer
     /tmp/ccl1pJez.s:4769   .rodata.__func__.5:00000000 __func__.5
     /tmp/ccl1pJez.s:4844   .rodata.__func__.20:00000000 __func__.20
     /tmp/ccl1pJez.s:4904   .psram_bss:00000000 nn_input_buffers
     /tmp/ccl1pJez.s:4850   .bss.isp_sem_buffer:00000000 isp_sem_buffer
     /tmp/ccl1pJez.s:4892   .bss.nn_thread:00000000 nn_thread
     /tmp/ccl1pJez.s:4886   .bss.nn_thread_stack:00000000 nn_thread_stack
     /tmp/ccl1pJez.s:4880   .bss.dp_thread:00000000 dp_thread
     /tmp/ccl1pJez.s:4874   .bss.dp_thread_stack:00000000 dp_thread_stack
     /tmp/ccl1pJez.s:4868   .bss.isp_thread:00000000 isp_thread
     /tmp/ccl1pJez.s:4862   .bss.isp_thread_stack:00000000 isp_thread_stack
     /tmp/ccl1pJez.s:4320   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 $t
     /tmp/ccl1pJez.s:4326   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 CMW_CAMERA_PIPE_FrameEventCallback
     /tmp/ccl1pJez.s:4650   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000150 $d
     /tmp/ccl1pJez.s:4764   .rodata.__func__.3:00000000 __func__.3
     /tmp/ccl1pJez.s:4759   .rodata.__func__.2:00000000 __func__.2
     /tmp/ccl1pJez.s:4916   .bss.frame_event_nb:00000000 frame_event_nb
     /tmp/ccl1pJez.s:4754   .rodata.__func__.1:00000000 __func__.1
     /tmp/ccl1pJez.s:4910   .bss.frame_event_nb_for_resize:00000000 frame_event_nb_for_resize
     /tmp/ccl1pJez.s:4749   .rodata.__func__.0:00000000 __func__.0
     /tmp/ccl1pJez.s:5016   .bss.lcd_bg_buffer_capt_idx:00000000 lcd_bg_buffer_capt_idx
     /tmp/ccl1pJez.s:4673   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 $t
     /tmp/ccl1pJez.s:4679   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 CMW_CAMERA_PIPE_VsyncEventCallback
     /tmp/ccl1pJez.s:4742   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000030 $d
     /tmp/ccl1pJez.s:4847   .bss.isp_sem_buffer:00000000 $d
     /tmp/ccl1pJez.s:4853   .bss.isp_sem:00000000 $d
     /tmp/ccl1pJez.s:4859   .bss.isp_thread_stack:00000000 $d
     /tmp/ccl1pJez.s:4865   .bss.isp_thread:00000000 $d
     /tmp/ccl1pJez.s:4871   .bss.dp_thread_stack:00000000 $d
     /tmp/ccl1pJez.s:4877   .bss.dp_thread:00000000 $d
     /tmp/ccl1pJez.s:4883   .bss.nn_thread_stack:00000000 $d
     /tmp/ccl1pJez.s:4889   .bss.nn_thread:00000000 $d
     /tmp/ccl1pJez.s:4895   .bss.nn_input_queue:00000000 $d
     /tmp/ccl1pJez.s:4901   .psram_bss:00000000 $d
     /tmp/ccl1pJez.s:4907   .bss.frame_event_nb_for_resize:00000000 $d
     /tmp/ccl1pJez.s:4913   .bss.frame_event_nb:00000000 $d
     /tmp/ccl1pJez.s:4919   .bss.ld_landmarks:00000000 $d
     /tmp/ccl1pJez.s:4925   .data.NN_Instance_face_landmark:00000000 $d
     /tmp/ccl1pJez.s:4939   .rodata.NN_Interface_face_landmark:00000000 NN_Interface_face_landmark
     /tmp/ccl1pJez.s:4936   .rodata.NN_Interface_face_landmark:00000000 $d
     /tmp/ccl1pJez.s:4952   .data.NN_Instance_yolo_detector:00000000 $d
     /tmp/ccl1pJez.s:4966   .rodata.NN_Interface_yolo_detector:00000000 NN_Interface_yolo_detector
     /tmp/ccl1pJez.s:4963   .rodata.NN_Interface_yolo_detector:00000000 $d
     /tmp/ccl1pJez.s:4985   .bss.cpu_load:00000000 $d
     /tmp/ccl1pJez.s:4991   .data.disp:00000000 $d
     /tmp/ccl1pJez.s:5001   .bss.lcd_fg_buffer_rd_idx:00000000 $d
     /tmp/ccl1pJez.s:5013   .bss.lcd_bg_buffer_capt_idx:00000000 $d
     /tmp/ccl1pJez.s:5019   .data.lcd_bg_buffer_disp_idx:00000000 $d
                           .group:00000000 wm4.0.c552ae9005b0f2cca11872fae5d4b7f2
ARM GAS  /tmp/ccl1pJez.s 			page 181


                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.e0c9f337c65cb9f22ed5f23d082bc78b
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_gcc.h.26.7a5fd1a99dbedde687044a4433ab3e15
                           .group:00000000 wm4.newlib.h.7.591ac1bd65c1f5b34864757667a05252
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.math.h.13.47cfc34cae8a1153323939c4d32cf7c2
                           .group:00000000 wm4.float.h.29.0e9d9baf95ec39f9555dc80c6e28186b
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.arm_math_types.h.94.a6c8422e2657ad4cd95bd8be69ba02aa
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4.arm_mve.h.38.47b22bbd301ce82bc6dafd1a387f65a3
                           .group:00000000 wm4.arm_math_types.h.559.cab78f278b684a3ea2271947c7aea680
                           .group:00000000 wm4.arm_math_memory.h.28.fe8a81c6a9ac13061a5f748732089249
                           .group:00000000 wm4.none.h.185.db055cca83e83f96d8d0bb450fbdf4bb
                           .group:00000000 wm4.utils.h.27.57524573fe37b04009eecf3582a4c591
                           .group:00000000 wm4.fast_math_functions.h.28.8eb7477260c1d6b62047c49a01c4cbaa
                           .group:00000000 wm4.controller_functions.h.28.7bed7d7a726df2f65b8a3d89cff01247
                           .group:00000000 wm4.filtering_functions.h.46.6cf1424fb1f86d5f9958d208b83340a1
                           .group:00000000 wm4.postprocess_conf.h.22.acd6394ad2add93420e5bdf488e642e7
                           .group:00000000 wm4.app.h.24.1e91b432981a608d23d4a667d6d768a5
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.47.dc31ec4674d7bcb103c9f08809549f45
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4.app_cam.h.19.2495a46447d71a1025370e29864418f5
                           .group:00000000 wm4.app_config.h.19.88dee04c97f3e42d3acfeeca22b174e5
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.ll_aton_config.h.20.79eb8be0291ee9086e6be08969d61846
                           .group:00000000 wm4.ll_aton_attributes.h.20.26d469460cb32db5740effdc8cc403f3
                           .group:00000000 wm4.assert.h.11.d99a111e320bc5106fc4046225782672
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.ae5ea2b0ff9ea6e39e585807e35200d3
                           .group:00000000 wm4.ll_aton_util.h.34.9098eaa90d3d72b819973556e3e5fe44
                           .group:00000000 wm4.FreeRTOS.h.59.647b1b0da38e4e98108aae13c8abe9ee
                           .group:00000000 wm4.FreeRTOSConfig.h.59.2629c72cff9e6dbe880a2dc225eae516
                           .group:00000000 wm4.FreeRTOS.h.80.7742fabaf5accf3762dc12f7f259a8a0
                           .group:00000000 wm4.projdefs.h.30.55a824156f299c075c33148a9fdadb99
                           .group:00000000 wm4.portmacro.h.30.cbb4b2da41f551c2a9904f0d03a1ce3e
ARM GAS  /tmp/ccl1pJez.s 			page 182


                           .group:00000000 wm4.portmacrocommon.h.30.d5cb67896ab50a95311be7e023da5c4f
                           .group:00000000 wm4.portmacro.h.68.4051ecf710d074fb55b16d91dfebeeaa
                           .group:00000000 wm4.portable.h.61.d557c57974d490f056246a26cdcddd6c
                           .group:00000000 wm4.mpu_wrappers.h.30.ccc5f1a6903f941a88c268f5f62af3fe
                           .group:00000000 wm4.portable.h.189.522b8bd52a171d3fd1432ef06d0caa63
                           .group:00000000 wm4.FreeRTOS.h.102.fb871f3e464d99c5a57b3115545a02ad
                           .group:00000000 wm4.list.h.59.bce6419520cd4f5f98779a1530bf2118
                           .group:00000000 wm4.task.h.56.84290139c73b47f5b9aac361361a2a31
                           .group:00000000 wm4.queue.h.68.219f47fba8b59640449b84d04c5bd6d8
                           .group:00000000 wm4.semphr.h.40.c1a9c6f5bf0feb4da0b6a45d234a79d0
                           .group:00000000 wm4.ll_aton_platform.h.20.06ded592ee586a6abb6019a90ebd54df
                           .group:00000000 wm4.stm32n6xx_hal_conf.h.21.004a06df6e15ac197e03f723792da58a
                           .group:00000000 wm4.arm_cmse.h.103.a0d15a79c4c9a67da8d5831704d7248e
                           .group:00000000 wm4.stm32n6xx.h.34.80585dd08aa426c932f6311fdb7386da
                           .group:00000000 wm4.stm32n657xx.h.26.acd272cb67318cc1a4791ce2f0720ca6
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm55.h.68.832d5cf835639cc0d28219c3d2867330
                           .group:00000000 wm4.core_cm55.h.196.52e437a270752da561676e507b35baeb
                           .group:00000000 wm4.mpu_armv8.h.32.9d72426c8e2b47753456dcb84802c5b3
                           .group:00000000 wm4.pmu_armv8.h.32.eaa95f88a71b29390b135fd81c071b6b
                           .group:00000000 wm4.core_cm55.h.4411.860dad8650880893dd57b815844f7186
                           .group:00000000 wm4.cachel1_armv7.h.32.abd77761a989e008b0c60891114a33c7
                           .group:00000000 wm4.stm32n657xx.h.575.1c2a5e6bedffc6f9083dcc857bc6d09d
                           .group:00000000 wm4.stm32n6xx.h.114.5cf793d8af485e14f110e3e24bde1aa5
                           .group:00000000 wm4.stm32_hal_legacy.h.22.87fb12bf5a1a1e00fc134f22bc9aa8c4
                           .group:00000000 wm4.stm32n6xx_hal_def.h.63.2cbbf1954826c09c874c4e06e42e8b71
                           .group:00000000 wm4.stm32n6xx_ll_bus.h.38.2366a295ee4cdb04833997d3787fcd2d
                           .group:00000000 wm4.stm32n6xx_ll_rcc.h.21.002e22a16fd7f67dde6dce41e8ba9620
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.194.1cb1283e40f9bebcd3fba2a9a961838e
                           .group:00000000 wm4.stm32n6xx_hal_rcc_ex.h.21.79aa32178dfef625fbd20d362449acfa
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.4359.3f0b7ad33826d95438602c9aebc08af9
                           .group:00000000 wm4.stm32n6xx_hal_gpio.h.21.89d54af663b98eb8fc098192053f7eeb
                           .group:00000000 wm4.stm32n6xx_hal_gpio_ex.h.22.4acb2e3511a98bb48b81cfc8e09fd59e
                           .group:00000000 wm4.stm32n6xx_hal_rif.h.21.424d0bafb874a777dee3742a22e13037
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.21.61e48c5c2e8d25d22177834b232fe45c
                           .group:00000000 wm4.stm32n6xx_hal_dma_ex.h.21.66e597beb090a165329d6ccf665e41bc
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.1020.87e2180c009560b617c1f8208140c950
                           .group:00000000 wm4.stm32n6xx_hal_cortex.h.21.f493623cc58f9454ab4eae41e395c5cc
                           .group:00000000 wm4.stm32n6xx_hal_bsec.h.21.61b309e67dd810e28897a01b1b21a97f
                           .group:00000000 wm4.stm32n6xx_hal_dcmipp.h.21.f538bfd785c6469670251ac9bc7af55d
                           .group:00000000 wm4.stm32n6xx_hal_dma2d.h.21.75c8d46cdbb72970123b3f34ae2043d7
                           .group:00000000 wm4.stm32n6xx_hal_exti.h.21.fda87e715ea6b98239ec30171d1df594
                           .group:00000000 wm4.stm32n6xx_hal_gfxmmu.h.21.9784a9103143d48bd3c37389d0e0b8e6
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.21.3f483626ff64c5bf027265bb2e1d1331
                           .group:00000000 wm4.stm32n6xx_hal_i2c_ex.h.21.79e9196c22282cdaf6b4047893638c45
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.741.1084702632703acc669e4282b3043372
                           .group:00000000 wm4.stm32n6xx_hal_icache.h.21.194b4ec6e76f32b14f65c85616854850
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.21.ae1eb09930e7e550e48e418ac5849e4d
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.1002.b13ede7fc94ed5ad1c6768a157d2149a
                           .group:00000000 wm4.stm32n6xx_ll_usb.h.21.d518a5d97876c2ff49040c20a2c4a120
                           .group:00000000 wm4.stm32n6xx_hal_pcd.h.155.27040aac6844effe2af8c180caf1dd2e
                           .group:00000000 wm4.stm32n6xx_hal_pwr.h.21.cdb73e4869c3fed3fc84f901ec0e5f0a
                           .group:00000000 wm4.stm32n6xx_hal_pwr_ex.h.21.1a673224a58b0c1e5fad8eeda6514208
                           .group:00000000 wm4.stm32n6xx_hal_ramcfg.h.21.a62dfbb4d2c14e9a8c634a215e37bd3d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.21.9f810303326e2d91749800e9911f8e4d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.906.93ec0695066db4253cdbcb7d84358a0b
                           .group:00000000 wm4.stm32n6xx_hal_tim.h.21.839dd2b2a70382fb2c44f8f293a84d5f
ARM GAS  /tmp/ccl1pJez.s 			page 183


                           .group:00000000 wm4.stm32n6xx_hal_tim_ex.h.21.e372d5ac63c13441211ea4ecbd353150
                           .group:00000000 wm4.stm32n6xx_hal_uart.h.21.230f549bfa0d5ebfd77bfb311b2aca15
                           .group:00000000 wm4.stm32n6xx_hal_uart_ex.h.21.a0d5511e1d0703b7b5278c8f5472b96d
                           .group:00000000 wm4.stm32n6xx_hal_xspi.h.21.e17898be2073b6b6b19faf30b4e304e9
                           .group:00000000 wm4.stm32n6xx_hal_cacheaxi.h.21.7c3375b7903ec42376e4883320997f74
                           .group:00000000 wm4.stm32n6xx_hal_gpu2d.h.21.48d0249122abad294a630c39cc4ebaed
                           .group:00000000 wm4.stm32n6xx_hal.h.81.5e59143eba07faca3e9aeaa5470826c8
                           .group:00000000 wm4.ll_aton_platform.h.288.664a74b8c5792a861b3d52bd39f4a693
                           .group:00000000 wm4.ATON.h.19.cf7dff4c0f1bfe90e42066f604751dc7
                           .group:00000000 wm4.ll_aton_rcompat.h.22.b2bd0d777466a5ac720f3b2429c5fea7
                           .group:00000000 wm4.ll_aton_platform.h.383.f09ccd502bb682b863f991d963ee7462
                           .group:00000000 wm4.ll_aton_osal_freertos.h.62.85a065f77def7f6fef26149f92fe1378
                           .group:00000000 wm4.ll_aton_osal.h.116.bc018513feb9b28713cf2afc78ec679b
                           .group:00000000 wm4.ll_aton_rt_user_api.h.71.e6b7f8d03b2c998f838260ad3cb6cd40
                           .group:00000000 wm4.od_pp_output_if.h.11.62a3da738caf687aa42d96759c237b2c
                           .group:00000000 wm4.mpe_pp_output_if.h.11.db0dd5ceb87072354c56b51e8f9b2a0d
                           .group:00000000 wm4.pd_pp_output_if.h.19.b7de9bd1876930668a82409743b6dbf4
                           .group:00000000 wm4.spe_pp_output_if.h.11.cb67d0d15a71c95e0e8b7fee8a9755fe
                           .group:00000000 wm4.iseg_pp_output_if.h.11.df7e791a4e783022a9fba78cdb1c05d4
                           .group:00000000 wm4.sseg_pp_output_if.h.11.caf00fb1ae24f8dc9c80bee7827b96f2
                           .group:00000000 wm4.app_postprocess.h.49.6186ff44b2c06089fe0297042919e83a
                           .group:00000000 wm4.isp_conf.h.21.bfb1d020517608810095aa56acf25d1e
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.isp_core.h.109.be5387f515355b6edcb70af2607f9a68
                           .group:00000000 wm4.ld.h.19.137dbadf938c8a0cfe15d7982e5e13e2
                           .group:00000000 wm4.cmw_errno.h.21.91021ac9b2627a1ce6b8517d105715d1
                           .group:00000000 wm4.stm32n6570_discovery_conf.h.21.f52c8202689527a3dc0d9c6cba9c0416
                           .group:00000000 wm4.stm32n6570_discovery_errno.h.22.80e523b09444a11ebe4b6e24ae914f0e
                           .group:00000000 wm4.stm32n6570_discovery_bus.h.62.3b5b2c6837f7adeb489604fa214cd371
                           .group:00000000 wm4.cmw_camera.h.33.b34cbb506ffb5bbc0bae0cee9fc48966
                           .group:00000000 wm4.stm32n6570_discovery.h.25.5fc3699797f7c334a2e25a2a6a563b07
                           .group:00000000 wm4.lcd.h.21.98701c105e66fef2e089854e5bc0fe32
                           .group:00000000 wm4.stm32_lcd.h.55.1a04e503950bf34ef3721d2ebb9542fc
                           .group:00000000 wm4.stm32_lcd_ex.h.21.eaf9c9c1000e162e58259e027110f2f5
                           .group:00000000 wm4.utils.h.19.2f7e4a8a839d9215c56961f5a9914d6d
                           .group:00000000 wm4.nema_sys_defs.h.24.0b35b5138cb9b4a3130f5d424bc2bcc0
                           .group:00000000 wm4.nema_hal.h.193.74a3b292db2bcbda0132dae40ae0f4e5
                           .group:00000000 wm4.nema_cmdlist.h.30.a652eb980f08f0ed22ad00119d504926
                           .group:00000000 wm4.nema_graphics.h.61.b3907f86eccb4e55a4b69e8aebdd3657
                           .group:00000000 wm4.nema_blender.h.30.fb13cc9231bd108bca212984b3a891e0
                           .group:00000000 wm4.nema_math.h.30.ef7265c89982f7dae18e3ec2d7f3d003
                           .group:00000000 wm4.nema_version.h.35.6aae27202c190348dff84b89d4c12df7
                           .group:00000000 wm4.nema_error.h.29.50848ed81d21ff4ae4b870fae3681118

UNDEFINED SYMBOLS
cos
sin
xQueueSemaphoreTake
__assert_func
CAM_IspUpdate
xQueueGenericSend
BSP_PB_GetState
UTIL_LCD_FillCircle
LL_ATON_Output_Buffers_Info_yolo_detector
LL_ATON_Input_Buffers_Info_yolo_detector
ARM GAS  /tmp/ccl1pJez.s 			page 184


app_postprocess_init
LL_ATON_Output_Buffers_Info_face_landmark
LL_ATON_Input_Buffers_Info_face_landmark
HAL_GetTick
CAM_NNPipe_Start
LL_ATON_Set_User_Input_Buffer_yolo_detector
LL_ATON_RT_Main
app_postprocess_run
memset
IPL_resize_bilinear_iu8ou8_with_strides_RGB
ld_post_process
memcpy
UTIL_LCD_DrawRect
UTIL_LCD_DrawLine
__aeabi_ul2d
BSP_PB_Init
SCRL_SetAddress_NoReload
UTIL_LCD_FillRect
TIM4_Get_Value
ulTaskGetIdleRunTimeCounter
memmove
UTIL_LCD_GetFont
UTIL_LCDEx_PrintfAt
SCRL_ReloadLayer
puts
SCRL_Init
UTIL_LCD_SetLayer
UTIL_LCD_Clear
UTIL_LCD_SetFont
UTIL_LCD_SetTextColor
xQueueCreateCountingSemaphoreStatic
vQueueDelete
CAM_Init
xQueueCreateMutexStatic
CAM_DisplayPipe_Start
xTaskCreateStatic
Font20
CMW_CAMERA_GetDCMIPPHandle
HAL_DCMIPP_PIPE_SetMemoryAddress
SRCL_Update
xPortIsInsideInterrupt
xQueueGiveFromISR
LL_ATON_EC_Network_Init_face_landmark
LL_ATON_EC_Inference_Init_face_landmark
LL_ATON_Set_User_Input_Buffer_face_landmark
LL_ATON_Get_User_Input_Buffer_face_landmark
LL_ATON_Set_User_Output_Buffer_face_landmark
LL_ATON_Get_User_Output_Buffer_face_landmark
LL_ATON_EpochBlockItems_face_landmark
LL_ATON_Internal_Buffers_Info_face_landmark
LL_ATON_EC_Network_Init_yolo_detector
LL_ATON_EC_Inference_Init_yolo_detector
LL_ATON_Get_User_Input_Buffer_yolo_detector
LL_ATON_Set_User_Output_Buffer_yolo_detector
LL_ATON_Get_User_Output_Buffer_yolo_detector
LL_ATON_EpochBlockItems_yolo_detector
LL_ATON_Internal_Buffers_Info_yolo_detector
ARM GAS  /tmp/ccl1pJez.s 			page 185


