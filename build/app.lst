ARM GAS  /tmp/cc3ptn5O.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 4
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"app.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "Src/app.c"
  25              		.section	.text.LL_Buffer_addr_start,"ax",%progbits
  26              		.align	1
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	LL_Buffer_addr_start:
  32              	.LVL0:
  33              	.LFB2660:
  34              		.file 2 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h"
   1:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
   2:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   3:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @file    ll_aton_NN_interface.h
   4:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @author  SRA Artificial Intelligence & Embedded Architectures
   5:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief   Interface that defines a NN generated by the AtoNN Compiler.
   6:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   7:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @attention
   8:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
   9:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * Copyright (c) 2024 STMicroelectronics.
  10:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * All rights reserved.
  11:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  12:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * in the root directory of this software component.
  14:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  16:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
  17:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
  18:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  19:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef __LL_ATON_NN_INTERFACE_H
  20:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define __LL_ATON_NN_INTERFACE_H
  21:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  22:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef __cplusplus
  23:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** extern "C"
  24:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** {
ARM GAS  /tmp/cc3ptn5O.s 			page 2


  25:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
  26:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  27:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <assert.h>
  28:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdbool.h>
  29:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stddef.h>
  30:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdint.h>
  31:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  32:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_config.h"
  33:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  34:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_attributes.h"
  35:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_util.h"
  36:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  37:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup User I/O Return Values & Callback Event Types
  38:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  39:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  40:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  41:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_User_IO_Result
  42:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_NOERROR,     /**< */
  44:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_ALIGN, /**< */
  45:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_SIZE,  /**< */
  46:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_INDEX, /**< */
  47:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_User_IO_Result_t;
  48:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  49:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_RT_Callbacktype
  50:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  51:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_START,  /**< Callback called before start_epoch_block */
  52:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_START, /**< Callback called after start_epoch_block */
  53:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_END,    /**< Callback called before end_epoch_block */
  54:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_END,   /**< Callback called after end_epoch_block */
  55:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_Init,    /**< Callback called after `LL_ATON_RT_Init_Network`,
  56:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  57:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_DeInit,  /**< Callback called after `LL_ATON_RT_DeInit_Network`,
  58:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  59:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Init,    /**< Callback called after `LL_ATON_RT_RuntimeInit` */
  60:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Deinit,  /**< Callback called before `LL_ATON_RT_RuntimeDeInit` */
  61:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_RT_Callbacktype_t;
  62:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  63:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
  64:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
  65:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  66:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  67:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Epoch Blocks
  68:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  69:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  70:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  71:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /* this is needed to avoid some compilers (e.g. KEIL) that observe a strict semantic about conver
  72:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * pointers to integers in cost initializers
  73:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  74:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef union
  75:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  76:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     unsigned char *p;
  77:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t i;
  78:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } __LL_address_t;
  79:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  80:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*EpochBlock_FuncPtr_t)(const void *epoch_block);
  81:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 3


  82:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
  83:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_NONE = 0x0,                 /**< */
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_start = (0x1 << 0),   /**< First EpochBlock of an Epoch */
  86:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_end = (0x1 << 1),     /**< Last EpochBlock of an Epoch */
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob = (0x1 << 2),          /**< Item is an Epoch Blob */
  88:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_last_eb = (0x1 << 3),       /**< Last EpochBlock */
  89:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_hw = (0x1 << 4),       /**< Pure HW EpochBlock */
  90:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_sw = (0x1 << 5),       /**< Pure SW EpochBlock */
  91:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_hybrid = (0x1 << 6),        /**< Hybrid EpochBlock (i.e. mixed HW/SW) */
  92:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_internal = (0x1 << 7),      /**< ATON lib internal EpochBlock (used to impleme
  93:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob_encrypted = (0x1 << 8) /**< The blob is encrypted and must be decrypted o
  94:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_Flags_t;
  95:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  96:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
  97:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  98:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t start_epoch_block; /**< Method to execute the EpochBlock */
  99:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t end_epoch_block;   /**< Method to be executed when the EpochBlock ends */
 100:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t blob_address;                 /**< Blob address (in case this EpochBlock represents a
 101:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t wait_mask;                     /**< Mask needed to check when an EpochBlock ends
 102:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - if epoch blob: number (not bitmask) of epoch co
 103:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - otherwise: bitmask with all output streaming en
 104:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t flags;                         /**< EpochBlock flags */
 105:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef LL_ATON_EB_DBG_INFO
 106:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t epoch_num;             /**< Epoch number / First epoch number within blob */
 107:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t last_epoch_num;        /**< Epoch number / Last epoch number within blob */
 108:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t in_streng_mask;       /**< Debug information about input streaming engines used in epo
 109:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t out_streng_mask;      /**< Debug information about output streaming engines used in ep
 110:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_npu_cycles; /**< Debug information estimates for NPU cycles in epoch w/o mem
 111:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_tot_cycles; /**< Debug information estimates for NPU cycles in epoch w/ memo
 112:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                             // LL_ATON_EB_DBG_INFO
 113:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_ItemTypeDef;
 114:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef EpochBlock_ItemTypeDef LL_ATON_RT_EpochBlockItem_t;
 115:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 116:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 117:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 118:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 119:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 120:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for User Callbacks
 121:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 122:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 123:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 124:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 125:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last one of an array of `const EpochBlock_ItemType
 126:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 127:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 128:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb);
 129:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 130:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 131:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the first EpochBlock of an Epoch
 132:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 133:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 134:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb);
 135:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 136:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 137:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last EpochBlock of an Epoch
 138:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
ARM GAS  /tmp/cc3ptn5O.s 			page 4


 139:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 140:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb);
 141:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 142:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 143:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the an Epoch Blob
 144:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 145:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 146:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb);
 147:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 148:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 149:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if - in case this epoch is a blob (see above) - the blob is encrypted
 150:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 151:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 152:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb);
 153:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 154:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 155:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is pure SW epoch
 156:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 157:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 158:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb);
 159:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 160:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 161:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a pure HW or mixed SW/HW epoch
 162:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 163:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 164:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb);
 165:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 166:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 167:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a hybrid epoch
 168:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 169:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 170:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb);
 171:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 172:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 173:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is an internal epoch
 174:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 175:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 176:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb);
 177:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 178:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 179:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the Epoch controller id to use
 180:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 181:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 182:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb);
 183:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 184:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 185:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the address of the configuration of the epoch controller (the blob address)
 186:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 187:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 188:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb);
 189:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 190:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 191:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer types definition
 192:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 193:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 194:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 195:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
ARM GAS  /tmp/cc3ptn5O.s 			page 5


 196:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 197:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 198:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Input, Output, and Internal Buffers
 199:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 200:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 201:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 202:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 203:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 204:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UNDEFINED = 0,
 205:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT = 1,
 206:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT2 = 2,
 207:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT2 = 3,
 208:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT4 = 4,
 209:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT4 = 5,
 210:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT8 = 6,
 211:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT8 = 7,
 212:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT16 = 8,
 213:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT16 = 9,
 214:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT32 = 10,
 215:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT64 = 11,
 216:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_STRING = 12,
 217:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BOOL = 13,
 218:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT16 = 14,
 219:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_DOUBLE = 15,
 220:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT32 = 16,
 221:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT64 = 17,
 222:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX64 = 18,
 223:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX128 = 19,
 224:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BFLOAT16 = 20,
 225:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FXP = 100 // AtoNN specific
 226:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_DataType_TypeDef;
 227:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 228:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 229:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer Channel position
 230:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 231:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 232:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 233:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 234:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_UNDEFINED = 0, /**< No channel present */
 235:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_First = 1,     /**< Channel First         ( ...B C H W )*/
 236:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Last = 2,      /**< Channel Last          ( ...B H W C ) */
 237:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Mixed = 3,     /**< Channel with Batch(b) ( ...B C/b H W b ) */
 238:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_CHPos_TypeDef;
 239:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 240:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 241:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer definition
 242:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 243:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 244:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 245:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *name;             /**< Buffer name. NULL if end of list */
 246:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     __LL_address_t addr_base;     /**< Buffer base address */
 247:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_start;        /**< Offset of the buffer start address from the base address */
 248:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_end;          /**< Offset of the buffer end address from the base address
 249:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (first bytes address beyond buffer length) */
 250:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_limit;        /**< Offset of the limiter address from the base address,
 251:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (needed for configuring streaming engines) */
 252:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_user_allocated;    /**< */
ARM GAS  /tmp/cc3ptn5O.s 			page 6


 253:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_param;             /**< */
 254:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t epoch;               /**< */
 255:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t batch;               /**< */
 256:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *mem_shape;    /**< shape as seen by the user in memory (only valid for input/ou
 257:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t mem_ndims;           /**< Number of dimensions of mem_shape (Length of mem_shape) */
 258:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_CHPos_TypeDef chpos;   /**< Position  of channels dimension in mem shape */
 259:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_DataType_TypeDef type; /**< */
 260:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qm;                    /**< */
 261:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qn;                    /**< */
 262:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t Qunsigned;            /**< */
 263:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t ndims;                /**< */
 264:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t nbits;                /**< */
 265:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t per_channel;          /**< */
 266:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *shape;        /**< */
 267:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const float *scale;           /**< */
 268:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const int16_t *offset;        /**< This can become int8 or uint8 based on the Qunsigned field.
 269:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (This field Must have the same format of the quantized value
 270:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_Buffer_InfoTypeDef;
 271:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 272:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 273:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 274:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 275:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 276:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for Buffer Analysis
 277:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 278:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 279:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 280:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 281:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the base address of the mem pool the buffer is allocated in
 282:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 283:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 284:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf);
 285:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 286:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 287:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the start address of the buffer
 288:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 289:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 290:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf);
 291:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 292:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 293:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the end address of the buffer
 294:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 295:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 296:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf);
 297:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 298:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 299:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the limit address of the buffer
 300:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 301:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 302:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf);
 303:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 304:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 305:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the length of the buffer
 306:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 307:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 308:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf);
 309:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 7


 310:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 311:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the buffer elements number of bits
 312:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 313:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 314:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_bits(const LL_Buffer_InfoTypeDef *buf);
 315:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 316:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 317:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 318:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 319:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 320:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types and Declaration Macros for ATON Runtime Execution & User AP
 321:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 322:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 323:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 324:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct; // forward declaration
 325:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct __nn_instance_struct NN_Instance_TypeDef;
 326:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 327:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
 328:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief Declare the function prototypes for named NN interface functions generated by the AtoNN c
 329:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param network_name name of the network as provided by option `--network-name`
 330:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
 331:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)                                              
 332:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Network_Init_##network_name(void);                                        
 333:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Inference_Init_##network_name(void);                                      
 334:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_##network_name(uint32_t num, void *
 335:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                uint32_t size);     
 336:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Input_Buffer_##network_name(uint32_t num);                         
 337:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_##network_name(uint32_t num, void 
 338:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                 uint32_t size);    
 339:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Output_Buffer_##network_name(uint32_t num);                        
 340:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_##network_name(void);               
 341:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Output_Buffers_Info_##network_name(void);            
 342:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_##network_name(void);             
 343:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Internal_Buffers_Info_##network_name(void);
 344:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 345:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 346:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Type definitions for NN interface functions
 347:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 348:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef bool (*NN_EC_Hook_TypeDef)(void);
 349:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_InputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t s
 350:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_InputGetter_TypeDef)(uint32_t num);
 351:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_OutputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t 
 352:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_OutputGetter_TypeDef)(uint32_t num);
 353:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const EpochBlock_ItemTypeDef *(*NN_EpochBlockItems_TypeDef)(void);
 354:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const LL_Buffer_InfoTypeDef *(*NN_Buffers_Info_TypeDef)(void);
 355:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 356:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceRuntime_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype);
 357:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 358:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceEpochBlock_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype, const NN_Instance_Type
 359:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                             const EpochBlock_ItemTypeDef *epoch_block);
 360:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 361:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 362:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 363:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *network_name;
 364:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_network_init;
 365:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_inference_init;
 366:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputSetter_TypeDef input_setter;
ARM GAS  /tmp/cc3ptn5O.s 			page 8


 367:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputGetter_TypeDef input_getter;
 368:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputSetter_TypeDef output_setter;
 369:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputGetter_TypeDef output_getter;
 370:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EpochBlockItems_TypeDef epoch_block_items;
 371:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef output_buffers_info;
 372:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef input_buffers_info;
 373:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef internal_buffers_info;
 374:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Interface_TypeDef;
 375:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 376:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 377:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 378:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile current_epoch_block; // pointer to current epoch block
 379:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile first_epoch_block;   // pointer to first epoch block in 
 380:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile next_epoch_block;    // pointer to epoch block to be ins
 381:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 382:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile saved_current_epoch_block; // pointer to saved current e
 383:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef
 384:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         *volatile saved_first_epoch_block; // pointer to saved first epoch block in current epoch l
 385:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 386:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     bool inference_started; // inference has been started
 387:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 388:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 389:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t triggered_events;        // currently triggered events/IRQs in current epoch
 390:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile bool current_epoch_block_started; // has current epoch block already been started
 391:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                         // (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 392:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 393:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef NDEBUG
 394:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t
 395:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         nr_of_epoch_blocks; // number of epoch blocks in network (includes also terminating empty e
 396:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t saved_nr_of_epoch_blocks; // number of epoch blocks in saved network (include
 397:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                 // empty epoch block)
 398:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                          // NDEBUG
 399:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 400:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     TraceEpochBlock_FuncPtr_t epoch_callback_function; // epoch callback function
 401:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 402:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if defined(LL_ATON_RT_RELOC)
 403:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t inst_reloc;
 404:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
 405:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 406:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Execution_State_TypeDef;
 407:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 408:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct
 409:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 410:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const NN_Interface_TypeDef *network;
 411:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Execution_State_TypeDef exec_state;
 412:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   };
 413:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 414:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 415:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 416:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 417:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 418:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Inline Implementations
 419:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 420:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 421:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 422:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb)
 423:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/cc3ptn5O.s 			page 9


 424:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_last_eb) != 0);
 425:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 426:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 427:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb)
 428:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 429:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_start) != 0);
 430:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 431:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 432:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb)
 433:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 434:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_end) != 0);
 435:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 436:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 437:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb)
 438:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 439:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob) != 0);
 440:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 441:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 442:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb)
 443:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 444:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob_encrypted) != 0);
 445:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 446:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 447:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb)
 448:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 449:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_sw) != 0);
 450:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 451:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 452:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb)
 453:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 454:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_hw) != 0);
 455:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 456:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 457:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb)
 458:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 459:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_hybrid) != 0);
 460:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 461:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 462:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb)
 463:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 464:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_internal) != 0);
 465:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 466:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 467:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb)
 468:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 469:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 470:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->wait_mask;
 471:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 472:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 473:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb)
 474:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 475:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 476:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->blob_address;
 477:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 478:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf)
 480:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/cc3ptn5O.s 			page 10


 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     if (buf->is_user_allocated)
 482:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       unsigned char **tmp = (unsigned char **)buf->addr_base.p;
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
 485:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 486:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->addr_base.p;
 487:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 488:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 489:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf)
 490:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  35              		.loc 2 490 3 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_start;
  40              		.loc 2 491 5 view .LVU1
  41              	.LBB186:
  42              	.LBI186:
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43              		.loc 2 479 32 view .LVU2
  44              	.LBB187:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  45              		.loc 2 481 5 view .LVU3
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  46              		.loc 2 481 8 is_stmt 0 view .LVU4
  47 0000 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
  48              	.LBB188:
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
  49              		.loc 2 483 23 view .LVU5
  50 0002 4368     		ldr	r3, [r0, #4]
  51              	.LBE188:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  52              		.loc 2 481 8 view .LVU6
  53 0004 02B1     		cbz	r2, .L2
  54              	.LBB189:
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
  55              		.loc 2 483 7 is_stmt 1 view .LVU7
  56              	.LVL1:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  57              		.loc 2 484 7 view .LVU8
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  58              		.loc 2 484 14 is_stmt 0 view .LVU9
  59 0006 1B68     		ldr	r3, [r3]
  60              	.LVL2:
  61              	.L2:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  62              		.loc 2 484 14 view .LVU10
  63              	.LBE189:
  64              	.LBE187:
  65              	.LBE186:
  66              		.loc 2 491 37 discriminator 1 view .LVU11
  67 0008 8068     		ldr	r0, [r0, #8]
  68              	.LVL3:
 492:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
  69              		.loc 2 492 3 view .LVU12
  70 000a 1844     		add	r0, r0, r3
ARM GAS  /tmp/cc3ptn5O.s 			page 11


  71 000c 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE2660:
  75              		.section	.text.clamp_point,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	clamp_point:
  82              	.LVL4:
  83              	.LFB7382:
   1:Src/app.c     **** /**
   2:Src/app.c     ****   ******************************************************************************
   3:Src/app.c     ****   * @file    app.c
   4:Src/app.c     ****   * @author  MDG Application Team
   5:Src/app.c     ****   ******************************************************************************
   6:Src/app.c     ****   * @attention
   7:Src/app.c     ****   *
   8:Src/app.c     ****   * Copyright (c) 2024 STMicroelectronics.
   9:Src/app.c     ****   * All rights reserved.
  10:Src/app.c     ****   *
  11:Src/app.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  12:Src/app.c     ****   * in the root directory of this software component.
  13:Src/app.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  14:Src/app.c     ****   *
  15:Src/app.c     ****   ******************************************************************************
  16:Src/app.c     ****   */
  17:Src/app.c     **** 
  18:Src/app.c     **** #include "app.h"
  19:Src/app.c     **** 
  20:Src/app.c     **** #include <stdint.h>
  21:Src/app.c     **** #include <stdio.h>
  22:Src/app.c     **** 
  23:Src/app.c     **** #include "app_cam.h"
  24:Src/app.c     **** #include "app_config.h"
  25:Src/app.c     **** #include "IPL_resize.h"
  26:Src/app.c     **** #include "app_postprocess.h"
  27:Src/app.c     **** #include "isp_api.h"
  28:Src/app.c     **** #include "ld.h"
  29:Src/app.c     **** #include "ll_aton_runtime.h"
  30:Src/app.c     **** #include "cmw_camera.h"
  31:Src/app.c     **** #include "scrl.h"
  32:Src/app.c     **** #ifdef STM32N6570_DK_REV
  33:Src/app.c     **** #include "stm32n6570_discovery.h"
  34:Src/app.c     **** #else
  35:Src/app.c     **** #include "stm32n6xx_nucleo.h"
  36:Src/app.c     **** #endif
  37:Src/app.c     **** #include "stm32_lcd.h"
  38:Src/app.c     **** #include "stm32_lcd_ex.h"
  39:Src/app.c     **** #include "stm32n6xx_hal.h"
  40:Src/app.c     **** #include "FreeRTOS.h"
  41:Src/app.c     **** #include "task.h"
  42:Src/app.c     **** #include "semphr.h"
  43:Src/app.c     **** #include "utils.h"
  44:Src/app.c     **** 
  45:Src/app.c     **** #define FREERTOS_PRIORITY(p) ((UBaseType_t)((int)tskIDLE_PRIORITY + configMAX_PRIORITIES / 2 + (p))
  46:Src/app.c     **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 12


  47:Src/app.c     **** #ifndef M_PI
  48:Src/app.c     **** #define M_PI 3.14159265358979323846
  49:Src/app.c     **** #endif
  50:Src/app.c     **** 
  51:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  52:Src/app.c     **** #include "nema_core.h"
  53:Src/app.c     **** #include "nema_error.h"
  54:Src/app.c     **** void nema_enable_tiling(int);
  55:Src/app.c     **** #endif
  56:Src/app.c     **** 
  57:Src/app.c     **** #define LCD_FG_WIDTH LCD_BG_WIDTH
  58:Src/app.c     **** #define LCD_FG_HEIGHT LCD_BG_HEIGHT
  59:Src/app.c     **** 
  60:Src/app.c     **** #define CACHE_OP(__op__) do { \
  61:Src/app.c     ****   if (is_cache_enable()) { \
  62:Src/app.c     ****     __op__; \
  63:Src/app.c     ****   } \
  64:Src/app.c     **** } while (0)
  65:Src/app.c     **** 
  66:Src/app.c     **** #define DBG_INFO 0
  67:Src/app.c     **** #define USE_FILTERED_TS 1
  68:Src/app.c     **** 
  69:Src/app.c     **** #define BQUEUE_MAX_BUFFERS 2
  70:Src/app.c     **** #define CPU_LOAD_HISTORY_DEPTH 8
  71:Src/app.c     **** 
  72:Src/app.c     **** #define DISPLAY_BUFFER_NB (DISPLAY_DELAY + 2)
  73:Src/app.c     **** 
  74:Src/app.c     **** /* palm detector */
  75:Src/app.c     **** #define PD_MAX_HAND_NB 1
  76:Src/app.c     **** 
  77:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  78:Src/app.c     **** typedef float app_v3_t[3];
  79:Src/app.c     **** #endif
  80:Src/app.c     **** 
  81:Src/app.c     **** typedef struct {
  82:Src/app.c     ****   float cx;
  83:Src/app.c     ****   float cy;
  84:Src/app.c     ****   float w;
  85:Src/app.c     ****   float h;
  86:Src/app.c     ****   float rotation;
  87:Src/app.c     **** } roi_t;
  88:Src/app.c     **** 
  89:Src/app.c     **** #define UTIL_LCD_COLOR_TRANSPARENT 0
  90:Src/app.c     **** 
  91:Src/app.c     **** #ifdef STM32N6570_DK_REV
  92:Src/app.c     **** #define LCD_FONT Font20
  93:Src/app.c     **** #define DISK_RADIUS 2
  94:Src/app.c     **** #else
  95:Src/app.c     **** #define LCD_FONT Font12
  96:Src/app.c     **** #define DISK_RADIUS 1
  97:Src/app.c     **** #endif
  98:Src/app.c     **** 
  99:Src/app.c     **** typedef struct
 100:Src/app.c     **** {
 101:Src/app.c     ****   uint32_t X0;
 102:Src/app.c     ****   uint32_t Y0;
 103:Src/app.c     ****   uint32_t XSize;
ARM GAS  /tmp/cc3ptn5O.s 			page 13


 104:Src/app.c     ****   uint32_t YSize;
 105:Src/app.c     **** } Rectangle_TypeDef;
 106:Src/app.c     **** 
 107:Src/app.c     **** typedef struct {
 108:Src/app.c     ****   SemaphoreHandle_t free;
 109:Src/app.c     ****   StaticSemaphore_t free_buffer;
 110:Src/app.c     ****   SemaphoreHandle_t ready;
 111:Src/app.c     ****   StaticSemaphore_t ready_buffer;
 112:Src/app.c     ****   int buffer_nb;
 113:Src/app.c     ****   uint8_t *buffers[BQUEUE_MAX_BUFFERS];
 114:Src/app.c     ****   int free_idx;
 115:Src/app.c     ****   int ready_idx;
 116:Src/app.c     **** } bqueue_t;
 117:Src/app.c     **** 
 118:Src/app.c     **** typedef struct {
 119:Src/app.c     ****   uint64_t current_total;
 120:Src/app.c     ****   uint64_t current_thread_total;
 121:Src/app.c     ****   uint64_t prev_total;
 122:Src/app.c     ****   uint64_t prev_thread_total;
 123:Src/app.c     ****   struct {
 124:Src/app.c     ****     uint64_t total;
 125:Src/app.c     ****     uint64_t thread;
 126:Src/app.c     ****     uint32_t tick;
 127:Src/app.c     ****   } history[CPU_LOAD_HISTORY_DEPTH];
 128:Src/app.c     **** } cpuload_info_t;
 129:Src/app.c     **** 
 130:Src/app.c     **** typedef struct {
 131:Src/app.c     ****   int is_valid;
 132:Src/app.c     ****   pd_pp_box_t pd_hands;
 133:Src/app.c     ****   roi_t roi;
 134:Src/app.c     ****   ld_point_t ld_landmarks[LD_LANDMARK_NB];
 135:Src/app.c     **** } hand_info_t;
 136:Src/app.c     **** 
 137:Src/app.c     **** typedef struct {
 138:Src/app.c     ****   float nn_period_ms;
 139:Src/app.c     ****   uint32_t pd_ms;
 140:Src/app.c     ****   uint32_t hl_ms;
 141:Src/app.c     ****   uint32_t pp_ms;
 142:Src/app.c     ****   uint32_t disp_ms;
 143:Src/app.c     ****   int is_ld_displayed;
 144:Src/app.c     ****   int is_pd_displayed;
 145:Src/app.c     ****   int pd_hand_nb;
 146:Src/app.c     ****   float pd_max_prob;
 147:Src/app.c     ****   hand_info_t hands[PD_MAX_HAND_NB];
 148:Src/app.c     **** } display_info_t;
 149:Src/app.c     **** 
 150:Src/app.c     **** typedef struct {
 151:Src/app.c     ****   SemaphoreHandle_t update;
 152:Src/app.c     ****   StaticSemaphore_t update_buffer;
 153:Src/app.c     ****   SemaphoreHandle_t lock;
 154:Src/app.c     ****   StaticSemaphore_t lock_buffer;
 155:Src/app.c     ****   display_info_t info;
 156:Src/app.c     **** } display_t;
 157:Src/app.c     **** 
 158:Src/app.c     **** typedef struct {
 159:Src/app.c     ****   uint32_t nn_in_len;
 160:Src/app.c     ****   float *prob_out;
ARM GAS  /tmp/cc3ptn5O.s 			page 14


 161:Src/app.c     ****   uint32_t prob_out_len;
 162:Src/app.c     ****   float *boxes_out;
 163:Src/app.c     ****   uint32_t boxes_out_len;
 164:Src/app.c     ****   pd_model_pp_static_param_t static_param;
 165:Src/app.c     ****   pd_pp_out_t pd_out;
 166:Src/app.c     **** } pd_model_info_t;
 167:Src/app.c     **** 
 168:Src/app.c     **** /**
 169:Src/app.c     ****  * @brief  YOLO detector model context struct
 170:Src/app.c     ****  */
 171:Src/app.c     **** typedef struct {
 172:Src/app.c     ****   // Input buffer info
 173:Src/app.c     ****   uint32_t nn_in_len;
 174:Src/app.c     **** 
 175:Src/app.c     ****   // Raw output buffer info from the model
 176:Src/app.c     ****   float *raw_detections_out;
 177:Src/app.c     ****   uint32_t raw_detections_out_len;
 178:Src/app.c     **** 
 179:Src/app.c     ****   // Post-processing parameters and final output
 180:Src/app.c     ****   od_yolov8_pp_static_param_t static_param;
 181:Src/app.c     ****   od_pp_out_t yolo_out; 
 182:Src/app.c     **** } yolo_detector_info_t;
 183:Src/app.c     **** 
 184:Src/app.c     **** typedef struct {
 185:Src/app.c     ****   uint8_t *nn_in;
 186:Src/app.c     ****   uint32_t nn_in_len;
 187:Src/app.c     ****   float *prob_out;
 188:Src/app.c     ****   uint32_t prob_out_len;
 189:Src/app.c     ****   float *landmarks_out;
 190:Src/app.c     ****   uint32_t landmarks_out_len;
 191:Src/app.c     **** } hl_model_info_t;
 192:Src/app.c     **** 
 193:Src/app.c     **** typedef struct {
 194:Src/app.c     ****   uint8_t *nn_in;
 195:Src/app.c     ****   uint32_t nn_in_len;
 196:Src/app.c     ****   float *prob_out;
 197:Src/app.c     ****   uint32_t prob_out_len;
 198:Src/app.c     ****   float *landmarks_out;
 199:Src/app.c     ****   uint32_t landmarks_out_len;
 200:Src/app.c     **** } fl_model_info_t;
 201:Src/app.c     **** 
 202:Src/app.c     **** typedef struct {
 203:Src/app.c     ****   Button_TypeDef button_id;
 204:Src/app.c     ****   int prev_state;
 205:Src/app.c     ****   void (*on_click_handler)(void *cb_args);
 206:Src/app.c     ****   void *cb_args;
 207:Src/app.c     **** } button_t;
 208:Src/app.c     **** 
 209:Src/app.c     **** /* Globals */
 210:Src/app.c     **** /* Lcd Background area */
 211:Src/app.c     **** static Rectangle_TypeDef lcd_bg_area = {
 212:Src/app.c     ****   .X0 = 0,
 213:Src/app.c     ****   .Y0 = 0,
 214:Src/app.c     ****   .XSize = LCD_BG_WIDTH,
 215:Src/app.c     ****   .YSize = LCD_BG_HEIGHT,
 216:Src/app.c     **** };
 217:Src/app.c     **** /* Lcd Foreground area */
ARM GAS  /tmp/cc3ptn5O.s 			page 15


 218:Src/app.c     **** static Rectangle_TypeDef lcd_fg_area = {
 219:Src/app.c     ****   .X0 = 0,
 220:Src/app.c     ****   .Y0 = 0,
 221:Src/app.c     ****   .XSize = LCD_FG_WIDTH,
 222:Src/app.c     ****   .YSize = LCD_FG_HEIGHT,
 223:Src/app.c     **** };
 224:Src/app.c     **** /* Lcd Background Buffer */
 225:Src/app.c     **** static uint8_t lcd_bg_buffer[DISPLAY_BUFFER_NB][LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP] ALIGN_3
 226:Src/app.c     **** static int lcd_bg_buffer_disp_idx = 1;
 227:Src/app.c     **** static int lcd_bg_buffer_capt_idx = 0;
 228:Src/app.c     **** /* Lcd Foreground Buffer */
 229:Src/app.c     **** static uint8_t lcd_fg_buffer[2][LCD_FG_WIDTH * LCD_FG_HEIGHT* 2] ALIGN_32 IN_PSRAM;
 230:Src/app.c     **** static int lcd_fg_buffer_rd_idx;
 231:Src/app.c     **** static display_t disp = {
 232:Src/app.c     ****   .info.is_ld_displayed = 1,
 233:Src/app.c     ****   .info.is_pd_displayed = 0,
 234:Src/app.c     **** };
 235:Src/app.c     **** static cpuload_info_t cpu_load;
 236:Src/app.c     **** /* screen buffer */
 237:Src/app.c     **** static uint8_t screen_buffer[LCD_BG_WIDTH * LCD_BG_HEIGHT * 2] ALIGN_32 IN_PSRAM;
 238:Src/app.c     **** 
 239:Src/app.c     **** /* model */
 240:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(yolo_detector);
 241:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(face_landmark);
 242:Src/app.c     **** static roi_t rois[PD_MAX_HAND_NB];
 243:Src/app.c     ****  /* hand landmark */
 244:Src/app.c     **** //LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(hand_landmark);
 245:Src/app.c     **** static ld_point_t ld_landmarks[PD_MAX_HAND_NB][LD_LANDMARK_NB];
 246:Src/app.c     **** static uint32_t frame_event_nb;
 247:Src/app.c     **** static volatile uint32_t frame_event_nb_for_resize;
 248:Src/app.c     **** 
 249:Src/app.c     ****  /* nn input buffers */
 250:Src/app.c     **** static uint8_t nn_input_buffers[2][NN_WIDTH * NN_HEIGHT * NN_BPP] ALIGN_32 IN_PSRAM;
 251:Src/app.c     **** static bqueue_t nn_input_queue;
 252:Src/app.c     **** 
 253:Src/app.c     ****  /* rtos */
 254:Src/app.c     **** static StaticTask_t nn_thread;
 255:Src/app.c     **** static StackType_t nn_thread_stack[4 * configMINIMAL_STACK_SIZE];
 256:Src/app.c     **** static StaticTask_t dp_thread;
 257:Src/app.c     **** static StackType_t dp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 258:Src/app.c     **** static StaticTask_t isp_thread;
 259:Src/app.c     **** static StackType_t isp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 260:Src/app.c     **** static SemaphoreHandle_t isp_sem;
 261:Src/app.c     **** static StaticSemaphore_t isp_sem_buffer;
 262:Src/app.c     **** 
 263:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
 264:Src/app.c     **** static GFXMMU_HandleTypeDef hgfxmmu;
 265:Src/app.c     **** static nema_cmdlist_t cl;
 266:Src/app.c     **** #endif
 267:Src/app.c     **** 
 268:Src/app.c     **** static int is_cache_enable()
 269:Src/app.c     **** {
 270:Src/app.c     **** #if defined(USE_DCACHE)
 271:Src/app.c     ****   return 1;
 272:Src/app.c     **** #else
 273:Src/app.c     ****   return 0;
 274:Src/app.c     **** #endif
ARM GAS  /tmp/cc3ptn5O.s 			page 16


 275:Src/app.c     **** }
 276:Src/app.c     **** 
 277:Src/app.c     **** static float pd_normalize_angle(float angle)
 278:Src/app.c     **** {
 279:Src/app.c     ****   return angle - 2 * M_PI * floorf((angle - (-M_PI)) / (2 * M_PI));
 280:Src/app.c     **** }
 281:Src/app.c     **** 
 282:Src/app.c     **** /* Without rotation support allow limited amount of angles */
 283:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 284:Src/app.c     **** static float pd_cook_rotation(float angle)
 285:Src/app.c     **** {
 286:Src/app.c     ****   if (angle >= (3 * M_PI) / 4)
 287:Src/app.c     ****     angle = M_PI;
 288:Src/app.c     ****   else if (angle >= (1 * M_PI) / 4)
 289:Src/app.c     ****     angle = M_PI / 2;
 290:Src/app.c     ****   else if (angle >= -(1 * M_PI) / 4)
 291:Src/app.c     ****     angle = 0;
 292:Src/app.c     ****   else if (angle >= -(3 * M_PI) / 4)
 293:Src/app.c     ****     angle = -M_PI / 2;
 294:Src/app.c     ****   else
 295:Src/app.c     ****     angle = -M_PI;
 296:Src/app.c     **** 
 297:Src/app.c     ****   return angle;
 298:Src/app.c     **** }
 299:Src/app.c     **** #else
 300:Src/app.c     **** static float pd_cook_rotation(float angle)
 301:Src/app.c     **** {
 302:Src/app.c     ****   return angle;
 303:Src/app.c     **** }
 304:Src/app.c     **** #endif
 305:Src/app.c     **** 
 306:Src/app.c     **** static float pd_compute_rotation(pd_pp_box_t *box)
 307:Src/app.c     **** {
 308:Src/app.c     ****   float x0, y0, x1, y1;
 309:Src/app.c     ****   float rotation;
 310:Src/app.c     **** 
 311:Src/app.c     ****   x0 = box->pKps[0].x;
 312:Src/app.c     ****   y0 = box->pKps[0].y;
 313:Src/app.c     ****   x1 = box->pKps[2].x;
 314:Src/app.c     ****   y1 = box->pKps[2].y;
 315:Src/app.c     **** 
 316:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
 317:Src/app.c     **** 
 318:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
 319:Src/app.c     **** }
 320:Src/app.c     **** 
 321:Src/app.c     **** static void cvt_pd_coord_to_screen_coord(pd_pp_box_t *box)
 322:Src/app.c     **** {
 323:Src/app.c     ****   int i;
 324:Src/app.c     **** 
 325:Src/app.c     ****   /* This is not a typo. Since screen aspect ratio was conserved. We really want to use LCD_BG_WIDT
 326:Src/app.c     ****    * y positions.
 327:Src/app.c     ****    */
 328:Src/app.c     **** 
 329:Src/app.c     ****   box->x_center *= LCD_BG_WIDTH;
 330:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 331:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
ARM GAS  /tmp/cc3ptn5O.s 			page 17


 332:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 333:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 334:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 335:Src/app.c     ****     box->pKps[i].y *= LCD_BG_WIDTH;
 336:Src/app.c     ****   }
 337:Src/app.c     **** }
 338:Src/app.c     **** 
 339:Src/app.c     **** static void roi_shift_and_scale(roi_t *roi, float shift_x, float shift_y, float scale_x, float scal
 340:Src/app.c     **** {
 341:Src/app.c     ****   float long_side;
 342:Src/app.c     ****   float sx, sy;
 343:Src/app.c     **** 
 344:Src/app.c     ****   sx = (roi->w * shift_x * cos(roi->rotation) - roi->h * shift_y * sin(roi->rotation));
 345:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 346:Src/app.c     **** 
 347:Src/app.c     ****   roi->cx += sx;
 348:Src/app.c     ****   roi->cy += sy;
 349:Src/app.c     **** 
 350:Src/app.c     ****   long_side = MAX(roi->w, roi->h);
 351:Src/app.c     ****   roi->w = long_side;
 352:Src/app.c     ****   roi->h = long_side;
 353:Src/app.c     **** 
 354:Src/app.c     ****   roi->w *= scale_x;
 355:Src/app.c     ****   roi->h *= scale_y;
 356:Src/app.c     **** }
 357:Src/app.c     **** 
 358:Src/app.c     **** static void pd_box_to_roi(pd_pp_box_t *box,  roi_t *roi)
 359:Src/app.c     **** {
 360:Src/app.c     ****   const float shift_x = 0;
 361:Src/app.c     ****   const float shift_y = -0.5;
 362:Src/app.c     ****   const float scale = 2.6;
 363:Src/app.c     **** 
 364:Src/app.c     ****   roi->cx = box->x_center;
 365:Src/app.c     ****   roi->cy = box->y_center;
 366:Src/app.c     ****   roi->w = box->width;
 367:Src/app.c     ****   roi->h = box->height;
 368:Src/app.c     ****   roi->rotation = pd_compute_rotation(box);
 369:Src/app.c     **** 
 370:Src/app.c     ****   roi_shift_and_scale(roi, shift_x, shift_y, scale, scale);
 371:Src/app.c     **** 
 372:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 373:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
 374:Src/app.c     ****   roi->rotation = 0;
 375:Src/app.c     **** #endif
 376:Src/app.c     **** }
 377:Src/app.c     **** 
 378:Src/app.c     **** static void copy_yolo_box(od_pp_outBuffer_t *dst, const od_pp_outBuffer_t *src)
 379:Src/app.c     **** {
 380:Src/app.c     ****   dst->conf = src->conf;
 381:Src/app.c     ****   dst->x_center = src->x_center;
 382:Src/app.c     ****   dst->y_center = src->y_center;
 383:Src/app.c     ****   dst->width = src->width;
 384:Src/app.c     ****   dst->height = src->height;
 385:Src/app.c     ****   dst->class_index = src->class_index;
 386:Src/app.c     **** }
 387:Src/app.c     **** 
 388:Src/app.c     **** static void clear_yolo_output(od_pp_outBuffer_t *output, int max_count) {
ARM GAS  /tmp/cc3ptn5O.s 			page 18


 389:Src/app.c     ****     for (int i = 0; i < max_count; i++) {
 390:Src/app.c     ****         output[i].conf = 0.0f;
 391:Src/app.c     ****         output[i].x_center = 0.0f;
 392:Src/app.c     ****         output[i].y_center = 0.0f;
 393:Src/app.c     ****         output[i].width = 0.0f;
 394:Src/app.c     ****         output[i].height = 0.0f;
 395:Src/app.c     ****         output[i].class_index = -1;  // invalid
 396:Src/app.c     ****     }
 397:Src/app.c     **** }
 398:Src/app.c     **** static void copy_pd_box(pd_pp_box_t *dst, pd_pp_box_t *src)
 399:Src/app.c     **** {
 400:Src/app.c     ****   int i;
 401:Src/app.c     **** 
 402:Src/app.c     ****   dst->prob = src->prob;
 403:Src/app.c     ****   dst->x_center = src->x_center;
 404:Src/app.c     ****   dst->y_center = src->y_center;
 405:Src/app.c     ****   dst->width = src->width;
 406:Src/app.c     ****   dst->height = src->height;
 407:Src/app.c     ****   for (i = 0 ; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++)
 408:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 409:Src/app.c     **** }
 410:Src/app.c     **** 
 411:Src/app.c     **** static void button_init(button_t *b, Button_TypeDef id, void (*on_click_handler)(void *), void *cb_
 412:Src/app.c     **** {
 413:Src/app.c     ****   int ret;
 414:Src/app.c     **** 
 415:Src/app.c     ****   ret = BSP_PB_Init(id, BUTTON_MODE_GPIO);
 416:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 417:Src/app.c     **** 
 418:Src/app.c     ****   b->button_id = id;
 419:Src/app.c     ****   b->on_click_handler = on_click_handler;
 420:Src/app.c     ****   b->prev_state = 0;
 421:Src/app.c     ****   b->cb_args = cb_args;
 422:Src/app.c     **** }
 423:Src/app.c     **** 
 424:Src/app.c     **** static void button_process(button_t *b)
 425:Src/app.c     **** {
 426:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 427:Src/app.c     **** 
 428:Src/app.c     ****   if (state != b->prev_state && state && b->on_click_handler)
 429:Src/app.c     ****     b->on_click_handler(b->cb_args);
 430:Src/app.c     **** 
 431:Src/app.c     ****   b->prev_state = state;
 432:Src/app.c     **** }
 433:Src/app.c     **** 
 434:Src/app.c     **** static void cpuload_init(cpuload_info_t *cpu_load)
 435:Src/app.c     **** {
 436:Src/app.c     ****   memset(cpu_load, 0, sizeof(cpuload_info_t));
 437:Src/app.c     **** }
 438:Src/app.c     **** 
 439:Src/app.c     **** static void cpuload_update(cpuload_info_t *cpu_load)
 440:Src/app.c     **** {
 441:Src/app.c     ****   int i;
 442:Src/app.c     **** 
 443:Src/app.c     ****   cpu_load->history[1] = cpu_load->history[0];
 444:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 445:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
ARM GAS  /tmp/cc3ptn5O.s 			page 19


 446:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 447:Src/app.c     **** 
 448:Src/app.c     ****   if (cpu_load->history[1].tick - cpu_load->history[2].tick < 1000)
 449:Src/app.c     ****     return ;
 450:Src/app.c     **** 
 451:Src/app.c     ****   for (i = 0; i < CPU_LOAD_HISTORY_DEPTH - 2; i++)
 452:Src/app.c     ****     cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 1 - i] = cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 
 453:Src/app.c     **** }
 454:Src/app.c     **** 
 455:Src/app.c     **** static void cpuload_get_info(cpuload_info_t *cpu_load, float *cpu_load_last, float *cpu_load_last_s
 456:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 457:Src/app.c     **** {
 458:Src/app.c     ****   if (cpu_load_last)
 459:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 460:Src/app.c     ****                      (cpu_load->history[0].total - cpu_load->history[1].total);
 461:Src/app.c     ****   if (cpu_load_last_second)
 462:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 463:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 464:Src/app.c     ****   if (cpu_load_last_five_seconds)
 465:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 466:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[7].total);
 467:Src/app.c     **** }
 468:Src/app.c     **** 
 469:Src/app.c     **** static int bqueue_init(bqueue_t *bq, int buffer_nb, uint8_t **buffers)
 470:Src/app.c     **** {
 471:Src/app.c     ****   int i;
 472:Src/app.c     **** 
 473:Src/app.c     ****   if (buffer_nb > BQUEUE_MAX_BUFFERS)
 474:Src/app.c     ****     return -1;
 475:Src/app.c     **** 
 476:Src/app.c     ****   bq->free = xSemaphoreCreateCountingStatic(buffer_nb, buffer_nb, &bq->free_buffer);
 477:Src/app.c     ****   if (!bq->free)
 478:Src/app.c     ****     goto free_sem_error;
 479:Src/app.c     ****   bq->ready = xSemaphoreCreateCountingStatic(buffer_nb, 0, &bq->ready_buffer);
 480:Src/app.c     ****   if (!bq->ready)
 481:Src/app.c     ****     goto ready_sem_error;
 482:Src/app.c     **** 
 483:Src/app.c     ****   bq->buffer_nb = buffer_nb;
 484:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 485:Src/app.c     ****     assert(buffers[i]);
 486:Src/app.c     ****     bq->buffers[i] = buffers[i];
 487:Src/app.c     ****   }
 488:Src/app.c     ****   bq->free_idx = 0;
 489:Src/app.c     ****   bq->ready_idx = 0;
 490:Src/app.c     **** 
 491:Src/app.c     ****   return 0;
 492:Src/app.c     **** 
 493:Src/app.c     **** ready_sem_error:
 494:Src/app.c     ****   vSemaphoreDelete(bq->free);
 495:Src/app.c     **** free_sem_error:
 496:Src/app.c     ****   return -1;
 497:Src/app.c     **** }
 498:Src/app.c     **** 
 499:Src/app.c     **** static uint8_t *bqueue_get_free(bqueue_t *bq, int is_blocking)
 500:Src/app.c     **** {
 501:Src/app.c     ****   uint8_t *res;
 502:Src/app.c     ****   int ret;
ARM GAS  /tmp/cc3ptn5O.s 			page 20


 503:Src/app.c     **** 
 504:Src/app.c     ****   ret = xSemaphoreTake(bq->free, is_blocking ? portMAX_DELAY : 0);
 505:Src/app.c     ****   if (ret == pdFALSE)
 506:Src/app.c     ****     return NULL;
 507:Src/app.c     **** 
 508:Src/app.c     ****   res = bq->buffers[bq->free_idx];
 509:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 510:Src/app.c     **** 
 511:Src/app.c     ****   return res;
 512:Src/app.c     **** }
 513:Src/app.c     **** 
 514:Src/app.c     **** static void bqueue_put_free(bqueue_t *bq)
 515:Src/app.c     **** {
 516:Src/app.c     ****   int ret;
 517:Src/app.c     **** 
 518:Src/app.c     ****   ret = xSemaphoreGive(bq->free);
 519:Src/app.c     ****   assert(ret == pdTRUE);
 520:Src/app.c     **** }
 521:Src/app.c     **** 
 522:Src/app.c     **** static uint8_t *bqueue_get_ready(bqueue_t *bq)
 523:Src/app.c     **** {
 524:Src/app.c     ****   uint8_t *res;
 525:Src/app.c     ****   int ret;
 526:Src/app.c     **** 
 527:Src/app.c     ****   ret = xSemaphoreTake(bq->ready, portMAX_DELAY);
 528:Src/app.c     ****   assert(ret == pdTRUE);
 529:Src/app.c     **** 
 530:Src/app.c     ****   res = bq->buffers[bq->ready_idx];
 531:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 532:Src/app.c     **** 
 533:Src/app.c     ****   return res;
 534:Src/app.c     **** }
 535:Src/app.c     **** 
 536:Src/app.c     **** static void bqueue_put_ready(bqueue_t *bq)
 537:Src/app.c     **** {
 538:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 539:Src/app.c     ****   int ret;
 540:Src/app.c     **** 
 541:Src/app.c     ****   if (xPortIsInsideInterrupt()) {
 542:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 543:Src/app.c     ****     assert(ret == pdTRUE);
 544:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 545:Src/app.c     ****   } else {
 546:Src/app.c     ****     ret = xSemaphoreGive(bq->ready);
 547:Src/app.c     ****     assert(ret == pdTRUE);
 548:Src/app.c     ****   }
 549:Src/app.c     **** }
 550:Src/app.c     **** 
 551:Src/app.c     **** static void reload_bg_layer(int next_disp_idx)
 552:Src/app.c     **** {
 553:Src/app.c     ****   int ret;
 554:Src/app.c     **** 
 555:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_bg_buffer[next_disp_idx], SCRL_LAYER_0);
 556:Src/app.c     ****   assert(ret == 0);
 557:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 558:Src/app.c     ****   assert(ret == 0);
 559:Src/app.c     **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 21


 560:Src/app.c     ****   ret = SRCL_Update();
 561:Src/app.c     ****   assert(ret == 0);
 562:Src/app.c     **** }
 563:Src/app.c     **** 
 564:Src/app.c     **** static void app_main_pipe_frame_event()
 565:Src/app.c     **** {
 566:Src/app.c     ****   int next_disp_idx = (lcd_bg_buffer_disp_idx + 1) % DISPLAY_BUFFER_NB;
 567:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 568:Src/app.c     ****   int ret;
 569:Src/app.c     **** 
 570:Src/app.c     ****   ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE1,
 571:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 572:Src/app.c     ****   assert(ret == HAL_OK);
 573:Src/app.c     **** 
 574:Src/app.c     ****   reload_bg_layer(next_disp_idx);
 575:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 576:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 577:Src/app.c     **** 
 578:Src/app.c     ****   frame_event_nb++;
 579:Src/app.c     **** }
 580:Src/app.c     **** 
 581:Src/app.c     **** 
 582:Src/app.c     **** static void app_ancillary_pipe_frame_event()
 583:Src/app.c     **** {
 584:Src/app.c     ****   uint8_t *next_buffer;
 585:Src/app.c     ****   int ret;
 586:Src/app.c     **** 
 587:Src/app.c     ****   next_buffer = bqueue_get_free(&nn_input_queue, 0);
 588:Src/app.c     ****   if (next_buffer) {
 589:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 590:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 591:Src/app.c     ****     assert(ret == HAL_OK);
 592:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 593:Src/app.c     ****     frame_event_nb_for_resize = frame_event_nb - 1;
 594:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 595:Src/app.c     ****   }
 596:Src/app.c     **** }
 597:Src/app.c     **** 
 598:Src/app.c     **** static void app_main_pipe_vsync_event()
 599:Src/app.c     **** {
 600:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 601:Src/app.c     ****   int ret;
 602:Src/app.c     **** 
 603:Src/app.c     ****   ret = xSemaphoreGiveFromISR(isp_sem, &xHigherPriorityTaskWoken);
 604:Src/app.c     ****   if (ret == pdTRUE)
 605:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 606:Src/app.c     **** }
 607:Src/app.c     **** 
 608:Src/app.c     **** static int clamp_point(int *x, int *y)
 609:Src/app.c     **** {
  84              		.loc 1 609 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
 610:Src/app.c     ****   int xi = *x;
  88              		.loc 1 610 3 view .LVU14
  89              		.loc 1 610 7 is_stmt 0 view .LVU15
ARM GAS  /tmp/cc3ptn5O.s 			page 22


  90 0000 0368     		ldr	r3, [r0]
  91              	.LVL5:
 611:Src/app.c     ****   int yi = *y;
  92              		.loc 1 611 3 is_stmt 1 view .LVU16
 609:Src/app.c     ****   int xi = *x;
  93              		.loc 1 609 1 is_stmt 0 view .LVU17
  94 0002 10B5     		push	{r4, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 4, -8
  97              		.cfi_offset 14, -4
 612:Src/app.c     **** 
 613:Src/app.c     ****   if (*x < 0)
  98              		.loc 1 613 6 view .LVU18
  99 0004 002B     		cmp	r3, #0
 614:Src/app.c     ****     *x = 0;
 100              		.loc 1 614 8 view .LVU19
 101 0006 B8BF     		it	lt
 102 0008 0024     		movlt	r4, #0
 611:Src/app.c     **** 
 103              		.loc 1 611 7 view .LVU20
 104 000a 0A68     		ldr	r2, [r1]
 105              	.LVL6:
 613:Src/app.c     ****     *x = 0;
 106              		.loc 1 613 3 is_stmt 1 view .LVU21
 107              		.loc 1 614 5 view .LVU22
 108              		.loc 1 614 8 is_stmt 0 view .LVU23
 109 000c B8BF     		it	lt
 110 000e 0460     		strlt	r4, [r0]
 615:Src/app.c     ****   if (*y < 0)
 111              		.loc 1 615 3 is_stmt 1 view .LVU24
 112              		.loc 1 615 6 is_stmt 0 view .LVU25
 113 0010 0C68     		ldr	r4, [r1]
 114 0012 002C     		cmp	r4, #0
 616:Src/app.c     ****     *y = 0;
 115              		.loc 1 616 5 is_stmt 1 view .LVU26
 116              		.loc 1 616 8 is_stmt 0 view .LVU27
 117 0014 BCBF     		itt	lt
 118 0016 0024     		movlt	r4, #0
 119 0018 0C60     		strlt	r4, [r1]
 617:Src/app.c     ****   if (*x >= lcd_bg_area.XSize)
 120              		.loc 1 617 3 is_stmt 1 view .LVU28
 121              		.loc 1 617 6 is_stmt 0 view .LVU29
 122 001a 0468     		ldr	r4, [r0]
 123 001c B4F5487F 		cmp	r4, #800
 618:Src/app.c     ****     *x = lcd_bg_area.XSize - 1;
 124              		.loc 1 618 5 is_stmt 1 view .LVU30
 125              		.loc 1 618 8 is_stmt 0 view .LVU31
 126 0020 24BF     		itt	cs
 127 0022 40F21F34 		movwcs	r4, #799
 128 0026 0460     		strcs	r4, [r0]
 619:Src/app.c     ****   if (*y >= lcd_bg_area.YSize)
 129              		.loc 1 619 3 is_stmt 1 view .LVU32
 130              		.loc 1 619 6 is_stmt 0 view .LVU33
 131 0028 0C68     		ldr	r4, [r1]
 132 002a B4F5F07F 		cmp	r4, #480
 620:Src/app.c     ****     *y = lcd_bg_area.YSize - 1;
 133              		.loc 1 620 5 is_stmt 1 view .LVU34
ARM GAS  /tmp/cc3ptn5O.s 			page 23


 134              		.loc 1 620 8 is_stmt 0 view .LVU35
 135 002e 24BF     		itt	cs
 136 0030 40F2DF14 		movwcs	r4, #479
 137 0034 0C60     		strcs	r4, [r1]
 621:Src/app.c     **** 
 622:Src/app.c     ****   return (xi != *x) || (yi != *y);
 138              		.loc 1 622 3 is_stmt 1 view .LVU36
 139              		.loc 1 622 21 is_stmt 0 view .LVU37
 140 0036 0068     		ldr	r0, [r0]
 141              	.LVL7:
 142              		.loc 1 622 21 view .LVU38
 143 0038 9842     		cmp	r0, r3
 144 003a 04D1     		bne	.L12
 145              		.loc 1 622 21 discriminator 2 view .LVU39
 146 003c 0868     		ldr	r0, [r1]
 147 003e 801A     		subs	r0, r0, r2
 148 0040 18BF     		it	ne
 149 0042 0120     		movne	r0, #1
 150              	.L6:
 623:Src/app.c     **** }
 151              		.loc 1 623 1 view .LVU40
 152 0044 10BD     		pop	{r4, pc}
 153              	.L12:
 622:Src/app.c     **** }
 154              		.loc 1 622 21 discriminator 3 view .LVU41
 155 0046 0120     		movs	r0, #1
 622:Src/app.c     **** }
 156              		.loc 1 622 21 view .LVU42
 157 0048 FCE7     		b	.L6
 158              		.cfi_endproc
 159              	.LFE7382:
 161              		.section	.text.clamp_corners,"ax",%progbits
 162              		.align	1
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	clamp_corners:
 168              	.LVL8:
 169              	.LFB7387:
 624:Src/app.c     **** 
 625:Src/app.c     **** static int clamp_point_with_margin(int *x, int *y, int margin)
 626:Src/app.c     **** {
 627:Src/app.c     ****   int xi = *x;
 628:Src/app.c     ****   int yi = *y;
 629:Src/app.c     **** 
 630:Src/app.c     ****   if (*x < margin)
 631:Src/app.c     ****     *x = margin;
 632:Src/app.c     ****   if (*y < margin)
 633:Src/app.c     ****     *y = margin;
 634:Src/app.c     ****   if (*x >= lcd_bg_area.XSize - margin)
 635:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 636:Src/app.c     ****   if (*y >= lcd_bg_area.YSize - margin)
 637:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 638:Src/app.c     **** 
 639:Src/app.c     ****   return (xi != *x) || (yi != *y);
 640:Src/app.c     **** }
 641:Src/app.c     **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 24


 642:Src/app.c     **** static void display_pd_hand(pd_pp_box_t *hand)
 643:Src/app.c     **** {
 644:Src/app.c     ****   int xc, yc;
 645:Src/app.c     ****   int x0, y0;
 646:Src/app.c     ****   int x1, y1;
 647:Src/app.c     ****   int w, h;
 648:Src/app.c     ****   int i;
 649:Src/app.c     **** 
 650:Src/app.c     ****   /* display box around palm */
 651:Src/app.c     ****   xc = (int)hand->x_center;
 652:Src/app.c     ****   yc = (int)hand->y_center;
 653:Src/app.c     ****   w = (int)hand->width;
 654:Src/app.c     ****   h = (int)hand->height;
 655:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 656:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 657:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 658:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 659:Src/app.c     ****   clamp_point(&x0, &y0);
 660:Src/app.c     ****   clamp_point(&x1, &y1);
 661:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 662:Src/app.c     **** 
 663:Src/app.c     ****   /* display palm key points */
 664:Src/app.c     ****   for (i = 0; i < 7; i++) {
 665:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 666:Src/app.c     **** 
 667:Src/app.c     ****     x0 = (int)hand->pKps[i].x;
 668:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 669:Src/app.c     ****     clamp_point(&x0, &y0);
 670:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 671:Src/app.c     ****   }
 672:Src/app.c     **** }
 673:Src/app.c     **** 
 674:Src/app.c     **** static void rotate_point(float pt[2], float rotation)
 675:Src/app.c     **** {
 676:Src/app.c     ****   float x = pt[0];
 677:Src/app.c     ****   float y = pt[1];
 678:Src/app.c     **** 
 679:Src/app.c     ****   pt[0] = cos(rotation) * x - sin(rotation) * y;
 680:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 681:Src/app.c     **** }
 682:Src/app.c     **** 
 683:Src/app.c     **** static void roi_to_corners(roi_t *roi, float corners[4][2])
 684:Src/app.c     **** {
 685:Src/app.c     ****   const float corners_init[4][2] = {
 686:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 687:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 688:Src/app.c     ****     { roi->w / 2,  roi->h / 2},
 689:Src/app.c     ****     {-roi->w / 2,  roi->h / 2},
 690:Src/app.c     ****   };
 691:Src/app.c     ****   int i;
 692:Src/app.c     **** 
 693:Src/app.c     ****   memcpy(corners, corners_init, sizeof(corners_init));
 694:Src/app.c     ****   /* rotate */
 695:Src/app.c     ****   /*
 696:Src/app.c     ****   for (i = 0; i < 4; i++)
 697:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 698:Src/app.c     ****   */
ARM GAS  /tmp/cc3ptn5O.s 			page 25


 699:Src/app.c     ****   /* shift */
 700:Src/app.c     ****   for (i = 0; i < 4; i++) {
 701:Src/app.c     ****     corners[i][0] += roi->cx;
 702:Src/app.c     ****     corners[i][1] += roi->cy;
 703:Src/app.c     ****   }
 704:Src/app.c     **** }
 705:Src/app.c     **** 
 706:Src/app.c     **** static int clamp_corners(float corners_in[4][2], int corners_out[4][2])
 707:Src/app.c     **** {
 170              		.loc 1 707 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 708:Src/app.c     ****   int is_clamp = 0;
 174              		.loc 1 708 3 view .LVU44
 709:Src/app.c     ****   int i;
 175              		.loc 1 709 3 view .LVU45
 710:Src/app.c     **** 
 711:Src/app.c     ****   for (i = 0; i < 4; i++) {
 176              		.loc 1 711 3 view .LVU46
 177              		.loc 1 711 17 discriminator 1 view .LVU47
 707:Src/app.c     ****   int is_clamp = 0;
 178              		.loc 1 707 1 is_stmt 0 view .LVU48
 179 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 180              		.cfi_def_cfa_offset 24
 181              		.cfi_offset 3, -24
 182              		.cfi_offset 4, -20
 183              		.cfi_offset 5, -16
 184              		.cfi_offset 6, -12
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 0546     		mov	r5, r0
 188 0004 0C46     		mov	r4, r1
 708:Src/app.c     ****   int i;
 189              		.loc 1 708 7 view .LVU49
 190 0006 0026     		movs	r6, #0
 191 0008 01F12007 		add	r7, r1, #32
 192              	.LVL9:
 193              	.L14:
 712:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 194              		.loc 1 712 5 is_stmt 1 view .LVU50
 195              		.loc 1 712 25 is_stmt 0 view .LVU51
 196 000c D5ED007A 		vldr.32	s15, [r5]
 197 0010 FDEEE77A 		vcvt.s32.f32	s15, s15
 198 0014 C4ED007A 		vstr.32	s15, [r4]	@ int
 713:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 199              		.loc 1 713 5 is_stmt 1 view .LVU52
 200              		.loc 1 713 25 is_stmt 0 view .LVU53
 201 0018 D5ED017A 		vldr.32	s15, [r5, #4]
 202 001c FDEEE77A 		vcvt.s32.f32	s15, s15
 203 0020 2146     		mov	r1, r4
 204 0022 17EE903A 		vmov	r3, s15	@ int
 714:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 205              		.loc 1 714 17 view .LVU54
 206 0026 2046     		mov	r0, r4
 713:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 207              		.loc 1 713 25 view .LVU55
ARM GAS  /tmp/cc3ptn5O.s 			page 26


 208 0028 41F8043F 		str	r3, [r1, #4]!
 209              		.loc 1 714 5 is_stmt 1 view .LVU56
 210              		.loc 1 714 17 is_stmt 0 view .LVU57
 211 002c FFF7FEFF 		bl	clamp_point
 212              	.LVL10:
 711:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 213              		.loc 1 711 17 discriminator 1 view .LVU58
 214 0030 0834     		adds	r4, r4, #8
 215 0032 BC42     		cmp	r4, r7
 216              		.loc 1 714 14 discriminator 1 view .LVU59
 217 0034 46EA0006 		orr	r6, r6, r0
 218              	.LVL11:
 711:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 219              		.loc 1 711 23 is_stmt 1 discriminator 3 view .LVU60
 711:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 220              		.loc 1 711 17 discriminator 1 view .LVU61
 221 0038 05F10805 		add	r5, r5, #8
 222 003c E6D1     		bne	.L14
 715:Src/app.c     ****   }
 716:Src/app.c     **** 
 717:Src/app.c     ****   return is_clamp;
 223              		.loc 1 717 3 view .LVU62
 718:Src/app.c     **** }
 224              		.loc 1 718 1 is_stmt 0 view .LVU63
 225 003e 3046     		mov	r0, r6
 226 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 227              		.loc 1 718 1 view .LVU64
 228              		.cfi_endproc
 229              	.LFE7387:
 231              		.section	.text.roi_to_corners,"ax",%progbits
 232              		.align	1
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	roi_to_corners:
 238              	.LVL12:
 239              	.LFB7386:
 684:Src/app.c     ****   const float corners_init[4][2] = {
 240              		.loc 1 684 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 685:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 244              		.loc 1 685 3 view .LVU66
 686:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 245              		.loc 1 686 6 is_stmt 0 view .LVU67
 246 0000 D0ED027A 		vldr.32	s15, [r0, #8]
 686:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 247              		.loc 1 686 19 view .LVU68
 248 0004 90ED037A 		vldr.32	s14, [r0, #12]
 686:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 249              		.loc 1 686 14 view .LVU69
 250 0008 F6EE006A 		vmov.f32	s13, #5.0e-1
 251 000c 67EEE67A 		vnmul.f32	s15, s15, s13
 252              	.LVL13:
 686:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 253              		.loc 1 686 27 view .LVU70
ARM GAS  /tmp/cc3ptn5O.s 			page 27


 254 0010 27EE667A 		vnmul.f32	s14, s14, s13
 255              	.LVL14:
 684:Src/app.c     ****   const float corners_init[4][2] = {
 256              		.loc 1 684 1 view .LVU71
 257 0014 00B5     		push	{lr}
 258              		.cfi_def_cfa_offset 4
 259              		.cfi_offset 14, -4
 260 0016 B1EE676A 		vneg.f32	s12, s15
 261              	.LVL15:
 684:Src/app.c     ****   const float corners_init[4][2] = {
 262              		.loc 1 684 1 view .LVU72
 263 001a F1EE476A 		vneg.f32	s13, s14
 264              	.LVL16:
 691:Src/app.c     **** 
 265              		.loc 1 691 3 is_stmt 1 view .LVU73
 693:Src/app.c     ****   /* rotate */
 266              		.loc 1 693 3 view .LVU74
 267 001e 4FF0040E 		mov	lr, #4
 268 0022 C1ED007A 		vstr.32	s15, [r1]
 269 0026 81ED017A 		vstr.32	s14, [r1, #4]
 270 002a 81ED026A 		vstr.32	s12, [r1, #8]
 271 002e 81ED037A 		vstr.32	s14, [r1, #12]
 272 0032 81ED046A 		vstr.32	s12, [r1, #16]
 273 0036 C1ED056A 		vstr.32	s13, [r1, #20]
 274 003a C1ED067A 		vstr.32	s15, [r1, #24]
 275 003e C1ED076A 		vstr.32	s13, [r1, #28]
 700:Src/app.c     ****     corners[i][0] += roi->cx;
 276              		.loc 1 700 3 view .LVU75
 277              	.LVL17:
 700:Src/app.c     ****     corners[i][0] += roi->cx;
 278              		.loc 1 700 17 discriminator 1 view .LVU76
 279 0042 4EF001E0 		dls	lr, lr
 280              	.LVL18:
 281              	.L17:
 701:Src/app.c     ****     corners[i][1] += roi->cy;
 282              		.loc 1 701 5 view .LVU77
 701:Src/app.c     ****     corners[i][1] += roi->cy;
 283              		.loc 1 701 19 is_stmt 0 view .LVU78
 284 0046 90ED007A 		vldr.32	s14, [r0]
 285 004a D1ED007A 		vldr.32	s15, [r1]
 286 004e 77EE877A 		vadd.f32	s15, s15, s14
 287 0052 C1ED007A 		vstr.32	s15, [r1]
 702:Src/app.c     ****   }
 288              		.loc 1 702 5 is_stmt 1 view .LVU79
 702:Src/app.c     ****   }
 289              		.loc 1 702 19 is_stmt 0 view .LVU80
 290 0056 D1ED017A 		vldr.32	s15, [r1, #4]
 291 005a 90ED017A 		vldr.32	s14, [r0, #4]
 292 005e 77EE877A 		vadd.f32	s15, s15, s14
 700:Src/app.c     ****     corners[i][0] += roi->cx;
 293              		.loc 1 700 17 discriminator 1 view .LVU81
 294 0062 0831     		adds	r1, r1, #8
 702:Src/app.c     ****   }
 295              		.loc 1 702 19 view .LVU82
 296 0064 41ED017A 		vstr.32	s15, [r1, #-4]
 700:Src/app.c     ****     corners[i][0] += roi->cx;
 297              		.loc 1 700 23 is_stmt 1 discriminator 3 view .LVU83
ARM GAS  /tmp/cc3ptn5O.s 			page 28


 700:Src/app.c     ****     corners[i][0] += roi->cx;
 298              		.loc 1 700 17 discriminator 1 view .LVU84
 299 0068 0FF013C8 		le	lr, .L17
 704:Src/app.c     **** 
 300              		.loc 1 704 1 is_stmt 0 view .LVU85
 301 006c 5DF804FB 		ldr	pc, [sp], #4
 302              		.cfi_endproc
 303              	.LFE7386:
 305              		.section	.rodata.isp_thread_fct.str1.1,"aMS",%progbits,1
 306              	.LC1:
 307 0000 72657420 		.ascii	"ret == pdTRUE\000"
 307      3D3D2070 
 307      64545255 
 307      4500
 308              	.LC2:
 309 000e 5372632F 		.ascii	"Src/app.c\000"
 309      6170702E 
 309      6300
 310              		.section	.text.isp_thread_fct,"ax",%progbits
 311              		.align	1
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	isp_thread_fct:
 317              	.LVL19:
 318              	.LFB7410:
 719:Src/app.c     **** 
 720:Src/app.c     **** static void display_roi(roi_t *roi)
 721:Src/app.c     **** {
 722:Src/app.c     ****   float corners_f[4][2];
 723:Src/app.c     ****   int corners[4][2];
 724:Src/app.c     ****   int is_clamp;
 725:Src/app.c     ****   int i;
 726:Src/app.c     **** 
 727:Src/app.c     ****   /* compute box corners */
 728:Src/app.c     ****   roi_to_corners(roi, corners_f);
 729:Src/app.c     **** 
 730:Src/app.c     ****   /* clamp */
 731:Src/app.c     ****   is_clamp = clamp_corners(corners_f, corners);
 732:Src/app.c     ****   if (is_clamp)
 733:Src/app.c     ****     return ;
 734:Src/app.c     **** 
 735:Src/app.c     ****   /* display */
 736:Src/app.c     ****   for (i = 0; i < 4; i++)
 737:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 738:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 739:Src/app.c     **** }
 740:Src/app.c     **** 
 741:Src/app.c     **** static void decode_ld_landmark(roi_t *roi, ld_point_t *lm, ld_point_t *decoded)
 742:Src/app.c     **** {
 743:Src/app.c     ****   float rotation = roi->rotation;
 744:Src/app.c     ****   float w = roi->w;
 745:Src/app.c     ****   float h = roi->h;
 746:Src/app.c     **** 
 747:Src/app.c     ****   decoded->x = roi->cx + (lm->x - 0.5) * w * cos(rotation) - (lm->y - 0.5) * h * sin(rotation);
 748:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 749:Src/app.c     **** }
ARM GAS  /tmp/cc3ptn5O.s 			page 29


 750:Src/app.c     **** 
 751:Src/app.c     **** static void display_ld_hand(hand_info_t *hand)
 752:Src/app.c     **** {
 753:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 754:Src/app.c     ****   roi_t *roi = &hand->roi;
 755:Src/app.c     ****   int x[LD_LANDMARK_NB];
 756:Src/app.c     ****   int y[LD_LANDMARK_NB];
 757:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 758:Src/app.c     ****   ld_point_t decoded;
 759:Src/app.c     ****   int i;
 760:Src/app.c     **** 
 761:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 762:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 763:Src/app.c     ****     x[i] = (int)decoded.x;
 764:Src/app.c     ****     y[i] = (int)decoded.y;
 765:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 766:Src/app.c     ****   }
 767:Src/app.c     **** 
 768:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 769:Src/app.c     ****     if (is_clamped[i])
 770:Src/app.c     ****       continue;
 771:Src/app.c     ****     UTIL_LCD_FillCircle(x[i], y[i], disk_radius, UTIL_LCD_COLOR_YELLOW);
 772:Src/app.c     ****   }
 773:Src/app.c     **** }
 774:Src/app.c     **** 
 775:Src/app.c     **** void display_hand(display_info_t *info, hand_info_t *hand)
 776:Src/app.c     **** {
 777:Src/app.c     ****   if (info->is_pd_displayed) {
 778:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 779:Src/app.c     ****     display_roi(&hand->roi);
 780:Src/app.c     ****   }
 781:Src/app.c     ****   if (info->is_ld_displayed)
 782:Src/app.c     ****     display_ld_hand(hand);
 783:Src/app.c     **** }
 784:Src/app.c     **** 
 785:Src/app.c     **** static void Display_NetworkOutput(display_info_t *info)
 786:Src/app.c     **** {
 787:Src/app.c     ****   float cpu_load_one_second;
 788:Src/app.c     ****   int line_nb = 0;
 789:Src/app.c     ****   float nn_fps;
 790:Src/app.c     ****   int i;
 791:Src/app.c     **** 
 792:Src/app.c     ****   /* clear previous ui */
 793:Src/app.c     ****   UTIL_LCD_FillRect(lcd_fg_area.X0, lcd_fg_area.Y0, lcd_fg_area.XSize, lcd_fg_area.YSize, 0x0000000
 794:Src/app.c     **** 
 795:Src/app.c     ****   /* cpu load */
 796:Src/app.c     ****   cpuload_update(&cpu_load);
 797:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 798:Src/app.c     **** 
 799:Src/app.c     ****   /* draw metrics */
 800:Src/app.c     ****   nn_fps = 1000.0 / info->nn_period_ms;
 801:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 802:Src/app.c     ****   line_nb += 1;
 803:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 804:Src/app.c     ****   line_nb += 2;
 805:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 806:Src/app.c     ****   line_nb += 1;
ARM GAS  /tmp/cc3ptn5O.s 			page 30


 807:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " face_conf %2u", info->pd_ms);
 808:Src/app.c     ****   line_nb += 1;
 809:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " yolo_num_detections %2u", info->hl_ms);
 810:Src/app.c     ****   line_nb += 2;
 811:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 812:Src/app.c     ****   line_nb += 2;
 813:Src/app.c     ****   if (DBG_INFO) {
 814:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 815:Src/app.c     ****     line_nb += 1;
 816:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "   %ums", info->disp_ms);
 817:Src/app.c     ****     line_nb += 1;
 818:Src/app.c     ****   }
 819:Src/app.c     **** 
 820:Src/app.c     ****   /* display palm detector output */
 821:Src/app.c     ****   for (i = 0; i < info->pd_hand_nb; i++) {
 822:Src/app.c     ****     if (info->hands[i].is_valid)
 823:Src/app.c     ****       display_hand(info, &info->hands[i]);
 824:Src/app.c     ****   }
 825:Src/app.c     **** 
 826:Src/app.c     ****   if (DBG_INFO)
 827:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 828:Src/app.c     **** }
 829:Src/app.c     **** 
 830:Src/app.c     **** /**
 831:Src/app.c     ****  * @brief  Initializes the YOLO detector model info and post-processing
 832:Src/app.c     ****  * @param  info  Pointer to the yolo_detector_info_t context struct
 833:Src/app.c     ****  * @retval None
 834:Src/app.c     ****  */
 835:Src/app.c     **** static void yolo_detector_init(yolo_detector_info_t *info)
 836:Src/app.c     **** {
 837:Src/app.c     ****   // Assumes your YOLO model is named 'yolo_detector' in the Cube.AI tool
 838:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_yolo_detector();
 839:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 840:Src/app.c     ****   int ret;
 841:Src/app.c     **** 
 842:Src/app.c     ****   /* Link model I/O buffers to the info struct */
 843:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 844:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 845:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 846:Src/app.c     **** 
 847:Src/app.c     ****   /* Initialize YOLO post-processing static parameters */
 848:Src/app.c     ****   info->static_param.nb_classes = AI_OD_YOLOV8_PP_NB_CLASSES;        // Example: 80 for COCO datase
 849:Src/app.c     ****   info->static_param.nb_total_boxes = AI_OD_YOLOV8_PP_TOTAL_BOXES;  // Example: Standard for YOLOv8
 850:Src/app.c     ****   info->static_param.max_boxes_limit = 10;  // Max boxes after NMS
 851:Src/app.c     ****   info->static_param.conf_threshold = AI_OD_YOLOV8_PP_CONF_THRESHOLD; // Confidence threshold
 852:Src/app.c     ****   info->static_param.iou_threshold = AI_OD_YOLOV8_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 853:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 854:Src/app.c     ****   info->static_param.raw_output_scale = 1.0f;
 855:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 856:Src/app.c     **** 
 857:Src/app.c     ****   /* Initialize the post-processing module */
 858:Src/app.c     ****   // Assumes a generic post-processing init function exists
 859:Src/app.c     ****   ret = app_postprocess_init(&info->static_param, &NN_Instance_yolo_detector);
 860:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 861:Src/app.c     **** }
 862:Src/app.c     **** 
 863:Src/app.c     **** static int yolo_detector_run(uint8_t *buffer, yolo_detector_info_t *info, uint32_t *exec_time)
ARM GAS  /tmp/cc3ptn5O.s 			page 31


 864:Src/app.c     **** {
 865:Src/app.c     ****   uint32_t start_ts;
 866:Src/app.c     ****   int detection_nb;
 867:Src/app.c     ****   int ret;
 868:Src/app.c     ****   int i;
 869:Src/app.c     **** 
 870:Src/app.c     ****   start_ts = HAL_GetTick();
 871:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 872:Src/app.c     ****   ret = LL_ATON_Set_User_Input_Buffer_yolo_detector(0, buffer, info->nn_in_len);
 873:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 874:Src/app.c     **** 
 875:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_yolo_detector);
 876:Src/app.c     **** 
 877:Src/app.c     ****   /* Run post-processing on the model's raw output */
 878:Src/app.c     ****   ret = app_postprocess_run((void * []){info->raw_detections_out}, 1, &info->yolo_out, &info->stati
 879:Src/app.c     **** 
 880:Src/app.c     ****   // Get the number of final detections after NMS
 881:Src/app.c     ****   detection_nb = info->yolo_out.nb_detect;
 882:Src/app.c     **** 
 883:Src/app.c     ****   /* Optional: Post-process final bounding boxes (e.g., coordinate scaling) */
 884:Src/app.c     ****   for (i = 0; i < detection_nb; i++) {
 885:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 886:Src/app.c     ****   }
 887:Src/app.c     **** 
 888:Src/app.c     ****   /* Invalidate D-Cache for the output region to ensure CPU sees updated data */
 889:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->raw_detections_out, info->raw_detections_out_len));
 890:Src/app.c     **** 
 891:Src/app.c     ****   *exec_time = HAL_GetTick() - start_ts;
 892:Src/app.c     **** 
 893:Src/app.c     ****   return detection_nb;
 894:Src/app.c     **** }
 895:Src/app.c     **** 
 896:Src/app.c     **** static void face_landmark_init(fl_model_info_t *info)
 897:Src/app.c     **** {
 898:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_face_landmark();
 899:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 900:Src/app.c     **** 
 901:Src/app.c     ****   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
 902:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 903:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 904:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 905:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
 906:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 907:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 908:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 1404);
 909:Src/app.c     **** }
 910:Src/app.c     **** 
 911:Src/app.c     **** static int face_landmark_prepare_input(uint8_t *buffer, roi_t *roi, fl_model_info_t *info)
 912:Src/app.c     **** {
 913:Src/app.c     ****   float corners_f[4][2];
 914:Src/app.c     ****   int corners[4][2];
 915:Src/app.c     ****   uint8_t* out_data;
 916:Src/app.c     ****   size_t height_out;
 917:Src/app.c     ****   uint8_t *in_data;
 918:Src/app.c     ****   size_t height_in;
 919:Src/app.c     ****   size_t width_out;
 920:Src/app.c     ****   size_t width_in;
ARM GAS  /tmp/cc3ptn5O.s 			page 32


 921:Src/app.c     ****   int is_clamped;
 922:Src/app.c     **** 
 923:Src/app.c     ****   /* defaults when no clamping occurs */
 924:Src/app.c     ****   out_data = info->nn_in;
 925:Src/app.c     ****   width_out = LD_WIDTH;
 926:Src/app.c     ****   height_out = LD_HEIGHT;
 927:Src/app.c     **** 
 928:Src/app.c     ****   roi_to_corners(roi, corners_f);
 929:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 930:Src/app.c     **** 
 931:Src/app.c     ****   /* If clamp perform a partial resize */
 932:Src/app.c     ****   if (is_clamped) {
 933:Src/app.c     ****     int offset_x;
 934:Src/app.c     ****     int offset_y;
 935:Src/app.c     **** 
 936:Src/app.c     ****     /* clear target memory since resize will partially write it */
 937:Src/app.c     ****     memset(info->nn_in, 0, info->nn_in_len);
 938:Src/app.c     **** 
 939:Src/app.c     ****     /* compute start address of output buffer */
 940:Src/app.c     ****     offset_x = (int)(((corners[0][0] - corners_f[0][0]) * LD_WIDTH) / (corners_f[2][0] - corners_f[
 941:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 942:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 943:Src/app.c     **** 
 944:Src/app.c     ****     /* compute output width and height */
 945:Src/app.c     ****     width_out = (int)((corners[2][0] - corners[0][0]) / (corners_f[2][0] - corners_f[0][0]) * LD_WI
 946:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 947:Src/app.c     **** 
 948:Src/app.c     ****     assert(width_out > 0);
 949:Src/app.c     ****     assert(height_out > 0);
 950:Src/app.c     ****     {
 951:Src/app.c     ****       uint8_t* out_data_end;
 952:Src/app.c     **** 
 953:Src/app.c     ****       out_data_end = out_data + (int)LD_WIDTH * DISPLAY_BPP * (height_out - 1) + DISPLAY_BPP * widt
 954:Src/app.c     **** 
 955:Src/app.c     ****       assert(out_data_end >= info->nn_in);
 956:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 957:Src/app.c     ****     }
 958:Src/app.c     ****   }
 959:Src/app.c     **** 
 960:Src/app.c     ****   in_data = buffer + corners[0][1] * LCD_BG_WIDTH * DISPLAY_BPP + corners[0][0]* DISPLAY_BPP;
 961:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 962:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
 963:Src/app.c     **** 
 964:Src/app.c     ****   assert(width_in > 0);
 965:Src/app.c     ****   assert(height_in > 0);
 966:Src/app.c     ****   {
 967:Src/app.c     ****     uint8_t* in_data_end;
 968:Src/app.c     **** 
 969:Src/app.c     ****     in_data_end = in_data + LCD_BG_WIDTH * DISPLAY_BPP * (height_in - 1) + DISPLAY_BPP * width_in -
 970:Src/app.c     **** 
 971:Src/app.c     ****     assert(in_data_end >= buffer);
 972:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 973:Src/app.c     ****   }
 974:Src/app.c     **** 
 975:Src/app.c     ****   IPL_resize_bilinear_iu8ou8_with_strides_RGB(in_data, out_data, LCD_BG_WIDTH * DISPLAY_BPP, LD_WID
 976:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 977:Src/app.c     **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 33


 978:Src/app.c     ****   return 0;
 979:Src/app.c     **** }
 980:Src/app.c     **** 
 981:Src/app.c     **** 
 982:Src/app.c     **** static int face_landmark_run(uint8_t *buffer, fl_model_info_t *info, roi_t *roi,
 983:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
 984:Src/app.c     **** {
 985:Src/app.c     ****   int is_clamped;
 986:Src/app.c     ****   int is_valid;
 987:Src/app.c     **** 
 988:Src/app.c     ****   is_clamped = face_landmark_prepare_input(buffer, roi, info);
 989:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
 990:Src/app.c     ****   if (is_clamped)
 991:Src/app.c     ****     return 0;
 992:Src/app.c     **** 
 993:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_face_landmark);
 994:Src/app.c     **** 
 995:Src/app.c     ****   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
 996:Src/app.c     **** 
 997:Src/app.c     ****   /* Discard nn_out region (used by pp_input and pp_outputs variables) to avoid Dcache evictions du
 998:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
 999:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
1000:Src/app.c     **** 
1001:Src/app.c     ****   return is_valid;
1002:Src/app.c     **** }
1003:Src/app.c     **** 
1004:Src/app.c     **** // static void palm_detector_init(pd_model_info_t *info)
1005:Src/app.c     **** // {
1006:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_palm_detector();
1007:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_palm_detector();
1008:Src/app.c     **** //   int ret;
1009:Src/app.c     **** 
1010:Src/app.c     **** //   /* model info */
1011:Src/app.c     **** //   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1012:Src/app.c     **** //   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
1013:Src/app.c     **** //   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
1014:Src/app.c     **** //   assert(info->prob_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float));
1015:Src/app.c     **** //   info->boxes_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
1016:Src/app.c     **** //   info->boxes_out_len = LL_Buffer_len(&nn_out_info[1]);
1017:Src/app.c     **** //   assert(info->boxes_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float) * 18);
1018:Src/app.c     **** 
1019:Src/app.c     **** //   /* post processor info */
1020:Src/app.c     **** //   ret = app_postprocess_init(&info->static_param, &NN_Instance_palm_detector);
1021:Src/app.c     **** //   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
1022:Src/app.c     **** // }
1023:Src/app.c     **** 
1024:Src/app.c     **** // static int palm_detector_run(uint8_t *buffer, pd_model_info_t *info, uint32_t *pd_exec_time)
1025:Src/app.c     **** // {
1026:Src/app.c     **** //   uint32_t start_ts;
1027:Src/app.c     **** //   int hand_nb;
1028:Src/app.c     **** //   int ret;
1029:Src/app.c     **** //   int i;
1030:Src/app.c     **** 
1031:Src/app.c     **** //   start_ts = HAL_GetTick();
1032:Src/app.c     **** //   /* Note that we don't need to clean/invalidate those input buffers since they are only access 
1033:Src/app.c     **** //   ret = LL_ATON_Set_User_Input_Buffer_palm_detector(0, buffer, info->nn_in_len);
1034:Src/app.c     **** //   assert(ret == LL_ATON_User_IO_NOERROR);
ARM GAS  /tmp/cc3ptn5O.s 			page 34


1035:Src/app.c     **** 
1036:Src/app.c     **** //   LL_ATON_RT_Main(&NN_Instance_palm_detector);
1037:Src/app.c     **** 
1038:Src/app.c     **** //   ret = app_postprocess_run((void * []){info->prob_out, info->boxes_out}, 2, &info->pd_out, &inf
1039:Src/app.c     **** //   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
1040:Src/app.c     **** //   hand_nb = MIN(info->pd_out.box_nb, PD_MAX_HAND_NB);
1041:Src/app.c     **** 
1042:Src/app.c     **** //   for (i = 0; i < hand_nb; i++) {
1043:Src/app.c     **** //     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
1044:Src/app.c     **** //     pd_box_to_roi(&info->pd_out.pOutData[i], &rois[i]);
1045:Src/app.c     **** //   }
1046:Src/app.c     **** 
1047:Src/app.c     **** //   /* Discard nn_out region (used by pp_outputs variables) to avoid Dcache evictions during nn in
1048:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1049:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
1050:Src/app.c     **** 
1051:Src/app.c     **** //   *pd_exec_time = HAL_GetTick() - start_ts;
1052:Src/app.c     **** 
1053:Src/app.c     **** //   return hand_nb;
1054:Src/app.c     **** // }
1055:Src/app.c     **** 
1056:Src/app.c     **** // static void hand_landmark_init(hl_model_info_t *info)
1057:Src/app.c     **** // {
1058:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_hand_landmark();
1059:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_hand_landmark();
1060:Src/app.c     **** 
1061:Src/app.c     **** //   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
1062:Src/app.c     **** //   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1063:Src/app.c     **** //   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[2]);
1064:Src/app.c     **** //   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
1065:Src/app.c     **** //   assert(info->prob_out_len == sizeof(float));
1066:Src/app.c     **** //   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
1067:Src/app.c     **** //   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
1068:Src/app.c     **** //   assert(info->landmarks_out_len == sizeof(float) * 63);
1069:Src/app.c     **** // }
1070:Src/app.c     **** 
1071:Src/app.c     **** 
1072:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1073:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1074:Src/app.c     **** {
1075:Src/app.c     ****   float corners_f[4][2];
1076:Src/app.c     ****   int corners[4][2];
1077:Src/app.c     ****   uint8_t* out_data;
1078:Src/app.c     ****   size_t height_out;
1079:Src/app.c     ****   uint8_t *in_data;
1080:Src/app.c     ****   size_t height_in;
1081:Src/app.c     ****   size_t width_out;
1082:Src/app.c     ****   size_t width_in;
1083:Src/app.c     ****   int is_clamped;
1084:Src/app.c     **** 
1085:Src/app.c     ****   /* defaults when no clamping occurs */
1086:Src/app.c     ****   out_data = info->nn_in;
1087:Src/app.c     ****   width_out = LD_WIDTH;
1088:Src/app.c     ****   height_out = LD_HEIGHT;
1089:Src/app.c     **** 
1090:Src/app.c     ****   roi_to_corners(roi, corners_f);
1091:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
ARM GAS  /tmp/cc3ptn5O.s 			page 35


1092:Src/app.c     **** 
1093:Src/app.c     ****   /* If clamp perform a partial resize */
1094:Src/app.c     ****   if (is_clamped) {
1095:Src/app.c     ****     int offset_x;
1096:Src/app.c     ****     int offset_y;
1097:Src/app.c     **** 
1098:Src/app.c     ****     /* clear target memory since resize will partially write it */
1099:Src/app.c     ****     memset(info->nn_in, 0, info->nn_in_len);
1100:Src/app.c     **** 
1101:Src/app.c     ****     /* compute start address of output buffer */
1102:Src/app.c     ****     offset_x = (int)(((corners[0][0] - corners_f[0][0]) * LD_WIDTH) / (corners_f[2][0] - corners_f[
1103:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
1104:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
1105:Src/app.c     **** 
1106:Src/app.c     ****     /* compute output width and height */
1107:Src/app.c     ****     width_out = (int)((corners[2][0] - corners[0][0]) / (corners_f[2][0] - corners_f[0][0]) * LD_WI
1108:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
1109:Src/app.c     **** 
1110:Src/app.c     ****     assert(width_out > 0);
1111:Src/app.c     ****     assert(height_out > 0);
1112:Src/app.c     ****     {
1113:Src/app.c     ****       uint8_t* out_data_end;
1114:Src/app.c     **** 
1115:Src/app.c     ****       out_data_end = out_data + (int)LD_WIDTH * DISPLAY_BPP * (height_out - 1) + DISPLAY_BPP * widt
1116:Src/app.c     **** 
1117:Src/app.c     ****       assert(out_data_end >= info->nn_in);
1118:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
1119:Src/app.c     ****     }
1120:Src/app.c     ****   }
1121:Src/app.c     **** 
1122:Src/app.c     ****   in_data = buffer + corners[0][1] * LCD_BG_WIDTH * DISPLAY_BPP + corners[0][0]* DISPLAY_BPP;
1123:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
1124:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
1125:Src/app.c     **** 
1126:Src/app.c     ****   assert(width_in > 0);
1127:Src/app.c     ****   assert(height_in > 0);
1128:Src/app.c     ****   {
1129:Src/app.c     ****     uint8_t* in_data_end;
1130:Src/app.c     **** 
1131:Src/app.c     ****     in_data_end = in_data + LCD_BG_WIDTH * DISPLAY_BPP * (height_in - 1) + DISPLAY_BPP * width_in -
1132:Src/app.c     **** 
1133:Src/app.c     ****     assert(in_data_end >= buffer);
1134:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
1135:Src/app.c     ****   }
1136:Src/app.c     **** 
1137:Src/app.c     ****   IPL_resize_bilinear_iu8ou8_with_strides_RGB(in_data, out_data, LCD_BG_WIDTH * DISPLAY_BPP, LD_WID
1138:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
1139:Src/app.c     **** 
1140:Src/app.c     ****   return 0;
1141:Src/app.c     **** }
1142:Src/app.c     **** #else
1143:Src/app.c     **** static void app_transform(nema_matrix3x3_t t, app_v3_t v)
1144:Src/app.c     **** {
1145:Src/app.c     ****   app_v3_t r;
1146:Src/app.c     ****   int i;
1147:Src/app.c     **** 
1148:Src/app.c     ****   for (i = 0; i < 3; i++)
ARM GAS  /tmp/cc3ptn5O.s 			page 36


1149:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
1150:Src/app.c     **** 
1151:Src/app.c     ****   for (i = 0; i < 3; i++)
1152:Src/app.c     ****     v[i] = r[i];
1153:Src/app.c     **** }
1154:Src/app.c     **** 
1155:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1156:Src/app.c     **** {
1157:Src/app.c     ****   app_v3_t vertex[] = {
1158:Src/app.c     ****     {           0,             0, 1},
1159:Src/app.c     ****     {LCD_BG_WIDTH,             0, 1},
1160:Src/app.c     ****     {LCD_BG_WIDTH, LCD_BG_HEIGHT, 1},
1161:Src/app.c     ****     {           0, LCD_BG_HEIGHT, 1},
1162:Src/app.c     ****   };
1163:Src/app.c     ****   GFXMMU_BuffersTypeDef buffers = { 0 };
1164:Src/app.c     ****   nema_matrix3x3_t t;
1165:Src/app.c     ****   int ret;
1166:Src/app.c     ****   int i;
1167:Src/app.c     **** 
1168:Src/app.c     ****   buffers.Buf0Address = (uint32_t) info->nn_in;
1169:Src/app.c     ****   ret = HAL_GFXMMU_ModifyBuffers(&hgfxmmu, &buffers);
1170:Src/app.c     ****   assert(ret == HAL_OK);
1171:Src/app.c     **** 
1172:Src/app.c     ****   /* bind destination texture */
1173:Src/app.c     ****   nema_bind_dst_tex(GFXMMU_VIRTUAL_BUFFER0_BASE, LD_WIDTH, LD_HEIGHT, NEMA_RGBA8888, -1);
1174:Src/app.c     ****   nema_set_clip(0, 0, LD_WIDTH, LD_HEIGHT);
1175:Src/app.c     ****   nema_clear(0);
1176:Src/app.c     ****   /* bind source texture */
1177:Src/app.c     ****   nema_bind_src_tex((uintptr_t) buffer, LCD_BG_WIDTH, LCD_BG_HEIGHT, NEMA_RGBA8888, -1, NEMA_FILTER
1178:Src/app.c     ****   nema_enable_tiling(1);
1179:Src/app.c     ****   nema_set_blend_blit(NEMA_BL_SRC);
1180:Src/app.c     **** 
1181:Src/app.c     ****   /* let's go */
1182:Src/app.c     ****   nema_mat3x3_load_identity(t);
1183:Src/app.c     ****   nema_mat3x3_translate(t, -roi->cx, -roi->cy);
1184:Src/app.c     ****   nema_mat3x3_rotate(t, nema_rad_to_deg(-roi->rotation));
1185:Src/app.c     ****   nema_mat3x3_scale(t, LD_WIDTH / roi->w, LD_HEIGHT / roi->h);
1186:Src/app.c     ****   nema_mat3x3_translate(t, LD_WIDTH / 2, LD_HEIGHT / 2);
1187:Src/app.c     ****   for (i = 0 ; i < 4; i++)
1188:Src/app.c     ****     app_transform(t, vertex[i]);
1189:Src/app.c     ****   nema_blit_quad_fit(vertex[0][0], vertex[0][1], vertex[1][0], vertex[1][1],
1190:Src/app.c     ****                      vertex[2][0], vertex[2][1], vertex[3][0], vertex[3][1]);
1191:Src/app.c     **** 
1192:Src/app.c     ****   nema_cl_submit(&cl);
1193:Src/app.c     ****   nema_cl_wait(&cl);
1194:Src/app.c     ****   HAL_ICACHE_Invalidate();
1195:Src/app.c     **** 
1196:Src/app.c     ****   assert(!nema_get_error());
1197:Src/app.c     **** 
1198:Src/app.c     ****   return 0;
1199:Src/app.c     **** }
1200:Src/app.c     **** #endif
1201:Src/app.c     **** 
1202:Src/app.c     **** // static int hand_landmark_run(uint8_t *buffer, hl_model_info_t *info, roi_t *roi,
1203:Src/app.c     **** //                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
1204:Src/app.c     **** // {
1205:Src/app.c     **** //   int is_clamped;
ARM GAS  /tmp/cc3ptn5O.s 			page 37


1206:Src/app.c     **** //   int is_valid;
1207:Src/app.c     **** 
1208:Src/app.c     **** //   is_clamped = hand_landmark_prepare_input(buffer, roi, info);
1209:Src/app.c     **** //   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
1210:Src/app.c     **** //   if (is_clamped)
1211:Src/app.c     **** //     return 0;
1212:Src/app.c     **** 
1213:Src/app.c     **** //   LL_ATON_RT_Main(&NN_Instance_hand_landmark);
1214:Src/app.c     **** 
1215:Src/app.c     **** //   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
1216:Src/app.c     **** 
1217:Src/app.c     **** //   /* Discard nn_out region (used by pp_input and pp_outputs variables) to avoid Dcache evictions
1218:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1219:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
1220:Src/app.c     **** 
1221:Src/app.c     **** //   return is_valid;
1222:Src/app.c     **** // }
1223:Src/app.c     **** 
1224:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
1225:Src/app.c     **** static void app_rot_init(hl_model_info_t *info)
1226:Src/app.c     **** {
1227:Src/app.c     ****   GFXMMU_PackingTypeDef packing = { 0 };
1228:Src/app.c     ****   int ret;
1229:Src/app.c     **** 
1230:Src/app.c     ****   printf("init nema\n");
1231:Src/app.c     ****   nema_init();
1232:Src/app.c     ****   assert(!nema_get_error());
1233:Src/app.c     ****   nema_ext_hold_enable(2);
1234:Src/app.c     ****   nema_ext_hold_irq_enable(2);
1235:Src/app.c     ****   nema_ext_hold_enable(3);
1236:Src/app.c     ****   nema_ext_hold_irq_enable(3);
1237:Src/app.c     ****   printf("init nema DONE %s\n", nema_get_sw_device_name());
1238:Src/app.c     **** 
1239:Src/app.c     ****   hgfxmmu.Instance = GFXMMU;
1240:Src/app.c     ****   hgfxmmu.Init.BlockSize = GFXMMU_12BYTE_BLOCKS;
1241:Src/app.c     ****   hgfxmmu.Init.AddressTranslation = DISABLE;
1242:Src/app.c     ****   ret = HAL_GFXMMU_Init(&hgfxmmu);
1243:Src/app.c     ****   assert(ret == HAL_OK);
1244:Src/app.c     **** 
1245:Src/app.c     ****   packing.Buffer0Activation = ENABLE;
1246:Src/app.c     ****   packing.Buffer0Mode       = GFXMMU_PACKING_MSB_REMOVE;
1247:Src/app.c     ****   packing.DefaultAlpha      = 0xff;
1248:Src/app.c     ****   ret = HAL_GFXMMU_ConfigPacking(&hgfxmmu, &packing);
1249:Src/app.c     ****   assert(ret == HAL_OK);
1250:Src/app.c     **** 
1251:Src/app.c     ****   cl = nema_cl_create_sized(8192);
1252:Src/app.c     ****   nema_cl_bind_circular(&cl);
1253:Src/app.c     **** }
1254:Src/app.c     **** #endif
1255:Src/app.c     **** 
1256:Src/app.c     **** static float ld_compute_rotation(ld_point_t lm[LD_LANDMARK_NB])
1257:Src/app.c     **** {
1258:Src/app.c     ****   float x0, y0, x1, y1;
1259:Src/app.c     ****   float rotation;
1260:Src/app.c     **** 
1261:Src/app.c     ****   x0 = lm[0].x;
1262:Src/app.c     ****   y0 = lm[0].y;
ARM GAS  /tmp/cc3ptn5O.s 			page 38


1263:Src/app.c     ****   x1 = lm[9].x;
1264:Src/app.c     ****   y1 = lm[9].y;
1265:Src/app.c     **** 
1266:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
1267:Src/app.c     **** 
1268:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
1269:Src/app.c     **** }
1270:Src/app.c     **** 
1271:Src/app.c     **** static void ld_to_roi(ld_point_t lm[LD_LANDMARK_NB], roi_t *roi, pd_pp_box_t *next_pd)
1272:Src/app.c     **** {
1273:Src/app.c     ****   const int pd_to_ld_idx[AI_PD_MODEL_PP_NB_KEYPOINTS] = {0, 5, 9, 13, 17, 1, 2};
1274:Src/app.c     ****   const int indices[] = {0, 1, 2, 3, 5, 6, 9, 10, 13, 14, 17, 18};
1275:Src/app.c     ****   float max_x, max_y, min_x, min_y;
1276:Src/app.c     ****   int i;
1277:Src/app.c     **** 
1278:Src/app.c     ****   max_x = max_y = -10000;
1279:Src/app.c     ****   min_x = min_y =  10000;
1280:Src/app.c     **** 
1281:Src/app.c     ****   roi->rotation = ld_compute_rotation(lm);
1282:Src/app.c     **** 
1283:Src/app.c     ****   for (i = 0; i < ARRAY_NB(indices); i++) {
1284:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
1285:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
1286:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
1287:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
1288:Src/app.c     ****   }
1289:Src/app.c     **** 
1290:Src/app.c     ****   roi->cx = (max_x + min_x) / 2;
1291:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
1292:Src/app.c     ****   roi->w = (max_x - min_x);
1293:Src/app.c     ****   roi->h = (max_y - min_y);
1294:Src/app.c     **** 
1295:Src/app.c     ****   next_pd->x_center = roi->cx;
1296:Src/app.c     ****   next_pd->y_center = roi->cy;
1297:Src/app.c     ****   next_pd->width = roi->w;
1298:Src/app.c     ****   next_pd->height = roi->h;
1299:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
1300:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
1301:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
1302:Src/app.c     ****   }
1303:Src/app.c     **** }
1304:Src/app.c     **** 
1305:Src/app.c     **** static void compute_next_roi(roi_t *src, ld_point_t lm_in[LD_LANDMARK_NB], roi_t *next, pd_pp_box_t
1306:Src/app.c     **** {
1307:Src/app.c     ****   const float shift_x = 0;
1308:Src/app.c     ****   const float shift_y = -0.1;
1309:Src/app.c     ****   const float scale = 2.0;
1310:Src/app.c     ****   ld_point_t lm[LD_LANDMARK_NB];
1311:Src/app.c     ****   roi_t roi;
1312:Src/app.c     ****   int i;
1313:Src/app.c     **** 
1314:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++)
1315:Src/app.c     ****     decode_ld_landmark(src, &lm_in[i], &lm[i]);
1316:Src/app.c     **** 
1317:Src/app.c     ****   ld_to_roi(lm, &roi, next_pd);
1318:Src/app.c     ****   roi_shift_and_scale(&roi, shift_x, shift_y, scale, scale);
1319:Src/app.c     **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 39


1320:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1321:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
1322:Src/app.c     ****   roi.rotation = 0;
1323:Src/app.c     **** #endif
1324:Src/app.c     **** 
1325:Src/app.c     ****   *next = roi;
1326:Src/app.c     **** }
1327:Src/app.c     **** static void nn_thread_fct(void *arg)
1328:Src/app.c     **** {
1329:Src/app.c     ****   float nn_period_filtered_ms = 0;
1330:Src/app.c     ****   // Filtered inference times, will be updated with 0
1331:Src/app.c     ****   float pd_filtered_ms = 0;
1332:Src/app.c     ****   float ld_filtered_ms = 0;
1333:Src/app.c     **** 
1334:Src/app.c     ****   uint32_t nn_period_ms;
1335:Src/app.c     ****   uint32_t nn_period[2];
1336:Src/app.c     ****   uint8_t *nn_pipe_dst;
1337:Src/app.c     ****   int is_tracking;
1338:Src/app.c     ****   uint32_t pd_ms;
1339:Src/app.c     ****   uint32_t hl_ms;
1340:Src/app.c     ****   int ret;
1341:Src/app.c     ****   roi_t roi_dummy;
1342:Src/app.c     ****   int is_landmark_valid;
1343:Src/app.c     ****   int best_face_idx = -1;
1344:Src/app.c     ****   roi_dummy.cx = 100;
1345:Src/app.c     ****   roi_dummy.cy = 100;
1346:Src/app.c     ****   roi_dummy.w = 50;
1347:Src/app.c     ****   roi_dummy.h = 50;
1348:Src/app.c     **** 
1349:Src/app.c     **** 
1350:Src/app.c     ****   /*
1351:Src/app.c     ****    * 2. Initialize the YOLO model
1352:Src/app.c     ****    * This calls the init function to set up buffers and parameters.
1353:Src/app.c     ****    * If the application runs past this point, the initialization is successful.
1354:Src/app.c     ****    */
1355:Src/app.c     ****   yolo_detector_info_t yolo_info;
1356:Src/app.c     ****   yolo_detector_init(&yolo_info);
1357:Src/app.c     **** 
1358:Src/app.c     ****   fl_model_info_t face_info;
1359:Src/app.c     ****   face_landmark_init(&face_info);
1360:Src/app.c     **** 
1361:Src/app.c     ****   int detection_nb;
1362:Src/app.c     **** 
1363:Src/app.c     ****   /*** App Loop ***************************************************************/
1364:Src/app.c     ****   nn_period[1] = HAL_GetTick();
1365:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1366:Src/app.c     ****   assert(nn_pipe_dst);
1367:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1368:Src/app.c     ****   while (1)
1369:Src/app.c     ****   {
1370:Src/app.c     ****     uint8_t *capture_buffer;
1371:Src/app.c     ****     memset(&yolo_info.yolo_out, 0, sizeof(yolo_info.yolo_out));
1372:Src/app.c     ****     // Standard frame timing
1373:Src/app.c     ****     nn_period[0] = nn_period[1];
1374:Src/app.c     ****     nn_period[1] = HAL_GetTick();
1375:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
1376:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
ARM GAS  /tmp/cc3ptn5O.s 			page 40


1377:Src/app.c     **** 
1378:Src/app.c     ****     // Get camera buffer to keep the pipeline moving
1379:Src/app.c     ****     capture_buffer = bqueue_get_ready(&nn_input_queue);
1380:Src/app.c     ****     assert(capture_buffer);
1381:Src/app.c     **** 
1382:Src/app.c     ****     SCB_InvalidateDCache_by_Addr((uint32_t *)capture_buffer, NN_WIDTH * NN_HEIGHT * NN_BPP);
1383:Src/app.c     ****     /**************************************************************************
1384:Src/app.c     ****      * MODEL EXECUTION 
1385:Src/app.c     ****      **************************************************************************/
1386:Src/app.c     ****     detection_nb = yolo_detector_run(capture_buffer, &yolo_info, &pd_ms);
1387:Src/app.c     ****     hl_ms = HAL_GetTick();
1388:Src/app.c     ****     is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &roi_dummy, ld_landmarks[0]);
1389:Src/app.c     ****     hl_ms = HAL_GetTick() - hl_ms;
1390:Src/app.c     **** 
1391:Src/app.c     ****     is_tracking = 0; // Force state to "not tracking"
1392:Src/app.c     **** 
1393:Src/app.c     ****     // Update filtered times with our zero values
1394:Src/app.c     ****     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1395:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1396:Src/app.c     **** 
1397:Src/app.c     ****     // We are done with the buffer, release it
1398:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
1399:Src/app.c     **** 
1400:Src/app.c     **** 
1401:Src/app.c     ****     /*
1402:Src/app.c     ****      * Update display stats
1403:Src/app.c     ****      */
1404:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1405:Src/app.c     ****     assert(ret == pdTRUE);
1406:Src/app.c     ****     // NEW: Loop through all detections to find the highest confidence score
1407:Src/app.c     ****     float max_confidence = 0.0f;
1408:Src/app.c     ****     // 1. Loop through all detections from the model's output
1409:Src/app.c     ****     for (int i = 0; i < yolo_info.yolo_out.nb_detect; i++)
1410:Src/app.c     ****     {
1411:Src/app.c     ****         // 2. Check if the current detection is a face
1412:Src/app.c     ****         if (yolo_info.yolo_out.pOutBuff[i].class_index == 2)
1413:Src/app.c     ****         {
1414:Src/app.c     ****             // 3. Check if this face has the highest confidence so far
1415:Src/app.c     ****             if (yolo_info.yolo_out.pOutBuff[i].conf > max_confidence)
1416:Src/app.c     ****             {
1417:Src/app.c     ****                 // If yes, save its confidence and index
1418:Src/app.c     ****                 max_confidence = yolo_info.yolo_out.pOutBuff[i].conf;
1419:Src/app.c     ****                 best_face_idx = i;
1420:Src/app.c     ****             }
1421:Src/app.c     ****         }
1422:Src/app.c     ****     }
1423:Src/app.c     ****     roi_t face_roi;
1424:Src/app.c     ****     int is_face_present = 0; // A flag to know if we should run the second model
1425:Src/app.c     ****     // 4. Check if a valid face was found in this frame
1426:Src/app.c     ****     if (best_face_idx != -1)
1427:Src/app.c     ****     {
1428:Src/app.c     ****         // A face was detected with sufficient confidence
1429:Src/app.c     ****         is_face_present = 1;
1430:Src/app.c     ****         
1431:Src/app.c     ****         // Get the normalized coordinates of the best face detection
1432:Src/app.c     ****         od_pp_outBuffer_t best_face = yolo_info.yolo_out.pOutBuff[best_face_idx];
1433:Src/app.c     **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 41


1434:Src/app.c     ****         // 5. Convert normalized coordinates [0.0, 1.0] to pixel coordinates
1435:Src/app.c     ****         face_roi.w  = (int)(best_face.width * LCD_BG_WIDTH);
1436:Src/app.c     ****         face_roi.h  = (int)(best_face.height * LCD_BG_HEIGHT);
1437:Src/app.c     ****         face_roi.cx = (int)(best_face.x_center * LCD_BG_WIDTH);
1438:Src/app.c     ****         face_roi.cy = (int)(best_face.y_center * LCD_BG_HEIGHT);
1439:Src/app.c     **** 
1440:Src/app.c     ****         // Now, 'face_roi' is ready to be passed to your face_landmark_run() function.
1441:Src/app.c     ****     }
1442:Src/app.c     ****     else
1443:Src/app.c     ****     {
1444:Src/app.c     ****         // No face was found that meets the criteria
1445:Src/app.c     ****         is_face_present = 0;
1446:Src/app.c     ****     }
1447:Src/app.c     **** 
1448:Src/app.c     ****     // Populate display structure with valid, non-model data
1449:Src/app.c     ****     disp.info.pd_ms = (int)(max_confidence * 100.0f);
1450:Src/app.c     ****     disp.info.hl_ms = (int)yolo_info.yolo_out.nb_detect;
1451:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
1452:Src/app.c     ****     disp.info.pd_hand_nb = yolo_info.yolo_out.nb_detect;
1453:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
1454:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
1455:Src/app.c     **** 
1456:Src/app.c     ****     // NOTE: We no longer copy box or landmark data, as none exists.
1457:Src/app.c     ****     // The display thread should check the 'is_valid' flag before drawing.
1458:Src/app.c     ****     if (is_landmark_valid)
1459:Src/app.c     ****     {
1460:Src/app.c     ****       // If valid, show the dummy ROI as the bounding box
1461:Src/app.c     ****       disp.info.hands[0].roi = roi_dummy;
1462:Src/app.c     ****       // Copy the landmark data for the display thread
1463:Src/app.c     ****       for (int j = 0; j < LD_LANDMARK_NB; j++)
1464:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1465:Src/app.c     ****     }
1466:Src/app.c     **** 
1467:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1468:Src/app.c     ****     assert(ret == pdTRUE);
1469:Src/app.c     **** 
1470:Src/app.c     ****     // Signal the display thread to update
1471:Src/app.c     ****     xSemaphoreGive(disp.update);
1472:Src/app.c     ****   }
1473:Src/app.c     **** }
1474:Src/app.c     **** 
1475:Src/app.c     **** // static void backup(void *arg)
1476:Src/app.c     **** // {
1477:Src/app.c     **** //   float nn_period_filtered_ms = 0;
1478:Src/app.c     **** //   float pd_filtered_ms = 0;
1479:Src/app.c     **** //   float ld_filtered_ms = 0;
1480:Src/app.c     **** //   hl_model_info_t hl_info;
1481:Src/app.c     **** //   pd_model_info_t pd_info;
1482:Src/app.c     **** //   uint32_t nn_period_ms;
1483:Src/app.c     **** //   uint32_t nn_period[2];
1484:Src/app.c     **** //   uint8_t *nn_pipe_dst;
1485:Src/app.c     **** //   pd_pp_point_t box_next_keypoints[AI_PD_MODEL_PP_NB_KEYPOINTS];
1486:Src/app.c     **** //   pd_pp_box_t box_next;
1487:Src/app.c     **** //   int is_tracking = 0;
1488:Src/app.c     **** //   roi_t roi_next;
1489:Src/app.c     **** //   uint32_t pd_ms;
1490:Src/app.c     **** //   uint32_t hl_ms;
ARM GAS  /tmp/cc3ptn5O.s 			page 42


1491:Src/app.c     **** //   int ret;
1492:Src/app.c     **** //   int j;
1493:Src/app.c     **** 
1494:Src/app.c     **** //   /* Current tracking algo only support single hand */
1495:Src/app.c     **** //   assert(PD_MAX_HAND_NB == 1);
1496:Src/app.c     **** 
1497:Src/app.c     **** //   /* setup models buffer info */
1498:Src/app.c     **** //   palm_detector_init(&pd_info);
1499:Src/app.c     **** //   box_next.pKps = box_next_keypoints;
1500:Src/app.c     **** //   hand_landmark_init(&hl_info);
1501:Src/app.c     **** 
1502:Src/app.c     **** // #if HAS_ROTATION_SUPPORT == 1
1503:Src/app.c     **** //   app_rot_init(&hl_info);
1504:Src/app.c     **** // #endif
1505:Src/app.c     **** 
1506:Src/app.c     **** //   /*** App Loop ***************************************************************/
1507:Src/app.c     **** //   nn_period[1] = HAL_GetTick();
1508:Src/app.c     **** //   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1509:Src/app.c     **** //   assert(nn_pipe_dst);
1510:Src/app.c     **** //   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1511:Src/app.c     **** //   while (1)
1512:Src/app.c     **** //   {
1513:Src/app.c     **** //     uint8_t *capture_buffer;
1514:Src/app.c     **** //     int idx_for_resize;
1515:Src/app.c     **** 
1516:Src/app.c     **** //     nn_period[0] = nn_period[1];
1517:Src/app.c     **** //     nn_period[1] = HAL_GetTick();
1518:Src/app.c     **** //     nn_period_ms = nn_period[1] - nn_period[0];
1519:Src/app.c     **** //     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 :
1520:Src/app.c     **** 
1521:Src/app.c     **** //     capture_buffer = bqueue_get_ready(&nn_input_queue);
1522:Src/app.c     **** //     assert(capture_buffer);
1523:Src/app.c     **** //     idx_for_resize = frame_event_nb_for_resize % DISPLAY_BUFFER_NB;
1524:Src/app.c     **** 
1525:Src/app.c     **** //     /* Only start palm detector when not tracking hand */
1526:Src/app.c     **** //     if (!is_tracking) {
1527:Src/app.c     **** //       is_tracking = palm_detector_run(capture_buffer, &pd_info, &pd_ms);
1528:Src/app.c     **** //       box_next.prob = pd_info.pd_out.pOutData[0].prob;
1529:Src/app.c     **** //     } else {
1530:Src/app.c     **** //       rois[0] = roi_next;
1531:Src/app.c     **** //       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
1532:Src/app.c     **** //       pd_ms = 0;
1533:Src/app.c     **** //     }
1534:Src/app.c     **** //     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1535:Src/app.c     **** //     bqueue_put_free(&nn_input_queue);
1536:Src/app.c     **** 
1537:Src/app.c     **** //     /* then run hand landmark detector if needed */
1538:Src/app.c     **** //     if (is_tracking) {
1539:Src/app.c     **** //       hl_ms = HAL_GetTick();
1540:Src/app.c     **** //       is_tracking = hand_landmark_run(lcd_bg_buffer[idx_for_resize], &hl_info, &rois[0], ld_land
1541:Src/app.c     **** //       CACHE_OP(SCB_InvalidateDCache_by_Addr(lcd_bg_buffer[idx_for_resize], sizeof(lcd_bg_buffer[
1542:Src/app.c     **** //       if (is_tracking)
1543:Src/app.c     **** //         compute_next_roi(&rois[0], ld_landmarks[0], &roi_next, &box_next);
1544:Src/app.c     **** //       hl_ms = HAL_GetTick() - hl_ms;
1545:Src/app.c     **** //     } else {
1546:Src/app.c     **** //       hl_ms = 0;
1547:Src/app.c     **** //     }
ARM GAS  /tmp/cc3ptn5O.s 			page 43


1548:Src/app.c     **** //     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1549:Src/app.c     **** 
1550:Src/app.c     **** //     /* update display stats */
1551:Src/app.c     **** //     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1552:Src/app.c     **** //     assert(ret == pdTRUE);
1553:Src/app.c     **** //     disp.info.pd_ms = is_tracking ? 0 : (int)pd_filtered_ms;
1554:Src/app.c     **** //     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
1555:Src/app.c     **** //     disp.info.nn_period_ms = nn_period_filtered_ms;
1556:Src/app.c     **** //     disp.info.pd_hand_nb = is_tracking;
1557:Src/app.c     **** //     disp.info.pd_max_prob = pd_info.pd_out.pOutData[0].prob;
1558:Src/app.c     **** //     disp.info.hands[0].is_valid = is_tracking;
1559:Src/app.c     **** //     copy_pd_box(&disp.info.hands[0].pd_hands, &pd_info.pd_out.pOutData[0]);
1560:Src/app.c     **** //     disp.info.hands[0].roi = rois[0];
1561:Src/app.c     **** //     for (j = 0; j < LD_LANDMARK_NB; j++)
1562:Src/app.c     **** //       disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1563:Src/app.c     **** //     ret = xSemaphoreGive(disp.lock);
1564:Src/app.c     **** //     assert(ret == pdTRUE);
1565:Src/app.c     **** 
1566:Src/app.c     **** //     /* It's possible xqueue is empty if display is slow. So don't check error code that may by p
1567:Src/app.c     **** //     xSemaphoreGive(disp.update);
1568:Src/app.c     **** //   }
1569:Src/app.c     **** // }
1570:Src/app.c     **** 
1571:Src/app.c     **** static void dp_update_drawing_area()
1572:Src/app.c     **** {
1573:Src/app.c     ****   int ret;
1574:Src/app.c     **** 
1575:Src/app.c     ****   __disable_irq();
1576:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
1577:Src/app.c     ****   assert(ret == HAL_OK);
1578:Src/app.c     ****   __enable_irq();
1579:Src/app.c     **** }
1580:Src/app.c     **** 
1581:Src/app.c     **** static void dp_commit_drawing_area()
1582:Src/app.c     **** {
1583:Src/app.c     ****   int ret;
1584:Src/app.c     **** 
1585:Src/app.c     ****   __disable_irq();
1586:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
1587:Src/app.c     ****   assert(ret == HAL_OK);
1588:Src/app.c     ****   __enable_irq();
1589:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
1590:Src/app.c     **** }
1591:Src/app.c     **** 
1592:Src/app.c     **** static void on_ld_toggle_button_click(void *args)
1593:Src/app.c     **** {
1594:Src/app.c     ****   display_t *disp = (display_t *) args;
1595:Src/app.c     ****   int ret;
1596:Src/app.c     **** 
1597:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1598:Src/app.c     ****   assert(ret == pdTRUE);
1599:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
1600:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1601:Src/app.c     ****   assert(ret == pdTRUE);
1602:Src/app.c     **** }
1603:Src/app.c     **** 
1604:Src/app.c     **** static void on_pd_toggle_button_click(void *args)
ARM GAS  /tmp/cc3ptn5O.s 			page 44


1605:Src/app.c     **** {
1606:Src/app.c     ****   display_t *disp = (display_t *) args;
1607:Src/app.c     ****   int ret;
1608:Src/app.c     **** 
1609:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1610:Src/app.c     ****   assert(ret == pdTRUE);
1611:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
1612:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1613:Src/app.c     ****   assert(ret == pdTRUE);
1614:Src/app.c     **** }
1615:Src/app.c     **** 
1616:Src/app.c     **** static void dp_thread_fct(void *arg)
1617:Src/app.c     **** {
1618:Src/app.c     ****   button_t ld_toggle_button;
1619:Src/app.c     ****   button_t hd_toggle_button;
1620:Src/app.c     ****   uint32_t disp_ms = 0;
1621:Src/app.c     ****   display_info_t info;
1622:Src/app.c     ****   uint32_t ts;
1623:Src/app.c     ****   int ret;
1624:Src/app.c     **** 
1625:Src/app.c     **** #ifdef STM32N6570_DK_REV
1626:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER1, on_ld_toggle_button_click, &disp);
1627:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
1628:Src/app.c     **** #else
1629:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER, on_ld_toggle_button_click, &disp);
1630:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_USER, on_pd_toggle_button_click, &disp);
1631:Src/app.c     **** #endif
1632:Src/app.c     ****   while (1)
1633:Src/app.c     ****   {
1634:Src/app.c     ****     ret = xSemaphoreTake(disp.update, portMAX_DELAY);
1635:Src/app.c     ****     assert(ret == pdTRUE);
1636:Src/app.c     **** 
1637:Src/app.c     ****     button_process(&ld_toggle_button);
1638:Src/app.c     ****     button_process(&hd_toggle_button);
1639:Src/app.c     **** 
1640:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1641:Src/app.c     ****     assert(ret == pdTRUE);
1642:Src/app.c     ****     info = disp.info;
1643:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1644:Src/app.c     ****     assert(ret == pdTRUE);
1645:Src/app.c     ****     info.disp_ms = disp_ms;
1646:Src/app.c     **** 
1647:Src/app.c     ****     ts = HAL_GetTick();
1648:Src/app.c     ****     dp_update_drawing_area();
1649:Src/app.c     ****     Display_NetworkOutput(&info);
1650:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
1651:Src/app.c     ****     dp_commit_drawing_area();
1652:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
1653:Src/app.c     ****   }
1654:Src/app.c     **** }
1655:Src/app.c     **** 
1656:Src/app.c     **** static void isp_thread_fct(void *arg)
1657:Src/app.c     **** {
 319              		.loc 1 1657 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc3ptn5O.s 			page 45


 323              		.loc 1 1657 1 is_stmt 0 view .LVU87
 324 0000 10B5     		push	{r4, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 4, -8
 327              		.cfi_offset 14, -4
1658:Src/app.c     ****   int ret;
1659:Src/app.c     **** 
1660:Src/app.c     ****   while (1) {
1661:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 328              		.loc 1 1661 11 view .LVU88
 329 0002 094C     		ldr	r4, .L22
 330              	.LVL20:
 331              	.L21:
1658:Src/app.c     ****   int ret;
 332              		.loc 1 1658 3 is_stmt 1 view .LVU89
1660:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 333              		.loc 1 1660 3 view .LVU90
 334              		.loc 1 1661 5 view .LVU91
 335              		.loc 1 1661 11 is_stmt 0 view .LVU92
 336 0004 4FF0FF31 		mov	r1, #-1
 337 0008 2068     		ldr	r0, [r4]
 338 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 339              	.LVL21:
1662:Src/app.c     ****     assert(ret == pdTRUE);
 340              		.loc 1 1662 5 is_stmt 1 view .LVU93
 341 000e 0128     		cmp	r0, #1
 342 0010 06D0     		beq	.L20
 343              		.loc 1 1662 5 is_stmt 0 discriminator 1 view .LVU94
 344 0012 40F27E61 		movw	r1, #1662
 345 0016 054B     		ldr	r3, .L22+4
 346 0018 054A     		ldr	r2, .L22+8
 347 001a 0648     		ldr	r0, .L22+12
 348              	.LVL22:
 349              		.loc 1 1662 5 discriminator 1 view .LVU95
 350 001c FFF7FEFF 		bl	__assert_func
 351              	.LVL23:
 352              	.L20:
1663:Src/app.c     **** 
1664:Src/app.c     ****     CAM_IspUpdate();
 353              		.loc 1 1664 5 is_stmt 1 view .LVU96
 354 0020 FFF7FEFF 		bl	CAM_IspUpdate
 355              	.LVL24:
1660:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 356              		.loc 1 1660 9 view .LVU97
1661:Src/app.c     ****     assert(ret == pdTRUE);
 357              		.loc 1 1661 9 is_stmt 0 view .LVU98
 358 0024 EEE7     		b	.L21
 359              	.L23:
 360 0026 00BF     		.align	2
 361              	.L22:
 362 0028 00000000 		.word	isp_sem
 363 002c 00000000 		.word	.LC1
 364 0030 00000000 		.word	__func__.19
 365 0034 0E000000 		.word	.LC2
 366              		.cfi_endproc
 367              	.LFE7410:
 369              		.section	.text.on_pd_toggle_button_click,"ax",%progbits
ARM GAS  /tmp/cc3ptn5O.s 			page 46


 370              		.align	1
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 375              	on_pd_toggle_button_click:
 376              	.LVL25:
 377              	.LFB7408:
1605:Src/app.c     ****   display_t *disp = (display_t *) args;
 378              		.loc 1 1605 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
1606:Src/app.c     ****   int ret;
 382              		.loc 1 1606 3 view .LVU100
1607:Src/app.c     **** 
 383              		.loc 1 1607 3 view .LVU101
1609:Src/app.c     ****   assert(ret == pdTRUE);
 384              		.loc 1 1609 3 view .LVU102
1605:Src/app.c     ****   display_t *disp = (display_t *) args;
 385              		.loc 1 1605 1 is_stmt 0 view .LVU103
 386 0000 10B5     		push	{r4, lr}
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 4, -8
 389              		.cfi_offset 14, -4
1609:Src/app.c     ****   assert(ret == pdTRUE);
 390              		.loc 1 1609 9 view .LVU104
 391 0002 4FF0FF31 		mov	r1, #-1
1605:Src/app.c     ****   display_t *disp = (display_t *) args;
 392              		.loc 1 1605 1 view .LVU105
 393 0006 0446     		mov	r4, r0
1609:Src/app.c     ****   assert(ret == pdTRUE);
 394              		.loc 1 1609 9 view .LVU106
 395 0008 406D     		ldr	r0, [r0, #84]
 396              	.LVL26:
1609:Src/app.c     ****   assert(ret == pdTRUE);
 397              		.loc 1 1609 9 view .LVU107
 398 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 399              	.LVL27:
1610:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 400              		.loc 1 1610 3 is_stmt 1 view .LVU108
 401 000e 0128     		cmp	r0, #1
 402 0010 06D0     		beq	.L25
1610:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 403              		.loc 1 1610 3 is_stmt 0 discriminator 1 view .LVU109
 404 0012 40F24A61 		movw	r1, #1610
 405 0016 0D4B     		ldr	r3, .L28
 406 0018 0D4A     		ldr	r2, .L28+4
 407              	.L27:
1613:Src/app.c     **** }
 408              		.loc 1 1613 3 discriminator 1 view .LVU110
 409 001a 0E48     		ldr	r0, .L28+8
 410              	.LVL28:
1613:Src/app.c     **** }
 411              		.loc 1 1613 3 discriminator 1 view .LVU111
 412 001c FFF7FEFF 		bl	__assert_func
 413              	.LVL29:
 414              	.L25:
ARM GAS  /tmp/cc3ptn5O.s 			page 47


1611:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 415              		.loc 1 1611 3 is_stmt 1 view .LVU112
1611:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 416              		.loc 1 1611 32 is_stmt 0 view .LVU113
 417 0020 D4F8C030 		ldr	r3, [r4, #192]
1612:Src/app.c     ****   assert(ret == pdTRUE);
 418              		.loc 1 1612 9 view .LVU114
 419 0024 606D     		ldr	r0, [r4, #84]
 420              	.LVL30:
1611:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 421              		.loc 1 1611 32 view .LVU115
 422 0026 B3FA83F3 		clz	r3, r3
 423 002a 5B09     		lsrs	r3, r3, #5
1611:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 424              		.loc 1 1611 30 view .LVU116
 425 002c C4F8C030 		str	r3, [r4, #192]
1612:Src/app.c     ****   assert(ret == pdTRUE);
 426              		.loc 1 1612 3 is_stmt 1 view .LVU117
1612:Src/app.c     ****   assert(ret == pdTRUE);
 427              		.loc 1 1612 9 is_stmt 0 view .LVU118
 428 0030 0023     		movs	r3, #0
 429 0032 1A46     		mov	r2, r3
 430 0034 1946     		mov	r1, r3
 431 0036 FFF7FEFF 		bl	xQueueGenericSend
 432              	.LVL31:
1613:Src/app.c     **** }
 433              		.loc 1 1613 3 is_stmt 1 view .LVU119
 434 003a 0128     		cmp	r0, #1
 435 003c 04D0     		beq	.L24
1613:Src/app.c     **** }
 436              		.loc 1 1613 3 is_stmt 0 discriminator 1 view .LVU120
 437 003e 40F24D61 		movw	r1, #1613
 438 0042 024B     		ldr	r3, .L28
 439 0044 024A     		ldr	r2, .L28+4
 440 0046 E8E7     		b	.L27
 441              	.L24:
1614:Src/app.c     **** 
 442              		.loc 1 1614 1 view .LVU121
 443 0048 10BD     		pop	{r4, pc}
 444              	.LVL32:
 445              	.L29:
1614:Src/app.c     **** 
 446              		.loc 1 1614 1 view .LVU122
 447 004a 00BF     		.align	2
 448              	.L28:
 449 004c 00000000 		.word	.LC1
 450 0050 00000000 		.word	__func__.17
 451 0054 0E000000 		.word	.LC2
 452              		.cfi_endproc
 453              	.LFE7408:
 455              		.section	.text.on_ld_toggle_button_click,"ax",%progbits
 456              		.align	1
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 461              	on_ld_toggle_button_click:
 462              	.LVL33:
ARM GAS  /tmp/cc3ptn5O.s 			page 48


 463              	.LFB7407:
1593:Src/app.c     ****   display_t *disp = (display_t *) args;
 464              		.loc 1 1593 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
1594:Src/app.c     ****   int ret;
 468              		.loc 1 1594 3 view .LVU124
1595:Src/app.c     **** 
 469              		.loc 1 1595 3 view .LVU125
1597:Src/app.c     ****   assert(ret == pdTRUE);
 470              		.loc 1 1597 3 view .LVU126
1593:Src/app.c     ****   display_t *disp = (display_t *) args;
 471              		.loc 1 1593 1 is_stmt 0 view .LVU127
 472 0000 10B5     		push	{r4, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 4, -8
 475              		.cfi_offset 14, -4
1597:Src/app.c     ****   assert(ret == pdTRUE);
 476              		.loc 1 1597 9 view .LVU128
 477 0002 4FF0FF31 		mov	r1, #-1
1593:Src/app.c     ****   display_t *disp = (display_t *) args;
 478              		.loc 1 1593 1 view .LVU129
 479 0006 0446     		mov	r4, r0
1597:Src/app.c     ****   assert(ret == pdTRUE);
 480              		.loc 1 1597 9 view .LVU130
 481 0008 406D     		ldr	r0, [r0, #84]
 482              	.LVL34:
1597:Src/app.c     ****   assert(ret == pdTRUE);
 483              		.loc 1 1597 9 view .LVU131
 484 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 485              	.LVL35:
1598:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 486              		.loc 1 1598 3 is_stmt 1 view .LVU132
 487 000e 0128     		cmp	r0, #1
 488 0010 06D0     		beq	.L31
1598:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 489              		.loc 1 1598 3 is_stmt 0 discriminator 1 view .LVU133
 490 0012 40F23E61 		movw	r1, #1598
 491 0016 0D4B     		ldr	r3, .L34
 492 0018 0D4A     		ldr	r2, .L34+4
 493              	.L33:
1601:Src/app.c     **** }
 494              		.loc 1 1601 3 discriminator 1 view .LVU134
 495 001a 0E48     		ldr	r0, .L34+8
 496              	.LVL36:
1601:Src/app.c     **** }
 497              		.loc 1 1601 3 discriminator 1 view .LVU135
 498 001c FFF7FEFF 		bl	__assert_func
 499              	.LVL37:
 500              	.L31:
1599:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 501              		.loc 1 1599 3 is_stmt 1 view .LVU136
1599:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 502              		.loc 1 1599 32 is_stmt 0 view .LVU137
 503 0020 D4F8BC30 		ldr	r3, [r4, #188]
1600:Src/app.c     ****   assert(ret == pdTRUE);
ARM GAS  /tmp/cc3ptn5O.s 			page 49


 504              		.loc 1 1600 9 view .LVU138
 505 0024 606D     		ldr	r0, [r4, #84]
 506              	.LVL38:
1599:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 507              		.loc 1 1599 32 view .LVU139
 508 0026 B3FA83F3 		clz	r3, r3
 509 002a 5B09     		lsrs	r3, r3, #5
1599:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 510              		.loc 1 1599 30 view .LVU140
 511 002c C4F8BC30 		str	r3, [r4, #188]
1600:Src/app.c     ****   assert(ret == pdTRUE);
 512              		.loc 1 1600 3 is_stmt 1 view .LVU141
1600:Src/app.c     ****   assert(ret == pdTRUE);
 513              		.loc 1 1600 9 is_stmt 0 view .LVU142
 514 0030 0023     		movs	r3, #0
 515 0032 1A46     		mov	r2, r3
 516 0034 1946     		mov	r1, r3
 517 0036 FFF7FEFF 		bl	xQueueGenericSend
 518              	.LVL39:
1601:Src/app.c     **** }
 519              		.loc 1 1601 3 is_stmt 1 view .LVU143
 520 003a 0128     		cmp	r0, #1
 521 003c 04D0     		beq	.L30
1601:Src/app.c     **** }
 522              		.loc 1 1601 3 is_stmt 0 discriminator 1 view .LVU144
 523 003e 40F24161 		movw	r1, #1601
 524 0042 024B     		ldr	r3, .L34
 525 0044 024A     		ldr	r2, .L34+4
 526 0046 E8E7     		b	.L33
 527              	.L30:
1602:Src/app.c     **** 
 528              		.loc 1 1602 1 view .LVU145
 529 0048 10BD     		pop	{r4, pc}
 530              	.LVL40:
 531              	.L35:
1602:Src/app.c     **** 
 532              		.loc 1 1602 1 view .LVU146
 533 004a 00BF     		.align	2
 534              	.L34:
 535 004c 00000000 		.word	.LC1
 536 0050 00000000 		.word	__func__.16
 537 0054 0E000000 		.word	.LC2
 538              		.cfi_endproc
 539              	.LFE7407:
 541              		.section	.text.button_process,"ax",%progbits
 542              		.align	1
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 547              	button_process:
 548              	.LVL41:
 549              	.LFB7369:
 425:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 550              		.loc 1 425 1 is_stmt 1 view -0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc3ptn5O.s 			page 50


 426:Src/app.c     **** 
 554              		.loc 1 426 3 view .LVU148
 425:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 555              		.loc 1 425 1 is_stmt 0 view .LVU149
 556 0000 38B5     		push	{r3, r4, r5, lr}
 557              		.cfi_def_cfa_offset 16
 558              		.cfi_offset 3, -16
 559              		.cfi_offset 4, -12
 560              		.cfi_offset 5, -8
 561              		.cfi_offset 14, -4
 425:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 562              		.loc 1 425 1 view .LVU150
 563 0002 0446     		mov	r4, r0
 426:Src/app.c     **** 
 564              		.loc 1 426 15 view .LVU151
 565 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 566              	.LVL42:
 426:Src/app.c     **** 
 567              		.loc 1 426 15 view .LVU152
 568 0006 FFF7FEFF 		bl	BSP_PB_GetState
 569              	.LVL43:
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 570              		.loc 1 428 6 view .LVU153
 571 000a 6368     		ldr	r3, [r4, #4]
 426:Src/app.c     **** 
 572              		.loc 1 426 15 view .LVU154
 573 000c 0546     		mov	r5, r0
 574              	.LVL44:
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 575              		.loc 1 428 3 is_stmt 1 view .LVU155
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 576              		.loc 1 428 6 is_stmt 0 view .LVU156
 577 000e 8342     		cmp	r3, r0
 578 0010 04D0     		beq	.L37
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 579              		.loc 1 428 30 discriminator 1 view .LVU157
 580 0012 18B1     		cbz	r0, .L37
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 581              		.loc 1 428 43 discriminator 2 view .LVU158
 582 0014 A368     		ldr	r3, [r4, #8]
 428:Src/app.c     ****     b->on_click_handler(b->cb_args);
 583              		.loc 1 428 39 discriminator 2 view .LVU159
 584 0016 0BB1     		cbz	r3, .L37
 429:Src/app.c     **** 
 585              		.loc 1 429 5 is_stmt 1 view .LVU160
 586 0018 E068     		ldr	r0, [r4, #12]
 587              	.LVL45:
 429:Src/app.c     **** 
 588              		.loc 1 429 5 is_stmt 0 view .LVU161
 589 001a 9847     		blx	r3
 590              	.LVL46:
 591              	.L37:
 431:Src/app.c     **** }
 592              		.loc 1 431 3 is_stmt 1 view .LVU162
 431:Src/app.c     **** }
 593              		.loc 1 431 17 is_stmt 0 view .LVU163
 594 001c 6560     		str	r5, [r4, #4]
ARM GAS  /tmp/cc3ptn5O.s 			page 51


 432:Src/app.c     **** 
 595              		.loc 1 432 1 view .LVU164
 596 001e 38BD     		pop	{r3, r4, r5, pc}
 432:Src/app.c     **** 
 597              		.loc 1 432 1 view .LVU165
 598              		.cfi_endproc
 599              	.LFE7369:
 601              		.section	.rodata.button_init.part.0.str1.1,"aMS",%progbits,1
 602              	.LC3:
 603 0000 72657420 		.ascii	"ret == BSP_ERROR_NONE\000"
 603      3D3D2042 
 603      53505F45 
 603      52524F52 
 603      5F4E4F4E 
 604              		.section	.text.button_init.part.0,"ax",%progbits
 605              		.align	1
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 610              	button_init.part.0:
 611              	.LFB7415:
 411:Src/app.c     **** {
 612              		.loc 1 411 13 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ Volatile: function does not return.
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              	.LVL47:
 411:Src/app.c     **** {
 618              		.loc 1 411 13 is_stmt 0 view .LVU167
 619 0000 08B5     		push	{r3, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 3, -8
 622              		.cfi_offset 14, -4
 416:Src/app.c     **** 
 623              		.loc 1 416 3 discriminator 1 view .LVU168
 624 0002 4FF4D071 		mov	r1, #416
 625 0006 024B     		ldr	r3, .L45
 626 0008 024A     		ldr	r2, .L45+4
 627 000a 0348     		ldr	r0, .L45+8
 628 000c FFF7FEFF 		bl	__assert_func
 629              	.LVL48:
 630              	.L46:
 631              		.align	2
 632              	.L45:
 633 0010 00000000 		.word	.LC3
 634 0014 00000000 		.word	__func__.15
 635 0018 0E000000 		.word	.LC2
 636              		.cfi_endproc
 637              	.LFE7415:
 639              		.section	.text.display_ld_hand,"ax",%progbits
 640              		.align	1
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 645              	display_ld_hand:
 646              	.LVL49:
ARM GAS  /tmp/cc3ptn5O.s 			page 52


 647              	.LFB7390:
 752:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 648              		.loc 1 752 1 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 5616
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 753:Src/app.c     ****   roi_t *roi = &hand->roi;
 652              		.loc 1 753 3 view .LVU170
 754:Src/app.c     ****   int x[LD_LANDMARK_NB];
 653              		.loc 1 754 3 view .LVU171
 755:Src/app.c     ****   int y[LD_LANDMARK_NB];
 654              		.loc 1 755 3 view .LVU172
 756:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 655              		.loc 1 756 3 view .LVU173
 757:Src/app.c     ****   ld_point_t decoded;
 656              		.loc 1 757 3 view .LVU174
 758:Src/app.c     ****   int i;
 657              		.loc 1 758 3 view .LVU175
 759:Src/app.c     **** 
 658              		.loc 1 759 3 view .LVU176
 761:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 659              		.loc 1 761 3 view .LVU177
 761:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 660              		.loc 1 761 17 discriminator 1 view .LVU178
 752:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 661              		.loc 1 752 1 is_stmt 0 view .LVU179
 662 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 663              		.cfi_def_cfa_offset 36
 664              		.cfi_offset 4, -36
 665              		.cfi_offset 5, -32
 666              		.cfi_offset 6, -28
 667              		.cfi_offset 7, -24
 668              		.cfi_offset 8, -20
 669              		.cfi_offset 9, -16
 670              		.cfi_offset 10, -12
 671              		.cfi_offset 11, -8
 672              		.cfi_offset 14, -4
 673 0004 2DED0A8B 		vpush.64	{d8, d9, d10, d11, d12}
 674              		.cfi_def_cfa_offset 76
 675              		.cfi_offset 80, -76
 676              		.cfi_offset 81, -72
 677              		.cfi_offset 82, -68
 678              		.cfi_offset 83, -64
 679              		.cfi_offset 84, -60
 680              		.cfi_offset 85, -56
 681              		.cfi_offset 86, -52
 682              		.cfi_offset 87, -48
 683              		.cfi_offset 88, -44
 684              		.cfi_offset 89, -40
 685              	.LBB194:
 686              	.LBB195:
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 687              		.loc 1 747 46 view .LVU180
 688 0008 90ED0BCA 		vldr.32	s24, [r0, #44]
 689 000c B7EECCCA 		vcvt.f64.f32	d12, s24
 690              	.LBE195:
 691              	.LBE194:
ARM GAS  /tmp/cc3ptn5O.s 			page 53


 752:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 692              		.loc 1 752 1 view .LVU181
 693 0010 ADF5AF5D 		sub	sp, sp, #5600
 694              		.cfi_def_cfa_offset 5676
 695 0014 85B0     		sub	sp, sp, #20
 696              		.cfi_def_cfa_offset 5696
 697              	.LBB200:
 698              	.LBB196:
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 699              		.loc 1 747 46 view .LVU182
 700 0016 B0EE4C0B 		vmov.f64	d0, d12
 701              	.LBE196:
 702              	.LBE200:
 752:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 703              		.loc 1 752 1 view .LVU183
 704 001a 0446     		mov	r4, r0
 705              	.LBB201:
 706              	.LBB197:
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 707              		.loc 1 747 19 view .LVU184
 708 001c 90ED07AA 		vldr.32	s20, [r0, #28]
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 709              		.loc 1 747 40 view .LVU185
 710 0020 90ED09BA 		vldr.32	s22, [r0, #36]
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 711              		.loc 1 747 46 view .LVU186
 712 0024 FFF7FEFF 		bl	cos
 713              	.LVL50:
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 714              		.loc 1 747 46 view .LVU187
 715 0028 B0EE408B 		vmov.f64	d8, d0
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 716              		.loc 1 747 82 discriminator 1 view .LVU188
 717 002c B0EE4C0B 		vmov.f64	d0, d12
 718 0030 FFF7FEFF 		bl	sin
 719              	.LVL51:
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 720              		.loc 1 747 76 discriminator 1 view .LVU189
 721 0034 94ED0A9A 		vldr.32	s18, [r4, #40]
 748:Src/app.c     **** }
 722              		.loc 1 748 19 view .LVU190
 723 0038 94ED086A 		vldr.32	s12, [r4, #32]
 724 003c EC46     		mov	ip, sp
 725 003e 0DF56A65 		add	r5, sp, #3744
 726 0042 0DF5EA60 		add	r0, sp, #1872
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 727              		.loc 1 747 19 view .LVU191
 728 0046 B7EECAAA 		vcvt.f64.f32	d10, s20
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 729              		.loc 1 747 40 view .LVU192
 730 004a B7EECBBA 		vcvt.f64.f32	d11, s22
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 731              		.loc 1 747 76 discriminator 1 view .LVU193
 732 004e B7EEC99A 		vcvt.f64.f32	d9, s18
 748:Src/app.c     **** }
 733              		.loc 1 748 19 view .LVU194
 734 0052 B7EEC66A 		vcvt.f64.f32	d6, s12
ARM GAS  /tmp/cc3ptn5O.s 			page 54


 735 0056 AE46     		mov	lr, r5
 736 0058 0646     		mov	r6, r0
 737 005a 6746     		mov	r7, ip
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 738              		.loc 1 747 33 view .LVU195
 739 005c B6EE005B 		vmov.f64	d5, #5.0e-1
 740              	.LBE197:
 741              	.LBE201:
 742              	.LBB202:
 743              	.LBB203:
 634:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 744              		.loc 1 634 6 view .LVU196
 745 0060 40F21D39 		movw	r9, #797
 636:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 746              		.loc 1 636 6 view .LVU197
 747 0064 40F2DD18 		movw	r8, #477
 639:Src/app.c     **** }
 748              		.loc 1 639 21 discriminator 3 view .LVU198
 749 0068 4FF4EA71 		mov	r1, #468
 750              	.LVL52:
 751              	.L49:
 639:Src/app.c     **** }
 752              		.loc 1 639 21 discriminator 3 view .LVU199
 753              	.LBE203:
 754              	.LBE202:
 762:Src/app.c     ****     x[i] = (int)decoded.x;
 755              		.loc 1 762 5 is_stmt 1 view .LVU200
 756              	.LBB208:
 757              	.LBI194:
 741:Src/app.c     **** {
 758              		.loc 1 741 13 view .LVU201
 759              	.LBB198:
 743:Src/app.c     ****   float w = roi->w;
 760              		.loc 1 743 3 view .LVU202
 744:Src/app.c     ****   float h = roi->h;
 761              		.loc 1 744 3 view .LVU203
 745:Src/app.c     **** 
 762              		.loc 1 745 3 view .LVU204
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 763              		.loc 1 747 3 view .LVU205
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 764              		.loc 1 747 29 is_stmt 0 view .LVU206
 765 006c 94ED0C3A 		vldr.32	s6, [r4, #48]
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 766              		.loc 1 747 65 discriminator 1 view .LVU207
 767 0070 94ED0D4A 		vldr.32	s8, [r4, #52]
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 768              		.loc 1 747 29 view .LVU208
 769 0074 B7EEC33A 		vcvt.f64.f32	d3, s6
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 770              		.loc 1 747 65 discriminator 1 view .LVU209
 771 0078 B7EEC44A 		vcvt.f64.f32	d4, s8
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 772              		.loc 1 747 33 view .LVU210
 773 007c 33EE453B 		vsub.f64	d3, d3, d5
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 774              		.loc 1 747 24 discriminator 1 view .LVU211
ARM GAS  /tmp/cc3ptn5O.s 			page 55


 775 0080 B0EE4A7B 		vmov.f64	d7, d10
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 776              		.loc 1 747 40 view .LVU212
 777 0084 23EE0B3B 		vmul.f64	d3, d3, d11
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 778              		.loc 1 747 69 discriminator 1 view .LVU213
 779 0088 34EE454B 		vsub.f64	d4, d4, d5
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 780              		.loc 1 747 24 discriminator 1 view .LVU214
 781 008c A3EE087B 		vfma.f64	d7, d3, d8
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 782              		.loc 1 747 76 discriminator 1 view .LVU215
 783 0090 24EE094B 		vmul.f64	d4, d4, d9
 747:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 784              		.loc 1 747 60 discriminator 2 view .LVU216
 785 0094 A4EE407B 		vfms.f64	d7, d4, d0
 786 0098 F7EEC72B 		vcvt.f32.f64	s5, d7
 748:Src/app.c     **** }
 787              		.loc 1 748 3 is_stmt 1 view .LVU217
 748:Src/app.c     **** }
 788              		.loc 1 748 24 is_stmt 0 discriminator 1 view .LVU218
 789 009c B0EE467B 		vmov.f64	d7, d6
 790 00a0 A3EE007B 		vfma.f64	d7, d3, d0
 748:Src/app.c     **** }
 791              		.loc 1 748 60 discriminator 2 view .LVU219
 792 00a4 A8EE047B 		vfma.f64	d7, d8, d4
 793              	.LVL53:
 748:Src/app.c     **** }
 794              		.loc 1 748 60 discriminator 2 view .LVU220
 795              	.LBE198:
 796              	.LBE208:
 763:Src/app.c     ****     y[i] = (int)decoded.y;
 797              		.loc 1 763 5 is_stmt 1 view .LVU221
 763:Src/app.c     ****     y[i] = (int)decoded.y;
 798              		.loc 1 763 12 is_stmt 0 view .LVU222
 799 00a8 FDEEE24A 		vcvt.s32.f32	s9, s5
 800 00ac 14EE90AA 		vmov	r10, s9	@ int
 764:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 801              		.loc 1 764 5 is_stmt 1 view .LVU223
 802              	.LBB209:
 803              	.LBB199:
 748:Src/app.c     **** }
 804              		.loc 1 748 60 is_stmt 0 discriminator 2 view .LVU224
 805 00b0 B7EEC77B 		vcvt.f32.f64	s14, d7
 806              	.LBE199:
 807              	.LBE209:
 808              	.LBB210:
 809              	.LBB204:
 630:Src/app.c     ****     *x = margin;
 810              		.loc 1 630 6 view .LVU225
 811 00b4 5246     		mov	r2, r10
 812              	.LBE204:
 813              	.LBE210:
 764:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 814              		.loc 1 764 12 view .LVU226
 815 00b6 FDEEC77A 		vcvt.s32.f32	s15, s14
 816              	.LBB211:
ARM GAS  /tmp/cc3ptn5O.s 			page 56


 817              	.LBB205:
 630:Src/app.c     ****     *x = margin;
 818              		.loc 1 630 6 view .LVU227
 819 00ba 022A     		cmp	r2, #2
 820 00bc B8BF     		it	lt
 821 00be 0222     		movlt	r2, #2
 822              	.LBE205:
 823              	.LBE211:
 764:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 824              		.loc 1 764 12 view .LVU228
 825 00c0 17EE903A 		vmov	r3, s15	@ int
 765:Src/app.c     ****   }
 826              		.loc 1 765 5 is_stmt 1 view .LVU229
 827              	.LVL54:
 828              	.LBB212:
 829              	.LBI202:
 625:Src/app.c     **** {
 830              		.loc 1 625 12 view .LVU230
 831              	.LBB206:
 627:Src/app.c     ****   int yi = *y;
 832              		.loc 1 627 3 view .LVU231
 628:Src/app.c     **** 
 833              		.loc 1 628 3 view .LVU232
 630:Src/app.c     ****     *x = margin;
 834              		.loc 1 630 3 view .LVU233
 632:Src/app.c     ****     *y = margin;
 835              		.loc 1 632 3 view .LVU234
 634:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 836              		.loc 1 634 3 view .LVU235
 634:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 837              		.loc 1 634 6 is_stmt 0 view .LVU236
 838 00c4 4A45     		cmp	r2, r9
 839 00c6 A8BF     		it	ge
 840 00c8 4A46     		movge	r2, r9
 632:Src/app.c     ****     *y = margin;
 841              		.loc 1 632 6 view .LVU237
 842 00ca 022B     		cmp	r3, #2
 843 00cc 9B46     		mov	fp, r3
 844 00ce B8BF     		it	lt
 845 00d0 4FF0020B 		movlt	fp, #2
 636:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 846              		.loc 1 636 6 view .LVU238
 847 00d4 C345     		cmp	fp, r8
 848 00d6 A8BF     		it	ge
 849 00d8 C346     		movge	fp, r8
 639:Src/app.c     **** }
 850              		.loc 1 639 21 discriminator 2 view .LVU239
 851 00da B3EB0B03 		subs	r3, r3, fp
 852              	.LVL55:
 639:Src/app.c     **** }
 853              		.loc 1 639 21 discriminator 2 view .LVU240
 854 00de 18BF     		it	ne
 855 00e0 0123     		movne	r3, #1
 856 00e2 9245     		cmp	r10, r2
 857 00e4 18BF     		it	ne
 858 00e6 0123     		movne	r3, #1
 859              	.LBE206:
ARM GAS  /tmp/cc3ptn5O.s 			page 57


 860              	.LBE212:
 761:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 861              		.loc 1 761 17 discriminator 1 view .LVU241
 862 00e8 0139     		subs	r1, r1, #1
 863 00ea 4CF8042B 		str	r2, [ip], #4
 864              	.LBB213:
 865              	.LBB207:
 636:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 866              		.loc 1 636 3 is_stmt 1 view .LVU242
 867 00ee 40F804BB 		str	fp, [r0], #4
 639:Src/app.c     **** }
 868              		.loc 1 639 3 view .LVU243
 869              	.LVL56:
 639:Src/app.c     **** }
 870              		.loc 1 639 3 is_stmt 0 view .LVU244
 871              	.LBE207:
 872              	.LBE213:
 765:Src/app.c     ****   }
 873              		.loc 1 765 19 discriminator 1 view .LVU245
 874 00f2 4EF8043B 		str	r3, [lr], #4
 761:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 875              		.loc 1 761 36 is_stmt 1 discriminator 3 view .LVU246
 761:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 876              		.loc 1 761 17 discriminator 1 view .LVU247
 877 00f6 04F10804 		add	r4, r4, #8
 878 00fa B7D1     		bne	.L49
 768:Src/app.c     ****     if (is_clamped[i])
 879              		.loc 1 768 10 is_stmt 0 view .LVU248
 880 00fc 0024     		movs	r4, #0
 881              	.L51:
 882              	.LVL57:
 769:Src/app.c     ****       continue;
 883              		.loc 1 769 5 is_stmt 1 view .LVU249
 769:Src/app.c     ****       continue;
 884              		.loc 1 769 19 is_stmt 0 view .LVU250
 885 00fe 55F8043B 		ldr	r3, [r5], #4
 769:Src/app.c     ****       continue;
 886              		.loc 1 769 8 view .LVU251
 887 0102 43B9     		cbnz	r3, .L50
 771:Src/app.c     ****   }
 888              		.loc 1 771 5 is_stmt 1 view .LVU252
 889 0104 6FF0FF03 		mvn	r3, #255
 890 0108 0222     		movs	r2, #2
 891 010a 56F82410 		ldr	r1, [r6, r4, lsl #2]
 892 010e 57F82400 		ldr	r0, [r7, r4, lsl #2]
 893 0112 FFF7FEFF 		bl	UTIL_LCD_FillCircle
 894              	.LVL58:
 895              	.L50:
 768:Src/app.c     ****     if (is_clamped[i])
 896              		.loc 1 768 36 discriminator 2 view .LVU253
 897 0116 0134     		adds	r4, r4, #1
 898              	.LVL59:
 768:Src/app.c     ****     if (is_clamped[i])
 899              		.loc 1 768 17 discriminator 1 view .LVU254
 900 0118 B4F5EA7F 		cmp	r4, #468
 901 011c EFD1     		bne	.L51
 773:Src/app.c     **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 58


 902              		.loc 1 773 1 is_stmt 0 view .LVU255
 903 011e 0DF5AF5D 		add	sp, sp, #5600
 904 0122 05B0     		add	sp, sp, #20
 905              		.cfi_def_cfa_offset 76
 906              		@ sp needed
 907 0124 BDEC0A8B 		vldm	sp!, {d8-d12}
 908              		.cfi_restore 88
 909              		.cfi_restore 89
 910              		.cfi_restore 86
 911              		.cfi_restore 87
 912              		.cfi_restore 84
 913              		.cfi_restore 85
 914              		.cfi_restore 82
 915              		.cfi_restore 83
 916              		.cfi_restore 80
 917              		.cfi_restore 81
 918              		.cfi_def_cfa_offset 36
 919 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 773:Src/app.c     **** 
 920              		.loc 1 773 1 view .LVU256
 921              		.cfi_endproc
 922              	.LFE7390:
 924              		.section	.rodata.nn_thread_fct.str1.1,"aMS",%progbits,1
 925              	.LC4:
 926 0000 72657420 		.ascii	"ret == 0\000"
 926      3D3D2030 
 926      00
 927              	.LC5:
 928 0009 696E666F 		.ascii	"info->prob_out_len == sizeof(float)\000"
 928      2D3E7072 
 928      6F625F6F 
 928      75745F6C 
 928      656E203D 
 929              	.LC6:
 930 002d 696E666F 		.ascii	"info->landmarks_out_len == sizeof(float) * 1404\000"
 930      2D3E6C61 
 930      6E646D61 
 930      726B735F 
 930      6F75745F 
 931              	.LC7:
 932 005d 6E6E5F70 		.ascii	"nn_pipe_dst\000"
 932      6970655F 
 932      64737400 
 933              	.LC8:
 934 0069 63617074 		.ascii	"capture_buffer\000"
 934      7572655F 
 934      62756666 
 934      657200
 935              	.LC9:
 936 0078 72657420 		.ascii	"ret == LL_ATON_User_IO_NOERROR\000"
 936      3D3D204C 
 936      4C5F4154 
 936      4F4E5F55 
 936      7365725F 
 937              	.LC10:
 938 0097 77696474 		.ascii	"width_out > 0\000"
 938      685F6F75 
ARM GAS  /tmp/cc3ptn5O.s 			page 59


 938      74203E20 
 938      3000
 939              	.LC11:
 940 00a5 68656967 		.ascii	"height_out > 0\000"
 940      68745F6F 
 940      7574203E 
 940      203000
 941              	.LC12:
 942 00b4 6F75745F 		.ascii	"out_data_end >= info->nn_in\000"
 942      64617461 
 942      5F656E64 
 942      203E3D20 
 942      696E666F 
 943              	.LC13:
 944 00d0 6F75745F 		.ascii	"out_data_end < info->nn_in + info->nn_in_len\000"
 944      64617461 
 944      5F656E64 
 944      203C2069 
 944      6E666F2D 
 945              	.LC14:
 946 00fd 77696474 		.ascii	"width_in > 0\000"
 946      685F696E 
 946      203E2030 
 946      00
 947              	.LC15:
 948 010a 68656967 		.ascii	"height_in > 0\000"
 948      68745F69 
 948      6E203E20 
 948      3000
 949              	.LC16:
 950 0118 696E5F64 		.ascii	"in_data_end >= buffer\000"
 950      6174615F 
 950      656E6420 
 950      3E3D2062 
 950      75666665 
 951              	.LC17:
 952 012e 696E5F64 		.ascii	"in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT"
 952      6174615F 
 952      656E6420 
 952      3C206275 
 952      66666572 
 953 0161 202A2044 		.ascii	" * DISPLAY_BPP\000"
 953      4953504C 
 953      41595F42 
 953      505000
 954              		.section	.text.nn_thread_fct,"ax",%progbits
 955              		.align	1
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 960              	nn_thread_fct:
 961              	.LVL60:
 962              	.LFB7404:
1328:Src/app.c     ****   float nn_period_filtered_ms = 0;
 963              		.loc 1 1328 1 is_stmt 1 view -0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 152
ARM GAS  /tmp/cc3ptn5O.s 			page 60


 966              		@ frame_needed = 0, uses_anonymous_args = 0
1329:Src/app.c     ****   // Filtered inference times, will be updated with 0
 967              		.loc 1 1329 3 view .LVU258
1331:Src/app.c     ****   float ld_filtered_ms = 0;
 968              		.loc 1 1331 3 view .LVU259
1332:Src/app.c     **** 
 969              		.loc 1 1332 3 view .LVU260
1334:Src/app.c     ****   uint32_t nn_period[2];
 970              		.loc 1 1334 3 view .LVU261
1335:Src/app.c     ****   uint8_t *nn_pipe_dst;
 971              		.loc 1 1335 3 view .LVU262
1336:Src/app.c     ****   int is_tracking;
 972              		.loc 1 1336 3 view .LVU263
1337:Src/app.c     ****   uint32_t pd_ms;
 973              		.loc 1 1337 3 view .LVU264
1338:Src/app.c     ****   uint32_t hl_ms;
 974              		.loc 1 1338 3 view .LVU265
1339:Src/app.c     ****   int ret;
 975              		.loc 1 1339 3 view .LVU266
1340:Src/app.c     ****   roi_t roi_dummy;
 976              		.loc 1 1340 3 view .LVU267
1341:Src/app.c     ****   int is_landmark_valid;
 977              		.loc 1 1341 3 view .LVU268
1342:Src/app.c     ****   int best_face_idx = -1;
 978              		.loc 1 1342 3 view .LVU269
1343:Src/app.c     ****   roi_dummy.cx = 100;
 979              		.loc 1 1343 3 view .LVU270
1344:Src/app.c     ****   roi_dummy.cy = 100;
 980              		.loc 1 1344 3 view .LVU271
1328:Src/app.c     ****   float nn_period_filtered_ms = 0;
 981              		.loc 1 1328 1 is_stmt 0 view .LVU272
 982 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 983              		.cfi_def_cfa_offset 36
 984              		.cfi_offset 4, -36
 985              		.cfi_offset 5, -32
 986              		.cfi_offset 6, -28
 987              		.cfi_offset 7, -24
 988              		.cfi_offset 8, -20
 989              		.cfi_offset 9, -16
 990              		.cfi_offset 10, -12
 991              		.cfi_offset 11, -8
 992              		.cfi_offset 14, -4
 993 0004 2DED028B 		vpush.64	{d8}
 994              		.cfi_def_cfa_offset 44
 995              		.cfi_offset 80, -44
 996              		.cfi_offset 81, -40
1344:Src/app.c     ****   roi_dummy.cy = 100;
 997              		.loc 1 1344 16 view .LVU273
 998 0008 DFEDC88A 		vldr.32	s17, .L105
1346:Src/app.c     ****   roi_dummy.h = 50;
 999              		.loc 1 1346 15 view .LVU274
 1000 000c C84B     		ldr	r3, .L105+4
1328:Src/app.c     ****   float nn_period_filtered_ms = 0;
 1001              		.loc 1 1328 1 view .LVU275
 1002 000e ABB0     		sub	sp, sp, #172
 1003              		.cfi_def_cfa_offset 216
1346:Src/app.c     ****   roi_dummy.h = 50;
ARM GAS  /tmp/cc3ptn5O.s 			page 61


 1004              		.loc 1 1346 15 view .LVU276
 1005 0010 0993     		str	r3, [sp, #36]	@ float
1347:Src/app.c     **** 
 1006              		.loc 1 1347 15 view .LVU277
 1007 0012 0A93     		str	r3, [sp, #40]	@ float
1344:Src/app.c     ****   roi_dummy.cy = 100;
 1008              		.loc 1 1344 16 view .LVU278
 1009 0014 CDED078A 		vstr.32	s17, [sp, #28]
1345:Src/app.c     ****   roi_dummy.w = 50;
 1010              		.loc 1 1345 3 is_stmt 1 view .LVU279
1345:Src/app.c     ****   roi_dummy.w = 50;
 1011              		.loc 1 1345 16 is_stmt 0 view .LVU280
 1012 0018 CDED088A 		vstr.32	s17, [sp, #32]
1346:Src/app.c     ****   roi_dummy.h = 50;
 1013              		.loc 1 1346 3 is_stmt 1 view .LVU281
1347:Src/app.c     **** 
 1014              		.loc 1 1347 3 view .LVU282
1355:Src/app.c     ****   yolo_detector_init(&yolo_info);
 1015              		.loc 1 1355 3 view .LVU283
1356:Src/app.c     **** 
 1016              		.loc 1 1356 3 view .LVU284
 1017              	.LVL61:
 1018              	.LBB326:
 1019              	.LBI326:
 835:Src/app.c     **** {
 1020              		.loc 1 835 13 view .LVU285
 1021              	.LBB327:
 838:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1022              		.loc 1 838 3 view .LVU286
 838:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1023              		.loc 1 838 46 is_stmt 0 view .LVU287
 1024 001c FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_yolo_detector
 1025              	.LVL62:
 838:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1026              		.loc 1 838 46 view .LVU288
 1027 0020 0446     		mov	r4, r0
 1028              	.LVL63:
 839:Src/app.c     ****   int ret;
 1029              		.loc 1 839 3 is_stmt 1 view .LVU289
 839:Src/app.c     ****   int ret;
 1030              		.loc 1 839 45 is_stmt 0 view .LVU290
 1031 0022 FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_yolo_detector
 1032              	.LVL64:
 840:Src/app.c     **** 
 1033              		.loc 1 840 3 is_stmt 1 view .LVU291
 843:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1034              		.loc 1 843 3 view .LVU292
 1035              	.LBB328:
 1036              	.LBI328:
 493:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 494:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf)
 495:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 496:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_end;
 497:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 498:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 499:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf)
 500:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/cc3ptn5O.s 			page 62


 501:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_limit;
 502:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 503:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf)
 1037              		.loc 2 504 26 view .LVU293
 1038              	.LBB329:
 505:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 506:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->offset_end - buf->offset_start;
 1039              		.loc 2 506 5 view .LVU294
 1040              		.loc 2 506 28 is_stmt 0 view .LVU295
 1041 0026 D0E90223 		ldrd	r2, r3, [r0, #8]
 1042              	.LBE329:
 1043              	.LBE328:
 844:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1044              		.loc 1 844 40 view .LVU296
 1045 002a 2046     		mov	r0, r4
 1046              	.LVL65:
 1047              	.LBB331:
 1048              	.LBB330:
 1049              		.loc 2 506 28 view .LVU297
 1050 002c 9B1A     		subs	r3, r3, r2
 1051              	.LBE330:
 1052              	.LBE331:
 843:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1053              		.loc 1 843 19 discriminator 1 view .LVU298
 1054 002e 1C93     		str	r3, [sp, #112]
 844:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1055              		.loc 1 844 3 is_stmt 1 view .LVU299
 844:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1056              		.loc 1 844 40 is_stmt 0 view .LVU300
 1057 0030 FFF7FEFF 		bl	LL_Buffer_addr_start
 1058              	.LVL66:
 1059              	.LBB332:
 1060              	.LBB333:
 1061              		.loc 2 506 28 view .LVU301
 1062 0034 D4E90223 		ldrd	r2, r3, [r4, #8]
 1063 0038 9B1A     		subs	r3, r3, r2
 1064              	.LBE333:
 1065              	.LBE332:
 844:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1066              		.loc 1 844 28 discriminator 1 view .LVU302
 1067 003a 1D90     		str	r0, [sp, #116]
 845:Src/app.c     **** 
 1068              		.loc 1 845 3 is_stmt 1 view .LVU303
 1069              	.LVL67:
 1070              	.LBB335:
 1071              	.LBI332:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1072              		.loc 2 504 26 view .LVU304
 1073              	.LBB334:
 1074              		.loc 2 506 5 view .LVU305
 1075              		.loc 2 506 5 is_stmt 0 view .LVU306
 1076              	.LBE334:
 1077              	.LBE335:
 845:Src/app.c     **** 
 1078              		.loc 1 845 32 discriminator 1 view .LVU307
 1079 003c 1E93     		str	r3, [sp, #120]
ARM GAS  /tmp/cc3ptn5O.s 			page 63


 848:Src/app.c     ****   info->static_param.nb_total_boxes = AI_OD_YOLOV8_PP_TOTAL_BOXES;  // Example: Standard for YOLOv8
 1080              		.loc 1 848 3 is_stmt 1 view .LVU308
 849:Src/app.c     ****   info->static_param.max_boxes_limit = 10;  // Max boxes after NMS
 1081              		.loc 1 849 37 is_stmt 0 view .LVU309
 1082 003e 0320     		movs	r0, #3
 1083 0040 40F63403 		movw	r3, #2100
 1084 0044 CDE91F03 		strd	r0, r3, [sp, #124]
 850:Src/app.c     ****   info->static_param.conf_threshold = AI_OD_YOLOV8_PP_CONF_THRESHOLD; // Confidence threshold
 1085              		.loc 1 850 3 is_stmt 1 view .LVU310
 850:Src/app.c     ****   info->static_param.conf_threshold = AI_OD_YOLOV8_PP_CONF_THRESHOLD; // Confidence threshold
 1086              		.loc 1 850 38 is_stmt 0 view .LVU311
 1087 0048 0A23     		movs	r3, #10
 1088 004a 2193     		str	r3, [sp, #132]
 851:Src/app.c     ****   info->static_param.iou_threshold = AI_OD_YOLOV8_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 1089              		.loc 1 851 3 is_stmt 1 view .LVU312
 851:Src/app.c     ****   info->static_param.iou_threshold = AI_OD_YOLOV8_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 1090              		.loc 1 851 37 is_stmt 0 view .LVU313
 1091 004c B94B     		ldr	r3, .L105+8
 859:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1092              		.loc 1 859 9 view .LVU314
 1093 004e BA49     		ldr	r1, .L105+12
 851:Src/app.c     ****   info->static_param.iou_threshold = AI_OD_YOLOV8_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 1094              		.loc 1 851 37 view .LVU315
 1095 0050 2293     		str	r3, [sp, #136]	@ float
 852:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1096              		.loc 1 852 3 is_stmt 1 view .LVU316
 852:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1097              		.loc 1 852 36 is_stmt 0 view .LVU317
 1098 0052 BA4B     		ldr	r3, .L105+16
 859:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1099              		.loc 1 859 9 view .LVU318
 1100 0054 1FA8     		add	r0, sp, #124
 852:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1101              		.loc 1 852 36 view .LVU319
 1102 0056 2393     		str	r3, [sp, #140]	@ float
 854:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 1103              		.loc 1 854 3 is_stmt 1 view .LVU320
 854:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 1104              		.loc 1 854 39 is_stmt 0 view .LVU321
 1105 0058 4FF07E53 		mov	r3, #1065353216
 1106 005c 2493     		str	r3, [sp, #144]	@ float
 855:Src/app.c     **** 
 1107              		.loc 1 855 3 is_stmt 1 view .LVU322
 855:Src/app.c     **** 
 1108              		.loc 1 855 44 is_stmt 0 view .LVU323
 1109 005e 0023     		movs	r3, #0
 1110 0060 8DF89430 		strb	r3, [sp, #148]
 859:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1111              		.loc 1 859 3 is_stmt 1 view .LVU324
 859:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1112              		.loc 1 859 9 is_stmt 0 view .LVU325
 1113 0064 FFF7FEFF 		bl	app_postprocess_init
 1114              	.LVL68:
 860:Src/app.c     **** }
 1115              		.loc 1 860 3 is_stmt 1 view .LVU326
 1116 0068 8246     		mov	r10, r0
 1117 006a 30B1     		cbz	r0, .L56
ARM GAS  /tmp/cc3ptn5O.s 			page 64


 860:Src/app.c     **** }
 1118              		.loc 1 860 3 is_stmt 0 discriminator 1 view .LVU327
 1119 006c 4FF45771 		mov	r1, #860
 1120 0070 B34B     		ldr	r3, .L105+20
 1121 0072 B44A     		ldr	r2, .L105+24
 1122              	.LVL69:
 1123              	.L104:
 860:Src/app.c     **** }
 1124              		.loc 1 860 3 discriminator 1 view .LVU328
 1125              	.LBE327:
 1126              	.LBE326:
 1127              	.LBB336:
 1128              	.LBB337:
 905:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1129              		.loc 1 905 3 discriminator 1 view .LVU329
 1130 0074 B448     		ldr	r0, .L105+28
 1131 0076 FFF7FEFF 		bl	__assert_func
 1132              	.LVL70:
 1133              	.L56:
 905:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1134              		.loc 1 905 3 discriminator 1 view .LVU330
 1135              	.LBE337:
 1136              	.LBE336:
1358:Src/app.c     ****   face_landmark_init(&face_info);
 1137              		.loc 1 1358 3 is_stmt 1 view .LVU331
1359:Src/app.c     **** 
 1138              		.loc 1 1359 3 view .LVU332
 1139              	.LBB354:
 1140              	.LBI336:
 896:Src/app.c     **** {
 1141              		.loc 1 896 13 view .LVU333
 1142              	.LBB352:
 898:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 1143              		.loc 1 898 3 view .LVU334
 898:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 1144              		.loc 1 898 46 is_stmt 0 view .LVU335
 1145 007a FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_face_landmark
 1146              	.LVL71:
 1147 007e 0546     		mov	r5, r0
 1148              	.LVL72:
 899:Src/app.c     **** 
 1149              		.loc 1 899 3 is_stmt 1 view .LVU336
 899:Src/app.c     **** 
 1150              		.loc 1 899 45 is_stmt 0 view .LVU337
 1151 0080 FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_face_landmark
 1152              	.LVL73:
 899:Src/app.c     **** 
 1153              		.loc 1 899 45 view .LVU338
 1154 0084 0146     		mov	r1, r0
 1155              	.LVL74:
 901:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1156              		.loc 1 901 3 is_stmt 1 view .LVU339
 901:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1157              		.loc 1 901 17 is_stmt 0 view .LVU340
 1158 0086 FFF7FEFF 		bl	LL_Buffer_addr_start
 1159              	.LVL75:
 1160              	.LBB338:
ARM GAS  /tmp/cc3ptn5O.s 			page 65


 1161              	.LBB339:
 1162              		.loc 2 506 33 view .LVU341
 1163 008a D1E9027B 		ldrd	r7, fp, [r1, #8]
 1164              	.LBE339:
 1165              	.LBE338:
 901:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1166              		.loc 1 901 17 view .LVU342
 1167 008e 0446     		mov	r4, r0
 1168              	.LVL76:
 902:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1169              		.loc 1 902 3 is_stmt 1 view .LVU343
 1170              	.LBB342:
 1171              	.LBI338:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1172              		.loc 2 504 26 view .LVU344
 1173              	.LBB340:
 1174              		.loc 2 506 5 view .LVU345
 1175              		.loc 2 506 5 is_stmt 0 view .LVU346
 1176              	.LBE340:
 1177              	.LBE342:
 903:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1178              		.loc 1 903 3 is_stmt 1 view .LVU347
 903:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1179              		.loc 1 903 30 is_stmt 0 view .LVU348
 1180 0090 2846     		mov	r0, r5
 1181              	.LVL77:
 903:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1182              		.loc 1 903 30 view .LVU349
 1183 0092 FFF7FEFF 		bl	LL_Buffer_addr_start
 1184              	.LVL78:
 1185              	.LBB343:
 1186              	.LBB344:
 1187              		.loc 2 506 28 view .LVU350
 1188 0096 D5E90223 		ldrd	r2, r3, [r5, #8]
 1189 009a 9B1A     		subs	r3, r3, r2
 1190              	.LBE344:
 1191              	.LBE343:
 905:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1192              		.loc 1 905 3 view .LVU351
 1193 009c 042B     		cmp	r3, #4
 903:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1194              		.loc 1 903 30 view .LVU352
 1195 009e 8046     		mov	r8, r0
 1196              	.LVL79:
 904:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
 1197              		.loc 1 904 3 is_stmt 1 view .LVU353
 1198              	.LBB346:
 1199              	.LBI343:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1200              		.loc 2 504 26 view .LVU354
 1201              	.LBB345:
 1202              		.loc 2 506 5 view .LVU355
 1203              		.loc 2 506 5 is_stmt 0 view .LVU356
 1204              	.LBE345:
 1205              	.LBE346:
 905:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1206              		.loc 1 905 3 is_stmt 1 view .LVU357
ARM GAS  /tmp/cc3ptn5O.s 			page 66


 1207 00a0 04D0     		beq	.L57
 905:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1208              		.loc 1 905 3 is_stmt 0 discriminator 1 view .LVU358
 1209 00a2 40F28931 		movw	r1, #905
 1210              	.LVL80:
 905:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1211              		.loc 1 905 3 discriminator 1 view .LVU359
 1212 00a6 A94B     		ldr	r3, .L105+32
 1213              	.LVL81:
 905:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1214              		.loc 1 905 3 discriminator 1 view .LVU360
 1215 00a8 A94A     		ldr	r2, .L105+36
 1216              	.LVL82:
 905:Src/app.c     ****   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
 1217              		.loc 1 905 3 discriminator 1 view .LVU361
 1218 00aa E3E7     		b	.L104
 1219              	.LVL83:
 1220              	.L57:
 906:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1221              		.loc 1 906 3 is_stmt 1 view .LVU362
 906:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1222              		.loc 1 906 35 is_stmt 0 view .LVU363
 1223 00ac 05F13800 		add	r0, r5, #56
 1224              	.LVL84:
 906:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1225              		.loc 1 906 35 view .LVU364
 1226 00b0 FFF7FEFF 		bl	LL_Buffer_addr_start
 1227              	.LVL85:
 1228              	.LBB347:
 1229              	.LBB348:
 1230              		.loc 2 506 28 view .LVU365
 1231 00b4 D5E91023 		ldrd	r2, r3, [r5, #64]
 1232              	.LBE348:
 1233              	.LBE347:
 908:Src/app.c     **** }
 1234              		.loc 1 908 3 view .LVU366
 1235 00b8 A3F5AF53 		sub	r3, r3, #5600
 1236 00bc 103B     		subs	r3, r3, #16
 1237 00be 9342     		cmp	r3, r2
 906:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1238              		.loc 1 906 35 view .LVU367
 1239 00c0 8146     		mov	r9, r0
 1240              	.LVL86:
 907:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 1404);
 1241              		.loc 1 907 3 is_stmt 1 view .LVU368
 1242              	.LBB350:
 1243              	.LBI347:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1244              		.loc 2 504 26 view .LVU369
 1245              	.LBB349:
 1246              		.loc 2 506 5 view .LVU370
 1247              		.loc 2 506 5 is_stmt 0 view .LVU371
 1248              	.LBE349:
 1249              	.LBE350:
 908:Src/app.c     **** }
 1250              		.loc 1 908 3 is_stmt 1 view .LVU372
 1251 00c2 04D0     		beq	.L58
ARM GAS  /tmp/cc3ptn5O.s 			page 67


 908:Src/app.c     **** }
 1252              		.loc 1 908 3 is_stmt 0 discriminator 1 view .LVU373
 1253 00c4 4FF46371 		mov	r1, #908
 1254              	.LVL87:
 908:Src/app.c     **** }
 1255              		.loc 1 908 3 discriminator 1 view .LVU374
 1256 00c8 A24B     		ldr	r3, .L105+40
 1257 00ca A14A     		ldr	r2, .L105+36
 1258              	.LVL88:
 908:Src/app.c     **** }
 1259              		.loc 1 908 3 discriminator 1 view .LVU375
 1260 00cc D2E7     		b	.L104
 1261              	.LVL89:
 1262              	.L58:
 908:Src/app.c     **** }
 1263              		.loc 1 908 3 discriminator 1 view .LVU376
 1264              	.LBE352:
 1265              	.LBE354:
1361:Src/app.c     **** 
 1266              		.loc 1 1361 3 is_stmt 1 view .LVU377
1364:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1267              		.loc 1 1364 3 view .LVU378
1364:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1268              		.loc 1 1364 18 is_stmt 0 view .LVU379
 1269 00ce FFF7FEFF 		bl	HAL_GetTick
 1270              	.LVL90:
 1271              	.LBB355:
 1272              	.LBB356:
 504:Src/app.c     ****   if (ret == pdFALSE)
 1273              		.loc 1 504 9 view .LVU380
 1274 00d2 A14D     		ldr	r5, .L105+44
 1275              	.LBE356:
 1276              	.LBE355:
1364:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1277              		.loc 1 1364 18 view .LVU381
 1278 00d4 0646     		mov	r6, r0
 1279              	.LVL91:
1365:Src/app.c     ****   assert(nn_pipe_dst);
 1280              		.loc 1 1365 3 is_stmt 1 view .LVU382
 1281              	.LBB359:
 1282              	.LBI355:
 499:Src/app.c     **** {
 1283              		.loc 1 499 17 view .LVU383
 1284              	.LBB357:
 501:Src/app.c     ****   int ret;
 1285              		.loc 1 501 3 view .LVU384
 502:Src/app.c     **** 
 1286              		.loc 1 502 3 view .LVU385
 504:Src/app.c     ****   if (ret == pdFALSE)
 1287              		.loc 1 504 3 view .LVU386
 504:Src/app.c     ****   if (ret == pdFALSE)
 1288              		.loc 1 504 9 is_stmt 0 discriminator 4 view .LVU387
 1289 00d6 5146     		mov	r1, r10
 1290 00d8 2868     		ldr	r0, [r5]
 1291              	.LVL92:
 504:Src/app.c     ****   if (ret == pdFALSE)
 1292              		.loc 1 504 9 discriminator 4 view .LVU388
ARM GAS  /tmp/cc3ptn5O.s 			page 68


 1293 00da FFF7FEFF 		bl	xQueueSemaphoreTake
 1294              	.LVL93:
 505:Src/app.c     ****     return NULL;
 1295              		.loc 1 505 3 is_stmt 1 view .LVU389
 505:Src/app.c     ****     return NULL;
 1296              		.loc 1 505 6 is_stmt 0 view .LVU390
 1297 00de 20B9     		cbnz	r0, .L59
 1298              	.LVL94:
 1299              	.L60:
 505:Src/app.c     ****     return NULL;
 1300              		.loc 1 505 6 view .LVU391
 1301              	.LBE357:
 1302              	.LBE359:
1366:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1303              		.loc 1 1366 3 discriminator 1 view .LVU392
 1304 00e0 40F25651 		movw	r1, #1366
 1305 00e4 9D4B     		ldr	r3, .L105+48
 1306 00e6 9E4A     		ldr	r2, .L105+52
 1307 00e8 C4E7     		b	.L104
 1308              	.LVL95:
 1309              	.L59:
 1310              	.LBB360:
 1311              	.LBB358:
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1312              		.loc 1 508 3 is_stmt 1 view .LVU393
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1313              		.loc 1 508 23 is_stmt 0 view .LVU394
 1314 00ea D5F8B430 		ldr	r3, [r5, #180]
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1315              		.loc 1 508 7 view .LVU395
 1316 00ee 05EB8302 		add	r2, r5, r3, lsl #2
 1317 00f2 D2F8AC00 		ldr	r0, [r2, #172]
 1318              	.LVL96:
 509:Src/app.c     **** 
 1319              		.loc 1 509 3 is_stmt 1 view .LVU396
 509:Src/app.c     **** 
 1320              		.loc 1 509 37 is_stmt 0 view .LVU397
 1321 00f6 D5F8A820 		ldr	r2, [r5, #168]
 509:Src/app.c     **** 
 1322              		.loc 1 509 32 view .LVU398
 1323 00fa 0133     		adds	r3, r3, #1
 509:Src/app.c     **** 
 1324              		.loc 1 509 37 view .LVU399
 1325 00fc 93FBF2F1 		sdiv	r1, r3, r2
 1326 0100 02FB1133 		mls	r3, r2, r1, r3
 509:Src/app.c     **** 
 1327              		.loc 1 509 16 view .LVU400
 1328 0104 C5F8B430 		str	r3, [r5, #180]
 511:Src/app.c     **** }
 1329              		.loc 1 511 3 is_stmt 1 view .LVU401
 1330              	.LVL97:
 511:Src/app.c     **** }
 1331              		.loc 1 511 3 is_stmt 0 view .LVU402
 1332              	.LBE358:
 1333              	.LBE360:
1366:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1334              		.loc 1 1366 3 is_stmt 1 view .LVU403
ARM GAS  /tmp/cc3ptn5O.s 			page 69


 1335 0108 0028     		cmp	r0, #0
 1336 010a E9D0     		beq	.L60
1329:Src/app.c     ****   // Filtered inference times, will be updated with 0
 1337              		.loc 1 1329 9 is_stmt 0 view .LVU404
 1338 010c 9FED958A 		vldr.32	s16, .L105+56
1367:Src/app.c     ****   while (1)
 1339              		.loc 1 1367 3 view .LVU405
 1340 0110 5146     		mov	r1, r10
 1341 0112 FFF7FEFF 		bl	CAM_NNPipe_Start
 1342              	.LVL98:
 1343              	.LBB361:
 1344              	.LBB353:
 1345              	.LBB351:
 1346              	.LBB341:
 1347              		.loc 2 506 28 view .LVU406
 1348 0116 ABEB0707 		sub	r7, fp, r7
 1349              	.LVL99:
 1350              		.loc 2 506 28 view .LVU407
 1351              	.LBE341:
 1352              	.LBE351:
 1353              	.LBE353:
 1354              	.LBE361:
1367:Src/app.c     ****   while (1)
 1355              		.loc 1 1367 3 is_stmt 1 view .LVU408
 1356              	.LBB362:
 1357              	.LBB363:
 1358              	.LBB364:
 1359              	.LBB365:
 1360              	.LBB366:
 1361              	.LBB367:
 1362              		.file 3 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /******************************************************************************
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @file     cachel1_armv7.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @brief    CMSIS Level 1 Cache API for Armv7-M and later
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @version  V1.0.3
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @date     17. March 2023
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Copyright (c) 2020-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #if   defined ( __ICCARM__ )
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
ARM GAS  /tmp/cc3ptn5O.s 			page 70


  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #elif defined (__clang__)
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma clang system_header    /* treat file as system include file */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef ARM_CACHEL1_ARMV7_H
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define ARM_CACHEL1_ARMV7_H
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \ingroup  CMSIS_Core_FunctionInterface
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief    Functions that configure Instruction and Data cache.
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   @{
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /* Cache Size ID Register Macros */
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_DCACHE_LINE_SIZE
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_ICACHE_LINE_SIZE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable I-Cache
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on I-Cache
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable I-Cache
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off I-Cache
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
ARM GAS  /tmp/cc3ptn5O.s 			page 71


  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate I-Cache
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   I-Cache Invalidate by address
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache for the given address.
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   isize   size of memory block (in number of bytes)
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (volatile void *addr, int32_t isize)
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( isize > 0 ) {
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable D-Cache
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on D-Cache
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
ARM GAS  /tmp/cc3ptn5O.s 			page 72


 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable D-Cache
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off D-Cache
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     struct {
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } locals
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if ((defined(__GNUC__) || defined(__clang__)) && !defined(__OPTIMIZE__))
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        __ALIGNED(__SCB_DCACHE_LINE_SIZE)
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ;
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
ARM GAS  /tmp/cc3ptn5O.s 			page 73


 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if !defined(__OPTIMIZE__)
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /*
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * For the endless loop issue with no optimization builds.
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * More details, see https://github.com/ARM-software/CMSIS_5/issues/620
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * The issue only happens when local variables are in stack. If
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables are saved in general purpose register, then the function
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * is OK.
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * When local variables are in stack, after disabling the cache, flush the
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables cache line for data consistency.
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        */
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /* Clean and invalidate the local variable cache. */
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if defined(__ICCARM__)
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     /* As we can't align the stack to the cache line size, invalidate each of the variables */
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.sets;
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ways;
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ccsidr;
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals;
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.ccsidr = SCB->CCSIDR;
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.sets = (uint32_t)(CCSIDR_SETS(locals.ccsidr));
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       locals.ways = (uint32_t)(CCSIDR_WAYS(locals.ccsidr));
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((locals.sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((locals.ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (locals.ways-- != 0U);
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(locals.sets-- != 0U);
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate D-Cache
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
ARM GAS  /tmp/cc3ptn5O.s 			page 74


 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean D-Cache
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean D-Cache */
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
ARM GAS  /tmp/cc3ptn5O.s 			page 75


 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean & Invalidate D-Cache
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and Invalidates D-Cache
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Invalidate by address
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache for the given address.
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
ARM GAS  /tmp/cc3ptn5O.s 			page 76


 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean by address
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache for the given address
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned starting from a 32 byte aligned address in 32 byte granularity.
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned.
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (volatile void *addr, int32_t dsize)
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean and Invalidate by address
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and invalidates D_Cache for the given address
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned and invalidated starting from a 32 byte aligned address in 32 byte gr
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned and inval
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1363              		.loc 3 422 52 is_stmt 0 view .LVU409
 1364 011a 04F01F03 		and	r3, r4, #31
 1365              		.loc 3 422 32 view .LVU410
ARM GAS  /tmp/cc3ptn5O.s 			page 77


 1366 011e 3B44     		add	r3, r3, r7
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1367              		.loc 3 431 25 discriminator 1 view .LVU411
 1368 0120 E318     		adds	r3, r4, r3
 1369 0122 0593     		str	r3, [sp, #20]
 1370              	.LVL100:
 1371              	.L86:
 1372              		.loc 3 431 25 discriminator 1 view .LVU412
 1373              	.LBE367:
 1374              	.LBE366:
 1375              	.LBE365:
 1376              	.LBE364:
 1377              	.LBE363:
 1378              	.LBE362:
1368:Src/app.c     ****   {
 1379              		.loc 1 1368 3 is_stmt 1 view .LVU413
 1380              	.LBB431:
1370:Src/app.c     ****     memset(&yolo_info.yolo_out, 0, sizeof(yolo_info.yolo_out));
 1381              		.loc 1 1370 5 view .LVU414
1371:Src/app.c     ****     // Standard frame timing
 1382              		.loc 1 1371 5 view .LVU415
 1383 0124 0023     		movs	r3, #0
 1384 0126 CDE92833 		strd	r3, r3, [sp, #160]
1373:Src/app.c     ****     nn_period[1] = HAL_GetTick();
 1385              		.loc 1 1373 5 view .LVU416
 1386              	.LVL101:
1374:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1387              		.loc 1 1374 5 view .LVU417
1374:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1388              		.loc 1 1374 20 is_stmt 0 view .LVU418
 1389 012a FFF7FEFF 		bl	HAL_GetTick
 1390              	.LVL102:
1375:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1391              		.loc 1 1375 18 view .LVU419
 1392 012e 831B     		subs	r3, r0, r6
 1393 0130 07EE903A 		vmov	s15, r3	@ int
1376:Src/app.c     **** 
 1394              		.loc 1 1376 75 view .LVU420
 1395 0134 B2EE0E7A 		vmov.f32	s14, #1.5e+1
 1396 0138 F8EE677A 		vcvt.f32.u32	s15, s15
 1397 013c E8EE077A 		vfma.f32	s15, s16, s14
1376:Src/app.c     **** 
 1398              		.loc 1 1376 27 view .LVU421
 1399 0140 9FED898A 		vldr.32	s16, .L105+60
 1400              	.LVL103:
1374:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1401              		.loc 1 1374 20 view .LVU422
 1402 0144 8346     		mov	fp, r0
 1403              	.LVL104:
ARM GAS  /tmp/cc3ptn5O.s 			page 78


1375:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1404              		.loc 1 1375 5 is_stmt 1 view .LVU423
1376:Src/app.c     **** 
 1405              		.loc 1 1376 5 view .LVU424
 1406              	.LBB401:
 1407              	.LBB402:
 527:Src/app.c     ****   assert(ret == pdTRUE);
 1408              		.loc 1 527 9 is_stmt 0 view .LVU425
 1409 0146 4FF0FF31 		mov	r1, #-1
 1410 014a 686D     		ldr	r0, [r5, #84]
 1411              	.LVL105:
 527:Src/app.c     ****   assert(ret == pdTRUE);
 1412              		.loc 1 527 9 view .LVU426
 1413              	.LBE402:
 1414              	.LBE401:
1376:Src/app.c     **** 
 1415              		.loc 1 1376 27 view .LVU427
 1416 014c 27EE888A 		vmul.f32	s16, s15, s16
 1417              	.LVL106:
1379:Src/app.c     ****     assert(capture_buffer);
 1418              		.loc 1 1379 5 is_stmt 1 view .LVU428
 1419              	.LBB404:
 1420              	.LBI401:
 522:Src/app.c     **** {
 1421              		.loc 1 522 17 view .LVU429
 1422              	.LBB403:
 524:Src/app.c     ****   int ret;
 1423              		.loc 1 524 3 view .LVU430
 525:Src/app.c     **** 
 1424              		.loc 1 525 3 view .LVU431
 527:Src/app.c     ****   assert(ret == pdTRUE);
 1425              		.loc 1 527 3 view .LVU432
 527:Src/app.c     ****   assert(ret == pdTRUE);
 1426              		.loc 1 527 9 is_stmt 0 view .LVU433
 1427 0150 FFF7FEFF 		bl	xQueueSemaphoreTake
 1428              	.LVL107:
 528:Src/app.c     **** 
 1429              		.loc 1 528 3 is_stmt 1 view .LVU434
 1430 0154 0128     		cmp	r0, #1
 1431 0156 04D0     		beq	.L61
 528:Src/app.c     **** 
 1432              		.loc 1 528 3 is_stmt 0 discriminator 1 view .LVU435
 1433 0158 4FF40471 		mov	r1, #528
 1434 015c 834B     		ldr	r3, .L105+64
 1435 015e 844A     		ldr	r2, .L105+68
 1436 0160 88E7     		b	.L104
 1437              	.L61:
 530:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1438              		.loc 1 530 3 is_stmt 1 view .LVU436
 530:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1439              		.loc 1 530 23 is_stmt 0 view .LVU437
 1440 0162 D5F8B830 		ldr	r3, [r5, #184]
 530:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1441              		.loc 1 530 7 view .LVU438
 1442 0166 05EB8302 		add	r2, r5, r3, lsl #2
 1443 016a D2F8AC60 		ldr	r6, [r2, #172]
 1444              	.LVL108:
ARM GAS  /tmp/cc3ptn5O.s 			page 79


 531:Src/app.c     **** 
 1445              		.loc 1 531 3 is_stmt 1 view .LVU439
 531:Src/app.c     **** 
 1446              		.loc 1 531 39 is_stmt 0 view .LVU440
 1447 016e D5F8A820 		ldr	r2, [r5, #168]
 531:Src/app.c     **** 
 1448              		.loc 1 531 34 view .LVU441
 1449 0172 0133     		adds	r3, r3, #1
 531:Src/app.c     **** 
 1450              		.loc 1 531 39 view .LVU442
 1451 0174 93FBF2F1 		sdiv	r1, r3, r2
 1452 0178 02FB1133 		mls	r3, r2, r1, r3
 531:Src/app.c     **** 
 1453              		.loc 1 531 17 view .LVU443
 1454 017c C5F8B830 		str	r3, [r5, #184]
 533:Src/app.c     **** }
 1455              		.loc 1 533 3 is_stmt 1 view .LVU444
 1456              	.LVL109:
 533:Src/app.c     **** }
 1457              		.loc 1 533 3 is_stmt 0 view .LVU445
 1458              	.LBE403:
 1459              	.LBE404:
1380:Src/app.c     **** 
 1460              		.loc 1 1380 5 is_stmt 1 view .LVU446
 1461 0180 26B9     		cbnz	r6, .L62
1380:Src/app.c     **** 
 1462              		.loc 1 1380 5 is_stmt 0 discriminator 1 view .LVU447
 1463 0182 40F26451 		movw	r1, #1380
 1464 0186 7B4B     		ldr	r3, .L105+72
 1465 0188 754A     		ldr	r2, .L105+52
 1466 018a 73E7     		b	.L104
 1467              	.L62:
1382:Src/app.c     ****     /**************************************************************************
 1468              		.loc 1 1382 5 is_stmt 1 view .LVU448
 1469              	.LVL110:
 1470              	.LBB405:
 1471              	.LBI405:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 1472              		.loc 3 358 27 view .LVU449
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1473              		.loc 3 361 5 view .LVU450
 1474              	.LBB406:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1475              		.loc 3 362 8 view .LVU451
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1476              		.loc 3 362 52 is_stmt 0 view .LVU452
 1477 018c 06F01F0E 		and	lr, r6, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1478              		.loc 3 362 36 view .LVU453
 1479 0190 3346     		mov	r3, r6
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1480              		.loc 3 362 32 view .LVU454
 1481 0192 0EF5962E 		add	lr, lr, #307200
 1482              	.LVL111:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1483              		.loc 3 363 7 is_stmt 1 view .LVU455
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 80


 1484              		.loc 3 365 7 view .LVU456
 1485              	.LBB407:
 1486              	.LBI407:
 1487              		.file 4 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  /tmp/cc3ptn5O.s 			page 81


  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  /tmp/cc3ptn5O.s 			page 82


 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc3ptn5O.s 			page 83


 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc3ptn5O.s 			page 84


 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1488              		.loc 4 269 27 view .LVU457
 1489              	.LBB408:
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1490              		.loc 4 271 3 view .LVU458
 1491              		.syntax unified
 1492              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1493 0196 BFF34F8F 		dsb 0xF
 1494              	@ 0 "" 2
 1495              		.thumb
 1496              		.syntax unified
 1497              	.LBE408:
ARM GAS  /tmp/cc3ptn5O.s 			page 85


 1498              	.LBE407:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1499              		.loc 3 368 22 is_stmt 0 view .LVU459
 1500 019a 0EF1FF3E 		add	lr, lr, #-1
 1501              	.LVL112:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1502              		.loc 3 368 22 view .LVU460
 1503 019e 4FEA5E1E 		lsr	lr, lr, #5
 1504              	.LVL113:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1505              		.loc 3 368 22 view .LVU461
 1506 01a2 0EF1010E 		add	lr, lr, #1
 1507 01a6 4EF001E0 		dls	lr, lr
 1508 01aa 734A     		ldr	r2, .L105+76
 1509              	.LVL114:
 1510              	.L63:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1511              		.loc 3 367 7 is_stmt 1 view .LVU462
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1512              		.loc 3 368 9 view .LVU463
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1513              		.loc 3 368 22 is_stmt 0 view .LVU464
 1514 01ac C2F85C32 		str	r3, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1515              		.loc 3 369 9 is_stmt 1 view .LVU465
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1516              		.loc 3 369 17 is_stmt 0 view .LVU466
 1517 01b0 2033     		adds	r3, r3, #32
 1518              	.LVL115:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1519              		.loc 3 370 9 is_stmt 1 view .LVU467
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1520              		.loc 3 371 25 discriminator 1 view .LVU468
 1521 01b2 0FF005C8 		le	lr, .L63
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 1522              		.loc 3 373 7 view .LVU469
 1523              	.LBB409:
 1524              	.LBI409:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1525              		.loc 4 269 27 view .LVU470
 1526              	.LBB410:
 1527              		.loc 4 271 3 view .LVU471
 1528              		.syntax unified
 1529              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1530 01b6 BFF34F8F 		dsb 0xF
 1531              	@ 0 "" 2
 1532              		.thumb
 1533              		.syntax unified
 1534              	.LBE410:
 1535              	.LBE409:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 1536              		.loc 3 374 7 view .LVU472
 1537              	.LBB411:
 1538              	.LBI411:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1539              		.loc 4 258 27 view .LVU473
 1540              	.LBB412:
ARM GAS  /tmp/cc3ptn5O.s 			page 86


 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1541              		.loc 4 260 3 view .LVU474
 1542              		.syntax unified
 1543              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1544 01ba BFF36F8F 		isb 0xF
 1545              	@ 0 "" 2
 1546              	.LVL116:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1547              		.loc 4 260 3 is_stmt 0 view .LVU475
 1548              		.thumb
 1549              		.syntax unified
 1550              	.LBE412:
 1551              	.LBE411:
 1552              	.LBE406:
 1553              	.LBE405:
1386:Src/app.c     ****     hl_ms = HAL_GetTick();
 1554              		.loc 1 1386 5 is_stmt 1 view .LVU476
 1555              	.LBB413:
 1556              	.LBI413:
 863:Src/app.c     **** {
 1557              		.loc 1 863 12 view .LVU477
 1558              	.LBB414:
 865:Src/app.c     ****   int detection_nb;
 1559              		.loc 1 865 3 view .LVU478
 866:Src/app.c     ****   int ret;
 1560              		.loc 1 866 3 view .LVU479
 867:Src/app.c     ****   int i;
 1561              		.loc 1 867 3 view .LVU480
 868:Src/app.c     **** 
 1562              		.loc 1 868 3 view .LVU481
 870:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1563              		.loc 1 870 3 view .LVU482
 870:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1564              		.loc 1 870 14 is_stmt 0 view .LVU483
 1565 01be FFF7FEFF 		bl	HAL_GetTick
 1566              	.LVL117:
 872:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1567              		.loc 1 872 3 is_stmt 1 view .LVU484
 872:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1568              		.loc 1 872 9 is_stmt 0 view .LVU485
 1569 01c2 3146     		mov	r1, r6
 1570 01c4 0020     		movs	r0, #0
 1571 01c6 1C9A     		ldr	r2, [sp, #112]
 1572 01c8 FFF7FEFF 		bl	LL_ATON_Set_User_Input_Buffer_yolo_detector
 1573              	.LVL118:
 873:Src/app.c     **** 
 1574              		.loc 1 873 3 is_stmt 1 view .LVU486
 1575 01cc 20B1     		cbz	r0, .L64
 873:Src/app.c     **** 
 1576              		.loc 1 873 3 is_stmt 0 discriminator 1 view .LVU487
 1577 01ce 40F26931 		movw	r1, #873
 1578 01d2 6A4B     		ldr	r3, .L105+80
 1579 01d4 6A4A     		ldr	r2, .L105+84
 1580 01d6 4DE7     		b	.L104
 1581              	.L64:
 875:Src/app.c     **** 
 1582              		.loc 1 875 3 is_stmt 1 view .LVU488
ARM GAS  /tmp/cc3ptn5O.s 			page 87


 1583 01d8 5748     		ldr	r0, .L105+12
 1584              	.LVL119:
 875:Src/app.c     **** 
 1585              		.loc 1 875 3 is_stmt 0 view .LVU489
 1586 01da FFF7FEFF 		bl	LL_ATON_RT_Main
 1587              	.LVL120:
 878:Src/app.c     **** 
 1588              		.loc 1 878 3 is_stmt 1 view .LVU490
 878:Src/app.c     **** 
 1589              		.loc 1 878 40 is_stmt 0 view .LVU491
 1590 01de 1D9B     		ldr	r3, [sp, #116]
 878:Src/app.c     **** 
 1591              		.loc 1 878 9 view .LVU492
 1592 01e0 28AA     		add	r2, sp, #160
 878:Src/app.c     **** 
 1593              		.loc 1 878 40 view .LVU493
 1594 01e2 1493     		str	r3, [sp, #80]
 878:Src/app.c     **** 
 1595              		.loc 1 878 9 view .LVU494
 1596 01e4 0121     		movs	r1, #1
 1597 01e6 1FAB     		add	r3, sp, #124
 1598 01e8 14A8     		add	r0, sp, #80
 1599 01ea FFF7FEFF 		bl	app_postprocess_run
 1600              	.LVL121:
 881:Src/app.c     **** 
 1601              		.loc 1 881 3 is_stmt 1 view .LVU495
 884:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 1602              		.loc 1 884 3 view .LVU496
 884:Src/app.c     ****     // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 1603              		.loc 1 884 17 discriminator 1 view .LVU497
 889:Src/app.c     **** 
 1604              		.loc 1 889 3 view .LVU498
 889:Src/app.c     **** 
 1605              		.loc 1 889 3 view .LVU499
 889:Src/app.c     **** 
 1606              		.loc 1 889 3 discriminator 1 view .LVU500
 1607 01ee 1E9A     		ldr	r2, [sp, #120]
 1608              	.LVL122:
 1609              	.LBB415:
 1610              	.LBI415:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 1611              		.loc 3 358 27 view .LVU501
 1612              	.LBB416:
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1613              		.loc 3 361 5 view .LVU502
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1614              		.loc 3 361 8 is_stmt 0 view .LVU503
 1615 01f0 002A     		cmp	r2, #0
 1616 01f2 1DDD     		ble	.L65
 1617              	.LBB417:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1618              		.loc 3 362 8 is_stmt 1 view .LVU504
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1619              		.loc 3 362 36 is_stmt 0 view .LVU505
 1620 01f4 1D9B     		ldr	r3, [sp, #116]
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1621              		.loc 3 362 52 view .LVU506
ARM GAS  /tmp/cc3ptn5O.s 			page 88


 1622 01f6 03F01F00 		and	r0, r3, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1623              		.loc 3 362 32 view .LVU507
 1624 01fa 1044     		add	r0, r0, r2
 1625              	.LVL123:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1626              		.loc 3 363 7 is_stmt 1 view .LVU508
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1627              		.loc 3 365 7 view .LVU509
 1628              	.LBB418:
 1629              	.LBI418:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1630              		.loc 4 269 27 view .LVU510
 1631              	.LBB419:
 1632              		.loc 4 271 3 view .LVU511
 1633              		.syntax unified
 1634              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1635 01fc BFF34F8F 		dsb 0xF
 1636              	@ 0 "" 2
 1637              		.thumb
 1638              		.syntax unified
 1639              	.LBE419:
 1640              	.LBE418:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1641              		.loc 3 371 25 is_stmt 0 discriminator 1 view .LVU512
 1642 0200 DA43     		mvns	r2, r3
 1643              	.LVL124:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1644              		.loc 3 371 25 discriminator 1 view .LVU513
 1645 0202 03EB000C 		add	ip, r3, r0
 1646 0206 6244     		add	r2, r2, ip
 1647 0208 2038     		subs	r0, r0, #32
 1648              	.LVL125:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1649              		.loc 3 371 25 discriminator 1 view .LVU514
 1650 020a 5209     		lsrs	r2, r2, #5
 1651 020c 2030     		adds	r0, r0, #32
 1652              	.LVL126:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1653              		.loc 3 371 25 discriminator 1 view .LVU515
 1654 020e 02F1010E 		add	lr, r2, #1
 1655 0212 D8BF     		it	le
 1656 0214 4FF0010E 		movle	lr, #1
 1657 0218 4EF001E0 		dls	lr, lr
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1658              		.loc 3 368 22 view .LVU516
 1659 021c 5649     		ldr	r1, .L105+76
 1660              	.LVL127:
 1661              	.L66:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1662              		.loc 3 367 7 is_stmt 1 view .LVU517
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1663              		.loc 3 368 9 view .LVU518
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1664              		.loc 3 368 22 is_stmt 0 view .LVU519
 1665 021e C1F85C32 		str	r3, [r1, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
ARM GAS  /tmp/cc3ptn5O.s 			page 89


 1666              		.loc 3 369 9 is_stmt 1 view .LVU520
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1667              		.loc 3 369 17 is_stmt 0 view .LVU521
 1668 0222 2033     		adds	r3, r3, #32
 1669              	.LVL128:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1670              		.loc 3 370 9 is_stmt 1 view .LVU522
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1671              		.loc 3 371 25 discriminator 1 view .LVU523
 1672 0224 0FF005C8 		le	lr, .L66
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 1673              		.loc 3 373 7 view .LVU524
 1674              	.LBB420:
 1675              	.LBI420:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1676              		.loc 4 269 27 view .LVU525
 1677              	.LBB421:
 1678              		.loc 4 271 3 view .LVU526
 1679              		.syntax unified
 1680              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1681 0228 BFF34F8F 		dsb 0xF
 1682              	@ 0 "" 2
 1683              		.thumb
 1684              		.syntax unified
 1685              	.LBE421:
 1686              	.LBE420:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 1687              		.loc 3 374 7 view .LVU527
 1688              	.LBB422:
 1689              	.LBI422:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1690              		.loc 4 258 27 view .LVU528
 1691              	.LBB423:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1692              		.loc 4 260 3 view .LVU529
 1693              		.syntax unified
 1694              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1695 022c BFF36F8F 		isb 0xF
 1696              	@ 0 "" 2
 1697              	.LVL129:
 1698              		.thumb
 1699              		.syntax unified
 1700              	.L65:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1701              		.loc 4 260 3 is_stmt 0 view .LVU530
 1702              	.LBE423:
 1703              	.LBE422:
 1704              	.LBE417:
 1705              	.LBE416:
 1706              	.LBE415:
 889:Src/app.c     **** 
 1707              		.loc 1 889 3 is_stmt 1 discriminator 3 view .LVU531
 891:Src/app.c     **** 
 1708              		.loc 1 891 3 view .LVU532
 891:Src/app.c     **** 
 1709              		.loc 1 891 16 is_stmt 0 view .LVU533
 1710 0230 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc3ptn5O.s 			page 90


 1711              	.LVL130:
 893:Src/app.c     **** }
 1712              		.loc 1 893 3 is_stmt 1 view .LVU534
 893:Src/app.c     **** }
 1713              		.loc 1 893 3 is_stmt 0 view .LVU535
 1714              	.LBE414:
 1715              	.LBE413:
1387:Src/app.c     ****     is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &roi_dummy, ld_landmarks[0]);
 1716              		.loc 1 1387 5 is_stmt 1 view .LVU536
1387:Src/app.c     ****     is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &roi_dummy, ld_landmarks[0]);
 1717              		.loc 1 1387 13 is_stmt 0 view .LVU537
 1718 0234 FFF7FEFF 		bl	HAL_GetTick
 1719              	.LVL131:
1388:Src/app.c     ****     hl_ms = HAL_GetTick() - hl_ms;
 1720              		.loc 1 1388 5 is_stmt 1 view .LVU538
 1721              	.LBB424:
 1722              	.LBI363:
 982:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
 1723              		.loc 1 982 12 view .LVU539
 1724              	.LBB400:
 985:Src/app.c     ****   int is_valid;
 1725              		.loc 1 985 3 view .LVU540
 986:Src/app.c     **** 
 1726              		.loc 1 986 3 view .LVU541
 988:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
 1727              		.loc 1 988 3 view .LVU542
 1728              	.LBB376:
 1729              	.LBI376:
 911:Src/app.c     **** {
 1730              		.loc 1 911 12 view .LVU543
 1731              	.LBB377:
 913:Src/app.c     ****   int corners[4][2];
 1732              		.loc 1 913 3 view .LVU544
 914:Src/app.c     ****   uint8_t* out_data;
 1733              		.loc 1 914 3 view .LVU545
 915:Src/app.c     ****   size_t height_out;
 1734              		.loc 1 915 3 view .LVU546
 916:Src/app.c     ****   uint8_t *in_data;
 1735              		.loc 1 916 3 view .LVU547
 917:Src/app.c     ****   size_t height_in;
 1736              		.loc 1 917 3 view .LVU548
 918:Src/app.c     ****   size_t width_out;
 1737              		.loc 1 918 3 view .LVU549
 919:Src/app.c     ****   size_t width_in;
 1738              		.loc 1 919 3 view .LVU550
 920:Src/app.c     ****   int is_clamped;
 1739              		.loc 1 920 3 view .LVU551
 921:Src/app.c     **** 
 1740              		.loc 1 921 3 view .LVU552
 924:Src/app.c     ****   width_out = LD_WIDTH;
 1741              		.loc 1 924 3 view .LVU553
 925:Src/app.c     ****   height_out = LD_HEIGHT;
 1742              		.loc 1 925 3 view .LVU554
 926:Src/app.c     **** 
 1743              		.loc 1 926 3 view .LVU555
 928:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 1744              		.loc 1 928 3 view .LVU556
ARM GAS  /tmp/cc3ptn5O.s 			page 91


 1745 0238 0CA9     		add	r1, sp, #48
 1746 023a 07A8     		add	r0, sp, #28
 1747              	.LVL132:
 928:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 1748              		.loc 1 928 3 is_stmt 0 view .LVU557
 1749 023c FFF7FEFF 		bl	roi_to_corners
 1750              	.LVL133:
 929:Src/app.c     **** 
 1751              		.loc 1 929 3 is_stmt 1 view .LVU558
 929:Src/app.c     **** 
 1752              		.loc 1 929 16 is_stmt 0 view .LVU559
 1753 0240 14A9     		add	r1, sp, #80
 1754 0242 0CA8     		add	r0, sp, #48
 1755              	.LVL134:
 929:Src/app.c     **** 
 1756              		.loc 1 929 16 view .LVU560
 1757 0244 FFF7FEFF 		bl	clamp_corners
 1758              	.LVL135:
 932:Src/app.c     ****     int offset_x;
 1759              		.loc 1 932 3 is_stmt 1 view .LVU561
 932:Src/app.c     ****     int offset_x;
 1760              		.loc 1 932 6 is_stmt 0 view .LVU562
 1761 0248 0028     		cmp	r0, #0
 1762 024a 00F0AE80 		beq	.L87
 1763              	.LBB378:
 933:Src/app.c     ****     int offset_y;
 1764              		.loc 1 933 5 is_stmt 1 view .LVU563
 934:Src/app.c     **** 
 1765              		.loc 1 934 5 view .LVU564
 937:Src/app.c     **** 
 1766              		.loc 1 937 5 view .LVU565
 1767 024e 3A46     		mov	r2, r7
 1768 0250 0021     		movs	r1, #0
 1769 0252 2046     		mov	r0, r4
 1770              	.LVL136:
 937:Src/app.c     **** 
 1771              		.loc 1 937 5 is_stmt 0 view .LVU566
 1772 0254 FFF7FEFF 		bl	memset
 1773              	.LVL137:
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1774              		.loc 1 940 5 is_stmt 1 view .LVU567
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1775              		.loc 1 941 38 is_stmt 0 view .LVU568
 1776 0258 DDED157A 		vldr.32	s15, [sp, #84]	@ int
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1777              		.loc 1 941 52 view .LVU569
 1778 025c 9DED0D7A 		vldr.32	s14, [sp, #52]
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1779              		.loc 1 941 38 view .LVU570
 1780 0260 F8EEE77A 		vcvt.f32.s32	s15, s15
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1781              		.loc 1 941 57 view .LVU571
 1782 0264 DFED476A 		vldr.32	s13, .L105+88
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1783              		.loc 1 941 38 view .LVU572
 1784 0268 77EEC77A 		vsub.f32	s15, s15, s14
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
ARM GAS  /tmp/cc3ptn5O.s 			page 92


 1785              		.loc 1 941 89 view .LVU573
 1786 026c 9DED116A 		vldr.32	s12, [sp, #68]
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1787              		.loc 1 941 57 view .LVU574
 1788 0270 67EEA67A 		vmul.f32	s15, s15, s13
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1789              		.loc 1 941 89 view .LVU575
 1790 0274 36EE476A 		vsub.f32	s12, s12, s14
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1791              		.loc 1 941 70 view .LVU576
 1792 0278 87EE867A 		vdiv.f32	s14, s15, s12
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1793              		.loc 1 941 14 view .LVU577
 1794 027c FDEEC77A 		vcvt.s32.f32	s15, s14
 1795 0280 17EE903A 		vmov	r3, s15	@ int
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1796              		.loc 1 940 38 view .LVU578
 1797 0284 DDED147A 		vldr.32	s15, [sp, #80]	@ int
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1798              		.loc 1 940 52 view .LVU579
 1799 0288 9DED0C5A 		vldr.32	s10, [sp, #48]
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1800              		.loc 1 940 38 view .LVU580
 1801 028c B8EEE77A 		vcvt.f32.s32	s14, s15
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1802              		.loc 1 940 88 view .LVU581
 1803 0290 DDED105A 		vldr.32	s11, [sp, #64]
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1804              		.loc 1 940 38 view .LVU582
 1805 0294 37EE457A 		vsub.f32	s14, s14, s10
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1806              		.loc 1 940 88 view .LVU583
 1807 0298 75EEC55A 		vsub.f32	s11, s11, s10
 1808              	.LVL138:
 941:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1809              		.loc 1 941 5 is_stmt 1 view .LVU584
 942:Src/app.c     **** 
 1810              		.loc 1 942 5 view .LVU585
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1811              		.loc 1 940 57 is_stmt 0 view .LVU586
 1812 029c 27EE267A 		vmul.f32	s14, s14, s13
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1813              		.loc 1 940 69 view .LVU587
 1814 02a0 C7EE257A 		vdiv.f32	s15, s14, s11
 1815              	.LVL139:
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1816              		.loc 1 940 14 view .LVU588
 1817 02a4 FDEEE77A 		vcvt.s32.f32	s15, s15
 942:Src/app.c     **** 
 1818              		.loc 1 942 56 view .LVU589
 1819 02a8 C020     		movs	r0, #192
 940:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1820              		.loc 1 940 14 view .LVU590
 1821 02aa 17EE901A 		vmov	r1, s15	@ int
 942:Src/app.c     **** 
 1822              		.loc 1 942 56 view .LVU591
 1823 02ae 00FB0311 		mla	r1, r0, r3, r1
ARM GAS  /tmp/cc3ptn5O.s 			page 93


 942:Src/app.c     **** 
 1824              		.loc 1 942 14 view .LVU592
 1825 02b2 04EB8103 		add	r3, r4, r1, lsl #2
 945:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1826              		.loc 1 945 38 view .LVU593
 1827 02b6 149A     		ldr	r2, [sp, #80]
 942:Src/app.c     **** 
 1828              		.loc 1 942 14 view .LVU594
 1829 02b8 0493     		str	r3, [sp, #16]
 1830              	.LVL140:
 945:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1831              		.loc 1 945 5 is_stmt 1 view .LVU595
 945:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1832              		.loc 1 945 38 is_stmt 0 view .LVU596
 1833 02ba 189B     		ldr	r3, [sp, #96]
 1834              	.LVL141:
 946:Src/app.c     **** 
 1835              		.loc 1 946 39 view .LVU597
 1836 02bc 1599     		ldr	r1, [sp, #84]
 945:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1837              		.loc 1 945 38 view .LVU598
 1838 02be 9B1A     		subs	r3, r3, r2
 945:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1839              		.loc 1 945 55 view .LVU599
 1840 02c0 07EE903A 		vmov	s15, r3	@ int
 1841 02c4 F8EEE77A 		vcvt.f32.s32	s15, s15
 1842 02c8 87EEA57A 		vdiv.f32	s14, s15, s11
 945:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1843              		.loc 1 945 93 view .LVU600
 1844 02cc 67EE267A 		vmul.f32	s15, s14, s13
 945:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1845              		.loc 1 945 17 view .LVU601
 1846 02d0 FDEEE77A 		vcvt.s32.f32	s15, s15
 946:Src/app.c     **** 
 1847              		.loc 1 946 39 view .LVU602
 1848 02d4 199A     		ldr	r2, [sp, #100]
 945:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1849              		.loc 1 945 17 view .LVU603
 1850 02d6 17EE903A 		vmov	r3, s15	@ int
 1851              	.LVL142:
 946:Src/app.c     **** 
 1852              		.loc 1 946 5 is_stmt 1 view .LVU604
 946:Src/app.c     **** 
 1853              		.loc 1 946 39 is_stmt 0 view .LVU605
 1854 02da 521A     		subs	r2, r2, r1
 946:Src/app.c     **** 
 1855              		.loc 1 946 56 view .LVU606
 1856 02dc 07EE902A 		vmov	s15, r2	@ int
 1857 02e0 F8EEE77A 		vcvt.f32.s32	s15, s15
 1858 02e4 87EE867A 		vdiv.f32	s14, s15, s12
 946:Src/app.c     **** 
 1859              		.loc 1 946 94 view .LVU607
 1860 02e8 67EE267A 		vmul.f32	s15, s14, s13
 946:Src/app.c     **** 
 1861              		.loc 1 946 18 view .LVU608
 1862 02ec FDEEE77A 		vcvt.s32.f32	s15, s15
 1863 02f0 17EE902A 		vmov	r2, s15	@ int
ARM GAS  /tmp/cc3ptn5O.s 			page 94


 1864              	.LVL143:
 948:Src/app.c     ****     assert(height_out > 0);
 1865              		.loc 1 948 5 is_stmt 1 view .LVU609
 1866 02f4 23B9     		cbnz	r3, .L68
 948:Src/app.c     ****     assert(height_out > 0);
 1867              		.loc 1 948 5 is_stmt 0 discriminator 1 view .LVU610
 1868 02f6 4FF46D71 		mov	r1, #948
 1869 02fa 234B     		ldr	r3, .L105+92
 1870              	.LVL144:
 948:Src/app.c     ****     assert(height_out > 0);
 1871              		.loc 1 948 5 discriminator 1 view .LVU611
 1872 02fc 234A     		ldr	r2, .L105+96
 1873              	.LVL145:
 948:Src/app.c     ****     assert(height_out > 0);
 1874              		.loc 1 948 5 discriminator 1 view .LVU612
 1875 02fe B9E6     		b	.L104
 1876              	.LVL146:
 1877              	.L68:
 949:Src/app.c     ****     {
 1878              		.loc 1 949 5 is_stmt 1 view .LVU613
 1879 0300 22B9     		cbnz	r2, .L69
 949:Src/app.c     ****     {
 1880              		.loc 1 949 5 is_stmt 0 discriminator 1 view .LVU614
 1881 0302 40F2B531 		movw	r1, #949
 1882 0306 224B     		ldr	r3, .L105+100
 1883              	.LVL147:
 949:Src/app.c     ****     {
 1884              		.loc 1 949 5 discriminator 1 view .LVU615
 1885 0308 204A     		ldr	r2, .L105+96
 1886              	.LVL148:
 949:Src/app.c     ****     {
 1887              		.loc 1 949 5 discriminator 1 view .LVU616
 1888 030a B3E6     		b	.L104
 1889              	.LVL149:
 1890              	.L69:
 1891              	.LBB379:
 951:Src/app.c     **** 
 1892              		.loc 1 951 7 is_stmt 1 view .LVU617
 953:Src/app.c     **** 
 1893              		.loc 1 953 7 view .LVU618
 953:Src/app.c     **** 
 1894              		.loc 1 953 80 is_stmt 0 view .LVU619
 1895 030c 00FB0230 		mla	r0, r0, r2, r3
 953:Src/app.c     **** 
 1896              		.loc 1 953 106 view .LVU620
 1897 0310 0499     		ldr	r1, [sp, #16]
 1898 0312 01EB8000 		add	r0, r1, r0, lsl #2
 953:Src/app.c     **** 
 1899              		.loc 1 953 20 view .LVU621
 1900 0316 6FF44071 		mvn	r1, #768
 1901 031a 0844     		add	r0, r0, r1
 1902              	.LVL150:
 955:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1903              		.loc 1 955 7 is_stmt 1 view .LVU622
 1904 031c 8442     		cmp	r4, r0
 1905 031e 3BD9     		bls	.L70
 955:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
ARM GAS  /tmp/cc3ptn5O.s 			page 95


 1906              		.loc 1 955 7 is_stmt 0 discriminator 1 view .LVU623
 1907 0320 40F2BB31 		movw	r1, #955
 1908 0324 1B4B     		ldr	r3, .L105+104
 1909              	.LVL151:
 955:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1910              		.loc 1 955 7 discriminator 1 view .LVU624
 1911 0326 194A     		ldr	r2, .L105+96
 1912              	.LVL152:
 955:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 1913              		.loc 1 955 7 discriminator 1 view .LVU625
 1914 0328 A4E6     		b	.L104
 1915              	.L106:
 1916 032a 00BF     		.align	2
 1917              	.L105:
 1918 032c 0000C842 		.word	1120403456
 1919 0330 00004842 		.word	1112014848
 1920 0334 9A99993E 		.word	1050253722
 1921 0338 00000000 		.word	NN_Instance_yolo_detector
 1922 033c CDCCCC3D 		.word	1036831949
 1923 0340 00000000 		.word	.LC4
 1924 0344 00000000 		.word	__func__.11
 1925 0348 0E000000 		.word	.LC2
 1926 034c 09000000 		.word	.LC5
 1927 0350 00000000 		.word	__func__.10
 1928 0354 2D000000 		.word	.LC6
 1929 0358 00000000 		.word	nn_input_queue
 1930 035c 5D000000 		.word	.LC7
 1931 0360 00000000 		.word	__func__.12
 1932 0364 00000000 		.word	0
 1933 0368 0000803D 		.word	1031798784
 1934 036c 00000000 		.word	.LC1
 1935 0370 00000000 		.word	__func__.9
 1936 0374 69000000 		.word	.LC8
 1937 0378 00ED00E0 		.word	-536810240
 1938 037c 78000000 		.word	.LC9
 1939 0380 00000000 		.word	__func__.8
 1940 0384 00004043 		.word	1128267776
 1941 0388 97000000 		.word	.LC10
 1942 038c 00000000 		.word	__func__.7
 1943 0390 A5000000 		.word	.LC11
 1944 0394 B4000000 		.word	.LC12
 1945              	.LVL153:
 1946              	.L70:
 956:Src/app.c     ****     }
 1947              		.loc 1 956 7 is_stmt 1 view .LVU626
 1948 0398 04EB070C 		add	ip, r4, r7
 1949 039c 6045     		cmp	r0, ip
 1950 039e 07D3     		bcc	.L67
 956:Src/app.c     ****     }
 1951              		.loc 1 956 7 is_stmt 0 discriminator 1 view .LVU627
 1952 03a0 4FF46F71 		mov	r1, #956
 1953 03a4 884B     		ldr	r3, .L107
 1954              	.LVL154:
 956:Src/app.c     ****     }
 1955              		.loc 1 956 7 discriminator 1 view .LVU628
 1956 03a6 894A     		ldr	r2, .L107+4
 1957              	.LVL155:
ARM GAS  /tmp/cc3ptn5O.s 			page 96


 956:Src/app.c     ****     }
 1958              		.loc 1 956 7 discriminator 1 view .LVU629
 1959 03a8 64E6     		b	.L104
 1960              	.LVL156:
 1961              	.L87:
 956:Src/app.c     ****     }
 1962              		.loc 1 956 7 discriminator 1 view .LVU630
 1963              	.LBE379:
 1964              	.LBE378:
 925:Src/app.c     ****   height_out = LD_HEIGHT;
 1965              		.loc 1 925 13 view .LVU631
 1966 03aa C023     		movs	r3, #192
 926:Src/app.c     **** 
 1967              		.loc 1 926 14 view .LVU632
 1968 03ac 1A46     		mov	r2, r3
 924:Src/app.c     ****   width_out = LD_WIDTH;
 1969              		.loc 1 924 12 view .LVU633
 1970 03ae 0494     		str	r4, [sp, #16]
 1971              	.LVL157:
 1972              	.L67:
 960:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 1973              		.loc 1 960 3 is_stmt 1 view .LVU634
 960:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 1974              		.loc 1 960 51 is_stmt 0 view .LVU635
 1975 03b0 4FF4486C 		mov	ip, #3200
 960:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 1976              		.loc 1 960 77 view .LVU636
 1977 03b4 DDE914EA 		ldrd	lr, r10, [sp, #80]
 962:Src/app.c     **** 
 1978              		.loc 1 962 29 view .LVU637
 1979 03b8 1999     		ldr	r1, [sp, #100]
 960:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 1980              		.loc 1 960 80 view .LVU638
 1981 03ba 4FEA8E00 		lsl	r0, lr, #2
 960:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 1982              		.loc 1 960 65 view .LVU639
 1983 03be 0CFB0A00 		mla	r0, ip, r10, r0
 962:Src/app.c     **** 
 1984              		.loc 1 962 29 view .LVU640
 1985 03c2 A1EB0A0A 		sub	r10, r1, r10
 964:Src/app.c     ****   assert(height_in > 0);
 1986              		.loc 1 964 3 view .LVU641
 1987 03c6 1899     		ldr	r1, [sp, #96]
 960:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 1988              		.loc 1 960 11 view .LVU642
 1989 03c8 3044     		add	r0, r0, r6
 1990              	.LVL158:
 961:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
 1991              		.loc 1 961 3 is_stmt 1 view .LVU643
 962:Src/app.c     **** 
 1992              		.loc 1 962 3 view .LVU644
 964:Src/app.c     ****   assert(height_in > 0);
 1993              		.loc 1 964 3 view .LVU645
 1994 03ca B1EB0E01 		subs	r1, r1, lr
 1995              	.LVL159:
 964:Src/app.c     ****   assert(height_in > 0);
 1996              		.loc 1 964 3 is_stmt 0 view .LVU646
ARM GAS  /tmp/cc3ptn5O.s 			page 97


 1997 03ce 04D1     		bne	.L71
 964:Src/app.c     ****   assert(height_in > 0);
 1998              		.loc 1 964 3 discriminator 1 view .LVU647
 1999 03d0 4FF47171 		mov	r1, #964
 2000              	.LVL160:
 964:Src/app.c     ****   assert(height_in > 0);
 2001              		.loc 1 964 3 discriminator 1 view .LVU648
 2002 03d4 7E4B     		ldr	r3, .L107+8
 2003              	.LVL161:
 964:Src/app.c     ****   assert(height_in > 0);
 2004              		.loc 1 964 3 discriminator 1 view .LVU649
 2005 03d6 7D4A     		ldr	r2, .L107+4
 2006              	.LVL162:
 964:Src/app.c     ****   assert(height_in > 0);
 2007              		.loc 1 964 3 discriminator 1 view .LVU650
 2008 03d8 4CE6     		b	.L104
 2009              	.LVL163:
 2010              	.L71:
 965:Src/app.c     ****   {
 2011              		.loc 1 965 3 is_stmt 1 view .LVU651
 2012 03da BAF1000F 		cmp	r10, #0
 2013 03de 04D1     		bne	.L72
 965:Src/app.c     ****   {
 2014              		.loc 1 965 3 is_stmt 0 discriminator 1 view .LVU652
 2015 03e0 40F2C531 		movw	r1, #965
 2016              	.LVL164:
 965:Src/app.c     ****   {
 2017              		.loc 1 965 3 discriminator 1 view .LVU653
 2018 03e4 7B4B     		ldr	r3, .L107+12
 2019              	.LVL165:
 965:Src/app.c     ****   {
 2020              		.loc 1 965 3 discriminator 1 view .LVU654
 2021 03e6 794A     		ldr	r2, .L107+4
 2022              	.LVL166:
 965:Src/app.c     ****   {
 2023              		.loc 1 965 3 discriminator 1 view .LVU655
 2024 03e8 44E6     		b	.L104
 2025              	.LVL167:
 2026              	.L72:
 2027              	.LBB380:
 967:Src/app.c     **** 
 2028              		.loc 1 967 5 is_stmt 1 view .LVU656
 969:Src/app.c     **** 
 2029              		.loc 1 969 5 view .LVU657
 969:Src/app.c     **** 
 2030              		.loc 1 969 74 is_stmt 0 view .LVU658
 2031 03ea 4FF4487E 		mov	lr, #800
 2032 03ee 0EFB0A1E 		mla	lr, lr, r10, r1
 969:Src/app.c     **** 
 2033              		.loc 1 969 99 view .LVU659
 2034 03f2 00EB8E0E 		add	lr, r0, lr, lsl #2
 969:Src/app.c     **** 
 2035              		.loc 1 969 17 view .LVU660
 2036 03f6 AEF6814E 		subw	lr, lr, #3201
 2037              	.LVL168:
 971:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2038              		.loc 1 971 5 is_stmt 1 view .LVU661
ARM GAS  /tmp/cc3ptn5O.s 			page 98


 2039 03fa 7645     		cmp	r6, lr
 2040 03fc 04D9     		bls	.L73
 971:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2041              		.loc 1 971 5 is_stmt 0 discriminator 1 view .LVU662
 2042 03fe 40F2CB31 		movw	r1, #971
 2043              	.LVL169:
 971:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2044              		.loc 1 971 5 discriminator 1 view .LVU663
 2045 0402 754B     		ldr	r3, .L107+16
 2046              	.LVL170:
 971:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2047              		.loc 1 971 5 discriminator 1 view .LVU664
 2048 0404 714A     		ldr	r2, .L107+4
 2049              	.LVL171:
 971:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2050              		.loc 1 971 5 discriminator 1 view .LVU665
 2051 0406 35E6     		b	.L104
 2052              	.LVL172:
 2053              	.L73:
 972:Src/app.c     ****   }
 2054              		.loc 1 972 5 is_stmt 1 view .LVU666
 2055 0408 06F5BB16 		add	r6, r6, #1531904
 2056              	.LVL173:
 972:Src/app.c     ****   }
 2057              		.loc 1 972 5 is_stmt 0 view .LVU667
 2058 040c 06F58056 		add	r6, r6, #4096
 2059              	.LVL174:
 972:Src/app.c     ****   }
 2060              		.loc 1 972 5 view .LVU668
 2061 0410 B645     		cmp	lr, r6
 2062 0412 04D3     		bcc	.L74
 972:Src/app.c     ****   }
 2063              		.loc 1 972 5 discriminator 1 view .LVU669
 2064 0414 4FF47371 		mov	r1, #972
 2065              	.LVL175:
 972:Src/app.c     ****   }
 2066              		.loc 1 972 5 discriminator 1 view .LVU670
 2067 0418 704B     		ldr	r3, .L107+20
 2068              	.LVL176:
 972:Src/app.c     ****   }
 2069              		.loc 1 972 5 discriminator 1 view .LVU671
 2070 041a 6C4A     		ldr	r2, .L107+4
 2071              	.LVL177:
 972:Src/app.c     ****   }
 2072              		.loc 1 972 5 discriminator 1 view .LVU672
 2073 041c 2AE6     		b	.L104
 2074              	.LVL178:
 2075              	.L74:
 972:Src/app.c     ****   }
 2076              		.loc 1 972 5 discriminator 1 view .LVU673
 2077              	.LBE380:
 975:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2078              		.loc 1 975 3 is_stmt 1 view .LVU674
 2079 041e CDE90232 		strd	r3, r2, [sp, #8]
 2080 0422 0091     		str	r1, [sp]
 2081 0424 4FF44073 		mov	r3, #768
 2082              	.LVL179:
ARM GAS  /tmp/cc3ptn5O.s 			page 99


 975:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2083              		.loc 1 975 3 is_stmt 0 view .LVU675
 2084 0428 6246     		mov	r2, ip
 2085              	.LVL180:
 975:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2086              		.loc 1 975 3 view .LVU676
 2087 042a 0499     		ldr	r1, [sp, #16]
 2088              	.LVL181:
 975:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2089              		.loc 1 975 3 view .LVU677
 2090 042c CDF804A0 		str	r10, [sp, #4]
 2091 0430 FFF7FEFF 		bl	IPL_resize_bilinear_iu8ou8_with_strides_RGB
 2092              	.LVL182:
 978:Src/app.c     **** }
 2093              		.loc 1 978 3 is_stmt 1 view .LVU678
 978:Src/app.c     **** }
 2094              		.loc 1 978 3 is_stmt 0 view .LVU679
 2095              	.LBE377:
 2096              	.LBE376:
 989:Src/app.c     ****   if (is_clamped)
 2097              		.loc 1 989 3 is_stmt 1 view .LVU680
 989:Src/app.c     ****   if (is_clamped)
 2098              		.loc 1 989 3 view .LVU681
 989:Src/app.c     ****   if (is_clamped)
 2099              		.loc 1 989 3 discriminator 1 view .LVU682
 2100              	.LBB381:
 2101              	.LBI365:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2102              		.loc 3 418 27 view .LVU683
 2103              	.LBB375:
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2104              		.loc 3 421 5 view .LVU684
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2105              		.loc 3 421 8 is_stmt 0 view .LVU685
 2106 0434 002F     		cmp	r7, #0
 2107 0436 1ADD     		ble	.L75
 2108              	.LBB374:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2109              		.loc 3 422 8 is_stmt 1 view .LVU686
 2110              	.LVL183:
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2111              		.loc 3 423 7 view .LVU687
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2112              		.loc 3 425 7 view .LVU688
 2113              	.LBB368:
 2114              	.LBI368:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2115              		.loc 4 269 27 view .LVU689
 2116              	.LBB369:
 2117              		.loc 4 271 3 view .LVU690
 2118              		.syntax unified
 2119              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2120 0438 BFF34F8F 		dsb 0xF
 2121              	@ 0 "" 2
 2122              		.thumb
 2123              		.syntax unified
 2124              	.LBE369:
ARM GAS  /tmp/cc3ptn5O.s 			page 100


 2125              	.LBE368:
 2126              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU691
 2127 043c E343     		mvns	r3, r4
 2128 043e 0598     		ldr	r0, [sp, #20]
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2129              		.loc 3 423 16 view .LVU692
 2130 0440 2246     		mov	r2, r4
 2131              		.loc 3 431 25 discriminator 1 view .LVU693
 2132 0442 0344     		add	r3, r3, r0
 2133 0444 001B     		subs	r0, r0, r4
 2134 0446 2038     		subs	r0, r0, #32
 2135 0448 5B09     		lsrs	r3, r3, #5
 2136 044a 2030     		adds	r0, r0, #32
 2137 044c 03F1010E 		add	lr, r3, #1
 2138 0450 D8BF     		it	le
 2139 0452 4FF0010E 		movle	lr, #1
 2140 0456 4EF001E0 		dls	lr, lr
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2141              		.loc 3 428 23 view .LVU694
 2142 045a 6149     		ldr	r1, .L107+24
 2143              	.LVL184:
 2144              	.L76:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 2145              		.loc 3 427 7 is_stmt 1 view .LVU695
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2146              		.loc 3 428 9 view .LVU696
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 2147              		.loc 3 428 23 is_stmt 0 view .LVU697
 2148 045c C1F87022 		str	r2, [r1, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2149              		.loc 3 429 9 is_stmt 1 view .LVU698
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 2150              		.loc 3 429 17 is_stmt 0 view .LVU699
 2151 0460 2032     		adds	r2, r2, #32
 2152              	.LVL185:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2153              		.loc 3 430 9 is_stmt 1 view .LVU700
 2154              		.loc 3 431 25 discriminator 1 view .LVU701
 2155 0462 0FF005C8 		le	lr, .L76
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 2156              		.loc 3 433 7 view .LVU702
 2157              	.LBB370:
 2158              	.LBI370:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2159              		.loc 4 269 27 view .LVU703
 2160              	.LBB371:
 2161              		.loc 4 271 3 view .LVU704
 2162              		.syntax unified
 2163              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2164 0466 BFF34F8F 		dsb 0xF
 2165              	@ 0 "" 2
 2166              		.thumb
 2167              		.syntax unified
 2168              	.LBE371:
 2169              	.LBE370:
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
ARM GAS  /tmp/cc3ptn5O.s 			page 101


 2170              		.loc 3 434 7 view .LVU705
 2171              	.LBB372:
 2172              	.LBI372:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2173              		.loc 4 258 27 view .LVU706
 2174              	.LBB373:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2175              		.loc 4 260 3 view .LVU707
 2176              		.syntax unified
 2177              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2178 046a BFF36F8F 		isb 0xF
 2179              	@ 0 "" 2
 2180              	.LVL186:
 2181              		.thumb
 2182              		.syntax unified
 2183              	.L75:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2184              		.loc 4 260 3 is_stmt 0 view .LVU708
 2185              	.LBE373:
 2186              	.LBE372:
 2187              	.LBE374:
 2188              	.LBE375:
 2189              	.LBE381:
 989:Src/app.c     ****   if (is_clamped)
 2190              		.loc 1 989 3 is_stmt 1 discriminator 3 view .LVU709
 990:Src/app.c     ****     return 0;
 2191              		.loc 1 990 3 view .LVU710
 993:Src/app.c     **** 
 2192              		.loc 1 993 3 view .LVU711
 2193 046e 5D48     		ldr	r0, .L107+28
 2194 0470 FFF7FEFF 		bl	LL_ATON_RT_Main
 2195              	.LVL187:
 995:Src/app.c     **** 
 2196              		.loc 1 995 3 view .LVU712
 995:Src/app.c     **** 
 2197              		.loc 1 995 14 is_stmt 0 view .LVU713
 2198 0474 4946     		mov	r1, r9
 2199 0476 4046     		mov	r0, r8
 2200 0478 5B4A     		ldr	r2, .L107+32
 2201 047a FFF7FEFF 		bl	ld_post_process
 2202              	.LVL188:
 2203              	.LBB382:
 2204              	.LBB383:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2205              		.loc 3 362 36 view .LVU714
 2206 047e 4146     		mov	r1, r8
 2207              	.LBE383:
 2208              	.LBE382:
 995:Src/app.c     **** 
 2209              		.loc 1 995 14 view .LVU715
 2210 0480 8246     		mov	r10, r0
 2211              	.LVL189:
 998:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2212              		.loc 1 998 3 is_stmt 1 view .LVU716
 998:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2213              		.loc 1 998 3 view .LVU717
 998:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
ARM GAS  /tmp/cc3ptn5O.s 			page 102


 2214              		.loc 1 998 3 discriminator 1 view .LVU718
 2215              	.LBB391:
 2216              	.LBI382:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2217              		.loc 3 358 27 view .LVU719
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2218              		.loc 3 361 5 view .LVU720
 2219              	.LBB390:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2220              		.loc 3 362 8 view .LVU721
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2221              		.loc 3 362 52 is_stmt 0 view .LVU722
 2222 0482 08F01F03 		and	r3, r8, #31
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2223              		.loc 3 363 7 is_stmt 1 view .LVU723
 2224              	.LVL190:
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2225              		.loc 3 365 7 view .LVU724
 2226              	.LBB384:
 2227              	.LBI384:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2228              		.loc 4 269 27 view .LVU725
 2229              	.LBB385:
 2230              		.loc 4 271 3 view .LVU726
 2231              		.syntax unified
 2232              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2233 0486 BFF34F8F 		dsb 0xF
 2234              	@ 0 "" 2
 2235              		.thumb
 2236              		.syntax unified
 2237 048a D81C     		adds	r0, r3, #3
 2238              	.LVL191:
 2239              		.loc 4 271 3 is_stmt 0 view .LVU727
 2240 048c 1C3B     		subs	r3, r3, #28
 2241 048e 4009     		lsrs	r0, r0, #5
 2242 0490 2033     		adds	r3, r3, #32
 2243 0492 00F1010E 		add	lr, r0, #1
 2244 0496 D8BF     		it	le
 2245 0498 4FF0010E 		movle	lr, #1
 2246 049c 4EF001E0 		dls	lr, lr
 2247              	.LBE385:
 2248              	.LBE384:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2249              		.loc 3 368 22 view .LVU728
 2250 04a0 4F4A     		ldr	r2, .L107+24
 2251              	.LVL192:
 2252              	.L77:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2253              		.loc 3 367 7 is_stmt 1 view .LVU729
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2254              		.loc 3 368 9 view .LVU730
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2255              		.loc 3 368 22 is_stmt 0 view .LVU731
 2256 04a2 C2F85C12 		str	r1, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2257              		.loc 3 369 9 is_stmt 1 view .LVU732
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
ARM GAS  /tmp/cc3ptn5O.s 			page 103


 2258              		.loc 3 369 17 is_stmt 0 view .LVU733
 2259 04a6 2031     		adds	r1, r1, #32
 2260              	.LVL193:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2261              		.loc 3 370 9 is_stmt 1 view .LVU734
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2262              		.loc 3 371 25 discriminator 1 view .LVU735
 2263 04a8 0FF005C8 		le	lr, .L77
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2264              		.loc 3 373 7 view .LVU736
 2265              	.LBB386:
 2266              	.LBI386:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2267              		.loc 4 269 27 view .LVU737
 2268              	.LBB387:
 2269              		.loc 4 271 3 view .LVU738
 2270              		.syntax unified
 2271              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2272 04ac BFF34F8F 		dsb 0xF
 2273              	@ 0 "" 2
 2274              		.thumb
 2275              		.syntax unified
 2276              	.LBE387:
 2277              	.LBE386:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 2278              		.loc 3 374 7 view .LVU739
 2279              	.LBB388:
 2280              	.LBI388:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2281              		.loc 4 258 27 view .LVU740
 2282              	.LBB389:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2283              		.loc 4 260 3 view .LVU741
 2284              		.syntax unified
 2285              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2286 04b0 BFF36F8F 		isb 0xF
 2287              	@ 0 "" 2
 2288              	.LVL194:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2289              		.loc 4 260 3 is_stmt 0 view .LVU742
 2290              		.thumb
 2291              		.syntax unified
 2292              	.LBE389:
 2293              	.LBE388:
 2294              	.LBE390:
 2295              	.LBE391:
 998:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2296              		.loc 1 998 3 is_stmt 1 discriminator 3 view .LVU743
 999:Src/app.c     **** 
 2297              		.loc 1 999 3 view .LVU744
 999:Src/app.c     **** 
 2298              		.loc 1 999 3 view .LVU745
 999:Src/app.c     **** 
 2299              		.loc 1 999 3 discriminator 1 view .LVU746
 2300              	.LBB392:
 2301              	.LBI392:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
ARM GAS  /tmp/cc3ptn5O.s 			page 104


 2302              		.loc 3 358 27 view .LVU747
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2303              		.loc 3 361 5 view .LVU748
 2304              	.LBB393:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2305              		.loc 3 362 8 view .LVU749
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2306              		.loc 3 362 52 is_stmt 0 view .LVU750
 2307 04b4 09F01F0E 		and	lr, r9, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2308              		.loc 3 362 32 view .LVU751
 2309 04b8 0EF5AF5E 		add	lr, lr, #5600
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2310              		.loc 3 362 36 view .LVU752
 2311 04bc 4B46     		mov	r3, r9
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2312              		.loc 3 362 32 view .LVU753
 2313 04be 0EF1100E 		add	lr, lr, #16
 2314              	.LVL195:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2315              		.loc 3 363 7 is_stmt 1 view .LVU754
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2316              		.loc 3 365 7 view .LVU755
 2317              	.LBB394:
 2318              	.LBI394:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2319              		.loc 4 269 27 view .LVU756
 2320              	.LBB395:
 2321              		.loc 4 271 3 view .LVU757
 2322              		.syntax unified
 2323              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2324 04c2 BFF34F8F 		dsb 0xF
 2325              	@ 0 "" 2
 2326              		.thumb
 2327              		.syntax unified
 2328 04c6 0EF1FF3E 		add	lr, lr, #-1
 2329              	.LVL196:
 2330              		.loc 4 271 3 is_stmt 0 view .LVU758
 2331 04ca 4FEA5E1E 		lsr	lr, lr, #5
 2332              	.LVL197:
 2333              		.loc 4 271 3 view .LVU759
 2334 04ce 0EF1010E 		add	lr, lr, #1
 2335 04d2 4EF001E0 		dls	lr, lr
 2336              	.LVL198:
 2337              	.L78:
 2338              		.loc 4 271 3 view .LVU760
 2339              	.LBE395:
 2340              	.LBE394:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2341              		.loc 3 367 7 is_stmt 1 view .LVU761
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2342              		.loc 3 368 9 view .LVU762
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2343              		.loc 3 368 22 is_stmt 0 view .LVU763
 2344 04d6 C2F85C32 		str	r3, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2345              		.loc 3 369 9 is_stmt 1 view .LVU764
ARM GAS  /tmp/cc3ptn5O.s 			page 105


 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2346              		.loc 3 369 17 is_stmt 0 view .LVU765
 2347 04da 2033     		adds	r3, r3, #32
 2348              	.LVL199:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2349              		.loc 3 370 9 is_stmt 1 view .LVU766
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2350              		.loc 3 371 25 discriminator 1 view .LVU767
 2351 04dc 0FF005C8 		le	lr, .L78
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2352              		.loc 3 373 7 view .LVU768
 2353              	.LBB396:
 2354              	.LBI396:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2355              		.loc 4 269 27 view .LVU769
 2356              	.LBB397:
 2357              		.loc 4 271 3 view .LVU770
 2358              		.syntax unified
 2359              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2360 04e0 BFF34F8F 		dsb 0xF
 2361              	@ 0 "" 2
 2362              		.thumb
 2363              		.syntax unified
 2364              	.LBE397:
 2365              	.LBE396:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 2366              		.loc 3 374 7 view .LVU771
 2367              	.LBB398:
 2368              	.LBI398:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2369              		.loc 4 258 27 view .LVU772
 2370              	.LBB399:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2371              		.loc 4 260 3 view .LVU773
 2372              		.syntax unified
 2373              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2374 04e4 BFF36F8F 		isb 0xF
 2375              	@ 0 "" 2
 2376              	.LVL200:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2377              		.loc 4 260 3 is_stmt 0 view .LVU774
 2378              		.thumb
 2379              		.syntax unified
 2380              	.LBE399:
 2381              	.LBE398:
 2382              	.LBE393:
 2383              	.LBE392:
 2384              	.LBE400:
 2385              	.LBE424:
1389:Src/app.c     **** 
 2386              		.loc 1 1389 5 is_stmt 1 view .LVU775
1389:Src/app.c     **** 
 2387              		.loc 1 1389 13 is_stmt 0 view .LVU776
 2388 04e8 FFF7FEFF 		bl	HAL_GetTick
 2389              	.LVL201:
1391:Src/app.c     **** 
 2390              		.loc 1 1391 5 is_stmt 1 view .LVU777
ARM GAS  /tmp/cc3ptn5O.s 			page 106


1394:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 2391              		.loc 1 1394 5 view .LVU778
1395:Src/app.c     **** 
 2392              		.loc 1 1395 5 view .LVU779
1398:Src/app.c     **** 
 2393              		.loc 1 1398 5 view .LVU780
 2394              	.LBB425:
 2395              	.LBI425:
 514:Src/app.c     **** {
 2396              		.loc 1 514 13 view .LVU781
 2397              	.LBB426:
 516:Src/app.c     **** 
 2398              		.loc 1 516 3 view .LVU782
 518:Src/app.c     ****   assert(ret == pdTRUE);
 2399              		.loc 1 518 3 view .LVU783
 518:Src/app.c     ****   assert(ret == pdTRUE);
 2400              		.loc 1 518 9 is_stmt 0 view .LVU784
 2401 04ec 0023     		movs	r3, #0
 2402 04ee 2868     		ldr	r0, [r5]
 2403 04f0 1A46     		mov	r2, r3
 2404 04f2 1946     		mov	r1, r3
 2405 04f4 FFF7FEFF 		bl	xQueueGenericSend
 2406              	.LVL202:
 519:Src/app.c     **** }
 2407              		.loc 1 519 3 is_stmt 1 view .LVU785
 2408 04f8 0128     		cmp	r0, #1
 2409 04fa 04D0     		beq	.L79
 519:Src/app.c     **** }
 2410              		.loc 1 519 3 is_stmt 0 discriminator 1 view .LVU786
 2411 04fc 40F20721 		movw	r1, #519
 2412 0500 3A4B     		ldr	r3, .L107+36
 2413 0502 3B4A     		ldr	r2, .L107+40
 2414 0504 B6E5     		b	.L104
 2415              	.L79:
 2416              	.LVL203:
 519:Src/app.c     **** }
 2417              		.loc 1 519 3 discriminator 1 view .LVU787
 2418              	.LBE426:
 2419              	.LBE425:
1404:Src/app.c     ****     assert(ret == pdTRUE);
 2420              		.loc 1 1404 5 is_stmt 1 view .LVU788
1404:Src/app.c     ****     assert(ret == pdTRUE);
 2421              		.loc 1 1404 11 is_stmt 0 view .LVU789
 2422 0506 3B4E     		ldr	r6, .L107+44
 2423              	.LVL204:
1404:Src/app.c     ****     assert(ret == pdTRUE);
 2424              		.loc 1 1404 11 view .LVU790
 2425 0508 4FF0FF31 		mov	r1, #-1
 2426 050c 706D     		ldr	r0, [r6, #84]
 2427 050e FFF7FEFF 		bl	xQueueSemaphoreTake
 2428              	.LVL205:
1405:Src/app.c     ****     // NEW: Loop through all detections to find the highest confidence score
 2429              		.loc 1 1405 5 is_stmt 1 view .LVU791
 2430 0512 0128     		cmp	r0, #1
 2431 0514 3ED1     		bne	.L80
 2432 0516 DDE92813 		ldrd	r1, r3, [sp, #160]
 2433 051a 002B     		cmp	r3, #0
ARM GAS  /tmp/cc3ptn5O.s 			page 107


 2434 051c 03F10102 		add	r2, r3, #1
1407:Src/app.c     ****     // 1. Loop through all detections from the model's output
 2435              		.loc 1 1407 11 is_stmt 0 view .LVU792
 2436 0520 DFED357A 		vldr.32	s15, .L107+48
 2437 0524 B8BF     		it	lt
 2438 0526 0246     		movlt	r2, r0
 2439              	.LVL206:
 2440              	.L81:
 2441              	.LBB427:
1409:Src/app.c     ****     {
 2442              		.loc 1 1409 23 is_stmt 1 discriminator 1 view .LVU793
 2443 0528 013A     		subs	r2, r2, #1
 2444 052a 38D1     		bne	.L83
 2445              	.LBE427:
1423:Src/app.c     ****     int is_face_present = 0; // A flag to know if we should run the second model
 2446              		.loc 1 1423 5 view .LVU794
1424:Src/app.c     ****     // 4. Check if a valid face was found in this frame
 2447              		.loc 1 1424 5 view .LVU795
 2448              	.LVL207:
1426:Src/app.c     ****     {
 2449              		.loc 1 1426 5 view .LVU796
 2450              	.LBE431:
1429:Src/app.c     ****         
 2451              		.loc 1 1429 9 view .LVU797
1432:Src/app.c     **** 
 2452              		.loc 1 1432 9 view .LVU798
1435:Src/app.c     ****         face_roi.h  = (int)(best_face.height * LCD_BG_HEIGHT);
 2453              		.loc 1 1435 9 view .LVU799
1436:Src/app.c     ****         face_roi.cx = (int)(best_face.x_center * LCD_BG_WIDTH);
 2454              		.loc 1 1436 9 view .LVU800
1437:Src/app.c     ****         face_roi.cy = (int)(best_face.y_center * LCD_BG_HEIGHT);
 2455              		.loc 1 1437 9 view .LVU801
1438:Src/app.c     **** 
 2456              		.loc 1 1438 9 view .LVU802
 2457              	.LBB432:
1449:Src/app.c     ****     disp.info.hl_ms = (int)yolo_info.yolo_out.nb_detect;
 2458              		.loc 1 1449 5 view .LVU803
1449:Src/app.c     ****     disp.info.hl_ms = (int)yolo_info.yolo_out.nb_detect;
 2459              		.loc 1 1449 44 is_stmt 0 view .LVU804
 2460 052c 67EEA87A 		vmul.f32	s15, s15, s17
 2461              	.LVL208:
1449:Src/app.c     ****     disp.info.hl_ms = (int)yolo_info.yolo_out.nb_detect;
 2462              		.loc 1 1449 23 view .LVU805
 2463 0530 FDEEE77A 		vcvt.s32.f32	s15, s15
 2464 0534 C6ED2B7A 		vstr.32	s15, [r6, #172]	@ int
1450:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 2465              		.loc 1 1450 5 is_stmt 1 view .LVU806
1453:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2466              		.loc 1 1453 27 is_stmt 0 view .LVU807
 2467 0538 DFED2F7A 		vldr.32	s15, .L107+48
1451:Src/app.c     ****     disp.info.pd_hand_nb = yolo_info.yolo_out.nb_detect;
 2468              		.loc 1 1451 28 view .LVU808
 2469 053c 86ED2A8A 		vstr.32	s16, [r6, #168]
1453:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2470              		.loc 1 1453 27 view .LVU809
 2471 0540 C6ED327A 		vstr.32	s15, [r6, #200]
1450:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
ARM GAS  /tmp/cc3ptn5O.s 			page 108


 2472              		.loc 1 1450 21 view .LVU810
 2473 0544 C6F8B030 		str	r3, [r6, #176]
1451:Src/app.c     ****     disp.info.pd_hand_nb = yolo_info.yolo_out.nb_detect;
 2474              		.loc 1 1451 5 is_stmt 1 view .LVU811
1452:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 2475              		.loc 1 1452 5 view .LVU812
1452:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 2476              		.loc 1 1452 26 is_stmt 0 view .LVU813
 2477 0548 C6F8C430 		str	r3, [r6, #196]
1453:Src/app.c     ****     disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2478              		.loc 1 1453 5 is_stmt 1 view .LVU814
1454:Src/app.c     **** 
 2479              		.loc 1 1454 5 view .LVU815
1454:Src/app.c     **** 
 2480              		.loc 1 1454 33 is_stmt 0 view .LVU816
 2481 054c C6F8CCA0 		str	r10, [r6, #204]
1458:Src/app.c     ****     {
 2482              		.loc 1 1458 5 is_stmt 1 view .LVU817
1458:Src/app.c     ****     {
 2483              		.loc 1 1458 8 is_stmt 0 view .LVU818
 2484 0550 BAF1000F 		cmp	r10, #0
 2485 0554 11D0     		beq	.L84
1461:Src/app.c     ****       // Copy the landmark data for the display thread
 2486              		.loc 1 1461 7 is_stmt 1 view .LVU819
1461:Src/app.c     ****       // Copy the landmark data for the display thread
 2487              		.loc 1 1461 30 is_stmt 0 view .LVU820
 2488 0556 DFF8A8E0 		ldr	lr, .L107+56
 2489 055a 0DF11C0C 		add	ip, sp, #28
 2490 055e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2491 0562 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2492 0566 7046     		mov	r0, lr
 2493 0568 DCF80030 		ldr	r3, [ip]
 2494              	.LBB428:
1464:Src/app.c     ****     }
 2495              		.loc 1 1464 44 view .LVU821
 2496 056c 4FF46A62 		mov	r2, #3744
 2497 0570 1D49     		ldr	r1, .L107+32
 2498              	.LBE428:
1461:Src/app.c     ****       // Copy the landmark data for the display thread
 2499              		.loc 1 1461 30 view .LVU822
 2500 0572 40F8043B 		str	r3, [r0], #4
1463:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2501              		.loc 1 1463 7 is_stmt 1 view .LVU823
 2502              	.LBB429:
1463:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2503              		.loc 1 1463 12 view .LVU824
 2504              	.LVL209:
1463:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2505              		.loc 1 1463 25 discriminator 1 view .LVU825
1464:Src/app.c     ****     }
 2506              		.loc 1 1464 44 is_stmt 0 view .LVU826
 2507 0576 FFF7FEFF 		bl	memcpy
 2508              	.LVL210:
 2509              	.L84:
1464:Src/app.c     ****     }
 2510              		.loc 1 1464 44 view .LVU827
 2511              	.LBE429:
ARM GAS  /tmp/cc3ptn5O.s 			page 109


1467:Src/app.c     ****     assert(ret == pdTRUE);
 2512              		.loc 1 1467 5 is_stmt 1 view .LVU828
1467:Src/app.c     ****     assert(ret == pdTRUE);
 2513              		.loc 1 1467 11 is_stmt 0 view .LVU829
 2514 057a 0023     		movs	r3, #0
 2515 057c 706D     		ldr	r0, [r6, #84]
 2516 057e 1A46     		mov	r2, r3
 2517 0580 1946     		mov	r1, r3
 2518 0582 FFF7FEFF 		bl	xQueueGenericSend
 2519              	.LVL211:
1468:Src/app.c     **** 
 2520              		.loc 1 1468 5 is_stmt 1 view .LVU830
 2521 0586 0128     		cmp	r0, #1
 2522 0588 16D0     		beq	.L85
1468:Src/app.c     **** 
 2523              		.loc 1 1468 5 is_stmt 0 discriminator 1 view .LVU831
 2524 058a 40F2BC51 		movw	r1, #1468
 2525 058e 174B     		ldr	r3, .L107+36
 2526 0590 1A4A     		ldr	r2, .L107+52
 2527 0592 6FE5     		b	.L104
 2528              	.LVL212:
 2529              	.L80:
1405:Src/app.c     ****     // NEW: Loop through all detections to find the highest confidence score
 2530              		.loc 1 1405 5 discriminator 1 view .LVU832
 2531 0594 40F27D51 		movw	r1, #1405
 2532 0598 144B     		ldr	r3, .L107+36
 2533 059a 184A     		ldr	r2, .L107+52
 2534 059c 6AE5     		b	.L104
 2535              	.LVL213:
 2536              	.L83:
 2537              	.LBB430:
1412:Src/app.c     ****         {
 2538              		.loc 1 1412 9 is_stmt 1 view .LVU833
1412:Src/app.c     ****         {
 2539              		.loc 1 1412 12 is_stmt 0 view .LVU834
 2540 059e 4869     		ldr	r0, [r1, #20]
 2541 05a0 0228     		cmp	r0, #2
 2542 05a2 07D1     		bne	.L82
1415:Src/app.c     ****             {
 2543              		.loc 1 1415 13 is_stmt 1 view .LVU835
1415:Src/app.c     ****             {
 2544              		.loc 1 1415 47 is_stmt 0 view .LVU836
 2545 05a4 91ED047A 		vldr.32	s14, [r1, #16]
1418:Src/app.c     ****                 best_face_idx = i;
 2546              		.loc 1 1418 32 view .LVU837
 2547 05a8 B4EE677A 		vcmp.f32	s14, s15
 2548 05ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2549 05b0 77FE277A 		vselgt.f32	s15, s14, s15
 2550              	.LVL214:
 2551              	.L82:
1409:Src/app.c     ****     {
 2552              		.loc 1 1409 56 is_stmt 1 discriminator 2 view .LVU838
 2553 05b4 1831     		adds	r1, r1, #24
 2554 05b6 B7E7     		b	.L81
 2555              	.LVL215:
 2556              	.L85:
1409:Src/app.c     ****     {
ARM GAS  /tmp/cc3ptn5O.s 			page 110


 2557              		.loc 1 1409 56 is_stmt 0 discriminator 2 view .LVU839
 2558              	.LBE430:
1471:Src/app.c     ****   }
 2559              		.loc 1 1471 5 is_stmt 1 view .LVU840
 2560 05b8 0023     		movs	r3, #0
 2561 05ba 3068     		ldr	r0, [r6]
 2562              	.LVL216:
1471:Src/app.c     ****   }
 2563              		.loc 1 1471 5 is_stmt 0 view .LVU841
 2564 05bc 1A46     		mov	r2, r3
 2565 05be 1946     		mov	r1, r3
 2566 05c0 FFF7FEFF 		bl	xQueueGenericSend
 2567              	.LVL217:
 2568              	.LBE432:
1368:Src/app.c     ****   {
 2569              		.loc 1 1368 9 is_stmt 1 view .LVU842
 2570              	.LBB433:
1374:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 2571              		.loc 1 1374 18 is_stmt 0 discriminator 1 view .LVU843
 2572 05c4 5E46     		mov	r6, fp
 2573              	.LBE433:
1369:Src/app.c     ****     uint8_t *capture_buffer;
 2574              		.loc 1 1369 3 view .LVU844
 2575 05c6 ADE5     		b	.L86
 2576              	.L108:
 2577              		.align	2
 2578              	.L107:
 2579 05c8 D0000000 		.word	.LC13
 2580 05cc 00000000 		.word	__func__.7
 2581 05d0 FD000000 		.word	.LC14
 2582 05d4 0A010000 		.word	.LC15
 2583 05d8 18010000 		.word	.LC16
 2584 05dc 2E010000 		.word	.LC17
 2585 05e0 00ED00E0 		.word	-536810240
 2586 05e4 00000000 		.word	NN_Instance_face_landmark
 2587 05e8 00000000 		.word	ld_landmarks
 2588 05ec 00000000 		.word	.LC1
 2589 05f0 00000000 		.word	__func__.6
 2590 05f4 00000000 		.word	disp
 2591 05f8 00000000 		.word	0
 2592 05fc 00000000 		.word	__func__.12
 2593 0600 E8000000 		.word	disp+232
 2594              		.cfi_endproc
 2595              	.LFE7404:
 2597              		.section	.text.display_hand,"ax",%progbits
 2598              		.align	1
 2599              		.global	display_hand
 2600              		.syntax unified
 2601              		.thumb
 2602              		.thumb_func
 2604              	display_hand:
 2605              	.LVL218:
 2606              	.LFB7391:
 776:Src/app.c     ****   if (info->is_pd_displayed) {
 2607              		.loc 1 776 1 is_stmt 1 view -0
 2608              		.cfi_startproc
 2609              		@ args = 0, pretend = 0, frame = 72
ARM GAS  /tmp/cc3ptn5O.s 			page 111


 2610              		@ frame_needed = 0, uses_anonymous_args = 0
 777:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2611              		.loc 1 777 3 view .LVU846
 776:Src/app.c     ****   if (info->is_pd_displayed) {
 2612              		.loc 1 776 1 is_stmt 0 view .LVU847
 2613 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2614              		.cfi_def_cfa_offset 28
 2615              		.cfi_offset 4, -28
 2616              		.cfi_offset 5, -24
 2617              		.cfi_offset 6, -20
 2618              		.cfi_offset 7, -16
 2619              		.cfi_offset 8, -12
 2620              		.cfi_offset 9, -8
 2621              		.cfi_offset 14, -4
 777:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2622              		.loc 1 777 6 view .LVU848
 2623 0004 8369     		ldr	r3, [r0, #24]
 776:Src/app.c     ****   if (info->is_pd_displayed) {
 2624              		.loc 1 776 1 view .LVU849
 2625 0006 0546     		mov	r5, r0
 2626 0008 0C46     		mov	r4, r1
 2627 000a 95B0     		sub	sp, sp, #84
 2628              		.cfi_def_cfa_offset 112
 777:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2629              		.loc 1 777 6 view .LVU850
 2630 000c 002B     		cmp	r3, #0
 2631 000e 00F08180 		beq	.L110
 778:Src/app.c     ****     display_roi(&hand->roi);
 2632              		.loc 1 778 5 is_stmt 1 view .LVU851
 2633              	.LVL219:
 2634              	.LBB439:
 2635              	.LBI439:
 642:Src/app.c     **** {
 2636              		.loc 1 642 13 view .LVU852
 2637              	.LBB440:
 644:Src/app.c     ****   int x0, y0;
 2638              		.loc 1 644 3 view .LVU853
 645:Src/app.c     ****   int x1, y1;
 2639              		.loc 1 645 3 view .LVU854
 646:Src/app.c     ****   int w, h;
 2640              		.loc 1 646 3 view .LVU855
 647:Src/app.c     ****   int i;
 2641              		.loc 1 647 3 view .LVU856
 648:Src/app.c     **** 
 2642              		.loc 1 648 3 view .LVU857
 651:Src/app.c     ****   yc = (int)hand->y_center;
 2643              		.loc 1 651 3 view .LVU858
 651:Src/app.c     ****   yc = (int)hand->y_center;
 2644              		.loc 1 651 6 is_stmt 0 view .LVU859
 2645 0012 D1ED027A 		vldr.32	s15, [r1, #8]
 2646 0016 FDEEE77A 		vcvt.s32.f32	s15, s15
 2647 001a 17EE900A 		vmov	r0, s15	@ int
 2648              	.LVL220:
 652:Src/app.c     ****   w = (int)hand->width;
 2649              		.loc 1 652 3 is_stmt 1 view .LVU860
 652:Src/app.c     ****   w = (int)hand->width;
 2650              		.loc 1 652 6 is_stmt 0 view .LVU861
ARM GAS  /tmp/cc3ptn5O.s 			page 112


 2651 001e D1ED037A 		vldr.32	s15, [r1, #12]
 2652 0022 FDEEE77A 		vcvt.s32.f32	s15, s15
 2653 0026 17EE901A 		vmov	r1, s15	@ int
 2654              	.LVL221:
 653:Src/app.c     ****   h = (int)hand->height;
 2655              		.loc 1 653 3 is_stmt 1 view .LVU862
 654:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 2656              		.loc 1 654 3 view .LVU863
 654:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 2657              		.loc 1 654 5 is_stmt 0 view .LVU864
 2658 002a D4ED057A 		vldr.32	s15, [r4, #20]
 2659 002e FDEEE77A 		vcvt.s32.f32	s15, s15
 2660 0032 17EE903A 		vmov	r3, s15	@ int
 2661              	.LVL222:
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2662              		.loc 1 655 3 is_stmt 1 view .LVU865
 653:Src/app.c     ****   h = (int)hand->height;
 2663              		.loc 1 653 5 is_stmt 0 view .LVU866
 2664 0036 D4ED047A 		vldr.32	s15, [r4, #16]
 2665 003a FDEEE77A 		vcvt.s32.f32	s15, s15
 2666 003e 17EE902A 		vmov	r2, s15	@ int
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2667              		.loc 1 655 16 view .LVU867
 2668 0042 0132     		adds	r2, r2, #1
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2669              		.loc 1 655 21 view .LVU868
 2670 0044 02EBD272 		add	r2, r2, r2, lsr #31
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2671              		.loc 1 656 16 view .LVU869
 2672 0048 0133     		adds	r3, r3, #1
 2673              	.LVL223:
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2674              		.loc 1 655 21 view .LVU870
 2675 004a 5210     		asrs	r2, r2, #1
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2676              		.loc 1 656 21 view .LVU871
 2677 004c 03EBD373 		add	r3, r3, r3, lsr #31
 2678              	.LVL224:
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2679              		.loc 1 655 21 view .LVU872
 2680 0050 5242     		rsbs	r2, r2, #0
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2681              		.loc 1 656 21 view .LVU873
 2682 0052 5B10     		asrs	r3, r3, #1
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2683              		.loc 1 655 11 view .LVU874
 2684 0054 8618     		adds	r6, r0, r2
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2685              		.loc 1 656 21 view .LVU875
 2686 0056 5B42     		rsbs	r3, r3, #0
 657:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2687              		.loc 1 657 6 view .LVU876
 2688 0058 801A     		subs	r0, r0, r2
 2689              	.LVL225:
 655:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2690              		.loc 1 655 6 view .LVU877
 2691 005a 0296     		str	r6, [sp, #8]
ARM GAS  /tmp/cc3ptn5O.s 			page 113


 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2692              		.loc 1 656 3 is_stmt 1 view .LVU878
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2693              		.loc 1 656 11 is_stmt 0 view .LVU879
 2694 005c CE18     		adds	r6, r1, r3
 658:Src/app.c     ****   clamp_point(&x0, &y0);
 2695              		.loc 1 658 6 view .LVU880
 2696 005e C91A     		subs	r1, r1, r3
 2697              	.LVL226:
 657:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2698              		.loc 1 657 6 view .LVU881
 2699 0060 0490     		str	r0, [sp, #16]
 658:Src/app.c     ****   clamp_point(&x0, &y0);
 2700              		.loc 1 658 6 view .LVU882
 2701 0062 0C91     		str	r1, [sp, #48]
 659:Src/app.c     ****   clamp_point(&x1, &y1);
 2702              		.loc 1 659 3 view .LVU883
 2703 0064 02A8     		add	r0, sp, #8
 2704 0066 03A9     		add	r1, sp, #12
 656:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2705              		.loc 1 656 6 view .LVU884
 2706 0068 0396     		str	r6, [sp, #12]
 657:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2707              		.loc 1 657 3 is_stmt 1 view .LVU885
 658:Src/app.c     ****   clamp_point(&x0, &y0);
 2708              		.loc 1 658 3 view .LVU886
 659:Src/app.c     ****   clamp_point(&x1, &y1);
 2709              		.loc 1 659 3 view .LVU887
 2710 006a FFF7FEFF 		bl	clamp_point
 2711              	.LVL227:
 660:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 2712              		.loc 1 660 3 view .LVU888
 2713 006e 0CA9     		add	r1, sp, #48
 2714 0070 04A8     		add	r0, sp, #16
 2715 0072 FFF7FEFF 		bl	clamp_point
 2716              	.LVL228:
 661:Src/app.c     **** 
 2717              		.loc 1 661 3 view .LVU889
 2718 0076 DDE90201 		ldrd	r0, r1, [sp, #8]
 2719 007a 4FF0FF23 		mov	r3, #-16711936
 2720 007e 049A     		ldr	r2, [sp, #16]
 2721 0080 0093     		str	r3, [sp]
 2722 0082 0C9B     		ldr	r3, [sp, #48]
 2723 0084 121A     		subs	r2, r2, r0
 2724 0086 5B1A     		subs	r3, r3, r1
 2725 0088 FFF7FEFF 		bl	UTIL_LCD_DrawRect
 2726              	.LVL229:
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2727              		.loc 1 664 3 view .LVU890
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2728              		.loc 1 664 17 discriminator 1 view .LVU891
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2729              		.loc 1 664 10 is_stmt 0 view .LVU892
 2730 008c 0026     		movs	r6, #0
 2731              	.LBB441:
 665:Src/app.c     **** 
 2732              		.loc 1 665 62 discriminator 3 view .LVU893
ARM GAS  /tmp/cc3ptn5O.s 			page 114


 2733 008e DFF8A080 		ldr	r8, .L124+4
 2734 0092 264F     		ldr	r7, .L124
 2735              	.LVL230:
 2736              	.L112:
 665:Src/app.c     **** 
 2737              		.loc 1 665 5 is_stmt 1 view .LVU894
 667:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2738              		.loc 1 667 25 is_stmt 0 view .LVU895
 2739 0094 A269     		ldr	r2, [r4, #24]
 665:Src/app.c     **** 
 2740              		.loc 1 665 62 discriminator 3 view .LVU896
 2741 0096 36F00203 		bics	r3, r6, #2
 667:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2742              		.loc 1 667 25 view .LVU897
 2743 009a 02EBC602 		add	r2, r2, r6, lsl #3
 667:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2744              		.loc 1 667 10 view .LVU898
 2745 009e D2ED007A 		vldr.32	s15, [r2]
 2746 00a2 FDEEE77A 		vcvt.s32.f32	s15, s15
 2747 00a6 CDED027A 		vstr.32	s15, [sp, #8]	@ int
 668:Src/app.c     ****     clamp_point(&x0, &y0);
 2748              		.loc 1 668 10 view .LVU899
 2749 00aa D2ED017A 		vldr.32	s15, [r2, #4]
 665:Src/app.c     **** 
 2750              		.loc 1 665 62 discriminator 3 view .LVU900
 2751 00ae 0CBF     		ite	eq
 2752 00b0 C146     		moveq	r9, r8
 2753 00b2 B946     		movne	r9, r7
 2754              	.LVL231:
 667:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2755              		.loc 1 667 5 is_stmt 1 view .LVU901
 668:Src/app.c     ****     clamp_point(&x0, &y0);
 2756              		.loc 1 668 5 view .LVU902
 668:Src/app.c     ****     clamp_point(&x0, &y0);
 2757              		.loc 1 668 10 is_stmt 0 view .LVU903
 2758 00b4 FDEEE77A 		vcvt.s32.f32	s15, s15
 669:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2759              		.loc 1 669 5 view .LVU904
 2760 00b8 03A9     		add	r1, sp, #12
 2761 00ba 02A8     		add	r0, sp, #8
 668:Src/app.c     ****     clamp_point(&x0, &y0);
 2762              		.loc 1 668 10 view .LVU905
 2763 00bc CDED037A 		vstr.32	s15, [sp, #12]	@ int
 669:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2764              		.loc 1 669 5 is_stmt 1 view .LVU906
 2765              	.LBE441:
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2766              		.loc 1 664 23 is_stmt 0 discriminator 2 view .LVU907
 2767 00c0 0136     		adds	r6, r6, #1
 2768              	.LVL232:
 2769              	.LBB442:
 669:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2770              		.loc 1 669 5 view .LVU908
 2771 00c2 FFF7FEFF 		bl	clamp_point
 2772              	.LVL233:
 670:Src/app.c     ****   }
 2773              		.loc 1 670 5 is_stmt 1 view .LVU909
ARM GAS  /tmp/cc3ptn5O.s 			page 115


 2774 00c6 DDE90201 		ldrd	r0, r1, [sp, #8]
 2775 00ca 4B46     		mov	r3, r9
 2776 00cc 0222     		movs	r2, #2
 2777 00ce FFF7FEFF 		bl	UTIL_LCD_FillCircle
 2778              	.LVL234:
 2779              	.LBE442:
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2780              		.loc 1 664 23 discriminator 2 view .LVU910
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2781              		.loc 1 664 17 discriminator 1 view .LVU911
 2782 00d2 072E     		cmp	r6, #7
 2783 00d4 DED1     		bne	.L112
 2784              	.LVL235:
 664:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2785              		.loc 1 664 17 is_stmt 0 discriminator 1 view .LVU912
 2786              	.LBE440:
 2787              	.LBE439:
 779:Src/app.c     ****   }
 2788              		.loc 1 779 5 is_stmt 1 view .LVU913
 2789              	.LBB443:
 2790              	.LBI443:
 720:Src/app.c     **** {
 2791              		.loc 1 720 13 view .LVU914
 2792              	.LBB444:
 722:Src/app.c     ****   int corners[4][2];
 2793              		.loc 1 722 3 view .LVU915
 723:Src/app.c     ****   int is_clamp;
 2794              		.loc 1 723 3 view .LVU916
 724:Src/app.c     ****   int i;
 2795              		.loc 1 724 3 view .LVU917
 725:Src/app.c     **** 
 2796              		.loc 1 725 3 view .LVU918
 728:Src/app.c     **** 
 2797              		.loc 1 728 3 view .LVU919
 2798 00d6 04A9     		add	r1, sp, #16
 2799 00d8 04F11C00 		add	r0, r4, #28
 2800              	.LVL236:
 728:Src/app.c     **** 
 2801              		.loc 1 728 3 is_stmt 0 view .LVU920
 2802 00dc FFF7FEFF 		bl	roi_to_corners
 2803              	.LVL237:
 731:Src/app.c     ****   if (is_clamp)
 2804              		.loc 1 731 3 is_stmt 1 view .LVU921
 731:Src/app.c     ****   if (is_clamp)
 2805              		.loc 1 731 14 is_stmt 0 view .LVU922
 2806 00e0 0CA9     		add	r1, sp, #48
 2807 00e2 04A8     		add	r0, sp, #16
 2808              	.LVL238:
 731:Src/app.c     ****   if (is_clamp)
 2809              		.loc 1 731 14 view .LVU923
 2810 00e4 FFF7FEFF 		bl	clamp_corners
 2811              	.LVL239:
 732:Src/app.c     ****     return ;
 2812              		.loc 1 732 3 is_stmt 1 view .LVU924
 2813 00e8 0CAF     		add	r7, sp, #48
 732:Src/app.c     ****     return ;
 2814              		.loc 1 732 6 is_stmt 0 view .LVU925
ARM GAS  /tmp/cc3ptn5O.s 			page 116


 2815 00ea 0646     		mov	r6, r0
 2816 00ec 90B9     		cbnz	r0, .L110
 737:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2817              		.loc 1 737 5 view .LVU926
 2818 00ee DFF83C80 		ldr	r8, .L124
 2819              	.LVL240:
 2820              	.L114:
 737:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2821              		.loc 1 737 5 is_stmt 1 view .LVU927
 737:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2822              		.loc 1 737 64 is_stmt 0 view .LVU928
 2823 00f2 0136     		adds	r6, r6, #1
 2824              	.LVL241:
 737:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2825              		.loc 1 737 98 view .LVU929
 2826 00f4 14AB     		add	r3, sp, #80
 737:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2827              		.loc 1 737 69 view .LVU930
 2828 00f6 06F00302 		and	r2, r6, #3
 737:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2829              		.loc 1 737 5 view .LVU931
 2830 00fa CDF80080 		str	r8, [sp]
 737:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2831              		.loc 1 737 98 view .LVU932
 2832 00fe 03EBC202 		add	r2, r3, r2, lsl #3
 737:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2833              		.loc 1 737 5 view .LVU933
 2834 0102 7968     		ldr	r1, [r7, #4]
 2835 0104 52E90823 		ldrd	r2, r3, [r2, #-32]
 2836 0108 57F8080B 		ldr	r0, [r7], #8
 2837 010c FFF7FEFF 		bl	UTIL_LCD_DrawLine
 2838              	.LVL242:
 736:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2839              		.loc 1 736 23 is_stmt 1 discriminator 3 view .LVU934
 736:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2840              		.loc 1 736 17 discriminator 1 view .LVU935
 2841 0110 042E     		cmp	r6, #4
 2842 0112 EED1     		bne	.L114
 2843              	.LVL243:
 2844              	.L110:
 736:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2845              		.loc 1 736 17 is_stmt 0 discriminator 1 view .LVU936
 2846              	.LBE444:
 2847              	.LBE443:
 781:Src/app.c     ****     display_ld_hand(hand);
 2848              		.loc 1 781 3 is_stmt 1 view .LVU937
 781:Src/app.c     ****     display_ld_hand(hand);
 2849              		.loc 1 781 6 is_stmt 0 view .LVU938
 2850 0114 6B69     		ldr	r3, [r5, #20]
 2851 0116 2BB1     		cbz	r3, .L109
 782:Src/app.c     **** }
 2852              		.loc 1 782 5 is_stmt 1 view .LVU939
 2853 0118 2046     		mov	r0, r4
 783:Src/app.c     **** 
 2854              		.loc 1 783 1 is_stmt 0 view .LVU940
 2855 011a 15B0     		add	sp, sp, #84
 2856              		.cfi_remember_state
ARM GAS  /tmp/cc3ptn5O.s 			page 117


 2857              		.cfi_def_cfa_offset 28
 2858              		@ sp needed
 2859 011c BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 2860              		.cfi_restore 14
 2861              		.cfi_restore 9
 2862              		.cfi_restore 8
 2863              		.cfi_restore 7
 2864              		.cfi_restore 6
 2865              		.cfi_restore 5
 2866              		.cfi_restore 4
 2867              		.cfi_def_cfa_offset 0
 2868              	.LVL244:
 782:Src/app.c     **** }
 2869              		.loc 1 782 5 view .LVU941
 2870 0120 FFF7FEBF 		b	display_ld_hand
 2871              	.LVL245:
 2872              	.L109:
 2873              		.cfi_restore_state
 783:Src/app.c     **** 
 2874              		.loc 1 783 1 view .LVU942
 2875 0124 15B0     		add	sp, sp, #84
 2876              		.cfi_def_cfa_offset 28
 2877              		@ sp needed
 2878 0126 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2879              	.LVL246:
 2880              	.L125:
 783:Src/app.c     **** 
 2881              		.loc 1 783 1 view .LVU943
 2882 012a 00BF     		.align	2
 2883              	.L124:
 2884 012c 0000FFFF 		.word	-65536
 2885 0130 FF0000FF 		.word	-16776961
 2886              		.cfi_endproc
 2887              	.LFE7391:
 2889              		.section	.rodata.dp_thread_fct.str1.1,"aMS",%progbits,1
 2890              	.LC18:
 2891 0000 72657420 		.ascii	"ret == HAL_OK\000"
 2891      3D3D2048 
 2891      414C5F4F 
 2891      4B00
 2892              		.global	__aeabi_ul2d
 2893              	.LC19:
 2894 000e 43707520 		.ascii	"Cpu load\000"
 2894      6C6F6164 
 2894      00
 2895              	.LC20:
 2896 0017 20202025 		.ascii	"   %.1f%%\000"
 2896      2E316625 
 2896      2500
 2897              	.LC21:
 2898 0021 496E6665 		.ascii	"Inferences\000"
 2898      72656E63 
 2898      657300
 2899              	.LC22:
 2900 002c 20666163 		.ascii	" face_conf %2u\000"
 2900      655F636F 
 2900      6E662025 
ARM GAS  /tmp/cc3ptn5O.s 			page 118


 2900      327500
 2901              	.LC23:
 2902 003b 20796F6C 		.ascii	" yolo_num_detections %2u\000"
 2902      6F5F6E75 
 2902      6D5F6465 
 2902      74656374 
 2902      696F6E73 
 2903              	.LC24:
 2904 0054 2020252E 		.ascii	"  %.1f FPS\000"
 2904      31662046 
 2904      505300
 2905              		.section	.text.dp_thread_fct,"ax",%progbits
 2906              		.align	1
 2907              		.syntax unified
 2908              		.thumb
 2909              		.thumb_func
 2911              	dp_thread_fct:
 2912              	.LVL247:
 2913              	.LFB7409:
1617:Src/app.c     ****   button_t ld_toggle_button;
 2914              		.loc 1 1617 1 is_stmt 1 view -0
 2915              		.cfi_startproc
 2916              		@ args = 0, pretend = 0, frame = 3864
 2917              		@ frame_needed = 0, uses_anonymous_args = 0
1618:Src/app.c     ****   button_t hd_toggle_button;
 2918              		.loc 1 1618 3 view .LVU945
1619:Src/app.c     ****   uint32_t disp_ms = 0;
 2919              		.loc 1 1619 3 view .LVU946
1620:Src/app.c     ****   display_info_t info;
 2920              		.loc 1 1620 3 view .LVU947
1621:Src/app.c     ****   uint32_t ts;
 2921              		.loc 1 1621 3 view .LVU948
1622:Src/app.c     ****   int ret;
 2922              		.loc 1 1622 3 view .LVU949
1623:Src/app.c     **** 
 2923              		.loc 1 1623 3 view .LVU950
1626:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
 2924              		.loc 1 1626 3 view .LVU951
1617:Src/app.c     ****   button_t ld_toggle_button;
 2925              		.loc 1 1617 1 is_stmt 0 view .LVU952
 2926 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2927              		.cfi_def_cfa_offset 36
 2928              		.cfi_offset 4, -36
 2929              		.cfi_offset 5, -32
 2930              		.cfi_offset 6, -28
 2931              		.cfi_offset 7, -24
 2932              		.cfi_offset 8, -20
 2933              		.cfi_offset 9, -16
 2934              		.cfi_offset 10, -12
 2935              		.cfi_offset 11, -8
 2936              		.cfi_offset 14, -4
 2937              	.LBB475:
 2938              	.LBB476:
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2939              		.loc 1 415 9 view .LVU953
 2940 0004 0021     		movs	r1, #0
 2941              	.LBE476:
ARM GAS  /tmp/cc3ptn5O.s 			page 119


 2942              	.LBE475:
1617:Src/app.c     ****   button_t ld_toggle_button;
 2943              		.loc 1 1617 1 view .LVU954
 2944 0006 2DED048B 		vpush.64	{d8, d9}
 2945              		.cfi_def_cfa_offset 52
 2946              		.cfi_offset 80, -52
 2947              		.cfi_offset 81, -48
 2948              		.cfi_offset 82, -44
 2949              		.cfi_offset 83, -40
 2950              	.LBB480:
 2951              	.LBB477:
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2952              		.loc 1 415 9 view .LVU955
 2953 000a 0846     		mov	r0, r1
 2954              	.LVL248:
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2955              		.loc 1 415 9 view .LVU956
 2956              	.LBE477:
 2957              	.LBE480:
1617:Src/app.c     ****   button_t ld_toggle_button;
 2958              		.loc 1 1617 1 view .LVU957
 2959 000c ADF6247D 		subw	sp, sp, #3876
 2960              		.cfi_def_cfa_offset 3928
 2961              	.LVL249:
 2962              	.LBB481:
 2963              	.LBI475:
 411:Src/app.c     **** {
 2964              		.loc 1 411 13 is_stmt 1 view .LVU958
 2965              	.LBB478:
 413:Src/app.c     **** 
 2966              		.loc 1 413 3 view .LVU959
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2967              		.loc 1 415 3 view .LVU960
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2968              		.loc 1 415 9 is_stmt 0 view .LVU961
 2969 0010 FFF7FEFF 		bl	BSP_PB_Init
 2970              	.LVL250:
 416:Src/app.c     **** 
 2971              		.loc 1 416 3 is_stmt 1 view .LVU962
 2972 0014 0146     		mov	r1, r0
 2973 0016 08B1     		cbz	r0, .L127
 2974              	.LVL251:
 2975              	.L128:
 416:Src/app.c     **** 
 2976              		.loc 1 416 3 is_stmt 0 view .LVU963
 2977 0018 FFF7FEFF 		bl	button_init.part.0
 2978              	.LVL252:
 2979              	.L127:
 418:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2980              		.loc 1 418 3 is_stmt 1 view .LVU964
 419:Src/app.c     ****   b->prev_state = 0;
 2981              		.loc 1 419 23 is_stmt 0 view .LVU965
 2982 001c 984B     		ldr	r3, .L144+8
 421:Src/app.c     **** }
 2983              		.loc 1 421 14 view .LVU966
 2984 001e 994F     		ldr	r7, .L144+12
 420:Src/app.c     ****   b->cb_args = cb_args;
ARM GAS  /tmp/cc3ptn5O.s 			page 120


 2985              		.loc 1 420 17 view .LVU967
 2986 0020 CDE90403 		strd	r0, r3, [sp, #16]
 418:Src/app.c     ****   b->on_click_handler = on_click_handler;
 2987              		.loc 1 418 16 view .LVU968
 2988 0024 8DF80C00 		strb	r0, [sp, #12]
 419:Src/app.c     ****   b->prev_state = 0;
 2989              		.loc 1 419 3 is_stmt 1 view .LVU969
 421:Src/app.c     **** }
 2990              		.loc 1 421 3 view .LVU970
 2991              	.LBE478:
 2992              	.LBE481:
 2993              	.LBB482:
 2994              	.LBB483:
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2995              		.loc 1 415 9 is_stmt 0 view .LVU971
 2996 0028 0120     		movs	r0, #1
 2997              	.LVL253:
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2998              		.loc 1 415 9 view .LVU972
 2999              	.LBE483:
 3000              	.LBE482:
 3001              	.LBB487:
 3002              	.LBB479:
 421:Src/app.c     **** }
 3003              		.loc 1 421 14 view .LVU973
 3004 002a 0697     		str	r7, [sp, #24]
 3005              	.LVL254:
 421:Src/app.c     **** }
 3006              		.loc 1 421 14 view .LVU974
 3007              	.LBE479:
 3008              	.LBE487:
1627:Src/app.c     **** #else
 3009              		.loc 1 1627 3 is_stmt 1 view .LVU975
 3010              	.LBB488:
 3011              	.LBI482:
 411:Src/app.c     **** {
 3012              		.loc 1 411 13 view .LVU976
 3013              	.LBB484:
 413:Src/app.c     **** 
 3014              		.loc 1 413 3 view .LVU977
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3015              		.loc 1 415 3 view .LVU978
 415:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3016              		.loc 1 415 9 is_stmt 0 view .LVU979
 3017 002c FFF7FEFF 		bl	BSP_PB_Init
 3018              	.LVL255:
 416:Src/app.c     **** 
 3019              		.loc 1 416 3 is_stmt 1 view .LVU980
 3020 0030 0028     		cmp	r0, #0
 3021 0032 F1D1     		bne	.L128
 418:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3022              		.loc 1 418 3 view .LVU981
 418:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3023              		.loc 1 418 16 is_stmt 0 view .LVU982
 3024 0034 0123     		movs	r3, #1
 3025              	.LBE484:
 3026              	.LBE488:
ARM GAS  /tmp/cc3ptn5O.s 			page 121


1620:Src/app.c     ****   display_info_t info;
 3027              		.loc 1 1620 12 view .LVU983
 3028 0036 0446     		mov	r4, r0
 3029              	.LBB489:
 3030              	.LBB490:
 3031              	.LBB491:
 3032              	.LBB492:
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3033              		.loc 1 462 35 view .LVU984
 3034 0038 9FED8F9B 		vldr.64	d9, .L144
 3035              	.LBE492:
 3036              	.LBE491:
 3037              	.LBE490:
 3038              	.LBE489:
 3039              	.LBB502:
 3040              	.LBB485:
 418:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3041              		.loc 1 418 16 view .LVU985
 3042 003c 8DF81C30 		strb	r3, [sp, #28]
 419:Src/app.c     ****   b->prev_state = 0;
 3043              		.loc 1 419 3 is_stmt 1 view .LVU986
 419:Src/app.c     ****   b->prev_state = 0;
 3044              		.loc 1 419 23 is_stmt 0 view .LVU987
 3045 0040 914B     		ldr	r3, .L144+16
 3046              	.LBE485:
 3047              	.LBE502:
 3048              	.LBB503:
 3049              	.LBB504:
1576:Src/app.c     ****   assert(ret == HAL_OK);
 3050              		.loc 1 1576 47 view .LVU988
 3051 0042 DFF88C92 		ldr	r9, .L144+88
 3052              	.LBE504:
 3053              	.LBE503:
 3054              	.LBB510:
 3055              	.LBB486:
 420:Src/app.c     ****   b->cb_args = cb_args;
 3056              		.loc 1 420 17 view .LVU989
 3057 0046 CDE90803 		strd	r0, r3, [sp, #32]
 421:Src/app.c     **** }
 3058              		.loc 1 421 3 is_stmt 1 view .LVU990
 421:Src/app.c     **** }
 3059              		.loc 1 421 14 is_stmt 0 view .LVU991
 3060 004a 0A97     		str	r7, [sp, #40]
 3061              	.LVL256:
 3062              	.L138:
 421:Src/app.c     **** }
 3063              		.loc 1 421 14 view .LVU992
 3064              	.LBE486:
 3065              	.LBE510:
1632:Src/app.c     ****   {
 3066              		.loc 1 1632 3 is_stmt 1 view .LVU993
1634:Src/app.c     ****     assert(ret == pdTRUE);
 3067              		.loc 1 1634 5 view .LVU994
1634:Src/app.c     ****     assert(ret == pdTRUE);
 3068              		.loc 1 1634 11 is_stmt 0 view .LVU995
 3069 004c 4FF0FF31 		mov	r1, #-1
 3070 0050 3868     		ldr	r0, [r7]
ARM GAS  /tmp/cc3ptn5O.s 			page 122


 3071 0052 FFF7FEFF 		bl	xQueueSemaphoreTake
 3072              	.LVL257:
1635:Src/app.c     **** 
 3073              		.loc 1 1635 5 is_stmt 1 view .LVU996
 3074 0056 0128     		cmp	r0, #1
 3075 0058 06D0     		beq	.L129
1635:Src/app.c     **** 
 3076              		.loc 1 1635 5 is_stmt 0 discriminator 1 view .LVU997
 3077 005a 40F26361 		movw	r1, #1635
 3078 005e 8B4B     		ldr	r3, .L144+20
 3079 0060 8B4A     		ldr	r2, .L144+24
 3080              	.LVL258:
 3081              	.L143:
1641:Src/app.c     ****     info = disp.info;
 3082              		.loc 1 1641 5 discriminator 1 view .LVU998
 3083 0062 8C48     		ldr	r0, .L144+28
 3084 0064 FFF7FEFF 		bl	__assert_func
 3085              	.LVL259:
 3086              	.L129:
1637:Src/app.c     ****     button_process(&hd_toggle_button);
 3087              		.loc 1 1637 5 is_stmt 1 view .LVU999
 3088 0068 03A8     		add	r0, sp, #12
 3089              	.LVL260:
1637:Src/app.c     ****     button_process(&hd_toggle_button);
 3090              		.loc 1 1637 5 is_stmt 0 view .LVU1000
 3091 006a FFF7FEFF 		bl	button_process
 3092              	.LVL261:
1638:Src/app.c     **** 
 3093              		.loc 1 1638 5 is_stmt 1 view .LVU1001
 3094 006e 07A8     		add	r0, sp, #28
 3095 0070 FFF7FEFF 		bl	button_process
 3096              	.LVL262:
1640:Src/app.c     ****     assert(ret == pdTRUE);
 3097              		.loc 1 1640 5 view .LVU1002
1640:Src/app.c     ****     assert(ret == pdTRUE);
 3098              		.loc 1 1640 11 is_stmt 0 view .LVU1003
 3099 0074 4FF0FF31 		mov	r1, #-1
 3100 0078 786D     		ldr	r0, [r7, #84]
 3101 007a FFF7FEFF 		bl	xQueueSemaphoreTake
 3102              	.LVL263:
1641:Src/app.c     ****     info = disp.info;
 3103              		.loc 1 1641 5 is_stmt 1 view .LVU1004
 3104 007e 0128     		cmp	r0, #1
 3105 0080 04D0     		beq	.L130
1641:Src/app.c     ****     info = disp.info;
 3106              		.loc 1 1641 5 is_stmt 0 discriminator 1 view .LVU1005
 3107 0082 40F26961 		movw	r1, #1641
 3108 0086 814B     		ldr	r3, .L144+20
 3109 0088 814A     		ldr	r2, .L144+24
 3110 008a EAE7     		b	.L143
 3111              	.L130:
1642:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3112              		.loc 1 1642 5 is_stmt 1 view .LVU1006
1642:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3113              		.loc 1 1642 10 is_stmt 0 view .LVU1007
 3114 008c 40F6F462 		movw	r2, #3828
 3115 0090 8149     		ldr	r1, .L144+32
ARM GAS  /tmp/cc3ptn5O.s 			page 123


 3116 0092 0BA8     		add	r0, sp, #44
 3117              	.LVL264:
1642:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3118              		.loc 1 1642 10 view .LVU1008
 3119 0094 FFF7FEFF 		bl	memcpy
 3120              	.LVL265:
1643:Src/app.c     ****     assert(ret == pdTRUE);
 3121              		.loc 1 1643 5 is_stmt 1 view .LVU1009
1643:Src/app.c     ****     assert(ret == pdTRUE);
 3122              		.loc 1 1643 11 is_stmt 0 view .LVU1010
 3123 0098 0023     		movs	r3, #0
 3124 009a 786D     		ldr	r0, [r7, #84]
 3125 009c 1A46     		mov	r2, r3
 3126 009e 1946     		mov	r1, r3
 3127 00a0 FFF7FEFF 		bl	xQueueGenericSend
 3128              	.LVL266:
1644:Src/app.c     ****     info.disp_ms = disp_ms;
 3129              		.loc 1 1644 5 view .LVU1011
 3130 00a4 0128     		cmp	r0, #1
1643:Src/app.c     ****     assert(ret == pdTRUE);
 3131              		.loc 1 1643 11 view .LVU1012
 3132 00a6 0546     		mov	r5, r0
 3133              	.LVL267:
1644:Src/app.c     ****     info.disp_ms = disp_ms;
 3134              		.loc 1 1644 5 is_stmt 1 view .LVU1013
 3135 00a8 04D0     		beq	.L131
1644:Src/app.c     ****     info.disp_ms = disp_ms;
 3136              		.loc 1 1644 5 is_stmt 0 discriminator 1 view .LVU1014
 3137 00aa 40F26C61 		movw	r1, #1644
 3138 00ae 774B     		ldr	r3, .L144+20
 3139 00b0 774A     		ldr	r2, .L144+24
 3140 00b2 D6E7     		b	.L143
 3141              	.L131:
1645:Src/app.c     **** 
 3142              		.loc 1 1645 5 is_stmt 1 view .LVU1015
1645:Src/app.c     **** 
 3143              		.loc 1 1645 18 is_stmt 0 view .LVU1016
 3144 00b4 0F94     		str	r4, [sp, #60]
1647:Src/app.c     ****     dp_update_drawing_area();
 3145              		.loc 1 1647 5 is_stmt 1 view .LVU1017
1647:Src/app.c     ****     dp_update_drawing_area();
 3146              		.loc 1 1647 10 is_stmt 0 view .LVU1018
 3147 00b6 FFF7FEFF 		bl	HAL_GetTick
 3148              	.LVL268:
1647:Src/app.c     ****     dp_update_drawing_area();
 3149              		.loc 1 1647 10 view .LVU1019
 3150 00ba 8246     		mov	r10, r0
 3151              	.LVL269:
1648:Src/app.c     ****     Display_NetworkOutput(&info);
 3152              		.loc 1 1648 5 is_stmt 1 view .LVU1020
 3153              	.LBB511:
 3154              	.LBI503:
1571:Src/app.c     **** {
 3155              		.loc 1 1571 13 view .LVU1021
 3156              	.LBB509:
1573:Src/app.c     **** 
 3157              		.loc 1 1573 3 view .LVU1022
ARM GAS  /tmp/cc3ptn5O.s 			page 124


1575:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
 3158              		.loc 1 1575 3 view .LVU1023
 3159              	.LBB505:
 3160              	.LBI505:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /tmp/cc3ptn5O.s 			page 125


 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/cc3ptn5O.s 			page 126


 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/cc3ptn5O.s 			page 127


 439:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  /tmp/cc3ptn5O.s 			page 128


 496:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  /tmp/cc3ptn5O.s 			page 129


 553:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc3ptn5O.s 			page 130


 610:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc3ptn5O.s 			page 131


 667:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc3ptn5O.s 			page 132


 724:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 133


 781:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc3ptn5O.s 			page 134


 838:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
ARM GAS  /tmp/cc3ptn5O.s 			page 135


 895:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  /tmp/cc3ptn5O.s 			page 136


 952:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 3161              		.loc 4 960 27 view .LVU1024
 3162              	.LBB506:
 961:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 3163              		.loc 4 962 3 view .LVU1025
 3164              		.syntax unified
 3165              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3166 00bc 72B6     		cpsid i
 3167              	@ 0 "" 2
 3168              		.thumb
 3169              		.syntax unified
 3170              	.LBE506:
 3171              	.LBE505:
1576:Src/app.c     ****   assert(ret == HAL_OK);
 3172              		.loc 1 1576 3 view .LVU1026
1576:Src/app.c     ****   assert(ret == HAL_OK);
 3173              		.loc 1 1576 47 is_stmt 0 view .LVU1027
 3174 00be DFF81482 		ldr	r8, .L144+92
 3175 00c2 D9F80030 		ldr	r3, [r9]
1576:Src/app.c     ****   assert(ret == HAL_OK);
 3176              		.loc 1 1576 9 view .LVU1028
 3177 00c6 7548     		ldr	r0, .L144+36
 3178              	.LVL270:
1576:Src/app.c     ****   assert(ret == HAL_OK);
 3179              		.loc 1 1576 9 view .LVU1029
 3180 00c8 2946     		mov	r1, r5
 3181 00ca 00FB0380 		mla	r0, r0, r3, r8
 3182 00ce FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 3183              	.LVL271:
1577:Src/app.c     ****   __enable_irq();
 3184              		.loc 1 1577 3 is_stmt 1 view .LVU1030
 3185 00d2 8346     		mov	fp, r0
 3186 00d4 20B1     		cbz	r0, .L132
1577:Src/app.c     ****   __enable_irq();
 3187              		.loc 1 1577 3 is_stmt 0 discriminator 1 view .LVU1031
 3188 00d6 40F22961 		movw	r1, #1577
 3189 00da 714B     		ldr	r3, .L144+40
 3190 00dc 714A     		ldr	r2, .L144+44
 3191 00de C0E7     		b	.L143
 3192              	.L132:
1578:Src/app.c     **** }
 3193              		.loc 1 1578 3 is_stmt 1 view .LVU1032
 3194              	.LBB507:
 3195              	.LBI507:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3196              		.loc 4 949 27 view .LVU1033
 3197              	.LBB508:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc3ptn5O.s 			page 137


 3198              		.loc 4 951 3 view .LVU1034
 3199              		.syntax unified
 3200              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3201 00e0 62B6     		cpsie i
 3202              	@ 0 "" 2
 3203              	.LVL272:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3204              		.loc 4 951 3 is_stmt 0 view .LVU1035
 3205              		.thumb
 3206              		.syntax unified
 3207              	.LBE508:
 3208              	.LBE507:
 3209              	.LBE509:
 3210              	.LBE511:
1649:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
 3211              		.loc 1 1649 5 is_stmt 1 view .LVU1036
 3212              	.LBB512:
 3213              	.LBI489:
 785:Src/app.c     **** {
 3214              		.loc 1 785 13 view .LVU1037
 3215              	.LBB501:
 787:Src/app.c     ****   int line_nb = 0;
 3216              		.loc 1 787 3 view .LVU1038
 788:Src/app.c     ****   float nn_fps;
 3217              		.loc 1 788 3 view .LVU1039
 789:Src/app.c     ****   int i;
 3218              		.loc 1 789 3 view .LVU1040
 790:Src/app.c     **** 
 3219              		.loc 1 790 3 view .LVU1041
 793:Src/app.c     **** 
 3220              		.loc 1 793 3 view .LVU1042
 3221              	.LBB494:
 3222              	.LBB495:
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3223              		.loc 1 443 24 is_stmt 0 view .LVU1043
 3224 00e2 714C     		ldr	r4, .L144+48
 3225              	.LVL273:
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3226              		.loc 1 443 24 view .LVU1044
 3227              	.LBE495:
 3228              	.LBE494:
 793:Src/app.c     **** 
 3229              		.loc 1 793 3 view .LVU1045
 3230 00e4 4FF4F073 		mov	r3, #480
 3231 00e8 4FF44872 		mov	r2, #800
 3232 00ec 0146     		mov	r1, r0
 3233 00ee 0090     		str	r0, [sp]
 3234              	.LBB498:
 3235              	.LBB496:
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3236              		.loc 1 443 24 view .LVU1046
 3237 00f0 04F13805 		add	r5, r4, #56
 3238              	.LVL274:
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3239              		.loc 1 443 24 view .LVU1047
 3240 00f4 04F12006 		add	r6, r4, #32
 3241              	.LBE496:
ARM GAS  /tmp/cc3ptn5O.s 			page 138


 3242              	.LBE498:
 793:Src/app.c     **** 
 3243              		.loc 1 793 3 view .LVU1048
 3244 00f8 FFF7FEFF 		bl	UTIL_LCD_FillRect
 3245              	.LVL275:
 796:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 3246              		.loc 1 796 3 is_stmt 1 view .LVU1049
 3247              	.LBB499:
 3248              	.LBI494:
 439:Src/app.c     **** {
 3249              		.loc 1 439 13 view .LVU1050
 3250              	.LBB497:
 441:Src/app.c     **** 
 3251              		.loc 1 441 3 view .LVU1051
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3252              		.loc 1 443 3 view .LVU1052
 443:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3253              		.loc 1 443 24 is_stmt 0 view .LVU1053
 3254 00fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3255 00fe 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3256 0100 96E80300 		ldm	r6, {r0, r1}
 3257 0104 85E80300 		stm	r5, {r0, r1}
 444:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3258              		.loc 1 444 3 is_stmt 1 view .LVU1054
 444:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3259              		.loc 1 444 32 is_stmt 0 view .LVU1055
 3260 0108 FFF7FEFF 		bl	TIM4_Get_Value
 3261              	.LVL276:
 3262 010c 0546     		mov	r5, r0
 444:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3263              		.loc 1 444 30 discriminator 1 view .LVU1056
 3264 010e C4E9080B 		strd	r0, fp, [r4, #32]
 445:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3265              		.loc 1 445 3 is_stmt 1 view .LVU1057
 445:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3266              		.loc 1 445 62 is_stmt 0 view .LVU1058
 3267 0112 FFF7FEFF 		bl	ulTaskGetIdleRunTimeCounter
 3268              	.LVL277:
 445:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3269              		.loc 1 445 60 discriminator 1 view .LVU1059
 3270 0116 2D1A     		subs	r5, r5, r0
 3271 0118 63EB0303 		sbc	r3, r3, r3
 445:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3272              		.loc 1 445 31 discriminator 1 view .LVU1060
 3273 011c C4E90A53 		strd	r5, r3, [r4, #40]
 446:Src/app.c     **** 
 3274              		.loc 1 446 3 is_stmt 1 view .LVU1061
 446:Src/app.c     **** 
 3275              		.loc 1 446 31 is_stmt 0 view .LVU1062
 3276 0120 FFF7FEFF 		bl	HAL_GetTick
 3277              	.LVL278:
 448:Src/app.c     ****     return ;
 3278              		.loc 1 448 33 view .LVU1063
 3279 0124 A36C     		ldr	r3, [r4, #72]
 3280 0126 226E     		ldr	r2, [r4, #96]
 446:Src/app.c     **** 
 3281              		.loc 1 446 29 discriminator 1 view .LVU1064
ARM GAS  /tmp/cc3ptn5O.s 			page 139


 3282 0128 2063     		str	r0, [r4, #48]
 448:Src/app.c     ****     return ;
 3283              		.loc 1 448 3 is_stmt 1 view .LVU1065
 448:Src/app.c     ****     return ;
 3284              		.loc 1 448 33 is_stmt 0 view .LVU1066
 3285 012a 9B1A     		subs	r3, r3, r2
 448:Src/app.c     ****     return ;
 3286              		.loc 1 448 6 view .LVU1067
 3287 012c B3F57A7F 		cmp	r3, #1000
 3288 0130 06D3     		bcc	.L133
 452:Src/app.c     **** }
 3289              		.loc 1 452 55 view .LVU1068
 3290 0132 9022     		movs	r2, #144
 3291 0134 04F13801 		add	r1, r4, #56
 3292 0138 04F15000 		add	r0, r4, #80
 3293 013c FFF7FEFF 		bl	memmove
 3294              	.LVL279:
 3295              	.L133:
 452:Src/app.c     **** }
 3296              		.loc 1 452 55 view .LVU1069
 3297              	.LBE497:
 3298              	.LBE499:
 797:Src/app.c     **** 
 3299              		.loc 1 797 3 is_stmt 1 view .LVU1070
 3300              	.LBB500:
 3301              	.LBI491:
 455:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 3302              		.loc 1 455 13 view .LVU1071
 3303              	.LBB493:
 458:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 3304              		.loc 1 458 3 view .LVU1072
 461:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 3305              		.loc 1 461 3 view .LVU1073
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3306              		.loc 1 462 5 view .LVU1074
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3307              		.loc 1 462 66 is_stmt 0 view .LVU1075
 3308 0140 D4E91C23 		ldrd	r2, r3, [r4, #112]
 3309 0144 D4E91601 		ldrd	r0, r1, [r4, #88]
 3310 0148 801A     		subs	r0, r0, r2
 3311 014a 61EB0301 		sbc	r1, r1, r3
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3312              		.loc 1 462 35 view .LVU1076
 3313 014e FFF7FEFF 		bl	__aeabi_ul2d
 3314              	.LVL280:
 463:Src/app.c     ****   if (cpu_load_last_five_seconds)
 3315              		.loc 1 463 50 view .LVU1077
 3316 0152 D4E91A32 		ldrd	r3, r2, [r4, #104]
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3317              		.loc 1 462 35 view .LVU1078
 3318 0156 41EC180B 		vmov	d8, r0, r1
 463:Src/app.c     ****   if (cpu_load_last_five_seconds)
 3319              		.loc 1 463 50 view .LVU1079
 3320 015a D4E91401 		ldrd	r0, r1, [r4, #80]
 3321 015e C01A     		subs	r0, r0, r3
 3322 0160 61EB0201 		sbc	r1, r1, r2
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
ARM GAS  /tmp/cc3ptn5O.s 			page 140


 3323              		.loc 1 462 97 view .LVU1080
 3324 0164 FFF7FEFF 		bl	__aeabi_ul2d
 3325              	.LVL281:
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3326              		.loc 1 462 35 view .LVU1081
 3327 0168 28EE098B 		vmul.f64	d8, d8, d9
 462:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3328              		.loc 1 462 97 view .LVU1082
 3329 016c 41EC160B 		vmov	d6, r0, r1
 3330 0170 88EE067B 		vdiv.f64	d7, d8, d6
 3331 0174 B7EEC78B 		vcvt.f32.f64	s16, d7
 3332              	.LVL282:
 464:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 3333              		.loc 1 464 3 is_stmt 1 view .LVU1083
 464:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 3334              		.loc 1 464 3 is_stmt 0 view .LVU1084
 3335              	.LBE493:
 3336              	.LBE500:
 800:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 3337              		.loc 1 800 3 is_stmt 1 view .LVU1085
 800:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 3338              		.loc 1 800 10 is_stmt 0 view .LVU1086
 3339 0178 DDED0B7A 		vldr.32	s15, [sp, #44]
 3340 017c 9FED4B7A 		vldr.32	s14, .L144+52
 3341 0180 C7EE278A 		vdiv.f32	s17, s14, s15
 3342              	.LVL283:
 801:Src/app.c     ****   line_nb += 1;
 3343              		.loc 1 801 3 is_stmt 1 view .LVU1087
 801:Src/app.c     ****   line_nb += 1;
 3344              		.loc 1 801 26 is_stmt 0 view .LVU1088
 3345 0184 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3346              	.LVL284:
 801:Src/app.c     ****   line_nb += 1;
 3347              		.loc 1 801 3 discriminator 1 view .LVU1089
 3348 0188 0021     		movs	r1, #0
 3349 018a 0222     		movs	r2, #2
 3350 018c 0846     		mov	r0, r1
 3351 018e 484B     		ldr	r3, .L144+56
 3352 0190 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3353              	.LVL285:
 802:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 3354              		.loc 1 802 3 is_stmt 1 view .LVU1090
 803:Src/app.c     ****   line_nb += 2;
 3355              		.loc 1 803 3 view .LVU1091
 803:Src/app.c     ****   line_nb += 2;
 3356              		.loc 1 803 26 is_stmt 0 view .LVU1092
 3357 0194 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3358              	.LVL286:
 803:Src/app.c     ****   line_nb += 2;
 3359              		.loc 1 803 3 discriminator 1 view .LVU1093
 3360 0198 B7EEC87A 		vcvt.f64.f32	d7, s16
 3361 019c C188     		ldrh	r1, [r0, #6]
 3362 019e 0222     		movs	r2, #2
 3363 01a0 8DED007B 		vstr.64	d7, [sp]
 3364 01a4 434B     		ldr	r3, .L144+60
 3365 01a6 0020     		movs	r0, #0
 3366 01a8 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
ARM GAS  /tmp/cc3ptn5O.s 			page 141


 3367              	.LVL287:
 804:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 3368              		.loc 1 804 3 is_stmt 1 view .LVU1094
 805:Src/app.c     ****   line_nb += 1;
 3369              		.loc 1 805 3 view .LVU1095
 805:Src/app.c     ****   line_nb += 1;
 3370              		.loc 1 805 26 is_stmt 0 view .LVU1096
 3371 01ac FFF7FEFF 		bl	UTIL_LCD_GetFont
 3372              	.LVL288:
 805:Src/app.c     ****   line_nb += 1;
 3373              		.loc 1 805 26 discriminator 1 view .LVU1097
 3374 01b0 C188     		ldrh	r1, [r0, #6]
 805:Src/app.c     ****   line_nb += 1;
 3375              		.loc 1 805 3 discriminator 1 view .LVU1098
 3376 01b2 0222     		movs	r2, #2
 3377 01b4 404B     		ldr	r3, .L144+64
 3378 01b6 01EB4101 		add	r1, r1, r1, lsl #1
 3379 01ba 0020     		movs	r0, #0
 3380 01bc FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3381              	.LVL289:
 806:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " face_conf %2u", info->pd_ms);
 3382              		.loc 1 806 3 is_stmt 1 view .LVU1099
 807:Src/app.c     ****   line_nb += 1;
 3383              		.loc 1 807 3 view .LVU1100
 807:Src/app.c     ****   line_nb += 1;
 3384              		.loc 1 807 26 is_stmt 0 view .LVU1101
 3385 01c0 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3386              	.LVL290:
 807:Src/app.c     ****   line_nb += 1;
 3387              		.loc 1 807 3 discriminator 1 view .LVU1102
 3388 01c4 0222     		movs	r2, #2
 807:Src/app.c     ****   line_nb += 1;
 3389              		.loc 1 807 26 discriminator 1 view .LVU1103
 3390 01c6 C188     		ldrh	r1, [r0, #6]
 807:Src/app.c     ****   line_nb += 1;
 3391              		.loc 1 807 3 discriminator 1 view .LVU1104
 3392 01c8 0C9B     		ldr	r3, [sp, #48]
 3393 01ca 9140     		lsls	r1, r1, r2
 3394 01cc 0020     		movs	r0, #0
 3395 01ce 0093     		str	r3, [sp]
 3396 01d0 3A4B     		ldr	r3, .L144+68
 3397 01d2 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3398              	.LVL291:
 808:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " yolo_num_detections %2u", info->hl_ms);
 3399              		.loc 1 808 3 is_stmt 1 view .LVU1105
 809:Src/app.c     ****   line_nb += 2;
 3400              		.loc 1 809 3 view .LVU1106
 809:Src/app.c     ****   line_nb += 2;
 3401              		.loc 1 809 26 is_stmt 0 view .LVU1107
 3402 01d6 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3403              	.LVL292:
 809:Src/app.c     ****   line_nb += 2;
 3404              		.loc 1 809 3 discriminator 1 view .LVU1108
 3405 01da 0D9B     		ldr	r3, [sp, #52]
 809:Src/app.c     ****   line_nb += 2;
 3406              		.loc 1 809 26 discriminator 1 view .LVU1109
 3407 01dc C188     		ldrh	r1, [r0, #6]
ARM GAS  /tmp/cc3ptn5O.s 			page 142


 809:Src/app.c     ****   line_nb += 2;
 3408              		.loc 1 809 3 discriminator 1 view .LVU1110
 3409 01de 0222     		movs	r2, #2
 3410 01e0 01EB8101 		add	r1, r1, r1, lsl #2
 3411 01e4 0020     		movs	r0, #0
 3412 01e6 0093     		str	r3, [sp]
 3413 01e8 354B     		ldr	r3, .L144+72
 3414 01ea FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3415              	.LVL293:
 810:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 3416              		.loc 1 810 3 is_stmt 1 view .LVU1111
 811:Src/app.c     ****   line_nb += 2;
 3417              		.loc 1 811 3 view .LVU1112
 811:Src/app.c     ****   line_nb += 2;
 3418              		.loc 1 811 26 is_stmt 0 view .LVU1113
 3419 01ee FFF7FEFF 		bl	UTIL_LCD_GetFont
 3420              	.LVL294:
 811:Src/app.c     ****   line_nb += 2;
 3421              		.loc 1 811 3 discriminator 1 view .LVU1114
 3422 01f2 B7EEE87A 		vcvt.f64.f32	d7, s17
 811:Src/app.c     ****   line_nb += 2;
 3423              		.loc 1 811 26 discriminator 1 view .LVU1115
 3424 01f6 C188     		ldrh	r1, [r0, #6]
 811:Src/app.c     ****   line_nb += 2;
 3425              		.loc 1 811 3 discriminator 1 view .LVU1116
 3426 01f8 324B     		ldr	r3, .L144+76
 3427 01fa 8DED007B 		vstr.64	d7, [sp]
 3428 01fe 0222     		movs	r2, #2
 3429 0200 0020     		movs	r0, #0
 3430 0202 C1EBC101 		rsb	r1, r1, r1, lsl #3
 3431 0206 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3432              	.LVL295:
 812:Src/app.c     ****   if (DBG_INFO) {
 3433              		.loc 1 812 3 is_stmt 1 view .LVU1117
 813:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 3434              		.loc 1 813 3 view .LVU1118
 821:Src/app.c     ****     if (info->hands[i].is_valid)
 3435              		.loc 1 821 3 view .LVU1119
 821:Src/app.c     ****     if (info->hands[i].is_valid)
 3436              		.loc 1 821 17 discriminator 1 view .LVU1120
 3437 020a 129B     		ldr	r3, [sp, #72]
 3438 020c 002B     		cmp	r3, #0
 3439 020e 05DD     		ble	.L134
 822:Src/app.c     ****       display_hand(info, &info->hands[i]);
 3440              		.loc 1 822 5 view .LVU1121
 822:Src/app.c     ****       display_hand(info, &info->hands[i]);
 3441              		.loc 1 822 8 is_stmt 0 view .LVU1122
 3442 0210 149B     		ldr	r3, [sp, #80]
 3443 0212 1BB1     		cbz	r3, .L134
 823:Src/app.c     ****   }
 3444              		.loc 1 823 7 is_stmt 1 view .LVU1123
 3445 0214 14A9     		add	r1, sp, #80
 3446 0216 0BA8     		add	r0, sp, #44
 3447              	.LVL296:
 823:Src/app.c     ****   }
 3448              		.loc 1 823 7 is_stmt 0 view .LVU1124
 3449 0218 FFF7FEFF 		bl	display_hand
ARM GAS  /tmp/cc3ptn5O.s 			page 143


 3450              	.LVL297:
 821:Src/app.c     ****     if (info->hands[i].is_valid)
 3451              		.loc 1 821 38 is_stmt 1 discriminator 2 view .LVU1125
 821:Src/app.c     ****     if (info->hands[i].is_valid)
 3452              		.loc 1 821 17 discriminator 1 view .LVU1126
 3453              	.L134:
 826:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 3454              		.loc 1 826 3 view .LVU1127
 826:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 3455              		.loc 1 826 3 is_stmt 0 view .LVU1128
 3456              	.LBE501:
 3457              	.LBE512:
1650:Src/app.c     ****     dp_commit_drawing_area();
 3458              		.loc 1 1650 5 is_stmt 1 view .LVU1129
 3459              	.LBB513:
 3460              	.LBI513:
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3461              		.loc 3 388 27 view .LVU1130
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3462              		.loc 3 391 5 view .LVU1131
 3463              	.LBB514:
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3464              		.loc 3 392 8 view .LVU1132
 3465              	.LBE514:
 3466              	.LBE513:
1650:Src/app.c     ****     dp_commit_drawing_area();
 3467              		.loc 1 1650 42 is_stmt 0 view .LVU1133
 3468 021c D9F80030 		ldr	r3, [r9]
 3469 0220 1E4A     		ldr	r2, .L144+36
 3470 0222 02FB0383 		mla	r3, r2, r3, r8
 3471              	.LVL298:
 3472              	.LBB522:
 3473              	.LBB521:
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3474              		.loc 3 393 7 is_stmt 1 view .LVU1134
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3475              		.loc 3 395 7 view .LVU1135
 3476              	.LBB515:
 3477              	.LBI515:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3478              		.loc 4 269 27 view .LVU1136
 3479              	.LBB516:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3480              		.loc 4 271 3 view .LVU1137
 3481              		.syntax unified
 3482              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3483 0226 BFF34F8F 		dsb 0xF
 3484              	@ 0 "" 2
 3485              		.thumb
 3486              		.syntax unified
 3487              	.LBE516:
 3488              	.LBE515:
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3489              		.loc 3 398 22 is_stmt 0 view .LVU1138
 3490 022a 45F6C05E 		movw	lr, #24000
 3491 022e 4EF001E0 		dls	lr, lr
 3492 0232 254A     		ldr	r2, .L144+80
ARM GAS  /tmp/cc3ptn5O.s 			page 144


 3493              	.LVL299:
 3494              	.L136:
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 3495              		.loc 3 397 7 is_stmt 1 view .LVU1139
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3496              		.loc 3 398 9 view .LVU1140
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3497              		.loc 3 398 22 is_stmt 0 view .LVU1141
 3498 0234 C2F86832 		str	r3, [r2, #616]
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3499              		.loc 3 399 9 is_stmt 1 view .LVU1142
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3500              		.loc 3 399 17 is_stmt 0 view .LVU1143
 3501 0238 2033     		adds	r3, r3, #32
 3502              	.LVL300:
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3503              		.loc 3 400 9 is_stmt 1 view .LVU1144
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3504              		.loc 3 401 25 discriminator 1 view .LVU1145
 3505 023a 0FF005C8 		le	lr, .L136
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3506              		.loc 3 403 7 view .LVU1146
 3507              	.LBB517:
 3508              	.LBI517:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3509              		.loc 4 269 27 view .LVU1147
 3510              	.LBB518:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3511              		.loc 4 271 3 view .LVU1148
 3512              		.syntax unified
 3513              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3514 023e BFF34F8F 		dsb 0xF
 3515              	@ 0 "" 2
 3516              		.thumb
 3517              		.syntax unified
 3518              	.LBE518:
 3519              	.LBE517:
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 3520              		.loc 3 404 7 view .LVU1149
 3521              	.LBB519:
 3522              	.LBI519:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3523              		.loc 4 258 27 view .LVU1150
 3524              	.LBB520:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3525              		.loc 4 260 3 view .LVU1151
 3526              		.syntax unified
 3527              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3528 0242 BFF36F8F 		isb 0xF
 3529              	@ 0 "" 2
 3530              	.LVL301:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3531              		.loc 4 260 3 is_stmt 0 view .LVU1152
 3532              		.thumb
 3533              		.syntax unified
 3534              	.LBE520:
 3535              	.LBE519:
ARM GAS  /tmp/cc3ptn5O.s 			page 145


 3536              	.LBE521:
 3537              	.LBE522:
1651:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
 3538              		.loc 1 1651 5 is_stmt 1 view .LVU1153
 3539              	.LBB523:
 3540              	.LBI523:
1581:Src/app.c     **** {
 3541              		.loc 1 1581 13 view .LVU1154
 3542              	.LBB524:
1583:Src/app.c     **** 
 3543              		.loc 1 1583 3 view .LVU1155
1585:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
 3544              		.loc 1 1585 3 view .LVU1156
 3545              	.LBB525:
 3546              	.LBI525:
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3547              		.loc 4 960 27 view .LVU1157
 3548              	.LBB526:
 3549              		.loc 4 962 3 view .LVU1158
 3550              		.syntax unified
 3551              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3552 0246 72B6     		cpsid i
 3553              	@ 0 "" 2
 3554              		.thumb
 3555              		.syntax unified
 3556              	.LBE526:
 3557              	.LBE525:
1586:Src/app.c     ****   assert(ret == HAL_OK);
 3558              		.loc 1 1586 3 view .LVU1159
1586:Src/app.c     ****   assert(ret == HAL_OK);
 3559              		.loc 1 1586 9 is_stmt 0 view .LVU1160
 3560 0248 0120     		movs	r0, #1
 3561 024a FFF7FEFF 		bl	SCRL_ReloadLayer
 3562              	.LVL302:
1587:Src/app.c     ****   __enable_irq();
 3563              		.loc 1 1587 3 is_stmt 1 view .LVU1161
 3564 024e 20B1     		cbz	r0, .L137
1587:Src/app.c     ****   __enable_irq();
 3565              		.loc 1 1587 3 is_stmt 0 discriminator 1 view .LVU1162
 3566 0250 40F23361 		movw	r1, #1587
 3567 0254 124B     		ldr	r3, .L144+40
 3568 0256 1D4A     		ldr	r2, .L144+84
 3569 0258 03E7     		b	.L143
 3570              	.L137:
1588:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
 3571              		.loc 1 1588 3 is_stmt 1 view .LVU1163
 3572              	.LBB527:
 3573              	.LBI527:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3574              		.loc 4 949 27 view .LVU1164
 3575              	.LBB528:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3576              		.loc 4 951 3 view .LVU1165
 3577              		.syntax unified
 3578              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3579 025a 62B6     		cpsie i
 3580              	@ 0 "" 2
ARM GAS  /tmp/cc3ptn5O.s 			page 146


 3581              		.thumb
 3582              		.syntax unified
 3583              	.LBE528:
 3584              	.LBE527:
1589:Src/app.c     **** }
 3585              		.loc 1 1589 3 view .LVU1166
1589:Src/app.c     **** }
 3586              		.loc 1 1589 28 is_stmt 0 view .LVU1167
 3587 025c D9F80030 		ldr	r3, [r9]
 3588 0260 C3F10103 		rsb	r3, r3, #1
1589:Src/app.c     **** }
 3589              		.loc 1 1589 24 view .LVU1168
 3590 0264 C9F80030 		str	r3, [r9]
 3591              	.LVL303:
1589:Src/app.c     **** }
 3592              		.loc 1 1589 24 view .LVU1169
 3593              	.LBE524:
 3594              	.LBE523:
1652:Src/app.c     ****   }
 3595              		.loc 1 1652 5 is_stmt 1 view .LVU1170
1652:Src/app.c     ****   }
 3596              		.loc 1 1652 15 is_stmt 0 view .LVU1171
 3597 0268 FFF7FEFF 		bl	HAL_GetTick
 3598              	.LVL304:
1652:Src/app.c     ****   }
 3599              		.loc 1 1652 13 discriminator 1 view .LVU1172
 3600 026c A0EB0A04 		sub	r4, r0, r10
 3601              	.LVL305:
1632:Src/app.c     ****   {
 3602              		.loc 1 1632 9 is_stmt 1 view .LVU1173
1634:Src/app.c     ****     assert(ret == pdTRUE);
 3603              		.loc 1 1634 9 is_stmt 0 view .LVU1174
 3604 0270 ECE6     		b	.L138
 3605              	.L145:
 3606 0272 00BFAFF3 		.align	3
 3606      0080
 3607              	.L144:
 3608 0278 00000000 		.word	0
 3609 027c 00005940 		.word	1079574528
 3610 0280 00000000 		.word	on_ld_toggle_button_click
 3611 0284 00000000 		.word	disp
 3612 0288 00000000 		.word	on_pd_toggle_button_click
 3613 028c 00000000 		.word	.LC1
 3614 0290 00000000 		.word	__func__.18
 3615 0294 0E000000 		.word	.LC2
 3616 0298 A8000000 		.word	disp+168
 3617 029c 00B80B00 		.word	768000
 3618 02a0 00000000 		.word	.LC18
 3619 02a4 00000000 		.word	__func__.14
 3620 02a8 00000000 		.word	cpu_load
 3621 02ac 00007A44 		.word	1148846080
 3622 02b0 0E000000 		.word	.LC19
 3623 02b4 17000000 		.word	.LC20
 3624 02b8 21000000 		.word	.LC21
 3625 02bc 2C000000 		.word	.LC22
 3626 02c0 3B000000 		.word	.LC23
 3627 02c4 54000000 		.word	.LC24
ARM GAS  /tmp/cc3ptn5O.s 			page 147


 3628 02c8 00ED00E0 		.word	-536810240
 3629 02cc 00000000 		.word	__func__.13
 3630 02d0 00000000 		.word	lcd_fg_buffer_rd_idx
 3631 02d4 00181500 		.word	lcd_fg_buffer
 3632              		.cfi_endproc
 3633              	.LFE7409:
 3635              		.section	.rodata.app_run.str1.1,"aMS",%progbits,1
 3636              	.LC25:
 3637 0000 496E6974 		.ascii	"Init application\000"
 3637      20617070 
 3637      6C696361 
 3637      74696F6E 
 3637      00
 3638              	.LC26:
 3639 0011 6973705F 		.ascii	"isp_sem\000"
 3639      73656D00 
 3640              	.LC27:
 3641 0019 64697370 		.ascii	"disp.update\000"
 3641      2E757064 
 3641      61746500 
 3642              	.LC28:
 3643 0025 64697370 		.ascii	"disp.lock\000"
 3643      2E6C6F63 
 3643      6B00
 3644              	.LC29:
 3645 002f 6E6E00   		.ascii	"nn\000"
 3646              	.LC30:
 3647 0032 68646C20 		.ascii	"hdl != NULL\000"
 3647      213D204E 
 3647      554C4C00 
 3648              	.LC31:
 3649 003e 647000   		.ascii	"dp\000"
 3650              	.LC32:
 3651 0041 69737000 		.ascii	"isp\000"
 3652              		.section	.text.app_run,"ax",%progbits
 3653              		.align	1
 3654              		.global	app_run
 3655              		.syntax unified
 3656              		.thumb
 3657              		.thumb_func
 3659              	app_run:
 3660              	.LFB7412:
1665:Src/app.c     ****   }
1666:Src/app.c     **** }
1667:Src/app.c     **** 
1668:Src/app.c     **** static void Display_init()
1669:Src/app.c     **** {
1670:Src/app.c     ****   SCRL_LayerConfig layers_config[2] = {
1671:Src/app.c     ****     {
1672:Src/app.c     ****       .origin = {lcd_bg_area.X0, lcd_bg_area.Y0},
1673:Src/app.c     ****       .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1674:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1675:Src/app.c     ****       .format = SCRL_RGB888,
1676:Src/app.c     **** #else
1677:Src/app.c     ****       .format = SCRL_ARGB8888,
1678:Src/app.c     **** #endif
1679:Src/app.c     ****       .address = lcd_bg_buffer[lcd_bg_buffer_disp_idx],
ARM GAS  /tmp/cc3ptn5O.s 			page 148


1680:Src/app.c     ****     },
1681:Src/app.c     ****     {
1682:Src/app.c     ****       .origin = {lcd_fg_area.X0, lcd_fg_area.Y0},
1683:Src/app.c     ****       .size = {lcd_fg_area.XSize, lcd_fg_area.YSize},
1684:Src/app.c     ****       .format = SCRL_ARGB4444,
1685:Src/app.c     ****       .address = lcd_fg_buffer[1],
1686:Src/app.c     ****     },
1687:Src/app.c     ****   };
1688:Src/app.c     ****   SCRL_ScreenConfig screen_config = {
1689:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1690:Src/app.c     **** #ifdef SCR_LIB_USE_SPI
1691:Src/app.c     ****     .format = SCRL_RGB565,
1692:Src/app.c     **** #else
1693:Src/app.c     ****      .format = SCRL_YUV422, /* Use SCRL_RGB565 if host support this format to reduce cpu load */
1694:Src/app.c     **** #endif
1695:Src/app.c     ****     .address = screen_buffer,
1696:Src/app.c     ****     .fps = CAMERA_FPS,
1697:Src/app.c     ****   };
1698:Src/app.c     ****   int ret;
1699:Src/app.c     **** 
1700:Src/app.c     ****   ret = SCRL_Init((SCRL_LayerConfig *[2]){&layers_config[0], &layers_config[1]}, &screen_config);
1701:Src/app.c     ****   assert(ret == 0);
1702:Src/app.c     **** 
1703:Src/app.c     ****   UTIL_LCD_SetLayer(SCRL_LAYER_1);
1704:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
1705:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
1706:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
1707:Src/app.c     **** }
1708:Src/app.c     **** 
1709:Src/app.c     **** void app_run()
1710:Src/app.c     **** {
 3661              		.loc 1 1710 1 is_stmt 1 view -0
 3662              		.cfi_startproc
 3663              		@ args = 0, pretend = 0, frame = 56
 3664              		@ frame_needed = 0, uses_anonymous_args = 0
1711:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3665              		.loc 1 1711 3 view .LVU1176
 3666              	.LVL306:
1712:Src/app.c     ****   UBaseType_t dp_priority = FREERTOS_PRIORITY(-2);
 3667              		.loc 1 1712 3 view .LVU1177
1713:Src/app.c     ****   UBaseType_t nn_priority = FREERTOS_PRIORITY(1);
 3668              		.loc 1 1713 3 view .LVU1178
1714:Src/app.c     ****   TaskHandle_t hdl;
 3669              		.loc 1 1714 3 view .LVU1179
1715:Src/app.c     ****   int ret;
 3670              		.loc 1 1715 3 view .LVU1180
1716:Src/app.c     **** 
1717:Src/app.c     ****   printf("Init application\n");
 3671              		.loc 1 1717 3 view .LVU1181
1710:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3672              		.loc 1 1710 1 is_stmt 0 view .LVU1182
 3673 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3674              		.cfi_def_cfa_offset 28
 3675              		.cfi_offset 4, -28
 3676              		.cfi_offset 5, -24
 3677              		.cfi_offset 6, -20
 3678              		.cfi_offset 7, -16
ARM GAS  /tmp/cc3ptn5O.s 			page 149


 3679              		.cfi_offset 8, -12
 3680              		.cfi_offset 9, -8
 3681              		.cfi_offset 14, -4
1718:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
1719:Src/app.c     ****   CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 3682              		.loc 1 1719 12 view .LVU1183
 3683 0004 854D     		ldr	r5, .L166
1710:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3684              		.loc 1 1710 1 view .LVU1184
 3685 0006 93B0     		sub	sp, sp, #76
 3686              		.cfi_def_cfa_offset 104
1717:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
 3687              		.loc 1 1717 3 view .LVU1185
 3688 0008 8548     		ldr	r0, .L166+4
 3689 000a FFF7FEFF 		bl	puts
 3690              	.LVL307:
 3691              		.loc 1 1719 3 is_stmt 1 view .LVU1186
 3692              		.loc 1 1719 12 is_stmt 0 view .LVU1187
 3693 000e D5F8FC30 		ldr	r3, [r5, #252]
1720:Src/app.c     **** 
1721:Src/app.c     ****   /* screen init */
1722:Src/app.c     ****   memset(lcd_bg_buffer, 0, sizeof(lcd_bg_buffer));
 3694              		.loc 1 1722 3 view .LVU1188
 3695 0012 844C     		ldr	r4, .L166+8
1719:Src/app.c     **** 
 3696              		.loc 1 1719 20 view .LVU1189
 3697 0014 43F08073 		orr	r3, r3, #16777216
 3698              		.loc 1 1722 3 view .LVU1190
 3699 0018 0021     		movs	r1, #0
 3700 001a 2046     		mov	r0, r4
 3701 001c 824A     		ldr	r2, .L166+12
1719:Src/app.c     **** 
 3702              		.loc 1 1719 20 view .LVU1191
 3703 001e C5F8FC30 		str	r3, [r5, #252]
 3704              		.loc 1 1722 3 is_stmt 1 view .LVU1192
 3705 0022 FFF7FEFF 		bl	memset
 3706              	.LVL308:
1723:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_bg_buffer, sizeof(lcd_bg_buffer)));
 3707              		.loc 1 1723 3 view .LVU1193
 3708              		.loc 1 1723 3 view .LVU1194
 3709              		.loc 1 1723 3 discriminator 1 view .LVU1195
 3710              	.LBB551:
 3711              	.LBI551:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3712              		.loc 3 418 27 view .LVU1196
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3713              		.loc 3 421 5 view .LVU1197
 3714              	.LBB552:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3715              		.loc 3 422 8 view .LVU1198
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3716              		.loc 3 423 7 view .LVU1199
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3717              		.loc 3 425 7 view .LVU1200
 3718              	.LBB553:
 3719              	.LBI553:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc3ptn5O.s 			page 150


 3720              		.loc 4 269 27 view .LVU1201
 3721              	.LBB554:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3722              		.loc 4 271 3 view .LVU1202
 3723              		.syntax unified
 3724              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3725 0026 BFF34F8F 		dsb 0xF
 3726              	@ 0 "" 2
 3727              		.thumb
 3728              		.syntax unified
 3729              	.LBE554:
 3730              	.LBE553:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3731              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1203
 3732 002a DFF880E2 		ldr	lr, .L166+144
 3733              	.LBB556:
 3734              	.LBB555:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3735              		.loc 4 272 1 view .LVU1204
 3736 002e 0023     		movs	r3, #0
 3737              	.LBE555:
 3738              	.LBE556:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3739              		.loc 3 431 25 discriminator 1 view .LVU1205
 3740 0030 4EF001E0 		dls	lr, lr
 3741              	.LVL309:
 3742              	.L147:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3743              		.loc 3 431 25 discriminator 1 view .LVU1206
 3744 0034 E218     		adds	r2, r4, r3
 3745              	.LVL310:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 3746              		.loc 3 427 7 is_stmt 1 view .LVU1207
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3747              		.loc 3 428 9 view .LVU1208
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3748              		.loc 3 428 23 is_stmt 0 view .LVU1209
 3749 0036 C5F87022 		str	r2, [r5, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 3750              		.loc 3 429 9 is_stmt 1 view .LVU1210
 3751              	.LVL311:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3752              		.loc 3 430 9 view .LVU1211
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3753              		.loc 3 431 25 discriminator 1 view .LVU1212
 3754 003a 2033     		adds	r3, r3, #32
 3755              	.LVL312:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3756              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1213
 3757 003c 0FF007C0 		le	lr, .L147
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3758              		.loc 3 433 7 is_stmt 1 view .LVU1214
 3759              	.LBB557:
 3760              	.LBI557:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3761              		.loc 4 269 27 view .LVU1215
 3762              	.LBB558:
ARM GAS  /tmp/cc3ptn5O.s 			page 151


 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3763              		.loc 4 271 3 view .LVU1216
 3764              		.syntax unified
 3765              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3766 0040 BFF34F8F 		dsb 0xF
 3767              	@ 0 "" 2
 3768              		.thumb
 3769              		.syntax unified
 3770              	.LBE558:
 3771              	.LBE557:
 3772              		.loc 3 434 7 view .LVU1217
 3773              	.LBB559:
 3774              	.LBI559:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3775              		.loc 4 258 27 view .LVU1218
 3776              	.LBB560:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3777              		.loc 4 260 3 view .LVU1219
 3778              		.syntax unified
 3779              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3780 0044 BFF36F8F 		isb 0xF
 3781              	@ 0 "" 2
 3782              	.LVL313:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3783              		.loc 4 260 3 is_stmt 0 view .LVU1220
 3784              		.thumb
 3785              		.syntax unified
 3786              	.LBE560:
 3787              	.LBE559:
 3788              	.LBE552:
 3789              	.LBE551:
 3790              		.loc 1 1723 3 is_stmt 1 discriminator 3 view .LVU1221
1724:Src/app.c     ****   memset(lcd_fg_buffer, 0, sizeof(lcd_fg_buffer));
 3791              		.loc 1 1724 3 view .LVU1222
 3792 0048 784D     		ldr	r5, .L166+16
 3793 004a 0021     		movs	r1, #0
 3794 004c 2846     		mov	r0, r5
 3795 004e 784A     		ldr	r2, .L166+20
 3796 0050 FFF7FEFF 		bl	memset
 3797              	.LVL314:
1725:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_fg_buffer, sizeof(lcd_fg_buffer)));
 3798              		.loc 1 1725 3 view .LVU1223
 3799              		.loc 1 1725 3 view .LVU1224
 3800              		.loc 1 1725 3 discriminator 1 view .LVU1225
 3801              	.LBB561:
 3802              	.LBI561:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3803              		.loc 3 418 27 view .LVU1226
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3804              		.loc 3 421 5 view .LVU1227
 3805              	.LBB562:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3806              		.loc 3 422 8 view .LVU1228
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3807              		.loc 3 423 7 view .LVU1229
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3808              		.loc 3 425 7 view .LVU1230
ARM GAS  /tmp/cc3ptn5O.s 			page 152


 3809              	.LBB563:
 3810              	.LBI563:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3811              		.loc 4 269 27 view .LVU1231
 3812              	.LBB564:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3813              		.loc 4 271 3 view .LVU1232
 3814              		.syntax unified
 3815              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3816 0054 BFF34F8F 		dsb 0xF
 3817              	@ 0 "" 2
 3818              		.thumb
 3819              		.syntax unified
 3820              	.LBE564:
 3821              	.LBE563:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3822              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1233
 3823 0058 4BF6803E 		movw	lr, #48000
 3824              	.LBB566:
 3825              	.LBB565:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3826              		.loc 4 272 1 view .LVU1234
 3827 005c 0023     		movs	r3, #0
 3828              	.LBE565:
 3829              	.LBE566:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3830              		.loc 3 431 25 discriminator 1 view .LVU1235
 3831 005e 4EF001E0 		dls	lr, lr
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3832              		.loc 3 428 23 view .LVU1236
 3833 0062 6E4A     		ldr	r2, .L166
 3834              	.LVL315:
 3835              	.L148:
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3836              		.loc 3 428 23 view .LVU1237
 3837 0064 E918     		adds	r1, r5, r3
 3838              	.LVL316:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 3839              		.loc 3 427 7 is_stmt 1 view .LVU1238
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3840              		.loc 3 428 9 view .LVU1239
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3841              		.loc 3 428 23 is_stmt 0 view .LVU1240
 3842 0066 C2F87012 		str	r1, [r2, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 3843              		.loc 3 429 9 is_stmt 1 view .LVU1241
 3844              	.LVL317:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3845              		.loc 3 430 9 view .LVU1242
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3846              		.loc 3 431 25 discriminator 1 view .LVU1243
 3847 006a 2033     		adds	r3, r3, #32
 3848              	.LVL318:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3849              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1244
 3850 006c 0FF007C0 		le	lr, .L148
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
ARM GAS  /tmp/cc3ptn5O.s 			page 153


 3851              		.loc 3 433 7 is_stmt 1 view .LVU1245
 3852              	.LBB567:
 3853              	.LBI567:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3854              		.loc 4 269 27 view .LVU1246
 3855              	.LBB568:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3856              		.loc 4 271 3 view .LVU1247
 3857              		.syntax unified
 3858              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3859 0070 BFF34F8F 		dsb 0xF
 3860              	@ 0 "" 2
 3861              		.thumb
 3862              		.syntax unified
 3863              	.LBE568:
 3864              	.LBE567:
 3865              		.loc 3 434 7 view .LVU1248
 3866              	.LBB569:
 3867              	.LBI569:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3868              		.loc 4 258 27 view .LVU1249
 3869              	.LBB570:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3870              		.loc 4 260 3 view .LVU1250
 3871              		.syntax unified
 3872              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3873 0074 BFF36F8F 		isb 0xF
 3874              	@ 0 "" 2
 3875              	.LVL319:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3876              		.loc 4 260 3 is_stmt 0 view .LVU1251
 3877              		.thumb
 3878              		.syntax unified
 3879              	.LBE570:
 3880              	.LBE569:
 3881              	.LBE562:
 3882              	.LBE561:
 3883              		.loc 1 1725 3 is_stmt 1 discriminator 3 view .LVU1252
1726:Src/app.c     ****   Display_init();
 3884              		.loc 1 1726 3 view .LVU1253
 3885              	.LBB571:
 3886              	.LBI571:
1668:Src/app.c     **** {
 3887              		.loc 1 1668 13 view .LVU1254
 3888              	.LBB572:
1670:Src/app.c     ****     {
 3889              		.loc 1 1670 3 view .LVU1255
1670:Src/app.c     ****     {
 3890              		.loc 1 1670 20 is_stmt 0 view .LVU1256
 3891 0078 0320     		movs	r0, #3
 3892 007a 0021     		movs	r1, #0
 3893 007c 0126     		movs	r6, #1
1688:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3894              		.loc 1 1688 21 view .LVU1257
 3895 007e 0227     		movs	r7, #2
 3896 0080 4FF01E09 		mov	r9, #30
1670:Src/app.c     ****     {
ARM GAS  /tmp/cc3ptn5O.s 			page 154


 3897              		.loc 1 1670 20 view .LVU1258
 3898 0084 8DF83000 		strb	r0, [sp, #48]
1679:Src/app.c     ****     },
 3899              		.loc 1 1679 31 view .LVU1259
 3900 0088 6A48     		ldr	r0, .L166+24
1670:Src/app.c     ****     {
 3901              		.loc 1 1670 20 view .LVU1260
 3902 008a 6B4A     		ldr	r2, .L166+28
1679:Src/app.c     ****     },
 3903              		.loc 1 1679 18 view .LVU1261
 3904 008c 0068     		ldr	r0, [r0]
1670:Src/app.c     ****     {
 3905              		.loc 1 1670 20 view .LVU1262
 3906 008e CDE90A12 		strd	r1, r2, [sp, #40]
1679:Src/app.c     ****     },
 3907              		.loc 1 1679 18 view .LVU1263
 3908 0092 03FB0044 		mla	r4, r3, r0, r4
1670:Src/app.c     ****     {
 3909              		.loc 1 1670 20 view .LVU1264
 3910 0096 694B     		ldr	r3, .L166+32
 3911 0098 CDE90D41 		strd	r4, r1, [sp, #52]
 3912 009c 1193     		str	r3, [sp, #68]
1688:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3913              		.loc 1 1688 3 is_stmt 1 view .LVU1265
1688:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3914              		.loc 1 1688 21 is_stmt 0 view .LVU1266
 3915 009e 684B     		ldr	r3, .L166+36
1700:Src/app.c     ****   assert(ret == 0);
 3916              		.loc 1 1700 9 view .LVU1267
 3917 00a0 06A9     		add	r1, sp, #24
1688:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3918              		.loc 1 1688 21 view .LVU1268
 3919 00a2 0893     		str	r3, [sp, #32]
1700:Src/app.c     ****   assert(ret == 0);
 3920              		.loc 1 1700 42 view .LVU1269
 3921 00a4 0AAB     		add	r3, sp, #40
 3922 00a6 0493     		str	r3, [sp, #16]
1700:Src/app.c     ****   assert(ret == 0);
 3923              		.loc 1 1700 9 view .LVU1270
 3924 00a8 04A8     		add	r0, sp, #16
1700:Src/app.c     ****   assert(ret == 0);
 3925              		.loc 1 1700 42 view .LVU1271
 3926 00aa 0EAB     		add	r3, sp, #56
1670:Src/app.c     ****     {
 3927              		.loc 1 1670 20 view .LVU1272
 3928 00ac 0F92     		str	r2, [sp, #60]
 3929 00ae 8DF84060 		strb	r6, [sp, #64]
1688:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3930              		.loc 1 1688 21 view .LVU1273
 3931 00b2 0692     		str	r2, [sp, #24]
 3932 00b4 8DF81C70 		strb	r7, [sp, #28]
 3933 00b8 ADF82490 		strh	r9, [sp, #36]	@ movhi
1698:Src/app.c     **** 
 3934              		.loc 1 1698 3 is_stmt 1 view .LVU1274
1700:Src/app.c     ****   assert(ret == 0);
 3935              		.loc 1 1700 3 view .LVU1275
1700:Src/app.c     ****   assert(ret == 0);
ARM GAS  /tmp/cc3ptn5O.s 			page 155


 3936              		.loc 1 1700 42 is_stmt 0 view .LVU1276
 3937 00bc 0593     		str	r3, [sp, #20]
1700:Src/app.c     ****   assert(ret == 0);
 3938              		.loc 1 1700 9 view .LVU1277
 3939 00be FFF7FEFF 		bl	SCRL_Init
 3940              	.LVL320:
1701:Src/app.c     **** 
 3941              		.loc 1 1701 3 is_stmt 1 view .LVU1278
 3942 00c2 0446     		mov	r4, r0
 3943 00c4 30B1     		cbz	r0, .L149
1701:Src/app.c     **** 
 3944              		.loc 1 1701 3 is_stmt 0 discriminator 1 view .LVU1279
 3945 00c6 40F2A561 		movw	r1, #1701
 3946 00ca 5E4B     		ldr	r3, .L166+40
 3947 00cc 5E4A     		ldr	r2, .L166+44
 3948              	.LVL321:
 3949              	.L165:
1701:Src/app.c     **** 
 3950              		.loc 1 1701 3 discriminator 1 view .LVU1280
 3951              	.LBE572:
 3952              	.LBE571:
1727:Src/app.c     **** 
1728:Src/app.c     ****   /* create buffer queues */
1729:Src/app.c     ****   ret = bqueue_init(&nn_input_queue, 2, (uint8_t *[2]){nn_input_buffers[0], nn_input_buffers[1]});
1730:Src/app.c     ****   assert(ret == 0);
 3953              		.loc 1 1730 3 discriminator 1 view .LVU1281
 3954 00ce 5F48     		ldr	r0, .L166+48
 3955 00d0 FFF7FEFF 		bl	__assert_func
 3956              	.LVL322:
 3957              	.L149:
 3958              	.LBB575:
 3959              	.LBB573:
1703:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 3960              		.loc 1 1703 3 is_stmt 1 view .LVU1282
 3961 00d4 3046     		mov	r0, r6
 3962              	.LVL323:
1703:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 3963              		.loc 1 1703 3 is_stmt 0 view .LVU1283
 3964 00d6 FFF7FEFF 		bl	UTIL_LCD_SetLayer
 3965              	.LVL324:
1704:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
 3966              		.loc 1 1704 3 is_stmt 1 view .LVU1284
 3967 00da 2046     		mov	r0, r4
 3968 00dc FFF7FEFF 		bl	UTIL_LCD_Clear
 3969              	.LVL325:
1705:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 3970              		.loc 1 1705 3 view .LVU1285
 3971              	.LBE573:
 3972              	.LBE575:
 3973              	.LBB576:
 3974              	.LBB577:
 476:Src/app.c     ****   if (!bq->free)
 3975              		.loc 1 476 14 is_stmt 0 view .LVU1286
 3976 00e0 DFF8CC81 		ldr	r8, .L166+148
 3977              	.LBE577:
 3978              	.LBE576:
 3979              	.LBB582:
ARM GAS  /tmp/cc3ptn5O.s 			page 156


 3980              	.LBB574:
1705:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 3981              		.loc 1 1705 3 view .LVU1287
 3982 00e4 5A48     		ldr	r0, .L166+52
 3983 00e6 FFF7FEFF 		bl	UTIL_LCD_SetFont
 3984              	.LVL326:
1706:Src/app.c     **** }
 3985              		.loc 1 1706 3 is_stmt 1 view .LVU1288
 3986 00ea 4FF0FF30 		mov	r0, #-1
 3987 00ee FFF7FEFF 		bl	UTIL_LCD_SetTextColor
 3988              	.LVL327:
1706:Src/app.c     **** }
 3989              		.loc 1 1706 3 is_stmt 0 view .LVU1289
 3990              	.LBE574:
 3991              	.LBE582:
1729:Src/app.c     ****   assert(ret == 0);
 3992              		.loc 1 1729 3 is_stmt 1 view .LVU1290
 3993              	.LBB583:
 3994              	.LBI576:
 469:Src/app.c     **** {
 3995              		.loc 1 469 12 view .LVU1291
 3996              	.LBB578:
 471:Src/app.c     **** 
 3997              		.loc 1 471 3 view .LVU1292
 473:Src/app.c     ****     return -1;
 3998              		.loc 1 473 3 view .LVU1293
 476:Src/app.c     ****   if (!bq->free)
 3999              		.loc 1 476 3 view .LVU1294
 476:Src/app.c     ****   if (!bq->free)
 4000              		.loc 1 476 14 is_stmt 0 view .LVU1295
 4001 00f2 4246     		mov	r2, r8
 4002 00f4 3946     		mov	r1, r7
 4003 00f6 3846     		mov	r0, r7
 4004 00f8 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4005              	.LVL328:
 476:Src/app.c     ****   if (!bq->free)
 4006              		.loc 1 476 12 discriminator 1 view .LVU1296
 4007 00fc A8F10405 		sub	r5, r8, #4
 4008 0100 48F8040C 		str	r0, [r8, #-4]
 477:Src/app.c     ****     goto free_sem_error;
 4009              		.loc 1 477 3 is_stmt 1 view .LVU1297
 477:Src/app.c     ****     goto free_sem_error;
 4010              		.loc 1 477 6 is_stmt 0 view .LVU1298
 4011 0104 58B1     		cbz	r0, .L150
 479:Src/app.c     ****   if (!bq->ready)
 4012              		.loc 1 479 3 is_stmt 1 view .LVU1299
 479:Src/app.c     ****   if (!bq->ready)
 4013              		.loc 1 479 15 is_stmt 0 view .LVU1300
 4014 0106 2146     		mov	r1, r4
 4015 0108 3846     		mov	r0, r7
 4016 010a 08F15402 		add	r2, r8, #84
 4017 010e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4018              	.LVL329:
 479:Src/app.c     ****   if (!bq->ready)
 4019              		.loc 1 479 13 discriminator 1 view .LVU1301
 4020 0112 6865     		str	r0, [r5, #84]
 480:Src/app.c     ****     goto ready_sem_error;
ARM GAS  /tmp/cc3ptn5O.s 			page 157


 4021              		.loc 1 480 3 is_stmt 1 view .LVU1302
 480:Src/app.c     ****     goto ready_sem_error;
 4022              		.loc 1 480 6 is_stmt 0 view .LVU1303
 4023 0114 40B9     		cbnz	r0, .L151
 481:Src/app.c     **** 
 4024              		.loc 1 481 5 is_stmt 1 view .LVU1304
 4025              	.LDL1:
 494:Src/app.c     **** free_sem_error:
 4026              		.loc 1 494 3 view .LVU1305
 4027 0116 58F8040C 		ldr	r0, [r8, #-4]
 4028 011a FFF7FEFF 		bl	vQueueDelete
 4029              	.LVL330:
 494:Src/app.c     **** free_sem_error:
 4030              		.loc 1 494 3 is_stmt 0 view .LVU1306
 4031              	.LBE578:
 4032              	.LBE583:
 4033              		.loc 1 1730 3 is_stmt 1 view .LVU1307
 4034              	.L150:
 4035              		.loc 1 1730 3 is_stmt 0 discriminator 1 view .LVU1308
 4036 011e 40F2C261 		movw	r1, #1730
 4037 0122 484B     		ldr	r3, .L166+40
 4038 0124 4B4A     		ldr	r2, .L166+56
 4039 0126 D2E7     		b	.L165
 4040              	.LVL331:
 4041              	.L151:
 4042              	.LBB584:
 4043              	.LBB579:
 483:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 4044              		.loc 1 483 3 is_stmt 1 view .LVU1309
 486:Src/app.c     ****   }
 4045              		.loc 1 486 20 is_stmt 0 view .LVU1310
 4046 0128 4B4B     		ldr	r3, .L166+60
 4047              	.LBE579:
 4048              	.LBE584:
 4049              	.LBB585:
 4050              	.LBB586:
 436:Src/app.c     **** }
 4051              		.loc 1 436 3 view .LVU1311
 4052 012a E022     		movs	r2, #224
 4053 012c 2146     		mov	r1, r4
 4054              	.LBE586:
 4055              	.LBE585:
 4056              	.LBB589:
 4057              	.LBB580:
 486:Src/app.c     ****   }
 4058              		.loc 1 486 20 view .LVU1312
 4059 012e C5F8AC30 		str	r3, [r5, #172]
 4060              	.LBE580:
 4061              	.LBE589:
 4062              	.LBB590:
 4063              	.LBB587:
 436:Src/app.c     **** }
 4064              		.loc 1 436 3 view .LVU1313
 4065 0132 4A48     		ldr	r0, .L166+64
 4066              	.LBE587:
 4067              	.LBE590:
 4068              	.LBB591:
ARM GAS  /tmp/cc3ptn5O.s 			page 158


 4069              	.LBB581:
 486:Src/app.c     ****   }
 4070              		.loc 1 486 20 view .LVU1314
 4071 0134 03F59623 		add	r3, r3, #307200
 488:Src/app.c     ****   bq->ready_idx = 0;
 4072              		.loc 1 488 16 view .LVU1315
 4073 0138 C5E92C34 		strd	r3, r4, [r5, #176]
 483:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 4074              		.loc 1 483 17 view .LVU1316
 4075 013c C5F8A870 		str	r7, [r5, #168]
 484:Src/app.c     ****     assert(buffers[i]);
 4076              		.loc 1 484 3 is_stmt 1 view .LVU1317
 4077              	.LVL332:
 484:Src/app.c     ****     assert(buffers[i]);
 4078              		.loc 1 484 17 discriminator 1 view .LVU1318
 485:Src/app.c     ****     bq->buffers[i] = buffers[i];
 4079              		.loc 1 485 5 view .LVU1319
 486:Src/app.c     ****   }
 4080              		.loc 1 486 5 view .LVU1320
 484:Src/app.c     ****     assert(buffers[i]);
 4081              		.loc 1 484 31 discriminator 2 view .LVU1321
 484:Src/app.c     ****     assert(buffers[i]);
 4082              		.loc 1 484 17 discriminator 1 view .LVU1322
 485:Src/app.c     ****     bq->buffers[i] = buffers[i];
 4083              		.loc 1 485 5 view .LVU1323
 486:Src/app.c     ****   }
 4084              		.loc 1 486 5 view .LVU1324
 489:Src/app.c     **** 
 4085              		.loc 1 489 3 view .LVU1325
 489:Src/app.c     **** 
 4086              		.loc 1 489 17 is_stmt 0 view .LVU1326
 4087 0140 C5F8B840 		str	r4, [r5, #184]
 491:Src/app.c     **** 
 4088              		.loc 1 491 3 is_stmt 1 view .LVU1327
 4089              	.LVL333:
 491:Src/app.c     **** 
 4090              		.loc 1 491 3 is_stmt 0 view .LVU1328
 4091              	.LBE581:
 4092              	.LBE591:
 4093              		.loc 1 1730 3 is_stmt 1 view .LVU1329
1731:Src/app.c     **** 
1732:Src/app.c     ****   cpuload_init(&cpu_load);
 4094              		.loc 1 1732 3 view .LVU1330
 4095              	.LBB592:
 4096              	.LBI585:
 434:Src/app.c     **** {
 4097              		.loc 1 434 13 view .LVU1331
 4098              	.LBB588:
 436:Src/app.c     **** }
 4099              		.loc 1 436 3 view .LVU1332
 4100 0144 FFF7FEFF 		bl	memset
 4101              	.LVL334:
 436:Src/app.c     **** }
 4102              		.loc 1 436 3 is_stmt 0 view .LVU1333
 4103              	.LBE588:
 4104              	.LBE592:
1733:Src/app.c     **** 
ARM GAS  /tmp/cc3ptn5O.s 			page 159


1734:Src/app.c     ****   /*** Camera Init ************************************************************/  
1735:Src/app.c     ****   CAM_Init();
 4105              		.loc 1 1735 3 is_stmt 1 view .LVU1334
 4106 0148 FFF7FEFF 		bl	CAM_Init
 4107              	.LVL335:
1736:Src/app.c     **** 
1737:Src/app.c     ****   /* sems + mutex init */
1738:Src/app.c     ****   isp_sem = xSemaphoreCreateCountingStatic(1, 0, &isp_sem_buffer);
 4108              		.loc 1 1738 3 view .LVU1335
 4109              		.loc 1 1738 13 is_stmt 0 view .LVU1336
 4110 014c 2146     		mov	r1, r4
 4111 014e 3046     		mov	r0, r6
 4112 0150 434A     		ldr	r2, .L166+68
 4113 0152 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4114              	.LVL336:
 4115              		.loc 1 1738 11 discriminator 1 view .LVU1337
 4116 0156 434B     		ldr	r3, .L166+72
 4117 0158 1860     		str	r0, [r3]
1739:Src/app.c     ****   assert(isp_sem);
 4118              		.loc 1 1739 3 is_stmt 1 view .LVU1338
 4119 015a 20B9     		cbnz	r0, .L164
 4120              		.loc 1 1739 3 is_stmt 0 discriminator 1 view .LVU1339
 4121 015c 40F2CB61 		movw	r1, #1739
 4122 0160 414B     		ldr	r3, .L166+76
 4123 0162 3C4A     		ldr	r2, .L166+56
 4124 0164 B3E7     		b	.L165
 4125              	.L164:
1740:Src/app.c     ****   disp.update = xSemaphoreCreateCountingStatic(1, 0, &disp.update_buffer);
 4126              		.loc 1 1740 3 is_stmt 1 view .LVU1340
 4127              		.loc 1 1740 17 is_stmt 0 view .LVU1341
 4128 0166 414D     		ldr	r5, .L166+80
 4129 0168 2146     		mov	r1, r4
 4130 016a 2A46     		mov	r2, r5
 4131 016c 3046     		mov	r0, r6
 4132 016e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4133              	.LVL337:
 4134              		.loc 1 1740 15 discriminator 1 view .LVU1342
 4135 0172 2F1F     		subs	r7, r5, #4
 4136 0174 45F8040C 		str	r0, [r5, #-4]
1741:Src/app.c     ****   assert(disp.update);
 4137              		.loc 1 1741 3 is_stmt 1 view .LVU1343
 4138 0178 20B9     		cbnz	r0, .L154
 4139              		.loc 1 1741 3 is_stmt 0 discriminator 1 view .LVU1344
 4140 017a 40F2CD61 		movw	r1, #1741
 4141 017e 3C4B     		ldr	r3, .L166+84
 4142 0180 344A     		ldr	r2, .L166+56
 4143 0182 A4E7     		b	.L165
 4144              	.L154:
1742:Src/app.c     ****   disp.lock = xSemaphoreCreateMutexStatic(&disp.lock_buffer);
 4145              		.loc 1 1742 3 is_stmt 1 view .LVU1345
 4146              		.loc 1 1742 15 is_stmt 0 view .LVU1346
 4147 0184 3046     		mov	r0, r6
 4148 0186 05F15401 		add	r1, r5, #84
 4149 018a FFF7FEFF 		bl	xQueueCreateMutexStatic
 4150              	.LVL338:
 4151              		.loc 1 1742 13 discriminator 1 view .LVU1347
 4152 018e 7865     		str	r0, [r7, #84]
ARM GAS  /tmp/cc3ptn5O.s 			page 160


1743:Src/app.c     ****   assert(disp.lock);
 4153              		.loc 1 1743 3 is_stmt 1 view .LVU1348
 4154 0190 20B9     		cbnz	r0, .L155
 4155              		.loc 1 1743 3 is_stmt 0 discriminator 1 view .LVU1349
 4156 0192 40F2CF61 		movw	r1, #1743
 4157 0196 374B     		ldr	r3, .L166+88
 4158 0198 2E4A     		ldr	r2, .L166+56
 4159 019a 98E7     		b	.L165
 4160              	.L155:
1744:Src/app.c     **** 
1745:Src/app.c     ****   /* Start LCD Display camera pipe stream */
1746:Src/app.c     ****   CAM_DisplayPipe_Start(lcd_bg_buffer[0], CMW_MODE_CONTINUOUS);
 4161              		.loc 1 1746 3 is_stmt 1 view .LVU1350
 4162 019c 2146     		mov	r1, r4
 4163 019e 2148     		ldr	r0, .L166+8
 4164 01a0 FFF7FEFF 		bl	CAM_DisplayPipe_Start
 4165              	.LVL339:
1747:Src/app.c     **** 
1748:Src/app.c     ****   /* threads init */
1749:Src/app.c     ****   hdl = xTaskCreateStatic(nn_thread_fct, "nn", configMINIMAL_STACK_SIZE * 4, NULL, nn_priority, nn_
 4166              		.loc 1 1749 3 view .LVU1351
 4167              		.loc 1 1749 9 is_stmt 0 view .LVU1352
 4168 01a4 344B     		ldr	r3, .L166+92
 4169 01a6 4FF48052 		mov	r2, #4096
 4170 01aa 0293     		str	r3, [sp, #8]
 4171 01ac 334B     		ldr	r3, .L166+96
 4172 01ae 3449     		ldr	r1, .L166+100
 4173 01b0 0193     		str	r3, [sp, #4]
 4174 01b2 1D23     		movs	r3, #29
 4175 01b4 3348     		ldr	r0, .L166+104
 4176 01b6 0093     		str	r3, [sp]
 4177 01b8 2346     		mov	r3, r4
 4178 01ba FFF7FEFF 		bl	xTaskCreateStatic
 4179              	.LVL340:
1750:Src/app.c     ****                           &nn_thread);
1751:Src/app.c     ****   assert(hdl != NULL);
 4180              		.loc 1 1751 3 is_stmt 1 view .LVU1353
 4181 01be 20B9     		cbnz	r0, .L156
 4182              		.loc 1 1751 3 is_stmt 0 discriminator 1 view .LVU1354
 4183 01c0 40F2D761 		movw	r1, #1751
 4184 01c4 304B     		ldr	r3, .L166+108
 4185 01c6 234A     		ldr	r2, .L166+56
 4186 01c8 81E7     		b	.L165
 4187              	.L156:
1752:Src/app.c     ****   hdl = xTaskCreateStatic(dp_thread_fct, "dp", configMINIMAL_STACK_SIZE * 2, NULL, dp_priority, dp_
 4188              		.loc 1 1752 3 is_stmt 1 view .LVU1355
 4189              		.loc 1 1752 9 is_stmt 0 view .LVU1356
 4190 01ca 304B     		ldr	r3, .L166+112
 4191 01cc 4FF40062 		mov	r2, #2048
 4192 01d0 0293     		str	r3, [sp, #8]
 4193 01d2 2F4B     		ldr	r3, .L166+116
 4194 01d4 2F49     		ldr	r1, .L166+120
 4195 01d6 0193     		str	r3, [sp, #4]
 4196 01d8 1A23     		movs	r3, #26
 4197 01da 2F48     		ldr	r0, .L166+124
 4198              	.LVL341:
 4199              		.loc 1 1752 9 view .LVU1357
ARM GAS  /tmp/cc3ptn5O.s 			page 161


 4200 01dc 0093     		str	r3, [sp]
 4201 01de 2346     		mov	r3, r4
 4202 01e0 FFF7FEFF 		bl	xTaskCreateStatic
 4203              	.LVL342:
1753:Src/app.c     ****                           &dp_thread);
1754:Src/app.c     ****   assert(hdl != NULL);
 4204              		.loc 1 1754 3 is_stmt 1 view .LVU1358
 4205 01e4 20B9     		cbnz	r0, .L157
 4206              		.loc 1 1754 3 is_stmt 0 discriminator 1 view .LVU1359
 4207 01e6 40F2DA61 		movw	r1, #1754
 4208 01ea 274B     		ldr	r3, .L166+108
 4209 01ec 194A     		ldr	r2, .L166+56
 4210 01ee 6EE7     		b	.L165
 4211              	.L157:
1755:Src/app.c     ****   hdl = xTaskCreateStatic(isp_thread_fct, "isp", configMINIMAL_STACK_SIZE * 2, NULL, isp_priority, 
 4212              		.loc 1 1755 3 is_stmt 1 view .LVU1360
 4213              		.loc 1 1755 9 is_stmt 0 view .LVU1361
 4214 01f0 2A4B     		ldr	r3, .L166+128
 4215 01f2 4FF40062 		mov	r2, #2048
 4216 01f6 0293     		str	r3, [sp, #8]
 4217 01f8 294B     		ldr	r3, .L166+132
 4218 01fa 2A49     		ldr	r1, .L166+136
 4219 01fc CDE90093 		strd	r9, r3, [sp]
 4220 0200 2948     		ldr	r0, .L166+140
 4221              	.LVL343:
 4222              		.loc 1 1755 9 view .LVU1362
 4223 0202 2346     		mov	r3, r4
 4224 0204 FFF7FEFF 		bl	xTaskCreateStatic
 4225              	.LVL344:
1756:Src/app.c     ****                           &isp_thread);
1757:Src/app.c     ****   assert(hdl != NULL);
 4226              		.loc 1 1757 3 is_stmt 1 view .LVU1363
 4227 0208 20B9     		cbnz	r0, .L146
 4228              		.loc 1 1757 3 is_stmt 0 discriminator 1 view .LVU1364
 4229 020a 40F2DD61 		movw	r1, #1757
 4230 020e 1E4B     		ldr	r3, .L166+108
 4231 0210 104A     		ldr	r2, .L166+56
 4232 0212 5CE7     		b	.L165
 4233              	.L146:
1758:Src/app.c     **** }
 4234              		.loc 1 1758 1 view .LVU1365
 4235 0214 13B0     		add	sp, sp, #76
 4236              		.cfi_def_cfa_offset 28
 4237              		@ sp needed
 4238 0216 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4239              	.L167:
 4240 021a 00BF     		.align	2
 4241              	.L166:
 4242 021c 00ED00E0 		.word	-536810240
 4243 0220 00000000 		.word	.LC25
 4244 0224 00882C00 		.word	lcd_bg_buffer
 4245 0228 00C05D00 		.word	6144000
 4246 022c 00181500 		.word	lcd_fg_buffer
 4247 0230 00701700 		.word	1536000
 4248 0234 00000000 		.word	lcd_bg_buffer_disp_idx
 4249 0238 2003E001 		.word	31458080
 4250 023c 00D02000 		.word	lcd_fg_buffer+768000
ARM GAS  /tmp/cc3ptn5O.s 			page 162


 4251 0240 00600900 		.word	screen_buffer
 4252 0244 00000000 		.word	.LC4
 4253 0248 00000000 		.word	__func__.5
 4254 024c 0E000000 		.word	.LC2
 4255 0250 00000000 		.word	Font20
 4256 0254 00000000 		.word	__func__.20
 4257 0258 00000000 		.word	nn_input_buffers
 4258 025c 00000000 		.word	cpu_load
 4259 0260 00000000 		.word	isp_sem_buffer
 4260 0264 00000000 		.word	isp_sem
 4261 0268 11000000 		.word	.LC26
 4262 026c 04000000 		.word	disp+4
 4263 0270 19000000 		.word	.LC27
 4264 0274 25000000 		.word	.LC28
 4265 0278 00000000 		.word	nn_thread
 4266 027c 00000000 		.word	nn_thread_stack
 4267 0280 2F000000 		.word	.LC29
 4268 0284 00000000 		.word	nn_thread_fct
 4269 0288 32000000 		.word	.LC30
 4270 028c 00000000 		.word	dp_thread
 4271 0290 00000000 		.word	dp_thread_stack
 4272 0294 3E000000 		.word	.LC31
 4273 0298 00000000 		.word	dp_thread_fct
 4274 029c 00000000 		.word	isp_thread
 4275 02a0 00000000 		.word	isp_thread_stack
 4276 02a4 41000000 		.word	.LC32
 4277 02a8 00000000 		.word	isp_thread_fct
 4278 02ac 00EE0200 		.word	192000
 4279 02b0 04000000 		.word	nn_input_queue+4
 4280              		.cfi_endproc
 4281              	.LFE7412:
 4283              		.section	.text.CMW_CAMERA_PIPE_FrameEventCallback,"ax",%progbits
 4284              		.align	1
 4285              		.global	CMW_CAMERA_PIPE_FrameEventCallback
 4286              		.syntax unified
 4287              		.thumb
 4288              		.thumb_func
 4290              	CMW_CAMERA_PIPE_FrameEventCallback:
 4291              	.LVL345:
 4292              	.LFB7413:
1759:Src/app.c     **** 
1760:Src/app.c     **** int CMW_CAMERA_PIPE_FrameEventCallback(uint32_t pipe)
1761:Src/app.c     **** {
 4293              		.loc 1 1761 1 is_stmt 1 view -0
 4294              		.cfi_startproc
 4295              		@ args = 0, pretend = 0, frame = 8
 4296              		@ frame_needed = 0, uses_anonymous_args = 0
1762:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4297              		.loc 1 1762 3 view .LVU1367
 4298              		.loc 1 1762 6 is_stmt 0 view .LVU1368
 4299 0000 0128     		cmp	r0, #1
1761:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4300              		.loc 1 1761 1 view .LVU1369
 4301 0002 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 4302              		.cfi_def_cfa_offset 40
 4303              		.cfi_offset 4, -32
 4304              		.cfi_offset 5, -28
ARM GAS  /tmp/cc3ptn5O.s 			page 163


 4305              		.cfi_offset 6, -24
 4306              		.cfi_offset 7, -20
 4307              		.cfi_offset 8, -16
 4308              		.cfi_offset 9, -12
 4309              		.cfi_offset 10, -8
 4310              		.cfi_offset 14, -4
1761:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4311              		.loc 1 1761 1 view .LVU1370
 4312 0006 0646     		mov	r6, r0
 4313              		.loc 1 1762 6 view .LVU1371
 4314 0008 50D1     		bne	.L169
1763:Src/app.c     ****     app_main_pipe_frame_event();
 4315              		.loc 1 1763 5 is_stmt 1 view .LVU1372
 4316              	.LBB603:
 4317              	.LBI603:
 564:Src/app.c     **** {
 4318              		.loc 1 564 13 view .LVU1373
 4319              	.LBB604:
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4320              		.loc 1 566 3 view .LVU1374
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4321              		.loc 1 566 47 is_stmt 0 view .LVU1375
 4322 000a 514F     		ldr	r7, .L195
 567:Src/app.c     ****   int ret;
 4323              		.loc 1 567 47 view .LVU1376
 4324 000c DFF87081 		ldr	r8, .L195+48
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4325              		.loc 1 566 47 view .LVU1377
 4326 0010 3D68     		ldr	r5, [r7]
 567:Src/app.c     ****   int ret;
 4327              		.loc 1 567 47 view .LVU1378
 4328 0012 D8F80040 		ldr	r4, [r8]
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4329              		.loc 1 566 47 view .LVU1379
 4330 0016 0135     		adds	r5, r5, #1
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4331              		.loc 1 566 7 view .LVU1380
 4332 0018 6B42     		rsbs	r3, r5, #0
 4333 001a 03F00303 		and	r3, r3, #3
 567:Src/app.c     ****   int ret;
 4334              		.loc 1 567 47 view .LVU1381
 4335 001e 04F10104 		add	r4, r4, #1
 566:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4336              		.loc 1 566 7 view .LVU1382
 4337 0022 05F00305 		and	r5, r5, #3
 4338 0026 55EA43B5 		csneg	r5, r5, r3, mi
 4339              	.LVL346:
 567:Src/app.c     ****   int ret;
 4340              		.loc 1 567 3 is_stmt 1 view .LVU1383
 567:Src/app.c     ****   int ret;
 4341              		.loc 1 567 7 is_stmt 0 view .LVU1384
 4342 002a 6342     		rsbs	r3, r4, #0
 4343 002c 03F00303 		and	r3, r3, #3
 571:Src/app.c     ****   assert(ret == HAL_OK);
 4344              		.loc 1 571 78 view .LVU1385
 4345 0030 DFF850A1 		ldr	r10, .L195+52
 4346 0034 DFF85091 		ldr	r9, .L195+56
ARM GAS  /tmp/cc3ptn5O.s 			page 164


 567:Src/app.c     ****   int ret;
 4347              		.loc 1 567 7 view .LVU1386
 4348 0038 04F00304 		and	r4, r4, #3
 4349 003c 54EA43B4 		csneg	r4, r4, r3, mi
 4350              	.LVL347:
 568:Src/app.c     **** 
 4351              		.loc 1 568 3 is_stmt 1 view .LVU1387
 570:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4352              		.loc 1 570 3 view .LVU1388
 570:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4353              		.loc 1 570 9 is_stmt 0 view .LVU1389
 4354 0040 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 4355              	.LVL348:
 570:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4356              		.loc 1 570 9 view .LVU1390
 4357 0044 3146     		mov	r1, r6
 4358 0046 0022     		movs	r2, #0
 4359 0048 0AFB0493 		mla	r3, r10, r4, r9
 4360 004c FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 4361              	.LVL349:
 572:Src/app.c     **** 
 4362              		.loc 1 572 3 is_stmt 1 view .LVU1391
 4363 0050 0146     		mov	r1, r0
 4364 0052 30B1     		cbz	r0, .L170
 572:Src/app.c     **** 
 4365              		.loc 1 572 3 is_stmt 0 discriminator 1 view .LVU1392
 4366 0054 4FF40F71 		mov	r1, #572
 4367 0058 3E4B     		ldr	r3, .L195+4
 4368 005a 3F4A     		ldr	r2, .L195+8
 4369              	.LVL350:
 4370              	.L194:
 4371              	.LBB605:
 4372              	.LBB606:
 556:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4373              		.loc 1 556 3 discriminator 1 view .LVU1393
 4374 005c 3F48     		ldr	r0, .L195+12
 4375 005e FFF7FEFF 		bl	__assert_func
 4376              	.LVL351:
 4377              	.L170:
 556:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4378              		.loc 1 556 3 discriminator 1 view .LVU1394
 4379              	.LBE606:
 4380              	.LBE605:
 574:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 4381              		.loc 1 574 3 is_stmt 1 view .LVU1395
 4382              	.LBB608:
 4383              	.LBI605:
 551:Src/app.c     **** {
 4384              		.loc 1 551 13 view .LVU1396
 4385              	.LBB607:
 553:Src/app.c     **** 
 4386              		.loc 1 553 3 view .LVU1397
 555:Src/app.c     ****   assert(ret == 0);
 4387              		.loc 1 555 3 view .LVU1398
 555:Src/app.c     ****   assert(ret == 0);
 4388              		.loc 1 555 9 is_stmt 0 view .LVU1399
 4389 0062 0AFB0590 		mla	r0, r10, r5, r9
ARM GAS  /tmp/cc3ptn5O.s 			page 165


 4390              	.LVL352:
 555:Src/app.c     ****   assert(ret == 0);
 4391              		.loc 1 555 9 view .LVU1400
 4392 0066 FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 4393              	.LVL353:
 556:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4394              		.loc 1 556 3 is_stmt 1 view .LVU1401
 4395 006a 20B1     		cbz	r0, .L171
 556:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4396              		.loc 1 556 3 is_stmt 0 discriminator 1 view .LVU1402
 4397 006c 4FF40B71 		mov	r1, #556
 4398 0070 3B4B     		ldr	r3, .L195+16
 4399 0072 3C4A     		ldr	r2, .L195+20
 4400 0074 F2E7     		b	.L194
 4401              	.L171:
 557:Src/app.c     ****   assert(ret == 0);
 4402              		.loc 1 557 3 is_stmt 1 view .LVU1403
 557:Src/app.c     ****   assert(ret == 0);
 4403              		.loc 1 557 9 is_stmt 0 view .LVU1404
 4404 0076 FFF7FEFF 		bl	SCRL_ReloadLayer
 4405              	.LVL354:
 558:Src/app.c     **** 
 4406              		.loc 1 558 3 is_stmt 1 view .LVU1405
 4407 007a 20B1     		cbz	r0, .L172
 558:Src/app.c     **** 
 4408              		.loc 1 558 3 is_stmt 0 discriminator 1 view .LVU1406
 4409 007c 40F22E21 		movw	r1, #558
 4410 0080 374B     		ldr	r3, .L195+16
 4411 0082 384A     		ldr	r2, .L195+20
 4412 0084 EAE7     		b	.L194
 4413              	.L172:
 560:Src/app.c     ****   assert(ret == 0);
 4414              		.loc 1 560 3 is_stmt 1 view .LVU1407
 560:Src/app.c     ****   assert(ret == 0);
 4415              		.loc 1 560 9 is_stmt 0 view .LVU1408
 4416 0086 FFF7FEFF 		bl	SRCL_Update
 4417              	.LVL355:
 561:Src/app.c     **** }
 4418              		.loc 1 561 3 is_stmt 1 view .LVU1409
 4419 008a 20B1     		cbz	r0, .L173
 561:Src/app.c     **** }
 4420              		.loc 1 561 3 is_stmt 0 discriminator 1 view .LVU1410
 4421 008c 40F23121 		movw	r1, #561
 4422 0090 334B     		ldr	r3, .L195+16
 4423 0092 344A     		ldr	r2, .L195+20
 4424 0094 E2E7     		b	.L194
 4425              	.L173:
 4426              	.LVL356:
 561:Src/app.c     **** }
 4427              		.loc 1 561 3 discriminator 1 view .LVU1411
 4428              	.LBE607:
 4429              	.LBE608:
 575:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 4430              		.loc 1 575 3 is_stmt 1 view .LVU1412
 578:Src/app.c     **** }
 4431              		.loc 1 578 17 is_stmt 0 view .LVU1413
 4432 0096 344A     		ldr	r2, .L195+24
ARM GAS  /tmp/cc3ptn5O.s 			page 166


 575:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 4433              		.loc 1 575 26 view .LVU1414
 4434 0098 3D60     		str	r5, [r7]
 576:Src/app.c     **** 
 4435              		.loc 1 576 3 is_stmt 1 view .LVU1415
 578:Src/app.c     **** }
 4436              		.loc 1 578 17 is_stmt 0 view .LVU1416
 4437 009a 1368     		ldr	r3, [r2]
 576:Src/app.c     **** 
 4438              		.loc 1 576 26 view .LVU1417
 4439 009c C8F80040 		str	r4, [r8]
 578:Src/app.c     **** }
 4440              		.loc 1 578 3 is_stmt 1 view .LVU1418
 578:Src/app.c     **** }
 4441              		.loc 1 578 17 is_stmt 0 view .LVU1419
 4442 00a0 0133     		adds	r3, r3, #1
 4443 00a2 1360     		str	r3, [r2]
 4444              	.LVL357:
 4445              	.L174:
 578:Src/app.c     **** }
 4446              		.loc 1 578 17 view .LVU1420
 4447              	.LBE604:
 4448              	.LBE603:
1764:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
1765:Src/app.c     ****     app_ancillary_pipe_frame_event();
1766:Src/app.c     **** 
1767:Src/app.c     ****   return HAL_OK;
 4449              		.loc 1 1767 3 is_stmt 1 view .LVU1421
1768:Src/app.c     **** }
 4450              		.loc 1 1768 1 is_stmt 0 view .LVU1422
 4451 00a4 0020     		movs	r0, #0
 4452 00a6 02B0     		add	sp, sp, #8
 4453              		.cfi_remember_state
 4454              		.cfi_def_cfa_offset 32
 4455              		@ sp needed
 4456 00a8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4457              	.LVL358:
 4458              	.L169:
 4459              		.cfi_restore_state
1764:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 4460              		.loc 1 1764 8 is_stmt 1 view .LVU1423
1764:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 4461              		.loc 1 1764 11 is_stmt 0 view .LVU1424
 4462 00ac 0228     		cmp	r0, #2
 4463 00ae F9D1     		bne	.L174
1765:Src/app.c     **** 
 4464              		.loc 1 1765 5 is_stmt 1 view .LVU1425
 4465              	.LBB609:
 4466              	.LBI609:
 582:Src/app.c     **** {
 4467              		.loc 1 582 13 view .LVU1426
 4468              	.LBB610:
 584:Src/app.c     ****   int ret;
 4469              		.loc 1 584 3 view .LVU1427
 585:Src/app.c     **** 
 4470              		.loc 1 585 3 view .LVU1428
 587:Src/app.c     ****   if (next_buffer) {
ARM GAS  /tmp/cc3ptn5O.s 			page 167


 4471              		.loc 1 587 3 view .LVU1429
 4472              	.LBB611:
 4473              	.LBI611:
 499:Src/app.c     **** {
 4474              		.loc 1 499 17 view .LVU1430
 4475              	.LVL359:
 4476              	.LBB612:
 501:Src/app.c     ****   int ret;
 4477              		.loc 1 501 3 view .LVU1431
 502:Src/app.c     **** 
 4478              		.loc 1 502 3 view .LVU1432
 504:Src/app.c     ****   if (ret == pdFALSE)
 4479              		.loc 1 504 3 view .LVU1433
 504:Src/app.c     ****   if (ret == pdFALSE)
 4480              		.loc 1 504 9 is_stmt 0 view .LVU1434
 4481 00b0 2E4C     		ldr	r4, .L195+28
 504:Src/app.c     ****   if (ret == pdFALSE)
 4482              		.loc 1 504 9 discriminator 4 view .LVU1435
 4483 00b2 0021     		movs	r1, #0
 4484 00b4 2068     		ldr	r0, [r4]
 4485              	.LVL360:
 504:Src/app.c     ****   if (ret == pdFALSE)
 4486              		.loc 1 504 9 discriminator 4 view .LVU1436
 4487 00b6 FFF7FEFF 		bl	xQueueSemaphoreTake
 4488              	.LVL361:
 505:Src/app.c     ****     return NULL;
 4489              		.loc 1 505 3 is_stmt 1 view .LVU1437
 505:Src/app.c     ****     return NULL;
 4490              		.loc 1 505 6 is_stmt 0 view .LVU1438
 4491 00ba 0028     		cmp	r0, #0
 4492 00bc F2D0     		beq	.L174
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4493              		.loc 1 508 3 is_stmt 1 view .LVU1439
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4494              		.loc 1 508 23 is_stmt 0 view .LVU1440
 4495 00be D4F8B420 		ldr	r2, [r4, #180]
 508:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4496              		.loc 1 508 7 view .LVU1441
 4497 00c2 04EB8203 		add	r3, r4, r2, lsl #2
 4498 00c6 D3F8AC50 		ldr	r5, [r3, #172]
 4499              	.LVL362:
 509:Src/app.c     **** 
 4500              		.loc 1 509 3 is_stmt 1 view .LVU1442
 509:Src/app.c     **** 
 4501              		.loc 1 509 37 is_stmt 0 view .LVU1443
 4502 00ca D4F8A830 		ldr	r3, [r4, #168]
 509:Src/app.c     **** 
 4503              		.loc 1 509 32 view .LVU1444
 4504 00ce 0132     		adds	r2, r2, #1
 509:Src/app.c     **** 
 4505              		.loc 1 509 37 view .LVU1445
 4506 00d0 92FBF3F1 		sdiv	r1, r2, r3
 4507 00d4 03FB1122 		mls	r2, r3, r1, r2
 509:Src/app.c     **** 
 4508              		.loc 1 509 16 view .LVU1446
 4509 00d8 C4F8B420 		str	r2, [r4, #180]
 511:Src/app.c     **** }
ARM GAS  /tmp/cc3ptn5O.s 			page 168


 4510              		.loc 1 511 3 is_stmt 1 view .LVU1447
 4511              	.LVL363:
 511:Src/app.c     **** }
 4512              		.loc 1 511 3 is_stmt 0 view .LVU1448
 4513              	.LBE612:
 4514              	.LBE611:
 588:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 4515              		.loc 1 588 3 is_stmt 1 view .LVU1449
 588:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 4516              		.loc 1 588 6 is_stmt 0 view .LVU1450
 4517 00dc 002D     		cmp	r5, #0
 4518 00de E1D0     		beq	.L174
 589:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4519              		.loc 1 589 5 is_stmt 1 view .LVU1451
 589:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4520              		.loc 1 589 11 is_stmt 0 view .LVU1452
 4521 00e0 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 4522              	.LVL364:
 589:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4523              		.loc 1 589 11 discriminator 1 view .LVU1453
 4524 00e4 2B46     		mov	r3, r5
 4525 00e6 0022     		movs	r2, #0
 4526 00e8 3146     		mov	r1, r6
 4527 00ea FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 4528              	.LVL365:
 591:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 4529              		.loc 1 591 5 is_stmt 1 view .LVU1454
 4530 00ee 20B1     		cbz	r0, .L177
 591:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 4531              		.loc 1 591 5 is_stmt 0 discriminator 1 view .LVU1455
 4532 00f0 40F24F21 		movw	r1, #591
 4533 00f4 174B     		ldr	r3, .L195+4
 4534 00f6 1E4A     		ldr	r2, .L195+32
 4535 00f8 B0E7     		b	.L194
 4536              	.L177:
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4537              		.loc 1 593 5 is_stmt 1 view .LVU1456
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4538              		.loc 1 593 48 is_stmt 0 view .LVU1457
 4539 00fa 1B4B     		ldr	r3, .L195+24
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4540              		.loc 1 593 31 view .LVU1458
 4541 00fc 1D4A     		ldr	r2, .L195+36
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4542              		.loc 1 593 48 view .LVU1459
 4543 00fe 1B68     		ldr	r3, [r3]
 4544              	.LBB613:
 4545              	.LBB614:
 538:Src/app.c     ****   int ret;
 4546              		.loc 1 538 14 view .LVU1460
 4547 0100 0190     		str	r0, [sp, #4]
 4548              	.LBE614:
 4549              	.LBE613:
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4550              		.loc 1 593 48 view .LVU1461
 4551 0102 013B     		subs	r3, r3, #1
 593:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
ARM GAS  /tmp/cc3ptn5O.s 			page 169


 4552              		.loc 1 593 31 view .LVU1462
 4553 0104 1360     		str	r3, [r2]
 594:Src/app.c     ****   }
 4554              		.loc 1 594 5 is_stmt 1 view .LVU1463
 4555              	.LBB616:
 4556              	.LBI613:
 536:Src/app.c     **** {
 4557              		.loc 1 536 13 view .LVU1464
 4558              	.LVL366:
 4559              	.LBB615:
 538:Src/app.c     ****   int ret;
 4560              		.loc 1 538 3 view .LVU1465
 539:Src/app.c     **** 
 4561              		.loc 1 539 3 view .LVU1466
 541:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4562              		.loc 1 541 3 view .LVU1467
 541:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4563              		.loc 1 541 7 is_stmt 0 view .LVU1468
 4564 0106 FFF7FEFF 		bl	xPortIsInsideInterrupt
 4565              	.LVL367:
 541:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4566              		.loc 1 541 6 discriminator 1 view .LVU1469
 4567 010a 0346     		mov	r3, r0
 4568 010c A0B1     		cbz	r0, .L178
 542:Src/app.c     ****     assert(ret == pdTRUE);
 4569              		.loc 1 542 5 is_stmt 1 view .LVU1470
 542:Src/app.c     ****     assert(ret == pdTRUE);
 4570              		.loc 1 542 11 is_stmt 0 view .LVU1471
 4571 010e 606D     		ldr	r0, [r4, #84]
 4572 0110 01A9     		add	r1, sp, #4
 4573 0112 FFF7FEFF 		bl	xQueueGiveFromISR
 4574              	.LVL368:
 543:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4575              		.loc 1 543 5 is_stmt 1 view .LVU1472
 4576 0116 0128     		cmp	r0, #1
 4577 0118 04D0     		beq	.L179
 543:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4578              		.loc 1 543 5 is_stmt 0 discriminator 1 view .LVU1473
 4579 011a 40F21F21 		movw	r1, #543
 4580 011e 164B     		ldr	r3, .L195+40
 4581 0120 164A     		ldr	r2, .L195+44
 4582 0122 9BE7     		b	.L194
 4583              	.L179:
 544:Src/app.c     ****   } else {
 4584              		.loc 1 544 5 is_stmt 1 view .LVU1474
 544:Src/app.c     ****   } else {
 4585              		.loc 1 544 5 view .LVU1475
 4586 0124 019B     		ldr	r3, [sp, #4]
 4587 0126 002B     		cmp	r3, #0
 4588 0128 BCD0     		beq	.L174
 544:Src/app.c     ****   } else {
 4589              		.loc 1 544 5 discriminator 1 view .LVU1476
 4590 012a 4FF0E023 		mov	r3, #-536813568
 4591 012e 4FF08052 		mov	r2, #268435456
 4592 0132 C3F8042D 		str	r2, [r3, #3332]
 4593 0136 B5E7     		b	.L174
 4594              	.LVL369:
ARM GAS  /tmp/cc3ptn5O.s 			page 170


 4595              	.L178:
 546:Src/app.c     ****     assert(ret == pdTRUE);
 4596              		.loc 1 546 5 view .LVU1477
 546:Src/app.c     ****     assert(ret == pdTRUE);
 4597              		.loc 1 546 11 is_stmt 0 view .LVU1478
 4598 0138 0246     		mov	r2, r0
 4599 013a 0146     		mov	r1, r0
 4600 013c 606D     		ldr	r0, [r4, #84]
 4601 013e FFF7FEFF 		bl	xQueueGenericSend
 4602              	.LVL370:
 547:Src/app.c     ****   }
 4603              		.loc 1 547 5 is_stmt 1 view .LVU1479
 4604 0142 0128     		cmp	r0, #1
 4605 0144 AED0     		beq	.L174
 547:Src/app.c     ****   }
 4606              		.loc 1 547 5 is_stmt 0 discriminator 1 view .LVU1480
 4607 0146 40F22321 		movw	r1, #547
 4608 014a 0B4B     		ldr	r3, .L195+40
 4609 014c 0B4A     		ldr	r2, .L195+44
 4610 014e 85E7     		b	.L194
 4611              	.L196:
 4612              		.align	2
 4613              	.L195:
 4614 0150 00000000 		.word	lcd_bg_buffer_disp_idx
 4615 0154 00000000 		.word	.LC18
 4616 0158 00000000 		.word	__func__.3
 4617 015c 0E000000 		.word	.LC2
 4618 0160 00000000 		.word	.LC4
 4619 0164 00000000 		.word	__func__.2
 4620 0168 00000000 		.word	frame_event_nb
 4621 016c 00000000 		.word	nn_input_queue
 4622 0170 00000000 		.word	__func__.1
 4623 0174 00000000 		.word	frame_event_nb_for_resize
 4624 0178 00000000 		.word	.LC1
 4625 017c 00000000 		.word	__func__.0
 4626 0180 00000000 		.word	lcd_bg_buffer_capt_idx
 4627 0184 00701700 		.word	1536000
 4628 0188 00882C00 		.word	lcd_bg_buffer
 4629              	.LBE615:
 4630              	.LBE616:
 4631              	.LBE610:
 4632              	.LBE609:
 4633              		.cfi_endproc
 4634              	.LFE7413:
 4636              		.section	.text.CMW_CAMERA_PIPE_VsyncEventCallback,"ax",%progbits
 4637              		.align	1
 4638              		.global	CMW_CAMERA_PIPE_VsyncEventCallback
 4639              		.syntax unified
 4640              		.thumb
 4641              		.thumb_func
 4643              	CMW_CAMERA_PIPE_VsyncEventCallback:
 4644              	.LVL371:
 4645              	.LFB7414:
1769:Src/app.c     **** 
1770:Src/app.c     **** int CMW_CAMERA_PIPE_VsyncEventCallback(uint32_t pipe)
1771:Src/app.c     **** {
 4646              		.loc 1 1771 1 is_stmt 1 view -0
ARM GAS  /tmp/cc3ptn5O.s 			page 171


 4647              		.cfi_startproc
 4648              		@ args = 0, pretend = 0, frame = 8
 4649              		@ frame_needed = 0, uses_anonymous_args = 0
1772:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4650              		.loc 1 1772 3 view .LVU1482
 4651              		.loc 1 1772 6 is_stmt 0 view .LVU1483
 4652 0000 0128     		cmp	r0, #1
1771:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4653              		.loc 1 1771 1 view .LVU1484
 4654 0002 07B5     		push	{r0, r1, r2, lr}
 4655              		.cfi_def_cfa_offset 16
 4656              		.cfi_offset 14, -4
 4657              		.loc 1 1772 6 view .LVU1485
 4658 0004 10D1     		bne	.L198
1773:Src/app.c     ****     app_main_pipe_vsync_event();
 4659              		.loc 1 1773 5 is_stmt 1 view .LVU1486
 4660              	.LBB619:
 4661              	.LBI619:
 598:Src/app.c     **** {
 4662              		.loc 1 598 13 view .LVU1487
 4663              	.LBB620:
 600:Src/app.c     ****   int ret;
 4664              		.loc 1 600 3 view .LVU1488
 600:Src/app.c     ****   int ret;
 4665              		.loc 1 600 14 is_stmt 0 view .LVU1489
 4666 0006 0023     		movs	r3, #0
 4667 0008 0193     		str	r3, [sp, #4]
 601:Src/app.c     **** 
 4668              		.loc 1 601 3 is_stmt 1 view .LVU1490
 603:Src/app.c     ****   if (ret == pdTRUE)
 4669              		.loc 1 603 3 view .LVU1491
 603:Src/app.c     ****   if (ret == pdTRUE)
 4670              		.loc 1 603 9 is_stmt 0 view .LVU1492
 4671 000a 094B     		ldr	r3, .L203
 4672 000c 01A9     		add	r1, sp, #4
 4673 000e 1868     		ldr	r0, [r3]
 4674              	.LVL372:
 603:Src/app.c     ****   if (ret == pdTRUE)
 4675              		.loc 1 603 9 view .LVU1493
 4676 0010 FFF7FEFF 		bl	xQueueGiveFromISR
 4677              	.LVL373:
 604:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4678              		.loc 1 604 3 is_stmt 1 view .LVU1494
 604:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4679              		.loc 1 604 6 is_stmt 0 view .LVU1495
 4680 0014 0128     		cmp	r0, #1
 4681 0016 07D1     		bne	.L198
 605:Src/app.c     **** }
 4682              		.loc 1 605 5 is_stmt 1 view .LVU1496
 605:Src/app.c     **** }
 4683              		.loc 1 605 5 view .LVU1497
 4684 0018 019B     		ldr	r3, [sp, #4]
 4685 001a 2BB1     		cbz	r3, .L198
 605:Src/app.c     **** }
 4686              		.loc 1 605 5 discriminator 1 view .LVU1498
 4687 001c 4FF0E023 		mov	r3, #-536813568
 4688 0020 4FF08052 		mov	r2, #268435456
ARM GAS  /tmp/cc3ptn5O.s 			page 172


 4689 0024 C3F8042D 		str	r2, [r3, #3332]
 605:Src/app.c     **** }
 4690              		.loc 1 605 5 discriminator 3 view .LVU1499
 4691              	.LVL374:
 4692              	.L198:
 605:Src/app.c     **** }
 4693              		.loc 1 605 5 is_stmt 0 discriminator 3 view .LVU1500
 4694              	.LBE620:
 4695              	.LBE619:
1774:Src/app.c     **** 
1775:Src/app.c     ****   return HAL_OK;
 4696              		.loc 1 1775 3 is_stmt 1 view .LVU1501
1776:Src/app.c     **** }
 4697              		.loc 1 1776 1 is_stmt 0 view .LVU1502
 4698 0028 0020     		movs	r0, #0
 4699 002a 03B0     		add	sp, sp, #12
 4700              		.cfi_def_cfa_offset 4
 4701              		@ sp needed
 4702 002c 5DF804FB 		ldr	pc, [sp], #4
 4703              	.L204:
 4704              		.align	2
 4705              	.L203:
 4706 0030 00000000 		.word	isp_sem
 4707              		.cfi_endproc
 4708              	.LFE7414:
 4710              		.section	.rodata.__func__.0,"a"
 4713              	__func__.0:
 4714 0000 62717565 		.ascii	"bqueue_put_ready\000"
 4714      75655F70 
 4714      75745F72 
 4714      65616479 
 4714      00
 4715              		.section	.rodata.__func__.1,"a"
 4718              	__func__.1:
 4719 0000 6170705F 		.ascii	"app_ancillary_pipe_frame_event\000"
 4719      616E6369 
 4719      6C6C6172 
 4719      795F7069 
 4719      70655F66 
 4720              		.section	.rodata.__func__.2,"a"
 4723              	__func__.2:
 4724 0000 72656C6F 		.ascii	"reload_bg_layer\000"
 4724      61645F62 
 4724      675F6C61 
 4724      79657200 
 4725              		.section	.rodata.__func__.3,"a"
 4728              	__func__.3:
 4729 0000 6170705F 		.ascii	"app_main_pipe_frame_event\000"
 4729      6D61696E 
 4729      5F706970 
 4729      655F6672 
 4729      616D655F 
 4730              		.section	.rodata.__func__.5,"a"
 4733              	__func__.5:
 4734 0000 44697370 		.ascii	"Display_init\000"
 4734      6C61795F 
 4734      696E6974 
ARM GAS  /tmp/cc3ptn5O.s 			page 173


 4734      00
 4735              		.section	.rodata.__func__.6,"a"
 4738              	__func__.6:
 4739 0000 62717565 		.ascii	"bqueue_put_free\000"
 4739      75655F70 
 4739      75745F66 
 4739      72656500 
 4740              		.section	.rodata.__func__.7,"a"
 4743              	__func__.7:
 4744 0000 66616365 		.ascii	"face_landmark_prepare_input\000"
 4744      5F6C616E 
 4744      646D6172 
 4744      6B5F7072 
 4744      65706172 
 4745              		.section	.rodata.__func__.8,"a"
 4748              	__func__.8:
 4749 0000 796F6C6F 		.ascii	"yolo_detector_run\000"
 4749      5F646574 
 4749      6563746F 
 4749      725F7275 
 4749      6E00
 4750              		.section	.rodata.__func__.9,"a"
 4753              	__func__.9:
 4754 0000 62717565 		.ascii	"bqueue_get_ready\000"
 4754      75655F67 
 4754      65745F72 
 4754      65616479 
 4754      00
 4755              		.section	.rodata.__func__.10,"a"
 4758              	__func__.10:
 4759 0000 66616365 		.ascii	"face_landmark_init\000"
 4759      5F6C616E 
 4759      646D6172 
 4759      6B5F696E 
 4759      697400
 4760              		.section	.rodata.__func__.11,"a"
 4763              	__func__.11:
 4764 0000 796F6C6F 		.ascii	"yolo_detector_init\000"
 4764      5F646574 
 4764      6563746F 
 4764      725F696E 
 4764      697400
 4765              		.section	.rodata.__func__.12,"a"
 4768              	__func__.12:
 4769 0000 6E6E5F74 		.ascii	"nn_thread_fct\000"
 4769      68726561 
 4769      645F6663 
 4769      7400
 4770              		.section	.rodata.__func__.13,"a"
 4773              	__func__.13:
 4774 0000 64705F63 		.ascii	"dp_commit_drawing_area\000"
 4774      6F6D6D69 
 4774      745F6472 
 4774      6177696E 
 4774      675F6172 
 4775              		.section	.rodata.__func__.14,"a"
 4778              	__func__.14:
ARM GAS  /tmp/cc3ptn5O.s 			page 174


 4779 0000 64705F75 		.ascii	"dp_update_drawing_area\000"
 4779      70646174 
 4779      655F6472 
 4779      6177696E 
 4779      675F6172 
 4780              		.section	.rodata.__func__.15,"a"
 4783              	__func__.15:
 4784 0000 62757474 		.ascii	"button_init\000"
 4784      6F6E5F69 
 4784      6E697400 
 4785              		.section	.rodata.__func__.16,"a"
 4788              	__func__.16:
 4789 0000 6F6E5F6C 		.ascii	"on_ld_toggle_button_click\000"
 4789      645F746F 
 4789      67676C65 
 4789      5F627574 
 4789      746F6E5F 
 4790              		.section	.rodata.__func__.17,"a"
 4793              	__func__.17:
 4794 0000 6F6E5F70 		.ascii	"on_pd_toggle_button_click\000"
 4794      645F746F 
 4794      67676C65 
 4794      5F627574 
 4794      746F6E5F 
 4795              		.section	.rodata.__func__.18,"a"
 4798              	__func__.18:
 4799 0000 64705F74 		.ascii	"dp_thread_fct\000"
 4799      68726561 
 4799      645F6663 
 4799      7400
 4800              		.section	.rodata.__func__.19,"a"
 4803              	__func__.19:
 4804 0000 6973705F 		.ascii	"isp_thread_fct\000"
 4804      74687265 
 4804      61645F66 
 4804      637400
 4805              		.section	.rodata.__func__.20,"a"
 4808              	__func__.20:
 4809 0000 6170705F 		.ascii	"app_run\000"
 4809      72756E00 
 4810              		.section	.bss.isp_sem_buffer,"aw",%nobits
 4811              		.align	2
 4814              	isp_sem_buffer:
 4815 0000 00000000 		.space	80
 4815      00000000 
 4815      00000000 
 4815      00000000 
 4815      00000000 
 4816              		.section	.bss.isp_sem,"aw",%nobits
 4817              		.align	2
 4820              	isp_sem:
 4821 0000 00000000 		.space	4
 4822              		.section	.bss.isp_thread_stack,"aw",%nobits
 4823              		.align	2
 4826              	isp_thread_stack:
 4827 0000 00000000 		.space	8192
 4827      00000000 
ARM GAS  /tmp/cc3ptn5O.s 			page 175


 4827      00000000 
 4827      00000000 
 4827      00000000 
 4828              		.section	.bss.isp_thread,"aw",%nobits
 4829              		.align	2
 4832              	isp_thread:
 4833 0000 00000000 		.space	96
 4833      00000000 
 4833      00000000 
 4833      00000000 
 4833      00000000 
 4834              		.section	.bss.dp_thread_stack,"aw",%nobits
 4835              		.align	2
 4838              	dp_thread_stack:
 4839 0000 00000000 		.space	8192
 4839      00000000 
 4839      00000000 
 4839      00000000 
 4839      00000000 
 4840              		.section	.bss.dp_thread,"aw",%nobits
 4841              		.align	2
 4844              	dp_thread:
 4845 0000 00000000 		.space	96
 4845      00000000 
 4845      00000000 
 4845      00000000 
 4845      00000000 
 4846              		.section	.bss.nn_thread_stack,"aw",%nobits
 4847              		.align	2
 4850              	nn_thread_stack:
 4851 0000 00000000 		.space	16384
 4851      00000000 
 4851      00000000 
 4851      00000000 
 4851      00000000 
 4852              		.section	.bss.nn_thread,"aw",%nobits
 4853              		.align	2
 4856              	nn_thread:
 4857 0000 00000000 		.space	96
 4857      00000000 
 4857      00000000 
 4857      00000000 
 4857      00000000 
 4858              		.section	.bss.nn_input_queue,"aw",%nobits
 4859              		.align	2
 4862              	nn_input_queue:
 4863 0000 00000000 		.space	188
 4863      00000000 
 4863      00000000 
 4863      00000000 
 4863      00000000 
 4864              		.section	.psram_bss,"aw"
 4865              		.align	5
 4868              	nn_input_buffers:
 4869 0000 00000000 		.space	614400
 4869      00000000 
 4869      00000000 
ARM GAS  /tmp/cc3ptn5O.s 			page 176


 4869      00000000 
 4869      00000000 
 4870              		.section	.bss.frame_event_nb_for_resize,"aw",%nobits
 4871              		.align	2
 4874              	frame_event_nb_for_resize:
 4875 0000 00000000 		.space	4
 4876              		.section	.bss.frame_event_nb,"aw",%nobits
 4877              		.align	2
 4880              	frame_event_nb:
 4881 0000 00000000 		.space	4
 4882              		.section	.bss.ld_landmarks,"aw",%nobits
 4883              		.align	2
 4886              	ld_landmarks:
 4887 0000 00000000 		.space	3744
 4887      00000000 
 4887      00000000 
 4887      00000000 
 4887      00000000 
 4888              		.section	.data.NN_Instance_face_landmark,"aw"
 4889              		.align	2
 4892              	NN_Instance_face_landmark:
 4893 0000 00000000 		.word	NN_Interface_face_landmark
 4894 0004 00000000 		.word	0
 4895 0008 00000000 		.space	40
 4895      00000000 
 4895      00000000 
 4895      00000000 
 4895      00000000 
 4896              		.section	.rodata.str1.1,"aMS",%progbits,1
 4897              	.LC33:
 4898 0000 66616365 		.ascii	"face_landmark\000"
 4898      5F6C616E 
 4898      646D6172 
 4898      6B00
 4899              		.section	.rodata.NN_Interface_face_landmark,"a"
 4900              		.align	2
 4903              	NN_Interface_face_landmark:
 4904 0000 00000000 		.word	.LC33
 4905 0004 00000000 		.word	LL_ATON_EC_Network_Init_face_landmark
 4906 0008 00000000 		.word	LL_ATON_EC_Inference_Init_face_landmark
 4907 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_face_landmark
 4908 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_face_landmark
 4909 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_face_landmark
 4910 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_face_landmark
 4911 001c 00000000 		.word	LL_ATON_EpochBlockItems_face_landmark
 4912 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_face_landmark
 4913 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_face_landmark
 4914 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_face_landmark
 4915              		.section	.data.NN_Instance_yolo_detector,"aw"
 4916              		.align	2
 4919              	NN_Instance_yolo_detector:
 4920 0000 00000000 		.word	NN_Interface_yolo_detector
 4921 0004 00000000 		.word	0
 4922 0008 00000000 		.space	40
 4922      00000000 
 4922      00000000 
 4922      00000000 
ARM GAS  /tmp/cc3ptn5O.s 			page 177


 4922      00000000 
 4923              		.section	.rodata.str1.1
 4924              	.LC34:
 4925 000e 796F6C6F 		.ascii	"yolo_detector\000"
 4925      5F646574 
 4925      6563746F 
 4925      7200
 4926              		.section	.rodata.NN_Interface_yolo_detector,"a"
 4927              		.align	2
 4930              	NN_Interface_yolo_detector:
 4931 0000 0E000000 		.word	.LC34
 4932 0004 00000000 		.word	LL_ATON_EC_Network_Init_yolo_detector
 4933 0008 00000000 		.word	LL_ATON_EC_Inference_Init_yolo_detector
 4934 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_yolo_detector
 4935 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_yolo_detector
 4936 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_yolo_detector
 4937 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_yolo_detector
 4938 001c 00000000 		.word	LL_ATON_EpochBlockItems_yolo_detector
 4939 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_yolo_detector
 4940 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_yolo_detector
 4941 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_yolo_detector
 4942              		.section	.psram_bss
 4943              		.align	5
 4946              	screen_buffer:
 4947 96000 00000000 		.space	768000
 4947      00000000 
 4947      00000000 
 4947      00000000 
 4947      00000000 
 4948              		.section	.bss.cpu_load,"aw",%nobits
 4949              		.align	3
 4952              	cpu_load:
 4953 0000 00000000 		.space	224
 4953      00000000 
 4953      00000000 
 4953      00000000 
 4953      00000000 
 4954              		.section	.data.disp,"aw"
 4955              		.align	2
 4958              	disp:
 4959 0000 00000000 		.space	168
 4959      00000000 
 4959      00000000 
 4959      00000000 
 4959      00000000 
 4960 00a8 00000000 		.space	20
 4960      00000000 
 4960      00000000 
 4960      00000000 
 4960      00000000 
 4961 00bc 01000000 		.word	1
 4962 00c0 00000000 		.word	0
 4963 00c4 00000000 		.space	3800
 4963      00000000 
 4963      00000000 
 4963      00000000 
 4963      00000000 
ARM GAS  /tmp/cc3ptn5O.s 			page 178


 4964              		.section	.bss.lcd_fg_buffer_rd_idx,"aw",%nobits
 4965              		.align	2
 4968              	lcd_fg_buffer_rd_idx:
 4969 0000 00000000 		.space	4
 4970              		.section	.psram_bss
 4971              		.align	5
 4974              	lcd_fg_buffer:
 4975 151800 00000000 		.space	1536000
 4975      00000000 
 4975      00000000 
 4975      00000000 
 4975      00000000 
 4976              		.section	.bss.lcd_bg_buffer_capt_idx,"aw",%nobits
 4977              		.align	2
 4980              	lcd_bg_buffer_capt_idx:
 4981 0000 00000000 		.space	4
 4982              		.section	.data.lcd_bg_buffer_disp_idx,"aw"
 4983              		.align	2
 4986              	lcd_bg_buffer_disp_idx:
 4987 0000 01000000 		.word	1
 4988              		.section	.psram_bss
 4989              		.align	5
 4992              	lcd_bg_buffer:
 4993 2c8800 00000000 		.space	6144000
 4993      00000000 
 4993      00000000 
 4993      00000000 
 4993      00000000 
 4994              		.text
 4995              	.Letext0:
 4996              		.file 5 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4997              		.file 6 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4998              		.file 7 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 4999              		.file 8 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5000              		.file 9 "Lib/FreeRTOS/Source/include/projdefs.h"
 5001              		.file 10 "Lib/FreeRTOS/Source/portable/GCC/ARM_CM55_NTZ/non_secure/portmacrocommon.h"
 5002              		.file 11 "Lib/FreeRTOS/Source/include/FreeRTOS.h"
 5003              		.file 12 "Lib/FreeRTOS/Source/include/task.h"
 5004              		.file 13 "Lib/FreeRTOS/Source/include/queue.h"
 5005              		.file 14 "Lib/FreeRTOS/Source/include/semphr.h"
 5006              		.file 15 "STM32Cube_FW_N6/Drivers/CMSIS/Include/core_cm55.h"
 5007              		.file 16 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n657xx.h"
 5008              		.file 17 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n6xx.h"
 5009              		.file 18 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_def.h"
 5010              		.file 19 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gpio.h"
 5011              		.file 20 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_dcmipp.h"
 5012              		.file 21 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gfxmmu.h"
 5013              		.file 22 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_pp_output_if.h"
 5014              		.file 23 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_yolov8_pp_if.h"
 5015              		.file 24 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/pd_pp_output_if.h"
 5016              		.file 25 "Inc/ld.h"
 5017              		.file 26 "Lib/screenl/Inc/scrl.h"
 5018              		.file 27 "STM32Cube_FW_N6/Drivers/BSP/STM32N6570-DK/stm32n6570_discovery.h"
 5019              		.file 28 "STM32Cube_FW_N6/Utilities/lcd/../Fonts/fonts.h"
 5020              		.file 29 "STM32Cube_FW_N6/Utilities/lcd/stm32_lcd.h"
 5021              		.file 30 "Lib/NemaGFX/include/nema_hal.h"
 5022              		.file 31 "Lib/NemaGFX/include/nema_cmdlist.h"
ARM GAS  /tmp/cc3ptn5O.s 			page 179


 5023              		.file 32 "Lib/Camera_Middleware/cmw_camera.h"
 5024              		.file 33 "Lib/ipl/Inc/IPL_resize.h"
 5025              		.file 34 "Lib/ai-postprocessing-wrapper/app_postprocess.h"
 5026              		.file 35 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_runtime.h"
 5027              		.file 36 "Inc/app_cam.h"
 5028              		.file 37 "Inc/FreeRTOSConfig.h"
 5029              		.file 38 "Inc/stm32_lcd_ex.h"
 5030              		.file 39 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal.h"
 5031              		.file 40 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5032              		.file 41 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5033              		.file 42 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5034              		.file 43 "<built-in>"
ARM GAS  /tmp/cc3ptn5O.s 			page 180


DEFINED SYMBOLS
                            *ABS*:00000000 app.c
     /tmp/cc3ptn5O.s:26     .text.LL_Buffer_addr_start:00000000 $t
     /tmp/cc3ptn5O.s:31     .text.LL_Buffer_addr_start:00000000 LL_Buffer_addr_start
     /tmp/cc3ptn5O.s:76     .text.clamp_point:00000000 $t
     /tmp/cc3ptn5O.s:81     .text.clamp_point:00000000 clamp_point
     /tmp/cc3ptn5O.s:162    .text.clamp_corners:00000000 $t
     /tmp/cc3ptn5O.s:167    .text.clamp_corners:00000000 clamp_corners
     /tmp/cc3ptn5O.s:232    .text.roi_to_corners:00000000 $t
     /tmp/cc3ptn5O.s:237    .text.roi_to_corners:00000000 roi_to_corners
     /tmp/cc3ptn5O.s:311    .text.isp_thread_fct:00000000 $t
     /tmp/cc3ptn5O.s:316    .text.isp_thread_fct:00000000 isp_thread_fct
     /tmp/cc3ptn5O.s:362    .text.isp_thread_fct:00000028 $d
     /tmp/cc3ptn5O.s:4820   .bss.isp_sem:00000000 isp_sem
     /tmp/cc3ptn5O.s:4803   .rodata.__func__.19:00000000 __func__.19
     /tmp/cc3ptn5O.s:370    .text.on_pd_toggle_button_click:00000000 $t
     /tmp/cc3ptn5O.s:375    .text.on_pd_toggle_button_click:00000000 on_pd_toggle_button_click
     /tmp/cc3ptn5O.s:449    .text.on_pd_toggle_button_click:0000004c $d
     /tmp/cc3ptn5O.s:4793   .rodata.__func__.17:00000000 __func__.17
     /tmp/cc3ptn5O.s:456    .text.on_ld_toggle_button_click:00000000 $t
     /tmp/cc3ptn5O.s:461    .text.on_ld_toggle_button_click:00000000 on_ld_toggle_button_click
     /tmp/cc3ptn5O.s:535    .text.on_ld_toggle_button_click:0000004c $d
     /tmp/cc3ptn5O.s:4788   .rodata.__func__.16:00000000 __func__.16
     /tmp/cc3ptn5O.s:542    .text.button_process:00000000 $t
     /tmp/cc3ptn5O.s:547    .text.button_process:00000000 button_process
     /tmp/cc3ptn5O.s:605    .text.button_init.part.0:00000000 $t
     /tmp/cc3ptn5O.s:610    .text.button_init.part.0:00000000 button_init.part.0
     /tmp/cc3ptn5O.s:633    .text.button_init.part.0:00000010 $d
     /tmp/cc3ptn5O.s:4783   .rodata.__func__.15:00000000 __func__.15
     /tmp/cc3ptn5O.s:640    .text.display_ld_hand:00000000 $t
     /tmp/cc3ptn5O.s:645    .text.display_ld_hand:00000000 display_ld_hand
     /tmp/cc3ptn5O.s:955    .text.nn_thread_fct:00000000 $t
     /tmp/cc3ptn5O.s:960    .text.nn_thread_fct:00000000 nn_thread_fct
     /tmp/cc3ptn5O.s:1918   .text.nn_thread_fct:0000032c $d
     /tmp/cc3ptn5O.s:4919   .data.NN_Instance_yolo_detector:00000000 NN_Instance_yolo_detector
     /tmp/cc3ptn5O.s:4763   .rodata.__func__.11:00000000 __func__.11
     /tmp/cc3ptn5O.s:4758   .rodata.__func__.10:00000000 __func__.10
     /tmp/cc3ptn5O.s:4862   .bss.nn_input_queue:00000000 nn_input_queue
     /tmp/cc3ptn5O.s:4768   .rodata.__func__.12:00000000 __func__.12
     /tmp/cc3ptn5O.s:4753   .rodata.__func__.9:00000000 __func__.9
     /tmp/cc3ptn5O.s:4748   .rodata.__func__.8:00000000 __func__.8
     /tmp/cc3ptn5O.s:4743   .rodata.__func__.7:00000000 __func__.7
     /tmp/cc3ptn5O.s:1948   .text.nn_thread_fct:00000398 $t
     /tmp/cc3ptn5O.s:2579   .text.nn_thread_fct:000005c8 $d
     /tmp/cc3ptn5O.s:4892   .data.NN_Instance_face_landmark:00000000 NN_Instance_face_landmark
     /tmp/cc3ptn5O.s:4886   .bss.ld_landmarks:00000000 ld_landmarks
     /tmp/cc3ptn5O.s:4738   .rodata.__func__.6:00000000 __func__.6
     /tmp/cc3ptn5O.s:4958   .data.disp:00000000 disp
     /tmp/cc3ptn5O.s:2598   .text.display_hand:00000000 $t
     /tmp/cc3ptn5O.s:2604   .text.display_hand:00000000 display_hand
     /tmp/cc3ptn5O.s:2884   .text.display_hand:0000012c $d
     /tmp/cc3ptn5O.s:2906   .text.dp_thread_fct:00000000 $t
     /tmp/cc3ptn5O.s:2911   .text.dp_thread_fct:00000000 dp_thread_fct
     /tmp/cc3ptn5O.s:3608   .text.dp_thread_fct:00000278 $d
     /tmp/cc3ptn5O.s:4798   .rodata.__func__.18:00000000 __func__.18
     /tmp/cc3ptn5O.s:4778   .rodata.__func__.14:00000000 __func__.14
     /tmp/cc3ptn5O.s:4952   .bss.cpu_load:00000000 cpu_load
ARM GAS  /tmp/cc3ptn5O.s 			page 181


     /tmp/cc3ptn5O.s:4773   .rodata.__func__.13:00000000 __func__.13
     /tmp/cc3ptn5O.s:4968   .bss.lcd_fg_buffer_rd_idx:00000000 lcd_fg_buffer_rd_idx
     /tmp/cc3ptn5O.s:4974   .psram_bss:00151800 lcd_fg_buffer
     /tmp/cc3ptn5O.s:3653   .text.app_run:00000000 $t
     /tmp/cc3ptn5O.s:3659   .text.app_run:00000000 app_run
     /tmp/cc3ptn5O.s:4242   .text.app_run:0000021c $d
     /tmp/cc3ptn5O.s:4992   .psram_bss:002c8800 lcd_bg_buffer
     /tmp/cc3ptn5O.s:4986   .data.lcd_bg_buffer_disp_idx:00000000 lcd_bg_buffer_disp_idx
     /tmp/cc3ptn5O.s:4946   .psram_bss:00096000 screen_buffer
     /tmp/cc3ptn5O.s:4733   .rodata.__func__.5:00000000 __func__.5
     /tmp/cc3ptn5O.s:4808   .rodata.__func__.20:00000000 __func__.20
     /tmp/cc3ptn5O.s:4868   .psram_bss:00000000 nn_input_buffers
     /tmp/cc3ptn5O.s:4814   .bss.isp_sem_buffer:00000000 isp_sem_buffer
     /tmp/cc3ptn5O.s:4856   .bss.nn_thread:00000000 nn_thread
     /tmp/cc3ptn5O.s:4850   .bss.nn_thread_stack:00000000 nn_thread_stack
     /tmp/cc3ptn5O.s:4844   .bss.dp_thread:00000000 dp_thread
     /tmp/cc3ptn5O.s:4838   .bss.dp_thread_stack:00000000 dp_thread_stack
     /tmp/cc3ptn5O.s:4832   .bss.isp_thread:00000000 isp_thread
     /tmp/cc3ptn5O.s:4826   .bss.isp_thread_stack:00000000 isp_thread_stack
     /tmp/cc3ptn5O.s:4284   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 $t
     /tmp/cc3ptn5O.s:4290   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 CMW_CAMERA_PIPE_FrameEventCallback
     /tmp/cc3ptn5O.s:4614   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000150 $d
     /tmp/cc3ptn5O.s:4728   .rodata.__func__.3:00000000 __func__.3
     /tmp/cc3ptn5O.s:4723   .rodata.__func__.2:00000000 __func__.2
     /tmp/cc3ptn5O.s:4880   .bss.frame_event_nb:00000000 frame_event_nb
     /tmp/cc3ptn5O.s:4718   .rodata.__func__.1:00000000 __func__.1
     /tmp/cc3ptn5O.s:4874   .bss.frame_event_nb_for_resize:00000000 frame_event_nb_for_resize
     /tmp/cc3ptn5O.s:4713   .rodata.__func__.0:00000000 __func__.0
     /tmp/cc3ptn5O.s:4980   .bss.lcd_bg_buffer_capt_idx:00000000 lcd_bg_buffer_capt_idx
     /tmp/cc3ptn5O.s:4637   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 $t
     /tmp/cc3ptn5O.s:4643   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 CMW_CAMERA_PIPE_VsyncEventCallback
     /tmp/cc3ptn5O.s:4706   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000030 $d
     /tmp/cc3ptn5O.s:4811   .bss.isp_sem_buffer:00000000 $d
     /tmp/cc3ptn5O.s:4817   .bss.isp_sem:00000000 $d
     /tmp/cc3ptn5O.s:4823   .bss.isp_thread_stack:00000000 $d
     /tmp/cc3ptn5O.s:4829   .bss.isp_thread:00000000 $d
     /tmp/cc3ptn5O.s:4835   .bss.dp_thread_stack:00000000 $d
     /tmp/cc3ptn5O.s:4841   .bss.dp_thread:00000000 $d
     /tmp/cc3ptn5O.s:4847   .bss.nn_thread_stack:00000000 $d
     /tmp/cc3ptn5O.s:4853   .bss.nn_thread:00000000 $d
     /tmp/cc3ptn5O.s:4859   .bss.nn_input_queue:00000000 $d
     /tmp/cc3ptn5O.s:4865   .psram_bss:00000000 $d
     /tmp/cc3ptn5O.s:4871   .bss.frame_event_nb_for_resize:00000000 $d
     /tmp/cc3ptn5O.s:4877   .bss.frame_event_nb:00000000 $d
     /tmp/cc3ptn5O.s:4883   .bss.ld_landmarks:00000000 $d
     /tmp/cc3ptn5O.s:4889   .data.NN_Instance_face_landmark:00000000 $d
     /tmp/cc3ptn5O.s:4903   .rodata.NN_Interface_face_landmark:00000000 NN_Interface_face_landmark
     /tmp/cc3ptn5O.s:4900   .rodata.NN_Interface_face_landmark:00000000 $d
     /tmp/cc3ptn5O.s:4916   .data.NN_Instance_yolo_detector:00000000 $d
     /tmp/cc3ptn5O.s:4930   .rodata.NN_Interface_yolo_detector:00000000 NN_Interface_yolo_detector
     /tmp/cc3ptn5O.s:4927   .rodata.NN_Interface_yolo_detector:00000000 $d
     /tmp/cc3ptn5O.s:4949   .bss.cpu_load:00000000 $d
     /tmp/cc3ptn5O.s:4955   .data.disp:00000000 $d
     /tmp/cc3ptn5O.s:4965   .bss.lcd_fg_buffer_rd_idx:00000000 $d
     /tmp/cc3ptn5O.s:4977   .bss.lcd_bg_buffer_capt_idx:00000000 $d
     /tmp/cc3ptn5O.s:4983   .data.lcd_bg_buffer_disp_idx:00000000 $d
                           .group:00000000 wm4.0.c552ae9005b0f2cca11872fae5d4b7f2
ARM GAS  /tmp/cc3ptn5O.s 			page 182


                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.e0c9f337c65cb9f22ed5f23d082bc78b
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_gcc.h.26.7a5fd1a99dbedde687044a4433ab3e15
                           .group:00000000 wm4.newlib.h.7.591ac1bd65c1f5b34864757667a05252
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.math.h.13.47cfc34cae8a1153323939c4d32cf7c2
                           .group:00000000 wm4.float.h.29.0e9d9baf95ec39f9555dc80c6e28186b
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.arm_math_types.h.94.a6c8422e2657ad4cd95bd8be69ba02aa
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4.arm_mve.h.38.47b22bbd301ce82bc6dafd1a387f65a3
                           .group:00000000 wm4.arm_math_types.h.559.cab78f278b684a3ea2271947c7aea680
                           .group:00000000 wm4.arm_math_memory.h.28.fe8a81c6a9ac13061a5f748732089249
                           .group:00000000 wm4.none.h.185.db055cca83e83f96d8d0bb450fbdf4bb
                           .group:00000000 wm4.utils.h.27.57524573fe37b04009eecf3582a4c591
                           .group:00000000 wm4.fast_math_functions.h.28.8eb7477260c1d6b62047c49a01c4cbaa
                           .group:00000000 wm4.controller_functions.h.28.7bed7d7a726df2f65b8a3d89cff01247
                           .group:00000000 wm4.filtering_functions.h.46.6cf1424fb1f86d5f9958d208b83340a1
                           .group:00000000 wm4.postprocess_conf.h.22.3cea487938a8716b861207393e069778
                           .group:00000000 wm4.app.h.24.8dd4c0fb84cd0b63d7417a5327c5d796
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.47.dc31ec4674d7bcb103c9f08809549f45
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4.app_cam.h.19.2495a46447d71a1025370e29864418f5
                           .group:00000000 wm4.app_config.h.19.88dee04c97f3e42d3acfeeca22b174e5
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.ll_aton_config.h.20.79eb8be0291ee9086e6be08969d61846
                           .group:00000000 wm4.ll_aton_attributes.h.20.26d469460cb32db5740effdc8cc403f3
                           .group:00000000 wm4.assert.h.11.d99a111e320bc5106fc4046225782672
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.ae5ea2b0ff9ea6e39e585807e35200d3
                           .group:00000000 wm4.ll_aton_util.h.34.9098eaa90d3d72b819973556e3e5fe44
                           .group:00000000 wm4.FreeRTOS.h.59.647b1b0da38e4e98108aae13c8abe9ee
                           .group:00000000 wm4.FreeRTOSConfig.h.59.2629c72cff9e6dbe880a2dc225eae516
                           .group:00000000 wm4.FreeRTOS.h.80.7742fabaf5accf3762dc12f7f259a8a0
                           .group:00000000 wm4.projdefs.h.30.55a824156f299c075c33148a9fdadb99
                           .group:00000000 wm4.portmacro.h.30.cbb4b2da41f551c2a9904f0d03a1ce3e
ARM GAS  /tmp/cc3ptn5O.s 			page 183


                           .group:00000000 wm4.portmacrocommon.h.30.d5cb67896ab50a95311be7e023da5c4f
                           .group:00000000 wm4.portmacro.h.68.4051ecf710d074fb55b16d91dfebeeaa
                           .group:00000000 wm4.portable.h.61.d557c57974d490f056246a26cdcddd6c
                           .group:00000000 wm4.mpu_wrappers.h.30.ccc5f1a6903f941a88c268f5f62af3fe
                           .group:00000000 wm4.portable.h.189.522b8bd52a171d3fd1432ef06d0caa63
                           .group:00000000 wm4.FreeRTOS.h.102.fb871f3e464d99c5a57b3115545a02ad
                           .group:00000000 wm4.list.h.59.bce6419520cd4f5f98779a1530bf2118
                           .group:00000000 wm4.task.h.56.84290139c73b47f5b9aac361361a2a31
                           .group:00000000 wm4.queue.h.68.219f47fba8b59640449b84d04c5bd6d8
                           .group:00000000 wm4.semphr.h.40.c1a9c6f5bf0feb4da0b6a45d234a79d0
                           .group:00000000 wm4.ll_aton_platform.h.20.06ded592ee586a6abb6019a90ebd54df
                           .group:00000000 wm4.stm32n6xx_hal_conf.h.21.004a06df6e15ac197e03f723792da58a
                           .group:00000000 wm4.arm_cmse.h.103.a0d15a79c4c9a67da8d5831704d7248e
                           .group:00000000 wm4.stm32n6xx.h.34.80585dd08aa426c932f6311fdb7386da
                           .group:00000000 wm4.stm32n657xx.h.26.acd272cb67318cc1a4791ce2f0720ca6
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm55.h.68.832d5cf835639cc0d28219c3d2867330
                           .group:00000000 wm4.core_cm55.h.196.52e437a270752da561676e507b35baeb
                           .group:00000000 wm4.mpu_armv8.h.32.9d72426c8e2b47753456dcb84802c5b3
                           .group:00000000 wm4.pmu_armv8.h.32.eaa95f88a71b29390b135fd81c071b6b
                           .group:00000000 wm4.core_cm55.h.4411.860dad8650880893dd57b815844f7186
                           .group:00000000 wm4.cachel1_armv7.h.32.abd77761a989e008b0c60891114a33c7
                           .group:00000000 wm4.stm32n657xx.h.575.1c2a5e6bedffc6f9083dcc857bc6d09d
                           .group:00000000 wm4.stm32n6xx.h.114.5cf793d8af485e14f110e3e24bde1aa5
                           .group:00000000 wm4.stm32_hal_legacy.h.22.87fb12bf5a1a1e00fc134f22bc9aa8c4
                           .group:00000000 wm4.stm32n6xx_hal_def.h.63.2cbbf1954826c09c874c4e06e42e8b71
                           .group:00000000 wm4.stm32n6xx_ll_bus.h.38.2366a295ee4cdb04833997d3787fcd2d
                           .group:00000000 wm4.stm32n6xx_ll_rcc.h.21.002e22a16fd7f67dde6dce41e8ba9620
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.194.1cb1283e40f9bebcd3fba2a9a961838e
                           .group:00000000 wm4.stm32n6xx_hal_rcc_ex.h.21.79aa32178dfef625fbd20d362449acfa
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.4359.3f0b7ad33826d95438602c9aebc08af9
                           .group:00000000 wm4.stm32n6xx_hal_gpio.h.21.89d54af663b98eb8fc098192053f7eeb
                           .group:00000000 wm4.stm32n6xx_hal_gpio_ex.h.22.4acb2e3511a98bb48b81cfc8e09fd59e
                           .group:00000000 wm4.stm32n6xx_hal_rif.h.21.424d0bafb874a777dee3742a22e13037
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.21.61e48c5c2e8d25d22177834b232fe45c
                           .group:00000000 wm4.stm32n6xx_hal_dma_ex.h.21.66e597beb090a165329d6ccf665e41bc
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.1020.87e2180c009560b617c1f8208140c950
                           .group:00000000 wm4.stm32n6xx_hal_cortex.h.21.f493623cc58f9454ab4eae41e395c5cc
                           .group:00000000 wm4.stm32n6xx_hal_bsec.h.21.61b309e67dd810e28897a01b1b21a97f
                           .group:00000000 wm4.stm32n6xx_hal_dcmipp.h.21.f538bfd785c6469670251ac9bc7af55d
                           .group:00000000 wm4.stm32n6xx_hal_dma2d.h.21.75c8d46cdbb72970123b3f34ae2043d7
                           .group:00000000 wm4.stm32n6xx_hal_exti.h.21.fda87e715ea6b98239ec30171d1df594
                           .group:00000000 wm4.stm32n6xx_hal_gfxmmu.h.21.9784a9103143d48bd3c37389d0e0b8e6
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.21.3f483626ff64c5bf027265bb2e1d1331
                           .group:00000000 wm4.stm32n6xx_hal_i2c_ex.h.21.79e9196c22282cdaf6b4047893638c45
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.741.1084702632703acc669e4282b3043372
                           .group:00000000 wm4.stm32n6xx_hal_icache.h.21.194b4ec6e76f32b14f65c85616854850
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.21.ae1eb09930e7e550e48e418ac5849e4d
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.1002.b13ede7fc94ed5ad1c6768a157d2149a
                           .group:00000000 wm4.stm32n6xx_ll_usb.h.21.d518a5d97876c2ff49040c20a2c4a120
                           .group:00000000 wm4.stm32n6xx_hal_pcd.h.155.27040aac6844effe2af8c180caf1dd2e
                           .group:00000000 wm4.stm32n6xx_hal_pwr.h.21.cdb73e4869c3fed3fc84f901ec0e5f0a
                           .group:00000000 wm4.stm32n6xx_hal_pwr_ex.h.21.1a673224a58b0c1e5fad8eeda6514208
                           .group:00000000 wm4.stm32n6xx_hal_ramcfg.h.21.a62dfbb4d2c14e9a8c634a215e37bd3d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.21.9f810303326e2d91749800e9911f8e4d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.906.93ec0695066db4253cdbcb7d84358a0b
                           .group:00000000 wm4.stm32n6xx_hal_tim.h.21.839dd2b2a70382fb2c44f8f293a84d5f
ARM GAS  /tmp/cc3ptn5O.s 			page 184


                           .group:00000000 wm4.stm32n6xx_hal_tim_ex.h.21.e372d5ac63c13441211ea4ecbd353150
                           .group:00000000 wm4.stm32n6xx_hal_uart.h.21.230f549bfa0d5ebfd77bfb311b2aca15
                           .group:00000000 wm4.stm32n6xx_hal_uart_ex.h.21.a0d5511e1d0703b7b5278c8f5472b96d
                           .group:00000000 wm4.stm32n6xx_hal_xspi.h.21.e17898be2073b6b6b19faf30b4e304e9
                           .group:00000000 wm4.stm32n6xx_hal_cacheaxi.h.21.7c3375b7903ec42376e4883320997f74
                           .group:00000000 wm4.stm32n6xx_hal_gpu2d.h.21.48d0249122abad294a630c39cc4ebaed
                           .group:00000000 wm4.stm32n6xx_hal.h.81.5e59143eba07faca3e9aeaa5470826c8
                           .group:00000000 wm4.ll_aton_platform.h.288.664a74b8c5792a861b3d52bd39f4a693
                           .group:00000000 wm4.ATON.h.19.cf7dff4c0f1bfe90e42066f604751dc7
                           .group:00000000 wm4.ll_aton_rcompat.h.22.b2bd0d777466a5ac720f3b2429c5fea7
                           .group:00000000 wm4.ll_aton_platform.h.383.f09ccd502bb682b863f991d963ee7462
                           .group:00000000 wm4.ll_aton_osal_freertos.h.62.85a065f77def7f6fef26149f92fe1378
                           .group:00000000 wm4.ll_aton_osal.h.116.bc018513feb9b28713cf2afc78ec679b
                           .group:00000000 wm4.ll_aton_rt_user_api.h.71.e6b7f8d03b2c998f838260ad3cb6cd40
                           .group:00000000 wm4.od_pp_output_if.h.11.62a3da738caf687aa42d96759c237b2c
                           .group:00000000 wm4.mpe_pp_output_if.h.11.db0dd5ceb87072354c56b51e8f9b2a0d
                           .group:00000000 wm4.pd_pp_output_if.h.19.b7de9bd1876930668a82409743b6dbf4
                           .group:00000000 wm4.spe_pp_output_if.h.11.cb67d0d15a71c95e0e8b7fee8a9755fe
                           .group:00000000 wm4.iseg_pp_output_if.h.11.df7e791a4e783022a9fba78cdb1c05d4
                           .group:00000000 wm4.sseg_pp_output_if.h.11.caf00fb1ae24f8dc9c80bee7827b96f2
                           .group:00000000 wm4.app_postprocess.h.49.6186ff44b2c06089fe0297042919e83a
                           .group:00000000 wm4.isp_conf.h.21.bfb1d020517608810095aa56acf25d1e
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.isp_core.h.109.be5387f515355b6edcb70af2607f9a68
                           .group:00000000 wm4.ld.h.19.137dbadf938c8a0cfe15d7982e5e13e2
                           .group:00000000 wm4.cmw_errno.h.21.91021ac9b2627a1ce6b8517d105715d1
                           .group:00000000 wm4.stm32n6570_discovery_conf.h.21.f52c8202689527a3dc0d9c6cba9c0416
                           .group:00000000 wm4.stm32n6570_discovery_errno.h.22.80e523b09444a11ebe4b6e24ae914f0e
                           .group:00000000 wm4.stm32n6570_discovery_bus.h.62.3b5b2c6837f7adeb489604fa214cd371
                           .group:00000000 wm4.cmw_camera.h.33.b34cbb506ffb5bbc0bae0cee9fc48966
                           .group:00000000 wm4.stm32n6570_discovery.h.25.5fc3699797f7c334a2e25a2a6a563b07
                           .group:00000000 wm4.lcd.h.21.98701c105e66fef2e089854e5bc0fe32
                           .group:00000000 wm4.stm32_lcd.h.55.1a04e503950bf34ef3721d2ebb9542fc
                           .group:00000000 wm4.stm32_lcd_ex.h.21.eaf9c9c1000e162e58259e027110f2f5
                           .group:00000000 wm4.utils.h.19.2f7e4a8a839d9215c56961f5a9914d6d
                           .group:00000000 wm4.nema_sys_defs.h.24.0b35b5138cb9b4a3130f5d424bc2bcc0
                           .group:00000000 wm4.nema_hal.h.193.74a3b292db2bcbda0132dae40ae0f4e5
                           .group:00000000 wm4.nema_cmdlist.h.30.a652eb980f08f0ed22ad00119d504926
                           .group:00000000 wm4.nema_graphics.h.61.b3907f86eccb4e55a4b69e8aebdd3657
                           .group:00000000 wm4.nema_blender.h.30.fb13cc9231bd108bca212984b3a891e0
                           .group:00000000 wm4.nema_math.h.30.ef7265c89982f7dae18e3ec2d7f3d003
                           .group:00000000 wm4.nema_version.h.35.6aae27202c190348dff84b89d4c12df7
                           .group:00000000 wm4.nema_error.h.29.50848ed81d21ff4ae4b870fae3681118

UNDEFINED SYMBOLS
xQueueSemaphoreTake
__assert_func
CAM_IspUpdate
xQueueGenericSend
BSP_PB_GetState
cos
sin
UTIL_LCD_FillCircle
LL_ATON_Output_Buffers_Info_yolo_detector
LL_ATON_Input_Buffers_Info_yolo_detector
ARM GAS  /tmp/cc3ptn5O.s 			page 185


app_postprocess_init
LL_ATON_Output_Buffers_Info_face_landmark
LL_ATON_Input_Buffers_Info_face_landmark
HAL_GetTick
CAM_NNPipe_Start
LL_ATON_Set_User_Input_Buffer_yolo_detector
LL_ATON_RT_Main
app_postprocess_run
memset
IPL_resize_bilinear_iu8ou8_with_strides_RGB
ld_post_process
memcpy
UTIL_LCD_DrawRect
UTIL_LCD_DrawLine
__aeabi_ul2d
BSP_PB_Init
SCRL_SetAddress_NoReload
UTIL_LCD_FillRect
TIM4_Get_Value
ulTaskGetIdleRunTimeCounter
memmove
UTIL_LCD_GetFont
UTIL_LCDEx_PrintfAt
SCRL_ReloadLayer
puts
SCRL_Init
UTIL_LCD_SetLayer
UTIL_LCD_Clear
UTIL_LCD_SetFont
UTIL_LCD_SetTextColor
xQueueCreateCountingSemaphoreStatic
vQueueDelete
CAM_Init
xQueueCreateMutexStatic
CAM_DisplayPipe_Start
xTaskCreateStatic
Font20
CMW_CAMERA_GetDCMIPPHandle
HAL_DCMIPP_PIPE_SetMemoryAddress
SRCL_Update
xPortIsInsideInterrupt
xQueueGiveFromISR
LL_ATON_EC_Network_Init_face_landmark
LL_ATON_EC_Inference_Init_face_landmark
LL_ATON_Set_User_Input_Buffer_face_landmark
LL_ATON_Get_User_Input_Buffer_face_landmark
LL_ATON_Set_User_Output_Buffer_face_landmark
LL_ATON_Get_User_Output_Buffer_face_landmark
LL_ATON_EpochBlockItems_face_landmark
LL_ATON_Internal_Buffers_Info_face_landmark
LL_ATON_EC_Network_Init_yolo_detector
LL_ATON_EC_Inference_Init_yolo_detector
LL_ATON_Get_User_Input_Buffer_yolo_detector
LL_ATON_Set_User_Output_Buffer_yolo_detector
LL_ATON_Get_User_Output_Buffer_yolo_detector
LL_ATON_EpochBlockItems_yolo_detector
LL_ATON_Internal_Buffers_Info_yolo_detector
ARM GAS  /tmp/cc3ptn5O.s 			page 186


