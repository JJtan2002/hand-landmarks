ARM GAS  /tmp/cczRRmNE.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 4
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"app.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "Src/app.c"
  25              		.section	.text.LL_Buffer_addr_start,"ax",%progbits
  26              		.align	1
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	LL_Buffer_addr_start:
  32              	.LVL0:
  33              	.LFB2660:
  34              		.file 2 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h"
   1:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
   2:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   3:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @file    ll_aton_NN_interface.h
   4:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @author  SRA Artificial Intelligence & Embedded Architectures
   5:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief   Interface that defines a NN generated by the AtoNN Compiler.
   6:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
   7:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @attention
   8:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
   9:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * Copyright (c) 2024 STMicroelectronics.
  10:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * All rights reserved.
  11:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  12:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * in the root directory of this software component.
  14:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  *
  16:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  ******************************************************************************
  17:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
  18:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  19:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef __LL_ATON_NN_INTERFACE_H
  20:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define __LL_ATON_NN_INTERFACE_H
  21:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  22:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef __cplusplus
  23:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** extern "C"
  24:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** {
ARM GAS  /tmp/cczRRmNE.s 			page 2


  25:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
  26:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  27:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <assert.h>
  28:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdbool.h>
  29:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stddef.h>
  30:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include <stdint.h>
  31:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  32:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_config.h"
  33:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  34:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_attributes.h"
  35:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #include "ll_aton_util.h"
  36:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  37:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup User I/O Return Values & Callback Event Types
  38:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  39:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  40:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  41:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_User_IO_Result
  42:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_NOERROR,     /**< */
  44:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_ALIGN, /**< */
  45:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_SIZE,  /**< */
  46:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_User_IO_WRONG_INDEX, /**< */
  47:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_User_IO_Result_t;
  48:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  49:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum LL_ATON_RT_Callbacktype
  50:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  51:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_START,  /**< Callback called before start_epoch_block */
  52:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_START, /**< Callback called after start_epoch_block */
  53:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_PRE_END,    /**< Callback called before end_epoch_block */
  54:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_POST_END,   /**< Callback called after end_epoch_block */
  55:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_Init,    /**< Callback called after `LL_ATON_RT_Init_Network`,
  56:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  57:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_NN_DeInit,  /**< Callback called after `LL_ATON_RT_DeInit_Network`,
  58:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                          *     NOTE: 3rd parameter passed is `NULL` */
  59:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Init,    /**< Callback called after `LL_ATON_RT_RuntimeInit` */
  60:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_RT_Callbacktype_RT_Deinit,  /**< Callback called before `LL_ATON_RT_RuntimeDeInit` */
  61:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_ATON_RT_Callbacktype_t;
  62:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  63:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
  64:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
  65:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  66:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  67:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Epoch Blocks
  68:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
  69:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  70:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  71:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /* this is needed to avoid some compilers (e.g. KEIL) that observe a strict semantic about conver
  72:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * pointers to integers in cost initializers
  73:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
  74:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef union
  75:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  76:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     unsigned char *p;
  77:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t i;
  78:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } __LL_address_t;
  79:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  80:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*EpochBlock_FuncPtr_t)(const void *epoch_block);
  81:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/cczRRmNE.s 			page 3


  82:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
  83:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  84:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_NONE = 0x0,                 /**< */
  85:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_start = (0x1 << 0),   /**< First EpochBlock of an Epoch */
  86:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_epoch_end = (0x1 << 1),     /**< Last EpochBlock of an Epoch */
  87:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob = (0x1 << 2),          /**< Item is an Epoch Blob */
  88:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_last_eb = (0x1 << 3),       /**< Last EpochBlock */
  89:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_hw = (0x1 << 4),       /**< Pure HW EpochBlock */
  90:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_pure_sw = (0x1 << 5),       /**< Pure SW EpochBlock */
  91:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_hybrid = (0x1 << 6),        /**< Hybrid EpochBlock (i.e. mixed HW/SW) */
  92:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_internal = (0x1 << 7),      /**< ATON lib internal EpochBlock (used to impleme
  93:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_Flags_blob_encrypted = (0x1 << 8) /**< The blob is encrypted and must be decrypted o
  94:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_Flags_t;
  95:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
  96:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
  97:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  98:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t start_epoch_block; /**< Method to execute the EpochBlock */
  99:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     EpochBlock_FuncPtr_t end_epoch_block;   /**< Method to be executed when the EpochBlock ends */
 100:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uintptr_t blob_address;                 /**< Blob address (in case this EpochBlock represents a
 101:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t wait_mask;                     /**< Mask needed to check when an EpochBlock ends
 102:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - if epoch blob: number (not bitmask) of epoch co
 103:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                              *    - otherwise: bitmask with all output streaming en
 104:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t flags;                         /**< EpochBlock flags */
 105:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifdef LL_ATON_EB_DBG_INFO
 106:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t epoch_num;             /**< Epoch number / First epoch number within blob */
 107:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int16_t last_epoch_num;        /**< Epoch number / Last epoch number within blob */
 108:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t in_streng_mask;       /**< Debug information about input streaming engines used in epo
 109:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t out_streng_mask;      /**< Debug information about output streaming engines used in ep
 110:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_npu_cycles; /**< Debug information estimates for NPU cycles in epoch w/o mem
 111:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint64_t estimated_tot_cycles; /**< Debug information estimates for NPU cycles in epoch w/ memo
 112:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                             // LL_ATON_EB_DBG_INFO
 113:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } EpochBlock_ItemTypeDef;
 114:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef EpochBlock_ItemTypeDef LL_ATON_RT_EpochBlockItem_t;
 115:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 116:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 117:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 118:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 119:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 120:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for User Callbacks
 121:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 122:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 123:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 124:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 125:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last one of an array of `const EpochBlock_ItemType
 126:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 127:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 128:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb);
 129:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 130:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 131:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the first EpochBlock of an Epoch
 132:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 133:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 134:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb);
 135:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 136:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 137:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the last EpochBlock of an Epoch
 138:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
ARM GAS  /tmp/cczRRmNE.s 			page 4


 139:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 140:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb);
 141:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 142:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 143:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is the an Epoch Blob
 144:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 145:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 146:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb);
 147:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 148:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 149:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if - in case this epoch is a blob (see above) - the blob is encrypted
 150:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 151:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 152:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb);
 153:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 154:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 155:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is pure SW epoch
 156:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 157:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 158:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb);
 159:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 160:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 161:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a pure HW or mixed SW/HW epoch
 162:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 163:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 164:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb);
 165:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 166:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 167:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is a hybrid epoch
 168:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 169:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 170:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb);
 171:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 172:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 173:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Checks if the pointed element is an internal epoch
 174:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 175:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 176:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb);
 177:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 178:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 179:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the Epoch controller id to use
 180:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 181:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 182:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb);
 183:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 184:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 185:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief Returns the address of the configuration of the epoch controller (the blob address)
 186:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 187:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 188:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb);
 189:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 190:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 191:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer types definition
 192:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 193:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 194:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 195:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
ARM GAS  /tmp/cczRRmNE.s 			page 5


 196:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 197:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 198:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types for Input, Output, and Internal Buffers
 199:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 200:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 201:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 202:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 203:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 204:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UNDEFINED = 0,
 205:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT = 1,
 206:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT2 = 2,
 207:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT2 = 3,
 208:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT4 = 4,
 209:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT4 = 5,
 210:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT8 = 6,
 211:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT8 = 7,
 212:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT16 = 8,
 213:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT16 = 9,
 214:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT32 = 10,
 215:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_INT64 = 11,
 216:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_STRING = 12,
 217:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BOOL = 13,
 218:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FLOAT16 = 14,
 219:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_DOUBLE = 15,
 220:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT32 = 16,
 221:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_UINT64 = 17,
 222:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX64 = 18,
 223:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_COMPLEX128 = 19,
 224:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_BFLOAT16 = 20,
 225:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     DataType_FXP = 100 // AtoNN specific
 226:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_DataType_TypeDef;
 227:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 228:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 229:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer Channel position
 230:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 231:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 232:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef enum
 233:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 234:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_UNDEFINED = 0, /**< No channel present */
 235:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_First = 1,     /**< Channel First         ( ...B C H W )*/
 236:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Last = 2,      /**< Channel Last          ( ...B H W C ) */
 237:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     CHPos_Mixed = 3,     /**< Channel with Batch(b) ( ...B C/b H W b ) */
 238:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } Buffer_CHPos_TypeDef;
 239:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 240:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 241:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief ATON buffer definition
 242:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 243:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 244:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 245:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *name;             /**< Buffer name. NULL if end of list */
 246:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     __LL_address_t addr_base;     /**< Buffer base address */
 247:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_start;        /**< Offset of the buffer start address from the base address */
 248:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_end;          /**< Offset of the buffer end address from the base address
 249:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (first bytes address beyond buffer length) */
 250:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t offset_limit;        /**< Offset of the limiter address from the base address,
 251:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (needed for configuring streaming engines) */
 252:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_user_allocated;    /**< */
ARM GAS  /tmp/cczRRmNE.s 			page 6


 253:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t is_param;             /**< */
 254:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t epoch;               /**< */
 255:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t batch;               /**< */
 256:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *mem_shape;    /**< shape as seen by the user in memory (only valid for input/ou
 257:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint16_t mem_ndims;           /**< Number of dimensions of mem_shape (Length of mem_shape) */
 258:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_CHPos_TypeDef chpos;   /**< Position  of channels dimension in mem shape */
 259:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     Buffer_DataType_TypeDef type; /**< */
 260:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qm;                    /**< */
 261:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     int8_t Qn;                    /**< */
 262:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t Qunsigned;            /**< */
 263:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t ndims;                /**< */
 264:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t nbits;                /**< */
 265:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint8_t per_channel;          /**< */
 266:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const uint32_t *shape;        /**< */
 267:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const float *scale;           /**< */
 268:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const int16_t *offset;        /**< This can become int8 or uint8 based on the Qunsigned field.
 269:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                    *   (This field Must have the same format of the quantized value
 270:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } LL_Buffer_InfoTypeDef;
 271:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 272:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 273:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 274:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 275:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 276:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Declarations for Buffer Analysis
 277:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 278:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 279:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 280:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 281:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the base address of the mem pool the buffer is allocated in
 282:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 283:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 284:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf);
 285:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 286:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 287:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the start address of the buffer
 288:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 289:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 290:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf);
 291:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 292:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 293:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the end address of the buffer
 294:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 295:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 296:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf);
 297:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 298:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 299:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the limit address of the buffer
 300:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 301:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 302:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf);
 303:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 304:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 305:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the length of the buffer
 306:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 307:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 308:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf);
 309:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
ARM GAS  /tmp/cczRRmNE.s 			page 7


 310:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 311:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief returns the buffer elements number of bits
 312:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    *
 313:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 314:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_bits(const LL_Buffer_InfoTypeDef *buf);
 315:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 316:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 317:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 318:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 319:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 320:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Handle-style Data Types and Declaration Macros for ATON Runtime Execution & User AP
 321:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 322:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 323:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 324:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct; // forward declaration
 325:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct __nn_instance_struct NN_Instance_TypeDef;
 326:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 327:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** /**
 328:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @brief Declare the function prototypes for named NN interface functions generated by the AtoNN c
 329:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  * @param network_name name of the network as provided by option `--network-name`
 330:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****  */
 331:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #define LL_ATON_DECLARE_NAMED_NN_PROTOS(network_name)                                              
 332:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Network_Init_##network_name(void);                                        
 333:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern bool LL_ATON_EC_Inference_Init_##network_name(void);                                      
 334:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_##network_name(uint32_t num, void *
 335:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                uint32_t size);     
 336:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Input_Buffer_##network_name(uint32_t num);                         
 337:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_##network_name(uint32_t num, void 
 338:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                                                 uint32_t size);    
 339:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern void *LL_ATON_Get_User_Output_Buffer_##network_name(uint32_t num);                        
 340:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_##network_name(void);               
 341:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Output_Buffers_Info_##network_name(void);            
 342:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_##network_name(void);             
 343:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   extern const LL_Buffer_InfoTypeDef *LL_ATON_Internal_Buffers_Info_##network_name(void);
 344:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 345:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 346:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @brief  Type definitions for NN interface functions
 347:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 348:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef bool (*NN_EC_Hook_TypeDef)(void);
 349:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_InputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t s
 350:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_InputGetter_TypeDef)(uint32_t num);
 351:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef LL_ATON_User_IO_Result_t (*NN_OutputSetter_TypeDef)(uint32_t num, void *buffer, uint32_t 
 352:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void *(*NN_OutputGetter_TypeDef)(uint32_t num);
 353:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const EpochBlock_ItemTypeDef *(*NN_EpochBlockItems_TypeDef)(void);
 354:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef const LL_Buffer_InfoTypeDef *(*NN_Buffers_Info_TypeDef)(void);
 355:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 356:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceRuntime_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype);
 357:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 358:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef void (*TraceEpochBlock_FuncPtr_t)(LL_ATON_RT_Callbacktype_t ctype, const NN_Instance_Type
 359:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                             const EpochBlock_ItemTypeDef *epoch_block);
 360:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 361:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 362:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 363:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const char *network_name;
 364:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_network_init;
 365:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EC_Hook_TypeDef ec_inference_init;
 366:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputSetter_TypeDef input_setter;
ARM GAS  /tmp/cczRRmNE.s 			page 8


 367:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_InputGetter_TypeDef input_getter;
 368:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputSetter_TypeDef output_setter;
 369:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_OutputGetter_TypeDef output_getter;
 370:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_EpochBlockItems_TypeDef epoch_block_items;
 371:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef output_buffers_info;
 372:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef input_buffers_info;
 373:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Buffers_Info_TypeDef internal_buffers_info;
 374:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Interface_TypeDef;
 375:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 376:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   typedef struct
 377:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 378:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile current_epoch_block; // pointer to current epoch block
 379:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile first_epoch_block;   // pointer to first epoch block in 
 380:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile next_epoch_block;    // pointer to epoch block to be ins
 381:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 382:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef *volatile saved_current_epoch_block; // pointer to saved current e
 383:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const EpochBlock_ItemTypeDef
 384:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         *volatile saved_first_epoch_block; // pointer to saved first epoch block in current epoch l
 385:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 386:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     bool inference_started; // inference has been started
 387:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 388:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 389:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t triggered_events;        // currently triggered events/IRQs in current epoch
 390:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile bool current_epoch_block_started; // has current epoch block already been started
 391:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                         // (LL_ATON_RT_MODE == LL_ATON_RT_ASYNC)
 392:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 393:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #ifndef NDEBUG
 394:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t
 395:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****         nr_of_epoch_blocks; // number of epoch blocks in network (includes also terminating empty e
 396:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     volatile uint32_t saved_nr_of_epoch_blocks; // number of epoch blocks in saved network (include
 397:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****                                                 // empty epoch block)
 398:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif                                          // NDEBUG
 399:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 400:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     TraceEpochBlock_FuncPtr_t epoch_callback_function; // epoch callback function
 401:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 402:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #if defined(LL_ATON_RT_RELOC)
 403:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     uint32_t inst_reloc;
 404:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** #endif
 405:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 406:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   } NN_Execution_State_TypeDef;
 407:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 408:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   struct __nn_instance_struct
 409:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 410:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     const NN_Interface_TypeDef *network;
 411:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     NN_Execution_State_TypeDef exec_state;
 412:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   };
 413:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 414:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /**
 415:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @}
 416:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 417:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 418:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   /** @defgroup Helper Function Inline Implementations
 419:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    * @{
 420:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****    */
 421:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 422:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsLastEpochBlock(const EpochBlock_ItemTypeDef *eb)
 423:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/cczRRmNE.s 			page 9


 424:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_last_eb) != 0);
 425:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 426:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 427:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochStart(const EpochBlock_ItemTypeDef *eb)
 428:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 429:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_start) != 0);
 430:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 431:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 432:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochEnd(const EpochBlock_ItemTypeDef *eb)
 433:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 434:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_epoch_end) != 0);
 435:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 436:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 437:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochBlob(const EpochBlock_ItemTypeDef *eb)
 438:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 439:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob) != 0);
 440:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 441:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 442:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsBlobEncrypted(const EpochBlock_ItemTypeDef *eb)
 443:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 444:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_blob_encrypted) != 0);
 445:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 446:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 447:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureSW(const EpochBlock_ItemTypeDef *eb)
 448:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 449:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_sw) != 0);
 450:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 451:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 452:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochPureHW(const EpochBlock_ItemTypeDef *eb)
 453:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 454:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_pure_hw) != 0);
 455:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 456:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 457:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochHybrid(const EpochBlock_ItemTypeDef *eb)
 458:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 459:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_hybrid) != 0);
 460:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 461:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 462:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline bool EpochBlock_IsEpochInternal(const EpochBlock_ItemTypeDef *eb)
 463:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 464:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return ((eb->flags & EpochBlock_Flags_internal) != 0);
 465:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 466:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 467:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t EpochBlock_EpochControllerUnit(const EpochBlock_ItemTypeDef *eb)
 468:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 469:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 470:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->wait_mask;
 471:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 472:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 473:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uintptr_t EpochBlock_EpochBlobAddr(const EpochBlock_ItemTypeDef *eb)
 474:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 475:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     LL_ATON_ASSERT(EpochBlock_IsEpochBlob(eb));
 476:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return eb->blob_address;
 477:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 478:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_base(const LL_Buffer_InfoTypeDef *buf)
 480:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
ARM GAS  /tmp/cczRRmNE.s 			page 10


 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     if (buf->is_user_allocated)
 482:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       unsigned char **tmp = (unsigned char **)buf->addr_base.p;
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
 485:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
 486:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->addr_base.p;
 487:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 488:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 489:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_start(const LL_Buffer_InfoTypeDef *buf)
 490:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  35              		.loc 2 490 3 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
 491:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_start;
  40              		.loc 2 491 5 view .LVU1
  41              	.LBB167:
  42              	.LBI167:
 479:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
  43              		.loc 2 479 32 view .LVU2
  44              	.LBB168:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  45              		.loc 2 481 5 view .LVU3
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  46              		.loc 2 481 8 is_stmt 0 view .LVU4
  47 0000 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
  48              	.LBB169:
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
  49              		.loc 2 483 23 view .LVU5
  50 0002 4368     		ldr	r3, [r0, #4]
  51              	.LBE169:
 481:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     {
  52              		.loc 2 481 8 view .LVU6
  53 0004 02B1     		cbz	r2, .L2
  54              	.LBB170:
 483:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****       return *tmp;
  55              		.loc 2 483 7 is_stmt 1 view .LVU7
  56              	.LVL1:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  57              		.loc 2 484 7 view .LVU8
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  58              		.loc 2 484 14 is_stmt 0 view .LVU9
  59 0006 1B68     		ldr	r3, [r3]
  60              	.LVL2:
  61              	.L2:
 484:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     }
  62              		.loc 2 484 14 view .LVU10
  63              	.LBE170:
  64              	.LBE168:
  65              	.LBE167:
  66              		.loc 2 491 37 discriminator 1 view .LVU11
  67 0008 8068     		ldr	r0, [r0, #8]
  68              	.LVL3:
 492:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
  69              		.loc 2 492 3 view .LVU12
  70 000a 1844     		add	r0, r0, r3
ARM GAS  /tmp/cczRRmNE.s 			page 11


  71 000c 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE2660:
  75              		.section	.text.clamp_point,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	clamp_point:
  82              	.LVL4:
  83              	.LFB7381:
   1:Src/app.c     **** /**
   2:Src/app.c     ****   ******************************************************************************
   3:Src/app.c     ****   * @file    app.c
   4:Src/app.c     ****   * @author  MDG Application Team
   5:Src/app.c     ****   ******************************************************************************
   6:Src/app.c     ****   * @attention
   7:Src/app.c     ****   *
   8:Src/app.c     ****   * Copyright (c) 2024 STMicroelectronics.
   9:Src/app.c     ****   * All rights reserved.
  10:Src/app.c     ****   *
  11:Src/app.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  12:Src/app.c     ****   * in the root directory of this software component.
  13:Src/app.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  14:Src/app.c     ****   *
  15:Src/app.c     ****   ******************************************************************************
  16:Src/app.c     ****   */
  17:Src/app.c     **** 
  18:Src/app.c     **** #include "app.h"
  19:Src/app.c     **** 
  20:Src/app.c     **** #include <stdint.h>
  21:Src/app.c     **** #include <stdio.h>
  22:Src/app.c     **** 
  23:Src/app.c     **** #include "app_cam.h"
  24:Src/app.c     **** #include "app_config.h"
  25:Src/app.c     **** #include "IPL_resize.h"
  26:Src/app.c     **** #include "app_postprocess.h"
  27:Src/app.c     **** #include "isp_api.h"
  28:Src/app.c     **** #include "ld.h"
  29:Src/app.c     **** #include "ll_aton_runtime.h"
  30:Src/app.c     **** #include "cmw_camera.h"
  31:Src/app.c     **** #include "scrl.h"
  32:Src/app.c     **** #ifdef STM32N6570_DK_REV
  33:Src/app.c     **** #include "stm32n6570_discovery.h"
  34:Src/app.c     **** #else
  35:Src/app.c     **** #include "stm32n6xx_nucleo.h"
  36:Src/app.c     **** #endif
  37:Src/app.c     **** #include "stm32_lcd.h"
  38:Src/app.c     **** #include "stm32_lcd_ex.h"
  39:Src/app.c     **** #include "stm32n6xx_hal.h"
  40:Src/app.c     **** #include "FreeRTOS.h"
  41:Src/app.c     **** #include "task.h"
  42:Src/app.c     **** #include "semphr.h"
  43:Src/app.c     **** #include "utils.h"
  44:Src/app.c     **** 
  45:Src/app.c     **** #define FREERTOS_PRIORITY(p) ((UBaseType_t)((int)tskIDLE_PRIORITY + configMAX_PRIORITIES / 2 + (p))
  46:Src/app.c     **** 
ARM GAS  /tmp/cczRRmNE.s 			page 12


  47:Src/app.c     **** #ifndef M_PI
  48:Src/app.c     **** #define M_PI 3.14159265358979323846
  49:Src/app.c     **** #endif
  50:Src/app.c     **** 
  51:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  52:Src/app.c     **** #include "nema_core.h"
  53:Src/app.c     **** #include "nema_error.h"
  54:Src/app.c     **** void nema_enable_tiling(int);
  55:Src/app.c     **** #endif
  56:Src/app.c     **** 
  57:Src/app.c     **** #define LCD_FG_WIDTH LCD_BG_WIDTH
  58:Src/app.c     **** #define LCD_FG_HEIGHT LCD_BG_HEIGHT
  59:Src/app.c     **** 
  60:Src/app.c     **** #define CACHE_OP(__op__) do { \
  61:Src/app.c     ****   if (is_cache_enable()) { \
  62:Src/app.c     ****     __op__; \
  63:Src/app.c     ****   } \
  64:Src/app.c     **** } while (0)
  65:Src/app.c     **** 
  66:Src/app.c     **** #define DBG_INFO 0
  67:Src/app.c     **** #define USE_FILTERED_TS 1
  68:Src/app.c     **** 
  69:Src/app.c     **** #define BQUEUE_MAX_BUFFERS 2
  70:Src/app.c     **** #define CPU_LOAD_HISTORY_DEPTH 8
  71:Src/app.c     **** 
  72:Src/app.c     **** #define DISPLAY_BUFFER_NB (DISPLAY_DELAY + 2)
  73:Src/app.c     **** 
  74:Src/app.c     **** /* palm detector */
  75:Src/app.c     **** #define PD_MAX_HAND_NB 1
  76:Src/app.c     **** 
  77:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
  78:Src/app.c     **** typedef float app_v3_t[3];
  79:Src/app.c     **** #endif
  80:Src/app.c     **** 
  81:Src/app.c     **** typedef struct {
  82:Src/app.c     ****   float cx;
  83:Src/app.c     ****   float cy;
  84:Src/app.c     ****   float w;
  85:Src/app.c     ****   float h;
  86:Src/app.c     ****   float rotation;
  87:Src/app.c     **** } roi_t;
  88:Src/app.c     **** 
  89:Src/app.c     **** #define UTIL_LCD_COLOR_TRANSPARENT 0
  90:Src/app.c     **** 
  91:Src/app.c     **** #ifdef STM32N6570_DK_REV
  92:Src/app.c     **** #define LCD_FONT Font20
  93:Src/app.c     **** #define DISK_RADIUS 2
  94:Src/app.c     **** #else
  95:Src/app.c     **** #define LCD_FONT Font12
  96:Src/app.c     **** #define DISK_RADIUS 1
  97:Src/app.c     **** #endif
  98:Src/app.c     **** 
  99:Src/app.c     **** typedef struct
 100:Src/app.c     **** {
 101:Src/app.c     ****   uint32_t X0;
 102:Src/app.c     ****   uint32_t Y0;
 103:Src/app.c     ****   uint32_t XSize;
ARM GAS  /tmp/cczRRmNE.s 			page 13


 104:Src/app.c     ****   uint32_t YSize;
 105:Src/app.c     **** } Rectangle_TypeDef;
 106:Src/app.c     **** 
 107:Src/app.c     **** typedef struct {
 108:Src/app.c     ****   SemaphoreHandle_t free;
 109:Src/app.c     ****   StaticSemaphore_t free_buffer;
 110:Src/app.c     ****   SemaphoreHandle_t ready;
 111:Src/app.c     ****   StaticSemaphore_t ready_buffer;
 112:Src/app.c     ****   int buffer_nb;
 113:Src/app.c     ****   uint8_t *buffers[BQUEUE_MAX_BUFFERS];
 114:Src/app.c     ****   int free_idx;
 115:Src/app.c     ****   int ready_idx;
 116:Src/app.c     **** } bqueue_t;
 117:Src/app.c     **** 
 118:Src/app.c     **** typedef struct {
 119:Src/app.c     ****   uint64_t current_total;
 120:Src/app.c     ****   uint64_t current_thread_total;
 121:Src/app.c     ****   uint64_t prev_total;
 122:Src/app.c     ****   uint64_t prev_thread_total;
 123:Src/app.c     ****   struct {
 124:Src/app.c     ****     uint64_t total;
 125:Src/app.c     ****     uint64_t thread;
 126:Src/app.c     ****     uint32_t tick;
 127:Src/app.c     ****   } history[CPU_LOAD_HISTORY_DEPTH];
 128:Src/app.c     **** } cpuload_info_t;
 129:Src/app.c     **** 
 130:Src/app.c     **** typedef struct {
 131:Src/app.c     ****   int is_valid;
 132:Src/app.c     ****   pd_pp_box_t pd_hands;
 133:Src/app.c     ****   roi_t roi;
 134:Src/app.c     ****   ld_point_t ld_landmarks[LD_LANDMARK_NB];
 135:Src/app.c     **** } hand_info_t;
 136:Src/app.c     **** 
 137:Src/app.c     **** typedef struct {
 138:Src/app.c     ****   float nn_period_ms;
 139:Src/app.c     ****   uint32_t pd_ms;
 140:Src/app.c     ****   uint32_t hl_ms;
 141:Src/app.c     ****   uint32_t pp_ms;
 142:Src/app.c     ****   uint32_t disp_ms;
 143:Src/app.c     ****   int is_ld_displayed;
 144:Src/app.c     ****   int is_pd_displayed;
 145:Src/app.c     ****   int pd_hand_nb;
 146:Src/app.c     ****   float pd_max_prob;
 147:Src/app.c     ****   hand_info_t hands[PD_MAX_HAND_NB];
 148:Src/app.c     **** } display_info_t;
 149:Src/app.c     **** 
 150:Src/app.c     **** typedef struct {
 151:Src/app.c     ****   SemaphoreHandle_t update;
 152:Src/app.c     ****   StaticSemaphore_t update_buffer;
 153:Src/app.c     ****   SemaphoreHandle_t lock;
 154:Src/app.c     ****   StaticSemaphore_t lock_buffer;
 155:Src/app.c     ****   display_info_t info;
 156:Src/app.c     **** } display_t;
 157:Src/app.c     **** 
 158:Src/app.c     **** typedef struct {
 159:Src/app.c     ****   uint32_t nn_in_len;
 160:Src/app.c     ****   float *prob_out;
ARM GAS  /tmp/cczRRmNE.s 			page 14


 161:Src/app.c     ****   uint32_t prob_out_len;
 162:Src/app.c     ****   float *boxes_out;
 163:Src/app.c     ****   uint32_t boxes_out_len;
 164:Src/app.c     ****   pd_model_pp_static_param_t static_param;
 165:Src/app.c     ****   pd_pp_out_t pd_out;
 166:Src/app.c     **** } pd_model_info_t;
 167:Src/app.c     **** 
 168:Src/app.c     **** /**
 169:Src/app.c     ****  * @brief  YOLO detector model context struct
 170:Src/app.c     ****  */
 171:Src/app.c     **** typedef struct {
 172:Src/app.c     ****   // Input buffer info
 173:Src/app.c     ****   uint32_t nn_in_len;
 174:Src/app.c     **** 
 175:Src/app.c     ****   // Raw output buffer info from the model
 176:Src/app.c     ****   float *raw_detections_out;
 177:Src/app.c     ****   uint32_t raw_detections_out_len;
 178:Src/app.c     **** 
 179:Src/app.c     ****   // Post-processing parameters and final output
 180:Src/app.c     ****   od_yolov8_pp_static_param_t static_param;
 181:Src/app.c     ****   od_pp_out_t yolo_out; 
 182:Src/app.c     **** } yolo_detector_info_t;
 183:Src/app.c     **** 
 184:Src/app.c     **** typedef struct {
 185:Src/app.c     ****   uint8_t *nn_in;
 186:Src/app.c     ****   uint32_t nn_in_len;
 187:Src/app.c     ****   float *prob_out;
 188:Src/app.c     ****   uint32_t prob_out_len;
 189:Src/app.c     ****   float *landmarks_out;
 190:Src/app.c     ****   uint32_t landmarks_out_len;
 191:Src/app.c     **** } hl_model_info_t;
 192:Src/app.c     **** 
 193:Src/app.c     **** typedef struct {
 194:Src/app.c     ****   uint8_t *nn_in;
 195:Src/app.c     ****   uint32_t nn_in_len;
 196:Src/app.c     ****   float *prob_out;
 197:Src/app.c     ****   uint32_t prob_out_len;
 198:Src/app.c     ****   int8_t *landmarks_out; // CHANGE THIS from float* to int8_t*
 199:Src/app.c     ****   size_t landmarks_out_len;
 200:Src/app.c     **** } fl_model_info_t;
 201:Src/app.c     **** 
 202:Src/app.c     **** typedef struct {
 203:Src/app.c     ****   Button_TypeDef button_id;
 204:Src/app.c     ****   int prev_state;
 205:Src/app.c     ****   void (*on_click_handler)(void *cb_args);
 206:Src/app.c     ****   void *cb_args;
 207:Src/app.c     **** } button_t;
 208:Src/app.c     **** 
 209:Src/app.c     **** /* Globals */
 210:Src/app.c     **** /* Lcd Background area */
 211:Src/app.c     **** static Rectangle_TypeDef lcd_bg_area = {
 212:Src/app.c     ****   .X0 = 0,
 213:Src/app.c     ****   .Y0 = 0,
 214:Src/app.c     ****   .XSize = LCD_BG_WIDTH,
 215:Src/app.c     ****   .YSize = LCD_BG_HEIGHT,
 216:Src/app.c     **** };
 217:Src/app.c     **** /* Lcd Foreground area */
ARM GAS  /tmp/cczRRmNE.s 			page 15


 218:Src/app.c     **** static Rectangle_TypeDef lcd_fg_area = {
 219:Src/app.c     ****   .X0 = 0,
 220:Src/app.c     ****   .Y0 = 0,
 221:Src/app.c     ****   .XSize = LCD_FG_WIDTH,
 222:Src/app.c     ****   .YSize = LCD_FG_HEIGHT,
 223:Src/app.c     **** };
 224:Src/app.c     **** /* Lcd Background Buffer */
 225:Src/app.c     **** static uint8_t lcd_bg_buffer[DISPLAY_BUFFER_NB][LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP] ALIGN_3
 226:Src/app.c     **** static int lcd_bg_buffer_disp_idx = 1;
 227:Src/app.c     **** static int lcd_bg_buffer_capt_idx = 0;
 228:Src/app.c     **** /* Lcd Foreground Buffer */
 229:Src/app.c     **** static uint8_t lcd_fg_buffer[2][LCD_FG_WIDTH * LCD_FG_HEIGHT* 2] ALIGN_32 IN_PSRAM;
 230:Src/app.c     **** static int lcd_fg_buffer_rd_idx;
 231:Src/app.c     **** static display_t disp = {
 232:Src/app.c     ****   .info.is_ld_displayed = 1,
 233:Src/app.c     ****   .info.is_pd_displayed = 0,
 234:Src/app.c     **** };
 235:Src/app.c     **** static cpuload_info_t cpu_load;
 236:Src/app.c     **** /* screen buffer */
 237:Src/app.c     **** static uint8_t screen_buffer[LCD_BG_WIDTH * LCD_BG_HEIGHT * 2] ALIGN_32 IN_PSRAM;
 238:Src/app.c     **** 
 239:Src/app.c     **** /* model */
 240:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(yolo_detector);
 241:Src/app.c     **** LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(face_landmark);
 242:Src/app.c     **** static roi_t rois[PD_MAX_HAND_NB];
 243:Src/app.c     ****  /* hand landmark */
 244:Src/app.c     **** //LL_ATON_DECLARE_NAMED_NN_INSTANCE_AND_INTERFACE(hand_landmark);
 245:Src/app.c     **** static ld_point_t ld_landmarks[PD_MAX_HAND_NB][LD_LANDMARK_NB];
 246:Src/app.c     **** static uint32_t frame_event_nb;
 247:Src/app.c     **** static volatile uint32_t frame_event_nb_for_resize;
 248:Src/app.c     **** 
 249:Src/app.c     ****  /* nn input buffers */
 250:Src/app.c     **** static uint8_t nn_input_buffers[2][NN_WIDTH * NN_HEIGHT * NN_BPP] ALIGN_32 IN_PSRAM;
 251:Src/app.c     **** static bqueue_t nn_input_queue;
 252:Src/app.c     **** 
 253:Src/app.c     ****  /* rtos */
 254:Src/app.c     **** static StaticTask_t nn_thread;
 255:Src/app.c     **** static StackType_t nn_thread_stack[4 * configMINIMAL_STACK_SIZE];
 256:Src/app.c     **** static StaticTask_t dp_thread;
 257:Src/app.c     **** static StackType_t dp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 258:Src/app.c     **** static StaticTask_t isp_thread;
 259:Src/app.c     **** static StackType_t isp_thread_stack[2 *configMINIMAL_STACK_SIZE];
 260:Src/app.c     **** static SemaphoreHandle_t isp_sem;
 261:Src/app.c     **** static StaticSemaphore_t isp_sem_buffer;
 262:Src/app.c     **** 
 263:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
 264:Src/app.c     **** static GFXMMU_HandleTypeDef hgfxmmu;
 265:Src/app.c     **** static nema_cmdlist_t cl;
 266:Src/app.c     **** #endif
 267:Src/app.c     **** 
 268:Src/app.c     **** static int is_cache_enable()
 269:Src/app.c     **** {
 270:Src/app.c     **** #if defined(USE_DCACHE)
 271:Src/app.c     ****   return 1;
 272:Src/app.c     **** #else
 273:Src/app.c     ****   return 0;
 274:Src/app.c     **** #endif
ARM GAS  /tmp/cczRRmNE.s 			page 16


 275:Src/app.c     **** }
 276:Src/app.c     **** 
 277:Src/app.c     **** static float pd_normalize_angle(float angle)
 278:Src/app.c     **** {
 279:Src/app.c     ****   return angle - 2 * M_PI * floorf((angle - (-M_PI)) / (2 * M_PI));
 280:Src/app.c     **** }
 281:Src/app.c     **** 
 282:Src/app.c     **** /* Without rotation support allow limited amount of angles */
 283:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 284:Src/app.c     **** static float pd_cook_rotation(float angle)
 285:Src/app.c     **** {
 286:Src/app.c     ****   if (angle >= (3 * M_PI) / 4)
 287:Src/app.c     ****     angle = M_PI;
 288:Src/app.c     ****   else if (angle >= (1 * M_PI) / 4)
 289:Src/app.c     ****     angle = M_PI / 2;
 290:Src/app.c     ****   else if (angle >= -(1 * M_PI) / 4)
 291:Src/app.c     ****     angle = 0;
 292:Src/app.c     ****   else if (angle >= -(3 * M_PI) / 4)
 293:Src/app.c     ****     angle = -M_PI / 2;
 294:Src/app.c     ****   else
 295:Src/app.c     ****     angle = -M_PI;
 296:Src/app.c     **** 
 297:Src/app.c     ****   return angle;
 298:Src/app.c     **** }
 299:Src/app.c     **** #else
 300:Src/app.c     **** static float pd_cook_rotation(float angle)
 301:Src/app.c     **** {
 302:Src/app.c     ****   return angle;
 303:Src/app.c     **** }
 304:Src/app.c     **** #endif
 305:Src/app.c     **** 
 306:Src/app.c     **** static float pd_compute_rotation(pd_pp_box_t *box)
 307:Src/app.c     **** {
 308:Src/app.c     ****   float x0, y0, x1, y1;
 309:Src/app.c     ****   float rotation;
 310:Src/app.c     **** 
 311:Src/app.c     ****   x0 = box->pKps[0].x;
 312:Src/app.c     ****   y0 = box->pKps[0].y;
 313:Src/app.c     ****   x1 = box->pKps[2].x;
 314:Src/app.c     ****   y1 = box->pKps[2].y;
 315:Src/app.c     **** 
 316:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
 317:Src/app.c     **** 
 318:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
 319:Src/app.c     **** }
 320:Src/app.c     **** 
 321:Src/app.c     **** static void cvt_pd_coord_to_screen_coord(pd_pp_box_t *box)
 322:Src/app.c     **** {
 323:Src/app.c     ****   int i;
 324:Src/app.c     **** 
 325:Src/app.c     ****   /* This is not a typo. Since screen aspect ratio was conserved. We really want to use LCD_BG_WIDT
 326:Src/app.c     ****    * y positions.
 327:Src/app.c     ****    */
 328:Src/app.c     **** 
 329:Src/app.c     ****   box->x_center *= LCD_BG_WIDTH;
 330:Src/app.c     ****   box->y_center *= LCD_BG_WIDTH;
 331:Src/app.c     ****   box->width *= LCD_BG_WIDTH;
ARM GAS  /tmp/cczRRmNE.s 			page 17


 332:Src/app.c     ****   box->height *= LCD_BG_WIDTH;
 333:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
 334:Src/app.c     ****     box->pKps[i].x *= LCD_BG_WIDTH;
 335:Src/app.c     ****     box->pKps[i].y *= LCD_BG_WIDTH;
 336:Src/app.c     ****   }
 337:Src/app.c     **** }
 338:Src/app.c     **** 
 339:Src/app.c     **** static void roi_shift_and_scale(roi_t *roi, float shift_x, float shift_y, float scale_x, float scal
 340:Src/app.c     **** {
 341:Src/app.c     ****   float long_side;
 342:Src/app.c     ****   float sx, sy;
 343:Src/app.c     **** 
 344:Src/app.c     ****   sx = (roi->w * shift_x * cos(roi->rotation) - roi->h * shift_y * sin(roi->rotation));
 345:Src/app.c     ****   sy = (roi->w * shift_x * sin(roi->rotation) + roi->h * shift_y * cos(roi->rotation));
 346:Src/app.c     **** 
 347:Src/app.c     ****   roi->cx += sx;
 348:Src/app.c     ****   roi->cy += sy;
 349:Src/app.c     **** 
 350:Src/app.c     ****   long_side = MAX(roi->w, roi->h);
 351:Src/app.c     ****   roi->w = long_side;
 352:Src/app.c     ****   roi->h = long_side;
 353:Src/app.c     **** 
 354:Src/app.c     ****   roi->w *= scale_x;
 355:Src/app.c     ****   roi->h *= scale_y;
 356:Src/app.c     **** }
 357:Src/app.c     **** 
 358:Src/app.c     **** static void pd_box_to_roi(pd_pp_box_t *box,  roi_t *roi)
 359:Src/app.c     **** {
 360:Src/app.c     ****   const float shift_x = 0;
 361:Src/app.c     ****   const float shift_y = -0.5;
 362:Src/app.c     ****   const float scale = 2.6;
 363:Src/app.c     **** 
 364:Src/app.c     ****   roi->cx = box->x_center;
 365:Src/app.c     ****   roi->cy = box->y_center;
 366:Src/app.c     ****   roi->w = box->width;
 367:Src/app.c     ****   roi->h = box->height;
 368:Src/app.c     ****   roi->rotation = pd_compute_rotation(box);
 369:Src/app.c     **** 
 370:Src/app.c     ****   roi_shift_and_scale(roi, shift_x, shift_y, scale, scale);
 371:Src/app.c     **** 
 372:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
 373:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
 374:Src/app.c     ****   roi->rotation = 0;
 375:Src/app.c     **** #endif
 376:Src/app.c     **** }
 377:Src/app.c     **** 
 378:Src/app.c     **** static void copy_yolo_box(od_pp_outBuffer_t *dst, const od_pp_outBuffer_t *src)
 379:Src/app.c     **** {
 380:Src/app.c     ****   dst->conf = src->conf;
 381:Src/app.c     ****   dst->x_center = src->x_center;
 382:Src/app.c     ****   dst->y_center = src->y_center;
 383:Src/app.c     ****   dst->width = src->width;
 384:Src/app.c     ****   dst->height = src->height;
 385:Src/app.c     ****   dst->class_index = src->class_index;
 386:Src/app.c     **** }
 387:Src/app.c     **** 
 388:Src/app.c     **** static void copy_pd_box(pd_pp_box_t *dst, pd_pp_box_t *src)
ARM GAS  /tmp/cczRRmNE.s 			page 18


 389:Src/app.c     **** {
 390:Src/app.c     ****   int i;
 391:Src/app.c     **** 
 392:Src/app.c     ****   dst->prob = src->prob;
 393:Src/app.c     ****   dst->x_center = src->x_center;
 394:Src/app.c     ****   dst->y_center = src->y_center;
 395:Src/app.c     ****   dst->width = src->width;
 396:Src/app.c     ****   dst->height = src->height;
 397:Src/app.c     ****   for (i = 0 ; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++)
 398:Src/app.c     ****     dst->pKps[i] = src->pKps[i];
 399:Src/app.c     **** }
 400:Src/app.c     **** 
 401:Src/app.c     **** static void button_init(button_t *b, Button_TypeDef id, void (*on_click_handler)(void *), void *cb_
 402:Src/app.c     **** {
 403:Src/app.c     ****   int ret;
 404:Src/app.c     **** 
 405:Src/app.c     ****   ret = BSP_PB_Init(id, BUTTON_MODE_GPIO);
 406:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 407:Src/app.c     **** 
 408:Src/app.c     ****   b->button_id = id;
 409:Src/app.c     ****   b->on_click_handler = on_click_handler;
 410:Src/app.c     ****   b->prev_state = 0;
 411:Src/app.c     ****   b->cb_args = cb_args;
 412:Src/app.c     **** }
 413:Src/app.c     **** 
 414:Src/app.c     **** static void button_process(button_t *b)
 415:Src/app.c     **** {
 416:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 417:Src/app.c     **** 
 418:Src/app.c     ****   if (state != b->prev_state && state && b->on_click_handler)
 419:Src/app.c     ****     b->on_click_handler(b->cb_args);
 420:Src/app.c     **** 
 421:Src/app.c     ****   b->prev_state = state;
 422:Src/app.c     **** }
 423:Src/app.c     **** 
 424:Src/app.c     **** static void cpuload_init(cpuload_info_t *cpu_load)
 425:Src/app.c     **** {
 426:Src/app.c     ****   memset(cpu_load, 0, sizeof(cpuload_info_t));
 427:Src/app.c     **** }
 428:Src/app.c     **** 
 429:Src/app.c     **** static void cpuload_update(cpuload_info_t *cpu_load)
 430:Src/app.c     **** {
 431:Src/app.c     ****   int i;
 432:Src/app.c     **** 
 433:Src/app.c     ****   cpu_load->history[1] = cpu_load->history[0];
 434:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 435:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 436:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 437:Src/app.c     **** 
 438:Src/app.c     ****   if (cpu_load->history[1].tick - cpu_load->history[2].tick < 1000)
 439:Src/app.c     ****     return ;
 440:Src/app.c     **** 
 441:Src/app.c     ****   for (i = 0; i < CPU_LOAD_HISTORY_DEPTH - 2; i++)
 442:Src/app.c     ****     cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 1 - i] = cpu_load->history[CPU_LOAD_HISTORY_DEPTH - 
 443:Src/app.c     **** }
 444:Src/app.c     **** 
 445:Src/app.c     **** static void cpuload_get_info(cpuload_info_t *cpu_load, float *cpu_load_last, float *cpu_load_last_s
ARM GAS  /tmp/cczRRmNE.s 			page 19


 446:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 447:Src/app.c     **** {
 448:Src/app.c     ****   if (cpu_load_last)
 449:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 450:Src/app.c     ****                      (cpu_load->history[0].total - cpu_load->history[1].total);
 451:Src/app.c     ****   if (cpu_load_last_second)
 452:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 453:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 454:Src/app.c     ****   if (cpu_load_last_five_seconds)
 455:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 456:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[7].total);
 457:Src/app.c     **** }
 458:Src/app.c     **** 
 459:Src/app.c     **** static int bqueue_init(bqueue_t *bq, int buffer_nb, uint8_t **buffers)
 460:Src/app.c     **** {
 461:Src/app.c     ****   int i;
 462:Src/app.c     **** 
 463:Src/app.c     ****   if (buffer_nb > BQUEUE_MAX_BUFFERS)
 464:Src/app.c     ****     return -1;
 465:Src/app.c     **** 
 466:Src/app.c     ****   bq->free = xSemaphoreCreateCountingStatic(buffer_nb, buffer_nb, &bq->free_buffer);
 467:Src/app.c     ****   if (!bq->free)
 468:Src/app.c     ****     goto free_sem_error;
 469:Src/app.c     ****   bq->ready = xSemaphoreCreateCountingStatic(buffer_nb, 0, &bq->ready_buffer);
 470:Src/app.c     ****   if (!bq->ready)
 471:Src/app.c     ****     goto ready_sem_error;
 472:Src/app.c     **** 
 473:Src/app.c     ****   bq->buffer_nb = buffer_nb;
 474:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 475:Src/app.c     ****     assert(buffers[i]);
 476:Src/app.c     ****     bq->buffers[i] = buffers[i];
 477:Src/app.c     ****   }
 478:Src/app.c     ****   bq->free_idx = 0;
 479:Src/app.c     ****   bq->ready_idx = 0;
 480:Src/app.c     **** 
 481:Src/app.c     ****   return 0;
 482:Src/app.c     **** 
 483:Src/app.c     **** ready_sem_error:
 484:Src/app.c     ****   vSemaphoreDelete(bq->free);
 485:Src/app.c     **** free_sem_error:
 486:Src/app.c     ****   return -1;
 487:Src/app.c     **** }
 488:Src/app.c     **** 
 489:Src/app.c     **** static uint8_t *bqueue_get_free(bqueue_t *bq, int is_blocking)
 490:Src/app.c     **** {
 491:Src/app.c     ****   uint8_t *res;
 492:Src/app.c     ****   int ret;
 493:Src/app.c     **** 
 494:Src/app.c     ****   ret = xSemaphoreTake(bq->free, is_blocking ? portMAX_DELAY : 0);
 495:Src/app.c     ****   if (ret == pdFALSE)
 496:Src/app.c     ****     return NULL;
 497:Src/app.c     **** 
 498:Src/app.c     ****   res = bq->buffers[bq->free_idx];
 499:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 500:Src/app.c     **** 
 501:Src/app.c     ****   return res;
 502:Src/app.c     **** }
ARM GAS  /tmp/cczRRmNE.s 			page 20


 503:Src/app.c     **** 
 504:Src/app.c     **** static void bqueue_put_free(bqueue_t *bq)
 505:Src/app.c     **** {
 506:Src/app.c     ****   int ret;
 507:Src/app.c     **** 
 508:Src/app.c     ****   ret = xSemaphoreGive(bq->free);
 509:Src/app.c     ****   assert(ret == pdTRUE);
 510:Src/app.c     **** }
 511:Src/app.c     **** 
 512:Src/app.c     **** static uint8_t *bqueue_get_ready(bqueue_t *bq)
 513:Src/app.c     **** {
 514:Src/app.c     ****   uint8_t *res;
 515:Src/app.c     ****   int ret;
 516:Src/app.c     **** 
 517:Src/app.c     ****   ret = xSemaphoreTake(bq->ready, portMAX_DELAY);
 518:Src/app.c     ****   assert(ret == pdTRUE);
 519:Src/app.c     **** 
 520:Src/app.c     ****   res = bq->buffers[bq->ready_idx];
 521:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 522:Src/app.c     **** 
 523:Src/app.c     ****   return res;
 524:Src/app.c     **** }
 525:Src/app.c     **** 
 526:Src/app.c     **** static void bqueue_put_ready(bqueue_t *bq)
 527:Src/app.c     **** {
 528:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 529:Src/app.c     ****   int ret;
 530:Src/app.c     **** 
 531:Src/app.c     ****   if (xPortIsInsideInterrupt()) {
 532:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 533:Src/app.c     ****     assert(ret == pdTRUE);
 534:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 535:Src/app.c     ****   } else {
 536:Src/app.c     ****     ret = xSemaphoreGive(bq->ready);
 537:Src/app.c     ****     assert(ret == pdTRUE);
 538:Src/app.c     ****   }
 539:Src/app.c     **** }
 540:Src/app.c     **** 
 541:Src/app.c     **** static void reload_bg_layer(int next_disp_idx)
 542:Src/app.c     **** {
 543:Src/app.c     ****   int ret;
 544:Src/app.c     **** 
 545:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_bg_buffer[next_disp_idx], SCRL_LAYER_0);
 546:Src/app.c     ****   assert(ret == 0);
 547:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 548:Src/app.c     ****   assert(ret == 0);
 549:Src/app.c     **** 
 550:Src/app.c     ****   ret = SRCL_Update();
 551:Src/app.c     ****   assert(ret == 0);
 552:Src/app.c     **** }
 553:Src/app.c     **** 
 554:Src/app.c     **** static void app_main_pipe_frame_event()
 555:Src/app.c     **** {
 556:Src/app.c     ****   int next_disp_idx = (lcd_bg_buffer_disp_idx + 1) % DISPLAY_BUFFER_NB;
 557:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 558:Src/app.c     ****   int ret;
 559:Src/app.c     **** 
ARM GAS  /tmp/cczRRmNE.s 			page 21


 560:Src/app.c     ****   ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE1,
 561:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 562:Src/app.c     ****   assert(ret == HAL_OK);
 563:Src/app.c     **** 
 564:Src/app.c     ****   reload_bg_layer(next_disp_idx);
 565:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 566:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 567:Src/app.c     **** 
 568:Src/app.c     ****   frame_event_nb++;
 569:Src/app.c     **** }
 570:Src/app.c     **** 
 571:Src/app.c     **** 
 572:Src/app.c     **** static void app_ancillary_pipe_frame_event()
 573:Src/app.c     **** {
 574:Src/app.c     ****   uint8_t *next_buffer;
 575:Src/app.c     ****   int ret;
 576:Src/app.c     **** 
 577:Src/app.c     ****   next_buffer = bqueue_get_free(&nn_input_queue, 0);
 578:Src/app.c     ****   if (next_buffer) {
 579:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 580:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 581:Src/app.c     ****     assert(ret == HAL_OK);
 582:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 583:Src/app.c     ****     frame_event_nb_for_resize = frame_event_nb - 1;
 584:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 585:Src/app.c     ****   }
 586:Src/app.c     **** }
 587:Src/app.c     **** 
 588:Src/app.c     **** static void app_main_pipe_vsync_event()
 589:Src/app.c     **** {
 590:Src/app.c     ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 591:Src/app.c     ****   int ret;
 592:Src/app.c     **** 
 593:Src/app.c     ****   ret = xSemaphoreGiveFromISR(isp_sem, &xHigherPriorityTaskWoken);
 594:Src/app.c     ****   if (ret == pdTRUE)
 595:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 596:Src/app.c     **** }
 597:Src/app.c     **** 
 598:Src/app.c     **** static int clamp_point(int *x, int *y)
 599:Src/app.c     **** {
  84              		.loc 1 599 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
 600:Src/app.c     ****   int xi = *x;
  88              		.loc 1 600 3 view .LVU14
  89              		.loc 1 600 7 is_stmt 0 view .LVU15
  90 0000 0368     		ldr	r3, [r0]
  91              	.LVL5:
 601:Src/app.c     ****   int yi = *y;
  92              		.loc 1 601 3 is_stmt 1 view .LVU16
 599:Src/app.c     ****   int xi = *x;
  93              		.loc 1 599 1 is_stmt 0 view .LVU17
  94 0002 10B5     		push	{r4, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 4, -8
  97              		.cfi_offset 14, -4
ARM GAS  /tmp/cczRRmNE.s 			page 22


 602:Src/app.c     **** 
 603:Src/app.c     ****   if (*x < 0)
  98              		.loc 1 603 6 view .LVU18
  99 0004 002B     		cmp	r3, #0
 604:Src/app.c     ****     *x = 0;
 100              		.loc 1 604 8 view .LVU19
 101 0006 B8BF     		it	lt
 102 0008 0024     		movlt	r4, #0
 601:Src/app.c     **** 
 103              		.loc 1 601 7 view .LVU20
 104 000a 0A68     		ldr	r2, [r1]
 105              	.LVL6:
 603:Src/app.c     ****     *x = 0;
 106              		.loc 1 603 3 is_stmt 1 view .LVU21
 107              		.loc 1 604 5 view .LVU22
 108              		.loc 1 604 8 is_stmt 0 view .LVU23
 109 000c B8BF     		it	lt
 110 000e 0460     		strlt	r4, [r0]
 605:Src/app.c     ****   if (*y < 0)
 111              		.loc 1 605 3 is_stmt 1 view .LVU24
 112              		.loc 1 605 6 is_stmt 0 view .LVU25
 113 0010 0C68     		ldr	r4, [r1]
 114 0012 002C     		cmp	r4, #0
 606:Src/app.c     ****     *y = 0;
 115              		.loc 1 606 5 is_stmt 1 view .LVU26
 116              		.loc 1 606 8 is_stmt 0 view .LVU27
 117 0014 BCBF     		itt	lt
 118 0016 0024     		movlt	r4, #0
 119 0018 0C60     		strlt	r4, [r1]
 607:Src/app.c     ****   if (*x >= lcd_bg_area.XSize)
 120              		.loc 1 607 3 is_stmt 1 view .LVU28
 121              		.loc 1 607 6 is_stmt 0 view .LVU29
 122 001a 0468     		ldr	r4, [r0]
 123 001c B4F5487F 		cmp	r4, #800
 608:Src/app.c     ****     *x = lcd_bg_area.XSize - 1;
 124              		.loc 1 608 5 is_stmt 1 view .LVU30
 125              		.loc 1 608 8 is_stmt 0 view .LVU31
 126 0020 24BF     		itt	cs
 127 0022 40F21F34 		movwcs	r4, #799
 128 0026 0460     		strcs	r4, [r0]
 609:Src/app.c     ****   if (*y >= lcd_bg_area.YSize)
 129              		.loc 1 609 3 is_stmt 1 view .LVU32
 130              		.loc 1 609 6 is_stmt 0 view .LVU33
 131 0028 0C68     		ldr	r4, [r1]
 132 002a B4F5F07F 		cmp	r4, #480
 610:Src/app.c     ****     *y = lcd_bg_area.YSize - 1;
 133              		.loc 1 610 5 is_stmt 1 view .LVU34
 134              		.loc 1 610 8 is_stmt 0 view .LVU35
 135 002e 24BF     		itt	cs
 136 0030 40F2DF14 		movwcs	r4, #479
 137 0034 0C60     		strcs	r4, [r1]
 611:Src/app.c     **** 
 612:Src/app.c     ****   return (xi != *x) || (yi != *y);
 138              		.loc 1 612 3 is_stmt 1 view .LVU36
 139              		.loc 1 612 21 is_stmt 0 view .LVU37
 140 0036 0068     		ldr	r0, [r0]
 141              	.LVL7:
ARM GAS  /tmp/cczRRmNE.s 			page 23


 142              		.loc 1 612 21 view .LVU38
 143 0038 9842     		cmp	r0, r3
 144 003a 04D1     		bne	.L12
 145              		.loc 1 612 21 discriminator 2 view .LVU39
 146 003c 0868     		ldr	r0, [r1]
 147 003e 801A     		subs	r0, r0, r2
 148 0040 18BF     		it	ne
 149 0042 0120     		movne	r0, #1
 150              	.L6:
 613:Src/app.c     **** }
 151              		.loc 1 613 1 view .LVU40
 152 0044 10BD     		pop	{r4, pc}
 153              	.L12:
 612:Src/app.c     **** }
 154              		.loc 1 612 21 discriminator 3 view .LVU41
 155 0046 0120     		movs	r0, #1
 612:Src/app.c     **** }
 156              		.loc 1 612 21 view .LVU42
 157 0048 FCE7     		b	.L6
 158              		.cfi_endproc
 159              	.LFE7381:
 161              		.section	.text.clamp_corners,"ax",%progbits
 162              		.align	1
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	clamp_corners:
 168              	.LVL8:
 169              	.LFB7386:
 614:Src/app.c     **** 
 615:Src/app.c     **** static int clamp_point_with_margin(int *x, int *y, int margin)
 616:Src/app.c     **** {
 617:Src/app.c     ****   int xi = *x;
 618:Src/app.c     ****   int yi = *y;
 619:Src/app.c     **** 
 620:Src/app.c     ****   if (*x < margin)
 621:Src/app.c     ****     *x = margin;
 622:Src/app.c     ****   if (*y < margin)
 623:Src/app.c     ****     *y = margin;
 624:Src/app.c     ****   if (*x >= lcd_bg_area.XSize - margin)
 625:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 626:Src/app.c     ****   if (*y >= lcd_bg_area.YSize - margin)
 627:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 628:Src/app.c     **** 
 629:Src/app.c     ****   return (xi != *x) || (yi != *y);
 630:Src/app.c     **** }
 631:Src/app.c     **** 
 632:Src/app.c     **** static void display_pd_hand(pd_pp_box_t *hand)
 633:Src/app.c     **** {
 634:Src/app.c     ****   int xc, yc;
 635:Src/app.c     ****   int x0, y0;
 636:Src/app.c     ****   int x1, y1;
 637:Src/app.c     ****   int w, h;
 638:Src/app.c     ****   int i;
 639:Src/app.c     **** 
 640:Src/app.c     ****   /* display box around palm */
 641:Src/app.c     ****   xc = (int)hand->x_center;
ARM GAS  /tmp/cczRRmNE.s 			page 24


 642:Src/app.c     ****   yc = (int)hand->y_center;
 643:Src/app.c     ****   w = (int)hand->width;
 644:Src/app.c     ****   h = (int)hand->height;
 645:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 646:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 647:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 648:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 649:Src/app.c     ****   clamp_point(&x0, &y0);
 650:Src/app.c     ****   clamp_point(&x1, &y1);
 651:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 652:Src/app.c     **** 
 653:Src/app.c     ****   /* display palm key points */
 654:Src/app.c     ****   for (i = 0; i < 7; i++) {
 655:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 656:Src/app.c     **** 
 657:Src/app.c     ****     x0 = (int)hand->pKps[i].x;
 658:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 659:Src/app.c     ****     clamp_point(&x0, &y0);
 660:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 661:Src/app.c     ****   }
 662:Src/app.c     **** }
 663:Src/app.c     **** 
 664:Src/app.c     **** static void rotate_point(float pt[2], float rotation)
 665:Src/app.c     **** {
 666:Src/app.c     ****   float x = pt[0];
 667:Src/app.c     ****   float y = pt[1];
 668:Src/app.c     **** 
 669:Src/app.c     ****   pt[0] = cos(rotation) * x - sin(rotation) * y;
 670:Src/app.c     ****   pt[1] = sin(rotation) * x + cos(rotation) * y;
 671:Src/app.c     **** }
 672:Src/app.c     **** 
 673:Src/app.c     **** static void roi_to_corners(roi_t *roi, float corners[4][2])
 674:Src/app.c     **** {
 675:Src/app.c     ****   const float corners_init[4][2] = {
 676:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 677:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 678:Src/app.c     ****     { roi->w / 2,  roi->h / 2},
 679:Src/app.c     ****     {-roi->w / 2,  roi->h / 2},
 680:Src/app.c     ****   };
 681:Src/app.c     ****   int i;
 682:Src/app.c     **** 
 683:Src/app.c     ****   memcpy(corners, corners_init, sizeof(corners_init));
 684:Src/app.c     ****   /* rotate */
 685:Src/app.c     ****   /*
 686:Src/app.c     ****   for (i = 0; i < 4; i++)
 687:Src/app.c     ****     rotate_point(corners[i], roi->rotation);
 688:Src/app.c     ****   */
 689:Src/app.c     ****   /* shift */
 690:Src/app.c     ****   for (i = 0; i < 4; i++) {
 691:Src/app.c     ****     corners[i][0] += roi->cx;
 692:Src/app.c     ****     corners[i][1] += roi->cy;
 693:Src/app.c     ****   }
 694:Src/app.c     **** }
 695:Src/app.c     **** 
 696:Src/app.c     **** static int clamp_corners(float corners_in[4][2], int corners_out[4][2])
 697:Src/app.c     **** {
 170              		.loc 1 697 1 is_stmt 1 view -0
ARM GAS  /tmp/cczRRmNE.s 			page 25


 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 698:Src/app.c     ****   int is_clamp = 0;
 174              		.loc 1 698 3 view .LVU44
 699:Src/app.c     ****   int i;
 175              		.loc 1 699 3 view .LVU45
 700:Src/app.c     **** 
 701:Src/app.c     ****   for (i = 0; i < 4; i++) {
 176              		.loc 1 701 3 view .LVU46
 177              		.loc 1 701 17 discriminator 1 view .LVU47
 697:Src/app.c     ****   int is_clamp = 0;
 178              		.loc 1 697 1 is_stmt 0 view .LVU48
 179 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 180              		.cfi_def_cfa_offset 24
 181              		.cfi_offset 3, -24
 182              		.cfi_offset 4, -20
 183              		.cfi_offset 5, -16
 184              		.cfi_offset 6, -12
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 0546     		mov	r5, r0
 188 0004 0C46     		mov	r4, r1
 698:Src/app.c     ****   int i;
 189              		.loc 1 698 7 view .LVU49
 190 0006 0026     		movs	r6, #0
 191 0008 01F12007 		add	r7, r1, #32
 192              	.LVL9:
 193              	.L14:
 702:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 194              		.loc 1 702 5 is_stmt 1 view .LVU50
 195              		.loc 1 702 25 is_stmt 0 view .LVU51
 196 000c D5ED007A 		vldr.32	s15, [r5]
 197 0010 FDEEE77A 		vcvt.s32.f32	s15, s15
 198 0014 C4ED007A 		vstr.32	s15, [r4]	@ int
 703:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 199              		.loc 1 703 5 is_stmt 1 view .LVU52
 200              		.loc 1 703 25 is_stmt 0 view .LVU53
 201 0018 D5ED017A 		vldr.32	s15, [r5, #4]
 202 001c FDEEE77A 		vcvt.s32.f32	s15, s15
 203 0020 2146     		mov	r1, r4
 204 0022 17EE903A 		vmov	r3, s15	@ int
 704:Src/app.c     ****     is_clamp |= clamp_point(&corners_out[i][0], &corners_out[i][1]);
 205              		.loc 1 704 17 view .LVU54
 206 0026 2046     		mov	r0, r4
 703:Src/app.c     ****     corners_out[i][1] = (int)corners_in[i][1];
 207              		.loc 1 703 25 view .LVU55
 208 0028 41F8043F 		str	r3, [r1, #4]!
 209              		.loc 1 704 5 is_stmt 1 view .LVU56
 210              		.loc 1 704 17 is_stmt 0 view .LVU57
 211 002c FFF7FEFF 		bl	clamp_point
 212              	.LVL10:
 701:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 213              		.loc 1 701 17 discriminator 1 view .LVU58
 214 0030 0834     		adds	r4, r4, #8
 215 0032 BC42     		cmp	r4, r7
 216              		.loc 1 704 14 discriminator 1 view .LVU59
ARM GAS  /tmp/cczRRmNE.s 			page 26


 217 0034 46EA0006 		orr	r6, r6, r0
 218              	.LVL11:
 701:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 219              		.loc 1 701 23 is_stmt 1 discriminator 3 view .LVU60
 701:Src/app.c     ****     corners_out[i][0] = (int)corners_in[i][0];
 220              		.loc 1 701 17 discriminator 1 view .LVU61
 221 0038 05F10805 		add	r5, r5, #8
 222 003c E6D1     		bne	.L14
 705:Src/app.c     ****   }
 706:Src/app.c     **** 
 707:Src/app.c     ****   return is_clamp;
 223              		.loc 1 707 3 view .LVU62
 708:Src/app.c     **** }
 224              		.loc 1 708 1 is_stmt 0 view .LVU63
 225 003e 3046     		mov	r0, r6
 226 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 227              		.loc 1 708 1 view .LVU64
 228              		.cfi_endproc
 229              	.LFE7386:
 231              		.section	.text.roi_to_corners,"ax",%progbits
 232              		.align	1
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	roi_to_corners:
 238              	.LVL12:
 239              	.LFB7385:
 674:Src/app.c     ****   const float corners_init[4][2] = {
 240              		.loc 1 674 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 675:Src/app.c     ****     {-roi->w / 2, -roi->h / 2},
 244              		.loc 1 675 3 view .LVU66
 676:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 245              		.loc 1 676 6 is_stmt 0 view .LVU67
 246 0000 D0ED027A 		vldr.32	s15, [r0, #8]
 676:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 247              		.loc 1 676 19 view .LVU68
 248 0004 90ED037A 		vldr.32	s14, [r0, #12]
 676:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 249              		.loc 1 676 14 view .LVU69
 250 0008 F6EE006A 		vmov.f32	s13, #5.0e-1
 251 000c 67EEE67A 		vnmul.f32	s15, s15, s13
 252              	.LVL13:
 676:Src/app.c     ****     { roi->w / 2, -roi->h / 2},
 253              		.loc 1 676 27 view .LVU70
 254 0010 27EE667A 		vnmul.f32	s14, s14, s13
 255              	.LVL14:
 674:Src/app.c     ****   const float corners_init[4][2] = {
 256              		.loc 1 674 1 view .LVU71
 257 0014 00B5     		push	{lr}
 258              		.cfi_def_cfa_offset 4
 259              		.cfi_offset 14, -4
 260 0016 B1EE676A 		vneg.f32	s12, s15
 261              	.LVL15:
 674:Src/app.c     ****   const float corners_init[4][2] = {
ARM GAS  /tmp/cczRRmNE.s 			page 27


 262              		.loc 1 674 1 view .LVU72
 263 001a F1EE476A 		vneg.f32	s13, s14
 264              	.LVL16:
 681:Src/app.c     **** 
 265              		.loc 1 681 3 is_stmt 1 view .LVU73
 683:Src/app.c     ****   /* rotate */
 266              		.loc 1 683 3 view .LVU74
 267 001e 4FF0040E 		mov	lr, #4
 268 0022 C1ED007A 		vstr.32	s15, [r1]
 269 0026 81ED017A 		vstr.32	s14, [r1, #4]
 270 002a 81ED026A 		vstr.32	s12, [r1, #8]
 271 002e 81ED037A 		vstr.32	s14, [r1, #12]
 272 0032 81ED046A 		vstr.32	s12, [r1, #16]
 273 0036 C1ED056A 		vstr.32	s13, [r1, #20]
 274 003a C1ED067A 		vstr.32	s15, [r1, #24]
 275 003e C1ED076A 		vstr.32	s13, [r1, #28]
 690:Src/app.c     ****     corners[i][0] += roi->cx;
 276              		.loc 1 690 3 view .LVU75
 277              	.LVL17:
 690:Src/app.c     ****     corners[i][0] += roi->cx;
 278              		.loc 1 690 17 discriminator 1 view .LVU76
 279 0042 4EF001E0 		dls	lr, lr
 280              	.LVL18:
 281              	.L17:
 691:Src/app.c     ****     corners[i][1] += roi->cy;
 282              		.loc 1 691 5 view .LVU77
 691:Src/app.c     ****     corners[i][1] += roi->cy;
 283              		.loc 1 691 19 is_stmt 0 view .LVU78
 284 0046 90ED007A 		vldr.32	s14, [r0]
 285 004a D1ED007A 		vldr.32	s15, [r1]
 286 004e 77EE877A 		vadd.f32	s15, s15, s14
 287 0052 C1ED007A 		vstr.32	s15, [r1]
 692:Src/app.c     ****   }
 288              		.loc 1 692 5 is_stmt 1 view .LVU79
 692:Src/app.c     ****   }
 289              		.loc 1 692 19 is_stmt 0 view .LVU80
 290 0056 D1ED017A 		vldr.32	s15, [r1, #4]
 291 005a 90ED017A 		vldr.32	s14, [r0, #4]
 292 005e 77EE877A 		vadd.f32	s15, s15, s14
 690:Src/app.c     ****     corners[i][0] += roi->cx;
 293              		.loc 1 690 17 discriminator 1 view .LVU81
 294 0062 0831     		adds	r1, r1, #8
 692:Src/app.c     ****   }
 295              		.loc 1 692 19 view .LVU82
 296 0064 41ED017A 		vstr.32	s15, [r1, #-4]
 690:Src/app.c     ****     corners[i][0] += roi->cx;
 297              		.loc 1 690 23 is_stmt 1 discriminator 3 view .LVU83
 690:Src/app.c     ****     corners[i][0] += roi->cx;
 298              		.loc 1 690 17 discriminator 1 view .LVU84
 299 0068 0FF013C8 		le	lr, .L17
 694:Src/app.c     **** 
 300              		.loc 1 694 1 is_stmt 0 view .LVU85
 301 006c 5DF804FB 		ldr	pc, [sp], #4
 302              		.cfi_endproc
 303              	.LFE7385:
 305              		.section	.rodata.isp_thread_fct.str1.1,"aMS",%progbits,1
 306              	.LC1:
ARM GAS  /tmp/cczRRmNE.s 			page 28


 307 0000 72657420 		.ascii	"ret == pdTRUE\000"
 307      3D3D2070 
 307      64545255 
 307      4500
 308              	.LC2:
 309 000e 5372632F 		.ascii	"Src/app.c\000"
 309      6170702E 
 309      6300
 310              		.section	.text.isp_thread_fct,"ax",%progbits
 311              		.align	1
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	isp_thread_fct:
 317              	.LVL19:
 318              	.LFB7409:
 709:Src/app.c     **** 
 710:Src/app.c     **** static void display_roi(roi_t *roi)
 711:Src/app.c     **** {
 712:Src/app.c     ****   float corners_f[4][2];
 713:Src/app.c     ****   int corners[4][2];
 714:Src/app.c     ****   int is_clamp;
 715:Src/app.c     ****   int i;
 716:Src/app.c     **** 
 717:Src/app.c     ****   /* compute box corners */
 718:Src/app.c     ****   roi_to_corners(roi, corners_f);
 719:Src/app.c     **** 
 720:Src/app.c     ****   /* clamp */
 721:Src/app.c     ****   is_clamp = clamp_corners(corners_f, corners);
 722:Src/app.c     ****   if (is_clamp)
 723:Src/app.c     ****     return ;
 724:Src/app.c     **** 
 725:Src/app.c     ****   /* display */
 726:Src/app.c     ****   for (i = 0; i < 4; i++)
 727:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 728:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 729:Src/app.c     **** }
 730:Src/app.c     **** 
 731:Src/app.c     **** static void decode_ld_landmark(roi_t *roi, ld_point_t *lm, ld_point_t *decoded)
 732:Src/app.c     **** {
 733:Src/app.c     ****   float rotation = roi->rotation;
 734:Src/app.c     ****   float w = roi->w;
 735:Src/app.c     ****   float h = roi->h;
 736:Src/app.c     **** 
 737:Src/app.c     ****   decoded->x = roi->cx + (lm->x - 0.5) * w * cos(rotation) - (lm->y - 0.5) * h * sin(rotation);
 738:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 739:Src/app.c     **** }
 740:Src/app.c     **** 
 741:Src/app.c     **** static void display_ld_hand(hand_info_t *hand)
 742:Src/app.c     **** {
 743:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 744:Src/app.c     ****   roi_t *roi = &hand->roi;
 745:Src/app.c     ****   int x[LD_LANDMARK_NB];
 746:Src/app.c     ****   int y[LD_LANDMARK_NB];
 747:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 748:Src/app.c     ****   ld_point_t decoded;
 749:Src/app.c     ****   int i;
ARM GAS  /tmp/cczRRmNE.s 			page 29


 750:Src/app.c     **** 
 751:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 752:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 753:Src/app.c     ****     x[i] = (int)decoded.x;
 754:Src/app.c     ****     y[i] = (int)decoded.y;
 755:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 756:Src/app.c     ****   }
 757:Src/app.c     **** 
 758:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++) {
 759:Src/app.c     ****     if (is_clamped[i])
 760:Src/app.c     ****       continue;
 761:Src/app.c     ****     UTIL_LCD_FillCircle(x[i], y[i], disk_radius, UTIL_LCD_COLOR_YELLOW);
 762:Src/app.c     ****   }
 763:Src/app.c     **** }
 764:Src/app.c     **** 
 765:Src/app.c     **** void display_hand(display_info_t *info, hand_info_t *hand)
 766:Src/app.c     **** {
 767:Src/app.c     ****   if (info->is_pd_displayed) {
 768:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 769:Src/app.c     ****     display_roi(&hand->roi);
 770:Src/app.c     ****   }
 771:Src/app.c     ****   if (info->is_ld_displayed)
 772:Src/app.c     ****     display_ld_hand(hand);
 773:Src/app.c     **** }
 774:Src/app.c     **** 
 775:Src/app.c     **** static void Display_NetworkOutput(display_info_t *info)
 776:Src/app.c     **** {
 777:Src/app.c     ****   float cpu_load_one_second;
 778:Src/app.c     ****   int line_nb = 0;
 779:Src/app.c     ****   float nn_fps;
 780:Src/app.c     ****   int i;
 781:Src/app.c     **** 
 782:Src/app.c     ****   /* clear previous ui */
 783:Src/app.c     ****   UTIL_LCD_FillRect(lcd_fg_area.X0, lcd_fg_area.Y0, lcd_fg_area.XSize, lcd_fg_area.YSize, 0x0000000
 784:Src/app.c     **** 
 785:Src/app.c     ****   /* cpu load */
 786:Src/app.c     ****   cpuload_update(&cpu_load);
 787:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 788:Src/app.c     **** 
 789:Src/app.c     ****   /* draw metrics */
 790:Src/app.c     ****   nn_fps = 1000.0 / info->nn_period_ms;
 791:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 792:Src/app.c     ****   line_nb += 1;
 793:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 794:Src/app.c     ****   line_nb += 2;
 795:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 796:Src/app.c     ****   line_nb += 1;
 797:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " face_conf %2u", info->pd_ms);
 798:Src/app.c     ****   line_nb += 1;
 799:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " yolo_num_detections %2u", info->hl_ms);
 800:Src/app.c     ****   line_nb += 2;
 801:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 802:Src/app.c     ****   line_nb += 2;
 803:Src/app.c     ****   if (DBG_INFO) {
 804:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 805:Src/app.c     ****     line_nb += 1;
 806:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "   %ums", info->disp_ms);
ARM GAS  /tmp/cczRRmNE.s 			page 30


 807:Src/app.c     ****     line_nb += 1;
 808:Src/app.c     ****   }
 809:Src/app.c     **** 
 810:Src/app.c     ****   /* display palm detector output */
 811:Src/app.c     ****   for (i = 0; i < info->pd_hand_nb; i++) {
 812:Src/app.c     ****     if (info->hands[i].is_valid)
 813:Src/app.c     ****       display_hand(info, &info->hands[i]);
 814:Src/app.c     ****   }
 815:Src/app.c     **** 
 816:Src/app.c     ****   if (DBG_INFO)
 817:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 818:Src/app.c     **** }
 819:Src/app.c     **** 
 820:Src/app.c     **** /**
 821:Src/app.c     ****  * @brief  Initializes the YOLO detector model info and post-processing
 822:Src/app.c     ****  * @param  info  Pointer to the yolo_detector_info_t context struct
 823:Src/app.c     ****  * @retval None
 824:Src/app.c     ****  */
 825:Src/app.c     **** static void yolo_detector_init(yolo_detector_info_t *info)
 826:Src/app.c     **** {
 827:Src/app.c     ****   // Assumes your YOLO model is named 'yolo_detector' in the Cube.AI tool
 828:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_yolo_detector();
 829:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 830:Src/app.c     ****   int ret;
 831:Src/app.c     **** 
 832:Src/app.c     ****   /* Link model I/O buffers to the info struct */
 833:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 834:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 835:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 836:Src/app.c     **** 
 837:Src/app.c     ****   /* Initialize YOLO post-processing static parameters */
 838:Src/app.c     ****   info->static_param.nb_classes = AI_OD_YOLOV8_PP_NB_CLASSES;        // Example: 80 for COCO datase
 839:Src/app.c     ****   info->static_param.nb_total_boxes = AI_OD_YOLOV8_PP_TOTAL_BOXES;  // Example: Standard for YOLOv8
 840:Src/app.c     ****   info->static_param.max_boxes_limit = 10;  // Max boxes after NMS
 841:Src/app.c     ****   info->static_param.conf_threshold = AI_OD_YOLOV8_PP_CONF_THRESHOLD; // Confidence threshold
 842:Src/app.c     ****   info->static_param.iou_threshold = AI_OD_YOLOV8_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 843:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 844:Src/app.c     ****   info->static_param.raw_output_scale = 1.0f;
 845:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 846:Src/app.c     **** 
 847:Src/app.c     ****   /* Initialize the post-processing module */
 848:Src/app.c     ****   // Assumes a generic post-processing init function exists
 849:Src/app.c     ****   ret = app_postprocess_init(&info->static_param, &NN_Instance_yolo_detector);
 850:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 851:Src/app.c     **** }
 852:Src/app.c     **** 
 853:Src/app.c     **** static int yolo_detector_run(uint8_t *buffer, yolo_detector_info_t *info, uint32_t *exec_time)
 854:Src/app.c     **** {
 855:Src/app.c     ****   uint32_t start_ts;
 856:Src/app.c     ****   int detection_nb;
 857:Src/app.c     ****   int ret;
 858:Src/app.c     ****   int i;
 859:Src/app.c     **** 
 860:Src/app.c     ****   start_ts = HAL_GetTick();
 861:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 862:Src/app.c     ****   ret = LL_ATON_Set_User_Input_Buffer_yolo_detector(0, buffer, info->nn_in_len);
 863:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
ARM GAS  /tmp/cczRRmNE.s 			page 31


 864:Src/app.c     **** 
 865:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_yolo_detector);
 866:Src/app.c     **** 
 867:Src/app.c     ****   /* Run post-processing on the model's raw output */
 868:Src/app.c     ****   ret = app_postprocess_run((void * []){info->raw_detections_out}, 1, &info->yolo_out, &info->stati
 869:Src/app.c     **** 
 870:Src/app.c     ****   // Get the number of final detections after NMS
 871:Src/app.c     ****   detection_nb = info->yolo_out.nb_detect;
 872:Src/app.c     **** 
 873:Src/app.c     ****   /* Optional: Post-process final bounding boxes (e.g., coordinate scaling) */
 874:Src/app.c     ****   // for (i = 0; i < detection_nb; i++) {
 875:Src/app.c     ****   //   // cvt_yolo_coord_to_screen_coord(&info->yolo_out.pOutData[i]); // Example
 876:Src/app.c     ****   // }
 877:Src/app.c     **** 
 878:Src/app.c     ****   /* Invalidate D-Cache for the output region to ensure CPU sees updated data */
 879:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->raw_detections_out, info->raw_detections_out_len));
 880:Src/app.c     **** 
 881:Src/app.c     ****   *exec_time = HAL_GetTick() - start_ts;
 882:Src/app.c     **** 
 883:Src/app.c     ****   return detection_nb;
 884:Src/app.c     **** }
 885:Src/app.c     **** 
 886:Src/app.c     **** static void face_landmark_init(fl_model_info_t *info)
 887:Src/app.c     **** {
 888:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_face_landmark();
 889:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 890:Src/app.c     **** 
 891:Src/app.c     ****   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
 892:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 893:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 894:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 895:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
 896:Src/app.c     ****   // CORRECTED: Cast to the proper int8_t pointer type
 897:Src/app.c     ****   info->landmarks_out = (int8_t *) LL_Buffer_addr_start(&nn_out_info[1]);
 898:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 899:Src/app.c     ****   
 900:Src/app.c     ****   // CORRECTED: Assert now checks for the expected number of bytes for integer data
 901:Src/app.c     ****   assert(info->landmarks_out_len == sizeof(float) * 1404);
 902:Src/app.c     **** }
 903:Src/app.c     **** 
 904:Src/app.c     **** static int face_landmark_prepare_input(uint8_t *buffer, roi_t *roi, fl_model_info_t *info)
 905:Src/app.c     **** {
 906:Src/app.c     ****   float corners_f[4][2];
 907:Src/app.c     ****   int corners[4][2];
 908:Src/app.c     ****   uint8_t* out_data;
 909:Src/app.c     ****   size_t height_out;
 910:Src/app.c     ****   uint8_t *in_data;
 911:Src/app.c     ****   size_t height_in;
 912:Src/app.c     ****   size_t width_out;
 913:Src/app.c     ****   size_t width_in;
 914:Src/app.c     ****   int is_clamped;
 915:Src/app.c     **** 
 916:Src/app.c     ****   /* defaults when no clamping occurs */
 917:Src/app.c     ****   out_data = info->nn_in;
 918:Src/app.c     ****   width_out = LD_WIDTH;
 919:Src/app.c     ****   height_out = LD_HEIGHT;
 920:Src/app.c     **** 
ARM GAS  /tmp/cczRRmNE.s 			page 32


 921:Src/app.c     ****   roi_to_corners(roi, corners_f);
 922:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 923:Src/app.c     **** 
 924:Src/app.c     ****   /* If clamp perform a partial resize */
 925:Src/app.c     ****   if (is_clamped) {
 926:Src/app.c     ****     int offset_x;
 927:Src/app.c     ****     int offset_y;
 928:Src/app.c     **** 
 929:Src/app.c     ****     /* clear target memory since resize will partially write it */
 930:Src/app.c     ****     memset(info->nn_in, 0, info->nn_in_len);
 931:Src/app.c     **** 
 932:Src/app.c     ****     /* compute start address of output buffer */
 933:Src/app.c     ****     offset_x = (int)(((corners[0][0] - corners_f[0][0]) * LD_WIDTH) / (corners_f[2][0] - corners_f[
 934:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 935:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 936:Src/app.c     **** 
 937:Src/app.c     ****     /* compute output width and height */
 938:Src/app.c     ****     width_out = (int)((corners[2][0] - corners[0][0]) / (corners_f[2][0] - corners_f[0][0]) * LD_WI
 939:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 940:Src/app.c     **** 
 941:Src/app.c     ****     assert(width_out > 0);
 942:Src/app.c     ****     assert(height_out > 0);
 943:Src/app.c     ****     {
 944:Src/app.c     ****       uint8_t* out_data_end;
 945:Src/app.c     **** 
 946:Src/app.c     ****       out_data_end = out_data + (int)LD_WIDTH * DISPLAY_BPP * (height_out - 1) + DISPLAY_BPP * widt
 947:Src/app.c     **** 
 948:Src/app.c     ****       assert(out_data_end >= info->nn_in);
 949:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 950:Src/app.c     ****     }
 951:Src/app.c     ****   }
 952:Src/app.c     **** 
 953:Src/app.c     ****   in_data = buffer + corners[0][1] * LCD_BG_WIDTH * DISPLAY_BPP + corners[0][0]* DISPLAY_BPP;
 954:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 955:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
 956:Src/app.c     **** 
 957:Src/app.c     ****   assert(width_in > 0);
 958:Src/app.c     ****   assert(height_in > 0);
 959:Src/app.c     ****   {
 960:Src/app.c     ****     uint8_t* in_data_end;
 961:Src/app.c     **** 
 962:Src/app.c     ****     in_data_end = in_data + LCD_BG_WIDTH * DISPLAY_BPP * (height_in - 1) + DISPLAY_BPP * width_in -
 963:Src/app.c     **** 
 964:Src/app.c     ****     assert(in_data_end >= buffer);
 965:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 966:Src/app.c     ****   }
 967:Src/app.c     **** 
 968:Src/app.c     ****   IPL_resize_bilinear_iu8ou8_with_strides_RGB(in_data, out_data, LCD_BG_WIDTH * DISPLAY_BPP, LD_WID
 969:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 970:Src/app.c     **** 
 971:Src/app.c     ****   return 0;
 972:Src/app.c     **** }
 973:Src/app.c     **** 
 974:Src/app.c     **** 
 975:Src/app.c     **** static int face_landmark_run(uint8_t *buffer, fl_model_info_t *info, roi_t *roi,
 976:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
 977:Src/app.c     **** {
ARM GAS  /tmp/cczRRmNE.s 			page 33


 978:Src/app.c     ****   int is_clamped;
 979:Src/app.c     ****   int is_valid;
 980:Src/app.c     **** 
 981:Src/app.c     ****   is_clamped = face_landmark_prepare_input(buffer, roi, info);
 982:Src/app.c     ****   if (is_clamped)
 983:Src/app.c     ****     return 0;
 984:Src/app.c     **** 
 985:Src/app.c     ****   LL_ATON_RT_Main(&NN_Instance_face_landmark);
 986:Src/app.c     **** 
 987:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
 988:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 989:Src/app.c     ****   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
 990:Src/app.c     **** 
 991:Src/app.c     ****   return is_valid;
 992:Src/app.c     **** }
 993:Src/app.c     **** 
 994:Src/app.c     **** // static void palm_detector_init(pd_model_info_t *info)
 995:Src/app.c     **** // {
 996:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_palm_detector();
 997:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_palm_detector();
 998:Src/app.c     **** //   int ret;
 999:Src/app.c     **** 
1000:Src/app.c     **** //   /* model info */
1001:Src/app.c     **** //   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1002:Src/app.c     **** //   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
1003:Src/app.c     **** //   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
1004:Src/app.c     **** //   assert(info->prob_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float));
1005:Src/app.c     **** //   info->boxes_out = (float *) LL_Buffer_addr_start(&nn_out_info[1]);
1006:Src/app.c     **** //   info->boxes_out_len = LL_Buffer_len(&nn_out_info[1]);
1007:Src/app.c     **** //   assert(info->boxes_out_len == AI_PD_MODEL_PP_TOTAL_DETECTIONS * sizeof(float) * 18);
1008:Src/app.c     **** 
1009:Src/app.c     **** //   /* post processor info */
1010:Src/app.c     **** //   ret = app_postprocess_init(&info->static_param, &NN_Instance_palm_detector);
1011:Src/app.c     **** //   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
1012:Src/app.c     **** // }
1013:Src/app.c     **** 
1014:Src/app.c     **** // static int palm_detector_run(uint8_t *buffer, pd_model_info_t *info, uint32_t *pd_exec_time)
1015:Src/app.c     **** // {
1016:Src/app.c     **** //   uint32_t start_ts;
1017:Src/app.c     **** //   int hand_nb;
1018:Src/app.c     **** //   int ret;
1019:Src/app.c     **** //   int i;
1020:Src/app.c     **** 
1021:Src/app.c     **** //   start_ts = HAL_GetTick();
1022:Src/app.c     **** //   /* Note that we don't need to clean/invalidate those input buffers since they are only access 
1023:Src/app.c     **** //   ret = LL_ATON_Set_User_Input_Buffer_palm_detector(0, buffer, info->nn_in_len);
1024:Src/app.c     **** //   assert(ret == LL_ATON_User_IO_NOERROR);
1025:Src/app.c     **** 
1026:Src/app.c     **** //   LL_ATON_RT_Main(&NN_Instance_palm_detector);
1027:Src/app.c     **** 
1028:Src/app.c     **** //   ret = app_postprocess_run((void * []){info->prob_out, info->boxes_out}, 2, &info->pd_out, &inf
1029:Src/app.c     **** //   assert(ret == AI_PD_POSTPROCESS_ERROR_NO);
1030:Src/app.c     **** //   hand_nb = MIN(info->pd_out.box_nb, PD_MAX_HAND_NB);
1031:Src/app.c     **** 
1032:Src/app.c     **** //   for (i = 0; i < hand_nb; i++) {
1033:Src/app.c     **** //     cvt_pd_coord_to_screen_coord(&info->pd_out.pOutData[i]);
1034:Src/app.c     **** //     pd_box_to_roi(&info->pd_out.pOutData[i], &rois[i]);
ARM GAS  /tmp/cczRRmNE.s 			page 34


1035:Src/app.c     **** //   }
1036:Src/app.c     **** 
1037:Src/app.c     **** //   /* Discard nn_out region (used by pp_outputs variables) to avoid Dcache evictions during nn in
1038:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1039:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->boxes_out, info->boxes_out_len));
1040:Src/app.c     **** 
1041:Src/app.c     **** //   *pd_exec_time = HAL_GetTick() - start_ts;
1042:Src/app.c     **** 
1043:Src/app.c     **** //   return hand_nb;
1044:Src/app.c     **** // }
1045:Src/app.c     **** 
1046:Src/app.c     **** // static void hand_landmark_init(hl_model_info_t *info)
1047:Src/app.c     **** // {
1048:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_out_info = LL_ATON_Output_Buffers_Info_hand_landmark();
1049:Src/app.c     **** //   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_hand_landmark();
1050:Src/app.c     **** 
1051:Src/app.c     **** //   info->nn_in = LL_Buffer_addr_start(&nn_in_info[0]);
1052:Src/app.c     **** //   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
1053:Src/app.c     **** //   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[2]);
1054:Src/app.c     **** //   info->prob_out_len = LL_Buffer_len(&nn_out_info[2]);
1055:Src/app.c     **** //   assert(info->prob_out_len == sizeof(float));
1056:Src/app.c     **** //   info->landmarks_out = (float *) LL_Buffer_addr_start(&nn_out_info[3]);
1057:Src/app.c     **** //   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[3]);
1058:Src/app.c     **** //   assert(info->landmarks_out_len == sizeof(float) * 63);
1059:Src/app.c     **** // }
1060:Src/app.c     **** 
1061:Src/app.c     **** 
1062:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1063:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1064:Src/app.c     **** {
1065:Src/app.c     ****   float corners_f[4][2];
1066:Src/app.c     ****   int corners[4][2];
1067:Src/app.c     ****   uint8_t* out_data;
1068:Src/app.c     ****   size_t height_out;
1069:Src/app.c     ****   uint8_t *in_data;
1070:Src/app.c     ****   size_t height_in;
1071:Src/app.c     ****   size_t width_out;
1072:Src/app.c     ****   size_t width_in;
1073:Src/app.c     ****   int is_clamped;
1074:Src/app.c     **** 
1075:Src/app.c     ****   /* defaults when no clamping occurs */
1076:Src/app.c     ****   out_data = info->nn_in;
1077:Src/app.c     ****   width_out = LD_WIDTH;
1078:Src/app.c     ****   height_out = LD_HEIGHT;
1079:Src/app.c     **** 
1080:Src/app.c     ****   roi_to_corners(roi, corners_f);
1081:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
1082:Src/app.c     **** 
1083:Src/app.c     ****   /* If clamp perform a partial resize */
1084:Src/app.c     ****   if (is_clamped) {
1085:Src/app.c     ****     int offset_x;
1086:Src/app.c     ****     int offset_y;
1087:Src/app.c     **** 
1088:Src/app.c     ****     /* clear target memory since resize will partially write it */
1089:Src/app.c     ****     memset(info->nn_in, 0, info->nn_in_len);
1090:Src/app.c     **** 
1091:Src/app.c     ****     /* compute start address of output buffer */
ARM GAS  /tmp/cczRRmNE.s 			page 35


1092:Src/app.c     ****     offset_x = (int)(((corners[0][0] - corners_f[0][0]) * LD_WIDTH) / (corners_f[2][0] - corners_f[
1093:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
1094:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
1095:Src/app.c     **** 
1096:Src/app.c     ****     /* compute output width and height */
1097:Src/app.c     ****     width_out = (int)((corners[2][0] - corners[0][0]) / (corners_f[2][0] - corners_f[0][0]) * LD_WI
1098:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
1099:Src/app.c     **** 
1100:Src/app.c     ****     assert(width_out > 0);
1101:Src/app.c     ****     assert(height_out > 0);
1102:Src/app.c     ****     {
1103:Src/app.c     ****       uint8_t* out_data_end;
1104:Src/app.c     **** 
1105:Src/app.c     ****       out_data_end = out_data + (int)LD_WIDTH * DISPLAY_BPP * (height_out - 1) + DISPLAY_BPP * widt
1106:Src/app.c     **** 
1107:Src/app.c     ****       assert(out_data_end >= info->nn_in);
1108:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
1109:Src/app.c     ****     }
1110:Src/app.c     ****   }
1111:Src/app.c     **** 
1112:Src/app.c     ****   in_data = buffer + corners[0][1] * LCD_BG_WIDTH * DISPLAY_BPP + corners[0][0]* DISPLAY_BPP;
1113:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
1114:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
1115:Src/app.c     **** 
1116:Src/app.c     ****   assert(width_in > 0);
1117:Src/app.c     ****   assert(height_in > 0);
1118:Src/app.c     ****   {
1119:Src/app.c     ****     uint8_t* in_data_end;
1120:Src/app.c     **** 
1121:Src/app.c     ****     in_data_end = in_data + LCD_BG_WIDTH * DISPLAY_BPP * (height_in - 1) + DISPLAY_BPP * width_in -
1122:Src/app.c     **** 
1123:Src/app.c     ****     assert(in_data_end >= buffer);
1124:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
1125:Src/app.c     ****   }
1126:Src/app.c     **** 
1127:Src/app.c     ****   IPL_resize_bilinear_iu8ou8_with_strides_RGB(in_data, out_data, LCD_BG_WIDTH * DISPLAY_BPP, LD_WID
1128:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
1129:Src/app.c     **** 
1130:Src/app.c     ****   return 0;
1131:Src/app.c     **** }
1132:Src/app.c     **** #else
1133:Src/app.c     **** static void app_transform(nema_matrix3x3_t t, app_v3_t v)
1134:Src/app.c     **** {
1135:Src/app.c     ****   app_v3_t r;
1136:Src/app.c     ****   int i;
1137:Src/app.c     **** 
1138:Src/app.c     ****   for (i = 0; i < 3; i++)
1139:Src/app.c     ****     r[i] = t[i][0] * v[0] + t[i][1] * v[1] + t[i][2] * v[2];
1140:Src/app.c     **** 
1141:Src/app.c     ****   for (i = 0; i < 3; i++)
1142:Src/app.c     ****     v[i] = r[i];
1143:Src/app.c     **** }
1144:Src/app.c     **** 
1145:Src/app.c     **** static int hand_landmark_prepare_input(uint8_t *buffer, roi_t *roi, hl_model_info_t *info)
1146:Src/app.c     **** {
1147:Src/app.c     ****   app_v3_t vertex[] = {
1148:Src/app.c     ****     {           0,             0, 1},
ARM GAS  /tmp/cczRRmNE.s 			page 36


1149:Src/app.c     ****     {LCD_BG_WIDTH,             0, 1},
1150:Src/app.c     ****     {LCD_BG_WIDTH, LCD_BG_HEIGHT, 1},
1151:Src/app.c     ****     {           0, LCD_BG_HEIGHT, 1},
1152:Src/app.c     ****   };
1153:Src/app.c     ****   GFXMMU_BuffersTypeDef buffers = { 0 };
1154:Src/app.c     ****   nema_matrix3x3_t t;
1155:Src/app.c     ****   int ret;
1156:Src/app.c     ****   int i;
1157:Src/app.c     **** 
1158:Src/app.c     ****   buffers.Buf0Address = (uint32_t) info->nn_in;
1159:Src/app.c     ****   ret = HAL_GFXMMU_ModifyBuffers(&hgfxmmu, &buffers);
1160:Src/app.c     ****   assert(ret == HAL_OK);
1161:Src/app.c     **** 
1162:Src/app.c     ****   /* bind destination texture */
1163:Src/app.c     ****   nema_bind_dst_tex(GFXMMU_VIRTUAL_BUFFER0_BASE, LD_WIDTH, LD_HEIGHT, NEMA_RGBA8888, -1);
1164:Src/app.c     ****   nema_set_clip(0, 0, LD_WIDTH, LD_HEIGHT);
1165:Src/app.c     ****   nema_clear(0);
1166:Src/app.c     ****   /* bind source texture */
1167:Src/app.c     ****   nema_bind_src_tex((uintptr_t) buffer, LCD_BG_WIDTH, LCD_BG_HEIGHT, NEMA_RGBA8888, -1, NEMA_FILTER
1168:Src/app.c     ****   nema_enable_tiling(1);
1169:Src/app.c     ****   nema_set_blend_blit(NEMA_BL_SRC);
1170:Src/app.c     **** 
1171:Src/app.c     ****   /* let's go */
1172:Src/app.c     ****   nema_mat3x3_load_identity(t);
1173:Src/app.c     ****   nema_mat3x3_translate(t, -roi->cx, -roi->cy);
1174:Src/app.c     ****   nema_mat3x3_rotate(t, nema_rad_to_deg(-roi->rotation));
1175:Src/app.c     ****   nema_mat3x3_scale(t, LD_WIDTH / roi->w, LD_HEIGHT / roi->h);
1176:Src/app.c     ****   nema_mat3x3_translate(t, LD_WIDTH / 2, LD_HEIGHT / 2);
1177:Src/app.c     ****   for (i = 0 ; i < 4; i++)
1178:Src/app.c     ****     app_transform(t, vertex[i]);
1179:Src/app.c     ****   nema_blit_quad_fit(vertex[0][0], vertex[0][1], vertex[1][0], vertex[1][1],
1180:Src/app.c     ****                      vertex[2][0], vertex[2][1], vertex[3][0], vertex[3][1]);
1181:Src/app.c     **** 
1182:Src/app.c     ****   nema_cl_submit(&cl);
1183:Src/app.c     ****   nema_cl_wait(&cl);
1184:Src/app.c     ****   HAL_ICACHE_Invalidate();
1185:Src/app.c     **** 
1186:Src/app.c     ****   assert(!nema_get_error());
1187:Src/app.c     **** 
1188:Src/app.c     ****   return 0;
1189:Src/app.c     **** }
1190:Src/app.c     **** #endif
1191:Src/app.c     **** 
1192:Src/app.c     **** // static int hand_landmark_run(uint8_t *buffer, hl_model_info_t *info, roi_t *roi,
1193:Src/app.c     **** //                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
1194:Src/app.c     **** // {
1195:Src/app.c     **** //   int is_clamped;
1196:Src/app.c     **** //   int is_valid;
1197:Src/app.c     **** 
1198:Src/app.c     **** //   is_clamped = hand_landmark_prepare_input(buffer, roi, info);
1199:Src/app.c     **** //   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(info->nn_in, info->nn_in_len));
1200:Src/app.c     **** //   if (is_clamped)
1201:Src/app.c     **** //     return 0;
1202:Src/app.c     **** 
1203:Src/app.c     **** //   LL_ATON_RT_Main(&NN_Instance_hand_landmark);
1204:Src/app.c     **** 
1205:Src/app.c     **** //   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
ARM GAS  /tmp/cczRRmNE.s 			page 37


1206:Src/app.c     **** 
1207:Src/app.c     **** //   /* Discard nn_out region (used by pp_input and pp_outputs variables) to avoid Dcache evictions
1208:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->prob_out, info->prob_out_len));
1209:Src/app.c     **** //   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
1210:Src/app.c     **** 
1211:Src/app.c     **** //   return is_valid;
1212:Src/app.c     **** // }
1213:Src/app.c     **** 
1214:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 1
1215:Src/app.c     **** static void app_rot_init(hl_model_info_t *info)
1216:Src/app.c     **** {
1217:Src/app.c     ****   GFXMMU_PackingTypeDef packing = { 0 };
1218:Src/app.c     ****   int ret;
1219:Src/app.c     **** 
1220:Src/app.c     ****   printf("init nema\n");
1221:Src/app.c     ****   nema_init();
1222:Src/app.c     ****   assert(!nema_get_error());
1223:Src/app.c     ****   nema_ext_hold_enable(2);
1224:Src/app.c     ****   nema_ext_hold_irq_enable(2);
1225:Src/app.c     ****   nema_ext_hold_enable(3);
1226:Src/app.c     ****   nema_ext_hold_irq_enable(3);
1227:Src/app.c     ****   printf("init nema DONE %s\n", nema_get_sw_device_name());
1228:Src/app.c     **** 
1229:Src/app.c     ****   hgfxmmu.Instance = GFXMMU;
1230:Src/app.c     ****   hgfxmmu.Init.BlockSize = GFXMMU_12BYTE_BLOCKS;
1231:Src/app.c     ****   hgfxmmu.Init.AddressTranslation = DISABLE;
1232:Src/app.c     ****   ret = HAL_GFXMMU_Init(&hgfxmmu);
1233:Src/app.c     ****   assert(ret == HAL_OK);
1234:Src/app.c     **** 
1235:Src/app.c     ****   packing.Buffer0Activation = ENABLE;
1236:Src/app.c     ****   packing.Buffer0Mode       = GFXMMU_PACKING_MSB_REMOVE;
1237:Src/app.c     ****   packing.DefaultAlpha      = 0xff;
1238:Src/app.c     ****   ret = HAL_GFXMMU_ConfigPacking(&hgfxmmu, &packing);
1239:Src/app.c     ****   assert(ret == HAL_OK);
1240:Src/app.c     **** 
1241:Src/app.c     ****   cl = nema_cl_create_sized(8192);
1242:Src/app.c     ****   nema_cl_bind_circular(&cl);
1243:Src/app.c     **** }
1244:Src/app.c     **** #endif
1245:Src/app.c     **** 
1246:Src/app.c     **** static float ld_compute_rotation(ld_point_t lm[LD_LANDMARK_NB])
1247:Src/app.c     **** {
1248:Src/app.c     ****   float x0, y0, x1, y1;
1249:Src/app.c     ****   float rotation;
1250:Src/app.c     **** 
1251:Src/app.c     ****   x0 = lm[0].x;
1252:Src/app.c     ****   y0 = lm[0].y;
1253:Src/app.c     ****   x1 = lm[9].x;
1254:Src/app.c     ****   y1 = lm[9].y;
1255:Src/app.c     **** 
1256:Src/app.c     ****   rotation = M_PI * 0.5 - atan2f(-(y1 - y0), x1 - x0);
1257:Src/app.c     **** 
1258:Src/app.c     ****   return pd_cook_rotation(pd_normalize_angle(rotation));
1259:Src/app.c     **** }
1260:Src/app.c     **** 
1261:Src/app.c     **** static void ld_to_roi(ld_point_t lm[LD_LANDMARK_NB], roi_t *roi, pd_pp_box_t *next_pd)
1262:Src/app.c     **** {
ARM GAS  /tmp/cczRRmNE.s 			page 38


1263:Src/app.c     ****   const int pd_to_ld_idx[AI_PD_MODEL_PP_NB_KEYPOINTS] = {0, 5, 9, 13, 17, 1, 2};
1264:Src/app.c     ****   const int indices[] = {0, 1, 2, 3, 5, 6, 9, 10, 13, 14, 17, 18};
1265:Src/app.c     ****   float max_x, max_y, min_x, min_y;
1266:Src/app.c     ****   int i;
1267:Src/app.c     **** 
1268:Src/app.c     ****   max_x = max_y = -10000;
1269:Src/app.c     ****   min_x = min_y =  10000;
1270:Src/app.c     **** 
1271:Src/app.c     ****   roi->rotation = ld_compute_rotation(lm);
1272:Src/app.c     **** 
1273:Src/app.c     ****   for (i = 0; i < ARRAY_NB(indices); i++) {
1274:Src/app.c     ****     max_x = MAX(max_x, lm[indices[i]].x);
1275:Src/app.c     ****     max_y = MAX(max_y, lm[indices[i]].y);
1276:Src/app.c     ****     min_x = MIN(min_x, lm[indices[i]].x);
1277:Src/app.c     ****     min_y = MIN(min_y, lm[indices[i]].y);
1278:Src/app.c     ****   }
1279:Src/app.c     **** 
1280:Src/app.c     ****   roi->cx = (max_x + min_x) / 2;
1281:Src/app.c     ****   roi->cy = (max_y + min_y) / 2;
1282:Src/app.c     ****   roi->w = (max_x - min_x);
1283:Src/app.c     ****   roi->h = (max_y - min_y);
1284:Src/app.c     **** 
1285:Src/app.c     ****   next_pd->x_center = roi->cx;
1286:Src/app.c     ****   next_pd->y_center = roi->cy;
1287:Src/app.c     ****   next_pd->width = roi->w;
1288:Src/app.c     ****   next_pd->height = roi->h;
1289:Src/app.c     ****   for (i = 0; i < AI_PD_MODEL_PP_NB_KEYPOINTS; i++) {
1290:Src/app.c     ****     next_pd->pKps[i].x = lm[pd_to_ld_idx[i]].x;
1291:Src/app.c     ****     next_pd->pKps[i].y = lm[pd_to_ld_idx[i]].y;
1292:Src/app.c     ****   }
1293:Src/app.c     **** }
1294:Src/app.c     **** 
1295:Src/app.c     **** static void compute_next_roi(roi_t *src, ld_point_t lm_in[LD_LANDMARK_NB], roi_t *next, pd_pp_box_t
1296:Src/app.c     **** {
1297:Src/app.c     ****   const float shift_x = 0;
1298:Src/app.c     ****   const float shift_y = -0.1;
1299:Src/app.c     ****   const float scale = 2.0;
1300:Src/app.c     ****   ld_point_t lm[LD_LANDMARK_NB];
1301:Src/app.c     ****   roi_t roi;
1302:Src/app.c     ****   int i;
1303:Src/app.c     **** 
1304:Src/app.c     ****   for (i = 0; i < LD_LANDMARK_NB; i++)
1305:Src/app.c     ****     decode_ld_landmark(src, &lm_in[i], &lm[i]);
1306:Src/app.c     **** 
1307:Src/app.c     ****   ld_to_roi(lm, &roi, next_pd);
1308:Src/app.c     ****   roi_shift_and_scale(&roi, shift_x, shift_y, scale, scale);
1309:Src/app.c     **** 
1310:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1311:Src/app.c     ****   /* In that case we can cancel rotation. This ensure corners are corrected oriented */
1312:Src/app.c     ****   roi.rotation = 0;
1313:Src/app.c     **** #endif
1314:Src/app.c     **** 
1315:Src/app.c     ****   *next = roi;
1316:Src/app.c     **** }
1317:Src/app.c     **** static void nn_thread_fct(void *arg)
1318:Src/app.c     **** {
1319:Src/app.c     ****   float nn_period_filtered_ms = 0;
ARM GAS  /tmp/cczRRmNE.s 			page 39


1320:Src/app.c     ****   // Filtered inference times, will be updated with 0
1321:Src/app.c     ****   float pd_filtered_ms = 0;
1322:Src/app.c     ****   float ld_filtered_ms = 0;
1323:Src/app.c     **** 
1324:Src/app.c     ****   uint32_t nn_period_ms;
1325:Src/app.c     ****   uint32_t nn_period[2];
1326:Src/app.c     ****   uint8_t *nn_pipe_dst;
1327:Src/app.c     ****   int is_tracking;
1328:Src/app.c     ****   uint32_t pd_ms;
1329:Src/app.c     ****   uint32_t hl_ms;
1330:Src/app.c     ****   int ret;
1331:Src/app.c     ****   int is_landmark_valid;
1332:Src/app.c     ****   int best_face_idx = -1;
1333:Src/app.c     **** 
1334:Src/app.c     ****   /*
1335:Src/app.c     ****    * 2. Initialize the YOLO model
1336:Src/app.c     ****    * This calls the init function to set up buffers and parameters.
1337:Src/app.c     ****    * If the application runs past this point, the initialization is successful.
1338:Src/app.c     ****    */
1339:Src/app.c     ****   yolo_detector_info_t yolo_info;
1340:Src/app.c     ****   yolo_detector_init(&yolo_info);
1341:Src/app.c     **** 
1342:Src/app.c     ****   fl_model_info_t face_info;
1343:Src/app.c     ****   face_landmark_init(&face_info);
1344:Src/app.c     **** 
1345:Src/app.c     ****   int detection_nb;
1346:Src/app.c     **** 
1347:Src/app.c     ****   /*** App Loop ***************************************************************/
1348:Src/app.c     ****   nn_period[1] = HAL_GetTick();
1349:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1350:Src/app.c     ****   assert(nn_pipe_dst);
1351:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1352:Src/app.c     ****   while (1)
1353:Src/app.c     ****   {
1354:Src/app.c     ****     best_face_idx = -1; // Reset best face index for each frame
1355:Src/app.c     ****     uint8_t *capture_buffer;
1356:Src/app.c     ****     memset(&yolo_info.yolo_out, 0, sizeof(yolo_info.yolo_out));
1357:Src/app.c     ****     // Standard frame timing
1358:Src/app.c     ****     nn_period[0] = nn_period[1];
1359:Src/app.c     ****     nn_period[1] = HAL_GetTick();
1360:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
1361:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
1362:Src/app.c     **** 
1363:Src/app.c     ****     // Get camera buffer to keep the pipeline moving
1364:Src/app.c     ****     capture_buffer = bqueue_get_ready(&nn_input_queue);
1365:Src/app.c     ****     assert(capture_buffer);
1366:Src/app.c     **** 
1367:Src/app.c     ****     SCB_InvalidateDCache_by_Addr((uint32_t *)capture_buffer, NN_WIDTH * NN_HEIGHT * NN_BPP);
1368:Src/app.c     ****     /**************************************************************************
1369:Src/app.c     ****      * MODEL EXECUTION 
1370:Src/app.c     ****      **************************************************************************/
1371:Src/app.c     ****     detection_nb = yolo_detector_run(capture_buffer, &yolo_info, &pd_ms);
1372:Src/app.c     ****     hl_ms = HAL_GetTick();
1373:Src/app.c     ****     hl_ms = HAL_GetTick() - hl_ms;
1374:Src/app.c     **** 
1375:Src/app.c     ****     is_tracking = 0; // Force state to "not tracking"
1376:Src/app.c     **** 
ARM GAS  /tmp/cczRRmNE.s 			page 40


1377:Src/app.c     **** 
1378:Src/app.c     ****     /*
1379:Src/app.c     ****      * Update display stats
1380:Src/app.c     ****      */
1381:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1382:Src/app.c     ****     assert(ret == pdTRUE);
1383:Src/app.c     ****     // NEW: Loop through all detections to find the highest confidence score
1384:Src/app.c     ****     float max_confidence = 0.0f;
1385:Src/app.c     ****     // 1. Loop through all detections from the model's output
1386:Src/app.c     ****     for (int i = 0; i < yolo_info.yolo_out.nb_detect; i++)
1387:Src/app.c     ****     {
1388:Src/app.c     ****         // 2. Check if the current detection is a face
1389:Src/app.c     ****         if (yolo_info.yolo_out.pOutBuff[i].class_index == 2)
1390:Src/app.c     ****         {
1391:Src/app.c     ****             // 3. Check if this face has the highest confidence so far
1392:Src/app.c     ****             if (yolo_info.yolo_out.pOutBuff[i].conf > max_confidence)
1393:Src/app.c     ****             {
1394:Src/app.c     ****                 // If yes, save its confidence and index
1395:Src/app.c     ****                 max_confidence = yolo_info.yolo_out.pOutBuff[i].conf;
1396:Src/app.c     ****                 best_face_idx = i;
1397:Src/app.c     ****             }
1398:Src/app.c     ****         }
1399:Src/app.c     ****     }
1400:Src/app.c     ****     roi_t face_roi;
1401:Src/app.c     ****     int is_face_present = 0; // A flag to know if we should run the second model
1402:Src/app.c     ****     // 4. Check if a valid face was found in this frame
1403:Src/app.c     ****     if (best_face_idx != -1)
1404:Src/app.c     ****     {
1405:Src/app.c     ****         // A face was detected with sufficient confidence
1406:Src/app.c     ****         is_face_present = 1;
1407:Src/app.c     ****         
1408:Src/app.c     ****         // Get the normalized coordinates of the best face detection
1409:Src/app.c     ****         od_pp_outBuffer_t best_face = yolo_info.yolo_out.pOutBuff[best_face_idx];
1410:Src/app.c     **** 
1411:Src/app.c     ****         // 5. Convert normalized coordinates [0.0, 1.0] to pixel coordinates
1412:Src/app.c     ****         face_roi.w  = (int)(best_face.width * LCD_BG_WIDTH);
1413:Src/app.c     ****         face_roi.h  = (int)(best_face.height * LCD_BG_HEIGHT);
1414:Src/app.c     ****         face_roi.cx = (int)(best_face.x_center * LCD_BG_WIDTH);
1415:Src/app.c     ****         face_roi.cy = (int)(best_face.y_center * LCD_BG_HEIGHT);
1416:Src/app.c     ****         face_roi.rotation = 0.0f;
1417:Src/app.c     **** 
1418:Src/app.c     ****         // Now, 'face_roi' is ready to be passed to your face_landmark_run() function.
1419:Src/app.c     ****         hl_ms = HAL_GetTick();
1420:Src/app.c     ****         is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &face_roi, ld_landmarks[0
1421:Src/app.c     ****         hl_ms = HAL_GetTick() - hl_ms;
1422:Src/app.c     ****     }
1423:Src/app.c     ****     else
1424:Src/app.c     ****     {
1425:Src/app.c     ****         // No face was found that meets the criteria
1426:Src/app.c     ****         is_face_present = 0;
1427:Src/app.c     ****     }
1428:Src/app.c     ****         // Update filtered times with our zero values
1429:Src/app.c     ****     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1430:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1431:Src/app.c     **** 
1432:Src/app.c     ****     // We are done with the buffer, release it
1433:Src/app.c     ****     bqueue_put_free(&nn_input_queue);
ARM GAS  /tmp/cczRRmNE.s 			page 41


1434:Src/app.c     ****     int8_t* landmarks_raw_int_ptr = (int8_t*)face_info.landmarks_out;
1435:Src/app.c     **** 
1436:Src/app.c     ****     // Populate display structure with valid, non-model data
1437:Src/app.c     ****     disp.info.pd_ms = (int)(max_confidence * 100.0f);
1438:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
1439:Src/app.c     ****     disp.info.pd_hand_nb = yolo_info.yolo_out.nb_detect;
1440:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
1441:Src/app.c     ****     //disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
1442:Src/app.c     ****     disp.info.hands[0].is_valid = 0; // Set hand as invalid
1443:Src/app.c     ****     // NOTE: We no longer copy box or landmark data, as none exists.
1444:Src/app.c     ****     // The display thread should check the 'is_valid' flag before drawing.
1445:Src/app.c     ****     if (is_face_present)
1446:Src/app.c     ****     {
1447:Src/app.c     ****       // 1. Get the landmark's coordinate relative to the cropped ROI.
1448:Src/app.c     ****       float landmark_relative_x = ld_landmarks[0][4].x;
1449:Src/app.c     **** 
1450:Src/app.c     ****       // 2. Calculate the starting X position of the ROI on the full screen.
1451:Src/app.c     ****       // The ROI gives center_x, so we subtract half the width to get the top-left corner.
1452:Src/app.c     ****       float roi_start_x = face_roi.cx - (face_roi.w / 2.0f);
1453:Src/app.c     **** 
1454:Src/app.c     ****       // 3. Scale the relative landmark coordinate to the ROI's size on the main screen.
1455:Src/app.c     ****       // LD_WIDTH is the width of the landmark model's input (e.g., 192).
1456:Src/app.c     ****       // We need to scale the landmark's position from that space to the ROI's actual width.
1457:Src/app.c     ****       float landmark_scaled_x = landmark_relative_x * (face_roi.w / (float)LD_WIDTH);
1458:Src/app.c     **** 
1459:Src/app.c     ****       // 4. Add the ROI's starting position to get the final, absolute screen coordinate.
1460:Src/app.c     ****       int final_screen_x = (int)(roi_start_x + landmark_scaled_x);
1461:Src/app.c     **** 
1462:Src/app.c     ****       // Now, display the correct, absolute coordinate.
1463:Src/app.c     ****       disp.info.hl_ms = final_screen_x;
1464:Src/app.c     **** 
1465:Src/app.c     ****       // --- END OF FIX ---      disp.info.hl_ms = (int)(ld_landmarks[0][467].x);
1466:Src/app.c     ****       
1467:Src/app.c     ****       // If valid, show the dummy ROI as the bounding box
1468:Src/app.c     ****       disp.info.hands[0].roi = face_roi;
1469:Src/app.c     **** 
1470:Src/app.c     ****       // Copy the landmark data for the display thread
1471:Src/app.c     ****       for (int j = 0; j < LD_LANDMARK_NB; j++)
1472:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1473:Src/app.c     ****     }
1474:Src/app.c     ****     else
1475:Src/app.c     ****     {
1476:Src/app.c     ****       disp.info.hl_ms = 0;
1477:Src/app.c     ****     }
1478:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1479:Src/app.c     ****     assert(ret == pdTRUE);
1480:Src/app.c     **** 
1481:Src/app.c     ****     // Signal the display thread to update
1482:Src/app.c     ****     xSemaphoreGive(disp.update);
1483:Src/app.c     ****   }
1484:Src/app.c     **** }
1485:Src/app.c     **** 
1486:Src/app.c     **** // static void backup(void *arg)
1487:Src/app.c     **** // {
1488:Src/app.c     **** //   float nn_period_filtered_ms = 0;
1489:Src/app.c     **** //   float pd_filtered_ms = 0;
1490:Src/app.c     **** //   float ld_filtered_ms = 0;
ARM GAS  /tmp/cczRRmNE.s 			page 42


1491:Src/app.c     **** //   hl_model_info_t hl_info;
1492:Src/app.c     **** //   pd_model_info_t pd_info;
1493:Src/app.c     **** //   uint32_t nn_period_ms;
1494:Src/app.c     **** //   uint32_t nn_period[2];
1495:Src/app.c     **** //   uint8_t *nn_pipe_dst;
1496:Src/app.c     **** //   pd_pp_point_t box_next_keypoints[AI_PD_MODEL_PP_NB_KEYPOINTS];
1497:Src/app.c     **** //   pd_pp_box_t box_next;
1498:Src/app.c     **** //   int is_tracking = 0;
1499:Src/app.c     **** //   roi_t roi_next;
1500:Src/app.c     **** //   uint32_t pd_ms;
1501:Src/app.c     **** //   uint32_t hl_ms;
1502:Src/app.c     **** //   int ret;
1503:Src/app.c     **** //   int j;
1504:Src/app.c     **** 
1505:Src/app.c     **** //   /* Current tracking algo only support single hand */
1506:Src/app.c     **** //   assert(PD_MAX_HAND_NB == 1);
1507:Src/app.c     **** 
1508:Src/app.c     **** //   /* setup models buffer info */
1509:Src/app.c     **** //   palm_detector_init(&pd_info);
1510:Src/app.c     **** //   box_next.pKps = box_next_keypoints;
1511:Src/app.c     **** //   hand_landmark_init(&hl_info);
1512:Src/app.c     **** 
1513:Src/app.c     **** // #if HAS_ROTATION_SUPPORT == 1
1514:Src/app.c     **** //   app_rot_init(&hl_info);
1515:Src/app.c     **** // #endif
1516:Src/app.c     **** 
1517:Src/app.c     **** //   /*** App Loop ***************************************************************/
1518:Src/app.c     **** //   nn_period[1] = HAL_GetTick();
1519:Src/app.c     **** //   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
1520:Src/app.c     **** //   assert(nn_pipe_dst);
1521:Src/app.c     **** //   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
1522:Src/app.c     **** //   while (1)
1523:Src/app.c     **** //   {
1524:Src/app.c     **** //     uint8_t *capture_buffer;
1525:Src/app.c     **** //     int idx_for_resize;
1526:Src/app.c     **** 
1527:Src/app.c     **** //     nn_period[0] = nn_period[1];
1528:Src/app.c     **** //     nn_period[1] = HAL_GetTick();
1529:Src/app.c     **** //     nn_period_ms = nn_period[1] - nn_period[0];
1530:Src/app.c     **** //     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 :
1531:Src/app.c     **** 
1532:Src/app.c     **** //     capture_buffer = bqueue_get_ready(&nn_input_queue);
1533:Src/app.c     **** //     assert(capture_buffer);
1534:Src/app.c     **** //     idx_for_resize = frame_event_nb_for_resize % DISPLAY_BUFFER_NB;
1535:Src/app.c     **** 
1536:Src/app.c     **** //     /* Only start palm detector when not tracking hand */
1537:Src/app.c     **** //     if (!is_tracking) {
1538:Src/app.c     **** //       is_tracking = palm_detector_run(capture_buffer, &pd_info, &pd_ms);
1539:Src/app.c     **** //       box_next.prob = pd_info.pd_out.pOutData[0].prob;
1540:Src/app.c     **** //     } else {
1541:Src/app.c     **** //       rois[0] = roi_next;
1542:Src/app.c     **** //       copy_pd_box(&pd_info.pd_out.pOutData[0], &box_next);
1543:Src/app.c     **** //       pd_ms = 0;
1544:Src/app.c     **** //     }
1545:Src/app.c     **** //     pd_filtered_ms = USE_FILTERED_TS ? (7 * pd_filtered_ms + pd_ms) / 8 : pd_ms;
1546:Src/app.c     **** //     bqueue_put_free(&nn_input_queue);
1547:Src/app.c     **** 
ARM GAS  /tmp/cczRRmNE.s 			page 43


1548:Src/app.c     **** //     /* then run hand landmark detector if needed */
1549:Src/app.c     **** //     if (is_tracking) {
1550:Src/app.c     **** //       hl_ms = HAL_GetTick();
1551:Src/app.c     **** //       is_tracking = hand_landmark_run(lcd_bg_buffer[idx_for_resize], &hl_info, &rois[0], ld_land
1552:Src/app.c     **** //       CACHE_OP(SCB_InvalidateDCache_by_Addr(lcd_bg_buffer[idx_for_resize], sizeof(lcd_bg_buffer[
1553:Src/app.c     **** //       if (is_tracking)
1554:Src/app.c     **** //         compute_next_roi(&rois[0], ld_landmarks[0], &roi_next, &box_next);
1555:Src/app.c     **** //       hl_ms = HAL_GetTick() - hl_ms;
1556:Src/app.c     **** //     } else {
1557:Src/app.c     **** //       hl_ms = 0;
1558:Src/app.c     **** //     }
1559:Src/app.c     **** //     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
1560:Src/app.c     **** 
1561:Src/app.c     **** //     /* update display stats */
1562:Src/app.c     **** //     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1563:Src/app.c     **** //     assert(ret == pdTRUE);
1564:Src/app.c     **** //     disp.info.pd_ms = is_tracking ? 0 : (int)pd_filtered_ms;
1565:Src/app.c     **** //     disp.info.hl_ms = is_tracking ? (int)ld_filtered_ms : 0;
1566:Src/app.c     **** //     disp.info.nn_period_ms = nn_period_filtered_ms;
1567:Src/app.c     **** //     disp.info.pd_hand_nb = is_tracking;
1568:Src/app.c     **** //     disp.info.pd_max_prob = pd_info.pd_out.pOutData[0].prob;
1569:Src/app.c     **** //     disp.info.hands[0].is_valid = is_tracking;
1570:Src/app.c     **** //     copy_pd_box(&disp.info.hands[0].pd_hands, &pd_info.pd_out.pOutData[0]);
1571:Src/app.c     **** //     disp.info.hands[0].roi = rois[0];
1572:Src/app.c     **** //     for (j = 0; j < LD_LANDMARK_NB; j++)
1573:Src/app.c     **** //       disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
1574:Src/app.c     **** //     ret = xSemaphoreGive(disp.lock);
1575:Src/app.c     **** //     assert(ret == pdTRUE);
1576:Src/app.c     **** 
1577:Src/app.c     **** //     /* It's possible xqueue is empty if display is slow. So don't check error code that may by p
1578:Src/app.c     **** //     xSemaphoreGive(disp.update);
1579:Src/app.c     **** //   }
1580:Src/app.c     **** // }
1581:Src/app.c     **** 
1582:Src/app.c     **** static void dp_update_drawing_area()
1583:Src/app.c     **** {
1584:Src/app.c     ****   int ret;
1585:Src/app.c     **** 
1586:Src/app.c     ****   __disable_irq();
1587:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
1588:Src/app.c     ****   assert(ret == HAL_OK);
1589:Src/app.c     ****   __enable_irq();
1590:Src/app.c     **** }
1591:Src/app.c     **** 
1592:Src/app.c     **** static void dp_commit_drawing_area()
1593:Src/app.c     **** {
1594:Src/app.c     ****   int ret;
1595:Src/app.c     **** 
1596:Src/app.c     ****   __disable_irq();
1597:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
1598:Src/app.c     ****   assert(ret == HAL_OK);
1599:Src/app.c     ****   __enable_irq();
1600:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
1601:Src/app.c     **** }
1602:Src/app.c     **** 
1603:Src/app.c     **** static void on_ld_toggle_button_click(void *args)
1604:Src/app.c     **** {
ARM GAS  /tmp/cczRRmNE.s 			page 44


1605:Src/app.c     ****   display_t *disp = (display_t *) args;
1606:Src/app.c     ****   int ret;
1607:Src/app.c     **** 
1608:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1609:Src/app.c     ****   assert(ret == pdTRUE);
1610:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
1611:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1612:Src/app.c     ****   assert(ret == pdTRUE);
1613:Src/app.c     **** }
1614:Src/app.c     **** 
1615:Src/app.c     **** static void on_pd_toggle_button_click(void *args)
1616:Src/app.c     **** {
1617:Src/app.c     ****   display_t *disp = (display_t *) args;
1618:Src/app.c     ****   int ret;
1619:Src/app.c     **** 
1620:Src/app.c     ****   ret = xSemaphoreTake(disp->lock, portMAX_DELAY);
1621:Src/app.c     ****   assert(ret == pdTRUE);
1622:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
1623:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
1624:Src/app.c     ****   assert(ret == pdTRUE);
1625:Src/app.c     **** }
1626:Src/app.c     **** 
1627:Src/app.c     **** static void dp_thread_fct(void *arg)
1628:Src/app.c     **** {
1629:Src/app.c     ****   button_t ld_toggle_button;
1630:Src/app.c     ****   button_t hd_toggle_button;
1631:Src/app.c     ****   uint32_t disp_ms = 0;
1632:Src/app.c     ****   display_info_t info;
1633:Src/app.c     ****   uint32_t ts;
1634:Src/app.c     ****   int ret;
1635:Src/app.c     **** 
1636:Src/app.c     **** #ifdef STM32N6570_DK_REV
1637:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER1, on_ld_toggle_button_click, &disp);
1638:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
1639:Src/app.c     **** #else
1640:Src/app.c     ****   button_init(&ld_toggle_button, BUTTON_USER, on_ld_toggle_button_click, &disp);
1641:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_USER, on_pd_toggle_button_click, &disp);
1642:Src/app.c     **** #endif
1643:Src/app.c     ****   while (1)
1644:Src/app.c     ****   {
1645:Src/app.c     ****     ret = xSemaphoreTake(disp.update, portMAX_DELAY);
1646:Src/app.c     ****     assert(ret == pdTRUE);
1647:Src/app.c     **** 
1648:Src/app.c     ****     button_process(&ld_toggle_button);
1649:Src/app.c     ****     button_process(&hd_toggle_button);
1650:Src/app.c     **** 
1651:Src/app.c     ****     ret = xSemaphoreTake(disp.lock, portMAX_DELAY);
1652:Src/app.c     ****     assert(ret == pdTRUE);
1653:Src/app.c     ****     info = disp.info;
1654:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
1655:Src/app.c     ****     assert(ret == pdTRUE);
1656:Src/app.c     ****     info.disp_ms = disp_ms;
1657:Src/app.c     **** 
1658:Src/app.c     ****     ts = HAL_GetTick();
1659:Src/app.c     ****     dp_update_drawing_area();
1660:Src/app.c     ****     Display_NetworkOutput(&info);
1661:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
ARM GAS  /tmp/cczRRmNE.s 			page 45


1662:Src/app.c     ****     dp_commit_drawing_area();
1663:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
1664:Src/app.c     ****   }
1665:Src/app.c     **** }
1666:Src/app.c     **** 
1667:Src/app.c     **** static void isp_thread_fct(void *arg)
1668:Src/app.c     **** {
 319              		.loc 1 1668 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		.loc 1 1668 1 is_stmt 0 view .LVU87
 324 0000 10B5     		push	{r4, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 4, -8
 327              		.cfi_offset 14, -4
1669:Src/app.c     ****   int ret;
1670:Src/app.c     **** 
1671:Src/app.c     ****   while (1) {
1672:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 328              		.loc 1 1672 11 view .LVU88
 329 0002 094C     		ldr	r4, .L22
 330              	.LVL20:
 331              	.L21:
1669:Src/app.c     ****   int ret;
 332              		.loc 1 1669 3 is_stmt 1 view .LVU89
1671:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 333              		.loc 1 1671 3 view .LVU90
 334              		.loc 1 1672 5 view .LVU91
 335              		.loc 1 1672 11 is_stmt 0 view .LVU92
 336 0004 4FF0FF31 		mov	r1, #-1
 337 0008 2068     		ldr	r0, [r4]
 338 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 339              	.LVL21:
1673:Src/app.c     ****     assert(ret == pdTRUE);
 340              		.loc 1 1673 5 is_stmt 1 view .LVU93
 341 000e 0128     		cmp	r0, #1
 342 0010 06D0     		beq	.L20
 343              		.loc 1 1673 5 is_stmt 0 discriminator 1 view .LVU94
 344 0012 40F28961 		movw	r1, #1673
 345 0016 054B     		ldr	r3, .L22+4
 346 0018 054A     		ldr	r2, .L22+8
 347 001a 0648     		ldr	r0, .L22+12
 348              	.LVL22:
 349              		.loc 1 1673 5 discriminator 1 view .LVU95
 350 001c FFF7FEFF 		bl	__assert_func
 351              	.LVL23:
 352              	.L20:
1674:Src/app.c     **** 
1675:Src/app.c     ****     CAM_IspUpdate();
 353              		.loc 1 1675 5 is_stmt 1 view .LVU96
 354 0020 FFF7FEFF 		bl	CAM_IspUpdate
 355              	.LVL24:
1671:Src/app.c     ****     ret = xSemaphoreTake(isp_sem, portMAX_DELAY);
 356              		.loc 1 1671 9 view .LVU97
1672:Src/app.c     ****     assert(ret == pdTRUE);
 357              		.loc 1 1672 9 is_stmt 0 view .LVU98
ARM GAS  /tmp/cczRRmNE.s 			page 46


 358 0024 EEE7     		b	.L21
 359              	.L23:
 360 0026 00BF     		.align	2
 361              	.L22:
 362 0028 00000000 		.word	isp_sem
 363 002c 00000000 		.word	.LC1
 364 0030 00000000 		.word	__func__.19
 365 0034 0E000000 		.word	.LC2
 366              		.cfi_endproc
 367              	.LFE7409:
 369              		.section	.text.on_pd_toggle_button_click,"ax",%progbits
 370              		.align	1
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 375              	on_pd_toggle_button_click:
 376              	.LVL25:
 377              	.LFB7407:
1616:Src/app.c     ****   display_t *disp = (display_t *) args;
 378              		.loc 1 1616 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
1617:Src/app.c     ****   int ret;
 382              		.loc 1 1617 3 view .LVU100
1618:Src/app.c     **** 
 383              		.loc 1 1618 3 view .LVU101
1620:Src/app.c     ****   assert(ret == pdTRUE);
 384              		.loc 1 1620 3 view .LVU102
1616:Src/app.c     ****   display_t *disp = (display_t *) args;
 385              		.loc 1 1616 1 is_stmt 0 view .LVU103
 386 0000 10B5     		push	{r4, lr}
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 4, -8
 389              		.cfi_offset 14, -4
1620:Src/app.c     ****   assert(ret == pdTRUE);
 390              		.loc 1 1620 9 view .LVU104
 391 0002 4FF0FF31 		mov	r1, #-1
1616:Src/app.c     ****   display_t *disp = (display_t *) args;
 392              		.loc 1 1616 1 view .LVU105
 393 0006 0446     		mov	r4, r0
1620:Src/app.c     ****   assert(ret == pdTRUE);
 394              		.loc 1 1620 9 view .LVU106
 395 0008 406D     		ldr	r0, [r0, #84]
 396              	.LVL26:
1620:Src/app.c     ****   assert(ret == pdTRUE);
 397              		.loc 1 1620 9 view .LVU107
 398 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 399              	.LVL27:
1621:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 400              		.loc 1 1621 3 is_stmt 1 view .LVU108
 401 000e 0128     		cmp	r0, #1
 402 0010 06D0     		beq	.L25
1621:Src/app.c     ****   disp->info.is_pd_displayed = !disp->info.is_pd_displayed;
 403              		.loc 1 1621 3 is_stmt 0 discriminator 1 view .LVU109
 404 0012 40F25561 		movw	r1, #1621
 405 0016 0D4B     		ldr	r3, .L28
ARM GAS  /tmp/cczRRmNE.s 			page 47


 406 0018 0D4A     		ldr	r2, .L28+4
 407              	.L27:
1624:Src/app.c     **** }
 408              		.loc 1 1624 3 discriminator 1 view .LVU110
 409 001a 0E48     		ldr	r0, .L28+8
 410              	.LVL28:
1624:Src/app.c     **** }
 411              		.loc 1 1624 3 discriminator 1 view .LVU111
 412 001c FFF7FEFF 		bl	__assert_func
 413              	.LVL29:
 414              	.L25:
1622:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 415              		.loc 1 1622 3 is_stmt 1 view .LVU112
1622:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 416              		.loc 1 1622 32 is_stmt 0 view .LVU113
 417 0020 D4F8C030 		ldr	r3, [r4, #192]
1623:Src/app.c     ****   assert(ret == pdTRUE);
 418              		.loc 1 1623 9 view .LVU114
 419 0024 606D     		ldr	r0, [r4, #84]
 420              	.LVL30:
1622:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 421              		.loc 1 1622 32 view .LVU115
 422 0026 B3FA83F3 		clz	r3, r3
 423 002a 5B09     		lsrs	r3, r3, #5
1622:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 424              		.loc 1 1622 30 view .LVU116
 425 002c C4F8C030 		str	r3, [r4, #192]
1623:Src/app.c     ****   assert(ret == pdTRUE);
 426              		.loc 1 1623 3 is_stmt 1 view .LVU117
1623:Src/app.c     ****   assert(ret == pdTRUE);
 427              		.loc 1 1623 9 is_stmt 0 view .LVU118
 428 0030 0023     		movs	r3, #0
 429 0032 1A46     		mov	r2, r3
 430 0034 1946     		mov	r1, r3
 431 0036 FFF7FEFF 		bl	xQueueGenericSend
 432              	.LVL31:
1624:Src/app.c     **** }
 433              		.loc 1 1624 3 is_stmt 1 view .LVU119
 434 003a 0128     		cmp	r0, #1
 435 003c 04D0     		beq	.L24
1624:Src/app.c     **** }
 436              		.loc 1 1624 3 is_stmt 0 discriminator 1 view .LVU120
 437 003e 4FF4CB61 		mov	r1, #1624
 438 0042 024B     		ldr	r3, .L28
 439 0044 024A     		ldr	r2, .L28+4
 440 0046 E8E7     		b	.L27
 441              	.L24:
1625:Src/app.c     **** 
 442              		.loc 1 1625 1 view .LVU121
 443 0048 10BD     		pop	{r4, pc}
 444              	.LVL32:
 445              	.L29:
1625:Src/app.c     **** 
 446              		.loc 1 1625 1 view .LVU122
 447 004a 00BF     		.align	2
 448              	.L28:
 449 004c 00000000 		.word	.LC1
ARM GAS  /tmp/cczRRmNE.s 			page 48


 450 0050 00000000 		.word	__func__.17
 451 0054 0E000000 		.word	.LC2
 452              		.cfi_endproc
 453              	.LFE7407:
 455              		.section	.text.on_ld_toggle_button_click,"ax",%progbits
 456              		.align	1
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 461              	on_ld_toggle_button_click:
 462              	.LVL33:
 463              	.LFB7406:
1604:Src/app.c     ****   display_t *disp = (display_t *) args;
 464              		.loc 1 1604 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
1605:Src/app.c     ****   int ret;
 468              		.loc 1 1605 3 view .LVU124
1606:Src/app.c     **** 
 469              		.loc 1 1606 3 view .LVU125
1608:Src/app.c     ****   assert(ret == pdTRUE);
 470              		.loc 1 1608 3 view .LVU126
1604:Src/app.c     ****   display_t *disp = (display_t *) args;
 471              		.loc 1 1604 1 is_stmt 0 view .LVU127
 472 0000 10B5     		push	{r4, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 4, -8
 475              		.cfi_offset 14, -4
1608:Src/app.c     ****   assert(ret == pdTRUE);
 476              		.loc 1 1608 9 view .LVU128
 477 0002 4FF0FF31 		mov	r1, #-1
1604:Src/app.c     ****   display_t *disp = (display_t *) args;
 478              		.loc 1 1604 1 view .LVU129
 479 0006 0446     		mov	r4, r0
1608:Src/app.c     ****   assert(ret == pdTRUE);
 480              		.loc 1 1608 9 view .LVU130
 481 0008 406D     		ldr	r0, [r0, #84]
 482              	.LVL34:
1608:Src/app.c     ****   assert(ret == pdTRUE);
 483              		.loc 1 1608 9 view .LVU131
 484 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 485              	.LVL35:
1609:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 486              		.loc 1 1609 3 is_stmt 1 view .LVU132
 487 000e 0128     		cmp	r0, #1
 488 0010 06D0     		beq	.L31
1609:Src/app.c     ****   disp->info.is_ld_displayed = !disp->info.is_ld_displayed;
 489              		.loc 1 1609 3 is_stmt 0 discriminator 1 view .LVU133
 490 0012 40F24961 		movw	r1, #1609
 491 0016 0D4B     		ldr	r3, .L34
 492 0018 0D4A     		ldr	r2, .L34+4
 493              	.L33:
1612:Src/app.c     **** }
 494              		.loc 1 1612 3 discriminator 1 view .LVU134
 495 001a 0E48     		ldr	r0, .L34+8
 496              	.LVL36:
ARM GAS  /tmp/cczRRmNE.s 			page 49


1612:Src/app.c     **** }
 497              		.loc 1 1612 3 discriminator 1 view .LVU135
 498 001c FFF7FEFF 		bl	__assert_func
 499              	.LVL37:
 500              	.L31:
1610:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 501              		.loc 1 1610 3 is_stmt 1 view .LVU136
1610:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 502              		.loc 1 1610 32 is_stmt 0 view .LVU137
 503 0020 D4F8BC30 		ldr	r3, [r4, #188]
1611:Src/app.c     ****   assert(ret == pdTRUE);
 504              		.loc 1 1611 9 view .LVU138
 505 0024 606D     		ldr	r0, [r4, #84]
 506              	.LVL38:
1610:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 507              		.loc 1 1610 32 view .LVU139
 508 0026 B3FA83F3 		clz	r3, r3
 509 002a 5B09     		lsrs	r3, r3, #5
1610:Src/app.c     ****   ret = xSemaphoreGive(disp->lock);
 510              		.loc 1 1610 30 view .LVU140
 511 002c C4F8BC30 		str	r3, [r4, #188]
1611:Src/app.c     ****   assert(ret == pdTRUE);
 512              		.loc 1 1611 3 is_stmt 1 view .LVU141
1611:Src/app.c     ****   assert(ret == pdTRUE);
 513              		.loc 1 1611 9 is_stmt 0 view .LVU142
 514 0030 0023     		movs	r3, #0
 515 0032 1A46     		mov	r2, r3
 516 0034 1946     		mov	r1, r3
 517 0036 FFF7FEFF 		bl	xQueueGenericSend
 518              	.LVL39:
1612:Src/app.c     **** }
 519              		.loc 1 1612 3 is_stmt 1 view .LVU143
 520 003a 0128     		cmp	r0, #1
 521 003c 04D0     		beq	.L30
1612:Src/app.c     **** }
 522              		.loc 1 1612 3 is_stmt 0 discriminator 1 view .LVU144
 523 003e 40F24C61 		movw	r1, #1612
 524 0042 024B     		ldr	r3, .L34
 525 0044 024A     		ldr	r2, .L34+4
 526 0046 E8E7     		b	.L33
 527              	.L30:
1613:Src/app.c     **** 
 528              		.loc 1 1613 1 view .LVU145
 529 0048 10BD     		pop	{r4, pc}
 530              	.LVL40:
 531              	.L35:
1613:Src/app.c     **** 
 532              		.loc 1 1613 1 view .LVU146
 533 004a 00BF     		.align	2
 534              	.L34:
 535 004c 00000000 		.word	.LC1
 536 0050 00000000 		.word	__func__.16
 537 0054 0E000000 		.word	.LC2
 538              		.cfi_endproc
 539              	.LFE7406:
 541              		.section	.text.button_process,"ax",%progbits
 542              		.align	1
ARM GAS  /tmp/cczRRmNE.s 			page 50


 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 547              	button_process:
 548              	.LVL41:
 549              	.LFB7368:
 415:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 550              		.loc 1 415 1 is_stmt 1 view -0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 416:Src/app.c     **** 
 554              		.loc 1 416 3 view .LVU148
 415:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 555              		.loc 1 415 1 is_stmt 0 view .LVU149
 556 0000 38B5     		push	{r3, r4, r5, lr}
 557              		.cfi_def_cfa_offset 16
 558              		.cfi_offset 3, -16
 559              		.cfi_offset 4, -12
 560              		.cfi_offset 5, -8
 561              		.cfi_offset 14, -4
 415:Src/app.c     ****   int state = BSP_PB_GetState(b->button_id);
 562              		.loc 1 415 1 view .LVU150
 563 0002 0446     		mov	r4, r0
 416:Src/app.c     **** 
 564              		.loc 1 416 15 view .LVU151
 565 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 566              	.LVL42:
 416:Src/app.c     **** 
 567              		.loc 1 416 15 view .LVU152
 568 0006 FFF7FEFF 		bl	BSP_PB_GetState
 569              	.LVL43:
 418:Src/app.c     ****     b->on_click_handler(b->cb_args);
 570              		.loc 1 418 6 view .LVU153
 571 000a 6368     		ldr	r3, [r4, #4]
 416:Src/app.c     **** 
 572              		.loc 1 416 15 view .LVU154
 573 000c 0546     		mov	r5, r0
 574              	.LVL44:
 418:Src/app.c     ****     b->on_click_handler(b->cb_args);
 575              		.loc 1 418 3 is_stmt 1 view .LVU155
 418:Src/app.c     ****     b->on_click_handler(b->cb_args);
 576              		.loc 1 418 6 is_stmt 0 view .LVU156
 577 000e 8342     		cmp	r3, r0
 578 0010 04D0     		beq	.L37
 418:Src/app.c     ****     b->on_click_handler(b->cb_args);
 579              		.loc 1 418 30 discriminator 1 view .LVU157
 580 0012 18B1     		cbz	r0, .L37
 418:Src/app.c     ****     b->on_click_handler(b->cb_args);
 581              		.loc 1 418 43 discriminator 2 view .LVU158
 582 0014 A368     		ldr	r3, [r4, #8]
 418:Src/app.c     ****     b->on_click_handler(b->cb_args);
 583              		.loc 1 418 39 discriminator 2 view .LVU159
 584 0016 0BB1     		cbz	r3, .L37
 419:Src/app.c     **** 
 585              		.loc 1 419 5 is_stmt 1 view .LVU160
 586 0018 E068     		ldr	r0, [r4, #12]
ARM GAS  /tmp/cczRRmNE.s 			page 51


 587              	.LVL45:
 419:Src/app.c     **** 
 588              		.loc 1 419 5 is_stmt 0 view .LVU161
 589 001a 9847     		blx	r3
 590              	.LVL46:
 591              	.L37:
 421:Src/app.c     **** }
 592              		.loc 1 421 3 is_stmt 1 view .LVU162
 421:Src/app.c     **** }
 593              		.loc 1 421 17 is_stmt 0 view .LVU163
 594 001c 6560     		str	r5, [r4, #4]
 422:Src/app.c     **** 
 595              		.loc 1 422 1 view .LVU164
 596 001e 38BD     		pop	{r3, r4, r5, pc}
 422:Src/app.c     **** 
 597              		.loc 1 422 1 view .LVU165
 598              		.cfi_endproc
 599              	.LFE7368:
 601              		.section	.rodata.button_init.part.0.str1.1,"aMS",%progbits,1
 602              	.LC3:
 603 0000 72657420 		.ascii	"ret == BSP_ERROR_NONE\000"
 603      3D3D2042 
 603      53505F45 
 603      52524F52 
 603      5F4E4F4E 
 604              		.section	.text.button_init.part.0,"ax",%progbits
 605              		.align	1
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 610              	button_init.part.0:
 611              	.LFB7414:
 401:Src/app.c     **** {
 612              		.loc 1 401 13 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ Volatile: function does not return.
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              	.LVL47:
 401:Src/app.c     **** {
 618              		.loc 1 401 13 is_stmt 0 view .LVU167
 619 0000 08B5     		push	{r3, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 3, -8
 622              		.cfi_offset 14, -4
 406:Src/app.c     **** 
 623              		.loc 1 406 3 discriminator 1 view .LVU168
 624 0002 4FF4CB71 		mov	r1, #406
 625 0006 024B     		ldr	r3, .L45
 626 0008 024A     		ldr	r2, .L45+4
 627 000a 0348     		ldr	r0, .L45+8
 628 000c FFF7FEFF 		bl	__assert_func
 629              	.LVL48:
 630              	.L46:
 631              		.align	2
 632              	.L45:
 633 0010 00000000 		.word	.LC3
ARM GAS  /tmp/cczRRmNE.s 			page 52


 634 0014 00000000 		.word	__func__.15
 635 0018 0E000000 		.word	.LC2
 636              		.cfi_endproc
 637              	.LFE7414:
 639              		.section	.text.display_ld_hand,"ax",%progbits
 640              		.align	1
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 645              	display_ld_hand:
 646              	.LVL49:
 647              	.LFB7389:
 742:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 648              		.loc 1 742 1 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 5616
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 743:Src/app.c     ****   roi_t *roi = &hand->roi;
 652              		.loc 1 743 3 view .LVU170
 744:Src/app.c     ****   int x[LD_LANDMARK_NB];
 653              		.loc 1 744 3 view .LVU171
 745:Src/app.c     ****   int y[LD_LANDMARK_NB];
 654              		.loc 1 745 3 view .LVU172
 746:Src/app.c     ****   int is_clamped[LD_LANDMARK_NB];
 655              		.loc 1 746 3 view .LVU173
 747:Src/app.c     ****   ld_point_t decoded;
 656              		.loc 1 747 3 view .LVU174
 748:Src/app.c     ****   int i;
 657              		.loc 1 748 3 view .LVU175
 749:Src/app.c     **** 
 658              		.loc 1 749 3 view .LVU176
 751:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 659              		.loc 1 751 3 view .LVU177
 751:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 660              		.loc 1 751 17 discriminator 1 view .LVU178
 742:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 661              		.loc 1 742 1 is_stmt 0 view .LVU179
 662 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 663              		.cfi_def_cfa_offset 36
 664              		.cfi_offset 4, -36
 665              		.cfi_offset 5, -32
 666              		.cfi_offset 6, -28
 667              		.cfi_offset 7, -24
 668              		.cfi_offset 8, -20
 669              		.cfi_offset 9, -16
 670              		.cfi_offset 10, -12
 671              		.cfi_offset 11, -8
 672              		.cfi_offset 14, -4
 673 0004 2DED0A8B 		vpush.64	{d8, d9, d10, d11, d12}
 674              		.cfi_def_cfa_offset 76
 675              		.cfi_offset 80, -76
 676              		.cfi_offset 81, -72
 677              		.cfi_offset 82, -68
 678              		.cfi_offset 83, -64
 679              		.cfi_offset 84, -60
 680              		.cfi_offset 85, -56
 681              		.cfi_offset 86, -52
ARM GAS  /tmp/cczRRmNE.s 			page 53


 682              		.cfi_offset 87, -48
 683              		.cfi_offset 88, -44
 684              		.cfi_offset 89, -40
 685              	.LBB175:
 686              	.LBB176:
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 687              		.loc 1 737 46 view .LVU180
 688 0008 90ED0BCA 		vldr.32	s24, [r0, #44]
 689 000c B7EECCCA 		vcvt.f64.f32	d12, s24
 690              	.LBE176:
 691              	.LBE175:
 742:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 692              		.loc 1 742 1 view .LVU181
 693 0010 ADF5AF5D 		sub	sp, sp, #5600
 694              		.cfi_def_cfa_offset 5676
 695 0014 85B0     		sub	sp, sp, #20
 696              		.cfi_def_cfa_offset 5696
 697              	.LBB181:
 698              	.LBB177:
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 699              		.loc 1 737 46 view .LVU182
 700 0016 B0EE4C0B 		vmov.f64	d0, d12
 701              	.LBE177:
 702              	.LBE181:
 742:Src/app.c     ****   const int disk_radius = DISK_RADIUS;
 703              		.loc 1 742 1 view .LVU183
 704 001a 0446     		mov	r4, r0
 705              	.LBB182:
 706              	.LBB178:
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 707              		.loc 1 737 19 view .LVU184
 708 001c 90ED07AA 		vldr.32	s20, [r0, #28]
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 709              		.loc 1 737 40 view .LVU185
 710 0020 90ED09BA 		vldr.32	s22, [r0, #36]
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 711              		.loc 1 737 46 view .LVU186
 712 0024 FFF7FEFF 		bl	cos
 713              	.LVL50:
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 714              		.loc 1 737 46 view .LVU187
 715 0028 B0EE408B 		vmov.f64	d8, d0
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 716              		.loc 1 737 82 discriminator 1 view .LVU188
 717 002c B0EE4C0B 		vmov.f64	d0, d12
 718 0030 FFF7FEFF 		bl	sin
 719              	.LVL51:
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 720              		.loc 1 737 76 discriminator 1 view .LVU189
 721 0034 94ED0A9A 		vldr.32	s18, [r4, #40]
 738:Src/app.c     **** }
 722              		.loc 1 738 19 view .LVU190
 723 0038 94ED086A 		vldr.32	s12, [r4, #32]
 724 003c EC46     		mov	ip, sp
 725 003e 0DF56A65 		add	r5, sp, #3744
 726 0042 0DF5EA60 		add	r0, sp, #1872
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
ARM GAS  /tmp/cczRRmNE.s 			page 54


 727              		.loc 1 737 19 view .LVU191
 728 0046 B7EECAAA 		vcvt.f64.f32	d10, s20
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 729              		.loc 1 737 40 view .LVU192
 730 004a B7EECBBA 		vcvt.f64.f32	d11, s22
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 731              		.loc 1 737 76 discriminator 1 view .LVU193
 732 004e B7EEC99A 		vcvt.f64.f32	d9, s18
 738:Src/app.c     **** }
 733              		.loc 1 738 19 view .LVU194
 734 0052 B7EEC66A 		vcvt.f64.f32	d6, s12
 735 0056 AE46     		mov	lr, r5
 736 0058 0646     		mov	r6, r0
 737 005a 6746     		mov	r7, ip
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 738              		.loc 1 737 33 view .LVU195
 739 005c B6EE005B 		vmov.f64	d5, #5.0e-1
 740              	.LBE178:
 741              	.LBE182:
 742              	.LBB183:
 743              	.LBB184:
 624:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 744              		.loc 1 624 6 view .LVU196
 745 0060 40F21D39 		movw	r9, #797
 626:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 746              		.loc 1 626 6 view .LVU197
 747 0064 40F2DD18 		movw	r8, #477
 629:Src/app.c     **** }
 748              		.loc 1 629 21 discriminator 3 view .LVU198
 749 0068 4FF4EA71 		mov	r1, #468
 750              	.LVL52:
 751              	.L49:
 629:Src/app.c     **** }
 752              		.loc 1 629 21 discriminator 3 view .LVU199
 753              	.LBE184:
 754              	.LBE183:
 752:Src/app.c     ****     x[i] = (int)decoded.x;
 755              		.loc 1 752 5 is_stmt 1 view .LVU200
 756              	.LBB189:
 757              	.LBI175:
 731:Src/app.c     **** {
 758              		.loc 1 731 13 view .LVU201
 759              	.LBB179:
 733:Src/app.c     ****   float w = roi->w;
 760              		.loc 1 733 3 view .LVU202
 734:Src/app.c     ****   float h = roi->h;
 761              		.loc 1 734 3 view .LVU203
 735:Src/app.c     **** 
 762              		.loc 1 735 3 view .LVU204
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 763              		.loc 1 737 3 view .LVU205
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 764              		.loc 1 737 29 is_stmt 0 view .LVU206
 765 006c 94ED0C3A 		vldr.32	s6, [r4, #48]
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 766              		.loc 1 737 65 discriminator 1 view .LVU207
 767 0070 94ED0D4A 		vldr.32	s8, [r4, #52]
ARM GAS  /tmp/cczRRmNE.s 			page 55


 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 768              		.loc 1 737 29 view .LVU208
 769 0074 B7EEC33A 		vcvt.f64.f32	d3, s6
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 770              		.loc 1 737 65 discriminator 1 view .LVU209
 771 0078 B7EEC44A 		vcvt.f64.f32	d4, s8
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 772              		.loc 1 737 33 view .LVU210
 773 007c 33EE453B 		vsub.f64	d3, d3, d5
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 774              		.loc 1 737 24 discriminator 1 view .LVU211
 775 0080 B0EE4A7B 		vmov.f64	d7, d10
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 776              		.loc 1 737 40 view .LVU212
 777 0084 23EE0B3B 		vmul.f64	d3, d3, d11
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 778              		.loc 1 737 69 discriminator 1 view .LVU213
 779 0088 34EE454B 		vsub.f64	d4, d4, d5
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 780              		.loc 1 737 24 discriminator 1 view .LVU214
 781 008c A3EE087B 		vfma.f64	d7, d3, d8
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 782              		.loc 1 737 76 discriminator 1 view .LVU215
 783 0090 24EE094B 		vmul.f64	d4, d4, d9
 737:Src/app.c     ****   decoded->y = roi->cy + (lm->x - 0.5) * w * sin(rotation) + (lm->y - 0.5) * h * cos(rotation);
 784              		.loc 1 737 60 discriminator 2 view .LVU216
 785 0094 A4EE407B 		vfms.f64	d7, d4, d0
 786 0098 F7EEC72B 		vcvt.f32.f64	s5, d7
 738:Src/app.c     **** }
 787              		.loc 1 738 3 is_stmt 1 view .LVU217
 738:Src/app.c     **** }
 788              		.loc 1 738 24 is_stmt 0 discriminator 1 view .LVU218
 789 009c B0EE467B 		vmov.f64	d7, d6
 790 00a0 A3EE007B 		vfma.f64	d7, d3, d0
 738:Src/app.c     **** }
 791              		.loc 1 738 60 discriminator 2 view .LVU219
 792 00a4 A8EE047B 		vfma.f64	d7, d8, d4
 793              	.LVL53:
 738:Src/app.c     **** }
 794              		.loc 1 738 60 discriminator 2 view .LVU220
 795              	.LBE179:
 796              	.LBE189:
 753:Src/app.c     ****     y[i] = (int)decoded.y;
 797              		.loc 1 753 5 is_stmt 1 view .LVU221
 753:Src/app.c     ****     y[i] = (int)decoded.y;
 798              		.loc 1 753 12 is_stmt 0 view .LVU222
 799 00a8 FDEEE24A 		vcvt.s32.f32	s9, s5
 800 00ac 14EE90AA 		vmov	r10, s9	@ int
 754:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 801              		.loc 1 754 5 is_stmt 1 view .LVU223
 802              	.LBB190:
 803              	.LBB180:
 738:Src/app.c     **** }
 804              		.loc 1 738 60 is_stmt 0 discriminator 2 view .LVU224
 805 00b0 B7EEC77B 		vcvt.f32.f64	s14, d7
 806              	.LBE180:
 807              	.LBE190:
ARM GAS  /tmp/cczRRmNE.s 			page 56


 808              	.LBB191:
 809              	.LBB185:
 620:Src/app.c     ****     *x = margin;
 810              		.loc 1 620 6 view .LVU225
 811 00b4 5246     		mov	r2, r10
 812              	.LBE185:
 813              	.LBE191:
 754:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 814              		.loc 1 754 12 view .LVU226
 815 00b6 FDEEC77A 		vcvt.s32.f32	s15, s14
 816              	.LBB192:
 817              	.LBB186:
 620:Src/app.c     ****     *x = margin;
 818              		.loc 1 620 6 view .LVU227
 819 00ba 022A     		cmp	r2, #2
 820 00bc B8BF     		it	lt
 821 00be 0222     		movlt	r2, #2
 822              	.LBE186:
 823              	.LBE192:
 754:Src/app.c     ****     is_clamped[i] = clamp_point_with_margin(&x[i], &y[i], disk_radius);
 824              		.loc 1 754 12 view .LVU228
 825 00c0 17EE903A 		vmov	r3, s15	@ int
 755:Src/app.c     ****   }
 826              		.loc 1 755 5 is_stmt 1 view .LVU229
 827              	.LVL54:
 828              	.LBB193:
 829              	.LBI183:
 615:Src/app.c     **** {
 830              		.loc 1 615 12 view .LVU230
 831              	.LBB187:
 617:Src/app.c     ****   int yi = *y;
 832              		.loc 1 617 3 view .LVU231
 618:Src/app.c     **** 
 833              		.loc 1 618 3 view .LVU232
 620:Src/app.c     ****     *x = margin;
 834              		.loc 1 620 3 view .LVU233
 622:Src/app.c     ****     *y = margin;
 835              		.loc 1 622 3 view .LVU234
 624:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 836              		.loc 1 624 3 view .LVU235
 624:Src/app.c     ****     *x = lcd_bg_area.XSize - margin - 1;
 837              		.loc 1 624 6 is_stmt 0 view .LVU236
 838 00c4 4A45     		cmp	r2, r9
 839 00c6 A8BF     		it	ge
 840 00c8 4A46     		movge	r2, r9
 622:Src/app.c     ****     *y = margin;
 841              		.loc 1 622 6 view .LVU237
 842 00ca 022B     		cmp	r3, #2
 843 00cc 9B46     		mov	fp, r3
 844 00ce B8BF     		it	lt
 845 00d0 4FF0020B 		movlt	fp, #2
 626:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 846              		.loc 1 626 6 view .LVU238
 847 00d4 C345     		cmp	fp, r8
 848 00d6 A8BF     		it	ge
 849 00d8 C346     		movge	fp, r8
 629:Src/app.c     **** }
ARM GAS  /tmp/cczRRmNE.s 			page 57


 850              		.loc 1 629 21 discriminator 2 view .LVU239
 851 00da B3EB0B03 		subs	r3, r3, fp
 852              	.LVL55:
 629:Src/app.c     **** }
 853              		.loc 1 629 21 discriminator 2 view .LVU240
 854 00de 18BF     		it	ne
 855 00e0 0123     		movne	r3, #1
 856 00e2 9245     		cmp	r10, r2
 857 00e4 18BF     		it	ne
 858 00e6 0123     		movne	r3, #1
 859              	.LBE187:
 860              	.LBE193:
 751:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 861              		.loc 1 751 17 discriminator 1 view .LVU241
 862 00e8 0139     		subs	r1, r1, #1
 863 00ea 4CF8042B 		str	r2, [ip], #4
 864              	.LBB194:
 865              	.LBB188:
 626:Src/app.c     ****     *y = lcd_bg_area.YSize - margin - 1;
 866              		.loc 1 626 3 is_stmt 1 view .LVU242
 867 00ee 40F804BB 		str	fp, [r0], #4
 629:Src/app.c     **** }
 868              		.loc 1 629 3 view .LVU243
 869              	.LVL56:
 629:Src/app.c     **** }
 870              		.loc 1 629 3 is_stmt 0 view .LVU244
 871              	.LBE188:
 872              	.LBE194:
 755:Src/app.c     ****   }
 873              		.loc 1 755 19 discriminator 1 view .LVU245
 874 00f2 4EF8043B 		str	r3, [lr], #4
 751:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 875              		.loc 1 751 36 is_stmt 1 discriminator 3 view .LVU246
 751:Src/app.c     ****     decode_ld_landmark(roi, &hand->ld_landmarks[i], &decoded);
 876              		.loc 1 751 17 discriminator 1 view .LVU247
 877 00f6 04F10804 		add	r4, r4, #8
 878 00fa B7D1     		bne	.L49
 758:Src/app.c     ****     if (is_clamped[i])
 879              		.loc 1 758 10 is_stmt 0 view .LVU248
 880 00fc 0024     		movs	r4, #0
 881              	.L51:
 882              	.LVL57:
 759:Src/app.c     ****       continue;
 883              		.loc 1 759 5 is_stmt 1 view .LVU249
 759:Src/app.c     ****       continue;
 884              		.loc 1 759 19 is_stmt 0 view .LVU250
 885 00fe 55F8043B 		ldr	r3, [r5], #4
 759:Src/app.c     ****       continue;
 886              		.loc 1 759 8 view .LVU251
 887 0102 43B9     		cbnz	r3, .L50
 761:Src/app.c     ****   }
 888              		.loc 1 761 5 is_stmt 1 view .LVU252
 889 0104 6FF0FF03 		mvn	r3, #255
 890 0108 0222     		movs	r2, #2
 891 010a 56F82410 		ldr	r1, [r6, r4, lsl #2]
 892 010e 57F82400 		ldr	r0, [r7, r4, lsl #2]
 893 0112 FFF7FEFF 		bl	UTIL_LCD_FillCircle
ARM GAS  /tmp/cczRRmNE.s 			page 58


 894              	.LVL58:
 895              	.L50:
 758:Src/app.c     ****     if (is_clamped[i])
 896              		.loc 1 758 36 discriminator 2 view .LVU253
 897 0116 0134     		adds	r4, r4, #1
 898              	.LVL59:
 758:Src/app.c     ****     if (is_clamped[i])
 899              		.loc 1 758 17 discriminator 1 view .LVU254
 900 0118 B4F5EA7F 		cmp	r4, #468
 901 011c EFD1     		bne	.L51
 763:Src/app.c     **** 
 902              		.loc 1 763 1 is_stmt 0 view .LVU255
 903 011e 0DF5AF5D 		add	sp, sp, #5600
 904 0122 05B0     		add	sp, sp, #20
 905              		.cfi_def_cfa_offset 76
 906              		@ sp needed
 907 0124 BDEC0A8B 		vldm	sp!, {d8-d12}
 908              		.cfi_restore 88
 909              		.cfi_restore 89
 910              		.cfi_restore 86
 911              		.cfi_restore 87
 912              		.cfi_restore 84
 913              		.cfi_restore 85
 914              		.cfi_restore 82
 915              		.cfi_restore 83
 916              		.cfi_restore 80
 917              		.cfi_restore 81
 918              		.cfi_def_cfa_offset 36
 919 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 763:Src/app.c     **** 
 920              		.loc 1 763 1 view .LVU256
 921              		.cfi_endproc
 922              	.LFE7389:
 924              		.section	.rodata.nn_thread_fct.str1.1,"aMS",%progbits,1
 925              	.LC4:
 926 0000 72657420 		.ascii	"ret == 0\000"
 926      3D3D2030 
 926      00
 927              	.LC5:
 928 0009 696E666F 		.ascii	"info->prob_out_len == sizeof(float)\000"
 928      2D3E7072 
 928      6F625F6F 
 928      75745F6C 
 928      656E203D 
 929              	.LC6:
 930 002d 696E666F 		.ascii	"info->landmarks_out_len == sizeof(float) * 1404\000"
 930      2D3E6C61 
 930      6E646D61 
 930      726B735F 
 930      6F75745F 
 931              	.LC7:
 932 005d 6E6E5F70 		.ascii	"nn_pipe_dst\000"
 932      6970655F 
 932      64737400 
 933              	.LC8:
 934 0069 63617074 		.ascii	"capture_buffer\000"
 934      7572655F 
ARM GAS  /tmp/cczRRmNE.s 			page 59


 934      62756666 
 934      657200
 935              	.LC9:
 936 0078 72657420 		.ascii	"ret == LL_ATON_User_IO_NOERROR\000"
 936      3D3D204C 
 936      4C5F4154 
 936      4F4E5F55 
 936      7365725F 
 937              	.LC10:
 938 0097 77696474 		.ascii	"width_out > 0\000"
 938      685F6F75 
 938      74203E20 
 938      3000
 939              	.LC11:
 940 00a5 68656967 		.ascii	"height_out > 0\000"
 940      68745F6F 
 940      7574203E 
 940      203000
 941              	.LC12:
 942 00b4 6F75745F 		.ascii	"out_data_end >= info->nn_in\000"
 942      64617461 
 942      5F656E64 
 942      203E3D20 
 942      696E666F 
 943              	.LC13:
 944 00d0 6F75745F 		.ascii	"out_data_end < info->nn_in + info->nn_in_len\000"
 944      64617461 
 944      5F656E64 
 944      203C2069 
 944      6E666F2D 
 945              	.LC14:
 946 00fd 77696474 		.ascii	"width_in > 0\000"
 946      685F696E 
 946      203E2030 
 946      00
 947              	.LC15:
 948 010a 68656967 		.ascii	"height_in > 0\000"
 948      68745F69 
 948      6E203E20 
 948      3000
 949              	.LC16:
 950 0118 696E5F64 		.ascii	"in_data_end >= buffer\000"
 950      6174615F 
 950      656E6420 
 950      3E3D2062 
 950      75666665 
 951              	.LC17:
 952 012e 696E5F64 		.ascii	"in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT"
 952      6174615F 
 952      656E6420 
 952      3C206275 
 952      66666572 
 953 0161 202A2044 		.ascii	" * DISPLAY_BPP\000"
 953      4953504C 
 953      41595F42 
 953      505000
 954              		.section	.text.nn_thread_fct,"ax",%progbits
ARM GAS  /tmp/cczRRmNE.s 			page 60


 955              		.align	1
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 960              	nn_thread_fct:
 961              	.LVL60:
 962              	.LFB7403:
1318:Src/app.c     ****   float nn_period_filtered_ms = 0;
 963              		.loc 1 1318 1 is_stmt 1 view -0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 160
 966              		@ frame_needed = 0, uses_anonymous_args = 0
1319:Src/app.c     ****   // Filtered inference times, will be updated with 0
 967              		.loc 1 1319 3 view .LVU258
1321:Src/app.c     ****   float ld_filtered_ms = 0;
 968              		.loc 1 1321 3 view .LVU259
1322:Src/app.c     **** 
 969              		.loc 1 1322 3 view .LVU260
1324:Src/app.c     ****   uint32_t nn_period[2];
 970              		.loc 1 1324 3 view .LVU261
1325:Src/app.c     ****   uint8_t *nn_pipe_dst;
 971              		.loc 1 1325 3 view .LVU262
1326:Src/app.c     ****   int is_tracking;
 972              		.loc 1 1326 3 view .LVU263
1327:Src/app.c     ****   uint32_t pd_ms;
 973              		.loc 1 1327 3 view .LVU264
1328:Src/app.c     ****   uint32_t hl_ms;
 974              		.loc 1 1328 3 view .LVU265
1329:Src/app.c     ****   int ret;
 975              		.loc 1 1329 3 view .LVU266
1330:Src/app.c     ****   int is_landmark_valid;
 976              		.loc 1 1330 3 view .LVU267
1331:Src/app.c     ****   int best_face_idx = -1;
 977              		.loc 1 1331 3 view .LVU268
1332:Src/app.c     **** 
 978              		.loc 1 1332 3 view .LVU269
1339:Src/app.c     ****   yolo_detector_init(&yolo_info);
 979              		.loc 1 1339 3 view .LVU270
1340:Src/app.c     **** 
 980              		.loc 1 1340 3 view .LVU271
1318:Src/app.c     ****   float nn_period_filtered_ms = 0;
 981              		.loc 1 1318 1 is_stmt 0 view .LVU272
 982 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 983              		.cfi_def_cfa_offset 36
 984              		.cfi_offset 4, -36
 985              		.cfi_offset 5, -32
 986              		.cfi_offset 6, -28
 987              		.cfi_offset 7, -24
 988              		.cfi_offset 8, -20
 989              		.cfi_offset 9, -16
 990              		.cfi_offset 10, -12
 991              		.cfi_offset 11, -8
 992              		.cfi_offset 14, -4
 993 0004 2DED048B 		vpush.64	{d8, d9}
 994              		.cfi_def_cfa_offset 52
 995              		.cfi_offset 80, -52
 996              		.cfi_offset 81, -48
ARM GAS  /tmp/cczRRmNE.s 			page 61


 997              		.cfi_offset 82, -44
 998              		.cfi_offset 83, -40
 999 0008 ADB0     		sub	sp, sp, #180
 1000              		.cfi_def_cfa_offset 232
 1001              	.LVL61:
 1002              	.LBB312:
 1003              	.LBI312:
 825:Src/app.c     **** {
 1004              		.loc 1 825 13 is_stmt 1 view .LVU273
 1005              	.LBB313:
 828:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1006              		.loc 1 828 3 view .LVU274
 828:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1007              		.loc 1 828 46 is_stmt 0 view .LVU275
 1008 000a FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_yolo_detector
 1009              	.LVL62:
 828:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_yolo_detector();
 1010              		.loc 1 828 46 view .LVU276
 1011 000e 0446     		mov	r4, r0
 1012              	.LVL63:
 829:Src/app.c     ****   int ret;
 1013              		.loc 1 829 3 is_stmt 1 view .LVU277
 829:Src/app.c     ****   int ret;
 1014              		.loc 1 829 45 is_stmt 0 view .LVU278
 1015 0010 FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_yolo_detector
 1016              	.LVL64:
 830:Src/app.c     **** 
 1017              		.loc 1 830 3 is_stmt 1 view .LVU279
 833:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1018              		.loc 1 833 3 view .LVU280
 1019              	.LBB314:
 1020              	.LBI314:
 493:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 494:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_end(const LL_Buffer_InfoTypeDef *buf)
 495:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 496:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_end;
 497:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 498:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 499:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline unsigned char *LL_Buffer_addr_limit(const LL_Buffer_InfoTypeDef *buf)
 500:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 501:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return LL_Buffer_addr_base(buf) + buf->offset_limit;
 502:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   }
 503:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h **** 
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   static inline uint32_t LL_Buffer_len(const LL_Buffer_InfoTypeDef *buf)
 1021              		.loc 2 504 26 view .LVU281
 1022              	.LBB315:
 505:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 506:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****     return buf->offset_end - buf->offset_start;
 1023              		.loc 2 506 5 view .LVU282
 1024              		.loc 2 506 28 is_stmt 0 view .LVU283
 1025 0014 D0E90223 		ldrd	r2, r3, [r0, #8]
 1026              	.LBE315:
 1027              	.LBE314:
 834:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1028              		.loc 1 834 40 view .LVU284
 1029 0018 2046     		mov	r0, r4
 1030              	.LVL65:
ARM GAS  /tmp/cczRRmNE.s 			page 62


 1031              	.LBB317:
 1032              	.LBB316:
 1033              		.loc 2 506 28 view .LVU285
 1034 001a 9B1A     		subs	r3, r3, r2
 1035              	.LBE316:
 1036              	.LBE317:
 833:Src/app.c     ****   info->raw_detections_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1037              		.loc 1 833 19 discriminator 1 view .LVU286
 1038 001c 1E93     		str	r3, [sp, #120]
 834:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1039              		.loc 1 834 3 is_stmt 1 view .LVU287
 834:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1040              		.loc 1 834 40 is_stmt 0 view .LVU288
 1041 001e FFF7FEFF 		bl	LL_Buffer_addr_start
 1042              	.LVL66:
 1043              	.LBB318:
 1044              	.LBB319:
 1045              		.loc 2 506 28 view .LVU289
 1046 0022 D4E90223 		ldrd	r2, r3, [r4, #8]
 1047 0026 9B1A     		subs	r3, r3, r2
 1048              	.LBE319:
 1049              	.LBE318:
 834:Src/app.c     ****   info->raw_detections_out_len = LL_Buffer_len(&nn_out_info[0]);
 1050              		.loc 1 834 28 discriminator 1 view .LVU290
 1051 0028 1F90     		str	r0, [sp, #124]
 835:Src/app.c     **** 
 1052              		.loc 1 835 3 is_stmt 1 view .LVU291
 1053              	.LVL67:
 1054              	.LBB321:
 1055              	.LBI318:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1056              		.loc 2 504 26 view .LVU292
 1057              	.LBB320:
 1058              		.loc 2 506 5 view .LVU293
 1059              		.loc 2 506 5 is_stmt 0 view .LVU294
 1060              	.LBE320:
 1061              	.LBE321:
 835:Src/app.c     **** 
 1062              		.loc 1 835 32 discriminator 1 view .LVU295
 1063 002a 2093     		str	r3, [sp, #128]
 838:Src/app.c     ****   info->static_param.nb_total_boxes = AI_OD_YOLOV8_PP_TOTAL_BOXES;  // Example: Standard for YOLOv8
 1064              		.loc 1 838 3 is_stmt 1 view .LVU296
 839:Src/app.c     ****   info->static_param.max_boxes_limit = 10;  // Max boxes after NMS
 1065              		.loc 1 839 37 is_stmt 0 view .LVU297
 1066 002c 0320     		movs	r0, #3
 1067 002e 40F63403 		movw	r3, #2100
 1068 0032 CDE92103 		strd	r0, r3, [sp, #132]
 840:Src/app.c     ****   info->static_param.conf_threshold = AI_OD_YOLOV8_PP_CONF_THRESHOLD; // Confidence threshold
 1069              		.loc 1 840 3 is_stmt 1 view .LVU298
 840:Src/app.c     ****   info->static_param.conf_threshold = AI_OD_YOLOV8_PP_CONF_THRESHOLD; // Confidence threshold
 1070              		.loc 1 840 38 is_stmt 0 view .LVU299
 1071 0036 0A23     		movs	r3, #10
 1072 0038 2393     		str	r3, [sp, #140]
 841:Src/app.c     ****   info->static_param.iou_threshold = AI_OD_YOLOV8_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 1073              		.loc 1 841 3 is_stmt 1 view .LVU300
 841:Src/app.c     ****   info->static_param.iou_threshold = AI_OD_YOLOV8_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 1074              		.loc 1 841 37 is_stmt 0 view .LVU301
ARM GAS  /tmp/cczRRmNE.s 			page 63


 1075 003a 614B     		ldr	r3, .L101
 849:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1076              		.loc 1 849 9 view .LVU302
 1077 003c 6149     		ldr	r1, .L101+4
 841:Src/app.c     ****   info->static_param.iou_threshold = AI_OD_YOLOV8_PP_IOU_THRESHOLD;  // IoU threshold for NMS
 1078              		.loc 1 841 37 view .LVU303
 1079 003e 2493     		str	r3, [sp, #144]	@ float
 842:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1080              		.loc 1 842 3 is_stmt 1 view .LVU304
 842:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1081              		.loc 1 842 36 is_stmt 0 view .LVU305
 1082 0040 614B     		ldr	r3, .L101+8
 849:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1083              		.loc 1 849 9 view .LVU306
 1084 0042 21A8     		add	r0, sp, #132
 842:Src/app.c     ****   // Note: Scale/ZeroPoint may not be needed if your model output is float32
 1085              		.loc 1 842 36 view .LVU307
 1086 0044 2593     		str	r3, [sp, #148]	@ float
 844:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 1087              		.loc 1 844 3 is_stmt 1 view .LVU308
 844:Src/app.c     ****   info->static_param.raw_output_zero_point = 0;
 1088              		.loc 1 844 39 is_stmt 0 view .LVU309
 1089 0046 4FF07E53 		mov	r3, #1065353216
 1090 004a 2693     		str	r3, [sp, #152]	@ float
 845:Src/app.c     **** 
 1091              		.loc 1 845 3 is_stmt 1 view .LVU310
 845:Src/app.c     **** 
 1092              		.loc 1 845 44 is_stmt 0 view .LVU311
 1093 004c 0023     		movs	r3, #0
 1094 004e 8DF89C30 		strb	r3, [sp, #156]
 849:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1095              		.loc 1 849 3 is_stmt 1 view .LVU312
 849:Src/app.c     ****   assert(ret == 0); // Assuming 0 is success for the generic post-processor
 1096              		.loc 1 849 9 is_stmt 0 view .LVU313
 1097 0052 FFF7FEFF 		bl	app_postprocess_init
 1098              	.LVL68:
 850:Src/app.c     **** }
 1099              		.loc 1 850 3 is_stmt 1 view .LVU314
 1100 0056 0646     		mov	r6, r0
 1101 0058 30B1     		cbz	r0, .L56
 850:Src/app.c     **** }
 1102              		.loc 1 850 3 is_stmt 0 discriminator 1 view .LVU315
 1103 005a 40F25231 		movw	r1, #850
 1104 005e 5B4B     		ldr	r3, .L101+12
 1105 0060 5B4A     		ldr	r2, .L101+16
 1106              	.LVL69:
 1107              	.L100:
 850:Src/app.c     **** }
 1108              		.loc 1 850 3 discriminator 1 view .LVU316
 1109              	.LBE313:
 1110              	.LBE312:
 1111              	.LBB322:
 1112              	.LBB323:
 895:Src/app.c     ****   // CORRECTED: Cast to the proper int8_t pointer type
 1113              		.loc 1 895 3 discriminator 1 view .LVU317
 1114 0062 5C48     		ldr	r0, .L101+20
 1115 0064 FFF7FEFF 		bl	__assert_func
ARM GAS  /tmp/cczRRmNE.s 			page 64


 1116              	.LVL70:
 1117              	.L56:
 895:Src/app.c     ****   // CORRECTED: Cast to the proper int8_t pointer type
 1118              		.loc 1 895 3 discriminator 1 view .LVU318
 1119              	.LBE323:
 1120              	.LBE322:
1342:Src/app.c     ****   face_landmark_init(&face_info);
 1121              		.loc 1 1342 3 is_stmt 1 view .LVU319
1343:Src/app.c     **** 
 1122              		.loc 1 1343 3 view .LVU320
 1123              	.LBB340:
 1124              	.LBI322:
 886:Src/app.c     **** {
 1125              		.loc 1 886 13 view .LVU321
 1126              	.LBB338:
 888:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 1127              		.loc 1 888 3 view .LVU322
 888:Src/app.c     ****   const LL_Buffer_InfoTypeDef *nn_in_info = LL_ATON_Input_Buffers_Info_face_landmark();
 1128              		.loc 1 888 46 is_stmt 0 view .LVU323
 1129 0068 FFF7FEFF 		bl	LL_ATON_Output_Buffers_Info_face_landmark
 1130              	.LVL71:
 1131 006c 0446     		mov	r4, r0
 1132              	.LVL72:
 889:Src/app.c     **** 
 1133              		.loc 1 889 3 is_stmt 1 view .LVU324
 889:Src/app.c     **** 
 1134              		.loc 1 889 45 is_stmt 0 view .LVU325
 1135 006e FFF7FEFF 		bl	LL_ATON_Input_Buffers_Info_face_landmark
 1136              	.LVL73:
 889:Src/app.c     **** 
 1137              		.loc 1 889 45 view .LVU326
 1138 0072 0146     		mov	r1, r0
 1139              	.LVL74:
 891:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1140              		.loc 1 891 3 is_stmt 1 view .LVU327
 891:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1141              		.loc 1 891 17 is_stmt 0 view .LVU328
 1142 0074 FFF7FEFF 		bl	LL_Buffer_addr_start
 1143              	.LVL75:
 1144              	.LBB324:
 1145              	.LBB325:
 1146              		.loc 2 506 33 view .LVU329
 1147 0078 D1E9028A 		ldrd	r8, r10, [r1, #8]
 1148              	.LBE325:
 1149              	.LBE324:
 891:Src/app.c     ****   info->nn_in_len = LL_Buffer_len(&nn_in_info[0]);
 1150              		.loc 1 891 17 view .LVU330
 1151 007c 0746     		mov	r7, r0
 1152              	.LVL76:
 892:Src/app.c     ****   info->prob_out = (float *) LL_Buffer_addr_start(&nn_out_info[0]);
 1153              		.loc 1 892 3 is_stmt 1 view .LVU331
 1154              	.LBB328:
 1155              	.LBI324:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1156              		.loc 2 504 26 view .LVU332
 1157              	.LBB326:
 1158              		.loc 2 506 5 view .LVU333
ARM GAS  /tmp/cczRRmNE.s 			page 65


 1159              		.loc 2 506 5 is_stmt 0 view .LVU334
 1160              	.LBE326:
 1161              	.LBE328:
 893:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1162              		.loc 1 893 3 is_stmt 1 view .LVU335
 893:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1163              		.loc 1 893 30 is_stmt 0 view .LVU336
 1164 007e 2046     		mov	r0, r4
 1165              	.LVL77:
 893:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1166              		.loc 1 893 30 view .LVU337
 1167 0080 FFF7FEFF 		bl	LL_Buffer_addr_start
 1168              	.LVL78:
 1169              	.LBB329:
 1170              	.LBB330:
 1171              		.loc 2 506 28 view .LVU338
 1172 0084 D4E90223 		ldrd	r2, r3, [r4, #8]
 1173 0088 9B1A     		subs	r3, r3, r2
 1174              	.LBE330:
 1175              	.LBE329:
 895:Src/app.c     ****   // CORRECTED: Cast to the proper int8_t pointer type
 1176              		.loc 1 895 3 view .LVU339
 1177 008a 042B     		cmp	r3, #4
 893:Src/app.c     ****   info->prob_out_len = LL_Buffer_len(&nn_out_info[0]);
 1178              		.loc 1 893 30 view .LVU340
 1179 008c 8346     		mov	fp, r0
 1180              	.LVL79:
 894:Src/app.c     ****   assert(info->prob_out_len == sizeof(float));
 1181              		.loc 1 894 3 is_stmt 1 view .LVU341
 1182              	.LBB332:
 1183              	.LBI329:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1184              		.loc 2 504 26 view .LVU342
 1185              	.LBB331:
 1186              		.loc 2 506 5 view .LVU343
 1187              		.loc 2 506 5 is_stmt 0 view .LVU344
 1188              	.LBE331:
 1189              	.LBE332:
 895:Src/app.c     ****   // CORRECTED: Cast to the proper int8_t pointer type
 1190              		.loc 1 895 3 is_stmt 1 view .LVU345
 1191 008e 04D0     		beq	.L57
 895:Src/app.c     ****   // CORRECTED: Cast to the proper int8_t pointer type
 1192              		.loc 1 895 3 is_stmt 0 discriminator 1 view .LVU346
 1193 0090 40F27F31 		movw	r1, #895
 1194              	.LVL80:
 895:Src/app.c     ****   // CORRECTED: Cast to the proper int8_t pointer type
 1195              		.loc 1 895 3 discriminator 1 view .LVU347
 1196 0094 504B     		ldr	r3, .L101+24
 1197              	.LVL81:
 895:Src/app.c     ****   // CORRECTED: Cast to the proper int8_t pointer type
 1198              		.loc 1 895 3 discriminator 1 view .LVU348
 1199 0096 514A     		ldr	r2, .L101+28
 1200              	.LVL82:
 895:Src/app.c     ****   // CORRECTED: Cast to the proper int8_t pointer type
 1201              		.loc 1 895 3 discriminator 1 view .LVU349
 1202 0098 E3E7     		b	.L100
 1203              	.LVL83:
ARM GAS  /tmp/cczRRmNE.s 			page 66


 1204              	.L57:
 897:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1205              		.loc 1 897 3 is_stmt 1 view .LVU350
 897:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1206              		.loc 1 897 36 is_stmt 0 view .LVU351
 1207 009a 04F13800 		add	r0, r4, #56
 1208              	.LVL84:
 897:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1209              		.loc 1 897 36 view .LVU352
 1210 009e FFF7FEFF 		bl	LL_Buffer_addr_start
 1211              	.LVL85:
 1212              	.LBB333:
 1213              	.LBB334:
 1214              		.loc 2 506 28 view .LVU353
 1215 00a2 D4E91023 		ldrd	r2, r3, [r4, #64]
 1216              	.LBE334:
 1217              	.LBE333:
 901:Src/app.c     **** }
 1218              		.loc 1 901 3 view .LVU354
 1219 00a6 A3F5AF53 		sub	r3, r3, #5600
 1220 00aa 103B     		subs	r3, r3, #16
 1221 00ac 9342     		cmp	r3, r2
 897:Src/app.c     ****   info->landmarks_out_len = LL_Buffer_len(&nn_out_info[1]);
 1222              		.loc 1 897 36 view .LVU355
 1223 00ae 8146     		mov	r9, r0
 1224              	.LVL86:
 898:Src/app.c     ****   
 1225              		.loc 1 898 3 is_stmt 1 view .LVU356
 1226              	.LBB336:
 1227              	.LBI333:
 504:Lib/AI_Runtime/Npu/ll_aton/ll_aton_NN_interface.h ****   {
 1228              		.loc 2 504 26 view .LVU357
 1229              	.LBB335:
 1230              		.loc 2 506 5 view .LVU358
 1231              		.loc 2 506 5 is_stmt 0 view .LVU359
 1232              	.LBE335:
 1233              	.LBE336:
 901:Src/app.c     **** }
 1234              		.loc 1 901 3 is_stmt 1 view .LVU360
 1235 00b0 04D0     		beq	.L58
 901:Src/app.c     **** }
 1236              		.loc 1 901 3 is_stmt 0 discriminator 1 view .LVU361
 1237 00b2 40F28531 		movw	r1, #901
 1238              	.LVL87:
 901:Src/app.c     **** }
 1239              		.loc 1 901 3 discriminator 1 view .LVU362
 1240 00b6 4A4B     		ldr	r3, .L101+32
 1241 00b8 484A     		ldr	r2, .L101+28
 1242              	.LVL88:
 901:Src/app.c     **** }
 1243              		.loc 1 901 3 discriminator 1 view .LVU363
 1244 00ba D2E7     		b	.L100
 1245              	.LVL89:
 1246              	.L58:
 901:Src/app.c     **** }
 1247              		.loc 1 901 3 discriminator 1 view .LVU364
 1248              	.LBE338:
ARM GAS  /tmp/cczRRmNE.s 			page 67


 1249              	.LBE340:
1345:Src/app.c     **** 
 1250              		.loc 1 1345 3 is_stmt 1 view .LVU365
1348:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1251              		.loc 1 1348 3 view .LVU366
1348:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1252              		.loc 1 1348 18 is_stmt 0 view .LVU367
 1253 00bc FFF7FEFF 		bl	HAL_GetTick
 1254              	.LVL90:
 1255              	.LBB341:
 1256              	.LBB342:
 494:Src/app.c     ****   if (ret == pdFALSE)
 1257              		.loc 1 494 9 view .LVU368
 1258 00c0 484C     		ldr	r4, .L101+36
 1259              	.LBE342:
 1260              	.LBE341:
1348:Src/app.c     ****   nn_pipe_dst = bqueue_get_free(&nn_input_queue, 0);
 1261              		.loc 1 1348 18 view .LVU369
 1262 00c2 0546     		mov	r5, r0
 1263              	.LVL91:
1349:Src/app.c     ****   assert(nn_pipe_dst);
 1264              		.loc 1 1349 3 is_stmt 1 view .LVU370
 1265              	.LBB345:
 1266              	.LBI341:
 489:Src/app.c     **** {
 1267              		.loc 1 489 17 view .LVU371
 1268              	.LBB343:
 491:Src/app.c     ****   int ret;
 1269              		.loc 1 491 3 view .LVU372
 492:Src/app.c     **** 
 1270              		.loc 1 492 3 view .LVU373
 494:Src/app.c     ****   if (ret == pdFALSE)
 1271              		.loc 1 494 3 view .LVU374
 494:Src/app.c     ****   if (ret == pdFALSE)
 1272              		.loc 1 494 9 is_stmt 0 discriminator 4 view .LVU375
 1273 00c4 3146     		mov	r1, r6
 1274 00c6 2068     		ldr	r0, [r4]
 1275              	.LVL92:
 494:Src/app.c     ****   if (ret == pdFALSE)
 1276              		.loc 1 494 9 discriminator 4 view .LVU376
 1277 00c8 FFF7FEFF 		bl	xQueueSemaphoreTake
 1278              	.LVL93:
 495:Src/app.c     ****     return NULL;
 1279              		.loc 1 495 3 is_stmt 1 view .LVU377
 495:Src/app.c     ****     return NULL;
 1280              		.loc 1 495 6 is_stmt 0 view .LVU378
 1281 00cc 20B9     		cbnz	r0, .L59
 1282              	.LVL94:
 1283              	.L60:
 495:Src/app.c     ****     return NULL;
 1284              		.loc 1 495 6 view .LVU379
 1285              	.LBE343:
 1286              	.LBE345:
1350:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1287              		.loc 1 1350 3 discriminator 1 view .LVU380
 1288 00ce 40F24651 		movw	r1, #1350
 1289 00d2 454B     		ldr	r3, .L101+40
ARM GAS  /tmp/cczRRmNE.s 			page 68


 1290 00d4 454A     		ldr	r2, .L101+44
 1291 00d6 C4E7     		b	.L100
 1292              	.LVL95:
 1293              	.L59:
 1294              	.LBB346:
 1295              	.LBB344:
 498:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1296              		.loc 1 498 3 is_stmt 1 view .LVU381
 498:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1297              		.loc 1 498 23 is_stmt 0 view .LVU382
 1298 00d8 D4F8B430 		ldr	r3, [r4, #180]
 498:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 1299              		.loc 1 498 7 view .LVU383
 1300 00dc 04EB8302 		add	r2, r4, r3, lsl #2
 1301 00e0 D2F8AC00 		ldr	r0, [r2, #172]
 1302              	.LVL96:
 499:Src/app.c     **** 
 1303              		.loc 1 499 3 is_stmt 1 view .LVU384
 499:Src/app.c     **** 
 1304              		.loc 1 499 37 is_stmt 0 view .LVU385
 1305 00e4 D4F8A820 		ldr	r2, [r4, #168]
 499:Src/app.c     **** 
 1306              		.loc 1 499 32 view .LVU386
 1307 00e8 0133     		adds	r3, r3, #1
 499:Src/app.c     **** 
 1308              		.loc 1 499 37 view .LVU387
 1309 00ea 93FBF2F1 		sdiv	r1, r3, r2
 1310 00ee 02FB1133 		mls	r3, r2, r1, r3
 499:Src/app.c     **** 
 1311              		.loc 1 499 16 view .LVU388
 1312 00f2 C4F8B430 		str	r3, [r4, #180]
 501:Src/app.c     **** }
 1313              		.loc 1 501 3 is_stmt 1 view .LVU389
 1314              	.LVL97:
 501:Src/app.c     **** }
 1315              		.loc 1 501 3 is_stmt 0 view .LVU390
 1316              	.LBE344:
 1317              	.LBE346:
1350:Src/app.c     ****   CAM_NNPipe_Start(nn_pipe_dst, CMW_MODE_CONTINUOUS);
 1318              		.loc 1 1350 3 is_stmt 1 view .LVU391
 1319 00f6 0028     		cmp	r0, #0
 1320 00f8 E9D0     		beq	.L60
1351:Src/app.c     ****   while (1)
 1321              		.loc 1 1351 3 is_stmt 0 view .LVU392
 1322 00fa 3146     		mov	r1, r6
 1323              	.LBB347:
 1324              	.LBB339:
 1325              	.LBB337:
 1326              	.LBB327:
 1327              		.loc 2 506 28 view .LVU393
 1328 00fc AAEB0803 		sub	r3, r10, r8
 1329 0100 0793     		str	r3, [sp, #28]
 1330              	.LBE327:
 1331              	.LBE337:
 1332              	.LBE339:
 1333              	.LBE347:
1351:Src/app.c     ****   while (1)
ARM GAS  /tmp/cczRRmNE.s 			page 69


 1334              		.loc 1 1351 3 is_stmt 1 view .LVU394
1319:Src/app.c     ****   // Filtered inference times, will be updated with 0
 1335              		.loc 1 1319 9 is_stmt 0 view .LVU395
 1336 0102 DFED3B8A 		vldr.32	s17, .L101+48
1351:Src/app.c     ****   while (1)
 1337              		.loc 1 1351 3 view .LVU396
 1338 0106 FFF7FEFF 		bl	CAM_NNPipe_Start
 1339              	.LVL98:
 1340              	.LBB348:
1361:Src/app.c     **** 
 1341              		.loc 1 1361 27 view .LVU397
 1342 010a 9FED3A9A 		vldr.32	s18, .L101+52
1381:Src/app.c     ****     assert(ret == pdTRUE);
 1343              		.loc 1 1381 11 view .LVU398
 1344 010e 3A4E     		ldr	r6, .L101+56
 1345              	.LVL99:
 1346              	.L86:
1381:Src/app.c     ****     assert(ret == pdTRUE);
 1347              		.loc 1 1381 11 view .LVU399
 1348              	.LBE348:
1352:Src/app.c     ****   {
 1349              		.loc 1 1352 3 is_stmt 1 view .LVU400
 1350              	.LBB410:
1354:Src/app.c     ****     uint8_t *capture_buffer;
 1351              		.loc 1 1354 5 view .LVU401
1355:Src/app.c     ****     memset(&yolo_info.yolo_out, 0, sizeof(yolo_info.yolo_out));
 1352              		.loc 1 1355 5 view .LVU402
1356:Src/app.c     ****     // Standard frame timing
 1353              		.loc 1 1356 5 view .LVU403
 1354 0110 0023     		movs	r3, #0
 1355 0112 CDE92A33 		strd	r3, r3, [sp, #168]
1358:Src/app.c     ****     nn_period[1] = HAL_GetTick();
 1356              		.loc 1 1358 5 view .LVU404
 1357              	.LVL100:
1359:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1358              		.loc 1 1359 5 view .LVU405
1359:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1359              		.loc 1 1359 20 is_stmt 0 view .LVU406
 1360 0116 FFF7FEFF 		bl	HAL_GetTick
 1361              	.LVL101:
1360:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1362              		.loc 1 1360 18 view .LVU407
 1363 011a 431B     		subs	r3, r0, r5
 1364 011c 07EE903A 		vmov	s15, r3	@ int
1361:Src/app.c     **** 
 1365              		.loc 1 1361 75 view .LVU408
 1366 0120 B2EE0E7A 		vmov.f32	s14, #1.5e+1
 1367 0124 F8EE677A 		vcvt.f32.u32	s15, s15
 1368 0128 E8EE877A 		vfma.f32	s15, s17, s14
1359:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 1369              		.loc 1 1359 20 view .LVU409
 1370 012c 0690     		str	r0, [sp, #24]
 1371              	.LVL102:
1360:Src/app.c     ****     nn_period_filtered_ms = USE_FILTERED_TS ? (15 * nn_period_filtered_ms + nn_period_ms) / 16 : nn
 1372              		.loc 1 1360 5 is_stmt 1 view .LVU410
1361:Src/app.c     **** 
 1373              		.loc 1 1361 5 view .LVU411
ARM GAS  /tmp/cczRRmNE.s 			page 70


 1374              	.LBB349:
 1375              	.LBB350:
 517:Src/app.c     ****   assert(ret == pdTRUE);
 1376              		.loc 1 517 9 is_stmt 0 view .LVU412
 1377 012e 4FF0FF31 		mov	r1, #-1
 1378 0132 606D     		ldr	r0, [r4, #84]
 1379              	.LVL103:
 517:Src/app.c     ****   assert(ret == pdTRUE);
 1380              		.loc 1 517 9 view .LVU413
 1381              	.LBE350:
 1382              	.LBE349:
1361:Src/app.c     **** 
 1383              		.loc 1 1361 27 view .LVU414
 1384 0134 67EE898A 		vmul.f32	s17, s15, s18
 1385              	.LVL104:
1364:Src/app.c     ****     assert(capture_buffer);
 1386              		.loc 1 1364 5 is_stmt 1 view .LVU415
 1387              	.LBB352:
 1388              	.LBI349:
 512:Src/app.c     **** {
 1389              		.loc 1 512 17 view .LVU416
 1390              	.LBB351:
 514:Src/app.c     ****   int ret;
 1391              		.loc 1 514 3 view .LVU417
 515:Src/app.c     **** 
 1392              		.loc 1 515 3 view .LVU418
 517:Src/app.c     ****   assert(ret == pdTRUE);
 1393              		.loc 1 517 3 view .LVU419
 517:Src/app.c     ****   assert(ret == pdTRUE);
 1394              		.loc 1 517 9 is_stmt 0 view .LVU420
 1395 0138 FFF7FEFF 		bl	xQueueSemaphoreTake
 1396              	.LVL105:
 518:Src/app.c     **** 
 1397              		.loc 1 518 3 is_stmt 1 view .LVU421
 1398 013c 0128     		cmp	r0, #1
 1399 013e 04D0     		beq	.L61
 518:Src/app.c     **** 
 1400              		.loc 1 518 3 is_stmt 0 discriminator 1 view .LVU422
 1401 0140 40F20621 		movw	r1, #518
 1402 0144 2D4B     		ldr	r3, .L101+60
 1403 0146 2E4A     		ldr	r2, .L101+64
 1404 0148 8BE7     		b	.L100
 1405              	.L61:
 520:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1406              		.loc 1 520 3 is_stmt 1 view .LVU423
 520:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1407              		.loc 1 520 23 is_stmt 0 view .LVU424
 1408 014a D4F8B830 		ldr	r3, [r4, #184]
 520:Src/app.c     ****   bq->ready_idx = (bq->ready_idx + 1) % bq->buffer_nb;
 1409              		.loc 1 520 7 view .LVU425
 1410 014e 04EB8302 		add	r2, r4, r3, lsl #2
 1411 0152 D2F8AC50 		ldr	r5, [r2, #172]
 1412              	.LVL106:
 521:Src/app.c     **** 
 1413              		.loc 1 521 3 is_stmt 1 view .LVU426
 521:Src/app.c     **** 
 1414              		.loc 1 521 39 is_stmt 0 view .LVU427
ARM GAS  /tmp/cczRRmNE.s 			page 71


 1415 0156 D4F8A820 		ldr	r2, [r4, #168]
 521:Src/app.c     **** 
 1416              		.loc 1 521 34 view .LVU428
 1417 015a 0133     		adds	r3, r3, #1
 521:Src/app.c     **** 
 1418              		.loc 1 521 39 view .LVU429
 1419 015c 93FBF2F1 		sdiv	r1, r3, r2
 1420 0160 02FB1133 		mls	r3, r2, r1, r3
 521:Src/app.c     **** 
 1421              		.loc 1 521 17 view .LVU430
 1422 0164 C4F8B830 		str	r3, [r4, #184]
 523:Src/app.c     **** }
 1423              		.loc 1 523 3 is_stmt 1 view .LVU431
 1424              	.LVL107:
 523:Src/app.c     **** }
 1425              		.loc 1 523 3 is_stmt 0 view .LVU432
 1426              	.LBE351:
 1427              	.LBE352:
1365:Src/app.c     **** 
 1428              		.loc 1 1365 5 is_stmt 1 view .LVU433
 1429 0168 25B9     		cbnz	r5, .L62
1365:Src/app.c     **** 
 1430              		.loc 1 1365 5 is_stmt 0 discriminator 1 view .LVU434
 1431 016a 40F25551 		movw	r1, #1365
 1432 016e 254B     		ldr	r3, .L101+68
 1433 0170 1E4A     		ldr	r2, .L101+44
 1434 0172 76E7     		b	.L100
 1435              	.L62:
1367:Src/app.c     ****     /**************************************************************************
 1436              		.loc 1 1367 5 is_stmt 1 view .LVU435
 1437              	.LVL108:
 1438              	.LBB353:
 1439              	.LBI353:
 1440              		.file 3 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /******************************************************************************
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @file     cachel1_armv7.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @brief    CMSIS Level 1 Cache API for Armv7-M and later
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @version  V1.0.3
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * @date     17. March 2023
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Copyright (c) 2020-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
ARM GAS  /tmp/cczRRmNE.s 			page 72


  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #if   defined ( __ICCARM__ )
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #elif defined (__clang__)
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #pragma clang system_header    /* treat file as system include file */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef ARM_CACHEL1_ARMV7_H
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define ARM_CACHEL1_ARMV7_H
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \ingroup  CMSIS_Core_FunctionInterface
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief    Functions that configure Instruction and Data cache.
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   @{
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****  */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /* Cache Size ID Register Macros */
  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_DCACHE_LINE_SIZE
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #ifndef __SCB_ICACHE_LINE_SIZE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable I-Cache
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on I-Cache
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable I-Cache
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off I-Cache
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
ARM GAS  /tmp/cczRRmNE.s 			page 73


  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate I-Cache
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->ICIALLU = 0UL;
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   I-Cache Invalidate by address
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates I-Cache for the given address.
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   isize   size of memory block (in number of bytes)
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (volatile void *addr, int32_t isize)
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( isize > 0 ) {
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
ARM GAS  /tmp/cczRRmNE.s 			page 74


 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Enable D-Cache
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns on D-Cache
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Disable D-Cache
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Turns off D-Cache
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     struct {
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } locals
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if ((defined(__GNUC__) || defined(__clang__)) && !defined(__OPTIMIZE__))
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        __ALIGNED(__SCB_DCACHE_LINE_SIZE)
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ;
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
ARM GAS  /tmp/cczRRmNE.s 			page 75


 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if !defined(__OPTIMIZE__)
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /*
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * For the endless loop issue with no optimization builds.
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * More details, see https://github.com/ARM-software/CMSIS_5/issues/620
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * The issue only happens when local variables are in stack. If
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables are saved in general purpose register, then the function
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * is OK.
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        *
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * When local variables are in stack, after disabling the cache, flush the
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        * local variables cache line for data consistency.
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        */
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       /* Clean and invalidate the local variable cache. */
 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #if defined(__ICCARM__)
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     /* As we can't align the stack to the cache line size, invalidate each of the variables */
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.sets;
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ways;
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals.ccsidr;
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       SCB->DCCIMVAC = (uint32_t)&locals;
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     #endif
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.ccsidr = SCB->CCSIDR;
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     locals.sets = (uint32_t)(CCSIDR_SETS(locals.ccsidr));
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       locals.ways = (uint32_t)(CCSIDR_WAYS(locals.ccsidr));
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((locals.sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((locals.ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (locals.ways-- != 0U);
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(locals.sets-- != 0U);
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Invalidate D-Cache
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
ARM GAS  /tmp/cczRRmNE.s 			page 76


 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* invalidate D-Cache */
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean D-Cache
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean D-Cache */
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/cczRRmNE.s 			page 77


 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   Clean & Invalidate D-Cache
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and Invalidates D-Cache
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   */
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ccsidr;
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t sets;
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     uint32_t ways;
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     ccsidr = SCB->CCSIDR;
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                                             /* clean & invalidate D-Cache */
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     do {
 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #if defined ( __CC_ARM )
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****           __schedule_barrier();
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         #endif
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while (ways-- != 0U);
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     } while(sets-- != 0U);
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __DSB();
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     __ISB();
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Invalidate by address
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Invalidates D-Cache for the given address.
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 1441              		.loc 3 358 27 view .LVU436
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 1442              		.loc 3 361 5 view .LVU437
 1443              	.LBB354:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
ARM GAS  /tmp/cczRRmNE.s 			page 78


 1444              		.loc 3 362 8 view .LVU438
 1445              		.loc 3 362 52 is_stmt 0 view .LVU439
 1446 0174 05F01F0E 		and	lr, r5, #31
 1447              		.loc 3 362 36 view .LVU440
 1448 0178 2B46     		mov	r3, r5
 1449              		.loc 3 362 32 view .LVU441
 1450 017a 0EF5962E 		add	lr, lr, #307200
 1451              	.LVL109:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1452              		.loc 3 363 7 is_stmt 1 view .LVU442
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 1453              		.loc 3 365 7 view .LVU443
 1454              	.LBB355:
 1455              	.LBI355:
 1456              		.file 4 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  /tmp/cczRRmNE.s 			page 79


  42:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  /tmp/cczRRmNE.s 			page 80


  99:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/cczRRmNE.s 			page 81


 156:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
ARM GAS  /tmp/cczRRmNE.s 			page 82


 213:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
ARM GAS  /tmp/cczRRmNE.s 			page 83


 1457              		.loc 4 269 27 view .LVU444
 1458              	.LBB356:
 270:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1459              		.loc 4 271 3 view .LVU445
 1460              		.syntax unified
 1461              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1462 017e BFF34F8F 		dsb 0xF
 1463              	@ 0 "" 2
 1464              		.thumb
 1465              		.syntax unified
 1466              	.LBE356:
 1467              	.LBE355:
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1468              		.loc 3 368 22 is_stmt 0 view .LVU446
 1469 0182 0EF1FF3E 		add	lr, lr, #-1
 1470              	.LVL110:
 1471              		.loc 3 368 22 view .LVU447
 1472 0186 4FEA5E1E 		lsr	lr, lr, #5
 1473              	.LVL111:
 1474              		.loc 3 368 22 view .LVU448
 1475 018a 0EF1010E 		add	lr, lr, #1
 1476 018e 4EF001E0 		dls	lr, lr
 1477 0192 1D4A     		ldr	r2, .L101+72
 1478              	.LVL112:
 1479              	.L63:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1480              		.loc 3 367 7 is_stmt 1 view .LVU449
 1481              		.loc 3 368 9 view .LVU450
 1482              		.loc 3 368 22 is_stmt 0 view .LVU451
 1483 0194 C2F85C32 		str	r3, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1484              		.loc 3 369 9 is_stmt 1 view .LVU452
 1485              		.loc 3 369 17 is_stmt 0 view .LVU453
 1486 0198 2033     		adds	r3, r3, #32
 1487              	.LVL113:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1488              		.loc 3 370 9 is_stmt 1 view .LVU454
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1489              		.loc 3 371 25 discriminator 1 view .LVU455
 1490 019a 0FF005C8 		le	lr, .L63
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 1491              		.loc 3 373 7 view .LVU456
 1492              	.LBB357:
 1493              	.LBI357:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1494              		.loc 4 269 27 view .LVU457
 1495              	.LBB358:
 1496              		.loc 4 271 3 view .LVU458
 1497              		.syntax unified
 1498              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1499 019e BFF34F8F 		dsb 0xF
 1500              	@ 0 "" 2
 1501              		.thumb
ARM GAS  /tmp/cczRRmNE.s 			page 84


 1502              		.syntax unified
 1503              	.LBE358:
 1504              	.LBE357:
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 1505              		.loc 3 374 7 view .LVU459
 1506              	.LBB359:
 1507              	.LBI359:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1508              		.loc 4 258 27 view .LVU460
 1509              	.LBB360:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1510              		.loc 4 260 3 view .LVU461
 1511              		.syntax unified
 1512              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1513 01a2 BFF36F8F 		isb 0xF
 1514              	@ 0 "" 2
 1515              	.LVL114:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1516              		.loc 4 260 3 is_stmt 0 view .LVU462
 1517              		.thumb
 1518              		.syntax unified
 1519              	.LBE360:
 1520              	.LBE359:
 1521              	.LBE354:
 1522              	.LBE353:
1371:Src/app.c     ****     hl_ms = HAL_GetTick();
 1523              		.loc 1 1371 5 is_stmt 1 view .LVU463
 1524              	.LBB361:
 1525              	.LBI361:
 853:Src/app.c     **** {
 1526              		.loc 1 853 12 view .LVU464
 1527              	.LBB362:
 855:Src/app.c     ****   int detection_nb;
 1528              		.loc 1 855 3 view .LVU465
 856:Src/app.c     ****   int ret;
 1529              		.loc 1 856 3 view .LVU466
 857:Src/app.c     ****   int i;
 1530              		.loc 1 857 3 view .LVU467
 858:Src/app.c     **** 
 1531              		.loc 1 858 3 view .LVU468
 860:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1532              		.loc 1 860 3 view .LVU469
 860:Src/app.c     ****   /* Note that we don't need to clean/invalidate those input buffers since they are only access in 
 1533              		.loc 1 860 14 is_stmt 0 view .LVU470
 1534 01a6 FFF7FEFF 		bl	HAL_GetTick
 1535              	.LVL115:
 862:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1536              		.loc 1 862 3 is_stmt 1 view .LVU471
 862:Src/app.c     ****   assert(ret == LL_ATON_User_IO_NOERROR);
 1537              		.loc 1 862 9 is_stmt 0 view .LVU472
 1538 01aa 2946     		mov	r1, r5
 1539 01ac 0020     		movs	r0, #0
 1540 01ae 1E9A     		ldr	r2, [sp, #120]
 1541 01b0 FFF7FEFF 		bl	LL_ATON_Set_User_Input_Buffer_yolo_detector
 1542              	.LVL116:
 863:Src/app.c     **** 
 1543              		.loc 1 863 3 is_stmt 1 view .LVU473
ARM GAS  /tmp/cczRRmNE.s 			page 85


 1544 01b4 70B3     		cbz	r0, .L64
 863:Src/app.c     **** 
 1545              		.loc 1 863 3 is_stmt 0 discriminator 1 view .LVU474
 1546 01b6 40F25F31 		movw	r1, #863
 1547 01ba 144B     		ldr	r3, .L101+76
 1548 01bc 144A     		ldr	r2, .L101+80
 1549 01be 50E7     		b	.L100
 1550              	.L102:
 1551              		.align	2
 1552              	.L101:
 1553 01c0 9A99993E 		.word	1050253722
 1554 01c4 00000000 		.word	NN_Instance_yolo_detector
 1555 01c8 CDCCCC3D 		.word	1036831949
 1556 01cc 00000000 		.word	.LC4
 1557 01d0 00000000 		.word	__func__.11
 1558 01d4 0E000000 		.word	.LC2
 1559 01d8 09000000 		.word	.LC5
 1560 01dc 00000000 		.word	__func__.10
 1561 01e0 2D000000 		.word	.LC6
 1562 01e4 00000000 		.word	nn_input_queue
 1563 01e8 5D000000 		.word	.LC7
 1564 01ec 00000000 		.word	__func__.12
 1565 01f0 00000000 		.word	0
 1566 01f4 0000803D 		.word	1031798784
 1567 01f8 00000000 		.word	disp
 1568 01fc 00000000 		.word	.LC1
 1569 0200 00000000 		.word	__func__.9
 1570 0204 69000000 		.word	.LC8
 1571 0208 00ED00E0 		.word	-536810240
 1572 020c 78000000 		.word	.LC9
 1573 0210 00000000 		.word	__func__.8
 1574              	.L64:
 865:Src/app.c     **** 
 1575              		.loc 1 865 3 is_stmt 1 view .LVU475
 1576 0214 AC48     		ldr	r0, .L103
 1577              	.LVL117:
 865:Src/app.c     **** 
 1578              		.loc 1 865 3 is_stmt 0 view .LVU476
 1579 0216 FFF7FEFF 		bl	LL_ATON_RT_Main
 1580              	.LVL118:
 868:Src/app.c     **** 
 1581              		.loc 1 868 3 is_stmt 1 view .LVU477
 868:Src/app.c     **** 
 1582              		.loc 1 868 40 is_stmt 0 view .LVU478
 1583 021a 1F9B     		ldr	r3, [sp, #124]
 868:Src/app.c     **** 
 1584              		.loc 1 868 9 view .LVU479
 1585 021c 2AAA     		add	r2, sp, #168
 868:Src/app.c     **** 
 1586              		.loc 1 868 40 view .LVU480
 1587 021e 1693     		str	r3, [sp, #88]
 868:Src/app.c     **** 
 1588              		.loc 1 868 9 view .LVU481
 1589 0220 0121     		movs	r1, #1
 1590 0222 21AB     		add	r3, sp, #132
 1591 0224 16A8     		add	r0, sp, #88
 1592 0226 FFF7FEFF 		bl	app_postprocess_run
ARM GAS  /tmp/cczRRmNE.s 			page 86


 1593              	.LVL119:
 871:Src/app.c     **** 
 1594              		.loc 1 871 3 is_stmt 1 view .LVU482
 879:Src/app.c     **** 
 1595              		.loc 1 879 3 view .LVU483
 879:Src/app.c     **** 
 1596              		.loc 1 879 3 view .LVU484
 879:Src/app.c     **** 
 1597              		.loc 1 879 3 discriminator 1 view .LVU485
 1598 022a 209A     		ldr	r2, [sp, #128]
 1599              	.LVL120:
 1600              	.LBB363:
 1601              	.LBI363:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 1602              		.loc 3 358 27 view .LVU486
 1603              	.LBB364:
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1604              		.loc 3 361 5 view .LVU487
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 1605              		.loc 3 361 8 is_stmt 0 view .LVU488
 1606 022c 002A     		cmp	r2, #0
 1607 022e 1DDD     		ble	.L65
 1608              	.LBB365:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1609              		.loc 3 362 8 is_stmt 1 view .LVU489
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1610              		.loc 3 362 36 is_stmt 0 view .LVU490
 1611 0230 1F9B     		ldr	r3, [sp, #124]
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1612              		.loc 3 362 52 view .LVU491
 1613 0232 03F01F00 		and	r0, r3, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 1614              		.loc 3 362 32 view .LVU492
 1615 0236 1044     		add	r0, r0, r2
 1616              	.LVL121:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1617              		.loc 3 363 7 is_stmt 1 view .LVU493
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1618              		.loc 3 365 7 view .LVU494
 1619              	.LBB366:
 1620              	.LBI366:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1621              		.loc 4 269 27 view .LVU495
 1622              	.LBB367:
 1623              		.loc 4 271 3 view .LVU496
 1624              		.syntax unified
 1625              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1626 0238 BFF34F8F 		dsb 0xF
 1627              	@ 0 "" 2
 1628              		.thumb
 1629              		.syntax unified
 1630              	.LBE367:
 1631              	.LBE366:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1632              		.loc 3 371 25 is_stmt 0 discriminator 1 view .LVU497
 1633 023c DA43     		mvns	r2, r3
 1634              	.LVL122:
ARM GAS  /tmp/cczRRmNE.s 			page 87


 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1635              		.loc 3 371 25 discriminator 1 view .LVU498
 1636 023e 03EB000C 		add	ip, r3, r0
 1637 0242 6244     		add	r2, r2, ip
 1638 0244 2038     		subs	r0, r0, #32
 1639              	.LVL123:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1640              		.loc 3 371 25 discriminator 1 view .LVU499
 1641 0246 5209     		lsrs	r2, r2, #5
 1642 0248 2030     		adds	r0, r0, #32
 1643              	.LVL124:
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1644              		.loc 3 371 25 discriminator 1 view .LVU500
 1645 024a 02F1010E 		add	lr, r2, #1
 1646 024e D8BF     		it	le
 1647 0250 4FF0010E 		movle	lr, #1
 1648 0254 4EF001E0 		dls	lr, lr
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1649              		.loc 3 368 22 view .LVU501
 1650 0258 9C49     		ldr	r1, .L103+4
 1651              	.LVL125:
 1652              	.L66:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 1653              		.loc 3 367 7 is_stmt 1 view .LVU502
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1654              		.loc 3 368 9 view .LVU503
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 1655              		.loc 3 368 22 is_stmt 0 view .LVU504
 1656 025a C1F85C32 		str	r3, [r1, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1657              		.loc 3 369 9 is_stmt 1 view .LVU505
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 1658              		.loc 3 369 17 is_stmt 0 view .LVU506
 1659 025e 2033     		adds	r3, r3, #32
 1660              	.LVL126:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 1661              		.loc 3 370 9 is_stmt 1 view .LVU507
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 1662              		.loc 3 371 25 discriminator 1 view .LVU508
 1663 0260 0FF005C8 		le	lr, .L66
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 1664              		.loc 3 373 7 view .LVU509
 1665              	.LBB368:
 1666              	.LBI368:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1667              		.loc 4 269 27 view .LVU510
 1668              	.LBB369:
 1669              		.loc 4 271 3 view .LVU511
 1670              		.syntax unified
 1671              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1672 0264 BFF34F8F 		dsb 0xF
 1673              	@ 0 "" 2
 1674              		.thumb
 1675              		.syntax unified
 1676              	.LBE369:
 1677              	.LBE368:
 1678              		.loc 3 374 7 view .LVU512
ARM GAS  /tmp/cczRRmNE.s 			page 88


 1679              	.LBB370:
 1680              	.LBI370:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1681              		.loc 4 258 27 view .LVU513
 1682              	.LBB371:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1683              		.loc 4 260 3 view .LVU514
 1684              		.syntax unified
 1685              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1686 0268 BFF36F8F 		isb 0xF
 1687              	@ 0 "" 2
 1688              	.LVL127:
 1689              		.thumb
 1690              		.syntax unified
 1691              	.L65:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1692              		.loc 4 260 3 is_stmt 0 view .LVU515
 1693              	.LBE371:
 1694              	.LBE370:
 1695              	.LBE365:
 1696              	.LBE364:
 1697              	.LBE363:
 879:Src/app.c     **** 
 1698              		.loc 1 879 3 is_stmt 1 discriminator 3 view .LVU516
 881:Src/app.c     **** 
 1699              		.loc 1 881 3 view .LVU517
 881:Src/app.c     **** 
 1700              		.loc 1 881 16 is_stmt 0 view .LVU518
 1701 026c FFF7FEFF 		bl	HAL_GetTick
 1702              	.LVL128:
 883:Src/app.c     **** }
 1703              		.loc 1 883 3 is_stmt 1 view .LVU519
 883:Src/app.c     **** }
 1704              		.loc 1 883 3 is_stmt 0 view .LVU520
 1705              	.LBE362:
 1706              	.LBE361:
1372:Src/app.c     ****     hl_ms = HAL_GetTick() - hl_ms;
 1707              		.loc 1 1372 5 is_stmt 1 view .LVU521
1372:Src/app.c     ****     hl_ms = HAL_GetTick() - hl_ms;
 1708              		.loc 1 1372 13 is_stmt 0 view .LVU522
 1709 0270 FFF7FEFF 		bl	HAL_GetTick
 1710              	.LVL129:
1373:Src/app.c     **** 
 1711              		.loc 1 1373 5 is_stmt 1 view .LVU523
1373:Src/app.c     **** 
 1712              		.loc 1 1373 13 is_stmt 0 view .LVU524
 1713 0274 FFF7FEFF 		bl	HAL_GetTick
 1714              	.LVL130:
1375:Src/app.c     **** 
 1715              		.loc 1 1375 5 is_stmt 1 view .LVU525
1381:Src/app.c     ****     assert(ret == pdTRUE);
 1716              		.loc 1 1381 5 view .LVU526
1381:Src/app.c     ****     assert(ret == pdTRUE);
 1717              		.loc 1 1381 11 is_stmt 0 view .LVU527
 1718 0278 4FF0FF31 		mov	r1, #-1
 1719 027c 706D     		ldr	r0, [r6, #84]
 1720 027e FFF7FEFF 		bl	xQueueSemaphoreTake
ARM GAS  /tmp/cczRRmNE.s 			page 89


 1721              	.LVL131:
1382:Src/app.c     ****     // NEW: Loop through all detections to find the highest confidence score
 1722              		.loc 1 1382 5 view .LVU528
 1723 0282 0128     		cmp	r0, #1
1381:Src/app.c     ****     assert(ret == pdTRUE);
 1724              		.loc 1 1381 11 view .LVU529
 1725 0284 8046     		mov	r8, r0
 1726              	.LVL132:
1382:Src/app.c     ****     // NEW: Loop through all detections to find the highest confidence score
 1727              		.loc 1 1382 5 is_stmt 1 view .LVU530
 1728 0286 40F0AF80 		bne	.L67
 1729              	.LBB372:
1389:Src/app.c     ****         {
 1730              		.loc 1 1389 31 is_stmt 0 view .LVU531
 1731 028a DDE92A20 		ldrd	r2, r0, [sp, #168]
 1732              	.LVL133:
1386:Src/app.c     ****     {
 1733              		.loc 1 1386 14 view .LVU532
 1734 028e 4FF0000E 		mov	lr, #0
 1735 0292 00F1010A 		add	r10, r0, #1
 1736 0296 7045     		cmp	r0, lr
 1737 0298 4346     		mov	r3, r8
 1738 029a 1146     		mov	r1, r2
 1739              	.LBE372:
1384:Src/app.c     ****     // 1. Loop through all detections from the model's output
 1740              		.loc 1 1384 11 view .LVU533
 1741 029c 9FED8C8A 		vldr.32	s16, .L103+8
1354:Src/app.c     ****     uint8_t *capture_buffer;
 1742              		.loc 1 1354 19 view .LVU534
 1743 02a0 4FF0FF3C 		mov	ip, #-1
 1744 02a4 A8BF     		it	ge
 1745 02a6 5346     		movge	r3, r10
 1746              	.LVL134:
 1747              	.L68:
 1748              	.LBB373:
1386:Src/app.c     ****     {
 1749              		.loc 1 1386 23 is_stmt 1 discriminator 1 view .LVU535
 1750 02a8 013B     		subs	r3, r3, #1
 1751 02aa 40F0A280 		bne	.L70
 1752              	.LBE373:
1400:Src/app.c     ****     int is_face_present = 0; // A flag to know if we should run the second model
 1753              		.loc 1 1400 5 view .LVU536
1401:Src/app.c     ****     // 4. Check if a valid face was found in this frame
 1754              		.loc 1 1401 5 view .LVU537
 1755              	.LVL135:
1403:Src/app.c     ****     {
 1756              		.loc 1 1403 5 view .LVU538
1403:Src/app.c     ****     {
 1757              		.loc 1 1403 8 is_stmt 0 view .LVU539
 1758 02ae BCF1FF3F 		cmp	ip, #-1
 1759 02b2 00F08181 		beq	.L88
 1760              	.LBB374:
1406:Src/app.c     ****         
 1761              		.loc 1 1406 9 is_stmt 1 view .LVU540
 1762              	.LVL136:
1409:Src/app.c     **** 
 1763              		.loc 1 1409 9 view .LVU541
ARM GAS  /tmp/cczRRmNE.s 			page 90


1409:Src/app.c     **** 
 1764              		.loc 1 1409 66 is_stmt 0 view .LVU542
 1765 02b6 1823     		movs	r3, #24
 1766 02b8 03FB0C22 		mla	r2, r3, ip, r2
1412:Src/app.c     ****         face_roi.h  = (int)(best_face.height * LCD_BG_HEIGHT);
 1767              		.loc 1 1412 45 view .LVU543
 1768 02bc DFED855A 		vldr.32	s11, .L103+12
 1769 02c0 92ED026A 		vldr.32	s12, [r2, #8]
 1770 02c4 26EE256A 		vmul.f32	s12, s12, s11
1412:Src/app.c     ****         face_roi.h  = (int)(best_face.height * LCD_BG_HEIGHT);
 1771              		.loc 1 1412 23 view .LVU544
 1772 02c8 BDEEC66A 		vcvt.s32.f32	s12, s12
1412:Src/app.c     ****         face_roi.h  = (int)(best_face.height * LCD_BG_HEIGHT);
 1773              		.loc 1 1412 21 view .LVU545
 1774 02cc B8EEC66A 		vcvt.f32.s32	s12, s12
1409:Src/app.c     **** 
 1775              		.loc 1 1409 27 view .LVU546
 1776 02d0 D2ED017A 		vldr.32	s15, [r2, #4]
1412:Src/app.c     ****         face_roi.h  = (int)(best_face.height * LCD_BG_HEIGHT);
 1777              		.loc 1 1412 21 view .LVU547
 1778 02d4 8DED0B6A 		vstr.32	s12, [sp, #44]
1413:Src/app.c     ****         face_roi.cx = (int)(best_face.x_center * LCD_BG_WIDTH);
 1779              		.loc 1 1413 46 view .LVU548
 1780 02d8 9FED7F6A 		vldr.32	s12, .L103+16
1409:Src/app.c     **** 
 1781              		.loc 1 1409 27 view .LVU549
 1782 02dc 92ED007A 		vldr.32	s14, [r2]
 1783              	.LVL137:
1415:Src/app.c     ****         face_roi.rotation = 0.0f;
 1784              		.loc 1 1415 48 view .LVU550
 1785 02e0 67EE867A 		vmul.f32	s15, s15, s12
 1786              	.LVL138:
1409:Src/app.c     **** 
 1787              		.loc 1 1409 27 view .LVU551
 1788 02e4 D2ED036A 		vldr.32	s13, [r2, #12]
 1789              	.LVL139:
1412:Src/app.c     ****         face_roi.h  = (int)(best_face.height * LCD_BG_HEIGHT);
 1790              		.loc 1 1412 9 is_stmt 1 view .LVU552
1413:Src/app.c     ****         face_roi.cx = (int)(best_face.x_center * LCD_BG_WIDTH);
 1791              		.loc 1 1413 9 view .LVU553
1414:Src/app.c     ****         face_roi.cy = (int)(best_face.y_center * LCD_BG_HEIGHT);
 1792              		.loc 1 1414 48 is_stmt 0 view .LVU554
 1793 02e8 27EE257A 		vmul.f32	s14, s14, s11
 1794              	.LVL140:
1413:Src/app.c     ****         face_roi.cx = (int)(best_face.x_center * LCD_BG_WIDTH);
 1795              		.loc 1 1413 46 view .LVU555
 1796 02ec 66EE866A 		vmul.f32	s13, s13, s12
 1797              	.LVL141:
1415:Src/app.c     ****         face_roi.rotation = 0.0f;
 1798              		.loc 1 1415 23 view .LVU556
 1799 02f0 FDEEE77A 		vcvt.s32.f32	s15, s15
1413:Src/app.c     ****         face_roi.cx = (int)(best_face.x_center * LCD_BG_WIDTH);
 1800              		.loc 1 1413 23 view .LVU557
 1801 02f4 FDEEE66A 		vcvt.s32.f32	s13, s13
1415:Src/app.c     ****         face_roi.rotation = 0.0f;
 1802              		.loc 1 1415 21 view .LVU558
 1803 02f8 F8EEE77A 		vcvt.f32.s32	s15, s15
ARM GAS  /tmp/cczRRmNE.s 			page 91


1414:Src/app.c     ****         face_roi.cy = (int)(best_face.y_center * LCD_BG_HEIGHT);
 1804              		.loc 1 1414 23 view .LVU559
 1805 02fc BDEEC77A 		vcvt.s32.f32	s14, s14
1413:Src/app.c     ****         face_roi.cx = (int)(best_face.x_center * LCD_BG_WIDTH);
 1806              		.loc 1 1413 21 view .LVU560
 1807 0300 F8EEE66A 		vcvt.f32.s32	s13, s13
1414:Src/app.c     ****         face_roi.cy = (int)(best_face.y_center * LCD_BG_HEIGHT);
 1808              		.loc 1 1414 21 view .LVU561
 1809 0304 B8EEC77A 		vcvt.f32.s32	s14, s14
1415:Src/app.c     ****         face_roi.rotation = 0.0f;
 1810              		.loc 1 1415 21 view .LVU562
 1811 0308 CDED0A7A 		vstr.32	s15, [sp, #40]
1416:Src/app.c     **** 
 1812              		.loc 1 1416 27 view .LVU563
 1813 030c DFED707A 		vldr.32	s15, .L103+8
1413:Src/app.c     ****         face_roi.cx = (int)(best_face.x_center * LCD_BG_WIDTH);
 1814              		.loc 1 1413 21 view .LVU564
 1815 0310 CDED0C6A 		vstr.32	s13, [sp, #48]
1414:Src/app.c     ****         face_roi.cy = (int)(best_face.y_center * LCD_BG_HEIGHT);
 1816              		.loc 1 1414 9 is_stmt 1 view .LVU565
1414:Src/app.c     ****         face_roi.cy = (int)(best_face.y_center * LCD_BG_HEIGHT);
 1817              		.loc 1 1414 21 is_stmt 0 view .LVU566
 1818 0314 8DED097A 		vstr.32	s14, [sp, #36]
1415:Src/app.c     ****         face_roi.rotation = 0.0f;
 1819              		.loc 1 1415 9 is_stmt 1 view .LVU567
1416:Src/app.c     **** 
 1820              		.loc 1 1416 9 view .LVU568
1416:Src/app.c     **** 
 1821              		.loc 1 1416 27 is_stmt 0 view .LVU569
 1822 0318 CDED0D7A 		vstr.32	s15, [sp, #52]
1419:Src/app.c     ****         is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &face_roi, ld_landmarks[0
 1823              		.loc 1 1419 9 is_stmt 1 view .LVU570
1419:Src/app.c     ****         is_landmark_valid = face_landmark_run(capture_buffer, &face_info, &face_roi, ld_landmarks[0
 1824              		.loc 1 1419 17 is_stmt 0 view .LVU571
 1825 031c FFF7FEFF 		bl	HAL_GetTick
 1826              	.LVL142:
1420:Src/app.c     ****         hl_ms = HAL_GetTick() - hl_ms;
 1827              		.loc 1 1420 9 is_stmt 1 view .LVU572
 1828              	.LBB375:
 1829              	.LBI375:
 975:Src/app.c     ****                              ld_point_t ld_landmarks[LD_LANDMARK_NB])
 1830              		.loc 1 975 12 view .LVU573
 1831              	.LBB376:
 978:Src/app.c     ****   int is_valid;
 1832              		.loc 1 978 3 view .LVU574
 979:Src/app.c     **** 
 1833              		.loc 1 979 3 view .LVU575
 981:Src/app.c     ****   if (is_clamped)
 1834              		.loc 1 981 3 view .LVU576
 1835              	.LBB377:
 1836              	.LBI377:
 904:Src/app.c     **** {
 1837              		.loc 1 904 12 view .LVU577
 1838              	.LBB378:
 906:Src/app.c     ****   int corners[4][2];
 1839              		.loc 1 906 3 view .LVU578
 907:Src/app.c     ****   uint8_t* out_data;
ARM GAS  /tmp/cczRRmNE.s 			page 92


 1840              		.loc 1 907 3 view .LVU579
 908:Src/app.c     ****   size_t height_out;
 1841              		.loc 1 908 3 view .LVU580
 909:Src/app.c     ****   uint8_t *in_data;
 1842              		.loc 1 909 3 view .LVU581
 910:Src/app.c     ****   size_t height_in;
 1843              		.loc 1 910 3 view .LVU582
 911:Src/app.c     ****   size_t width_out;
 1844              		.loc 1 911 3 view .LVU583
 912:Src/app.c     ****   size_t width_in;
 1845              		.loc 1 912 3 view .LVU584
 913:Src/app.c     ****   int is_clamped;
 1846              		.loc 1 913 3 view .LVU585
 914:Src/app.c     **** 
 1847              		.loc 1 914 3 view .LVU586
 917:Src/app.c     ****   width_out = LD_WIDTH;
 1848              		.loc 1 917 3 view .LVU587
 918:Src/app.c     ****   height_out = LD_HEIGHT;
 1849              		.loc 1 918 3 view .LVU588
 919:Src/app.c     **** 
 1850              		.loc 1 919 3 view .LVU589
 921:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 1851              		.loc 1 921 3 view .LVU590
 1852 0320 0EA9     		add	r1, sp, #56
 1853 0322 09A8     		add	r0, sp, #36
 1854              	.LVL143:
 921:Src/app.c     ****   is_clamped = clamp_corners(corners_f, corners);
 1855              		.loc 1 921 3 is_stmt 0 view .LVU591
 1856 0324 FFF7FEFF 		bl	roi_to_corners
 1857              	.LVL144:
 922:Src/app.c     **** 
 1858              		.loc 1 922 3 is_stmt 1 view .LVU592
 922:Src/app.c     **** 
 1859              		.loc 1 922 16 is_stmt 0 view .LVU593
 1860 0328 16A9     		add	r1, sp, #88
 1861 032a 0EA8     		add	r0, sp, #56
 1862              	.LVL145:
 922:Src/app.c     **** 
 1863              		.loc 1 922 16 view .LVU594
 1864 032c FFF7FEFF 		bl	clamp_corners
 1865              	.LVL146:
 925:Src/app.c     ****     int offset_x;
 1866              		.loc 1 925 3 is_stmt 1 view .LVU595
 925:Src/app.c     ****     int offset_x;
 1867              		.loc 1 925 6 is_stmt 0 view .LVU596
 1868 0330 0028     		cmp	r0, #0
 1869 0332 00F08E80 		beq	.L89
 1870              	.LBB379:
 926:Src/app.c     ****     int offset_y;
 1871              		.loc 1 926 5 is_stmt 1 view .LVU597
 927:Src/app.c     **** 
 1872              		.loc 1 927 5 view .LVU598
 930:Src/app.c     **** 
 1873              		.loc 1 930 5 view .LVU599
 1874 0336 0021     		movs	r1, #0
 1875 0338 079A     		ldr	r2, [sp, #28]
 1876 033a 3846     		mov	r0, r7
ARM GAS  /tmp/cczRRmNE.s 			page 93


 1877              	.LVL147:
 930:Src/app.c     **** 
 1878              		.loc 1 930 5 is_stmt 0 view .LVU600
 1879 033c FFF7FEFF 		bl	memset
 1880              	.LVL148:
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1881              		.loc 1 933 5 is_stmt 1 view .LVU601
 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1882              		.loc 1 934 38 is_stmt 0 view .LVU602
 1883 0340 DDED177A 		vldr.32	s15, [sp, #92]	@ int
 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1884              		.loc 1 934 52 view .LVU603
 1885 0344 9DED0F7A 		vldr.32	s14, [sp, #60]
 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1886              		.loc 1 934 38 view .LVU604
 1887 0348 F8EEE77A 		vcvt.f32.s32	s15, s15
 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1888              		.loc 1 934 57 view .LVU605
 1889 034c DFED636A 		vldr.32	s13, .L103+20
 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1890              		.loc 1 934 38 view .LVU606
 1891 0350 77EEC77A 		vsub.f32	s15, s15, s14
 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1892              		.loc 1 934 89 view .LVU607
 1893 0354 9DED136A 		vldr.32	s12, [sp, #76]
 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1894              		.loc 1 934 57 view .LVU608
 1895 0358 67EEA67A 		vmul.f32	s15, s15, s13
 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1896              		.loc 1 934 89 view .LVU609
 1897 035c 36EE476A 		vsub.f32	s12, s12, s14
 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1898              		.loc 1 934 70 view .LVU610
 1899 0360 87EE867A 		vdiv.f32	s14, s15, s12
 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1900              		.loc 1 934 14 view .LVU611
 1901 0364 FDEEC77A 		vcvt.s32.f32	s15, s14
 1902 0368 17EE903A 		vmov	r3, s15	@ int
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1903              		.loc 1 933 38 view .LVU612
 1904 036c DDED167A 		vldr.32	s15, [sp, #88]	@ int
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1905              		.loc 1 933 52 view .LVU613
 1906 0370 9DED0E5A 		vldr.32	s10, [sp, #56]
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1907              		.loc 1 933 38 view .LVU614
 1908 0374 B8EEE77A 		vcvt.f32.s32	s14, s15
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1909              		.loc 1 933 88 view .LVU615
 1910 0378 DDED125A 		vldr.32	s11, [sp, #72]
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1911              		.loc 1 933 38 view .LVU616
 1912 037c 37EE457A 		vsub.f32	s14, s14, s10
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1913              		.loc 1 933 88 view .LVU617
 1914 0380 75EEC55A 		vsub.f32	s11, s11, s10
 1915              	.LVL149:
ARM GAS  /tmp/cczRRmNE.s 			page 94


 934:Src/app.c     ****     out_data += offset_y * (int)LD_WIDTH * DISPLAY_BPP + offset_x * DISPLAY_BPP;
 1916              		.loc 1 934 5 is_stmt 1 view .LVU618
 935:Src/app.c     **** 
 1917              		.loc 1 935 5 view .LVU619
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1918              		.loc 1 933 57 is_stmt 0 view .LVU620
 1919 0384 27EE267A 		vmul.f32	s14, s14, s13
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1920              		.loc 1 933 69 view .LVU621
 1921 0388 C7EE257A 		vdiv.f32	s15, s14, s11
 1922              	.LVL150:
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1923              		.loc 1 933 14 view .LVU622
 1924 038c FDEEE77A 		vcvt.s32.f32	s15, s15
 935:Src/app.c     **** 
 1925              		.loc 1 935 56 view .LVU623
 1926 0390 C020     		movs	r0, #192
 933:Src/app.c     ****     offset_y = (int)(((corners[0][1] - corners_f[0][1]) * LD_HEIGHT) / (corners_f[2][1] - corners_f
 1927              		.loc 1 933 14 view .LVU624
 1928 0392 17EE901A 		vmov	r1, s15	@ int
 935:Src/app.c     **** 
 1929              		.loc 1 935 56 view .LVU625
 1930 0396 00FB0311 		mla	r1, r0, r3, r1
 935:Src/app.c     **** 
 1931              		.loc 1 935 14 view .LVU626
 1932 039a 07EB8103 		add	r3, r7, r1, lsl #2
 938:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1933              		.loc 1 938 38 view .LVU627
 1934 039e 169A     		ldr	r2, [sp, #88]
 935:Src/app.c     **** 
 1935              		.loc 1 935 14 view .LVU628
 1936 03a0 0593     		str	r3, [sp, #20]
 1937              	.LVL151:
 938:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1938              		.loc 1 938 5 is_stmt 1 view .LVU629
 938:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1939              		.loc 1 938 38 is_stmt 0 view .LVU630
 1940 03a2 1A9B     		ldr	r3, [sp, #104]
 1941              	.LVL152:
 939:Src/app.c     **** 
 1942              		.loc 1 939 39 view .LVU631
 1943 03a4 1799     		ldr	r1, [sp, #92]
 938:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1944              		.loc 1 938 38 view .LVU632
 1945 03a6 9B1A     		subs	r3, r3, r2
 938:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1946              		.loc 1 938 55 view .LVU633
 1947 03a8 07EE903A 		vmov	s15, r3	@ int
 1948 03ac F8EEE77A 		vcvt.f32.s32	s15, s15
 1949 03b0 87EEA57A 		vdiv.f32	s14, s15, s11
 938:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1950              		.loc 1 938 93 view .LVU634
 1951 03b4 67EE267A 		vmul.f32	s15, s14, s13
 938:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1952              		.loc 1 938 17 view .LVU635
 1953 03b8 FDEEE77A 		vcvt.s32.f32	s15, s15
 939:Src/app.c     **** 
ARM GAS  /tmp/cczRRmNE.s 			page 95


 1954              		.loc 1 939 39 view .LVU636
 1955 03bc 1B9A     		ldr	r2, [sp, #108]
 938:Src/app.c     ****     height_out = (int)((corners[2][1] - corners[0][1]) / (corners_f[2][1] - corners_f[0][1]) * LD_H
 1956              		.loc 1 938 17 view .LVU637
 1957 03be 17EE903A 		vmov	r3, s15	@ int
 1958              	.LVL153:
 939:Src/app.c     **** 
 1959              		.loc 1 939 5 is_stmt 1 view .LVU638
 939:Src/app.c     **** 
 1960              		.loc 1 939 39 is_stmt 0 view .LVU639
 1961 03c2 521A     		subs	r2, r2, r1
 939:Src/app.c     **** 
 1962              		.loc 1 939 56 view .LVU640
 1963 03c4 07EE902A 		vmov	s15, r2	@ int
 1964 03c8 F8EEE77A 		vcvt.f32.s32	s15, s15
 1965 03cc 87EE867A 		vdiv.f32	s14, s15, s12
 939:Src/app.c     **** 
 1966              		.loc 1 939 94 view .LVU641
 1967 03d0 67EE267A 		vmul.f32	s15, s14, s13
 939:Src/app.c     **** 
 1968              		.loc 1 939 18 view .LVU642
 1969 03d4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1970 03d8 17EE902A 		vmov	r2, s15	@ int
 1971              	.LVL154:
 941:Src/app.c     ****     assert(height_out > 0);
 1972              		.loc 1 941 5 is_stmt 1 view .LVU643
 1973 03dc D3B9     		cbnz	r3, .L73
 941:Src/app.c     ****     assert(height_out > 0);
 1974              		.loc 1 941 5 is_stmt 0 discriminator 1 view .LVU644
 1975 03de 40F2AD31 		movw	r1, #941
 1976 03e2 3F4B     		ldr	r3, .L103+24
 1977              	.LVL155:
 941:Src/app.c     ****     assert(height_out > 0);
 1978              		.loc 1 941 5 discriminator 1 view .LVU645
 1979 03e4 3F4A     		ldr	r2, .L103+28
 1980              	.LVL156:
 941:Src/app.c     ****     assert(height_out > 0);
 1981              		.loc 1 941 5 discriminator 1 view .LVU646
 1982 03e6 3CE6     		b	.L100
 1983              	.LVL157:
 1984              	.L67:
 941:Src/app.c     ****     assert(height_out > 0);
 1985              		.loc 1 941 5 discriminator 1 view .LVU647
 1986              	.LBE379:
 1987              	.LBE378:
 1988              	.LBE377:
 1989              	.LBE376:
 1990              	.LBE375:
 1991              	.LBE374:
1382:Src/app.c     ****     // NEW: Loop through all detections to find the highest confidence score
 1992              		.loc 1 1382 5 discriminator 1 view .LVU648
 1993 03e8 40F26651 		movw	r1, #1382
 1994 03ec 3E4B     		ldr	r3, .L103+32
 1995 03ee 3F4A     		ldr	r2, .L103+36
 1996 03f0 37E6     		b	.L100
 1997              	.LVL158:
 1998              	.L70:
ARM GAS  /tmp/cczRRmNE.s 			page 96


 1999              	.LBB403:
1389:Src/app.c     ****         {
 2000              		.loc 1 1389 9 is_stmt 1 view .LVU649
1389:Src/app.c     ****         {
 2001              		.loc 1 1389 12 is_stmt 0 view .LVU650
 2002 03f2 4869     		ldr	r0, [r1, #20]
 2003 03f4 0228     		cmp	r0, #2
 2004 03f6 09D1     		bne	.L69
1392:Src/app.c     ****             {
 2005              		.loc 1 1392 13 is_stmt 1 view .LVU651
1392:Src/app.c     ****             {
 2006              		.loc 1 1392 47 is_stmt 0 view .LVU652
 2007 03f8 D1ED047A 		vldr.32	s15, [r1, #16]
1392:Src/app.c     ****             {
 2008              		.loc 1 1392 16 view .LVU653
 2009 03fc F4EEC87A 		vcmpe.f32	s15, s16
 2010 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1395:Src/app.c     ****                 best_face_idx = i;
 2011              		.loc 1 1395 32 view .LVU654
 2012 0404 C4BF     		itt	gt
 2013 0406 B0EE678A 		vmovgt.f32	s16, s15
 2014              	.LVL159:
1396:Src/app.c     ****             }
 2015              		.loc 1 1396 31 view .LVU655
 2016 040a F446     		movgt	ip, lr
 2017              	.L69:
 2018              	.LVL160:
1386:Src/app.c     ****     {
 2019              		.loc 1 1386 56 is_stmt 1 discriminator 2 view .LVU656
 2020 040c 0EF1010E 		add	lr, lr, #1
 2021              	.LVL161:
1386:Src/app.c     ****     {
 2022              		.loc 1 1386 56 is_stmt 0 discriminator 2 view .LVU657
 2023 0410 1831     		adds	r1, r1, #24
 2024 0412 49E7     		b	.L68
 2025              	.LVL162:
 2026              	.L73:
1386:Src/app.c     ****     {
 2027              		.loc 1 1386 56 discriminator 2 view .LVU658
 2028              	.LBE403:
 2029              	.LBB404:
 2030              	.LBB402:
 2031              	.LBB401:
 2032              	.LBB384:
 2033              	.LBB383:
 2034              	.LBB381:
 942:Src/app.c     ****     {
 2035              		.loc 1 942 5 is_stmt 1 view .LVU659
 2036 0414 22B9     		cbnz	r2, .L74
 942:Src/app.c     ****     {
 2037              		.loc 1 942 5 is_stmt 0 discriminator 1 view .LVU660
 2038 0416 40F2AE31 		movw	r1, #942
 2039 041a 354B     		ldr	r3, .L103+40
 2040              	.LVL163:
 942:Src/app.c     ****     {
 2041              		.loc 1 942 5 discriminator 1 view .LVU661
 2042 041c 314A     		ldr	r2, .L103+28
ARM GAS  /tmp/cczRRmNE.s 			page 97


 2043              	.LVL164:
 942:Src/app.c     ****     {
 2044              		.loc 1 942 5 discriminator 1 view .LVU662
 2045 041e 20E6     		b	.L100
 2046              	.LVL165:
 2047              	.L74:
 2048              	.LBB380:
 944:Src/app.c     **** 
 2049              		.loc 1 944 7 is_stmt 1 view .LVU663
 946:Src/app.c     **** 
 2050              		.loc 1 946 7 view .LVU664
 946:Src/app.c     **** 
 2051              		.loc 1 946 80 is_stmt 0 view .LVU665
 2052 0420 00FB0230 		mla	r0, r0, r2, r3
 946:Src/app.c     **** 
 2053              		.loc 1 946 106 view .LVU666
 2054 0424 0599     		ldr	r1, [sp, #20]
 2055 0426 01EB8000 		add	r0, r1, r0, lsl #2
 946:Src/app.c     **** 
 2056              		.loc 1 946 20 view .LVU667
 2057 042a 6FF44071 		mvn	r1, #768
 2058 042e 0844     		add	r0, r0, r1
 2059              	.LVL166:
 948:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 2060              		.loc 1 948 7 is_stmt 1 view .LVU668
 2061 0430 8742     		cmp	r7, r0
 2062 0432 04D9     		bls	.L75
 948:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 2063              		.loc 1 948 7 is_stmt 0 discriminator 1 view .LVU669
 2064 0434 4FF46D71 		mov	r1, #948
 2065 0438 2E4B     		ldr	r3, .L103+44
 2066              	.LVL167:
 948:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 2067              		.loc 1 948 7 discriminator 1 view .LVU670
 2068 043a 2A4A     		ldr	r2, .L103+28
 2069              	.LVL168:
 948:Src/app.c     ****       assert(out_data_end < info->nn_in + info->nn_in_len);
 2070              		.loc 1 948 7 discriminator 1 view .LVU671
 2071 043c 11E6     		b	.L100
 2072              	.LVL169:
 2073              	.L75:
 949:Src/app.c     ****     }
 2074              		.loc 1 949 7 is_stmt 1 view .LVU672
 2075 043e 0799     		ldr	r1, [sp, #28]
 2076 0440 07EB010C 		add	ip, r7, r1
 2077 0444 6045     		cmp	r0, ip
 2078 0446 07D3     		bcc	.L72
 949:Src/app.c     ****     }
 2079              		.loc 1 949 7 is_stmt 0 discriminator 1 view .LVU673
 2080 0448 40F2B531 		movw	r1, #949
 2081 044c 2A4B     		ldr	r3, .L103+48
 2082              	.LVL170:
 949:Src/app.c     ****     }
 2083              		.loc 1 949 7 discriminator 1 view .LVU674
 2084 044e 254A     		ldr	r2, .L103+28
 2085              	.LVL171:
 949:Src/app.c     ****     }
ARM GAS  /tmp/cczRRmNE.s 			page 98


 2086              		.loc 1 949 7 discriminator 1 view .LVU675
 2087 0450 07E6     		b	.L100
 2088              	.LVL172:
 2089              	.L89:
 949:Src/app.c     ****     }
 2090              		.loc 1 949 7 discriminator 1 view .LVU676
 2091              	.LBE380:
 2092              	.LBE381:
 918:Src/app.c     ****   height_out = LD_HEIGHT;
 2093              		.loc 1 918 13 view .LVU677
 2094 0452 C023     		movs	r3, #192
 919:Src/app.c     **** 
 2095              		.loc 1 919 14 view .LVU678
 2096 0454 1A46     		mov	r2, r3
 917:Src/app.c     ****   width_out = LD_WIDTH;
 2097              		.loc 1 917 12 view .LVU679
 2098 0456 0597     		str	r7, [sp, #20]
 2099              	.LVL173:
 2100              	.L72:
 953:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2101              		.loc 1 953 3 is_stmt 1 view .LVU680
 953:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2102              		.loc 1 953 51 is_stmt 0 view .LVU681
 2103 0458 4FF4486C 		mov	ip, #3200
 953:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2104              		.loc 1 953 77 view .LVU682
 2105 045c DDE916EA 		ldrd	lr, r10, [sp, #88]
 955:Src/app.c     **** 
 2106              		.loc 1 955 29 view .LVU683
 2107 0460 1B99     		ldr	r1, [sp, #108]
 953:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2108              		.loc 1 953 80 view .LVU684
 2109 0462 4FEA8E00 		lsl	r0, lr, #2
 953:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2110              		.loc 1 953 65 view .LVU685
 2111 0466 0CFB0A00 		mla	r0, ip, r10, r0
 955:Src/app.c     **** 
 2112              		.loc 1 955 29 view .LVU686
 2113 046a A1EB0A0A 		sub	r10, r1, r10
 957:Src/app.c     ****   assert(height_in > 0);
 2114              		.loc 1 957 3 view .LVU687
 2115 046e 1A99     		ldr	r1, [sp, #104]
 953:Src/app.c     ****   width_in = corners[2][0] - corners[0][0];
 2116              		.loc 1 953 11 view .LVU688
 2117 0470 2844     		add	r0, r0, r5
 2118              	.LVL174:
 954:Src/app.c     ****   height_in = corners[2][1] - corners[0][1];
 2119              		.loc 1 954 3 is_stmt 1 view .LVU689
 955:Src/app.c     **** 
 2120              		.loc 1 955 3 view .LVU690
 957:Src/app.c     ****   assert(height_in > 0);
 2121              		.loc 1 957 3 view .LVU691
 2122 0472 B1EB0E01 		subs	r1, r1, lr
 2123              	.LVL175:
 957:Src/app.c     ****   assert(height_in > 0);
 2124              		.loc 1 957 3 is_stmt 0 view .LVU692
 2125 0476 04D1     		bne	.L76
ARM GAS  /tmp/cczRRmNE.s 			page 99


 957:Src/app.c     ****   assert(height_in > 0);
 2126              		.loc 1 957 3 discriminator 1 view .LVU693
 2127 0478 40F2BD31 		movw	r1, #957
 2128              	.LVL176:
 957:Src/app.c     ****   assert(height_in > 0);
 2129              		.loc 1 957 3 discriminator 1 view .LVU694
 2130 047c 1F4B     		ldr	r3, .L103+52
 2131              	.LVL177:
 957:Src/app.c     ****   assert(height_in > 0);
 2132              		.loc 1 957 3 discriminator 1 view .LVU695
 2133 047e 194A     		ldr	r2, .L103+28
 2134              	.LVL178:
 957:Src/app.c     ****   assert(height_in > 0);
 2135              		.loc 1 957 3 discriminator 1 view .LVU696
 2136 0480 EFE5     		b	.L100
 2137              	.LVL179:
 2138              	.L76:
 958:Src/app.c     ****   {
 2139              		.loc 1 958 3 is_stmt 1 view .LVU697
 2140 0482 BAF1000F 		cmp	r10, #0
 2141 0486 04D1     		bne	.L77
 958:Src/app.c     ****   {
 2142              		.loc 1 958 3 is_stmt 0 discriminator 1 view .LVU698
 2143 0488 40F2BE31 		movw	r1, #958
 2144              	.LVL180:
 958:Src/app.c     ****   {
 2145              		.loc 1 958 3 discriminator 1 view .LVU699
 2146 048c 1C4B     		ldr	r3, .L103+56
 2147              	.LVL181:
 958:Src/app.c     ****   {
 2148              		.loc 1 958 3 discriminator 1 view .LVU700
 2149 048e 154A     		ldr	r2, .L103+28
 2150              	.LVL182:
 958:Src/app.c     ****   {
 2151              		.loc 1 958 3 discriminator 1 view .LVU701
 2152 0490 E7E5     		b	.L100
 2153              	.LVL183:
 2154              	.L77:
 2155              	.LBB382:
 960:Src/app.c     **** 
 2156              		.loc 1 960 5 is_stmt 1 view .LVU702
 962:Src/app.c     **** 
 2157              		.loc 1 962 5 view .LVU703
 962:Src/app.c     **** 
 2158              		.loc 1 962 74 is_stmt 0 view .LVU704
 2159 0492 4FF4487E 		mov	lr, #800
 2160 0496 0EFB0A1E 		mla	lr, lr, r10, r1
 962:Src/app.c     **** 
 2161              		.loc 1 962 99 view .LVU705
 2162 049a 00EB8E0E 		add	lr, r0, lr, lsl #2
 962:Src/app.c     **** 
 2163              		.loc 1 962 17 view .LVU706
 2164 049e AEF6814E 		subw	lr, lr, #3201
 2165              	.LVL184:
 964:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2166              		.loc 1 964 5 is_stmt 1 view .LVU707
 2167 04a2 7545     		cmp	r5, lr
ARM GAS  /tmp/cczRRmNE.s 			page 100


 2168 04a4 04D9     		bls	.L78
 964:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2169              		.loc 1 964 5 is_stmt 0 discriminator 1 view .LVU708
 2170 04a6 4FF47171 		mov	r1, #964
 2171              	.LVL185:
 964:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2172              		.loc 1 964 5 discriminator 1 view .LVU709
 2173 04aa 164B     		ldr	r3, .L103+60
 2174              	.LVL186:
 964:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2175              		.loc 1 964 5 discriminator 1 view .LVU710
 2176 04ac 0D4A     		ldr	r2, .L103+28
 2177              	.LVL187:
 964:Src/app.c     ****     assert(in_data_end < buffer + LCD_BG_WIDTH * LCD_BG_HEIGHT * DISPLAY_BPP);
 2178              		.loc 1 964 5 discriminator 1 view .LVU711
 2179 04ae D8E5     		b	.L100
 2180              	.LVL188:
 2181              	.L78:
 965:Src/app.c     ****   }
 2182              		.loc 1 965 5 is_stmt 1 view .LVU712
 2183 04b0 05F5BB15 		add	r5, r5, #1531904
 2184              	.LVL189:
 965:Src/app.c     ****   }
 2185              		.loc 1 965 5 is_stmt 0 view .LVU713
 2186 04b4 05F58055 		add	r5, r5, #4096
 2187              	.LVL190:
 965:Src/app.c     ****   }
 2188              		.loc 1 965 5 view .LVU714
 2189 04b8 AE45     		cmp	lr, r5
 2190 04ba 27D3     		bcc	.L79
 965:Src/app.c     ****   }
 2191              		.loc 1 965 5 discriminator 1 view .LVU715
 2192 04bc 40F2C531 		movw	r1, #965
 2193              	.LVL191:
 965:Src/app.c     ****   }
 2194              		.loc 1 965 5 discriminator 1 view .LVU716
 2195 04c0 114B     		ldr	r3, .L103+64
 2196              	.LVL192:
 965:Src/app.c     ****   }
 2197              		.loc 1 965 5 discriminator 1 view .LVU717
 2198 04c2 084A     		ldr	r2, .L103+28
 2199              	.LVL193:
 965:Src/app.c     ****   }
 2200              		.loc 1 965 5 discriminator 1 view .LVU718
 2201 04c4 CDE5     		b	.L100
 2202              	.L104:
 2203 04c6 00BF     		.align	2
 2204              	.L103:
 2205 04c8 00000000 		.word	NN_Instance_yolo_detector
 2206 04cc 00ED00E0 		.word	-536810240
 2207 04d0 00000000 		.word	0
 2208 04d4 00004844 		.word	1145569280
 2209 04d8 0000F043 		.word	1139802112
 2210 04dc 00004043 		.word	1128267776
 2211 04e0 97000000 		.word	.LC10
 2212 04e4 00000000 		.word	__func__.7
 2213 04e8 00000000 		.word	.LC1
ARM GAS  /tmp/cczRRmNE.s 			page 101


 2214 04ec 00000000 		.word	__func__.12
 2215 04f0 A5000000 		.word	.LC11
 2216 04f4 B4000000 		.word	.LC12
 2217 04f8 D0000000 		.word	.LC13
 2218 04fc FD000000 		.word	.LC14
 2219 0500 0A010000 		.word	.LC15
 2220 0504 18010000 		.word	.LC16
 2221 0508 2E010000 		.word	.LC17
 2222              	.LVL194:
 2223              	.L79:
 965:Src/app.c     ****   }
 2224              		.loc 1 965 5 discriminator 1 view .LVU719
 2225              	.LBE382:
 968:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2226              		.loc 1 968 3 is_stmt 1 view .LVU720
 2227 050c CDE90232 		strd	r3, r2, [sp, #8]
 2228 0510 0091     		str	r1, [sp]
 2229 0512 4FF44073 		mov	r3, #768
 2230              	.LVL195:
 968:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2231              		.loc 1 968 3 is_stmt 0 view .LVU721
 2232 0516 0599     		ldr	r1, [sp, #20]
 2233              	.LVL196:
 968:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2234              		.loc 1 968 3 view .LVU722
 2235 0518 6246     		mov	r2, ip
 2236              	.LVL197:
 968:Src/app.c     ****                                               width_in, height_in, width_out, height_out);
 2237              		.loc 1 968 3 view .LVU723
 2238 051a CDF804A0 		str	r10, [sp, #4]
 2239 051e FFF7FEFF 		bl	IPL_resize_bilinear_iu8ou8_with_strides_RGB
 2240              	.LVL198:
 971:Src/app.c     **** }
 2241              		.loc 1 971 3 is_stmt 1 view .LVU724
 971:Src/app.c     **** }
 2242              		.loc 1 971 3 is_stmt 0 view .LVU725
 2243              	.LBE383:
 2244              	.LBE384:
 982:Src/app.c     ****     return 0;
 2245              		.loc 1 982 3 is_stmt 1 view .LVU726
 985:Src/app.c     **** 
 2246              		.loc 1 985 3 view .LVU727
 2247 0522 5148     		ldr	r0, .L105
 2248 0524 FFF7FEFF 		bl	LL_ATON_RT_Main
 2249              	.LVL199:
 987:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2250              		.loc 1 987 3 view .LVU728
 987:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2251              		.loc 1 987 3 view .LVU729
 987:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2252              		.loc 1 987 3 discriminator 1 view .LVU730
 2253              	.LBB385:
 2254              	.LBI385:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2255              		.loc 3 358 27 view .LVU731
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2256              		.loc 3 361 5 view .LVU732
ARM GAS  /tmp/cczRRmNE.s 			page 102


 2257              	.LBB386:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2258              		.loc 3 362 8 view .LVU733
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2259              		.loc 3 362 36 is_stmt 0 view .LVU734
 2260 0528 5946     		mov	r1, fp
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2261              		.loc 3 362 52 view .LVU735
 2262 052a 0BF01F03 		and	r3, fp, #31
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2263              		.loc 3 363 7 is_stmt 1 view .LVU736
 2264              	.LVL200:
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2265              		.loc 3 365 7 view .LVU737
 2266              	.LBB387:
 2267              	.LBI387:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2268              		.loc 4 269 27 view .LVU738
 2269              	.LBB388:
 2270              		.loc 4 271 3 view .LVU739
 2271              		.syntax unified
 2272              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2273 052e BFF34F8F 		dsb 0xF
 2274              	@ 0 "" 2
 2275              		.thumb
 2276              		.syntax unified
 2277 0532 D81C     		adds	r0, r3, #3
 2278 0534 1C3B     		subs	r3, r3, #28
 2279 0536 4009     		lsrs	r0, r0, #5
 2280 0538 2033     		adds	r3, r3, #32
 2281 053a 00F1010E 		add	lr, r0, #1
 2282 053e D8BF     		it	le
 2283 0540 4FF0010E 		movle	lr, #1
 2284 0544 4EF001E0 		dls	lr, lr
 2285              	.LBE388:
 2286              	.LBE387:
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2287              		.loc 3 368 22 is_stmt 0 view .LVU740
 2288 0548 484A     		ldr	r2, .L105+4
 2289              	.LVL201:
 2290              	.L80:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2291              		.loc 3 367 7 is_stmt 1 view .LVU741
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2292              		.loc 3 368 9 view .LVU742
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2293              		.loc 3 368 22 is_stmt 0 view .LVU743
 2294 054a C2F85C12 		str	r1, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2295              		.loc 3 369 9 is_stmt 1 view .LVU744
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2296              		.loc 3 369 17 is_stmt 0 view .LVU745
 2297 054e 2031     		adds	r1, r1, #32
 2298              	.LVL202:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2299              		.loc 3 370 9 is_stmt 1 view .LVU746
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/cczRRmNE.s 			page 103


 2300              		.loc 3 371 25 discriminator 1 view .LVU747
 2301 0550 0FF005C8 		le	lr, .L80
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2302              		.loc 3 373 7 view .LVU748
 2303              	.LBB389:
 2304              	.LBI389:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2305              		.loc 4 269 27 view .LVU749
 2306              	.LBB390:
 2307              		.loc 4 271 3 view .LVU750
 2308              		.syntax unified
 2309              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2310 0554 BFF34F8F 		dsb 0xF
 2311              	@ 0 "" 2
 2312              		.thumb
 2313              		.syntax unified
 2314              	.LBE390:
 2315              	.LBE389:
 2316              		.loc 3 374 7 view .LVU751
 2317              	.LBB391:
 2318              	.LBI391:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2319              		.loc 4 258 27 view .LVU752
 2320              	.LBB392:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2321              		.loc 4 260 3 view .LVU753
 2322              		.syntax unified
 2323              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2324 0558 BFF36F8F 		isb 0xF
 2325              	@ 0 "" 2
 2326              	.LVL203:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2327              		.loc 4 260 3 is_stmt 0 view .LVU754
 2328              		.thumb
 2329              		.syntax unified
 2330              	.LBE392:
 2331              	.LBE391:
 2332              	.LBE386:
 2333              	.LBE385:
 987:Src/app.c     ****   CACHE_OP(SCB_InvalidateDCache_by_Addr(info->landmarks_out, info->landmarks_out_len));
 2334              		.loc 1 987 3 is_stmt 1 discriminator 3 view .LVU755
 988:Src/app.c     ****   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
 2335              		.loc 1 988 3 view .LVU756
 988:Src/app.c     ****   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
 2336              		.loc 1 988 3 view .LVU757
 988:Src/app.c     ****   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
 2337              		.loc 1 988 3 discriminator 1 view .LVU758
 2338              	.LBB393:
 2339              	.LBI393:
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 2340              		.loc 3 358 27 view .LVU759
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 2341              		.loc 3 361 5 view .LVU760
 2342              	.LBB394:
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2343              		.loc 3 362 8 view .LVU761
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
ARM GAS  /tmp/cczRRmNE.s 			page 104


 2344              		.loc 3 362 52 is_stmt 0 view .LVU762
 2345 055c 09F01F0E 		and	lr, r9, #31
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2346              		.loc 3 362 32 view .LVU763
 2347 0560 0EF5AF5E 		add	lr, lr, #5600
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2348              		.loc 3 362 36 view .LVU764
 2349 0564 4B46     		mov	r3, r9
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 2350              		.loc 3 362 32 view .LVU765
 2351 0566 0EF1100E 		add	lr, lr, #16
 2352              	.LVL204:
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2353              		.loc 3 363 7 is_stmt 1 view .LVU766
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 2354              		.loc 3 365 7 view .LVU767
 2355              	.LBB395:
 2356              	.LBI395:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2357              		.loc 4 269 27 view .LVU768
 2358              	.LBB396:
 2359              		.loc 4 271 3 view .LVU769
 2360              		.syntax unified
 2361              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2362 056a BFF34F8F 		dsb 0xF
 2363              	@ 0 "" 2
 2364              		.thumb
 2365              		.syntax unified
 2366 056e 0EF1FF3E 		add	lr, lr, #-1
 2367              	.LVL205:
 2368              		.loc 4 271 3 is_stmt 0 view .LVU770
 2369 0572 4FEA5E1E 		lsr	lr, lr, #5
 2370              	.LVL206:
 2371              		.loc 4 271 3 view .LVU771
 2372 0576 0EF1010E 		add	lr, lr, #1
 2373 057a 4EF001E0 		dls	lr, lr
 2374              	.LVL207:
 2375              	.L81:
 2376              		.loc 4 271 3 view .LVU772
 2377              	.LBE396:
 2378              	.LBE395:
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 2379              		.loc 3 367 7 is_stmt 1 view .LVU773
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2380              		.loc 3 368 9 view .LVU774
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 2381              		.loc 3 368 22 is_stmt 0 view .LVU775
 2382 057e C2F85C32 		str	r3, [r2, #604]
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2383              		.loc 3 369 9 is_stmt 1 view .LVU776
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 2384              		.loc 3 369 17 is_stmt 0 view .LVU777
 2385 0582 2033     		adds	r3, r3, #32
 2386              	.LVL208:
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 2387              		.loc 3 370 9 is_stmt 1 view .LVU778
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
ARM GAS  /tmp/cczRRmNE.s 			page 105


 2388              		.loc 3 371 25 discriminator 1 view .LVU779
 2389 0584 0FF005C8 		le	lr, .L81
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 2390              		.loc 3 373 7 view .LVU780
 2391              	.LBB397:
 2392              	.LBI397:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2393              		.loc 4 269 27 view .LVU781
 2394              	.LBB398:
 2395              		.loc 4 271 3 view .LVU782
 2396              		.syntax unified
 2397              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2398 0588 BFF34F8F 		dsb 0xF
 2399              	@ 0 "" 2
 2400              		.thumb
 2401              		.syntax unified
 2402              	.LBE398:
 2403              	.LBE397:
 2404              		.loc 3 374 7 view .LVU783
 2405              	.LBB399:
 2406              	.LBI399:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2407              		.loc 4 258 27 view .LVU784
 2408              	.LBB400:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2409              		.loc 4 260 3 view .LVU785
 2410              		.syntax unified
 2411              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2412 058c BFF36F8F 		isb 0xF
 2413              	@ 0 "" 2
 2414              	.LVL209:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2415              		.loc 4 260 3 is_stmt 0 view .LVU786
 2416              		.thumb
 2417              		.syntax unified
 2418              	.LBE400:
 2419              	.LBE399:
 2420              	.LBE394:
 2421              	.LBE393:
 988:Src/app.c     ****   is_valid = ld_post_process(info->prob_out, info->landmarks_out, ld_landmarks);
 2422              		.loc 1 988 3 is_stmt 1 discriminator 3 view .LVU787
 989:Src/app.c     **** 
 2423              		.loc 1 989 3 view .LVU788
 989:Src/app.c     **** 
 2424              		.loc 1 989 14 is_stmt 0 view .LVU789
 2425 0590 374A     		ldr	r2, .L105+8
 2426 0592 4946     		mov	r1, r9
 2427 0594 5846     		mov	r0, fp
 2428 0596 FFF7FEFF 		bl	ld_post_process
 2429              	.LVL210:
 991:Src/app.c     **** }
 2430              		.loc 1 991 3 is_stmt 1 view .LVU790
 991:Src/app.c     **** }
 2431              		.loc 1 991 3 is_stmt 0 view .LVU791
 2432              	.LBE401:
 2433              	.LBE402:
1421:Src/app.c     ****     }
ARM GAS  /tmp/cczRRmNE.s 			page 106


 2434              		.loc 1 1421 9 is_stmt 1 view .LVU792
1421:Src/app.c     ****     }
 2435              		.loc 1 1421 17 is_stmt 0 view .LVU793
 2436 059a FFF7FEFF 		bl	HAL_GetTick
 2437              	.LVL211:
 2438              	.L71:
1421:Src/app.c     ****     }
 2439              		.loc 1 1421 17 view .LVU794
 2440              	.LBE404:
1429:Src/app.c     ****     ld_filtered_ms = USE_FILTERED_TS ? (7 * ld_filtered_ms + hl_ms) / 8 : hl_ms;
 2441              		.loc 1 1429 5 is_stmt 1 view .LVU795
1430:Src/app.c     **** 
 2442              		.loc 1 1430 5 view .LVU796
1433:Src/app.c     ****     int8_t* landmarks_raw_int_ptr = (int8_t*)face_info.landmarks_out;
 2443              		.loc 1 1433 5 view .LVU797
 2444              	.LBB405:
 2445              	.LBI405:
 504:Src/app.c     **** {
 2446              		.loc 1 504 13 view .LVU798
 2447              	.LBB406:
 506:Src/app.c     **** 
 2448              		.loc 1 506 3 view .LVU799
 508:Src/app.c     ****   assert(ret == pdTRUE);
 2449              		.loc 1 508 3 view .LVU800
 508:Src/app.c     ****   assert(ret == pdTRUE);
 2450              		.loc 1 508 9 is_stmt 0 view .LVU801
 2451 059e 0023     		movs	r3, #0
 2452 05a0 2068     		ldr	r0, [r4]
 2453 05a2 1A46     		mov	r2, r3
 2454 05a4 1946     		mov	r1, r3
 2455 05a6 FFF7FEFF 		bl	xQueueGenericSend
 2456              	.LVL212:
 509:Src/app.c     **** }
 2457              		.loc 1 509 3 is_stmt 1 view .LVU802
 2458 05aa 0128     		cmp	r0, #1
 2459 05ac 07D0     		beq	.L82
 509:Src/app.c     **** }
 2460              		.loc 1 509 3 is_stmt 0 discriminator 1 view .LVU803
 2461 05ae 40F2FD11 		movw	r1, #509
 2462 05b2 304B     		ldr	r3, .L105+12
 2463 05b4 304A     		ldr	r2, .L105+16
 2464 05b6 54E5     		b	.L100
 2465              	.LVL213:
 2466              	.L88:
 509:Src/app.c     **** }
 2467              		.loc 1 509 3 discriminator 1 view .LVU804
 2468              	.LBE406:
 2469              	.LBE405:
1426:Src/app.c     ****     }
 2470              		.loc 1 1426 25 view .LVU805
 2471 05b8 4FF00008 		mov	r8, #0
 2472              	.LVL214:
1426:Src/app.c     ****     }
 2473              		.loc 1 1426 25 view .LVU806
 2474 05bc EFE7     		b	.L71
 2475              	.LVL215:
 2476              	.L82:
ARM GAS  /tmp/cczRRmNE.s 			page 107


1434:Src/app.c     **** 
 2477              		.loc 1 1434 5 is_stmt 1 view .LVU807
1437:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 2478              		.loc 1 1437 5 view .LVU808
1437:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 2479              		.loc 1 1437 44 is_stmt 0 view .LVU809
 2480 05be DFED2F7A 		vldr.32	s15, .L105+20
 2481 05c2 28EE278A 		vmul.f32	s16, s16, s15
 2482              	.LVL216:
1439:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 2483              		.loc 1 1439 26 view .LVU810
 2484 05c6 2B9B     		ldr	r3, [sp, #172]
1437:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 2485              		.loc 1 1437 23 view .LVU811
 2486 05c8 BDEEC88A 		vcvt.s32.f32	s16, s16
1440:Src/app.c     ****     //disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2487              		.loc 1 1440 27 view .LVU812
 2488 05cc DFED2C7A 		vldr.32	s15, .L105+24
1439:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 2489              		.loc 1 1439 26 view .LVU813
 2490 05d0 C6F8C430 		str	r3, [r6, #196]
1442:Src/app.c     ****     // NOTE: We no longer copy box or landmark data, as none exists.
 2491              		.loc 1 1442 33 view .LVU814
 2492 05d4 0023     		movs	r3, #0
1437:Src/app.c     ****     disp.info.nn_period_ms = nn_period_filtered_ms;
 2493              		.loc 1 1437 23 view .LVU815
 2494 05d6 86ED2B8A 		vstr.32	s16, [r6, #172]	@ int
1438:Src/app.c     ****     disp.info.pd_hand_nb = yolo_info.yolo_out.nb_detect;
 2495              		.loc 1 1438 5 is_stmt 1 view .LVU816
1438:Src/app.c     ****     disp.info.pd_hand_nb = yolo_info.yolo_out.nb_detect;
 2496              		.loc 1 1438 28 is_stmt 0 view .LVU817
 2497 05da C6ED2A8A 		vstr.32	s17, [r6, #168]
1439:Src/app.c     ****     disp.info.pd_max_prob = 0.0f;
 2498              		.loc 1 1439 5 is_stmt 1 view .LVU818
1440:Src/app.c     ****     //disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2499              		.loc 1 1440 5 view .LVU819
1440:Src/app.c     ****     //disp.info.hands[0].is_valid = is_landmark_valid; // Set hand as invalid
 2500              		.loc 1 1440 27 is_stmt 0 view .LVU820
 2501 05de C6ED327A 		vstr.32	s15, [r6, #200]
1442:Src/app.c     ****     // NOTE: We no longer copy box or landmark data, as none exists.
 2502              		.loc 1 1442 5 is_stmt 1 view .LVU821
1442:Src/app.c     ****     // NOTE: We no longer copy box or landmark data, as none exists.
 2503              		.loc 1 1442 33 is_stmt 0 view .LVU822
 2504 05e2 C6F8CC30 		str	r3, [r6, #204]
1445:Src/app.c     ****     {
 2505              		.loc 1 1445 5 is_stmt 1 view .LVU823
1445:Src/app.c     ****     {
 2506              		.loc 1 1445 8 is_stmt 0 view .LVU824
 2507 05e6 B8F1000F 		cmp	r8, #0
 2508 05ea 32D0     		beq	.L83
 2509              	.LBB407:
1448:Src/app.c     **** 
 2510              		.loc 1 1448 7 is_stmt 1 view .LVU825
1452:Src/app.c     **** 
 2511              		.loc 1 1452 50 is_stmt 0 view .LVU826
 2512 05ec 9DED0B7A 		vldr.32	s14, [sp, #44]
1452:Src/app.c     **** 
ARM GAS  /tmp/cczRRmNE.s 			page 108


 2513              		.loc 1 1452 13 view .LVU827
 2514 05f0 B6EE006A 		vmov.f32	s12, #5.0e-1
 2515 05f4 DDED097A 		vldr.32	s15, [sp, #36]
1457:Src/app.c     **** 
 2516              		.loc 1 1457 67 view .LVU828
 2517 05f8 DFED225A 		vldr.32	s11, .L105+28
1448:Src/app.c     **** 
 2518              		.loc 1 1448 13 view .LVU829
 2519 05fc DFF870E0 		ldr	lr, .L105+8
1452:Src/app.c     **** 
 2520              		.loc 1 1452 13 view .LVU830
 2521 0600 E7EE467A 		vfms.f32	s15, s14, s12
1448:Src/app.c     **** 
 2522              		.loc 1 1448 13 view .LVU831
 2523 0604 DEED086A 		vldr.32	s13, [lr, #32]
 2524              	.LVL217:
1452:Src/app.c     **** 
 2525              		.loc 1 1452 7 is_stmt 1 view .LVU832
1457:Src/app.c     **** 
 2526              		.loc 1 1457 7 view .LVU833
1460:Src/app.c     **** 
 2527              		.loc 1 1460 7 view .LVU834
1457:Src/app.c     **** 
 2528              		.loc 1 1457 67 is_stmt 0 view .LVU835
 2529 0608 87EE256A 		vdiv.f32	s12, s14, s11
1460:Src/app.c     **** 
 2530              		.loc 1 1460 46 view .LVU836
 2531 060c E6EE267A 		vfma.f32	s15, s12, s13
 2532              	.LVL218:
1463:Src/app.c     **** 
 2533              		.loc 1 1463 7 is_stmt 1 view .LVU837
1468:Src/app.c     **** 
 2534              		.loc 1 1468 30 is_stmt 0 view .LVU838
 2535 0610 1D4D     		ldr	r5, .L105+32
 2536 0612 0DF1240C 		add	ip, sp, #36
 2537              	.LVL219:
1468:Src/app.c     **** 
 2538              		.loc 1 1468 30 view .LVU839
 2539 0616 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2540              	.LVL220:
1468:Src/app.c     **** 
 2541              		.loc 1 1468 30 view .LVU840
 2542 061a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2543 061c 2846     		mov	r0, r5
1460:Src/app.c     **** 
 2544              		.loc 1 1460 11 view .LVU841
 2545 061e FDEEE77A 		vcvt.s32.f32	s15, s15
 2546              	.LVL221:
1468:Src/app.c     **** 
 2547              		.loc 1 1468 30 view .LVU842
 2548 0622 DCF80030 		ldr	r3, [ip]
 2549              	.LBB408:
1472:Src/app.c     ****     }
 2550              		.loc 1 1472 44 view .LVU843
 2551 0626 4FF46A62 		mov	r2, #3744
 2552 062a 7146     		mov	r1, lr
 2553              	.LBE408:
ARM GAS  /tmp/cczRRmNE.s 			page 109


1468:Src/app.c     **** 
 2554              		.loc 1 1468 30 view .LVU844
 2555 062c 40F8043B 		str	r3, [r0], #4
1460:Src/app.c     **** 
 2556              		.loc 1 1460 11 view .LVU845
 2557 0630 C6ED2C7A 		vstr.32	s15, [r6, #176]	@ int
1468:Src/app.c     **** 
 2558              		.loc 1 1468 7 is_stmt 1 view .LVU846
1471:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2559              		.loc 1 1471 7 view .LVU847
 2560              	.LBB409:
1471:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2561              		.loc 1 1471 12 view .LVU848
 2562              	.LVL222:
1471:Src/app.c     ****         disp.info.hands[0].ld_landmarks[j] = ld_landmarks[0][j];
 2563              		.loc 1 1471 25 discriminator 1 view .LVU849
1472:Src/app.c     ****     }
 2564              		.loc 1 1472 44 is_stmt 0 view .LVU850
 2565 0634 FFF7FEFF 		bl	memcpy
 2566              	.LVL223:
 2567              	.L84:
1472:Src/app.c     ****     }
 2568              		.loc 1 1472 44 view .LVU851
 2569              	.LBE409:
 2570              	.LBE407:
1478:Src/app.c     ****     assert(ret == pdTRUE);
 2571              		.loc 1 1478 5 is_stmt 1 view .LVU852
1478:Src/app.c     ****     assert(ret == pdTRUE);
 2572              		.loc 1 1478 11 is_stmt 0 view .LVU853
 2573 0638 0023     		movs	r3, #0
 2574 063a 706D     		ldr	r0, [r6, #84]
 2575 063c 1A46     		mov	r2, r3
 2576 063e 1946     		mov	r1, r3
 2577 0640 FFF7FEFF 		bl	xQueueGenericSend
 2578              	.LVL224:
1479:Src/app.c     **** 
 2579              		.loc 1 1479 5 is_stmt 1 view .LVU854
 2580 0644 0128     		cmp	r0, #1
 2581 0646 07D0     		beq	.L85
1479:Src/app.c     **** 
 2582              		.loc 1 1479 5 is_stmt 0 discriminator 1 view .LVU855
 2583 0648 40F2C751 		movw	r1, #1479
 2584 064c 094B     		ldr	r3, .L105+12
 2585 064e 0F4A     		ldr	r2, .L105+36
 2586 0650 07E5     		b	.L100
 2587              	.LVL225:
 2588              	.L83:
1476:Src/app.c     ****     }
 2589              		.loc 1 1476 7 is_stmt 1 view .LVU856
1476:Src/app.c     ****     }
 2590              		.loc 1 1476 23 is_stmt 0 view .LVU857
 2591 0652 C6F8B080 		str	r8, [r6, #176]
 2592 0656 EFE7     		b	.L84
 2593              	.LVL226:
 2594              	.L85:
1482:Src/app.c     ****   }
 2595              		.loc 1 1482 5 is_stmt 1 view .LVU858
ARM GAS  /tmp/cczRRmNE.s 			page 110


 2596 0658 0023     		movs	r3, #0
 2597 065a 3068     		ldr	r0, [r6]
 2598              	.LVL227:
1482:Src/app.c     ****   }
 2599              		.loc 1 1482 5 is_stmt 0 view .LVU859
 2600 065c 1A46     		mov	r2, r3
 2601 065e 1946     		mov	r1, r3
 2602 0660 FFF7FEFF 		bl	xQueueGenericSend
 2603              	.LVL228:
 2604              	.LBE410:
1352:Src/app.c     ****   {
 2605              		.loc 1 1352 9 is_stmt 1 view .LVU860
 2606              	.LBB411:
1359:Src/app.c     ****     nn_period_ms = nn_period[1] - nn_period[0];
 2607              		.loc 1 1359 18 is_stmt 0 discriminator 1 view .LVU861
 2608 0664 069D     		ldr	r5, [sp, #24]
 2609              	.LBE411:
1353:Src/app.c     ****     best_face_idx = -1; // Reset best face index for each frame
 2610              		.loc 1 1353 3 view .LVU862
 2611 0666 53E5     		b	.L86
 2612              	.L106:
 2613              		.align	2
 2614              	.L105:
 2615 0668 00000000 		.word	NN_Instance_face_landmark
 2616 066c 00ED00E0 		.word	-536810240
 2617 0670 00000000 		.word	ld_landmarks
 2618 0674 00000000 		.word	.LC1
 2619 0678 00000000 		.word	__func__.6
 2620 067c 0000C842 		.word	1120403456
 2621 0680 00000000 		.word	0
 2622 0684 00004043 		.word	1128267776
 2623 0688 E8000000 		.word	disp+232
 2624 068c 00000000 		.word	__func__.12
 2625              		.cfi_endproc
 2626              	.LFE7403:
 2628              		.section	.text.display_hand,"ax",%progbits
 2629              		.align	1
 2630              		.global	display_hand
 2631              		.syntax unified
 2632              		.thumb
 2633              		.thumb_func
 2635              	display_hand:
 2636              	.LVL229:
 2637              	.LFB7390:
 766:Src/app.c     ****   if (info->is_pd_displayed) {
 2638              		.loc 1 766 1 is_stmt 1 view -0
 2639              		.cfi_startproc
 2640              		@ args = 0, pretend = 0, frame = 72
 2641              		@ frame_needed = 0, uses_anonymous_args = 0
 767:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2642              		.loc 1 767 3 view .LVU864
 766:Src/app.c     ****   if (info->is_pd_displayed) {
 2643              		.loc 1 766 1 is_stmt 0 view .LVU865
 2644 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2645              		.cfi_def_cfa_offset 28
 2646              		.cfi_offset 4, -28
 2647              		.cfi_offset 5, -24
ARM GAS  /tmp/cczRRmNE.s 			page 111


 2648              		.cfi_offset 6, -20
 2649              		.cfi_offset 7, -16
 2650              		.cfi_offset 8, -12
 2651              		.cfi_offset 9, -8
 2652              		.cfi_offset 14, -4
 767:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2653              		.loc 1 767 6 view .LVU866
 2654 0004 8369     		ldr	r3, [r0, #24]
 766:Src/app.c     ****   if (info->is_pd_displayed) {
 2655              		.loc 1 766 1 view .LVU867
 2656 0006 0546     		mov	r5, r0
 2657 0008 0C46     		mov	r4, r1
 2658 000a 95B0     		sub	sp, sp, #84
 2659              		.cfi_def_cfa_offset 112
 767:Src/app.c     ****     display_pd_hand(&hand->pd_hands);
 2660              		.loc 1 767 6 view .LVU868
 2661 000c 002B     		cmp	r3, #0
 2662 000e 00F08180 		beq	.L108
 768:Src/app.c     ****     display_roi(&hand->roi);
 2663              		.loc 1 768 5 is_stmt 1 view .LVU869
 2664              	.LVL230:
 2665              	.LBB417:
 2666              	.LBI417:
 632:Src/app.c     **** {
 2667              		.loc 1 632 13 view .LVU870
 2668              	.LBB418:
 634:Src/app.c     ****   int x0, y0;
 2669              		.loc 1 634 3 view .LVU871
 635:Src/app.c     ****   int x1, y1;
 2670              		.loc 1 635 3 view .LVU872
 636:Src/app.c     ****   int w, h;
 2671              		.loc 1 636 3 view .LVU873
 637:Src/app.c     ****   int i;
 2672              		.loc 1 637 3 view .LVU874
 638:Src/app.c     **** 
 2673              		.loc 1 638 3 view .LVU875
 641:Src/app.c     ****   yc = (int)hand->y_center;
 2674              		.loc 1 641 3 view .LVU876
 641:Src/app.c     ****   yc = (int)hand->y_center;
 2675              		.loc 1 641 6 is_stmt 0 view .LVU877
 2676 0012 D1ED027A 		vldr.32	s15, [r1, #8]
 2677 0016 FDEEE77A 		vcvt.s32.f32	s15, s15
 2678 001a 17EE900A 		vmov	r0, s15	@ int
 2679              	.LVL231:
 642:Src/app.c     ****   w = (int)hand->width;
 2680              		.loc 1 642 3 is_stmt 1 view .LVU878
 642:Src/app.c     ****   w = (int)hand->width;
 2681              		.loc 1 642 6 is_stmt 0 view .LVU879
 2682 001e D1ED037A 		vldr.32	s15, [r1, #12]
 2683 0022 FDEEE77A 		vcvt.s32.f32	s15, s15
 2684 0026 17EE901A 		vmov	r1, s15	@ int
 2685              	.LVL232:
 643:Src/app.c     ****   h = (int)hand->height;
 2686              		.loc 1 643 3 is_stmt 1 view .LVU880
 644:Src/app.c     ****   x0 = xc - (w + 1) / 2;
 2687              		.loc 1 644 3 view .LVU881
 644:Src/app.c     ****   x0 = xc - (w + 1) / 2;
ARM GAS  /tmp/cczRRmNE.s 			page 112


 2688              		.loc 1 644 5 is_stmt 0 view .LVU882
 2689 002a D4ED057A 		vldr.32	s15, [r4, #20]
 2690 002e FDEEE77A 		vcvt.s32.f32	s15, s15
 2691 0032 17EE903A 		vmov	r3, s15	@ int
 2692              	.LVL233:
 645:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2693              		.loc 1 645 3 is_stmt 1 view .LVU883
 643:Src/app.c     ****   h = (int)hand->height;
 2694              		.loc 1 643 5 is_stmt 0 view .LVU884
 2695 0036 D4ED047A 		vldr.32	s15, [r4, #16]
 2696 003a FDEEE77A 		vcvt.s32.f32	s15, s15
 2697 003e 17EE902A 		vmov	r2, s15	@ int
 645:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2698              		.loc 1 645 16 view .LVU885
 2699 0042 0132     		adds	r2, r2, #1
 645:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2700              		.loc 1 645 21 view .LVU886
 2701 0044 02EBD272 		add	r2, r2, r2, lsr #31
 646:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2702              		.loc 1 646 16 view .LVU887
 2703 0048 0133     		adds	r3, r3, #1
 2704              	.LVL234:
 645:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2705              		.loc 1 645 21 view .LVU888
 2706 004a 5210     		asrs	r2, r2, #1
 646:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2707              		.loc 1 646 21 view .LVU889
 2708 004c 03EBD373 		add	r3, r3, r3, lsr #31
 2709              	.LVL235:
 645:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2710              		.loc 1 645 21 view .LVU890
 2711 0050 5242     		rsbs	r2, r2, #0
 646:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2712              		.loc 1 646 21 view .LVU891
 2713 0052 5B10     		asrs	r3, r3, #1
 645:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2714              		.loc 1 645 11 view .LVU892
 2715 0054 8618     		adds	r6, r0, r2
 646:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2716              		.loc 1 646 21 view .LVU893
 2717 0056 5B42     		rsbs	r3, r3, #0
 647:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2718              		.loc 1 647 6 view .LVU894
 2719 0058 801A     		subs	r0, r0, r2
 2720              	.LVL236:
 645:Src/app.c     ****   y0 = yc - (h + 1) / 2;
 2721              		.loc 1 645 6 view .LVU895
 2722 005a 0296     		str	r6, [sp, #8]
 646:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2723              		.loc 1 646 3 is_stmt 1 view .LVU896
 646:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2724              		.loc 1 646 11 is_stmt 0 view .LVU897
 2725 005c CE18     		adds	r6, r1, r3
 648:Src/app.c     ****   clamp_point(&x0, &y0);
 2726              		.loc 1 648 6 view .LVU898
 2727 005e C91A     		subs	r1, r1, r3
 2728              	.LVL237:
ARM GAS  /tmp/cczRRmNE.s 			page 113


 647:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2729              		.loc 1 647 6 view .LVU899
 2730 0060 0490     		str	r0, [sp, #16]
 648:Src/app.c     ****   clamp_point(&x0, &y0);
 2731              		.loc 1 648 6 view .LVU900
 2732 0062 0C91     		str	r1, [sp, #48]
 649:Src/app.c     ****   clamp_point(&x1, &y1);
 2733              		.loc 1 649 3 view .LVU901
 2734 0064 02A8     		add	r0, sp, #8
 2735 0066 03A9     		add	r1, sp, #12
 646:Src/app.c     ****   x1 = xc + (w + 1) / 2;
 2736              		.loc 1 646 6 view .LVU902
 2737 0068 0396     		str	r6, [sp, #12]
 647:Src/app.c     ****   y1 = yc + (h + 1) / 2;
 2738              		.loc 1 647 3 is_stmt 1 view .LVU903
 648:Src/app.c     ****   clamp_point(&x0, &y0);
 2739              		.loc 1 648 3 view .LVU904
 649:Src/app.c     ****   clamp_point(&x1, &y1);
 2740              		.loc 1 649 3 view .LVU905
 2741 006a FFF7FEFF 		bl	clamp_point
 2742              	.LVL238:
 650:Src/app.c     ****   UTIL_LCD_DrawRect(x0, y0, x1 - x0, y1 - y0, UTIL_LCD_COLOR_GREEN);
 2743              		.loc 1 650 3 view .LVU906
 2744 006e 0CA9     		add	r1, sp, #48
 2745 0070 04A8     		add	r0, sp, #16
 2746 0072 FFF7FEFF 		bl	clamp_point
 2747              	.LVL239:
 651:Src/app.c     **** 
 2748              		.loc 1 651 3 view .LVU907
 2749 0076 DDE90201 		ldrd	r0, r1, [sp, #8]
 2750 007a 4FF0FF23 		mov	r3, #-16711936
 2751 007e 049A     		ldr	r2, [sp, #16]
 2752 0080 0093     		str	r3, [sp]
 2753 0082 0C9B     		ldr	r3, [sp, #48]
 2754 0084 121A     		subs	r2, r2, r0
 2755 0086 5B1A     		subs	r3, r3, r1
 2756 0088 FFF7FEFF 		bl	UTIL_LCD_DrawRect
 2757              	.LVL240:
 654:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2758              		.loc 1 654 3 view .LVU908
 654:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2759              		.loc 1 654 17 discriminator 1 view .LVU909
 654:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2760              		.loc 1 654 10 is_stmt 0 view .LVU910
 2761 008c 0026     		movs	r6, #0
 2762              	.LBB419:
 655:Src/app.c     **** 
 2763              		.loc 1 655 62 discriminator 3 view .LVU911
 2764 008e DFF8A080 		ldr	r8, .L122+4
 2765 0092 264F     		ldr	r7, .L122
 2766              	.LVL241:
 2767              	.L110:
 655:Src/app.c     **** 
 2768              		.loc 1 655 5 is_stmt 1 view .LVU912
 657:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2769              		.loc 1 657 25 is_stmt 0 view .LVU913
 2770 0094 A269     		ldr	r2, [r4, #24]
ARM GAS  /tmp/cczRRmNE.s 			page 114


 655:Src/app.c     **** 
 2771              		.loc 1 655 62 discriminator 3 view .LVU914
 2772 0096 36F00203 		bics	r3, r6, #2
 657:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2773              		.loc 1 657 25 view .LVU915
 2774 009a 02EBC602 		add	r2, r2, r6, lsl #3
 657:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2775              		.loc 1 657 10 view .LVU916
 2776 009e D2ED007A 		vldr.32	s15, [r2]
 2777 00a2 FDEEE77A 		vcvt.s32.f32	s15, s15
 2778 00a6 CDED027A 		vstr.32	s15, [sp, #8]	@ int
 658:Src/app.c     ****     clamp_point(&x0, &y0);
 2779              		.loc 1 658 10 view .LVU917
 2780 00aa D2ED017A 		vldr.32	s15, [r2, #4]
 655:Src/app.c     **** 
 2781              		.loc 1 655 62 discriminator 3 view .LVU918
 2782 00ae 0CBF     		ite	eq
 2783 00b0 C146     		moveq	r9, r8
 2784 00b2 B946     		movne	r9, r7
 2785              	.LVL242:
 657:Src/app.c     ****     y0 = (int)hand->pKps[i].y;
 2786              		.loc 1 657 5 is_stmt 1 view .LVU919
 658:Src/app.c     ****     clamp_point(&x0, &y0);
 2787              		.loc 1 658 5 view .LVU920
 658:Src/app.c     ****     clamp_point(&x0, &y0);
 2788              		.loc 1 658 10 is_stmt 0 view .LVU921
 2789 00b4 FDEEE77A 		vcvt.s32.f32	s15, s15
 659:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2790              		.loc 1 659 5 view .LVU922
 2791 00b8 03A9     		add	r1, sp, #12
 2792 00ba 02A8     		add	r0, sp, #8
 658:Src/app.c     ****     clamp_point(&x0, &y0);
 2793              		.loc 1 658 10 view .LVU923
 2794 00bc CDED037A 		vstr.32	s15, [sp, #12]	@ int
 659:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2795              		.loc 1 659 5 is_stmt 1 view .LVU924
 2796              	.LBE419:
 654:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2797              		.loc 1 654 23 is_stmt 0 discriminator 2 view .LVU925
 2798 00c0 0136     		adds	r6, r6, #1
 2799              	.LVL243:
 2800              	.LBB420:
 659:Src/app.c     ****     UTIL_LCD_FillCircle(x0, y0, 2, color);
 2801              		.loc 1 659 5 view .LVU926
 2802 00c2 FFF7FEFF 		bl	clamp_point
 2803              	.LVL244:
 660:Src/app.c     ****   }
 2804              		.loc 1 660 5 is_stmt 1 view .LVU927
 2805 00c6 DDE90201 		ldrd	r0, r1, [sp, #8]
 2806 00ca 4B46     		mov	r3, r9
 2807 00cc 0222     		movs	r2, #2
 2808 00ce FFF7FEFF 		bl	UTIL_LCD_FillCircle
 2809              	.LVL245:
 2810              	.LBE420:
 654:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2811              		.loc 1 654 23 discriminator 2 view .LVU928
 654:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
ARM GAS  /tmp/cczRRmNE.s 			page 115


 2812              		.loc 1 654 17 discriminator 1 view .LVU929
 2813 00d2 072E     		cmp	r6, #7
 2814 00d4 DED1     		bne	.L110
 2815              	.LVL246:
 654:Src/app.c     ****     uint32_t color = (i != 0 && i != 2) ? UTIL_LCD_COLOR_RED : UTIL_LCD_COLOR_BLUE;
 2816              		.loc 1 654 17 is_stmt 0 discriminator 1 view .LVU930
 2817              	.LBE418:
 2818              	.LBE417:
 769:Src/app.c     ****   }
 2819              		.loc 1 769 5 is_stmt 1 view .LVU931
 2820              	.LBB421:
 2821              	.LBI421:
 710:Src/app.c     **** {
 2822              		.loc 1 710 13 view .LVU932
 2823              	.LBB422:
 712:Src/app.c     ****   int corners[4][2];
 2824              		.loc 1 712 3 view .LVU933
 713:Src/app.c     ****   int is_clamp;
 2825              		.loc 1 713 3 view .LVU934
 714:Src/app.c     ****   int i;
 2826              		.loc 1 714 3 view .LVU935
 715:Src/app.c     **** 
 2827              		.loc 1 715 3 view .LVU936
 718:Src/app.c     **** 
 2828              		.loc 1 718 3 view .LVU937
 2829 00d6 04A9     		add	r1, sp, #16
 2830 00d8 04F11C00 		add	r0, r4, #28
 2831              	.LVL247:
 718:Src/app.c     **** 
 2832              		.loc 1 718 3 is_stmt 0 view .LVU938
 2833 00dc FFF7FEFF 		bl	roi_to_corners
 2834              	.LVL248:
 721:Src/app.c     ****   if (is_clamp)
 2835              		.loc 1 721 3 is_stmt 1 view .LVU939
 721:Src/app.c     ****   if (is_clamp)
 2836              		.loc 1 721 14 is_stmt 0 view .LVU940
 2837 00e0 0CA9     		add	r1, sp, #48
 2838 00e2 04A8     		add	r0, sp, #16
 2839              	.LVL249:
 721:Src/app.c     ****   if (is_clamp)
 2840              		.loc 1 721 14 view .LVU941
 2841 00e4 FFF7FEFF 		bl	clamp_corners
 2842              	.LVL250:
 722:Src/app.c     ****     return ;
 2843              		.loc 1 722 3 is_stmt 1 view .LVU942
 2844 00e8 0CAF     		add	r7, sp, #48
 722:Src/app.c     ****     return ;
 2845              		.loc 1 722 6 is_stmt 0 view .LVU943
 2846 00ea 0646     		mov	r6, r0
 2847 00ec 90B9     		cbnz	r0, .L108
 727:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2848              		.loc 1 727 5 view .LVU944
 2849 00ee DFF83C80 		ldr	r8, .L122
 2850              	.LVL251:
 2851              	.L112:
 727:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2852              		.loc 1 727 5 is_stmt 1 view .LVU945
ARM GAS  /tmp/cczRRmNE.s 			page 116


 727:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2853              		.loc 1 727 64 is_stmt 0 view .LVU946
 2854 00f2 0136     		adds	r6, r6, #1
 2855              	.LVL252:
 727:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2856              		.loc 1 727 98 view .LVU947
 2857 00f4 14AB     		add	r3, sp, #80
 727:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2858              		.loc 1 727 69 view .LVU948
 2859 00f6 06F00302 		and	r2, r6, #3
 727:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2860              		.loc 1 727 5 view .LVU949
 2861 00fa CDF80080 		str	r8, [sp]
 727:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2862              		.loc 1 727 98 view .LVU950
 2863 00fe 03EBC202 		add	r2, r3, r2, lsl #3
 727:Src/app.c     ****                       UTIL_LCD_COLOR_RED);
 2864              		.loc 1 727 5 view .LVU951
 2865 0102 7968     		ldr	r1, [r7, #4]
 2866 0104 52E90823 		ldrd	r2, r3, [r2, #-32]
 2867 0108 57F8080B 		ldr	r0, [r7], #8
 2868 010c FFF7FEFF 		bl	UTIL_LCD_DrawLine
 2869              	.LVL253:
 726:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2870              		.loc 1 726 23 is_stmt 1 discriminator 3 view .LVU952
 726:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2871              		.loc 1 726 17 discriminator 1 view .LVU953
 2872 0110 042E     		cmp	r6, #4
 2873 0112 EED1     		bne	.L112
 2874              	.LVL254:
 2875              	.L108:
 726:Src/app.c     ****     UTIL_LCD_DrawLine(corners[i][0], corners[i][1], corners[(i + 1) % 4][0], corners[(i + 1) % 4][1
 2876              		.loc 1 726 17 is_stmt 0 discriminator 1 view .LVU954
 2877              	.LBE422:
 2878              	.LBE421:
 771:Src/app.c     ****     display_ld_hand(hand);
 2879              		.loc 1 771 3 is_stmt 1 view .LVU955
 771:Src/app.c     ****     display_ld_hand(hand);
 2880              		.loc 1 771 6 is_stmt 0 view .LVU956
 2881 0114 6B69     		ldr	r3, [r5, #20]
 2882 0116 2BB1     		cbz	r3, .L107
 772:Src/app.c     **** }
 2883              		.loc 1 772 5 is_stmt 1 view .LVU957
 2884 0118 2046     		mov	r0, r4
 773:Src/app.c     **** 
 2885              		.loc 1 773 1 is_stmt 0 view .LVU958
 2886 011a 15B0     		add	sp, sp, #84
 2887              		.cfi_remember_state
 2888              		.cfi_def_cfa_offset 28
 2889              		@ sp needed
 2890 011c BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 2891              		.cfi_restore 14
 2892              		.cfi_restore 9
 2893              		.cfi_restore 8
 2894              		.cfi_restore 7
 2895              		.cfi_restore 6
 2896              		.cfi_restore 5
ARM GAS  /tmp/cczRRmNE.s 			page 117


 2897              		.cfi_restore 4
 2898              		.cfi_def_cfa_offset 0
 2899              	.LVL255:
 772:Src/app.c     **** }
 2900              		.loc 1 772 5 view .LVU959
 2901 0120 FFF7FEBF 		b	display_ld_hand
 2902              	.LVL256:
 2903              	.L107:
 2904              		.cfi_restore_state
 773:Src/app.c     **** 
 2905              		.loc 1 773 1 view .LVU960
 2906 0124 15B0     		add	sp, sp, #84
 2907              		.cfi_def_cfa_offset 28
 2908              		@ sp needed
 2909 0126 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2910              	.LVL257:
 2911              	.L123:
 773:Src/app.c     **** 
 2912              		.loc 1 773 1 view .LVU961
 2913 012a 00BF     		.align	2
 2914              	.L122:
 2915 012c 0000FFFF 		.word	-65536
 2916 0130 FF0000FF 		.word	-16776961
 2917              		.cfi_endproc
 2918              	.LFE7390:
 2920              		.section	.rodata.dp_thread_fct.str1.1,"aMS",%progbits,1
 2921              	.LC18:
 2922 0000 72657420 		.ascii	"ret == HAL_OK\000"
 2922      3D3D2048 
 2922      414C5F4F 
 2922      4B00
 2923              		.global	__aeabi_ul2d
 2924              	.LC19:
 2925 000e 43707520 		.ascii	"Cpu load\000"
 2925      6C6F6164 
 2925      00
 2926              	.LC20:
 2927 0017 20202025 		.ascii	"   %.1f%%\000"
 2927      2E316625 
 2927      2500
 2928              	.LC21:
 2929 0021 496E6665 		.ascii	"Inferences\000"
 2929      72656E63 
 2929      657300
 2930              	.LC22:
 2931 002c 20666163 		.ascii	" face_conf %2u\000"
 2931      655F636F 
 2931      6E662025 
 2931      327500
 2932              	.LC23:
 2933 003b 20796F6C 		.ascii	" yolo_num_detections %2u\000"
 2933      6F5F6E75 
 2933      6D5F6465 
 2933      74656374 
 2933      696F6E73 
 2934              	.LC24:
 2935 0054 2020252E 		.ascii	"  %.1f FPS\000"
ARM GAS  /tmp/cczRRmNE.s 			page 118


 2935      31662046 
 2935      505300
 2936              		.section	.text.dp_thread_fct,"ax",%progbits
 2937              		.align	1
 2938              		.syntax unified
 2939              		.thumb
 2940              		.thumb_func
 2942              	dp_thread_fct:
 2943              	.LVL258:
 2944              	.LFB7408:
1628:Src/app.c     ****   button_t ld_toggle_button;
 2945              		.loc 1 1628 1 is_stmt 1 view -0
 2946              		.cfi_startproc
 2947              		@ args = 0, pretend = 0, frame = 3864
 2948              		@ frame_needed = 0, uses_anonymous_args = 0
1629:Src/app.c     ****   button_t hd_toggle_button;
 2949              		.loc 1 1629 3 view .LVU963
1630:Src/app.c     ****   uint32_t disp_ms = 0;
 2950              		.loc 1 1630 3 view .LVU964
1631:Src/app.c     ****   display_info_t info;
 2951              		.loc 1 1631 3 view .LVU965
1632:Src/app.c     ****   uint32_t ts;
 2952              		.loc 1 1632 3 view .LVU966
1633:Src/app.c     ****   int ret;
 2953              		.loc 1 1633 3 view .LVU967
1634:Src/app.c     **** 
 2954              		.loc 1 1634 3 view .LVU968
1637:Src/app.c     ****   button_init(&hd_toggle_button, BUTTON_TAMP, on_pd_toggle_button_click, &disp);
 2955              		.loc 1 1637 3 view .LVU969
1628:Src/app.c     ****   button_t ld_toggle_button;
 2956              		.loc 1 1628 1 is_stmt 0 view .LVU970
 2957 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2958              		.cfi_def_cfa_offset 36
 2959              		.cfi_offset 4, -36
 2960              		.cfi_offset 5, -32
 2961              		.cfi_offset 6, -28
 2962              		.cfi_offset 7, -24
 2963              		.cfi_offset 8, -20
 2964              		.cfi_offset 9, -16
 2965              		.cfi_offset 10, -12
 2966              		.cfi_offset 11, -8
 2967              		.cfi_offset 14, -4
 2968              	.LBB453:
 2969              	.LBB454:
 405:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2970              		.loc 1 405 9 view .LVU971
 2971 0004 0021     		movs	r1, #0
 2972              	.LBE454:
 2973              	.LBE453:
1628:Src/app.c     ****   button_t ld_toggle_button;
 2974              		.loc 1 1628 1 view .LVU972
 2975 0006 2DED048B 		vpush.64	{d8, d9}
 2976              		.cfi_def_cfa_offset 52
 2977              		.cfi_offset 80, -52
 2978              		.cfi_offset 81, -48
 2979              		.cfi_offset 82, -44
 2980              		.cfi_offset 83, -40
ARM GAS  /tmp/cczRRmNE.s 			page 119


 2981              	.LBB458:
 2982              	.LBB455:
 405:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2983              		.loc 1 405 9 view .LVU973
 2984 000a 0846     		mov	r0, r1
 2985              	.LVL259:
 405:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2986              		.loc 1 405 9 view .LVU974
 2987              	.LBE455:
 2988              	.LBE458:
1628:Src/app.c     ****   button_t ld_toggle_button;
 2989              		.loc 1 1628 1 view .LVU975
 2990 000c ADF6247D 		subw	sp, sp, #3876
 2991              		.cfi_def_cfa_offset 3928
 2992              	.LVL260:
 2993              	.LBB459:
 2994              	.LBI453:
 401:Src/app.c     **** {
 2995              		.loc 1 401 13 is_stmt 1 view .LVU976
 2996              	.LBB456:
 403:Src/app.c     **** 
 2997              		.loc 1 403 3 view .LVU977
 405:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2998              		.loc 1 405 3 view .LVU978
 405:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 2999              		.loc 1 405 9 is_stmt 0 view .LVU979
 3000 0010 FFF7FEFF 		bl	BSP_PB_Init
 3001              	.LVL261:
 406:Src/app.c     **** 
 3002              		.loc 1 406 3 is_stmt 1 view .LVU980
 3003 0014 0146     		mov	r1, r0
 3004 0016 08B1     		cbz	r0, .L125
 3005              	.LVL262:
 3006              	.L126:
 406:Src/app.c     **** 
 3007              		.loc 1 406 3 is_stmt 0 view .LVU981
 3008 0018 FFF7FEFF 		bl	button_init.part.0
 3009              	.LVL263:
 3010              	.L125:
 408:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3011              		.loc 1 408 3 is_stmt 1 view .LVU982
 409:Src/app.c     ****   b->prev_state = 0;
 3012              		.loc 1 409 23 is_stmt 0 view .LVU983
 3013 001c 984B     		ldr	r3, .L142+8
 411:Src/app.c     **** }
 3014              		.loc 1 411 14 view .LVU984
 3015 001e 994F     		ldr	r7, .L142+12
 410:Src/app.c     ****   b->cb_args = cb_args;
 3016              		.loc 1 410 17 view .LVU985
 3017 0020 CDE90403 		strd	r0, r3, [sp, #16]
 408:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3018              		.loc 1 408 16 view .LVU986
 3019 0024 8DF80C00 		strb	r0, [sp, #12]
 409:Src/app.c     ****   b->prev_state = 0;
 3020              		.loc 1 409 3 is_stmt 1 view .LVU987
 411:Src/app.c     **** }
 3021              		.loc 1 411 3 view .LVU988
ARM GAS  /tmp/cczRRmNE.s 			page 120


 3022              	.LBE456:
 3023              	.LBE459:
 3024              	.LBB460:
 3025              	.LBB461:
 405:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3026              		.loc 1 405 9 is_stmt 0 view .LVU989
 3027 0028 0120     		movs	r0, #1
 3028              	.LVL264:
 405:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3029              		.loc 1 405 9 view .LVU990
 3030              	.LBE461:
 3031              	.LBE460:
 3032              	.LBB465:
 3033              	.LBB457:
 411:Src/app.c     **** }
 3034              		.loc 1 411 14 view .LVU991
 3035 002a 0697     		str	r7, [sp, #24]
 3036              	.LVL265:
 411:Src/app.c     **** }
 3037              		.loc 1 411 14 view .LVU992
 3038              	.LBE457:
 3039              	.LBE465:
1638:Src/app.c     **** #else
 3040              		.loc 1 1638 3 is_stmt 1 view .LVU993
 3041              	.LBB466:
 3042              	.LBI460:
 401:Src/app.c     **** {
 3043              		.loc 1 401 13 view .LVU994
 3044              	.LBB462:
 403:Src/app.c     **** 
 3045              		.loc 1 403 3 view .LVU995
 405:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3046              		.loc 1 405 3 view .LVU996
 405:Src/app.c     ****   assert(ret == BSP_ERROR_NONE);
 3047              		.loc 1 405 9 is_stmt 0 view .LVU997
 3048 002c FFF7FEFF 		bl	BSP_PB_Init
 3049              	.LVL266:
 406:Src/app.c     **** 
 3050              		.loc 1 406 3 is_stmt 1 view .LVU998
 3051 0030 0028     		cmp	r0, #0
 3052 0032 F1D1     		bne	.L126
 408:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3053              		.loc 1 408 3 view .LVU999
 408:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3054              		.loc 1 408 16 is_stmt 0 view .LVU1000
 3055 0034 0123     		movs	r3, #1
 3056              	.LBE462:
 3057              	.LBE466:
1631:Src/app.c     ****   display_info_t info;
 3058              		.loc 1 1631 12 view .LVU1001
 3059 0036 0446     		mov	r4, r0
 3060              	.LBB467:
 3061              	.LBB468:
 3062              	.LBB469:
 3063              	.LBB470:
 452:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3064              		.loc 1 452 35 view .LVU1002
ARM GAS  /tmp/cczRRmNE.s 			page 121


 3065 0038 9FED8F9B 		vldr.64	d9, .L142
 3066              	.LBE470:
 3067              	.LBE469:
 3068              	.LBE468:
 3069              	.LBE467:
 3070              	.LBB480:
 3071              	.LBB463:
 408:Src/app.c     ****   b->on_click_handler = on_click_handler;
 3072              		.loc 1 408 16 view .LVU1003
 3073 003c 8DF81C30 		strb	r3, [sp, #28]
 409:Src/app.c     ****   b->prev_state = 0;
 3074              		.loc 1 409 3 is_stmt 1 view .LVU1004
 409:Src/app.c     ****   b->prev_state = 0;
 3075              		.loc 1 409 23 is_stmt 0 view .LVU1005
 3076 0040 914B     		ldr	r3, .L142+16
 3077              	.LBE463:
 3078              	.LBE480:
 3079              	.LBB481:
 3080              	.LBB482:
1587:Src/app.c     ****   assert(ret == HAL_OK);
 3081              		.loc 1 1587 47 view .LVU1006
 3082 0042 DFF88C92 		ldr	r9, .L142+88
 3083              	.LBE482:
 3084              	.LBE481:
 3085              	.LBB488:
 3086              	.LBB464:
 410:Src/app.c     ****   b->cb_args = cb_args;
 3087              		.loc 1 410 17 view .LVU1007
 3088 0046 CDE90803 		strd	r0, r3, [sp, #32]
 411:Src/app.c     **** }
 3089              		.loc 1 411 3 is_stmt 1 view .LVU1008
 411:Src/app.c     **** }
 3090              		.loc 1 411 14 is_stmt 0 view .LVU1009
 3091 004a 0A97     		str	r7, [sp, #40]
 3092              	.LVL267:
 3093              	.L136:
 411:Src/app.c     **** }
 3094              		.loc 1 411 14 view .LVU1010
 3095              	.LBE464:
 3096              	.LBE488:
1643:Src/app.c     ****   {
 3097              		.loc 1 1643 3 is_stmt 1 view .LVU1011
1645:Src/app.c     ****     assert(ret == pdTRUE);
 3098              		.loc 1 1645 5 view .LVU1012
1645:Src/app.c     ****     assert(ret == pdTRUE);
 3099              		.loc 1 1645 11 is_stmt 0 view .LVU1013
 3100 004c 4FF0FF31 		mov	r1, #-1
 3101 0050 3868     		ldr	r0, [r7]
 3102 0052 FFF7FEFF 		bl	xQueueSemaphoreTake
 3103              	.LVL268:
1646:Src/app.c     **** 
 3104              		.loc 1 1646 5 is_stmt 1 view .LVU1014
 3105 0056 0128     		cmp	r0, #1
 3106 0058 06D0     		beq	.L127
1646:Src/app.c     **** 
 3107              		.loc 1 1646 5 is_stmt 0 discriminator 1 view .LVU1015
 3108 005a 40F26E61 		movw	r1, #1646
ARM GAS  /tmp/cczRRmNE.s 			page 122


 3109 005e 8B4B     		ldr	r3, .L142+20
 3110 0060 8B4A     		ldr	r2, .L142+24
 3111              	.LVL269:
 3112              	.L141:
1652:Src/app.c     ****     info = disp.info;
 3113              		.loc 1 1652 5 discriminator 1 view .LVU1016
 3114 0062 8C48     		ldr	r0, .L142+28
 3115 0064 FFF7FEFF 		bl	__assert_func
 3116              	.LVL270:
 3117              	.L127:
1648:Src/app.c     ****     button_process(&hd_toggle_button);
 3118              		.loc 1 1648 5 is_stmt 1 view .LVU1017
 3119 0068 03A8     		add	r0, sp, #12
 3120              	.LVL271:
1648:Src/app.c     ****     button_process(&hd_toggle_button);
 3121              		.loc 1 1648 5 is_stmt 0 view .LVU1018
 3122 006a FFF7FEFF 		bl	button_process
 3123              	.LVL272:
1649:Src/app.c     **** 
 3124              		.loc 1 1649 5 is_stmt 1 view .LVU1019
 3125 006e 07A8     		add	r0, sp, #28
 3126 0070 FFF7FEFF 		bl	button_process
 3127              	.LVL273:
1651:Src/app.c     ****     assert(ret == pdTRUE);
 3128              		.loc 1 1651 5 view .LVU1020
1651:Src/app.c     ****     assert(ret == pdTRUE);
 3129              		.loc 1 1651 11 is_stmt 0 view .LVU1021
 3130 0074 4FF0FF31 		mov	r1, #-1
 3131 0078 786D     		ldr	r0, [r7, #84]
 3132 007a FFF7FEFF 		bl	xQueueSemaphoreTake
 3133              	.LVL274:
1652:Src/app.c     ****     info = disp.info;
 3134              		.loc 1 1652 5 is_stmt 1 view .LVU1022
 3135 007e 0128     		cmp	r0, #1
 3136 0080 04D0     		beq	.L128
1652:Src/app.c     ****     info = disp.info;
 3137              		.loc 1 1652 5 is_stmt 0 discriminator 1 view .LVU1023
 3138 0082 40F27461 		movw	r1, #1652
 3139 0086 814B     		ldr	r3, .L142+20
 3140 0088 814A     		ldr	r2, .L142+24
 3141 008a EAE7     		b	.L141
 3142              	.L128:
1653:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3143              		.loc 1 1653 5 is_stmt 1 view .LVU1024
1653:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3144              		.loc 1 1653 10 is_stmt 0 view .LVU1025
 3145 008c 40F6F462 		movw	r2, #3828
 3146 0090 8149     		ldr	r1, .L142+32
 3147 0092 0BA8     		add	r0, sp, #44
 3148              	.LVL275:
1653:Src/app.c     ****     ret = xSemaphoreGive(disp.lock);
 3149              		.loc 1 1653 10 view .LVU1026
 3150 0094 FFF7FEFF 		bl	memcpy
 3151              	.LVL276:
1654:Src/app.c     ****     assert(ret == pdTRUE);
 3152              		.loc 1 1654 5 is_stmt 1 view .LVU1027
1654:Src/app.c     ****     assert(ret == pdTRUE);
ARM GAS  /tmp/cczRRmNE.s 			page 123


 3153              		.loc 1 1654 11 is_stmt 0 view .LVU1028
 3154 0098 0023     		movs	r3, #0
 3155 009a 786D     		ldr	r0, [r7, #84]
 3156 009c 1A46     		mov	r2, r3
 3157 009e 1946     		mov	r1, r3
 3158 00a0 FFF7FEFF 		bl	xQueueGenericSend
 3159              	.LVL277:
1655:Src/app.c     ****     info.disp_ms = disp_ms;
 3160              		.loc 1 1655 5 view .LVU1029
 3161 00a4 0128     		cmp	r0, #1
1654:Src/app.c     ****     assert(ret == pdTRUE);
 3162              		.loc 1 1654 11 view .LVU1030
 3163 00a6 0546     		mov	r5, r0
 3164              	.LVL278:
1655:Src/app.c     ****     info.disp_ms = disp_ms;
 3165              		.loc 1 1655 5 is_stmt 1 view .LVU1031
 3166 00a8 04D0     		beq	.L129
1655:Src/app.c     ****     info.disp_ms = disp_ms;
 3167              		.loc 1 1655 5 is_stmt 0 discriminator 1 view .LVU1032
 3168 00aa 40F27761 		movw	r1, #1655
 3169 00ae 774B     		ldr	r3, .L142+20
 3170 00b0 774A     		ldr	r2, .L142+24
 3171 00b2 D6E7     		b	.L141
 3172              	.L129:
1656:Src/app.c     **** 
 3173              		.loc 1 1656 5 is_stmt 1 view .LVU1033
1656:Src/app.c     **** 
 3174              		.loc 1 1656 18 is_stmt 0 view .LVU1034
 3175 00b4 0F94     		str	r4, [sp, #60]
1658:Src/app.c     ****     dp_update_drawing_area();
 3176              		.loc 1 1658 5 is_stmt 1 view .LVU1035
1658:Src/app.c     ****     dp_update_drawing_area();
 3177              		.loc 1 1658 10 is_stmt 0 view .LVU1036
 3178 00b6 FFF7FEFF 		bl	HAL_GetTick
 3179              	.LVL279:
1658:Src/app.c     ****     dp_update_drawing_area();
 3180              		.loc 1 1658 10 view .LVU1037
 3181 00ba 8246     		mov	r10, r0
 3182              	.LVL280:
1659:Src/app.c     ****     Display_NetworkOutput(&info);
 3183              		.loc 1 1659 5 is_stmt 1 view .LVU1038
 3184              	.LBB489:
 3185              	.LBI481:
1582:Src/app.c     **** {
 3186              		.loc 1 1582 13 view .LVU1039
 3187              	.LBB487:
1584:Src/app.c     **** 
 3188              		.loc 1 1584 3 view .LVU1040
1586:Src/app.c     ****   ret = SCRL_SetAddress_NoReload(lcd_fg_buffer[lcd_fg_buffer_rd_idx], SCRL_LAYER_1);
 3189              		.loc 1 1586 3 view .LVU1041
 3190              	.LBB483:
 3191              	.LBI483:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
ARM GAS  /tmp/cczRRmNE.s 			page 124


 277:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  /tmp/cczRRmNE.s 			page 125


 334:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/cczRRmNE.s 			page 126


 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cczRRmNE.s 			page 127


 448:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
ARM GAS  /tmp/cczRRmNE.s 			page 128


 505:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
ARM GAS  /tmp/cczRRmNE.s 			page 129


 562:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
ARM GAS  /tmp/cczRRmNE.s 			page 130


 619:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
ARM GAS  /tmp/cczRRmNE.s 			page 131


 676:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
ARM GAS  /tmp/cczRRmNE.s 			page 132


 733:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  /tmp/cczRRmNE.s 			page 133


 790:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cczRRmNE.s 			page 134


 847:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /tmp/cczRRmNE.s 			page 135


 904:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  /tmp/cczRRmNE.s 			page 136


 3192              		.loc 4 960 27 view .LVU1042
 3193              	.LBB484:
 961:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 3194              		.loc 4 962 3 view .LVU1043
 3195              		.syntax unified
 3196              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3197 00bc 72B6     		cpsid i
 3198              	@ 0 "" 2
 3199              		.thumb
 3200              		.syntax unified
 3201              	.LBE484:
 3202              	.LBE483:
1587:Src/app.c     ****   assert(ret == HAL_OK);
 3203              		.loc 1 1587 3 view .LVU1044
1587:Src/app.c     ****   assert(ret == HAL_OK);
 3204              		.loc 1 1587 47 is_stmt 0 view .LVU1045
 3205 00be DFF81482 		ldr	r8, .L142+92
 3206 00c2 D9F80030 		ldr	r3, [r9]
1587:Src/app.c     ****   assert(ret == HAL_OK);
 3207              		.loc 1 1587 9 view .LVU1046
 3208 00c6 7548     		ldr	r0, .L142+36
 3209              	.LVL281:
1587:Src/app.c     ****   assert(ret == HAL_OK);
 3210              		.loc 1 1587 9 view .LVU1047
 3211 00c8 2946     		mov	r1, r5
 3212 00ca 00FB0380 		mla	r0, r0, r3, r8
 3213 00ce FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 3214              	.LVL282:
1588:Src/app.c     ****   __enable_irq();
 3215              		.loc 1 1588 3 is_stmt 1 view .LVU1048
 3216 00d2 8346     		mov	fp, r0
 3217 00d4 20B1     		cbz	r0, .L130
1588:Src/app.c     ****   __enable_irq();
 3218              		.loc 1 1588 3 is_stmt 0 discriminator 1 view .LVU1049
 3219 00d6 40F23461 		movw	r1, #1588
 3220 00da 714B     		ldr	r3, .L142+40
 3221 00dc 714A     		ldr	r2, .L142+44
 3222 00de C0E7     		b	.L141
 3223              	.L130:
1589:Src/app.c     **** }
 3224              		.loc 1 1589 3 is_stmt 1 view .LVU1050
 3225              	.LBB485:
 3226              	.LBI485:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3227              		.loc 4 949 27 view .LVU1051
 3228              	.LBB486:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3229              		.loc 4 951 3 view .LVU1052
 3230              		.syntax unified
 3231              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3232 00e0 62B6     		cpsie i
 3233              	@ 0 "" 2
 3234              	.LVL283:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3235              		.loc 4 951 3 is_stmt 0 view .LVU1053
 3236              		.thumb
ARM GAS  /tmp/cczRRmNE.s 			page 137


 3237              		.syntax unified
 3238              	.LBE486:
 3239              	.LBE485:
 3240              	.LBE487:
 3241              	.LBE489:
1660:Src/app.c     ****     SCB_CleanDCache_by_Addr(lcd_fg_buffer[lcd_fg_buffer_rd_idx], LCD_FG_WIDTH * LCD_FG_HEIGHT* 2);
 3242              		.loc 1 1660 5 is_stmt 1 view .LVU1054
 3243              	.LBB490:
 3244              	.LBI467:
 775:Src/app.c     **** {
 3245              		.loc 1 775 13 view .LVU1055
 3246              	.LBB479:
 777:Src/app.c     ****   int line_nb = 0;
 3247              		.loc 1 777 3 view .LVU1056
 778:Src/app.c     ****   float nn_fps;
 3248              		.loc 1 778 3 view .LVU1057
 779:Src/app.c     ****   int i;
 3249              		.loc 1 779 3 view .LVU1058
 780:Src/app.c     **** 
 3250              		.loc 1 780 3 view .LVU1059
 783:Src/app.c     **** 
 3251              		.loc 1 783 3 view .LVU1060
 3252              	.LBB472:
 3253              	.LBB473:
 433:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3254              		.loc 1 433 24 is_stmt 0 view .LVU1061
 3255 00e2 714C     		ldr	r4, .L142+48
 3256              	.LVL284:
 433:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3257              		.loc 1 433 24 view .LVU1062
 3258              	.LBE473:
 3259              	.LBE472:
 783:Src/app.c     **** 
 3260              		.loc 1 783 3 view .LVU1063
 3261 00e4 4FF4F073 		mov	r3, #480
 3262 00e8 4FF44872 		mov	r2, #800
 3263 00ec 0146     		mov	r1, r0
 3264 00ee 0090     		str	r0, [sp]
 3265              	.LBB476:
 3266              	.LBB474:
 433:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3267              		.loc 1 433 24 view .LVU1064
 3268 00f0 04F13805 		add	r5, r4, #56
 3269              	.LVL285:
 433:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3270              		.loc 1 433 24 view .LVU1065
 3271 00f4 04F12006 		add	r6, r4, #32
 3272              	.LBE474:
 3273              	.LBE476:
 783:Src/app.c     **** 
 3274              		.loc 1 783 3 view .LVU1066
 3275 00f8 FFF7FEFF 		bl	UTIL_LCD_FillRect
 3276              	.LVL286:
 786:Src/app.c     ****   cpuload_get_info(&cpu_load, NULL, &cpu_load_one_second, NULL);
 3277              		.loc 1 786 3 is_stmt 1 view .LVU1067
 3278              	.LBB477:
 3279              	.LBI472:
ARM GAS  /tmp/cczRRmNE.s 			page 138


 429:Src/app.c     **** {
 3280              		.loc 1 429 13 view .LVU1068
 3281              	.LBB475:
 431:Src/app.c     **** 
 3282              		.loc 1 431 3 view .LVU1069
 433:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3283              		.loc 1 433 3 view .LVU1070
 433:Src/app.c     ****   cpu_load->history[0].total = portGET_RUN_TIME_COUNTER_VALUE();
 3284              		.loc 1 433 24 is_stmt 0 view .LVU1071
 3285 00fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3286 00fe 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3287 0100 96E80300 		ldm	r6, {r0, r1}
 3288 0104 85E80300 		stm	r5, {r0, r1}
 434:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3289              		.loc 1 434 3 is_stmt 1 view .LVU1072
 434:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3290              		.loc 1 434 32 is_stmt 0 view .LVU1073
 3291 0108 FFF7FEFF 		bl	TIM4_Get_Value
 3292              	.LVL287:
 3293 010c 0546     		mov	r5, r0
 434:Src/app.c     ****   cpu_load->history[0].thread = cpu_load->history[0].total - ulTaskGetIdleRunTimeCounter();
 3294              		.loc 1 434 30 discriminator 1 view .LVU1074
 3295 010e C4E9080B 		strd	r0, fp, [r4, #32]
 435:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3296              		.loc 1 435 3 is_stmt 1 view .LVU1075
 435:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3297              		.loc 1 435 62 is_stmt 0 view .LVU1076
 3298 0112 FFF7FEFF 		bl	ulTaskGetIdleRunTimeCounter
 3299              	.LVL288:
 435:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3300              		.loc 1 435 60 discriminator 1 view .LVU1077
 3301 0116 2D1A     		subs	r5, r5, r0
 3302 0118 63EB0303 		sbc	r3, r3, r3
 435:Src/app.c     ****   cpu_load->history[0].tick = HAL_GetTick();
 3303              		.loc 1 435 31 discriminator 1 view .LVU1078
 3304 011c C4E90A53 		strd	r5, r3, [r4, #40]
 436:Src/app.c     **** 
 3305              		.loc 1 436 3 is_stmt 1 view .LVU1079
 436:Src/app.c     **** 
 3306              		.loc 1 436 31 is_stmt 0 view .LVU1080
 3307 0120 FFF7FEFF 		bl	HAL_GetTick
 3308              	.LVL289:
 438:Src/app.c     ****     return ;
 3309              		.loc 1 438 33 view .LVU1081
 3310 0124 A36C     		ldr	r3, [r4, #72]
 3311 0126 226E     		ldr	r2, [r4, #96]
 436:Src/app.c     **** 
 3312              		.loc 1 436 29 discriminator 1 view .LVU1082
 3313 0128 2063     		str	r0, [r4, #48]
 438:Src/app.c     ****     return ;
 3314              		.loc 1 438 3 is_stmt 1 view .LVU1083
 438:Src/app.c     ****     return ;
 3315              		.loc 1 438 33 is_stmt 0 view .LVU1084
 3316 012a 9B1A     		subs	r3, r3, r2
 438:Src/app.c     ****     return ;
 3317              		.loc 1 438 6 view .LVU1085
 3318 012c B3F57A7F 		cmp	r3, #1000
ARM GAS  /tmp/cczRRmNE.s 			page 139


 3319 0130 06D3     		bcc	.L131
 442:Src/app.c     **** }
 3320              		.loc 1 442 55 view .LVU1086
 3321 0132 9022     		movs	r2, #144
 3322 0134 04F13801 		add	r1, r4, #56
 3323 0138 04F15000 		add	r0, r4, #80
 3324 013c FFF7FEFF 		bl	memmove
 3325              	.LVL290:
 3326              	.L131:
 442:Src/app.c     **** }
 3327              		.loc 1 442 55 view .LVU1087
 3328              	.LBE475:
 3329              	.LBE477:
 787:Src/app.c     **** 
 3330              		.loc 1 787 3 is_stmt 1 view .LVU1088
 3331              	.LBB478:
 3332              	.LBI469:
 445:Src/app.c     ****                              float *cpu_load_last_five_seconds)
 3333              		.loc 1 445 13 view .LVU1089
 3334              	.LBB471:
 448:Src/app.c     ****     *cpu_load_last = 100.0 * (cpu_load->history[0].thread - cpu_load->history[1].thread) /
 3335              		.loc 1 448 3 view .LVU1090
 451:Src/app.c     ****     *cpu_load_last_second = 100.0 * (cpu_load->history[2].thread - cpu_load->history[3].thread) /
 3336              		.loc 1 451 3 view .LVU1091
 452:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3337              		.loc 1 452 5 view .LVU1092
 452:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3338              		.loc 1 452 66 is_stmt 0 view .LVU1093
 3339 0140 D4E91C23 		ldrd	r2, r3, [r4, #112]
 3340 0144 D4E91601 		ldrd	r0, r1, [r4, #88]
 3341 0148 801A     		subs	r0, r0, r2
 3342 014a 61EB0301 		sbc	r1, r1, r3
 452:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3343              		.loc 1 452 35 view .LVU1094
 3344 014e FFF7FEFF 		bl	__aeabi_ul2d
 3345              	.LVL291:
 453:Src/app.c     ****   if (cpu_load_last_five_seconds)
 3346              		.loc 1 453 50 view .LVU1095
 3347 0152 D4E91A32 		ldrd	r3, r2, [r4, #104]
 452:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3348              		.loc 1 452 35 view .LVU1096
 3349 0156 41EC180B 		vmov	d8, r0, r1
 453:Src/app.c     ****   if (cpu_load_last_five_seconds)
 3350              		.loc 1 453 50 view .LVU1097
 3351 015a D4E91401 		ldrd	r0, r1, [r4, #80]
 3352 015e C01A     		subs	r0, r0, r3
 3353 0160 61EB0201 		sbc	r1, r1, r2
 452:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3354              		.loc 1 452 97 view .LVU1098
 3355 0164 FFF7FEFF 		bl	__aeabi_ul2d
 3356              	.LVL292:
 452:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3357              		.loc 1 452 35 view .LVU1099
 3358 0168 28EE098B 		vmul.f64	d8, d8, d9
 452:Src/app.c     ****                      (cpu_load->history[2].total - cpu_load->history[3].total);
 3359              		.loc 1 452 97 view .LVU1100
 3360 016c 41EC160B 		vmov	d6, r0, r1
ARM GAS  /tmp/cczRRmNE.s 			page 140


 3361 0170 88EE067B 		vdiv.f64	d7, d8, d6
 3362 0174 B7EEC78B 		vcvt.f32.f64	s16, d7
 3363              	.LVL293:
 454:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 3364              		.loc 1 454 3 is_stmt 1 view .LVU1101
 454:Src/app.c     ****     *cpu_load_last_five_seconds = 100.0 * (cpu_load->history[2].thread - cpu_load->history[7].threa
 3365              		.loc 1 454 3 is_stmt 0 view .LVU1102
 3366              	.LBE471:
 3367              	.LBE478:
 790:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 3368              		.loc 1 790 3 is_stmt 1 view .LVU1103
 790:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "Cpu load");
 3369              		.loc 1 790 10 is_stmt 0 view .LVU1104
 3370 0178 DDED0B7A 		vldr.32	s15, [sp, #44]
 3371 017c 9FED4B7A 		vldr.32	s14, .L142+52
 3372 0180 C7EE278A 		vdiv.f32	s17, s14, s15
 3373              	.LVL294:
 791:Src/app.c     ****   line_nb += 1;
 3374              		.loc 1 791 3 is_stmt 1 view .LVU1105
 791:Src/app.c     ****   line_nb += 1;
 3375              		.loc 1 791 26 is_stmt 0 view .LVU1106
 3376 0184 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3377              	.LVL295:
 791:Src/app.c     ****   line_nb += 1;
 3378              		.loc 1 791 3 discriminator 1 view .LVU1107
 3379 0188 0021     		movs	r1, #0
 3380 018a 0222     		movs	r2, #2
 3381 018c 0846     		mov	r0, r1
 3382 018e 484B     		ldr	r3, .L142+56
 3383 0190 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3384              	.LVL296:
 792:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "   %.1f%%", cpu_load_one_second);
 3385              		.loc 1 792 3 is_stmt 1 view .LVU1108
 793:Src/app.c     ****   line_nb += 2;
 3386              		.loc 1 793 3 view .LVU1109
 793:Src/app.c     ****   line_nb += 2;
 3387              		.loc 1 793 26 is_stmt 0 view .LVU1110
 3388 0194 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3389              	.LVL297:
 793:Src/app.c     ****   line_nb += 2;
 3390              		.loc 1 793 3 discriminator 1 view .LVU1111
 3391 0198 B7EEC87A 		vcvt.f64.f32	d7, s16
 3392 019c C188     		ldrh	r1, [r0, #6]
 3393 019e 0222     		movs	r2, #2
 3394 01a0 8DED007B 		vstr.64	d7, [sp]
 3395 01a4 434B     		ldr	r3, .L142+60
 3396 01a6 0020     		movs	r0, #0
 3397 01a8 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3398              	.LVL298:
 794:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Inferences");
 3399              		.loc 1 794 3 is_stmt 1 view .LVU1112
 795:Src/app.c     ****   line_nb += 1;
 3400              		.loc 1 795 3 view .LVU1113
 795:Src/app.c     ****   line_nb += 1;
 3401              		.loc 1 795 26 is_stmt 0 view .LVU1114
 3402 01ac FFF7FEFF 		bl	UTIL_LCD_GetFont
 3403              	.LVL299:
ARM GAS  /tmp/cczRRmNE.s 			page 141


 795:Src/app.c     ****   line_nb += 1;
 3404              		.loc 1 795 26 discriminator 1 view .LVU1115
 3405 01b0 C188     		ldrh	r1, [r0, #6]
 795:Src/app.c     ****   line_nb += 1;
 3406              		.loc 1 795 3 discriminator 1 view .LVU1116
 3407 01b2 0222     		movs	r2, #2
 3408 01b4 404B     		ldr	r3, .L142+64
 3409 01b6 01EB4101 		add	r1, r1, r1, lsl #1
 3410 01ba 0020     		movs	r0, #0
 3411 01bc FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3412              	.LVL300:
 796:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " face_conf %2u", info->pd_ms);
 3413              		.loc 1 796 3 is_stmt 1 view .LVU1117
 797:Src/app.c     ****   line_nb += 1;
 3414              		.loc 1 797 3 view .LVU1118
 797:Src/app.c     ****   line_nb += 1;
 3415              		.loc 1 797 26 is_stmt 0 view .LVU1119
 3416 01c0 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3417              	.LVL301:
 797:Src/app.c     ****   line_nb += 1;
 3418              		.loc 1 797 3 discriminator 1 view .LVU1120
 3419 01c4 0222     		movs	r2, #2
 797:Src/app.c     ****   line_nb += 1;
 3420              		.loc 1 797 26 discriminator 1 view .LVU1121
 3421 01c6 C188     		ldrh	r1, [r0, #6]
 797:Src/app.c     ****   line_nb += 1;
 3422              		.loc 1 797 3 discriminator 1 view .LVU1122
 3423 01c8 0C9B     		ldr	r3, [sp, #48]
 3424 01ca 9140     		lsls	r1, r1, r2
 3425 01cc 0020     		movs	r0, #0
 3426 01ce 0093     		str	r3, [sp]
 3427 01d0 3A4B     		ldr	r3, .L142+68
 3428 01d2 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3429              	.LVL302:
 798:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, " yolo_num_detections %2u", info->hl_ms);
 3430              		.loc 1 798 3 is_stmt 1 view .LVU1123
 799:Src/app.c     ****   line_nb += 2;
 3431              		.loc 1 799 3 view .LVU1124
 799:Src/app.c     ****   line_nb += 2;
 3432              		.loc 1 799 26 is_stmt 0 view .LVU1125
 3433 01d6 FFF7FEFF 		bl	UTIL_LCD_GetFont
 3434              	.LVL303:
 799:Src/app.c     ****   line_nb += 2;
 3435              		.loc 1 799 3 discriminator 1 view .LVU1126
 3436 01da 0D9B     		ldr	r3, [sp, #52]
 799:Src/app.c     ****   line_nb += 2;
 3437              		.loc 1 799 26 discriminator 1 view .LVU1127
 3438 01dc C188     		ldrh	r1, [r0, #6]
 799:Src/app.c     ****   line_nb += 2;
 3439              		.loc 1 799 3 discriminator 1 view .LVU1128
 3440 01de 0222     		movs	r2, #2
 3441 01e0 01EB8101 		add	r1, r1, r1, lsl #2
 3442 01e4 0020     		movs	r0, #0
 3443 01e6 0093     		str	r3, [sp]
 3444 01e8 354B     		ldr	r3, .L142+72
 3445 01ea FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3446              	.LVL304:
ARM GAS  /tmp/cczRRmNE.s 			page 142


 800:Src/app.c     ****   UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "  %.1f FPS", nn_fps);
 3447              		.loc 1 800 3 is_stmt 1 view .LVU1129
 801:Src/app.c     ****   line_nb += 2;
 3448              		.loc 1 801 3 view .LVU1130
 801:Src/app.c     ****   line_nb += 2;
 3449              		.loc 1 801 26 is_stmt 0 view .LVU1131
 3450 01ee FFF7FEFF 		bl	UTIL_LCD_GetFont
 3451              	.LVL305:
 801:Src/app.c     ****   line_nb += 2;
 3452              		.loc 1 801 3 discriminator 1 view .LVU1132
 3453 01f2 B7EEE87A 		vcvt.f64.f32	d7, s17
 801:Src/app.c     ****   line_nb += 2;
 3454              		.loc 1 801 26 discriminator 1 view .LVU1133
 3455 01f6 C188     		ldrh	r1, [r0, #6]
 801:Src/app.c     ****   line_nb += 2;
 3456              		.loc 1 801 3 discriminator 1 view .LVU1134
 3457 01f8 324B     		ldr	r3, .L142+76
 3458 01fa 8DED007B 		vstr.64	d7, [sp]
 3459 01fe 0222     		movs	r2, #2
 3460 0200 0020     		movs	r0, #0
 3461 0202 C1EBC101 		rsb	r1, r1, r1, lsl #3
 3462 0206 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 3463              	.LVL306:
 802:Src/app.c     ****   if (DBG_INFO) {
 3464              		.loc 1 802 3 is_stmt 1 view .LVU1135
 803:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb), RIGHT_MODE, "Display");
 3465              		.loc 1 803 3 view .LVU1136
 811:Src/app.c     ****     if (info->hands[i].is_valid)
 3466              		.loc 1 811 3 view .LVU1137
 811:Src/app.c     ****     if (info->hands[i].is_valid)
 3467              		.loc 1 811 17 discriminator 1 view .LVU1138
 3468 020a 129B     		ldr	r3, [sp, #72]
 3469 020c 002B     		cmp	r3, #0
 3470 020e 05DD     		ble	.L132
 812:Src/app.c     ****       display_hand(info, &info->hands[i]);
 3471              		.loc 1 812 5 view .LVU1139
 812:Src/app.c     ****       display_hand(info, &info->hands[i]);
 3472              		.loc 1 812 8 is_stmt 0 view .LVU1140
 3473 0210 149B     		ldr	r3, [sp, #80]
 3474 0212 1BB1     		cbz	r3, .L132
 813:Src/app.c     ****   }
 3475              		.loc 1 813 7 is_stmt 1 view .LVU1141
 3476 0214 14A9     		add	r1, sp, #80
 3477 0216 0BA8     		add	r0, sp, #44
 3478              	.LVL307:
 813:Src/app.c     ****   }
 3479              		.loc 1 813 7 is_stmt 0 view .LVU1142
 3480 0218 FFF7FEFF 		bl	display_hand
 3481              	.LVL308:
 811:Src/app.c     ****     if (info->hands[i].is_valid)
 3482              		.loc 1 811 38 is_stmt 1 discriminator 2 view .LVU1143
 811:Src/app.c     ****     if (info->hands[i].is_valid)
 3483              		.loc 1 811 17 discriminator 1 view .LVU1144
 3484              	.L132:
 816:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
 3485              		.loc 1 816 3 view .LVU1145
 816:Src/app.c     ****     UTIL_LCDEx_PrintfAt(0, LINE(line_nb),  RIGHT_MODE, "pd : %5.1f %%", info->pd_max_prob * 100);
ARM GAS  /tmp/cczRRmNE.s 			page 143


 3486              		.loc 1 816 3 is_stmt 0 view .LVU1146
 3487              	.LBE479:
 3488              	.LBE490:
1661:Src/app.c     ****     dp_commit_drawing_area();
 3489              		.loc 1 1661 5 is_stmt 1 view .LVU1147
 3490              	.LBB491:
 3491              	.LBI491:
 375:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 376:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 377:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 378:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 379:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 380:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 381:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean by address
 382:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans D-Cache for the given address
 383:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned starting from a 32 byte aligned address in 32 byte granularity.
 384:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned.
 385:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address
 386:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 387:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 388:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (volatile void *addr, int32_t dsize)
 3492              		.loc 3 388 27 view .LVU1148
 389:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 390:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 391:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 3493              		.loc 3 391 5 view .LVU1149
 3494              	.LBB492:
 392:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3495              		.loc 3 392 8 view .LVU1150
 3496              	.LBE492:
 3497              	.LBE491:
1661:Src/app.c     ****     dp_commit_drawing_area();
 3498              		.loc 1 1661 42 is_stmt 0 view .LVU1151
 3499 021c D9F80030 		ldr	r3, [r9]
 3500 0220 1E4A     		ldr	r2, .L142+36
 3501 0222 02FB0383 		mla	r3, r2, r3, r8
 3502              	.LVL309:
 3503              	.LBB500:
 3504              	.LBB499:
 393:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3505              		.loc 3 393 7 is_stmt 1 view .LVU1152
 394:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 395:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 3506              		.loc 3 395 7 view .LVU1153
 3507              	.LBB493:
 3508              	.LBI493:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3509              		.loc 4 269 27 view .LVU1154
 3510              	.LBB494:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3511              		.loc 4 271 3 view .LVU1155
 3512              		.syntax unified
 3513              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3514 0226 BFF34F8F 		dsb 0xF
 3515              	@ 0 "" 2
 3516              		.thumb
 3517              		.syntax unified
ARM GAS  /tmp/cczRRmNE.s 			page 144


 3518              	.LBE494:
 3519              	.LBE493:
 396:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 398:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 3520              		.loc 3 398 22 is_stmt 0 view .LVU1156
 3521 022a 45F6C05E 		movw	lr, #24000
 3522 022e 4EF001E0 		dls	lr, lr
 3523 0232 254A     		ldr	r2, .L142+80
 3524              	.LVL310:
 3525              	.L134:
 397:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 3526              		.loc 3 397 7 is_stmt 1 view .LVU1157
 3527              		.loc 3 398 9 view .LVU1158
 3528              		.loc 3 398 22 is_stmt 0 view .LVU1159
 3529 0234 C2F86832 		str	r3, [r2, #616]
 399:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 3530              		.loc 3 399 9 is_stmt 1 view .LVU1160
 3531              		.loc 3 399 17 is_stmt 0 view .LVU1161
 3532 0238 2033     		adds	r3, r3, #32
 3533              	.LVL311:
 400:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 3534              		.loc 3 400 9 is_stmt 1 view .LVU1162
 401:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3535              		.loc 3 401 25 discriminator 1 view .LVU1163
 3536 023a 0FF005C8 		le	lr, .L134
 402:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 403:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 3537              		.loc 3 403 7 view .LVU1164
 3538              	.LBB495:
 3539              	.LBI495:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3540              		.loc 4 269 27 view .LVU1165
 3541              	.LBB496:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3542              		.loc 4 271 3 view .LVU1166
 3543              		.syntax unified
 3544              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3545 023e BFF34F8F 		dsb 0xF
 3546              	@ 0 "" 2
 3547              		.thumb
 3548              		.syntax unified
 3549              	.LBE496:
 3550              	.LBE495:
 404:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3551              		.loc 3 404 7 view .LVU1167
 3552              	.LBB497:
 3553              	.LBI497:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3554              		.loc 4 258 27 view .LVU1168
 3555              	.LBB498:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3556              		.loc 4 260 3 view .LVU1169
 3557              		.syntax unified
 3558              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3559 0242 BFF36F8F 		isb 0xF
 3560              	@ 0 "" 2
ARM GAS  /tmp/cczRRmNE.s 			page 145


 3561              	.LVL312:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3562              		.loc 4 260 3 is_stmt 0 view .LVU1170
 3563              		.thumb
 3564              		.syntax unified
 3565              	.LBE498:
 3566              	.LBE497:
 3567              	.LBE499:
 3568              	.LBE500:
1662:Src/app.c     ****     disp_ms = HAL_GetTick() - ts;
 3569              		.loc 1 1662 5 is_stmt 1 view .LVU1171
 3570              	.LBB501:
 3571              	.LBI501:
1592:Src/app.c     **** {
 3572              		.loc 1 1592 13 view .LVU1172
 3573              	.LBB502:
1594:Src/app.c     **** 
 3574              		.loc 1 1594 3 view .LVU1173
1596:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_1);
 3575              		.loc 1 1596 3 view .LVU1174
 3576              	.LBB503:
 3577              	.LBI503:
 960:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3578              		.loc 4 960 27 view .LVU1175
 3579              	.LBB504:
 3580              		.loc 4 962 3 view .LVU1176
 3581              		.syntax unified
 3582              	@ 962 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3583 0246 72B6     		cpsid i
 3584              	@ 0 "" 2
 3585              		.thumb
 3586              		.syntax unified
 3587              	.LBE504:
 3588              	.LBE503:
1597:Src/app.c     ****   assert(ret == HAL_OK);
 3589              		.loc 1 1597 3 view .LVU1177
1597:Src/app.c     ****   assert(ret == HAL_OK);
 3590              		.loc 1 1597 9 is_stmt 0 view .LVU1178
 3591 0248 0120     		movs	r0, #1
 3592 024a FFF7FEFF 		bl	SCRL_ReloadLayer
 3593              	.LVL313:
1598:Src/app.c     ****   __enable_irq();
 3594              		.loc 1 1598 3 is_stmt 1 view .LVU1179
 3595 024e 20B1     		cbz	r0, .L135
1598:Src/app.c     ****   __enable_irq();
 3596              		.loc 1 1598 3 is_stmt 0 discriminator 1 view .LVU1180
 3597 0250 40F23E61 		movw	r1, #1598
 3598 0254 124B     		ldr	r3, .L142+40
 3599 0256 1D4A     		ldr	r2, .L142+84
 3600 0258 03E7     		b	.L141
 3601              	.L135:
1599:Src/app.c     ****   lcd_fg_buffer_rd_idx = 1 - lcd_fg_buffer_rd_idx;
 3602              		.loc 1 1599 3 is_stmt 1 view .LVU1181
 3603              	.LBB505:
 3604              	.LBI505:
 949:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3605              		.loc 4 949 27 view .LVU1182
ARM GAS  /tmp/cczRRmNE.s 			page 146


 3606              	.LBB506:
 951:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3607              		.loc 4 951 3 view .LVU1183
 3608              		.syntax unified
 3609              	@ 951 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3610 025a 62B6     		cpsie i
 3611              	@ 0 "" 2
 3612              		.thumb
 3613              		.syntax unified
 3614              	.LBE506:
 3615              	.LBE505:
1600:Src/app.c     **** }
 3616              		.loc 1 1600 3 view .LVU1184
1600:Src/app.c     **** }
 3617              		.loc 1 1600 28 is_stmt 0 view .LVU1185
 3618 025c D9F80030 		ldr	r3, [r9]
 3619 0260 C3F10103 		rsb	r3, r3, #1
1600:Src/app.c     **** }
 3620              		.loc 1 1600 24 view .LVU1186
 3621 0264 C9F80030 		str	r3, [r9]
 3622              	.LVL314:
1600:Src/app.c     **** }
 3623              		.loc 1 1600 24 view .LVU1187
 3624              	.LBE502:
 3625              	.LBE501:
1663:Src/app.c     ****   }
 3626              		.loc 1 1663 5 is_stmt 1 view .LVU1188
1663:Src/app.c     ****   }
 3627              		.loc 1 1663 15 is_stmt 0 view .LVU1189
 3628 0268 FFF7FEFF 		bl	HAL_GetTick
 3629              	.LVL315:
1663:Src/app.c     ****   }
 3630              		.loc 1 1663 13 discriminator 1 view .LVU1190
 3631 026c A0EB0A04 		sub	r4, r0, r10
 3632              	.LVL316:
1643:Src/app.c     ****   {
 3633              		.loc 1 1643 9 is_stmt 1 view .LVU1191
1645:Src/app.c     ****     assert(ret == pdTRUE);
 3634              		.loc 1 1645 9 is_stmt 0 view .LVU1192
 3635 0270 ECE6     		b	.L136
 3636              	.L143:
 3637 0272 00BFAFF3 		.align	3
 3637      0080
 3638              	.L142:
 3639 0278 00000000 		.word	0
 3640 027c 00005940 		.word	1079574528
 3641 0280 00000000 		.word	on_ld_toggle_button_click
 3642 0284 00000000 		.word	disp
 3643 0288 00000000 		.word	on_pd_toggle_button_click
 3644 028c 00000000 		.word	.LC1
 3645 0290 00000000 		.word	__func__.18
 3646 0294 0E000000 		.word	.LC2
 3647 0298 A8000000 		.word	disp+168
 3648 029c 00B80B00 		.word	768000
 3649 02a0 00000000 		.word	.LC18
 3650 02a4 00000000 		.word	__func__.14
 3651 02a8 00000000 		.word	cpu_load
ARM GAS  /tmp/cczRRmNE.s 			page 147


 3652 02ac 00007A44 		.word	1148846080
 3653 02b0 0E000000 		.word	.LC19
 3654 02b4 17000000 		.word	.LC20
 3655 02b8 21000000 		.word	.LC21
 3656 02bc 2C000000 		.word	.LC22
 3657 02c0 3B000000 		.word	.LC23
 3658 02c4 54000000 		.word	.LC24
 3659 02c8 00ED00E0 		.word	-536810240
 3660 02cc 00000000 		.word	__func__.13
 3661 02d0 00000000 		.word	lcd_fg_buffer_rd_idx
 3662 02d4 00181500 		.word	lcd_fg_buffer
 3663              		.cfi_endproc
 3664              	.LFE7408:
 3666              		.section	.rodata.app_run.str1.1,"aMS",%progbits,1
 3667              	.LC25:
 3668 0000 496E6974 		.ascii	"Init application\000"
 3668      20617070 
 3668      6C696361 
 3668      74696F6E 
 3668      00
 3669              	.LC26:
 3670 0011 6973705F 		.ascii	"isp_sem\000"
 3670      73656D00 
 3671              	.LC27:
 3672 0019 64697370 		.ascii	"disp.update\000"
 3672      2E757064 
 3672      61746500 
 3673              	.LC28:
 3674 0025 64697370 		.ascii	"disp.lock\000"
 3674      2E6C6F63 
 3674      6B00
 3675              	.LC29:
 3676 002f 6E6E00   		.ascii	"nn\000"
 3677              	.LC30:
 3678 0032 68646C20 		.ascii	"hdl != NULL\000"
 3678      213D204E 
 3678      554C4C00 
 3679              	.LC31:
 3680 003e 647000   		.ascii	"dp\000"
 3681              	.LC32:
 3682 0041 69737000 		.ascii	"isp\000"
 3683              		.section	.text.app_run,"ax",%progbits
 3684              		.align	1
 3685              		.global	app_run
 3686              		.syntax unified
 3687              		.thumb
 3688              		.thumb_func
 3690              	app_run:
 3691              	.LFB7411:
1676:Src/app.c     ****   }
1677:Src/app.c     **** }
1678:Src/app.c     **** 
1679:Src/app.c     **** static void Display_init()
1680:Src/app.c     **** {
1681:Src/app.c     ****   SCRL_LayerConfig layers_config[2] = {
1682:Src/app.c     ****     {
1683:Src/app.c     ****       .origin = {lcd_bg_area.X0, lcd_bg_area.Y0},
ARM GAS  /tmp/cczRRmNE.s 			page 148


1684:Src/app.c     ****       .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1685:Src/app.c     **** #if HAS_ROTATION_SUPPORT == 0
1686:Src/app.c     ****       .format = SCRL_RGB888,
1687:Src/app.c     **** #else
1688:Src/app.c     ****       .format = SCRL_ARGB8888,
1689:Src/app.c     **** #endif
1690:Src/app.c     ****       .address = lcd_bg_buffer[lcd_bg_buffer_disp_idx],
1691:Src/app.c     ****     },
1692:Src/app.c     ****     {
1693:Src/app.c     ****       .origin = {lcd_fg_area.X0, lcd_fg_area.Y0},
1694:Src/app.c     ****       .size = {lcd_fg_area.XSize, lcd_fg_area.YSize},
1695:Src/app.c     ****       .format = SCRL_ARGB4444,
1696:Src/app.c     ****       .address = lcd_fg_buffer[1],
1697:Src/app.c     ****     },
1698:Src/app.c     ****   };
1699:Src/app.c     ****   SCRL_ScreenConfig screen_config = {
1700:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
1701:Src/app.c     **** #ifdef SCR_LIB_USE_SPI
1702:Src/app.c     ****     .format = SCRL_RGB565,
1703:Src/app.c     **** #else
1704:Src/app.c     ****      .format = SCRL_YUV422, /* Use SCRL_RGB565 if host support this format to reduce cpu load */
1705:Src/app.c     **** #endif
1706:Src/app.c     ****     .address = screen_buffer,
1707:Src/app.c     ****     .fps = CAMERA_FPS,
1708:Src/app.c     ****   };
1709:Src/app.c     ****   int ret;
1710:Src/app.c     **** 
1711:Src/app.c     ****   ret = SCRL_Init((SCRL_LayerConfig *[2]){&layers_config[0], &layers_config[1]}, &screen_config);
1712:Src/app.c     ****   assert(ret == 0);
1713:Src/app.c     **** 
1714:Src/app.c     ****   UTIL_LCD_SetLayer(SCRL_LAYER_1);
1715:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
1716:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
1717:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
1718:Src/app.c     **** }
1719:Src/app.c     **** 
1720:Src/app.c     **** void app_run()
1721:Src/app.c     **** {
 3692              		.loc 1 1721 1 is_stmt 1 view -0
 3693              		.cfi_startproc
 3694              		@ args = 0, pretend = 0, frame = 56
 3695              		@ frame_needed = 0, uses_anonymous_args = 0
1722:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3696              		.loc 1 1722 3 view .LVU1194
 3697              	.LVL317:
1723:Src/app.c     ****   UBaseType_t dp_priority = FREERTOS_PRIORITY(-2);
 3698              		.loc 1 1723 3 view .LVU1195
1724:Src/app.c     ****   UBaseType_t nn_priority = FREERTOS_PRIORITY(1);
 3699              		.loc 1 1724 3 view .LVU1196
1725:Src/app.c     ****   TaskHandle_t hdl;
 3700              		.loc 1 1725 3 view .LVU1197
1726:Src/app.c     ****   int ret;
 3701              		.loc 1 1726 3 view .LVU1198
1727:Src/app.c     **** 
1728:Src/app.c     ****   printf("Init application\n");
 3702              		.loc 1 1728 3 view .LVU1199
1721:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
ARM GAS  /tmp/cczRRmNE.s 			page 149


 3703              		.loc 1 1721 1 is_stmt 0 view .LVU1200
 3704 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3705              		.cfi_def_cfa_offset 28
 3706              		.cfi_offset 4, -28
 3707              		.cfi_offset 5, -24
 3708              		.cfi_offset 6, -20
 3709              		.cfi_offset 7, -16
 3710              		.cfi_offset 8, -12
 3711              		.cfi_offset 9, -8
 3712              		.cfi_offset 14, -4
1729:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
1730:Src/app.c     ****   CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 3713              		.loc 1 1730 12 view .LVU1201
 3714 0004 854D     		ldr	r5, .L164
1721:Src/app.c     ****   UBaseType_t isp_priority = FREERTOS_PRIORITY(2);
 3715              		.loc 1 1721 1 view .LVU1202
 3716 0006 93B0     		sub	sp, sp, #76
 3717              		.cfi_def_cfa_offset 104
1728:Src/app.c     ****   /* Enable DWT so DWT_CYCCNT works when debugger not attached */
 3718              		.loc 1 1728 3 view .LVU1203
 3719 0008 8548     		ldr	r0, .L164+4
 3720 000a FFF7FEFF 		bl	puts
 3721              	.LVL318:
 3722              		.loc 1 1730 3 is_stmt 1 view .LVU1204
 3723              		.loc 1 1730 12 is_stmt 0 view .LVU1205
 3724 000e D5F8FC30 		ldr	r3, [r5, #252]
1731:Src/app.c     **** 
1732:Src/app.c     ****   /* screen init */
1733:Src/app.c     ****   memset(lcd_bg_buffer, 0, sizeof(lcd_bg_buffer));
 3725              		.loc 1 1733 3 view .LVU1206
 3726 0012 844C     		ldr	r4, .L164+8
1730:Src/app.c     **** 
 3727              		.loc 1 1730 20 view .LVU1207
 3728 0014 43F08073 		orr	r3, r3, #16777216
 3729              		.loc 1 1733 3 view .LVU1208
 3730 0018 0021     		movs	r1, #0
 3731 001a 2046     		mov	r0, r4
 3732 001c 824A     		ldr	r2, .L164+12
1730:Src/app.c     **** 
 3733              		.loc 1 1730 20 view .LVU1209
 3734 001e C5F8FC30 		str	r3, [r5, #252]
 3735              		.loc 1 1733 3 is_stmt 1 view .LVU1210
 3736 0022 FFF7FEFF 		bl	memset
 3737              	.LVL319:
1734:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_bg_buffer, sizeof(lcd_bg_buffer)));
 3738              		.loc 1 1734 3 view .LVU1211
 3739              		.loc 1 1734 3 view .LVU1212
 3740              		.loc 1 1734 3 discriminator 1 view .LVU1213
 3741              	.LBB529:
 3742              	.LBI529:
 405:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     }
 406:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #endif
 407:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** }
 408:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 409:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 410:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** /**
 411:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \brief   D-Cache Clean and Invalidate by address
ARM GAS  /tmp/cczRRmNE.s 			page 150


 412:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \details Cleans and invalidates D_Cache for the given address
 413:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache is cleaned and invalidated starting from a 32 byte aligned address in 32 byte gr
 414:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned and inval
 415:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
 416:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
 417:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** */
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
 3743              		.loc 3 418 27 view .LVU1214
 419:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 420:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****     if ( dsize > 0 ) {
 3744              		.loc 3 421 5 view .LVU1215
 3745              	.LBB530:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3746              		.loc 3 422 8 view .LVU1216
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3747              		.loc 3 423 7 view .LVU1217
 424:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 3748              		.loc 3 425 7 view .LVU1218
 3749              	.LBB531:
 3750              	.LBI531:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3751              		.loc 4 269 27 view .LVU1219
 3752              	.LBB532:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3753              		.loc 4 271 3 view .LVU1220
 3754              		.syntax unified
 3755              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3756 0026 BFF34F8F 		dsb 0xF
 3757              	@ 0 "" 2
 3758              		.thumb
 3759              		.syntax unified
 3760              	.LBE532:
 3761              	.LBE531:
 426:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       do {
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3762              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1221
 3763 002a DFF880E2 		ldr	lr, .L164+144
 3764              	.LBB534:
 3765              	.LBB533:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3766              		.loc 4 272 1 view .LVU1222
 3767 002e 0023     		movs	r3, #0
 3768              	.LBE533:
 3769              	.LBE534:
 3770              		.loc 3 431 25 discriminator 1 view .LVU1223
 3771 0030 4EF001E0 		dls	lr, lr
 3772              	.LVL320:
 3773              	.L145:
 3774              		.loc 3 431 25 discriminator 1 view .LVU1224
 3775 0034 E218     		adds	r2, r4, r3
 3776              	.LVL321:
ARM GAS  /tmp/cczRRmNE.s 			page 151


 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 3777              		.loc 3 427 7 is_stmt 1 view .LVU1225
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3778              		.loc 3 428 9 view .LVU1226
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3779              		.loc 3 428 23 is_stmt 0 view .LVU1227
 3780 0036 C5F87022 		str	r2, [r5, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 3781              		.loc 3 429 9 is_stmt 1 view .LVU1228
 3782              	.LVL322:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3783              		.loc 3 430 9 view .LVU1229
 3784              		.loc 3 431 25 discriminator 1 view .LVU1230
 3785 003a 2033     		adds	r3, r3, #32
 3786              	.LVL323:
 3787              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1231
 3788 003c 0FF007C0 		le	lr, .L145
 432:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __DSB();
 3789              		.loc 3 433 7 is_stmt 1 view .LVU1232
 3790              	.LBB535:
 3791              	.LBI535:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3792              		.loc 4 269 27 view .LVU1233
 3793              	.LBB536:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3794              		.loc 4 271 3 view .LVU1234
 3795              		.syntax unified
 3796              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3797 0040 BFF34F8F 		dsb 0xF
 3798              	@ 0 "" 2
 3799              		.thumb
 3800              		.syntax unified
 3801              	.LBE536:
 3802              	.LBE535:
 434:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3803              		.loc 3 434 7 view .LVU1235
 3804              	.LBB537:
 3805              	.LBI537:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3806              		.loc 4 258 27 view .LVU1236
 3807              	.LBB538:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3808              		.loc 4 260 3 view .LVU1237
 3809              		.syntax unified
 3810              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3811 0044 BFF36F8F 		isb 0xF
 3812              	@ 0 "" 2
 3813              	.LVL324:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3814              		.loc 4 260 3 is_stmt 0 view .LVU1238
 3815              		.thumb
 3816              		.syntax unified
 3817              	.LBE538:
 3818              	.LBE537:
 3819              	.LBE530:
 3820              	.LBE529:
ARM GAS  /tmp/cczRRmNE.s 			page 152


 3821              		.loc 1 1734 3 is_stmt 1 discriminator 3 view .LVU1239
1735:Src/app.c     ****   memset(lcd_fg_buffer, 0, sizeof(lcd_fg_buffer));
 3822              		.loc 1 1735 3 view .LVU1240
 3823 0048 784D     		ldr	r5, .L164+16
 3824 004a 0021     		movs	r1, #0
 3825 004c 2846     		mov	r0, r5
 3826 004e 784A     		ldr	r2, .L164+20
 3827 0050 FFF7FEFF 		bl	memset
 3828              	.LVL325:
1736:Src/app.c     ****   CACHE_OP(SCB_CleanInvalidateDCache_by_Addr(lcd_fg_buffer, sizeof(lcd_fg_buffer)));
 3829              		.loc 1 1736 3 view .LVU1241
 3830              		.loc 1 1736 3 view .LVU1242
 3831              		.loc 1 1736 3 discriminator 1 view .LVU1243
 3832              	.LBB539:
 3833              	.LBI539:
 418:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** {
 3834              		.loc 3 418 27 view .LVU1244
 421:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 3835              		.loc 3 421 5 view .LVU1245
 3836              	.LBB540:
 422:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 3837              		.loc 3 422 8 view .LVU1246
 423:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3838              		.loc 3 423 7 view .LVU1247
 425:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3839              		.loc 3 425 7 view .LVU1248
 3840              	.LBB541:
 3841              	.LBI541:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3842              		.loc 4 269 27 view .LVU1249
 3843              	.LBB542:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3844              		.loc 4 271 3 view .LVU1250
 3845              		.syntax unified
 3846              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3847 0054 BFF34F8F 		dsb 0xF
 3848              	@ 0 "" 2
 3849              		.thumb
 3850              		.syntax unified
 3851              	.LBE542:
 3852              	.LBE541:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3853              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1251
 3854 0058 4BF6803E 		movw	lr, #48000
 3855              	.LBB544:
 3856              	.LBB543:
 272:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3857              		.loc 4 272 1 view .LVU1252
 3858 005c 0023     		movs	r3, #0
 3859              	.LBE543:
 3860              	.LBE544:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3861              		.loc 3 431 25 discriminator 1 view .LVU1253
 3862 005e 4EF001E0 		dls	lr, lr
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3863              		.loc 3 428 23 view .LVU1254
 3864 0062 6E4A     		ldr	r2, .L164
ARM GAS  /tmp/cczRRmNE.s 			page 153


 3865              	.LVL326:
 3866              	.L146:
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3867              		.loc 3 428 23 view .LVU1255
 3868 0064 E918     		adds	r1, r5, r3
 3869              	.LVL327:
 427:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
 3870              		.loc 3 427 7 is_stmt 1 view .LVU1256
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3871              		.loc 3 428 9 view .LVU1257
 428:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
 3872              		.loc 3 428 23 is_stmt 0 view .LVU1258
 3873 0066 C2F87012 		str	r1, [r2, #624]
 429:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
 3874              		.loc 3 429 9 is_stmt 1 view .LVU1259
 3875              	.LVL328:
 430:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       } while ( op_size > 0 );
 3876              		.loc 3 430 9 view .LVU1260
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3877              		.loc 3 431 25 discriminator 1 view .LVU1261
 3878 006a 2033     		adds	r3, r3, #32
 3879              	.LVL329:
 431:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h **** 
 3880              		.loc 3 431 25 is_stmt 0 discriminator 1 view .LVU1262
 3881 006c 0FF007C0 		le	lr, .L146
 433:STM32Cube_FW_N6/Drivers/CMSIS/Include/cachel1_armv7.h ****       __ISB();
 3882              		.loc 3 433 7 is_stmt 1 view .LVU1263
 3883              	.LBB545:
 3884              	.LBI545:
 269:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3885              		.loc 4 269 27 view .LVU1264
 3886              	.LBB546:
 271:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3887              		.loc 4 271 3 view .LVU1265
 3888              		.syntax unified
 3889              	@ 271 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3890 0070 BFF34F8F 		dsb 0xF
 3891              	@ 0 "" 2
 3892              		.thumb
 3893              		.syntax unified
 3894              	.LBE546:
 3895              	.LBE545:
 3896              		.loc 3 434 7 view .LVU1266
 3897              	.LBB547:
 3898              	.LBI547:
 258:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3899              		.loc 4 258 27 view .LVU1267
 3900              	.LBB548:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3901              		.loc 4 260 3 view .LVU1268
 3902              		.syntax unified
 3903              	@ 260 "STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3904 0074 BFF36F8F 		isb 0xF
 3905              	@ 0 "" 2
 3906              	.LVL330:
 260:STM32Cube_FW_N6/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3907              		.loc 4 260 3 is_stmt 0 view .LVU1269
ARM GAS  /tmp/cczRRmNE.s 			page 154


 3908              		.thumb
 3909              		.syntax unified
 3910              	.LBE548:
 3911              	.LBE547:
 3912              	.LBE540:
 3913              	.LBE539:
 3914              		.loc 1 1736 3 is_stmt 1 discriminator 3 view .LVU1270
1737:Src/app.c     ****   Display_init();
 3915              		.loc 1 1737 3 view .LVU1271
 3916              	.LBB549:
 3917              	.LBI549:
1679:Src/app.c     **** {
 3918              		.loc 1 1679 13 view .LVU1272
 3919              	.LBB550:
1681:Src/app.c     ****     {
 3920              		.loc 1 1681 3 view .LVU1273
1681:Src/app.c     ****     {
 3921              		.loc 1 1681 20 is_stmt 0 view .LVU1274
 3922 0078 0320     		movs	r0, #3
 3923 007a 0021     		movs	r1, #0
 3924 007c 0126     		movs	r6, #1
1699:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3925              		.loc 1 1699 21 view .LVU1275
 3926 007e 0227     		movs	r7, #2
 3927 0080 4FF01E09 		mov	r9, #30
1681:Src/app.c     ****     {
 3928              		.loc 1 1681 20 view .LVU1276
 3929 0084 8DF83000 		strb	r0, [sp, #48]
1690:Src/app.c     ****     },
 3930              		.loc 1 1690 31 view .LVU1277
 3931 0088 6A48     		ldr	r0, .L164+24
1681:Src/app.c     ****     {
 3932              		.loc 1 1681 20 view .LVU1278
 3933 008a 6B4A     		ldr	r2, .L164+28
1690:Src/app.c     ****     },
 3934              		.loc 1 1690 18 view .LVU1279
 3935 008c 0068     		ldr	r0, [r0]
1681:Src/app.c     ****     {
 3936              		.loc 1 1681 20 view .LVU1280
 3937 008e CDE90A12 		strd	r1, r2, [sp, #40]
1690:Src/app.c     ****     },
 3938              		.loc 1 1690 18 view .LVU1281
 3939 0092 03FB0044 		mla	r4, r3, r0, r4
1681:Src/app.c     ****     {
 3940              		.loc 1 1681 20 view .LVU1282
 3941 0096 694B     		ldr	r3, .L164+32
 3942 0098 CDE90D41 		strd	r4, r1, [sp, #52]
 3943 009c 1193     		str	r3, [sp, #68]
1699:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3944              		.loc 1 1699 3 is_stmt 1 view .LVU1283
1699:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3945              		.loc 1 1699 21 is_stmt 0 view .LVU1284
 3946 009e 684B     		ldr	r3, .L164+36
1711:Src/app.c     ****   assert(ret == 0);
 3947              		.loc 1 1711 9 view .LVU1285
 3948 00a0 06A9     		add	r1, sp, #24
1699:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
ARM GAS  /tmp/cczRRmNE.s 			page 155


 3949              		.loc 1 1699 21 view .LVU1286
 3950 00a2 0893     		str	r3, [sp, #32]
1711:Src/app.c     ****   assert(ret == 0);
 3951              		.loc 1 1711 42 view .LVU1287
 3952 00a4 0AAB     		add	r3, sp, #40
 3953 00a6 0493     		str	r3, [sp, #16]
1711:Src/app.c     ****   assert(ret == 0);
 3954              		.loc 1 1711 9 view .LVU1288
 3955 00a8 04A8     		add	r0, sp, #16
1711:Src/app.c     ****   assert(ret == 0);
 3956              		.loc 1 1711 42 view .LVU1289
 3957 00aa 0EAB     		add	r3, sp, #56
1681:Src/app.c     ****     {
 3958              		.loc 1 1681 20 view .LVU1290
 3959 00ac 0F92     		str	r2, [sp, #60]
 3960 00ae 8DF84060 		strb	r6, [sp, #64]
1699:Src/app.c     ****     .size = {lcd_bg_area.XSize, lcd_bg_area.YSize},
 3961              		.loc 1 1699 21 view .LVU1291
 3962 00b2 0692     		str	r2, [sp, #24]
 3963 00b4 8DF81C70 		strb	r7, [sp, #28]
 3964 00b8 ADF82490 		strh	r9, [sp, #36]	@ movhi
1709:Src/app.c     **** 
 3965              		.loc 1 1709 3 is_stmt 1 view .LVU1292
1711:Src/app.c     ****   assert(ret == 0);
 3966              		.loc 1 1711 3 view .LVU1293
1711:Src/app.c     ****   assert(ret == 0);
 3967              		.loc 1 1711 42 is_stmt 0 view .LVU1294
 3968 00bc 0593     		str	r3, [sp, #20]
1711:Src/app.c     ****   assert(ret == 0);
 3969              		.loc 1 1711 9 view .LVU1295
 3970 00be FFF7FEFF 		bl	SCRL_Init
 3971              	.LVL331:
1712:Src/app.c     **** 
 3972              		.loc 1 1712 3 is_stmt 1 view .LVU1296
 3973 00c2 0446     		mov	r4, r0
 3974 00c4 30B1     		cbz	r0, .L147
1712:Src/app.c     **** 
 3975              		.loc 1 1712 3 is_stmt 0 discriminator 1 view .LVU1297
 3976 00c6 4FF4D661 		mov	r1, #1712
 3977 00ca 5E4B     		ldr	r3, .L164+40
 3978 00cc 5E4A     		ldr	r2, .L164+44
 3979              	.LVL332:
 3980              	.L163:
1712:Src/app.c     **** 
 3981              		.loc 1 1712 3 discriminator 1 view .LVU1298
 3982              	.LBE550:
 3983              	.LBE549:
1738:Src/app.c     **** 
1739:Src/app.c     ****   /* create buffer queues */
1740:Src/app.c     ****   ret = bqueue_init(&nn_input_queue, 2, (uint8_t *[2]){nn_input_buffers[0], nn_input_buffers[1]});
1741:Src/app.c     ****   assert(ret == 0);
 3984              		.loc 1 1741 3 discriminator 1 view .LVU1299
 3985 00ce 5F48     		ldr	r0, .L164+48
 3986 00d0 FFF7FEFF 		bl	__assert_func
 3987              	.LVL333:
 3988              	.L147:
 3989              	.LBB553:
ARM GAS  /tmp/cczRRmNE.s 			page 156


 3990              	.LBB551:
1714:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 3991              		.loc 1 1714 3 is_stmt 1 view .LVU1300
 3992 00d4 3046     		mov	r0, r6
 3993              	.LVL334:
1714:Src/app.c     ****   UTIL_LCD_Clear(UTIL_LCD_COLOR_TRANSPARENT);
 3994              		.loc 1 1714 3 is_stmt 0 view .LVU1301
 3995 00d6 FFF7FEFF 		bl	UTIL_LCD_SetLayer
 3996              	.LVL335:
1715:Src/app.c     ****   UTIL_LCD_SetFont(&LCD_FONT);
 3997              		.loc 1 1715 3 is_stmt 1 view .LVU1302
 3998 00da 2046     		mov	r0, r4
 3999 00dc FFF7FEFF 		bl	UTIL_LCD_Clear
 4000              	.LVL336:
1716:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 4001              		.loc 1 1716 3 view .LVU1303
 4002              	.LBE551:
 4003              	.LBE553:
 4004              	.LBB554:
 4005              	.LBB555:
 466:Src/app.c     ****   if (!bq->free)
 4006              		.loc 1 466 14 is_stmt 0 view .LVU1304
 4007 00e0 DFF8CC81 		ldr	r8, .L164+148
 4008              	.LBE555:
 4009              	.LBE554:
 4010              	.LBB560:
 4011              	.LBB552:
1716:Src/app.c     ****   UTIL_LCD_SetTextColor(UTIL_LCD_COLOR_WHITE);
 4012              		.loc 1 1716 3 view .LVU1305
 4013 00e4 5A48     		ldr	r0, .L164+52
 4014 00e6 FFF7FEFF 		bl	UTIL_LCD_SetFont
 4015              	.LVL337:
1717:Src/app.c     **** }
 4016              		.loc 1 1717 3 is_stmt 1 view .LVU1306
 4017 00ea 4FF0FF30 		mov	r0, #-1
 4018 00ee FFF7FEFF 		bl	UTIL_LCD_SetTextColor
 4019              	.LVL338:
1717:Src/app.c     **** }
 4020              		.loc 1 1717 3 is_stmt 0 view .LVU1307
 4021              	.LBE552:
 4022              	.LBE560:
1740:Src/app.c     ****   assert(ret == 0);
 4023              		.loc 1 1740 3 is_stmt 1 view .LVU1308
 4024              	.LBB561:
 4025              	.LBI554:
 459:Src/app.c     **** {
 4026              		.loc 1 459 12 view .LVU1309
 4027              	.LBB556:
 461:Src/app.c     **** 
 4028              		.loc 1 461 3 view .LVU1310
 463:Src/app.c     ****     return -1;
 4029              		.loc 1 463 3 view .LVU1311
 466:Src/app.c     ****   if (!bq->free)
 4030              		.loc 1 466 3 view .LVU1312
 466:Src/app.c     ****   if (!bq->free)
 4031              		.loc 1 466 14 is_stmt 0 view .LVU1313
 4032 00f2 4246     		mov	r2, r8
ARM GAS  /tmp/cczRRmNE.s 			page 157


 4033 00f4 3946     		mov	r1, r7
 4034 00f6 3846     		mov	r0, r7
 4035 00f8 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4036              	.LVL339:
 466:Src/app.c     ****   if (!bq->free)
 4037              		.loc 1 466 12 discriminator 1 view .LVU1314
 4038 00fc A8F10405 		sub	r5, r8, #4
 4039 0100 48F8040C 		str	r0, [r8, #-4]
 467:Src/app.c     ****     goto free_sem_error;
 4040              		.loc 1 467 3 is_stmt 1 view .LVU1315
 467:Src/app.c     ****     goto free_sem_error;
 4041              		.loc 1 467 6 is_stmt 0 view .LVU1316
 4042 0104 58B1     		cbz	r0, .L148
 469:Src/app.c     ****   if (!bq->ready)
 4043              		.loc 1 469 3 is_stmt 1 view .LVU1317
 469:Src/app.c     ****   if (!bq->ready)
 4044              		.loc 1 469 15 is_stmt 0 view .LVU1318
 4045 0106 2146     		mov	r1, r4
 4046 0108 3846     		mov	r0, r7
 4047 010a 08F15402 		add	r2, r8, #84
 4048 010e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4049              	.LVL340:
 469:Src/app.c     ****   if (!bq->ready)
 4050              		.loc 1 469 13 discriminator 1 view .LVU1319
 4051 0112 6865     		str	r0, [r5, #84]
 470:Src/app.c     ****     goto ready_sem_error;
 4052              		.loc 1 470 3 is_stmt 1 view .LVU1320
 470:Src/app.c     ****     goto ready_sem_error;
 4053              		.loc 1 470 6 is_stmt 0 view .LVU1321
 4054 0114 40B9     		cbnz	r0, .L149
 471:Src/app.c     **** 
 4055              		.loc 1 471 5 is_stmt 1 view .LVU1322
 4056              	.LDL1:
 484:Src/app.c     **** free_sem_error:
 4057              		.loc 1 484 3 view .LVU1323
 4058 0116 58F8040C 		ldr	r0, [r8, #-4]
 4059 011a FFF7FEFF 		bl	vQueueDelete
 4060              	.LVL341:
 484:Src/app.c     **** free_sem_error:
 4061              		.loc 1 484 3 is_stmt 0 view .LVU1324
 4062              	.LBE556:
 4063              	.LBE561:
 4064              		.loc 1 1741 3 is_stmt 1 view .LVU1325
 4065              	.L148:
 4066              		.loc 1 1741 3 is_stmt 0 discriminator 1 view .LVU1326
 4067 011e 40F2CD61 		movw	r1, #1741
 4068 0122 484B     		ldr	r3, .L164+40
 4069 0124 4B4A     		ldr	r2, .L164+56
 4070 0126 D2E7     		b	.L163
 4071              	.LVL342:
 4072              	.L149:
 4073              	.LBB562:
 4074              	.LBB557:
 473:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 4075              		.loc 1 473 3 is_stmt 1 view .LVU1327
 476:Src/app.c     ****   }
 4076              		.loc 1 476 20 is_stmt 0 view .LVU1328
ARM GAS  /tmp/cczRRmNE.s 			page 158


 4077 0128 4B4B     		ldr	r3, .L164+60
 4078              	.LBE557:
 4079              	.LBE562:
 4080              	.LBB563:
 4081              	.LBB564:
 426:Src/app.c     **** }
 4082              		.loc 1 426 3 view .LVU1329
 4083 012a E022     		movs	r2, #224
 4084 012c 2146     		mov	r1, r4
 4085              	.LBE564:
 4086              	.LBE563:
 4087              	.LBB567:
 4088              	.LBB558:
 476:Src/app.c     ****   }
 4089              		.loc 1 476 20 view .LVU1330
 4090 012e C5F8AC30 		str	r3, [r5, #172]
 4091              	.LBE558:
 4092              	.LBE567:
 4093              	.LBB568:
 4094              	.LBB565:
 426:Src/app.c     **** }
 4095              		.loc 1 426 3 view .LVU1331
 4096 0132 4A48     		ldr	r0, .L164+64
 4097              	.LBE565:
 4098              	.LBE568:
 4099              	.LBB569:
 4100              	.LBB559:
 476:Src/app.c     ****   }
 4101              		.loc 1 476 20 view .LVU1332
 4102 0134 03F59623 		add	r3, r3, #307200
 478:Src/app.c     ****   bq->ready_idx = 0;
 4103              		.loc 1 478 16 view .LVU1333
 4104 0138 C5E92C34 		strd	r3, r4, [r5, #176]
 473:Src/app.c     ****   for (i = 0; i < buffer_nb; i++) {
 4105              		.loc 1 473 17 view .LVU1334
 4106 013c C5F8A870 		str	r7, [r5, #168]
 474:Src/app.c     ****     assert(buffers[i]);
 4107              		.loc 1 474 3 is_stmt 1 view .LVU1335
 4108              	.LVL343:
 474:Src/app.c     ****     assert(buffers[i]);
 4109              		.loc 1 474 17 discriminator 1 view .LVU1336
 475:Src/app.c     ****     bq->buffers[i] = buffers[i];
 4110              		.loc 1 475 5 view .LVU1337
 476:Src/app.c     ****   }
 4111              		.loc 1 476 5 view .LVU1338
 474:Src/app.c     ****     assert(buffers[i]);
 4112              		.loc 1 474 31 discriminator 2 view .LVU1339
 474:Src/app.c     ****     assert(buffers[i]);
 4113              		.loc 1 474 17 discriminator 1 view .LVU1340
 475:Src/app.c     ****     bq->buffers[i] = buffers[i];
 4114              		.loc 1 475 5 view .LVU1341
 476:Src/app.c     ****   }
 4115              		.loc 1 476 5 view .LVU1342
 479:Src/app.c     **** 
 4116              		.loc 1 479 3 view .LVU1343
 479:Src/app.c     **** 
 4117              		.loc 1 479 17 is_stmt 0 view .LVU1344
ARM GAS  /tmp/cczRRmNE.s 			page 159


 4118 0140 C5F8B840 		str	r4, [r5, #184]
 481:Src/app.c     **** 
 4119              		.loc 1 481 3 is_stmt 1 view .LVU1345
 4120              	.LVL344:
 481:Src/app.c     **** 
 4121              		.loc 1 481 3 is_stmt 0 view .LVU1346
 4122              	.LBE559:
 4123              	.LBE569:
 4124              		.loc 1 1741 3 is_stmt 1 view .LVU1347
1742:Src/app.c     **** 
1743:Src/app.c     ****   cpuload_init(&cpu_load);
 4125              		.loc 1 1743 3 view .LVU1348
 4126              	.LBB570:
 4127              	.LBI563:
 424:Src/app.c     **** {
 4128              		.loc 1 424 13 view .LVU1349
 4129              	.LBB566:
 426:Src/app.c     **** }
 4130              		.loc 1 426 3 view .LVU1350
 4131 0144 FFF7FEFF 		bl	memset
 4132              	.LVL345:
 426:Src/app.c     **** }
 4133              		.loc 1 426 3 is_stmt 0 view .LVU1351
 4134              	.LBE566:
 4135              	.LBE570:
1744:Src/app.c     **** 
1745:Src/app.c     ****   /*** Camera Init ************************************************************/  
1746:Src/app.c     ****   CAM_Init();
 4136              		.loc 1 1746 3 is_stmt 1 view .LVU1352
 4137 0148 FFF7FEFF 		bl	CAM_Init
 4138              	.LVL346:
1747:Src/app.c     **** 
1748:Src/app.c     ****   /* sems + mutex init */
1749:Src/app.c     ****   isp_sem = xSemaphoreCreateCountingStatic(1, 0, &isp_sem_buffer);
 4139              		.loc 1 1749 3 view .LVU1353
 4140              		.loc 1 1749 13 is_stmt 0 view .LVU1354
 4141 014c 2146     		mov	r1, r4
 4142 014e 3046     		mov	r0, r6
 4143 0150 434A     		ldr	r2, .L164+68
 4144 0152 FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4145              	.LVL347:
 4146              		.loc 1 1749 11 discriminator 1 view .LVU1355
 4147 0156 434B     		ldr	r3, .L164+72
 4148 0158 1860     		str	r0, [r3]
1750:Src/app.c     ****   assert(isp_sem);
 4149              		.loc 1 1750 3 is_stmt 1 view .LVU1356
 4150 015a 20B9     		cbnz	r0, .L162
 4151              		.loc 1 1750 3 is_stmt 0 discriminator 1 view .LVU1357
 4152 015c 40F2D661 		movw	r1, #1750
 4153 0160 414B     		ldr	r3, .L164+76
 4154 0162 3C4A     		ldr	r2, .L164+56
 4155 0164 B3E7     		b	.L163
 4156              	.L162:
1751:Src/app.c     ****   disp.update = xSemaphoreCreateCountingStatic(1, 0, &disp.update_buffer);
 4157              		.loc 1 1751 3 is_stmt 1 view .LVU1358
 4158              		.loc 1 1751 17 is_stmt 0 view .LVU1359
 4159 0166 414D     		ldr	r5, .L164+80
ARM GAS  /tmp/cczRRmNE.s 			page 160


 4160 0168 2146     		mov	r1, r4
 4161 016a 2A46     		mov	r2, r5
 4162 016c 3046     		mov	r0, r6
 4163 016e FFF7FEFF 		bl	xQueueCreateCountingSemaphoreStatic
 4164              	.LVL348:
 4165              		.loc 1 1751 15 discriminator 1 view .LVU1360
 4166 0172 2F1F     		subs	r7, r5, #4
 4167 0174 45F8040C 		str	r0, [r5, #-4]
1752:Src/app.c     ****   assert(disp.update);
 4168              		.loc 1 1752 3 is_stmt 1 view .LVU1361
 4169 0178 20B9     		cbnz	r0, .L152
 4170              		.loc 1 1752 3 is_stmt 0 discriminator 1 view .LVU1362
 4171 017a 4FF4DB61 		mov	r1, #1752
 4172 017e 3C4B     		ldr	r3, .L164+84
 4173 0180 344A     		ldr	r2, .L164+56
 4174 0182 A4E7     		b	.L163
 4175              	.L152:
1753:Src/app.c     ****   disp.lock = xSemaphoreCreateMutexStatic(&disp.lock_buffer);
 4176              		.loc 1 1753 3 is_stmt 1 view .LVU1363
 4177              		.loc 1 1753 15 is_stmt 0 view .LVU1364
 4178 0184 3046     		mov	r0, r6
 4179 0186 05F15401 		add	r1, r5, #84
 4180 018a FFF7FEFF 		bl	xQueueCreateMutexStatic
 4181              	.LVL349:
 4182              		.loc 1 1753 13 discriminator 1 view .LVU1365
 4183 018e 7865     		str	r0, [r7, #84]
1754:Src/app.c     ****   assert(disp.lock);
 4184              		.loc 1 1754 3 is_stmt 1 view .LVU1366
 4185 0190 20B9     		cbnz	r0, .L153
 4186              		.loc 1 1754 3 is_stmt 0 discriminator 1 view .LVU1367
 4187 0192 40F2DA61 		movw	r1, #1754
 4188 0196 374B     		ldr	r3, .L164+88
 4189 0198 2E4A     		ldr	r2, .L164+56
 4190 019a 98E7     		b	.L163
 4191              	.L153:
1755:Src/app.c     **** 
1756:Src/app.c     ****   /* Start LCD Display camera pipe stream */
1757:Src/app.c     ****   CAM_DisplayPipe_Start(lcd_bg_buffer[0], CMW_MODE_CONTINUOUS);
 4192              		.loc 1 1757 3 is_stmt 1 view .LVU1368
 4193 019c 2146     		mov	r1, r4
 4194 019e 2148     		ldr	r0, .L164+8
 4195 01a0 FFF7FEFF 		bl	CAM_DisplayPipe_Start
 4196              	.LVL350:
1758:Src/app.c     **** 
1759:Src/app.c     ****   /* threads init */
1760:Src/app.c     ****   hdl = xTaskCreateStatic(nn_thread_fct, "nn", configMINIMAL_STACK_SIZE * 4, NULL, nn_priority, nn_
 4197              		.loc 1 1760 3 view .LVU1369
 4198              		.loc 1 1760 9 is_stmt 0 view .LVU1370
 4199 01a4 344B     		ldr	r3, .L164+92
 4200 01a6 4FF48052 		mov	r2, #4096
 4201 01aa 0293     		str	r3, [sp, #8]
 4202 01ac 334B     		ldr	r3, .L164+96
 4203 01ae 3449     		ldr	r1, .L164+100
 4204 01b0 0193     		str	r3, [sp, #4]
 4205 01b2 1D23     		movs	r3, #29
 4206 01b4 3348     		ldr	r0, .L164+104
 4207 01b6 0093     		str	r3, [sp]
ARM GAS  /tmp/cczRRmNE.s 			page 161


 4208 01b8 2346     		mov	r3, r4
 4209 01ba FFF7FEFF 		bl	xTaskCreateStatic
 4210              	.LVL351:
1761:Src/app.c     ****                           &nn_thread);
1762:Src/app.c     ****   assert(hdl != NULL);
 4211              		.loc 1 1762 3 is_stmt 1 view .LVU1371
 4212 01be 20B9     		cbnz	r0, .L154
 4213              		.loc 1 1762 3 is_stmt 0 discriminator 1 view .LVU1372
 4214 01c0 40F2E261 		movw	r1, #1762
 4215 01c4 304B     		ldr	r3, .L164+108
 4216 01c6 234A     		ldr	r2, .L164+56
 4217 01c8 81E7     		b	.L163
 4218              	.L154:
1763:Src/app.c     ****   hdl = xTaskCreateStatic(dp_thread_fct, "dp", configMINIMAL_STACK_SIZE * 2, NULL, dp_priority, dp_
 4219              		.loc 1 1763 3 is_stmt 1 view .LVU1373
 4220              		.loc 1 1763 9 is_stmt 0 view .LVU1374
 4221 01ca 304B     		ldr	r3, .L164+112
 4222 01cc 4FF40062 		mov	r2, #2048
 4223 01d0 0293     		str	r3, [sp, #8]
 4224 01d2 2F4B     		ldr	r3, .L164+116
 4225 01d4 2F49     		ldr	r1, .L164+120
 4226 01d6 0193     		str	r3, [sp, #4]
 4227 01d8 1A23     		movs	r3, #26
 4228 01da 2F48     		ldr	r0, .L164+124
 4229              	.LVL352:
 4230              		.loc 1 1763 9 view .LVU1375
 4231 01dc 0093     		str	r3, [sp]
 4232 01de 2346     		mov	r3, r4
 4233 01e0 FFF7FEFF 		bl	xTaskCreateStatic
 4234              	.LVL353:
1764:Src/app.c     ****                           &dp_thread);
1765:Src/app.c     ****   assert(hdl != NULL);
 4235              		.loc 1 1765 3 is_stmt 1 view .LVU1376
 4236 01e4 20B9     		cbnz	r0, .L155
 4237              		.loc 1 1765 3 is_stmt 0 discriminator 1 view .LVU1377
 4238 01e6 40F2E561 		movw	r1, #1765
 4239 01ea 274B     		ldr	r3, .L164+108
 4240 01ec 194A     		ldr	r2, .L164+56
 4241 01ee 6EE7     		b	.L163
 4242              	.L155:
1766:Src/app.c     ****   hdl = xTaskCreateStatic(isp_thread_fct, "isp", configMINIMAL_STACK_SIZE * 2, NULL, isp_priority, 
 4243              		.loc 1 1766 3 is_stmt 1 view .LVU1378
 4244              		.loc 1 1766 9 is_stmt 0 view .LVU1379
 4245 01f0 2A4B     		ldr	r3, .L164+128
 4246 01f2 4FF40062 		mov	r2, #2048
 4247 01f6 0293     		str	r3, [sp, #8]
 4248 01f8 294B     		ldr	r3, .L164+132
 4249 01fa 2A49     		ldr	r1, .L164+136
 4250 01fc CDE90093 		strd	r9, r3, [sp]
 4251 0200 2948     		ldr	r0, .L164+140
 4252              	.LVL354:
 4253              		.loc 1 1766 9 view .LVU1380
 4254 0202 2346     		mov	r3, r4
 4255 0204 FFF7FEFF 		bl	xTaskCreateStatic
 4256              	.LVL355:
1767:Src/app.c     ****                           &isp_thread);
1768:Src/app.c     ****   assert(hdl != NULL);
ARM GAS  /tmp/cczRRmNE.s 			page 162


 4257              		.loc 1 1768 3 is_stmt 1 view .LVU1381
 4258 0208 20B9     		cbnz	r0, .L144
 4259              		.loc 1 1768 3 is_stmt 0 discriminator 1 view .LVU1382
 4260 020a 4FF4DD61 		mov	r1, #1768
 4261 020e 1E4B     		ldr	r3, .L164+108
 4262 0210 104A     		ldr	r2, .L164+56
 4263 0212 5CE7     		b	.L163
 4264              	.L144:
1769:Src/app.c     **** }
 4265              		.loc 1 1769 1 view .LVU1383
 4266 0214 13B0     		add	sp, sp, #76
 4267              		.cfi_def_cfa_offset 28
 4268              		@ sp needed
 4269 0216 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4270              	.L165:
 4271 021a 00BF     		.align	2
 4272              	.L164:
 4273 021c 00ED00E0 		.word	-536810240
 4274 0220 00000000 		.word	.LC25
 4275 0224 00882C00 		.word	lcd_bg_buffer
 4276 0228 00C05D00 		.word	6144000
 4277 022c 00181500 		.word	lcd_fg_buffer
 4278 0230 00701700 		.word	1536000
 4279 0234 00000000 		.word	lcd_bg_buffer_disp_idx
 4280 0238 2003E001 		.word	31458080
 4281 023c 00D02000 		.word	lcd_fg_buffer+768000
 4282 0240 00600900 		.word	screen_buffer
 4283 0244 00000000 		.word	.LC4
 4284 0248 00000000 		.word	__func__.5
 4285 024c 0E000000 		.word	.LC2
 4286 0250 00000000 		.word	Font20
 4287 0254 00000000 		.word	__func__.20
 4288 0258 00000000 		.word	nn_input_buffers
 4289 025c 00000000 		.word	cpu_load
 4290 0260 00000000 		.word	isp_sem_buffer
 4291 0264 00000000 		.word	isp_sem
 4292 0268 11000000 		.word	.LC26
 4293 026c 04000000 		.word	disp+4
 4294 0270 19000000 		.word	.LC27
 4295 0274 25000000 		.word	.LC28
 4296 0278 00000000 		.word	nn_thread
 4297 027c 00000000 		.word	nn_thread_stack
 4298 0280 2F000000 		.word	.LC29
 4299 0284 00000000 		.word	nn_thread_fct
 4300 0288 32000000 		.word	.LC30
 4301 028c 00000000 		.word	dp_thread
 4302 0290 00000000 		.word	dp_thread_stack
 4303 0294 3E000000 		.word	.LC31
 4304 0298 00000000 		.word	dp_thread_fct
 4305 029c 00000000 		.word	isp_thread
 4306 02a0 00000000 		.word	isp_thread_stack
 4307 02a4 41000000 		.word	.LC32
 4308 02a8 00000000 		.word	isp_thread_fct
 4309 02ac 00EE0200 		.word	192000
 4310 02b0 04000000 		.word	nn_input_queue+4
 4311              		.cfi_endproc
 4312              	.LFE7411:
ARM GAS  /tmp/cczRRmNE.s 			page 163


 4314              		.section	.text.CMW_CAMERA_PIPE_FrameEventCallback,"ax",%progbits
 4315              		.align	1
 4316              		.global	CMW_CAMERA_PIPE_FrameEventCallback
 4317              		.syntax unified
 4318              		.thumb
 4319              		.thumb_func
 4321              	CMW_CAMERA_PIPE_FrameEventCallback:
 4322              	.LVL356:
 4323              	.LFB7412:
1770:Src/app.c     **** 
1771:Src/app.c     **** int CMW_CAMERA_PIPE_FrameEventCallback(uint32_t pipe)
1772:Src/app.c     **** {
 4324              		.loc 1 1772 1 is_stmt 1 view -0
 4325              		.cfi_startproc
 4326              		@ args = 0, pretend = 0, frame = 8
 4327              		@ frame_needed = 0, uses_anonymous_args = 0
1773:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4328              		.loc 1 1773 3 view .LVU1385
 4329              		.loc 1 1773 6 is_stmt 0 view .LVU1386
 4330 0000 0128     		cmp	r0, #1
1772:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4331              		.loc 1 1772 1 view .LVU1387
 4332 0002 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 4333              		.cfi_def_cfa_offset 40
 4334              		.cfi_offset 4, -32
 4335              		.cfi_offset 5, -28
 4336              		.cfi_offset 6, -24
 4337              		.cfi_offset 7, -20
 4338              		.cfi_offset 8, -16
 4339              		.cfi_offset 9, -12
 4340              		.cfi_offset 10, -8
 4341              		.cfi_offset 14, -4
1772:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4342              		.loc 1 1772 1 view .LVU1388
 4343 0006 0646     		mov	r6, r0
 4344              		.loc 1 1773 6 view .LVU1389
 4345 0008 50D1     		bne	.L167
1774:Src/app.c     ****     app_main_pipe_frame_event();
 4346              		.loc 1 1774 5 is_stmt 1 view .LVU1390
 4347              	.LBB581:
 4348              	.LBI581:
 554:Src/app.c     **** {
 4349              		.loc 1 554 13 view .LVU1391
 4350              	.LBB582:
 556:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4351              		.loc 1 556 3 view .LVU1392
 556:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4352              		.loc 1 556 47 is_stmt 0 view .LVU1393
 4353 000a 514F     		ldr	r7, .L193
 557:Src/app.c     ****   int ret;
 4354              		.loc 1 557 47 view .LVU1394
 4355 000c DFF87081 		ldr	r8, .L193+48
 556:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4356              		.loc 1 556 47 view .LVU1395
 4357 0010 3D68     		ldr	r5, [r7]
 557:Src/app.c     ****   int ret;
 4358              		.loc 1 557 47 view .LVU1396
ARM GAS  /tmp/cczRRmNE.s 			page 164


 4359 0012 D8F80040 		ldr	r4, [r8]
 556:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4360              		.loc 1 556 47 view .LVU1397
 4361 0016 0135     		adds	r5, r5, #1
 556:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4362              		.loc 1 556 7 view .LVU1398
 4363 0018 6B42     		rsbs	r3, r5, #0
 4364 001a 03F00303 		and	r3, r3, #3
 557:Src/app.c     ****   int ret;
 4365              		.loc 1 557 47 view .LVU1399
 4366 001e 04F10104 		add	r4, r4, #1
 556:Src/app.c     ****   int next_capt_idx = (lcd_bg_buffer_capt_idx + 1) % DISPLAY_BUFFER_NB;
 4367              		.loc 1 556 7 view .LVU1400
 4368 0022 05F00305 		and	r5, r5, #3
 4369 0026 55EA43B5 		csneg	r5, r5, r3, mi
 4370              	.LVL357:
 557:Src/app.c     ****   int ret;
 4371              		.loc 1 557 3 is_stmt 1 view .LVU1401
 557:Src/app.c     ****   int ret;
 4372              		.loc 1 557 7 is_stmt 0 view .LVU1402
 4373 002a 6342     		rsbs	r3, r4, #0
 4374 002c 03F00303 		and	r3, r3, #3
 561:Src/app.c     ****   assert(ret == HAL_OK);
 4375              		.loc 1 561 78 view .LVU1403
 4376 0030 DFF850A1 		ldr	r10, .L193+52
 4377 0034 DFF85091 		ldr	r9, .L193+56
 557:Src/app.c     ****   int ret;
 4378              		.loc 1 557 7 view .LVU1404
 4379 0038 04F00304 		and	r4, r4, #3
 4380 003c 54EA43B4 		csneg	r4, r4, r3, mi
 4381              	.LVL358:
 558:Src/app.c     **** 
 4382              		.loc 1 558 3 is_stmt 1 view .LVU1405
 560:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4383              		.loc 1 560 3 view .LVU1406
 560:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4384              		.loc 1 560 9 is_stmt 0 view .LVU1407
 4385 0040 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 4386              	.LVL359:
 560:Src/app.c     ****                                          DCMIPP_MEMORY_ADDRESS_0, (uint32_t) lcd_bg_buffer[next_cap
 4387              		.loc 1 560 9 view .LVU1408
 4388 0044 3146     		mov	r1, r6
 4389 0046 0022     		movs	r2, #0
 4390 0048 0AFB0493 		mla	r3, r10, r4, r9
 4391 004c FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 4392              	.LVL360:
 562:Src/app.c     **** 
 4393              		.loc 1 562 3 is_stmt 1 view .LVU1409
 4394 0050 0146     		mov	r1, r0
 4395 0052 30B1     		cbz	r0, .L168
 562:Src/app.c     **** 
 4396              		.loc 1 562 3 is_stmt 0 discriminator 1 view .LVU1410
 4397 0054 40F23221 		movw	r1, #562
 4398 0058 3E4B     		ldr	r3, .L193+4
 4399 005a 3F4A     		ldr	r2, .L193+8
 4400              	.LVL361:
 4401              	.L192:
ARM GAS  /tmp/cczRRmNE.s 			page 165


 4402              	.LBB583:
 4403              	.LBB584:
 546:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4404              		.loc 1 546 3 discriminator 1 view .LVU1411
 4405 005c 3F48     		ldr	r0, .L193+12
 4406 005e FFF7FEFF 		bl	__assert_func
 4407              	.LVL362:
 4408              	.L168:
 546:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4409              		.loc 1 546 3 discriminator 1 view .LVU1412
 4410              	.LBE584:
 4411              	.LBE583:
 564:Src/app.c     ****   lcd_bg_buffer_disp_idx = next_disp_idx;
 4412              		.loc 1 564 3 is_stmt 1 view .LVU1413
 4413              	.LBB586:
 4414              	.LBI583:
 541:Src/app.c     **** {
 4415              		.loc 1 541 13 view .LVU1414
 4416              	.LBB585:
 543:Src/app.c     **** 
 4417              		.loc 1 543 3 view .LVU1415
 545:Src/app.c     ****   assert(ret == 0);
 4418              		.loc 1 545 3 view .LVU1416
 545:Src/app.c     ****   assert(ret == 0);
 4419              		.loc 1 545 9 is_stmt 0 view .LVU1417
 4420 0062 0AFB0590 		mla	r0, r10, r5, r9
 4421              	.LVL363:
 545:Src/app.c     ****   assert(ret == 0);
 4422              		.loc 1 545 9 view .LVU1418
 4423 0066 FFF7FEFF 		bl	SCRL_SetAddress_NoReload
 4424              	.LVL364:
 546:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4425              		.loc 1 546 3 is_stmt 1 view .LVU1419
 4426 006a 20B1     		cbz	r0, .L169
 546:Src/app.c     ****   ret = SCRL_ReloadLayer(SCRL_LAYER_0);
 4427              		.loc 1 546 3 is_stmt 0 discriminator 1 view .LVU1420
 4428 006c 40F22221 		movw	r1, #546
 4429 0070 3B4B     		ldr	r3, .L193+16
 4430 0072 3C4A     		ldr	r2, .L193+20
 4431 0074 F2E7     		b	.L192
 4432              	.L169:
 547:Src/app.c     ****   assert(ret == 0);
 4433              		.loc 1 547 3 is_stmt 1 view .LVU1421
 547:Src/app.c     ****   assert(ret == 0);
 4434              		.loc 1 547 9 is_stmt 0 view .LVU1422
 4435 0076 FFF7FEFF 		bl	SCRL_ReloadLayer
 4436              	.LVL365:
 548:Src/app.c     **** 
 4437              		.loc 1 548 3 is_stmt 1 view .LVU1423
 4438 007a 20B1     		cbz	r0, .L170
 548:Src/app.c     **** 
 4439              		.loc 1 548 3 is_stmt 0 discriminator 1 view .LVU1424
 4440 007c 4FF40971 		mov	r1, #548
 4441 0080 374B     		ldr	r3, .L193+16
 4442 0082 384A     		ldr	r2, .L193+20
 4443 0084 EAE7     		b	.L192
 4444              	.L170:
ARM GAS  /tmp/cczRRmNE.s 			page 166


 550:Src/app.c     ****   assert(ret == 0);
 4445              		.loc 1 550 3 is_stmt 1 view .LVU1425
 550:Src/app.c     ****   assert(ret == 0);
 4446              		.loc 1 550 9 is_stmt 0 view .LVU1426
 4447 0086 FFF7FEFF 		bl	SRCL_Update
 4448              	.LVL366:
 551:Src/app.c     **** }
 4449              		.loc 1 551 3 is_stmt 1 view .LVU1427
 4450 008a 20B1     		cbz	r0, .L171
 551:Src/app.c     **** }
 4451              		.loc 1 551 3 is_stmt 0 discriminator 1 view .LVU1428
 4452 008c 40F22721 		movw	r1, #551
 4453 0090 334B     		ldr	r3, .L193+16
 4454 0092 344A     		ldr	r2, .L193+20
 4455 0094 E2E7     		b	.L192
 4456              	.L171:
 4457              	.LVL367:
 551:Src/app.c     **** }
 4458              		.loc 1 551 3 discriminator 1 view .LVU1429
 4459              	.LBE585:
 4460              	.LBE586:
 565:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 4461              		.loc 1 565 3 is_stmt 1 view .LVU1430
 568:Src/app.c     **** }
 4462              		.loc 1 568 17 is_stmt 0 view .LVU1431
 4463 0096 344A     		ldr	r2, .L193+24
 565:Src/app.c     ****   lcd_bg_buffer_capt_idx = next_capt_idx;
 4464              		.loc 1 565 26 view .LVU1432
 4465 0098 3D60     		str	r5, [r7]
 566:Src/app.c     **** 
 4466              		.loc 1 566 3 is_stmt 1 view .LVU1433
 568:Src/app.c     **** }
 4467              		.loc 1 568 17 is_stmt 0 view .LVU1434
 4468 009a 1368     		ldr	r3, [r2]
 566:Src/app.c     **** 
 4469              		.loc 1 566 26 view .LVU1435
 4470 009c C8F80040 		str	r4, [r8]
 568:Src/app.c     **** }
 4471              		.loc 1 568 3 is_stmt 1 view .LVU1436
 568:Src/app.c     **** }
 4472              		.loc 1 568 17 is_stmt 0 view .LVU1437
 4473 00a0 0133     		adds	r3, r3, #1
 4474 00a2 1360     		str	r3, [r2]
 4475              	.LVL368:
 4476              	.L172:
 568:Src/app.c     **** }
 4477              		.loc 1 568 17 view .LVU1438
 4478              	.LBE582:
 4479              	.LBE581:
1775:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
1776:Src/app.c     ****     app_ancillary_pipe_frame_event();
1777:Src/app.c     **** 
1778:Src/app.c     ****   return HAL_OK;
 4480              		.loc 1 1778 3 is_stmt 1 view .LVU1439
1779:Src/app.c     **** }
 4481              		.loc 1 1779 1 is_stmt 0 view .LVU1440
 4482 00a4 0020     		movs	r0, #0
ARM GAS  /tmp/cczRRmNE.s 			page 167


 4483 00a6 02B0     		add	sp, sp, #8
 4484              		.cfi_remember_state
 4485              		.cfi_def_cfa_offset 32
 4486              		@ sp needed
 4487 00a8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4488              	.LVL369:
 4489              	.L167:
 4490              		.cfi_restore_state
1775:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 4491              		.loc 1 1775 8 is_stmt 1 view .LVU1441
1775:Src/app.c     ****   else if (pipe == DCMIPP_PIPE2)
 4492              		.loc 1 1775 11 is_stmt 0 view .LVU1442
 4493 00ac 0228     		cmp	r0, #2
 4494 00ae F9D1     		bne	.L172
1776:Src/app.c     **** 
 4495              		.loc 1 1776 5 is_stmt 1 view .LVU1443
 4496              	.LBB587:
 4497              	.LBI587:
 572:Src/app.c     **** {
 4498              		.loc 1 572 13 view .LVU1444
 4499              	.LBB588:
 574:Src/app.c     ****   int ret;
 4500              		.loc 1 574 3 view .LVU1445
 575:Src/app.c     **** 
 4501              		.loc 1 575 3 view .LVU1446
 577:Src/app.c     ****   if (next_buffer) {
 4502              		.loc 1 577 3 view .LVU1447
 4503              	.LBB589:
 4504              	.LBI589:
 489:Src/app.c     **** {
 4505              		.loc 1 489 17 view .LVU1448
 4506              	.LVL370:
 4507              	.LBB590:
 491:Src/app.c     ****   int ret;
 4508              		.loc 1 491 3 view .LVU1449
 492:Src/app.c     **** 
 4509              		.loc 1 492 3 view .LVU1450
 494:Src/app.c     ****   if (ret == pdFALSE)
 4510              		.loc 1 494 3 view .LVU1451
 494:Src/app.c     ****   if (ret == pdFALSE)
 4511              		.loc 1 494 9 is_stmt 0 view .LVU1452
 4512 00b0 2E4C     		ldr	r4, .L193+28
 494:Src/app.c     ****   if (ret == pdFALSE)
 4513              		.loc 1 494 9 discriminator 4 view .LVU1453
 4514 00b2 0021     		movs	r1, #0
 4515 00b4 2068     		ldr	r0, [r4]
 4516              	.LVL371:
 494:Src/app.c     ****   if (ret == pdFALSE)
 4517              		.loc 1 494 9 discriminator 4 view .LVU1454
 4518 00b6 FFF7FEFF 		bl	xQueueSemaphoreTake
 4519              	.LVL372:
 495:Src/app.c     ****     return NULL;
 4520              		.loc 1 495 3 is_stmt 1 view .LVU1455
 495:Src/app.c     ****     return NULL;
 4521              		.loc 1 495 6 is_stmt 0 view .LVU1456
 4522 00ba 0028     		cmp	r0, #0
 4523 00bc F2D0     		beq	.L172
ARM GAS  /tmp/cczRRmNE.s 			page 168


 498:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4524              		.loc 1 498 3 is_stmt 1 view .LVU1457
 498:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4525              		.loc 1 498 23 is_stmt 0 view .LVU1458
 4526 00be D4F8B420 		ldr	r2, [r4, #180]
 498:Src/app.c     ****   bq->free_idx = (bq->free_idx + 1) % bq->buffer_nb;
 4527              		.loc 1 498 7 view .LVU1459
 4528 00c2 04EB8203 		add	r3, r4, r2, lsl #2
 4529 00c6 D3F8AC50 		ldr	r5, [r3, #172]
 4530              	.LVL373:
 499:Src/app.c     **** 
 4531              		.loc 1 499 3 is_stmt 1 view .LVU1460
 499:Src/app.c     **** 
 4532              		.loc 1 499 37 is_stmt 0 view .LVU1461
 4533 00ca D4F8A830 		ldr	r3, [r4, #168]
 499:Src/app.c     **** 
 4534              		.loc 1 499 32 view .LVU1462
 4535 00ce 0132     		adds	r2, r2, #1
 499:Src/app.c     **** 
 4536              		.loc 1 499 37 view .LVU1463
 4537 00d0 92FBF3F1 		sdiv	r1, r2, r3
 4538 00d4 03FB1122 		mls	r2, r3, r1, r2
 499:Src/app.c     **** 
 4539              		.loc 1 499 16 view .LVU1464
 4540 00d8 C4F8B420 		str	r2, [r4, #180]
 501:Src/app.c     **** }
 4541              		.loc 1 501 3 is_stmt 1 view .LVU1465
 4542              	.LVL374:
 501:Src/app.c     **** }
 4543              		.loc 1 501 3 is_stmt 0 view .LVU1466
 4544              	.LBE590:
 4545              	.LBE589:
 578:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 4546              		.loc 1 578 3 is_stmt 1 view .LVU1467
 578:Src/app.c     ****     ret = HAL_DCMIPP_PIPE_SetMemoryAddress(CMW_CAMERA_GetDCMIPPHandle(), DCMIPP_PIPE2,
 4547              		.loc 1 578 6 is_stmt 0 view .LVU1468
 4548 00dc 002D     		cmp	r5, #0
 4549 00de E1D0     		beq	.L172
 579:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4550              		.loc 1 579 5 is_stmt 1 view .LVU1469
 579:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4551              		.loc 1 579 11 is_stmt 0 view .LVU1470
 4552 00e0 FFF7FEFF 		bl	CMW_CAMERA_GetDCMIPPHandle
 4553              	.LVL375:
 579:Src/app.c     ****                                            DCMIPP_MEMORY_ADDRESS_0, (uint32_t) next_buffer);
 4554              		.loc 1 579 11 discriminator 1 view .LVU1471
 4555 00e4 2B46     		mov	r3, r5
 4556 00e6 0022     		movs	r2, #0
 4557 00e8 3146     		mov	r1, r6
 4558 00ea FFF7FEFF 		bl	HAL_DCMIPP_PIPE_SetMemoryAddress
 4559              	.LVL376:
 581:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 4560              		.loc 1 581 5 is_stmt 1 view .LVU1472
 4561 00ee 20B1     		cbz	r0, .L175
 581:Src/app.c     ****     /* minus 1 since app_main_pipe_frame_event occur before app_ancillary_pipe_frame_event() */
 4562              		.loc 1 581 5 is_stmt 0 discriminator 1 view .LVU1473
 4563 00f0 40F24521 		movw	r1, #581
ARM GAS  /tmp/cczRRmNE.s 			page 169


 4564 00f4 174B     		ldr	r3, .L193+4
 4565 00f6 1E4A     		ldr	r2, .L193+32
 4566 00f8 B0E7     		b	.L192
 4567              	.L175:
 583:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4568              		.loc 1 583 5 is_stmt 1 view .LVU1474
 583:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4569              		.loc 1 583 48 is_stmt 0 view .LVU1475
 4570 00fa 1B4B     		ldr	r3, .L193+24
 583:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4571              		.loc 1 583 31 view .LVU1476
 4572 00fc 1D4A     		ldr	r2, .L193+36
 583:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4573              		.loc 1 583 48 view .LVU1477
 4574 00fe 1B68     		ldr	r3, [r3]
 4575              	.LBB591:
 4576              	.LBB592:
 528:Src/app.c     ****   int ret;
 4577              		.loc 1 528 14 view .LVU1478
 4578 0100 0190     		str	r0, [sp, #4]
 4579              	.LBE592:
 4580              	.LBE591:
 583:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4581              		.loc 1 583 48 view .LVU1479
 4582 0102 013B     		subs	r3, r3, #1
 583:Src/app.c     ****     bqueue_put_ready(&nn_input_queue);
 4583              		.loc 1 583 31 view .LVU1480
 4584 0104 1360     		str	r3, [r2]
 584:Src/app.c     ****   }
 4585              		.loc 1 584 5 is_stmt 1 view .LVU1481
 4586              	.LBB594:
 4587              	.LBI591:
 526:Src/app.c     **** {
 4588              		.loc 1 526 13 view .LVU1482
 4589              	.LVL377:
 4590              	.LBB593:
 528:Src/app.c     ****   int ret;
 4591              		.loc 1 528 3 view .LVU1483
 529:Src/app.c     **** 
 4592              		.loc 1 529 3 view .LVU1484
 531:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4593              		.loc 1 531 3 view .LVU1485
 531:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4594              		.loc 1 531 7 is_stmt 0 view .LVU1486
 4595 0106 FFF7FEFF 		bl	xPortIsInsideInterrupt
 4596              	.LVL378:
 531:Src/app.c     ****     ret = xSemaphoreGiveFromISR(bq->ready, &xHigherPriorityTaskWoken);
 4597              		.loc 1 531 6 discriminator 1 view .LVU1487
 4598 010a 0346     		mov	r3, r0
 4599 010c A0B1     		cbz	r0, .L176
 532:Src/app.c     ****     assert(ret == pdTRUE);
 4600              		.loc 1 532 5 is_stmt 1 view .LVU1488
 532:Src/app.c     ****     assert(ret == pdTRUE);
 4601              		.loc 1 532 11 is_stmt 0 view .LVU1489
 4602 010e 606D     		ldr	r0, [r4, #84]
 4603 0110 01A9     		add	r1, sp, #4
 4604 0112 FFF7FEFF 		bl	xQueueGiveFromISR
ARM GAS  /tmp/cczRRmNE.s 			page 170


 4605              	.LVL379:
 533:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4606              		.loc 1 533 5 is_stmt 1 view .LVU1490
 4607 0116 0128     		cmp	r0, #1
 4608 0118 04D0     		beq	.L177
 533:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4609              		.loc 1 533 5 is_stmt 0 discriminator 1 view .LVU1491
 4610 011a 40F21521 		movw	r1, #533
 4611 011e 164B     		ldr	r3, .L193+40
 4612 0120 164A     		ldr	r2, .L193+44
 4613 0122 9BE7     		b	.L192
 4614              	.L177:
 534:Src/app.c     ****   } else {
 4615              		.loc 1 534 5 is_stmt 1 view .LVU1492
 534:Src/app.c     ****   } else {
 4616              		.loc 1 534 5 view .LVU1493
 4617 0124 019B     		ldr	r3, [sp, #4]
 4618 0126 002B     		cmp	r3, #0
 4619 0128 BCD0     		beq	.L172
 534:Src/app.c     ****   } else {
 4620              		.loc 1 534 5 discriminator 1 view .LVU1494
 4621 012a 4FF0E023 		mov	r3, #-536813568
 4622 012e 4FF08052 		mov	r2, #268435456
 4623 0132 C3F8042D 		str	r2, [r3, #3332]
 4624 0136 B5E7     		b	.L172
 4625              	.LVL380:
 4626              	.L176:
 536:Src/app.c     ****     assert(ret == pdTRUE);
 4627              		.loc 1 536 5 view .LVU1495
 536:Src/app.c     ****     assert(ret == pdTRUE);
 4628              		.loc 1 536 11 is_stmt 0 view .LVU1496
 4629 0138 0246     		mov	r2, r0
 4630 013a 0146     		mov	r1, r0
 4631 013c 606D     		ldr	r0, [r4, #84]
 4632 013e FFF7FEFF 		bl	xQueueGenericSend
 4633              	.LVL381:
 537:Src/app.c     ****   }
 4634              		.loc 1 537 5 is_stmt 1 view .LVU1497
 4635 0142 0128     		cmp	r0, #1
 4636 0144 AED0     		beq	.L172
 537:Src/app.c     ****   }
 4637              		.loc 1 537 5 is_stmt 0 discriminator 1 view .LVU1498
 4638 0146 40F21921 		movw	r1, #537
 4639 014a 0B4B     		ldr	r3, .L193+40
 4640 014c 0B4A     		ldr	r2, .L193+44
 4641 014e 85E7     		b	.L192
 4642              	.L194:
 4643              		.align	2
 4644              	.L193:
 4645 0150 00000000 		.word	lcd_bg_buffer_disp_idx
 4646 0154 00000000 		.word	.LC18
 4647 0158 00000000 		.word	__func__.3
 4648 015c 0E000000 		.word	.LC2
 4649 0160 00000000 		.word	.LC4
 4650 0164 00000000 		.word	__func__.2
 4651 0168 00000000 		.word	frame_event_nb
 4652 016c 00000000 		.word	nn_input_queue
ARM GAS  /tmp/cczRRmNE.s 			page 171


 4653 0170 00000000 		.word	__func__.1
 4654 0174 00000000 		.word	frame_event_nb_for_resize
 4655 0178 00000000 		.word	.LC1
 4656 017c 00000000 		.word	__func__.0
 4657 0180 00000000 		.word	lcd_bg_buffer_capt_idx
 4658 0184 00701700 		.word	1536000
 4659 0188 00882C00 		.word	lcd_bg_buffer
 4660              	.LBE593:
 4661              	.LBE594:
 4662              	.LBE588:
 4663              	.LBE587:
 4664              		.cfi_endproc
 4665              	.LFE7412:
 4667              		.section	.text.CMW_CAMERA_PIPE_VsyncEventCallback,"ax",%progbits
 4668              		.align	1
 4669              		.global	CMW_CAMERA_PIPE_VsyncEventCallback
 4670              		.syntax unified
 4671              		.thumb
 4672              		.thumb_func
 4674              	CMW_CAMERA_PIPE_VsyncEventCallback:
 4675              	.LVL382:
 4676              	.LFB7413:
1780:Src/app.c     **** 
1781:Src/app.c     **** int CMW_CAMERA_PIPE_VsyncEventCallback(uint32_t pipe)
1782:Src/app.c     **** {
 4677              		.loc 1 1782 1 is_stmt 1 view -0
 4678              		.cfi_startproc
 4679              		@ args = 0, pretend = 0, frame = 8
 4680              		@ frame_needed = 0, uses_anonymous_args = 0
1783:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4681              		.loc 1 1783 3 view .LVU1500
 4682              		.loc 1 1783 6 is_stmt 0 view .LVU1501
 4683 0000 0128     		cmp	r0, #1
1782:Src/app.c     ****   if (pipe == DCMIPP_PIPE1)
 4684              		.loc 1 1782 1 view .LVU1502
 4685 0002 07B5     		push	{r0, r1, r2, lr}
 4686              		.cfi_def_cfa_offset 16
 4687              		.cfi_offset 14, -4
 4688              		.loc 1 1783 6 view .LVU1503
 4689 0004 10D1     		bne	.L196
1784:Src/app.c     ****     app_main_pipe_vsync_event();
 4690              		.loc 1 1784 5 is_stmt 1 view .LVU1504
 4691              	.LBB597:
 4692              	.LBI597:
 588:Src/app.c     **** {
 4693              		.loc 1 588 13 view .LVU1505
 4694              	.LBB598:
 590:Src/app.c     ****   int ret;
 4695              		.loc 1 590 3 view .LVU1506
 590:Src/app.c     ****   int ret;
 4696              		.loc 1 590 14 is_stmt 0 view .LVU1507
 4697 0006 0023     		movs	r3, #0
 4698 0008 0193     		str	r3, [sp, #4]
 591:Src/app.c     **** 
 4699              		.loc 1 591 3 is_stmt 1 view .LVU1508
 593:Src/app.c     ****   if (ret == pdTRUE)
 4700              		.loc 1 593 3 view .LVU1509
ARM GAS  /tmp/cczRRmNE.s 			page 172


 593:Src/app.c     ****   if (ret == pdTRUE)
 4701              		.loc 1 593 9 is_stmt 0 view .LVU1510
 4702 000a 094B     		ldr	r3, .L201
 4703 000c 01A9     		add	r1, sp, #4
 4704 000e 1868     		ldr	r0, [r3]
 4705              	.LVL383:
 593:Src/app.c     ****   if (ret == pdTRUE)
 4706              		.loc 1 593 9 view .LVU1511
 4707 0010 FFF7FEFF 		bl	xQueueGiveFromISR
 4708              	.LVL384:
 594:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4709              		.loc 1 594 3 is_stmt 1 view .LVU1512
 594:Src/app.c     ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 4710              		.loc 1 594 6 is_stmt 0 view .LVU1513
 4711 0014 0128     		cmp	r0, #1
 4712 0016 07D1     		bne	.L196
 595:Src/app.c     **** }
 4713              		.loc 1 595 5 is_stmt 1 view .LVU1514
 595:Src/app.c     **** }
 4714              		.loc 1 595 5 view .LVU1515
 4715 0018 019B     		ldr	r3, [sp, #4]
 4716 001a 2BB1     		cbz	r3, .L196
 595:Src/app.c     **** }
 4717              		.loc 1 595 5 discriminator 1 view .LVU1516
 4718 001c 4FF0E023 		mov	r3, #-536813568
 4719 0020 4FF08052 		mov	r2, #268435456
 4720 0024 C3F8042D 		str	r2, [r3, #3332]
 595:Src/app.c     **** }
 4721              		.loc 1 595 5 discriminator 3 view .LVU1517
 4722              	.LVL385:
 4723              	.L196:
 595:Src/app.c     **** }
 4724              		.loc 1 595 5 is_stmt 0 discriminator 3 view .LVU1518
 4725              	.LBE598:
 4726              	.LBE597:
1785:Src/app.c     **** 
1786:Src/app.c     ****   return HAL_OK;
 4727              		.loc 1 1786 3 is_stmt 1 view .LVU1519
1787:Src/app.c     **** }
 4728              		.loc 1 1787 1 is_stmt 0 view .LVU1520
 4729 0028 0020     		movs	r0, #0
 4730 002a 03B0     		add	sp, sp, #12
 4731              		.cfi_def_cfa_offset 4
 4732              		@ sp needed
 4733 002c 5DF804FB 		ldr	pc, [sp], #4
 4734              	.L202:
 4735              		.align	2
 4736              	.L201:
 4737 0030 00000000 		.word	isp_sem
 4738              		.cfi_endproc
 4739              	.LFE7413:
 4741              		.section	.rodata.__func__.0,"a"
 4744              	__func__.0:
 4745 0000 62717565 		.ascii	"bqueue_put_ready\000"
 4745      75655F70 
 4745      75745F72 
 4745      65616479 
ARM GAS  /tmp/cczRRmNE.s 			page 173


 4745      00
 4746              		.section	.rodata.__func__.1,"a"
 4749              	__func__.1:
 4750 0000 6170705F 		.ascii	"app_ancillary_pipe_frame_event\000"
 4750      616E6369 
 4750      6C6C6172 
 4750      795F7069 
 4750      70655F66 
 4751              		.section	.rodata.__func__.2,"a"
 4754              	__func__.2:
 4755 0000 72656C6F 		.ascii	"reload_bg_layer\000"
 4755      61645F62 
 4755      675F6C61 
 4755      79657200 
 4756              		.section	.rodata.__func__.3,"a"
 4759              	__func__.3:
 4760 0000 6170705F 		.ascii	"app_main_pipe_frame_event\000"
 4760      6D61696E 
 4760      5F706970 
 4760      655F6672 
 4760      616D655F 
 4761              		.section	.rodata.__func__.5,"a"
 4764              	__func__.5:
 4765 0000 44697370 		.ascii	"Display_init\000"
 4765      6C61795F 
 4765      696E6974 
 4765      00
 4766              		.section	.rodata.__func__.6,"a"
 4769              	__func__.6:
 4770 0000 62717565 		.ascii	"bqueue_put_free\000"
 4770      75655F70 
 4770      75745F66 
 4770      72656500 
 4771              		.section	.rodata.__func__.7,"a"
 4774              	__func__.7:
 4775 0000 66616365 		.ascii	"face_landmark_prepare_input\000"
 4775      5F6C616E 
 4775      646D6172 
 4775      6B5F7072 
 4775      65706172 
 4776              		.section	.rodata.__func__.8,"a"
 4779              	__func__.8:
 4780 0000 796F6C6F 		.ascii	"yolo_detector_run\000"
 4780      5F646574 
 4780      6563746F 
 4780      725F7275 
 4780      6E00
 4781              		.section	.rodata.__func__.9,"a"
 4784              	__func__.9:
 4785 0000 62717565 		.ascii	"bqueue_get_ready\000"
 4785      75655F67 
 4785      65745F72 
 4785      65616479 
 4785      00
 4786              		.section	.rodata.__func__.10,"a"
 4789              	__func__.10:
 4790 0000 66616365 		.ascii	"face_landmark_init\000"
ARM GAS  /tmp/cczRRmNE.s 			page 174


 4790      5F6C616E 
 4790      646D6172 
 4790      6B5F696E 
 4790      697400
 4791              		.section	.rodata.__func__.11,"a"
 4794              	__func__.11:
 4795 0000 796F6C6F 		.ascii	"yolo_detector_init\000"
 4795      5F646574 
 4795      6563746F 
 4795      725F696E 
 4795      697400
 4796              		.section	.rodata.__func__.12,"a"
 4799              	__func__.12:
 4800 0000 6E6E5F74 		.ascii	"nn_thread_fct\000"
 4800      68726561 
 4800      645F6663 
 4800      7400
 4801              		.section	.rodata.__func__.13,"a"
 4804              	__func__.13:
 4805 0000 64705F63 		.ascii	"dp_commit_drawing_area\000"
 4805      6F6D6D69 
 4805      745F6472 
 4805      6177696E 
 4805      675F6172 
 4806              		.section	.rodata.__func__.14,"a"
 4809              	__func__.14:
 4810 0000 64705F75 		.ascii	"dp_update_drawing_area\000"
 4810      70646174 
 4810      655F6472 
 4810      6177696E 
 4810      675F6172 
 4811              		.section	.rodata.__func__.15,"a"
 4814              	__func__.15:
 4815 0000 62757474 		.ascii	"button_init\000"
 4815      6F6E5F69 
 4815      6E697400 
 4816              		.section	.rodata.__func__.16,"a"
 4819              	__func__.16:
 4820 0000 6F6E5F6C 		.ascii	"on_ld_toggle_button_click\000"
 4820      645F746F 
 4820      67676C65 
 4820      5F627574 
 4820      746F6E5F 
 4821              		.section	.rodata.__func__.17,"a"
 4824              	__func__.17:
 4825 0000 6F6E5F70 		.ascii	"on_pd_toggle_button_click\000"
 4825      645F746F 
 4825      67676C65 
 4825      5F627574 
 4825      746F6E5F 
 4826              		.section	.rodata.__func__.18,"a"
 4829              	__func__.18:
 4830 0000 64705F74 		.ascii	"dp_thread_fct\000"
 4830      68726561 
 4830      645F6663 
 4830      7400
 4831              		.section	.rodata.__func__.19,"a"
ARM GAS  /tmp/cczRRmNE.s 			page 175


 4834              	__func__.19:
 4835 0000 6973705F 		.ascii	"isp_thread_fct\000"
 4835      74687265 
 4835      61645F66 
 4835      637400
 4836              		.section	.rodata.__func__.20,"a"
 4839              	__func__.20:
 4840 0000 6170705F 		.ascii	"app_run\000"
 4840      72756E00 
 4841              		.section	.bss.isp_sem_buffer,"aw",%nobits
 4842              		.align	2
 4845              	isp_sem_buffer:
 4846 0000 00000000 		.space	80
 4846      00000000 
 4846      00000000 
 4846      00000000 
 4846      00000000 
 4847              		.section	.bss.isp_sem,"aw",%nobits
 4848              		.align	2
 4851              	isp_sem:
 4852 0000 00000000 		.space	4
 4853              		.section	.bss.isp_thread_stack,"aw",%nobits
 4854              		.align	2
 4857              	isp_thread_stack:
 4858 0000 00000000 		.space	8192
 4858      00000000 
 4858      00000000 
 4858      00000000 
 4858      00000000 
 4859              		.section	.bss.isp_thread,"aw",%nobits
 4860              		.align	2
 4863              	isp_thread:
 4864 0000 00000000 		.space	96
 4864      00000000 
 4864      00000000 
 4864      00000000 
 4864      00000000 
 4865              		.section	.bss.dp_thread_stack,"aw",%nobits
 4866              		.align	2
 4869              	dp_thread_stack:
 4870 0000 00000000 		.space	8192
 4870      00000000 
 4870      00000000 
 4870      00000000 
 4870      00000000 
 4871              		.section	.bss.dp_thread,"aw",%nobits
 4872              		.align	2
 4875              	dp_thread:
 4876 0000 00000000 		.space	96
 4876      00000000 
 4876      00000000 
 4876      00000000 
 4876      00000000 
 4877              		.section	.bss.nn_thread_stack,"aw",%nobits
 4878              		.align	2
 4881              	nn_thread_stack:
 4882 0000 00000000 		.space	16384
ARM GAS  /tmp/cczRRmNE.s 			page 176


 4882      00000000 
 4882      00000000 
 4882      00000000 
 4882      00000000 
 4883              		.section	.bss.nn_thread,"aw",%nobits
 4884              		.align	2
 4887              	nn_thread:
 4888 0000 00000000 		.space	96
 4888      00000000 
 4888      00000000 
 4888      00000000 
 4888      00000000 
 4889              		.section	.bss.nn_input_queue,"aw",%nobits
 4890              		.align	2
 4893              	nn_input_queue:
 4894 0000 00000000 		.space	188
 4894      00000000 
 4894      00000000 
 4894      00000000 
 4894      00000000 
 4895              		.section	.psram_bss,"aw"
 4896              		.align	5
 4899              	nn_input_buffers:
 4900 0000 00000000 		.space	614400
 4900      00000000 
 4900      00000000 
 4900      00000000 
 4900      00000000 
 4901              		.section	.bss.frame_event_nb_for_resize,"aw",%nobits
 4902              		.align	2
 4905              	frame_event_nb_for_resize:
 4906 0000 00000000 		.space	4
 4907              		.section	.bss.frame_event_nb,"aw",%nobits
 4908              		.align	2
 4911              	frame_event_nb:
 4912 0000 00000000 		.space	4
 4913              		.section	.bss.ld_landmarks,"aw",%nobits
 4914              		.align	2
 4917              	ld_landmarks:
 4918 0000 00000000 		.space	3744
 4918      00000000 
 4918      00000000 
 4918      00000000 
 4918      00000000 
 4919              		.section	.data.NN_Instance_face_landmark,"aw"
 4920              		.align	2
 4923              	NN_Instance_face_landmark:
 4924 0000 00000000 		.word	NN_Interface_face_landmark
 4925 0004 00000000 		.word	0
 4926 0008 00000000 		.space	40
 4926      00000000 
 4926      00000000 
 4926      00000000 
 4926      00000000 
 4927              		.section	.rodata.str1.1,"aMS",%progbits,1
 4928              	.LC33:
 4929 0000 66616365 		.ascii	"face_landmark\000"
ARM GAS  /tmp/cczRRmNE.s 			page 177


 4929      5F6C616E 
 4929      646D6172 
 4929      6B00
 4930              		.section	.rodata.NN_Interface_face_landmark,"a"
 4931              		.align	2
 4934              	NN_Interface_face_landmark:
 4935 0000 00000000 		.word	.LC33
 4936 0004 00000000 		.word	LL_ATON_EC_Network_Init_face_landmark
 4937 0008 00000000 		.word	LL_ATON_EC_Inference_Init_face_landmark
 4938 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_face_landmark
 4939 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_face_landmark
 4940 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_face_landmark
 4941 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_face_landmark
 4942 001c 00000000 		.word	LL_ATON_EpochBlockItems_face_landmark
 4943 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_face_landmark
 4944 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_face_landmark
 4945 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_face_landmark
 4946              		.section	.data.NN_Instance_yolo_detector,"aw"
 4947              		.align	2
 4950              	NN_Instance_yolo_detector:
 4951 0000 00000000 		.word	NN_Interface_yolo_detector
 4952 0004 00000000 		.word	0
 4953 0008 00000000 		.space	40
 4953      00000000 
 4953      00000000 
 4953      00000000 
 4953      00000000 
 4954              		.section	.rodata.str1.1
 4955              	.LC34:
 4956 000e 796F6C6F 		.ascii	"yolo_detector\000"
 4956      5F646574 
 4956      6563746F 
 4956      7200
 4957              		.section	.rodata.NN_Interface_yolo_detector,"a"
 4958              		.align	2
 4961              	NN_Interface_yolo_detector:
 4962 0000 0E000000 		.word	.LC34
 4963 0004 00000000 		.word	LL_ATON_EC_Network_Init_yolo_detector
 4964 0008 00000000 		.word	LL_ATON_EC_Inference_Init_yolo_detector
 4965 000c 00000000 		.word	LL_ATON_Set_User_Input_Buffer_yolo_detector
 4966 0010 00000000 		.word	LL_ATON_Get_User_Input_Buffer_yolo_detector
 4967 0014 00000000 		.word	LL_ATON_Set_User_Output_Buffer_yolo_detector
 4968 0018 00000000 		.word	LL_ATON_Get_User_Output_Buffer_yolo_detector
 4969 001c 00000000 		.word	LL_ATON_EpochBlockItems_yolo_detector
 4970 0020 00000000 		.word	LL_ATON_Output_Buffers_Info_yolo_detector
 4971 0024 00000000 		.word	LL_ATON_Input_Buffers_Info_yolo_detector
 4972 0028 00000000 		.word	LL_ATON_Internal_Buffers_Info_yolo_detector
 4973              		.section	.psram_bss
 4974              		.align	5
 4977              	screen_buffer:
 4978 96000 00000000 		.space	768000
 4978      00000000 
 4978      00000000 
 4978      00000000 
 4978      00000000 
 4979              		.section	.bss.cpu_load,"aw",%nobits
 4980              		.align	3
ARM GAS  /tmp/cczRRmNE.s 			page 178


 4983              	cpu_load:
 4984 0000 00000000 		.space	224
 4984      00000000 
 4984      00000000 
 4984      00000000 
 4984      00000000 
 4985              		.section	.data.disp,"aw"
 4986              		.align	2
 4989              	disp:
 4990 0000 00000000 		.space	168
 4990      00000000 
 4990      00000000 
 4990      00000000 
 4990      00000000 
 4991 00a8 00000000 		.space	20
 4991      00000000 
 4991      00000000 
 4991      00000000 
 4991      00000000 
 4992 00bc 01000000 		.word	1
 4993 00c0 00000000 		.word	0
 4994 00c4 00000000 		.space	3800
 4994      00000000 
 4994      00000000 
 4994      00000000 
 4994      00000000 
 4995              		.section	.bss.lcd_fg_buffer_rd_idx,"aw",%nobits
 4996              		.align	2
 4999              	lcd_fg_buffer_rd_idx:
 5000 0000 00000000 		.space	4
 5001              		.section	.psram_bss
 5002              		.align	5
 5005              	lcd_fg_buffer:
 5006 151800 00000000 		.space	1536000
 5006      00000000 
 5006      00000000 
 5006      00000000 
 5006      00000000 
 5007              		.section	.bss.lcd_bg_buffer_capt_idx,"aw",%nobits
 5008              		.align	2
 5011              	lcd_bg_buffer_capt_idx:
 5012 0000 00000000 		.space	4
 5013              		.section	.data.lcd_bg_buffer_disp_idx,"aw"
 5014              		.align	2
 5017              	lcd_bg_buffer_disp_idx:
 5018 0000 01000000 		.word	1
 5019              		.section	.psram_bss
 5020              		.align	5
 5023              	lcd_bg_buffer:
 5024 2c8800 00000000 		.space	6144000
 5024      00000000 
 5024      00000000 
 5024      00000000 
 5024      00000000 
 5025              		.text
 5026              	.Letext0:
 5027              		.file 5 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
ARM GAS  /tmp/cczRRmNE.s 			page 179


 5028              		.file 6 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5029              		.file 7 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5030              		.file 8 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 5031              		.file 9 "Lib/FreeRTOS/Source/include/projdefs.h"
 5032              		.file 10 "Lib/FreeRTOS/Source/portable/GCC/ARM_CM55_NTZ/non_secure/portmacrocommon.h"
 5033              		.file 11 "Lib/FreeRTOS/Source/include/FreeRTOS.h"
 5034              		.file 12 "Lib/FreeRTOS/Source/include/task.h"
 5035              		.file 13 "Lib/FreeRTOS/Source/include/queue.h"
 5036              		.file 14 "Lib/FreeRTOS/Source/include/semphr.h"
 5037              		.file 15 "STM32Cube_FW_N6/Drivers/CMSIS/Include/core_cm55.h"
 5038              		.file 16 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n657xx.h"
 5039              		.file 17 "STM32Cube_FW_N6/Drivers/CMSIS/Device/ST/STM32N6xx/Include/stm32n6xx.h"
 5040              		.file 18 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_def.h"
 5041              		.file 19 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gpio.h"
 5042              		.file 20 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_dcmipp.h"
 5043              		.file 21 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal_gfxmmu.h"
 5044              		.file 22 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_pp_output_if.h"
 5045              		.file 23 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/od_yolov8_pp_if.h"
 5046              		.file 24 "Lib/lib_vision_models_pp/lib_vision_models_pp/Inc/pd_pp_output_if.h"
 5047              		.file 25 "Inc/ld.h"
 5048              		.file 26 "Lib/screenl/Inc/scrl.h"
 5049              		.file 27 "STM32Cube_FW_N6/Drivers/BSP/STM32N6570-DK/stm32n6570_discovery.h"
 5050              		.file 28 "STM32Cube_FW_N6/Utilities/lcd/../Fonts/fonts.h"
 5051              		.file 29 "STM32Cube_FW_N6/Utilities/lcd/stm32_lcd.h"
 5052              		.file 30 "Lib/NemaGFX/include/nema_hal.h"
 5053              		.file 31 "Lib/NemaGFX/include/nema_cmdlist.h"
 5054              		.file 32 "Lib/Camera_Middleware/cmw_camera.h"
 5055              		.file 33 "Lib/ipl/Inc/IPL_resize.h"
 5056              		.file 34 "Lib/ai-postprocessing-wrapper/app_postprocess.h"
 5057              		.file 35 "Lib/AI_Runtime/Npu/ll_aton/ll_aton_runtime.h"
 5058              		.file 36 "Inc/app_cam.h"
 5059              		.file 37 "Inc/FreeRTOSConfig.h"
 5060              		.file 38 "Inc/stm32_lcd_ex.h"
 5061              		.file 39 "STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal.h"
 5062              		.file 40 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5063              		.file 41 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5064              		.file 42 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-
 5065              		.file 43 "<built-in>"
ARM GAS  /tmp/cczRRmNE.s 			page 180


DEFINED SYMBOLS
                            *ABS*:00000000 app.c
     /tmp/cczRRmNE.s:26     .text.LL_Buffer_addr_start:00000000 $t
     /tmp/cczRRmNE.s:31     .text.LL_Buffer_addr_start:00000000 LL_Buffer_addr_start
     /tmp/cczRRmNE.s:76     .text.clamp_point:00000000 $t
     /tmp/cczRRmNE.s:81     .text.clamp_point:00000000 clamp_point
     /tmp/cczRRmNE.s:162    .text.clamp_corners:00000000 $t
     /tmp/cczRRmNE.s:167    .text.clamp_corners:00000000 clamp_corners
     /tmp/cczRRmNE.s:232    .text.roi_to_corners:00000000 $t
     /tmp/cczRRmNE.s:237    .text.roi_to_corners:00000000 roi_to_corners
     /tmp/cczRRmNE.s:311    .text.isp_thread_fct:00000000 $t
     /tmp/cczRRmNE.s:316    .text.isp_thread_fct:00000000 isp_thread_fct
     /tmp/cczRRmNE.s:362    .text.isp_thread_fct:00000028 $d
     /tmp/cczRRmNE.s:4851   .bss.isp_sem:00000000 isp_sem
     /tmp/cczRRmNE.s:4834   .rodata.__func__.19:00000000 __func__.19
     /tmp/cczRRmNE.s:370    .text.on_pd_toggle_button_click:00000000 $t
     /tmp/cczRRmNE.s:375    .text.on_pd_toggle_button_click:00000000 on_pd_toggle_button_click
     /tmp/cczRRmNE.s:449    .text.on_pd_toggle_button_click:0000004c $d
     /tmp/cczRRmNE.s:4824   .rodata.__func__.17:00000000 __func__.17
     /tmp/cczRRmNE.s:456    .text.on_ld_toggle_button_click:00000000 $t
     /tmp/cczRRmNE.s:461    .text.on_ld_toggle_button_click:00000000 on_ld_toggle_button_click
     /tmp/cczRRmNE.s:535    .text.on_ld_toggle_button_click:0000004c $d
     /tmp/cczRRmNE.s:4819   .rodata.__func__.16:00000000 __func__.16
     /tmp/cczRRmNE.s:542    .text.button_process:00000000 $t
     /tmp/cczRRmNE.s:547    .text.button_process:00000000 button_process
     /tmp/cczRRmNE.s:605    .text.button_init.part.0:00000000 $t
     /tmp/cczRRmNE.s:610    .text.button_init.part.0:00000000 button_init.part.0
     /tmp/cczRRmNE.s:633    .text.button_init.part.0:00000010 $d
     /tmp/cczRRmNE.s:4814   .rodata.__func__.15:00000000 __func__.15
     /tmp/cczRRmNE.s:640    .text.display_ld_hand:00000000 $t
     /tmp/cczRRmNE.s:645    .text.display_ld_hand:00000000 display_ld_hand
     /tmp/cczRRmNE.s:955    .text.nn_thread_fct:00000000 $t
     /tmp/cczRRmNE.s:960    .text.nn_thread_fct:00000000 nn_thread_fct
     /tmp/cczRRmNE.s:1553   .text.nn_thread_fct:000001c0 $d
     /tmp/cczRRmNE.s:4950   .data.NN_Instance_yolo_detector:00000000 NN_Instance_yolo_detector
     /tmp/cczRRmNE.s:4794   .rodata.__func__.11:00000000 __func__.11
     /tmp/cczRRmNE.s:4789   .rodata.__func__.10:00000000 __func__.10
     /tmp/cczRRmNE.s:4893   .bss.nn_input_queue:00000000 nn_input_queue
     /tmp/cczRRmNE.s:4799   .rodata.__func__.12:00000000 __func__.12
     /tmp/cczRRmNE.s:4989   .data.disp:00000000 disp
     /tmp/cczRRmNE.s:4784   .rodata.__func__.9:00000000 __func__.9
     /tmp/cczRRmNE.s:4779   .rodata.__func__.8:00000000 __func__.8
     /tmp/cczRRmNE.s:1576   .text.nn_thread_fct:00000214 $t
     /tmp/cczRRmNE.s:2205   .text.nn_thread_fct:000004c8 $d
     /tmp/cczRRmNE.s:4774   .rodata.__func__.7:00000000 __func__.7
     /tmp/cczRRmNE.s:2227   .text.nn_thread_fct:0000050c $t
     /tmp/cczRRmNE.s:2615   .text.nn_thread_fct:00000668 $d
     /tmp/cczRRmNE.s:4923   .data.NN_Instance_face_landmark:00000000 NN_Instance_face_landmark
     /tmp/cczRRmNE.s:4917   .bss.ld_landmarks:00000000 ld_landmarks
     /tmp/cczRRmNE.s:4769   .rodata.__func__.6:00000000 __func__.6
     /tmp/cczRRmNE.s:2629   .text.display_hand:00000000 $t
     /tmp/cczRRmNE.s:2635   .text.display_hand:00000000 display_hand
     /tmp/cczRRmNE.s:2915   .text.display_hand:0000012c $d
     /tmp/cczRRmNE.s:2937   .text.dp_thread_fct:00000000 $t
     /tmp/cczRRmNE.s:2942   .text.dp_thread_fct:00000000 dp_thread_fct
     /tmp/cczRRmNE.s:3639   .text.dp_thread_fct:00000278 $d
     /tmp/cczRRmNE.s:4829   .rodata.__func__.18:00000000 __func__.18
ARM GAS  /tmp/cczRRmNE.s 			page 181


     /tmp/cczRRmNE.s:4809   .rodata.__func__.14:00000000 __func__.14
     /tmp/cczRRmNE.s:4983   .bss.cpu_load:00000000 cpu_load
     /tmp/cczRRmNE.s:4804   .rodata.__func__.13:00000000 __func__.13
     /tmp/cczRRmNE.s:4999   .bss.lcd_fg_buffer_rd_idx:00000000 lcd_fg_buffer_rd_idx
     /tmp/cczRRmNE.s:5005   .psram_bss:00151800 lcd_fg_buffer
     /tmp/cczRRmNE.s:3684   .text.app_run:00000000 $t
     /tmp/cczRRmNE.s:3690   .text.app_run:00000000 app_run
     /tmp/cczRRmNE.s:4273   .text.app_run:0000021c $d
     /tmp/cczRRmNE.s:5023   .psram_bss:002c8800 lcd_bg_buffer
     /tmp/cczRRmNE.s:5017   .data.lcd_bg_buffer_disp_idx:00000000 lcd_bg_buffer_disp_idx
     /tmp/cczRRmNE.s:4977   .psram_bss:00096000 screen_buffer
     /tmp/cczRRmNE.s:4764   .rodata.__func__.5:00000000 __func__.5
     /tmp/cczRRmNE.s:4839   .rodata.__func__.20:00000000 __func__.20
     /tmp/cczRRmNE.s:4899   .psram_bss:00000000 nn_input_buffers
     /tmp/cczRRmNE.s:4845   .bss.isp_sem_buffer:00000000 isp_sem_buffer
     /tmp/cczRRmNE.s:4887   .bss.nn_thread:00000000 nn_thread
     /tmp/cczRRmNE.s:4881   .bss.nn_thread_stack:00000000 nn_thread_stack
     /tmp/cczRRmNE.s:4875   .bss.dp_thread:00000000 dp_thread
     /tmp/cczRRmNE.s:4869   .bss.dp_thread_stack:00000000 dp_thread_stack
     /tmp/cczRRmNE.s:4863   .bss.isp_thread:00000000 isp_thread
     /tmp/cczRRmNE.s:4857   .bss.isp_thread_stack:00000000 isp_thread_stack
     /tmp/cczRRmNE.s:4315   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 $t
     /tmp/cczRRmNE.s:4321   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000000 CMW_CAMERA_PIPE_FrameEventCallback
     /tmp/cczRRmNE.s:4645   .text.CMW_CAMERA_PIPE_FrameEventCallback:00000150 $d
     /tmp/cczRRmNE.s:4759   .rodata.__func__.3:00000000 __func__.3
     /tmp/cczRRmNE.s:4754   .rodata.__func__.2:00000000 __func__.2
     /tmp/cczRRmNE.s:4911   .bss.frame_event_nb:00000000 frame_event_nb
     /tmp/cczRRmNE.s:4749   .rodata.__func__.1:00000000 __func__.1
     /tmp/cczRRmNE.s:4905   .bss.frame_event_nb_for_resize:00000000 frame_event_nb_for_resize
     /tmp/cczRRmNE.s:4744   .rodata.__func__.0:00000000 __func__.0
     /tmp/cczRRmNE.s:5011   .bss.lcd_bg_buffer_capt_idx:00000000 lcd_bg_buffer_capt_idx
     /tmp/cczRRmNE.s:4668   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 $t
     /tmp/cczRRmNE.s:4674   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000000 CMW_CAMERA_PIPE_VsyncEventCallback
     /tmp/cczRRmNE.s:4737   .text.CMW_CAMERA_PIPE_VsyncEventCallback:00000030 $d
     /tmp/cczRRmNE.s:4842   .bss.isp_sem_buffer:00000000 $d
     /tmp/cczRRmNE.s:4848   .bss.isp_sem:00000000 $d
     /tmp/cczRRmNE.s:4854   .bss.isp_thread_stack:00000000 $d
     /tmp/cczRRmNE.s:4860   .bss.isp_thread:00000000 $d
     /tmp/cczRRmNE.s:4866   .bss.dp_thread_stack:00000000 $d
     /tmp/cczRRmNE.s:4872   .bss.dp_thread:00000000 $d
     /tmp/cczRRmNE.s:4878   .bss.nn_thread_stack:00000000 $d
     /tmp/cczRRmNE.s:4884   .bss.nn_thread:00000000 $d
     /tmp/cczRRmNE.s:4890   .bss.nn_input_queue:00000000 $d
     /tmp/cczRRmNE.s:4896   .psram_bss:00000000 $d
     /tmp/cczRRmNE.s:4902   .bss.frame_event_nb_for_resize:00000000 $d
     /tmp/cczRRmNE.s:4908   .bss.frame_event_nb:00000000 $d
     /tmp/cczRRmNE.s:4914   .bss.ld_landmarks:00000000 $d
     /tmp/cczRRmNE.s:4920   .data.NN_Instance_face_landmark:00000000 $d
     /tmp/cczRRmNE.s:4934   .rodata.NN_Interface_face_landmark:00000000 NN_Interface_face_landmark
     /tmp/cczRRmNE.s:4931   .rodata.NN_Interface_face_landmark:00000000 $d
     /tmp/cczRRmNE.s:4947   .data.NN_Instance_yolo_detector:00000000 $d
     /tmp/cczRRmNE.s:4961   .rodata.NN_Interface_yolo_detector:00000000 NN_Interface_yolo_detector
     /tmp/cczRRmNE.s:4958   .rodata.NN_Interface_yolo_detector:00000000 $d
     /tmp/cczRRmNE.s:4980   .bss.cpu_load:00000000 $d
     /tmp/cczRRmNE.s:4986   .data.disp:00000000 $d
     /tmp/cczRRmNE.s:4996   .bss.lcd_fg_buffer_rd_idx:00000000 $d
     /tmp/cczRRmNE.s:5008   .bss.lcd_bg_buffer_capt_idx:00000000 $d
ARM GAS  /tmp/cczRRmNE.s 			page 182


     /tmp/cczRRmNE.s:5014   .data.lcd_bg_buffer_disp_idx:00000000 $d
                           .group:00000000 wm4.0.c552ae9005b0f2cca11872fae5d4b7f2
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.e0c9f337c65cb9f22ed5f23d082bc78b
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_gcc.h.26.7a5fd1a99dbedde687044a4433ab3e15
                           .group:00000000 wm4.newlib.h.7.591ac1bd65c1f5b34864757667a05252
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.math.h.13.47cfc34cae8a1153323939c4d32cf7c2
                           .group:00000000 wm4.float.h.29.0e9d9baf95ec39f9555dc80c6e28186b
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.arm_math_types.h.94.a6c8422e2657ad4cd95bd8be69ba02aa
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4.arm_mve.h.38.47b22bbd301ce82bc6dafd1a387f65a3
                           .group:00000000 wm4.arm_math_types.h.559.cab78f278b684a3ea2271947c7aea680
                           .group:00000000 wm4.arm_math_memory.h.28.fe8a81c6a9ac13061a5f748732089249
                           .group:00000000 wm4.none.h.185.db055cca83e83f96d8d0bb450fbdf4bb
                           .group:00000000 wm4.utils.h.27.57524573fe37b04009eecf3582a4c591
                           .group:00000000 wm4.fast_math_functions.h.28.8eb7477260c1d6b62047c49a01c4cbaa
                           .group:00000000 wm4.controller_functions.h.28.7bed7d7a726df2f65b8a3d89cff01247
                           .group:00000000 wm4.filtering_functions.h.46.6cf1424fb1f86d5f9958d208b83340a1
                           .group:00000000 wm4.postprocess_conf.h.22.3cea487938a8716b861207393e069778
                           .group:00000000 wm4.app.h.24.8dd4c0fb84cd0b63d7417a5327c5d796
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.47.dc31ec4674d7bcb103c9f08809549f45
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4.app_cam.h.19.2495a46447d71a1025370e29864418f5
                           .group:00000000 wm4.app_config.h.19.88dee04c97f3e42d3acfeeca22b174e5
                           .group:00000000 wm4.assert.h.11.db24e541f16414db224bf986d21017e2
                           .group:00000000 wm4.ll_aton_config.h.20.79eb8be0291ee9086e6be08969d61846
                           .group:00000000 wm4.ll_aton_attributes.h.20.26d469460cb32db5740effdc8cc403f3
                           .group:00000000 wm4.assert.h.11.d99a111e320bc5106fc4046225782672
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.ae5ea2b0ff9ea6e39e585807e35200d3
                           .group:00000000 wm4.ll_aton_util.h.34.9098eaa90d3d72b819973556e3e5fe44
                           .group:00000000 wm4.FreeRTOS.h.59.647b1b0da38e4e98108aae13c8abe9ee
                           .group:00000000 wm4.FreeRTOSConfig.h.59.2629c72cff9e6dbe880a2dc225eae516
                           .group:00000000 wm4.FreeRTOS.h.80.7742fabaf5accf3762dc12f7f259a8a0
ARM GAS  /tmp/cczRRmNE.s 			page 183


                           .group:00000000 wm4.projdefs.h.30.55a824156f299c075c33148a9fdadb99
                           .group:00000000 wm4.portmacro.h.30.cbb4b2da41f551c2a9904f0d03a1ce3e
                           .group:00000000 wm4.portmacrocommon.h.30.d5cb67896ab50a95311be7e023da5c4f
                           .group:00000000 wm4.portmacro.h.68.4051ecf710d074fb55b16d91dfebeeaa
                           .group:00000000 wm4.portable.h.61.d557c57974d490f056246a26cdcddd6c
                           .group:00000000 wm4.mpu_wrappers.h.30.ccc5f1a6903f941a88c268f5f62af3fe
                           .group:00000000 wm4.portable.h.189.522b8bd52a171d3fd1432ef06d0caa63
                           .group:00000000 wm4.FreeRTOS.h.102.fb871f3e464d99c5a57b3115545a02ad
                           .group:00000000 wm4.list.h.59.bce6419520cd4f5f98779a1530bf2118
                           .group:00000000 wm4.task.h.56.84290139c73b47f5b9aac361361a2a31
                           .group:00000000 wm4.queue.h.68.219f47fba8b59640449b84d04c5bd6d8
                           .group:00000000 wm4.semphr.h.40.c1a9c6f5bf0feb4da0b6a45d234a79d0
                           .group:00000000 wm4.ll_aton_platform.h.20.06ded592ee586a6abb6019a90ebd54df
                           .group:00000000 wm4.stm32n6xx_hal_conf.h.21.004a06df6e15ac197e03f723792da58a
                           .group:00000000 wm4.arm_cmse.h.103.a0d15a79c4c9a67da8d5831704d7248e
                           .group:00000000 wm4.stm32n6xx.h.34.80585dd08aa426c932f6311fdb7386da
                           .group:00000000 wm4.stm32n657xx.h.26.acd272cb67318cc1a4791ce2f0720ca6
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm55.h.68.832d5cf835639cc0d28219c3d2867330
                           .group:00000000 wm4.core_cm55.h.196.52e437a270752da561676e507b35baeb
                           .group:00000000 wm4.mpu_armv8.h.32.9d72426c8e2b47753456dcb84802c5b3
                           .group:00000000 wm4.pmu_armv8.h.32.eaa95f88a71b29390b135fd81c071b6b
                           .group:00000000 wm4.core_cm55.h.4411.860dad8650880893dd57b815844f7186
                           .group:00000000 wm4.cachel1_armv7.h.32.abd77761a989e008b0c60891114a33c7
                           .group:00000000 wm4.stm32n657xx.h.575.1c2a5e6bedffc6f9083dcc857bc6d09d
                           .group:00000000 wm4.stm32n6xx.h.114.5cf793d8af485e14f110e3e24bde1aa5
                           .group:00000000 wm4.stm32_hal_legacy.h.22.87fb12bf5a1a1e00fc134f22bc9aa8c4
                           .group:00000000 wm4.stm32n6xx_hal_def.h.63.2cbbf1954826c09c874c4e06e42e8b71
                           .group:00000000 wm4.stm32n6xx_ll_bus.h.38.2366a295ee4cdb04833997d3787fcd2d
                           .group:00000000 wm4.stm32n6xx_ll_rcc.h.21.002e22a16fd7f67dde6dce41e8ba9620
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.194.1cb1283e40f9bebcd3fba2a9a961838e
                           .group:00000000 wm4.stm32n6xx_hal_rcc_ex.h.21.79aa32178dfef625fbd20d362449acfa
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.4359.3f0b7ad33826d95438602c9aebc08af9
                           .group:00000000 wm4.stm32n6xx_hal_gpio.h.21.89d54af663b98eb8fc098192053f7eeb
                           .group:00000000 wm4.stm32n6xx_hal_gpio_ex.h.22.4acb2e3511a98bb48b81cfc8e09fd59e
                           .group:00000000 wm4.stm32n6xx_hal_rif.h.21.424d0bafb874a777dee3742a22e13037
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.21.61e48c5c2e8d25d22177834b232fe45c
                           .group:00000000 wm4.stm32n6xx_hal_dma_ex.h.21.66e597beb090a165329d6ccf665e41bc
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.1020.87e2180c009560b617c1f8208140c950
                           .group:00000000 wm4.stm32n6xx_hal_cortex.h.21.f493623cc58f9454ab4eae41e395c5cc
                           .group:00000000 wm4.stm32n6xx_hal_bsec.h.21.61b309e67dd810e28897a01b1b21a97f
                           .group:00000000 wm4.stm32n6xx_hal_dcmipp.h.21.f538bfd785c6469670251ac9bc7af55d
                           .group:00000000 wm4.stm32n6xx_hal_dma2d.h.21.75c8d46cdbb72970123b3f34ae2043d7
                           .group:00000000 wm4.stm32n6xx_hal_exti.h.21.fda87e715ea6b98239ec30171d1df594
                           .group:00000000 wm4.stm32n6xx_hal_gfxmmu.h.21.9784a9103143d48bd3c37389d0e0b8e6
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.21.3f483626ff64c5bf027265bb2e1d1331
                           .group:00000000 wm4.stm32n6xx_hal_i2c_ex.h.21.79e9196c22282cdaf6b4047893638c45
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.741.1084702632703acc669e4282b3043372
                           .group:00000000 wm4.stm32n6xx_hal_icache.h.21.194b4ec6e76f32b14f65c85616854850
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.21.ae1eb09930e7e550e48e418ac5849e4d
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.1002.b13ede7fc94ed5ad1c6768a157d2149a
                           .group:00000000 wm4.stm32n6xx_ll_usb.h.21.d518a5d97876c2ff49040c20a2c4a120
                           .group:00000000 wm4.stm32n6xx_hal_pcd.h.155.27040aac6844effe2af8c180caf1dd2e
                           .group:00000000 wm4.stm32n6xx_hal_pwr.h.21.cdb73e4869c3fed3fc84f901ec0e5f0a
                           .group:00000000 wm4.stm32n6xx_hal_pwr_ex.h.21.1a673224a58b0c1e5fad8eeda6514208
                           .group:00000000 wm4.stm32n6xx_hal_ramcfg.h.21.a62dfbb4d2c14e9a8c634a215e37bd3d
                           .group:00000000 wm4.stm32n6xx_hal_spi.h.21.9f810303326e2d91749800e9911f8e4d
ARM GAS  /tmp/cczRRmNE.s 			page 184


                           .group:00000000 wm4.stm32n6xx_hal_spi.h.906.93ec0695066db4253cdbcb7d84358a0b
                           .group:00000000 wm4.stm32n6xx_hal_tim.h.21.839dd2b2a70382fb2c44f8f293a84d5f
                           .group:00000000 wm4.stm32n6xx_hal_tim_ex.h.21.e372d5ac63c13441211ea4ecbd353150
                           .group:00000000 wm4.stm32n6xx_hal_uart.h.21.230f549bfa0d5ebfd77bfb311b2aca15
                           .group:00000000 wm4.stm32n6xx_hal_uart_ex.h.21.a0d5511e1d0703b7b5278c8f5472b96d
                           .group:00000000 wm4.stm32n6xx_hal_xspi.h.21.e17898be2073b6b6b19faf30b4e304e9
                           .group:00000000 wm4.stm32n6xx_hal_cacheaxi.h.21.7c3375b7903ec42376e4883320997f74
                           .group:00000000 wm4.stm32n6xx_hal_gpu2d.h.21.48d0249122abad294a630c39cc4ebaed
                           .group:00000000 wm4.stm32n6xx_hal.h.81.5e59143eba07faca3e9aeaa5470826c8
                           .group:00000000 wm4.ll_aton_platform.h.288.664a74b8c5792a861b3d52bd39f4a693
                           .group:00000000 wm4.ATON.h.19.cf7dff4c0f1bfe90e42066f604751dc7
                           .group:00000000 wm4.ll_aton_rcompat.h.22.b2bd0d777466a5ac720f3b2429c5fea7
                           .group:00000000 wm4.ll_aton_platform.h.383.f09ccd502bb682b863f991d963ee7462
                           .group:00000000 wm4.ll_aton_osal_freertos.h.62.85a065f77def7f6fef26149f92fe1378
                           .group:00000000 wm4.ll_aton_osal.h.116.bc018513feb9b28713cf2afc78ec679b
                           .group:00000000 wm4.ll_aton_rt_user_api.h.71.e6b7f8d03b2c998f838260ad3cb6cd40
                           .group:00000000 wm4.od_pp_output_if.h.11.62a3da738caf687aa42d96759c237b2c
                           .group:00000000 wm4.mpe_pp_output_if.h.11.db0dd5ceb87072354c56b51e8f9b2a0d
                           .group:00000000 wm4.pd_pp_output_if.h.19.b7de9bd1876930668a82409743b6dbf4
                           .group:00000000 wm4.spe_pp_output_if.h.11.cb67d0d15a71c95e0e8b7fee8a9755fe
                           .group:00000000 wm4.iseg_pp_output_if.h.11.df7e791a4e783022a9fba78cdb1c05d4
                           .group:00000000 wm4.sseg_pp_output_if.h.11.caf00fb1ae24f8dc9c80bee7827b96f2
                           .group:00000000 wm4.app_postprocess.h.49.6186ff44b2c06089fe0297042919e83a
                           .group:00000000 wm4.isp_conf.h.21.bfb1d020517608810095aa56acf25d1e
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.isp_core.h.109.be5387f515355b6edcb70af2607f9a68
                           .group:00000000 wm4.ld.h.19.137dbadf938c8a0cfe15d7982e5e13e2
                           .group:00000000 wm4.cmw_errno.h.21.91021ac9b2627a1ce6b8517d105715d1
                           .group:00000000 wm4.stm32n6570_discovery_conf.h.21.f52c8202689527a3dc0d9c6cba9c0416
                           .group:00000000 wm4.stm32n6570_discovery_errno.h.22.80e523b09444a11ebe4b6e24ae914f0e
                           .group:00000000 wm4.stm32n6570_discovery_bus.h.62.3b5b2c6837f7adeb489604fa214cd371
                           .group:00000000 wm4.cmw_camera.h.33.b34cbb506ffb5bbc0bae0cee9fc48966
                           .group:00000000 wm4.stm32n6570_discovery.h.25.5fc3699797f7c334a2e25a2a6a563b07
                           .group:00000000 wm4.lcd.h.21.98701c105e66fef2e089854e5bc0fe32
                           .group:00000000 wm4.stm32_lcd.h.55.1a04e503950bf34ef3721d2ebb9542fc
                           .group:00000000 wm4.stm32_lcd_ex.h.21.eaf9c9c1000e162e58259e027110f2f5
                           .group:00000000 wm4.utils.h.19.2f7e4a8a839d9215c56961f5a9914d6d
                           .group:00000000 wm4.nema_sys_defs.h.24.0b35b5138cb9b4a3130f5d424bc2bcc0
                           .group:00000000 wm4.nema_hal.h.193.74a3b292db2bcbda0132dae40ae0f4e5
                           .group:00000000 wm4.nema_cmdlist.h.30.a652eb980f08f0ed22ad00119d504926
                           .group:00000000 wm4.nema_graphics.h.61.b3907f86eccb4e55a4b69e8aebdd3657
                           .group:00000000 wm4.nema_blender.h.30.fb13cc9231bd108bca212984b3a891e0
                           .group:00000000 wm4.nema_math.h.30.ef7265c89982f7dae18e3ec2d7f3d003
                           .group:00000000 wm4.nema_version.h.35.6aae27202c190348dff84b89d4c12df7
                           .group:00000000 wm4.nema_error.h.29.50848ed81d21ff4ae4b870fae3681118

UNDEFINED SYMBOLS
xQueueSemaphoreTake
__assert_func
CAM_IspUpdate
xQueueGenericSend
BSP_PB_GetState
cos
sin
UTIL_LCD_FillCircle
ARM GAS  /tmp/cczRRmNE.s 			page 185


LL_ATON_Output_Buffers_Info_yolo_detector
LL_ATON_Input_Buffers_Info_yolo_detector
app_postprocess_init
LL_ATON_Output_Buffers_Info_face_landmark
LL_ATON_Input_Buffers_Info_face_landmark
HAL_GetTick
CAM_NNPipe_Start
LL_ATON_Set_User_Input_Buffer_yolo_detector
LL_ATON_RT_Main
app_postprocess_run
memset
IPL_resize_bilinear_iu8ou8_with_strides_RGB
ld_post_process
memcpy
UTIL_LCD_DrawRect
UTIL_LCD_DrawLine
__aeabi_ul2d
BSP_PB_Init
SCRL_SetAddress_NoReload
UTIL_LCD_FillRect
TIM4_Get_Value
ulTaskGetIdleRunTimeCounter
memmove
UTIL_LCD_GetFont
UTIL_LCDEx_PrintfAt
SCRL_ReloadLayer
puts
SCRL_Init
UTIL_LCD_SetLayer
UTIL_LCD_Clear
UTIL_LCD_SetFont
UTIL_LCD_SetTextColor
xQueueCreateCountingSemaphoreStatic
vQueueDelete
CAM_Init
xQueueCreateMutexStatic
CAM_DisplayPipe_Start
xTaskCreateStatic
Font20
CMW_CAMERA_GetDCMIPPHandle
HAL_DCMIPP_PIPE_SetMemoryAddress
SRCL_Update
xPortIsInsideInterrupt
xQueueGiveFromISR
LL_ATON_EC_Network_Init_face_landmark
LL_ATON_EC_Inference_Init_face_landmark
LL_ATON_Set_User_Input_Buffer_face_landmark
LL_ATON_Get_User_Input_Buffer_face_landmark
LL_ATON_Set_User_Output_Buffer_face_landmark
LL_ATON_Get_User_Output_Buffer_face_landmark
LL_ATON_EpochBlockItems_face_landmark
LL_ATON_Internal_Buffers_Info_face_landmark
LL_ATON_EC_Network_Init_yolo_detector
LL_ATON_EC_Inference_Init_yolo_detector
LL_ATON_Get_User_Input_Buffer_yolo_detector
LL_ATON_Set_User_Output_Buffer_yolo_detector
LL_ATON_Get_User_Output_Buffer_yolo_detector
ARM GAS  /tmp/cczRRmNE.s 			page 186


LL_ATON_EpochBlockItems_yolo_detector
LL_ATON_Internal_Buffers_Info_yolo_detector
