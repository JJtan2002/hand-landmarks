ARM GAS  /tmp/ccjIZC0A.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 6
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"syscalls.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "Gcc/Src/syscalls.c"
  25              		.global	__env
  26              		.section	.bss.__env,"aw",%nobits
  27              		.align	2
  30              	__env:
  31 0000 00000000 		.space	4
  32              		.global	environ
  33              		.section	.data.environ,"aw"
  34              		.align	2
  37              	environ:
  38 0000 00000000 		.word	__env
  39              		.section	.text.initialise_monitor_handles,"ax",%progbits
  40              		.align	1
  41              		.global	initialise_monitor_handles
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	initialise_monitor_handles:
  47              	.LFB25:
   1:Gcc/Src/syscalls.c **** /**
   2:Gcc/Src/syscalls.c ****  ******************************************************************************
   3:Gcc/Src/syscalls.c ****  * @file      syscalls.c
   4:Gcc/Src/syscalls.c ****  * @author    Auto-generated by STM32CubeIDE
   5:Gcc/Src/syscalls.c ****  * @brief     STM32CubeIDE Minimal System calls file
   6:Gcc/Src/syscalls.c ****  *
   7:Gcc/Src/syscalls.c ****  *            For more information about which c-functions
   8:Gcc/Src/syscalls.c ****  *            need which of these lowlevel functions
   9:Gcc/Src/syscalls.c ****  *            please consult the Newlib libc-manual
  10:Gcc/Src/syscalls.c ****  ******************************************************************************
  11:Gcc/Src/syscalls.c ****  * @attention
  12:Gcc/Src/syscalls.c ****  *
  13:Gcc/Src/syscalls.c ****  * Copyright (c) 2020-2023 STMicroelectronics.
  14:Gcc/Src/syscalls.c ****  * All rights reserved.
  15:Gcc/Src/syscalls.c ****  *
ARM GAS  /tmp/ccjIZC0A.s 			page 2


  16:Gcc/Src/syscalls.c ****  * This software is licensed under terms that can be found in the LICENSE file
  17:Gcc/Src/syscalls.c ****  * in the root directory of this software component.
  18:Gcc/Src/syscalls.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  19:Gcc/Src/syscalls.c ****  *
  20:Gcc/Src/syscalls.c ****  ******************************************************************************
  21:Gcc/Src/syscalls.c ****  */
  22:Gcc/Src/syscalls.c **** 
  23:Gcc/Src/syscalls.c **** /* Includes */
  24:Gcc/Src/syscalls.c **** #include <sys/stat.h>
  25:Gcc/Src/syscalls.c **** #include <stdlib.h>
  26:Gcc/Src/syscalls.c **** #include <errno.h>
  27:Gcc/Src/syscalls.c **** #include <stdio.h>
  28:Gcc/Src/syscalls.c **** #include <signal.h>
  29:Gcc/Src/syscalls.c **** #include <time.h>
  30:Gcc/Src/syscalls.c **** #include <sys/time.h>
  31:Gcc/Src/syscalls.c **** #include <sys/times.h>
  32:Gcc/Src/syscalls.c **** 
  33:Gcc/Src/syscalls.c **** 
  34:Gcc/Src/syscalls.c **** /* Variables */
  35:Gcc/Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  36:Gcc/Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  37:Gcc/Src/syscalls.c **** 
  38:Gcc/Src/syscalls.c **** 
  39:Gcc/Src/syscalls.c **** char *__env[1] = { 0 };
  40:Gcc/Src/syscalls.c **** char **environ = __env;
  41:Gcc/Src/syscalls.c **** 
  42:Gcc/Src/syscalls.c **** 
  43:Gcc/Src/syscalls.c **** /* Functions */
  44:Gcc/Src/syscalls.c **** void initialise_monitor_handles()
  45:Gcc/Src/syscalls.c **** {
  48              		.loc 1 45 1
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 1, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53 0000 80B4     		push	{r7}
  54              		.cfi_def_cfa_offset 4
  55              		.cfi_offset 7, -4
  56 0002 00AF     		add	r7, sp, #0
  57              		.cfi_def_cfa_register 7
  46:Gcc/Src/syscalls.c **** }
  58              		.loc 1 46 1
  59 0004 00BF     		nop
  60 0006 BD46     		mov	sp, r7
  61              		.cfi_def_cfa_register 13
  62              		@ sp needed
  63 0008 5DF8047B 		ldr	r7, [sp], #4
  64              		.cfi_restore 7
  65              		.cfi_def_cfa_offset 0
  66 000c 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE25:
  70              		.section	.text._getpid,"ax",%progbits
  71              		.align	1
  72              		.global	_getpid
  73              		.syntax unified
  74              		.thumb
ARM GAS  /tmp/ccjIZC0A.s 			page 3


  75              		.thumb_func
  77              	_getpid:
  78              	.LFB26:
  47:Gcc/Src/syscalls.c **** 
  48:Gcc/Src/syscalls.c **** int _getpid(void)
  49:Gcc/Src/syscalls.c **** {
  79              		.loc 1 49 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  50:Gcc/Src/syscalls.c ****   return 1;
  89              		.loc 1 50 10
  90 0004 0123     		movs	r3, #1
  51:Gcc/Src/syscalls.c **** }
  91              		.loc 1 51 1
  92 0006 1846     		mov	r0, r3
  93 0008 BD46     		mov	sp, r7
  94              		.cfi_def_cfa_register 13
  95              		@ sp needed
  96 000a 5DF8047B 		ldr	r7, [sp], #4
  97              		.cfi_restore 7
  98              		.cfi_def_cfa_offset 0
  99 000e 7047     		bx	lr
 100              		.cfi_endproc
 101              	.LFE26:
 103              		.section	.text._kill,"ax",%progbits
 104              		.align	1
 105              		.global	_kill
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	_kill:
 111              	.LFB27:
  52:Gcc/Src/syscalls.c **** 
  53:Gcc/Src/syscalls.c **** int _kill(int pid, int sig)
  54:Gcc/Src/syscalls.c **** {
 112              		.loc 1 54 1
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 8
 115              		@ frame_needed = 1, uses_anonymous_args = 0
 116 0000 80B5     		push	{r7, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 82B0     		sub	sp, sp, #8
 121              		.cfi_def_cfa_offset 16
 122 0004 00AF     		add	r7, sp, #0
 123              		.cfi_def_cfa_register 7
 124 0006 7860     		str	r0, [r7, #4]
 125 0008 3960     		str	r1, [r7]
  55:Gcc/Src/syscalls.c ****   (void)pid;
ARM GAS  /tmp/ccjIZC0A.s 			page 4


  56:Gcc/Src/syscalls.c ****   (void)sig;
  57:Gcc/Src/syscalls.c ****   errno = EINVAL;
 126              		.loc 1 57 3
 127 000a FFF7FEFF 		bl	__errno
 128 000e 0346     		mov	r3, r0
 129              		.loc 1 57 9 discriminator 1
 130 0010 1622     		movs	r2, #22
 131 0012 1A60     		str	r2, [r3]
  58:Gcc/Src/syscalls.c ****   return -1;
 132              		.loc 1 58 10
 133 0014 4FF0FF33 		mov	r3, #-1
  59:Gcc/Src/syscalls.c **** }
 134              		.loc 1 59 1
 135 0018 1846     		mov	r0, r3
 136 001a 0837     		adds	r7, r7, #8
 137              		.cfi_def_cfa_offset 8
 138 001c BD46     		mov	sp, r7
 139              		.cfi_def_cfa_register 13
 140              		@ sp needed
 141 001e 80BD     		pop	{r7, pc}
 142              		.cfi_endproc
 143              	.LFE27:
 145              		.section	.text._exit,"ax",%progbits
 146              		.align	1
 147              		.global	_exit
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 152              	_exit:
 153              	.LFB28:
  60:Gcc/Src/syscalls.c **** 
  61:Gcc/Src/syscalls.c **** void _exit (int status)
  62:Gcc/Src/syscalls.c **** {
 154              		.loc 1 62 1
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 8
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 82B0     		sub	sp, sp, #8
 163              		.cfi_def_cfa_offset 16
 164 0004 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 166 0006 7860     		str	r0, [r7, #4]
  63:Gcc/Src/syscalls.c ****   _kill(status, -1);
 167              		.loc 1 63 3
 168 0008 4FF0FF31 		mov	r1, #-1
 169 000c 7868     		ldr	r0, [r7, #4]
 170 000e FFF7FEFF 		bl	_kill
 171              	.L7:
  64:Gcc/Src/syscalls.c ****   while (1) {}    /* Make sure we hang here */
 172              		.loc 1 64 9
 173 0012 00BF     		nop
 174 0014 FDE7     		b	.L7
 175              		.cfi_endproc
ARM GAS  /tmp/ccjIZC0A.s 			page 5


 176              	.LFE28:
 178              		.section	.text._read,"ax",%progbits
 179              		.align	1
 180              		.weak	_read
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 185              	_read:
 186              	.LFB29:
  65:Gcc/Src/syscalls.c **** }
  66:Gcc/Src/syscalls.c **** 
  67:Gcc/Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  68:Gcc/Src/syscalls.c **** {
 187              		.loc 1 68 1
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 24
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 86B0     		sub	sp, sp, #24
 196              		.cfi_def_cfa_offset 32
 197 0004 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
 199 0006 F860     		str	r0, [r7, #12]
 200 0008 B960     		str	r1, [r7, #8]
 201 000a 7A60     		str	r2, [r7, #4]
  69:Gcc/Src/syscalls.c ****   (void)file;
  70:Gcc/Src/syscalls.c ****   int DataIdx;
  71:Gcc/Src/syscalls.c **** 
  72:Gcc/Src/syscalls.c ****   for (DataIdx = 0; DataIdx < len; DataIdx++)
 202              		.loc 1 72 16
 203 000c 0023     		movs	r3, #0
 204 000e 7B61     		str	r3, [r7, #20]
 205              		.loc 1 72 3
 206 0010 0AE0     		b	.L9
 207              	.L10:
  73:Gcc/Src/syscalls.c ****   {
  74:Gcc/Src/syscalls.c ****     *ptr++ = __io_getchar();
 208              		.loc 1 74 14
 209 0012 FFF7FEFF 		bl	__io_getchar
 210 0016 0146     		mov	r1, r0
 211              		.loc 1 74 9 discriminator 1
 212 0018 BB68     		ldr	r3, [r7, #8]
 213 001a 5A1C     		adds	r2, r3, #1
 214 001c BA60     		str	r2, [r7, #8]
 215              		.loc 1 74 12 discriminator 1
 216 001e CAB2     		uxtb	r2, r1
 217 0020 1A70     		strb	r2, [r3]
  72:Gcc/Src/syscalls.c ****   {
 218              		.loc 1 72 43 discriminator 3
 219 0022 7B69     		ldr	r3, [r7, #20]
 220 0024 0133     		adds	r3, r3, #1
 221 0026 7B61     		str	r3, [r7, #20]
 222              	.L9:
  72:Gcc/Src/syscalls.c ****   {
ARM GAS  /tmp/ccjIZC0A.s 			page 6


 223              		.loc 1 72 29 discriminator 1
 224 0028 7A69     		ldr	r2, [r7, #20]
 225 002a 7B68     		ldr	r3, [r7, #4]
 226 002c 9A42     		cmp	r2, r3
 227 002e F0DB     		blt	.L10
  75:Gcc/Src/syscalls.c ****   }
  76:Gcc/Src/syscalls.c **** 
  77:Gcc/Src/syscalls.c ****   return len;
 228              		.loc 1 77 10
 229 0030 7B68     		ldr	r3, [r7, #4]
  78:Gcc/Src/syscalls.c **** }
 230              		.loc 1 78 1
 231 0032 1846     		mov	r0, r3
 232 0034 1837     		adds	r7, r7, #24
 233              		.cfi_def_cfa_offset 8
 234 0036 BD46     		mov	sp, r7
 235              		.cfi_def_cfa_register 13
 236              		@ sp needed
 237 0038 80BD     		pop	{r7, pc}
 238              		.cfi_endproc
 239              	.LFE29:
 241              		.section	.text._write,"ax",%progbits
 242              		.align	1
 243              		.weak	_write
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 248              	_write:
 249              	.LFB30:
  79:Gcc/Src/syscalls.c **** 
  80:Gcc/Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
  81:Gcc/Src/syscalls.c **** {
 250              		.loc 1 81 1
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 24
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254 0000 80B5     		push	{r7, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 86B0     		sub	sp, sp, #24
 259              		.cfi_def_cfa_offset 32
 260 0004 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 262 0006 F860     		str	r0, [r7, #12]
 263 0008 B960     		str	r1, [r7, #8]
 264 000a 7A60     		str	r2, [r7, #4]
  82:Gcc/Src/syscalls.c ****   (void)file;
  83:Gcc/Src/syscalls.c ****   int DataIdx;
  84:Gcc/Src/syscalls.c **** 
  85:Gcc/Src/syscalls.c ****   for (DataIdx = 0; DataIdx < len; DataIdx++)
 265              		.loc 1 85 16
 266 000c 0023     		movs	r3, #0
 267 000e 7B61     		str	r3, [r7, #20]
 268              		.loc 1 85 3
 269 0010 09E0     		b	.L13
 270              	.L14:
ARM GAS  /tmp/ccjIZC0A.s 			page 7


  86:Gcc/Src/syscalls.c ****   {
  87:Gcc/Src/syscalls.c ****     __io_putchar(*ptr++);
 271              		.loc 1 87 22
 272 0012 BB68     		ldr	r3, [r7, #8]
 273 0014 5A1C     		adds	r2, r3, #1
 274 0016 BA60     		str	r2, [r7, #8]
 275              		.loc 1 87 18
 276 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 277              		.loc 1 87 5
 278 001a 1846     		mov	r0, r3
 279 001c FFF7FEFF 		bl	__io_putchar
  85:Gcc/Src/syscalls.c ****   {
 280              		.loc 1 85 43 discriminator 3
 281 0020 7B69     		ldr	r3, [r7, #20]
 282 0022 0133     		adds	r3, r3, #1
 283 0024 7B61     		str	r3, [r7, #20]
 284              	.L13:
  85:Gcc/Src/syscalls.c ****   {
 285              		.loc 1 85 29 discriminator 1
 286 0026 7A69     		ldr	r2, [r7, #20]
 287 0028 7B68     		ldr	r3, [r7, #4]
 288 002a 9A42     		cmp	r2, r3
 289 002c F1DB     		blt	.L14
  88:Gcc/Src/syscalls.c ****   }
  89:Gcc/Src/syscalls.c ****   return len;
 290              		.loc 1 89 10
 291 002e 7B68     		ldr	r3, [r7, #4]
  90:Gcc/Src/syscalls.c **** }
 292              		.loc 1 90 1
 293 0030 1846     		mov	r0, r3
 294 0032 1837     		adds	r7, r7, #24
 295              		.cfi_def_cfa_offset 8
 296 0034 BD46     		mov	sp, r7
 297              		.cfi_def_cfa_register 13
 298              		@ sp needed
 299 0036 80BD     		pop	{r7, pc}
 300              		.cfi_endproc
 301              	.LFE30:
 303              		.section	.text._close,"ax",%progbits
 304              		.align	1
 305              		.global	_close
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 310              	_close:
 311              	.LFB31:
  91:Gcc/Src/syscalls.c **** 
  92:Gcc/Src/syscalls.c **** int _close(int file)
  93:Gcc/Src/syscalls.c **** {
 312              		.loc 1 93 1
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 0000 80B4     		push	{r7}
 318              		.cfi_def_cfa_offset 4
 319              		.cfi_offset 7, -4
ARM GAS  /tmp/ccjIZC0A.s 			page 8


 320 0002 83B0     		sub	sp, sp, #12
 321              		.cfi_def_cfa_offset 16
 322 0004 00AF     		add	r7, sp, #0
 323              		.cfi_def_cfa_register 7
 324 0006 7860     		str	r0, [r7, #4]
  94:Gcc/Src/syscalls.c ****   (void)file;
  95:Gcc/Src/syscalls.c ****   return -1;
 325              		.loc 1 95 10
 326 0008 4FF0FF33 		mov	r3, #-1
  96:Gcc/Src/syscalls.c **** }
 327              		.loc 1 96 1
 328 000c 1846     		mov	r0, r3
 329 000e 0C37     		adds	r7, r7, #12
 330              		.cfi_def_cfa_offset 4
 331 0010 BD46     		mov	sp, r7
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 0012 5DF8047B 		ldr	r7, [sp], #4
 335              		.cfi_restore 7
 336              		.cfi_def_cfa_offset 0
 337 0016 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE31:
 341              		.section	.text._fstat,"ax",%progbits
 342              		.align	1
 343              		.global	_fstat
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 348              	_fstat:
 349              	.LFB32:
  97:Gcc/Src/syscalls.c **** 
  98:Gcc/Src/syscalls.c **** 
  99:Gcc/Src/syscalls.c **** int _fstat(int file, struct stat *st)
 100:Gcc/Src/syscalls.c **** {
 350              		.loc 1 100 1
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 8
 353              		@ frame_needed = 1, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355 0000 80B4     		push	{r7}
 356              		.cfi_def_cfa_offset 4
 357              		.cfi_offset 7, -4
 358 0002 83B0     		sub	sp, sp, #12
 359              		.cfi_def_cfa_offset 16
 360 0004 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 362 0006 7860     		str	r0, [r7, #4]
 363 0008 3960     		str	r1, [r7]
 101:Gcc/Src/syscalls.c ****   (void)file;
 102:Gcc/Src/syscalls.c ****   st->st_mode = S_IFCHR;
 364              		.loc 1 102 15
 365 000a 3B68     		ldr	r3, [r7]
 366 000c 4FF40052 		mov	r2, #8192
 367 0010 5A60     		str	r2, [r3, #4]
 103:Gcc/Src/syscalls.c ****   return 0;
 368              		.loc 1 103 10
ARM GAS  /tmp/ccjIZC0A.s 			page 9


 369 0012 0023     		movs	r3, #0
 104:Gcc/Src/syscalls.c **** }
 370              		.loc 1 104 1
 371 0014 1846     		mov	r0, r3
 372 0016 0C37     		adds	r7, r7, #12
 373              		.cfi_def_cfa_offset 4
 374 0018 BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 001a 5DF8047B 		ldr	r7, [sp], #4
 378              		.cfi_restore 7
 379              		.cfi_def_cfa_offset 0
 380 001e 7047     		bx	lr
 381              		.cfi_endproc
 382              	.LFE32:
 384              		.section	.text._isatty,"ax",%progbits
 385              		.align	1
 386              		.global	_isatty
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 391              	_isatty:
 392              	.LFB33:
 105:Gcc/Src/syscalls.c **** 
 106:Gcc/Src/syscalls.c **** int _isatty(int file)
 107:Gcc/Src/syscalls.c **** {
 393              		.loc 1 107 1
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 8
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398 0000 80B4     		push	{r7}
 399              		.cfi_def_cfa_offset 4
 400              		.cfi_offset 7, -4
 401 0002 83B0     		sub	sp, sp, #12
 402              		.cfi_def_cfa_offset 16
 403 0004 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
 405 0006 7860     		str	r0, [r7, #4]
 108:Gcc/Src/syscalls.c ****   (void)file;
 109:Gcc/Src/syscalls.c ****   return 1;
 406              		.loc 1 109 10
 407 0008 0123     		movs	r3, #1
 110:Gcc/Src/syscalls.c **** }
 408              		.loc 1 110 1
 409 000a 1846     		mov	r0, r3
 410 000c 0C37     		adds	r7, r7, #12
 411              		.cfi_def_cfa_offset 4
 412 000e BD46     		mov	sp, r7
 413              		.cfi_def_cfa_register 13
 414              		@ sp needed
 415 0010 5DF8047B 		ldr	r7, [sp], #4
 416              		.cfi_restore 7
 417              		.cfi_def_cfa_offset 0
 418 0014 7047     		bx	lr
 419              		.cfi_endproc
 420              	.LFE33:
ARM GAS  /tmp/ccjIZC0A.s 			page 10


 422              		.section	.text._lseek,"ax",%progbits
 423              		.align	1
 424              		.global	_lseek
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 429              	_lseek:
 430              	.LFB34:
 111:Gcc/Src/syscalls.c **** 
 112:Gcc/Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 113:Gcc/Src/syscalls.c **** {
 431              		.loc 1 113 1
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 16
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436 0000 80B4     		push	{r7}
 437              		.cfi_def_cfa_offset 4
 438              		.cfi_offset 7, -4
 439 0002 85B0     		sub	sp, sp, #20
 440              		.cfi_def_cfa_offset 24
 441 0004 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 443 0006 F860     		str	r0, [r7, #12]
 444 0008 B960     		str	r1, [r7, #8]
 445 000a 7A60     		str	r2, [r7, #4]
 114:Gcc/Src/syscalls.c ****   (void)file;
 115:Gcc/Src/syscalls.c ****   (void)ptr;
 116:Gcc/Src/syscalls.c ****   (void)dir;
 117:Gcc/Src/syscalls.c ****   return 0;
 446              		.loc 1 117 10
 447 000c 0023     		movs	r3, #0
 118:Gcc/Src/syscalls.c **** }
 448              		.loc 1 118 1
 449 000e 1846     		mov	r0, r3
 450 0010 1437     		adds	r7, r7, #20
 451              		.cfi_def_cfa_offset 4
 452 0012 BD46     		mov	sp, r7
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 0014 5DF8047B 		ldr	r7, [sp], #4
 456              		.cfi_restore 7
 457              		.cfi_def_cfa_offset 0
 458 0018 7047     		bx	lr
 459              		.cfi_endproc
 460              	.LFE34:
 462              		.section	.text._open,"ax",%progbits
 463              		.align	1
 464              		.global	_open
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 469              	_open:
 470              	.LFB35:
 119:Gcc/Src/syscalls.c **** 
 120:Gcc/Src/syscalls.c **** int _open(char *path, int flags, ...)
 121:Gcc/Src/syscalls.c **** {
ARM GAS  /tmp/ccjIZC0A.s 			page 11


 471              		.loc 1 121 1
 472              		.cfi_startproc
 473              		@ args = 4, pretend = 12, frame = 8
 474              		@ frame_needed = 1, uses_anonymous_args = 1
 475              		@ link register save eliminated.
 476 0000 0EB4     		push	{r1, r2, r3}
 477              		.cfi_def_cfa_offset 12
 478              		.cfi_offset 1, -12
 479              		.cfi_offset 2, -8
 480              		.cfi_offset 3, -4
 481 0002 80B4     		push	{r7}
 482              		.cfi_def_cfa_offset 16
 483              		.cfi_offset 7, -16
 484 0004 82B0     		sub	sp, sp, #8
 485              		.cfi_def_cfa_offset 24
 486 0006 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
 488 0008 7860     		str	r0, [r7, #4]
 122:Gcc/Src/syscalls.c ****   (void)path;
 123:Gcc/Src/syscalls.c ****   (void)flags;
 124:Gcc/Src/syscalls.c ****   /* Pretend like we always fail */
 125:Gcc/Src/syscalls.c ****   return -1;
 489              		.loc 1 125 10
 490 000a 4FF0FF33 		mov	r3, #-1
 126:Gcc/Src/syscalls.c **** }
 491              		.loc 1 126 1
 492 000e 1846     		mov	r0, r3
 493 0010 0837     		adds	r7, r7, #8
 494              		.cfi_def_cfa_offset 16
 495 0012 BD46     		mov	sp, r7
 496              		.cfi_def_cfa_register 13
 497              		@ sp needed
 498 0014 5DF8047B 		ldr	r7, [sp], #4
 499              		.cfi_restore 7
 500              		.cfi_def_cfa_offset 12
 501 0018 03B0     		add	sp, sp, #12
 502              		.cfi_restore 3
 503              		.cfi_restore 2
 504              		.cfi_restore 1
 505              		.cfi_def_cfa_offset 0
 506 001a 7047     		bx	lr
 507              		.cfi_endproc
 508              	.LFE35:
 510              		.section	.text._wait,"ax",%progbits
 511              		.align	1
 512              		.global	_wait
 513              		.syntax unified
 514              		.thumb
 515              		.thumb_func
 517              	_wait:
 518              	.LFB36:
 127:Gcc/Src/syscalls.c **** 
 128:Gcc/Src/syscalls.c **** int _wait(int *status)
 129:Gcc/Src/syscalls.c **** {
 519              		.loc 1 129 1
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccjIZC0A.s 			page 12


 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 82B0     		sub	sp, sp, #8
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 130:Gcc/Src/syscalls.c ****   (void)status;
 131:Gcc/Src/syscalls.c ****   errno = ECHILD;
 532              		.loc 1 131 3
 533 0008 FFF7FEFF 		bl	__errno
 534 000c 0346     		mov	r3, r0
 535              		.loc 1 131 9 discriminator 1
 536 000e 0A22     		movs	r2, #10
 537 0010 1A60     		str	r2, [r3]
 132:Gcc/Src/syscalls.c ****   return -1;
 538              		.loc 1 132 10
 539 0012 4FF0FF33 		mov	r3, #-1
 133:Gcc/Src/syscalls.c **** }
 540              		.loc 1 133 1
 541 0016 1846     		mov	r0, r3
 542 0018 0837     		adds	r7, r7, #8
 543              		.cfi_def_cfa_offset 8
 544 001a BD46     		mov	sp, r7
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 001c 80BD     		pop	{r7, pc}
 548              		.cfi_endproc
 549              	.LFE36:
 551              		.section	.text._unlink,"ax",%progbits
 552              		.align	1
 553              		.global	_unlink
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 558              	_unlink:
 559              	.LFB37:
 134:Gcc/Src/syscalls.c **** 
 135:Gcc/Src/syscalls.c **** int _unlink(char *name)
 136:Gcc/Src/syscalls.c **** {
 560              		.loc 1 136 1
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 8
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564 0000 80B5     		push	{r7, lr}
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 7, -8
 567              		.cfi_offset 14, -4
 568 0002 82B0     		sub	sp, sp, #8
 569              		.cfi_def_cfa_offset 16
 570 0004 00AF     		add	r7, sp, #0
 571              		.cfi_def_cfa_register 7
 572 0006 7860     		str	r0, [r7, #4]
 137:Gcc/Src/syscalls.c ****   (void)name;
ARM GAS  /tmp/ccjIZC0A.s 			page 13


 138:Gcc/Src/syscalls.c ****   errno = ENOENT;
 573              		.loc 1 138 3
 574 0008 FFF7FEFF 		bl	__errno
 575 000c 0346     		mov	r3, r0
 576              		.loc 1 138 9 discriminator 1
 577 000e 0222     		movs	r2, #2
 578 0010 1A60     		str	r2, [r3]
 139:Gcc/Src/syscalls.c ****   return -1;
 579              		.loc 1 139 10
 580 0012 4FF0FF33 		mov	r3, #-1
 140:Gcc/Src/syscalls.c **** }
 581              		.loc 1 140 1
 582 0016 1846     		mov	r0, r3
 583 0018 0837     		adds	r7, r7, #8
 584              		.cfi_def_cfa_offset 8
 585 001a BD46     		mov	sp, r7
 586              		.cfi_def_cfa_register 13
 587              		@ sp needed
 588 001c 80BD     		pop	{r7, pc}
 589              		.cfi_endproc
 590              	.LFE37:
 592              		.section	.text._times,"ax",%progbits
 593              		.align	1
 594              		.global	_times
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 599              	_times:
 600              	.LFB38:
 141:Gcc/Src/syscalls.c **** 
 142:Gcc/Src/syscalls.c **** int _times(struct tms *buf)
 143:Gcc/Src/syscalls.c **** {
 601              		.loc 1 143 1
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 8
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606 0000 80B4     		push	{r7}
 607              		.cfi_def_cfa_offset 4
 608              		.cfi_offset 7, -4
 609 0002 83B0     		sub	sp, sp, #12
 610              		.cfi_def_cfa_offset 16
 611 0004 00AF     		add	r7, sp, #0
 612              		.cfi_def_cfa_register 7
 613 0006 7860     		str	r0, [r7, #4]
 144:Gcc/Src/syscalls.c ****   (void)buf;
 145:Gcc/Src/syscalls.c ****   return -1;
 614              		.loc 1 145 10
 615 0008 4FF0FF33 		mov	r3, #-1
 146:Gcc/Src/syscalls.c **** }
 616              		.loc 1 146 1
 617 000c 1846     		mov	r0, r3
 618 000e 0C37     		adds	r7, r7, #12
 619              		.cfi_def_cfa_offset 4
 620 0010 BD46     		mov	sp, r7
 621              		.cfi_def_cfa_register 13
 622              		@ sp needed
ARM GAS  /tmp/ccjIZC0A.s 			page 14


 623 0012 5DF8047B 		ldr	r7, [sp], #4
 624              		.cfi_restore 7
 625              		.cfi_def_cfa_offset 0
 626 0016 7047     		bx	lr
 627              		.cfi_endproc
 628              	.LFE38:
 630              		.section	.text._stat,"ax",%progbits
 631              		.align	1
 632              		.global	_stat
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 637              	_stat:
 638              	.LFB39:
 147:Gcc/Src/syscalls.c **** 
 148:Gcc/Src/syscalls.c **** int _stat(char *file, struct stat *st)
 149:Gcc/Src/syscalls.c **** {
 639              		.loc 1 149 1
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 8
 642              		@ frame_needed = 1, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 644 0000 80B4     		push	{r7}
 645              		.cfi_def_cfa_offset 4
 646              		.cfi_offset 7, -4
 647 0002 83B0     		sub	sp, sp, #12
 648              		.cfi_def_cfa_offset 16
 649 0004 00AF     		add	r7, sp, #0
 650              		.cfi_def_cfa_register 7
 651 0006 7860     		str	r0, [r7, #4]
 652 0008 3960     		str	r1, [r7]
 150:Gcc/Src/syscalls.c ****   (void)file;
 151:Gcc/Src/syscalls.c ****   st->st_mode = S_IFCHR;
 653              		.loc 1 151 15
 654 000a 3B68     		ldr	r3, [r7]
 655 000c 4FF40052 		mov	r2, #8192
 656 0010 5A60     		str	r2, [r3, #4]
 152:Gcc/Src/syscalls.c ****   return 0;
 657              		.loc 1 152 10
 658 0012 0023     		movs	r3, #0
 153:Gcc/Src/syscalls.c **** }
 659              		.loc 1 153 1
 660 0014 1846     		mov	r0, r3
 661 0016 0C37     		adds	r7, r7, #12
 662              		.cfi_def_cfa_offset 4
 663 0018 BD46     		mov	sp, r7
 664              		.cfi_def_cfa_register 13
 665              		@ sp needed
 666 001a 5DF8047B 		ldr	r7, [sp], #4
 667              		.cfi_restore 7
 668              		.cfi_def_cfa_offset 0
 669 001e 7047     		bx	lr
 670              		.cfi_endproc
 671              	.LFE39:
 673              		.section	.text._link,"ax",%progbits
 674              		.align	1
 675              		.global	_link
ARM GAS  /tmp/ccjIZC0A.s 			page 15


 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 680              	_link:
 681              	.LFB40:
 154:Gcc/Src/syscalls.c **** 
 155:Gcc/Src/syscalls.c **** int _link(char *old, char *new)
 156:Gcc/Src/syscalls.c **** {
 682              		.loc 1 156 1
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 8
 685              		@ frame_needed = 1, uses_anonymous_args = 0
 686 0000 80B5     		push	{r7, lr}
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 7, -8
 689              		.cfi_offset 14, -4
 690 0002 82B0     		sub	sp, sp, #8
 691              		.cfi_def_cfa_offset 16
 692 0004 00AF     		add	r7, sp, #0
 693              		.cfi_def_cfa_register 7
 694 0006 7860     		str	r0, [r7, #4]
 695 0008 3960     		str	r1, [r7]
 157:Gcc/Src/syscalls.c ****   (void)old;
 158:Gcc/Src/syscalls.c ****   (void)new;
 159:Gcc/Src/syscalls.c ****   errno = EMLINK;
 696              		.loc 1 159 3
 697 000a FFF7FEFF 		bl	__errno
 698 000e 0346     		mov	r3, r0
 699              		.loc 1 159 9 discriminator 1
 700 0010 1F22     		movs	r2, #31
 701 0012 1A60     		str	r2, [r3]
 160:Gcc/Src/syscalls.c ****   return -1;
 702              		.loc 1 160 10
 703 0014 4FF0FF33 		mov	r3, #-1
 161:Gcc/Src/syscalls.c **** }
 704              		.loc 1 161 1
 705 0018 1846     		mov	r0, r3
 706 001a 0837     		adds	r7, r7, #8
 707              		.cfi_def_cfa_offset 8
 708 001c BD46     		mov	sp, r7
 709              		.cfi_def_cfa_register 13
 710              		@ sp needed
 711 001e 80BD     		pop	{r7, pc}
 712              		.cfi_endproc
 713              	.LFE40:
 715              		.section	.text._fork,"ax",%progbits
 716              		.align	1
 717              		.global	_fork
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 722              	_fork:
 723              	.LFB41:
 162:Gcc/Src/syscalls.c **** 
 163:Gcc/Src/syscalls.c **** int _fork(void)
 164:Gcc/Src/syscalls.c **** {
 724              		.loc 1 164 1
ARM GAS  /tmp/ccjIZC0A.s 			page 16


 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728 0000 80B5     		push	{r7, lr}
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 7, -8
 731              		.cfi_offset 14, -4
 732 0002 00AF     		add	r7, sp, #0
 733              		.cfi_def_cfa_register 7
 165:Gcc/Src/syscalls.c ****   errno = EAGAIN;
 734              		.loc 1 165 3
 735 0004 FFF7FEFF 		bl	__errno
 736 0008 0346     		mov	r3, r0
 737              		.loc 1 165 9 discriminator 1
 738 000a 0B22     		movs	r2, #11
 739 000c 1A60     		str	r2, [r3]
 166:Gcc/Src/syscalls.c ****   return -1;
 740              		.loc 1 166 10
 741 000e 4FF0FF33 		mov	r3, #-1
 167:Gcc/Src/syscalls.c **** }
 742              		.loc 1 167 1
 743 0012 1846     		mov	r0, r3
 744 0014 80BD     		pop	{r7, pc}
 745              		.cfi_endproc
 746              	.LFE41:
 748              		.section	.text._execve,"ax",%progbits
 749              		.align	1
 750              		.global	_execve
 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 755              	_execve:
 756              	.LFB42:
 168:Gcc/Src/syscalls.c **** 
 169:Gcc/Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 170:Gcc/Src/syscalls.c **** {
 757              		.loc 1 170 1
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 16
 760              		@ frame_needed = 1, uses_anonymous_args = 0
 761 0000 80B5     		push	{r7, lr}
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 7, -8
 764              		.cfi_offset 14, -4
 765 0002 84B0     		sub	sp, sp, #16
 766              		.cfi_def_cfa_offset 24
 767 0004 00AF     		add	r7, sp, #0
 768              		.cfi_def_cfa_register 7
 769 0006 F860     		str	r0, [r7, #12]
 770 0008 B960     		str	r1, [r7, #8]
 771 000a 7A60     		str	r2, [r7, #4]
 171:Gcc/Src/syscalls.c ****   (void)name;
 172:Gcc/Src/syscalls.c ****   (void)argv;
 173:Gcc/Src/syscalls.c ****   (void)env;
 174:Gcc/Src/syscalls.c ****   errno = ENOMEM;
 772              		.loc 1 174 3
 773 000c FFF7FEFF 		bl	__errno
ARM GAS  /tmp/ccjIZC0A.s 			page 17


 774 0010 0346     		mov	r3, r0
 775              		.loc 1 174 9 discriminator 1
 776 0012 0C22     		movs	r2, #12
 777 0014 1A60     		str	r2, [r3]
 175:Gcc/Src/syscalls.c ****   return -1;
 778              		.loc 1 175 10
 779 0016 4FF0FF33 		mov	r3, #-1
 176:Gcc/Src/syscalls.c **** }
 780              		.loc 1 176 1
 781 001a 1846     		mov	r0, r3
 782 001c 1037     		adds	r7, r7, #16
 783              		.cfi_def_cfa_offset 8
 784 001e BD46     		mov	sp, r7
 785              		.cfi_def_cfa_register 13
 786              		@ sp needed
 787 0020 80BD     		pop	{r7, pc}
 788              		.cfi_endproc
 789              	.LFE42:
 791              		.weak	__io_putchar
 792              		.weak	__io_getchar
 793              		.text
 794              	.Letext0:
 795              		.file 2 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 796              		.file 3 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 797              		.file 4 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 798              		.file 5 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 799              		.file 6 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 800              		.file 7 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 801              		.file 8 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
 802              		.file 9 "/home/tanjiajun2002/renesas/rzv/e2studio_v2025-01_fsp_v3.1.0/toolchains/gcc_arm/arm-gnu-t
ARM GAS  /tmp/ccjIZC0A.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
     /tmp/ccjIZC0A.s:30     .bss.__env:00000000 __env
     /tmp/ccjIZC0A.s:27     .bss.__env:00000000 $d
     /tmp/ccjIZC0A.s:37     .data.environ:00000000 environ
     /tmp/ccjIZC0A.s:34     .data.environ:00000000 $d
     /tmp/ccjIZC0A.s:40     .text.initialise_monitor_handles:00000000 $t
     /tmp/ccjIZC0A.s:46     .text.initialise_monitor_handles:00000000 initialise_monitor_handles
     /tmp/ccjIZC0A.s:71     .text._getpid:00000000 $t
     /tmp/ccjIZC0A.s:77     .text._getpid:00000000 _getpid
     /tmp/ccjIZC0A.s:104    .text._kill:00000000 $t
     /tmp/ccjIZC0A.s:110    .text._kill:00000000 _kill
     /tmp/ccjIZC0A.s:146    .text._exit:00000000 $t
     /tmp/ccjIZC0A.s:152    .text._exit:00000000 _exit
     /tmp/ccjIZC0A.s:179    .text._read:00000000 $t
     /tmp/ccjIZC0A.s:185    .text._read:00000000 _read
     /tmp/ccjIZC0A.s:242    .text._write:00000000 $t
     /tmp/ccjIZC0A.s:248    .text._write:00000000 _write
     /tmp/ccjIZC0A.s:304    .text._close:00000000 $t
     /tmp/ccjIZC0A.s:310    .text._close:00000000 _close
     /tmp/ccjIZC0A.s:342    .text._fstat:00000000 $t
     /tmp/ccjIZC0A.s:348    .text._fstat:00000000 _fstat
     /tmp/ccjIZC0A.s:385    .text._isatty:00000000 $t
     /tmp/ccjIZC0A.s:391    .text._isatty:00000000 _isatty
     /tmp/ccjIZC0A.s:423    .text._lseek:00000000 $t
     /tmp/ccjIZC0A.s:429    .text._lseek:00000000 _lseek
     /tmp/ccjIZC0A.s:463    .text._open:00000000 $t
     /tmp/ccjIZC0A.s:469    .text._open:00000000 _open
     /tmp/ccjIZC0A.s:511    .text._wait:00000000 $t
     /tmp/ccjIZC0A.s:517    .text._wait:00000000 _wait
     /tmp/ccjIZC0A.s:552    .text._unlink:00000000 $t
     /tmp/ccjIZC0A.s:558    .text._unlink:00000000 _unlink
     /tmp/ccjIZC0A.s:593    .text._times:00000000 $t
     /tmp/ccjIZC0A.s:599    .text._times:00000000 _times
     /tmp/ccjIZC0A.s:631    .text._stat:00000000 $t
     /tmp/ccjIZC0A.s:637    .text._stat:00000000 _stat
     /tmp/ccjIZC0A.s:674    .text._link:00000000 $t
     /tmp/ccjIZC0A.s:680    .text._link:00000000 _link
     /tmp/ccjIZC0A.s:716    .text._fork:00000000 $t
     /tmp/ccjIZC0A.s:722    .text._fork:00000000 _fork
     /tmp/ccjIZC0A.s:749    .text._execve:00000000 $t
     /tmp/ccjIZC0A.s:755    .text._execve:00000000 _execve
                           .group:00000000 wm4.0.2a10773746a5c5ebb5552f50e466f80b
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.newlib.h.27.4b972ceed5d01f491020c20f1e546cab
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.features.h.22.9dfb1293666eb4caf24cccb81c86a551
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
ARM GAS  /tmp/ccjIZC0A.s 			page 19


                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.time.h.14.849270cc7997ccc4e05edd146e568a9f
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.time.h.2.4581ce0ffb6627cfc02162c94bf846c9
                           .group:00000000 wm4.time.h.25.0e6a0fdbc9955f5707ed54246ed2e089
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.8c04bee5682eafa577cf6325dd7ee64c
                           .group:00000000 wm4.types.h.51.e2a6e4379b4797ffcc4841f8498fd61b
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.time.h.142.403dcded079b6de6a2d2f21a34c2ae96
                           .group:00000000 wm4.stat.h.54.5a9b823658423102e7a8de4ed089eedc
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.ae5ea2b0ff9ea6e39e585807e35200d3
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.47.1f5845210bb9053bbca9ed76fc4018da
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.signal.h.31.1e41f887ed1384065c2378e275de5bce
                           .group:00000000 wm4.signal.h.18.14c8d0c03fc1e06775633fad7399cfc7
                           .group:00000000 wm4.time.h.40.07bdef2e51e429b46276cd6f2246b78b

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
